<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Surface Curvature</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><forename type="middle">R</forename><surname>Seidenberg</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Mechanical Engineering Department</orgName>
								<orgName type="institution">University of New Hampshire</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">B</forename><surname>Jerard</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Mechanical Engineering Department</orgName>
								<orgName type="institution">University of New Hampshire</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Durham</forename><surname>Nh</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Mechanical Engineering Department</orgName>
								<orgName type="institution">University of New Hampshire</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Surface Curvature</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>I n the automotive industty it is highly important that the exterior body panels be esthetically pleasing. One aspect of creating esthetically pleasing surfaces is to require that they be fair. I n this paper we present a system which has proven useful for diagnosis of surface fairness problems. We describe how to choose a set of colors with perceptually uniform spacing, and also show the usefulness of a logarithmic scale for relating curvature to colors.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Surface Fairness</head><p>Sculptured surfaces are usually mathematically defined by surface patches such as the well known Bezier, B-spline and Coons parametric forms <ref type="bibr">[MS]</ref>. While the beauty of a surface exists primarily in the eye of the designer, there are also quantitative measures that can be applied to a surface to assess its quality. Even the best renderings of shaded surfaces using realistic lighting models are inadequate for the task of diagnosing surface quality problems. Since surface curvature is related to the second derivative of position, very small position deviations can result in large curvature deviations. Positional changes of points on the surface as small as 0. lmm are often the difference between acceptable and unacceptable surface quality.</p><p>In general, the surface should exhibit continuity of position, tangent vector and curvature (GO, <ref type="bibr">GI and ~2</ref> continuity respectively). It should also be free of extraneous bumps or wiggles; a quality directly related to unwanted inflection points. A surface which is free of these anomalies is said to be fair. The requirements for &amp; i m s of a plane curve are given by Su [SL89] as: 1) the change in curvature and in the tangent must be 2) there must be no unwanted inflection points and 3) the curvature must vary in an even manner,</p><formula xml:id="formula_0">continuous ( G' continuity),</formula><p>The first requirement is a local property of the surface since continuity can be independently assessed at each surface point. The latter two properties are global in the sense that they can only be assessed by examining the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analysis Using Color</head><p>John Magewick Body and Chassis Engineering Ford Motor Company Dearbom,MI 48121 change in the surface characteristics over some portion of the surface. Inflection points exist on a curve where the curve normal vector flips from one side of the curve to the other, as illustrated in <ref type="figure">Figure la</ref>. A curve inflection point can also be defined as the point P on a curve where the curve crosses its tangent line. The third requirement can also be stated as "the curvature distribution must vary monotonically" <ref type="bibr">[SS89]</ref>. As an example, three plane curves are shown in <ref type="figure" target="#fig_0">Figure 1</ref> using the length and direction of the normal vector to indicate curvature. Only curve c has a curvature that varies monotonically. For a surface to be fair, we desire a similar set of 1) the change in surface curvature and in the tangent 2) there must be no unwanted surface inflections and 3) the surface curvature must vary in an even manner. conditions to be met: plane must be continuous ( G' continuity), By intersecting an arbitrary plane with the surface, we obtain a plane curve. If the surface curvature of any such curve is not continuous or does not vary in an even manner, the surface fails conditions 1 and 3. However, testing all possible plane curves formed by arbitrary plane-surface intersections is impractical and we must rely on the information provided by the different types of surface curvature to assess surface fairness. To ensure that the surface is fair and satisfies the designers' intent, we also need to be able to detect surface inflections. A surJire infection occurs at a point where the surface crosses its tangent plane <ref type="bibr">[H90]</ref>. Detection of inflection points is certainly important [SL89,H90], but the presence of an inflection point is not necessarily undesirable. A torus is a solid whose surface is fair by every aspect of our definition, but which has innumerable inflection points.</p><p>Since the curvature of the surface can be visualized as the fourth dimension of the three dimensional surface, the problem then becomes how to display the surface and its curvature <ref type="bibr">[BFH86]</ref>. Our goal is to provide a diagnostic tool which can he used by the designer to assess surface fairness quickly and accurately. The chief difficulties lie in the subtle nature of the curvature problems, the global nature of the required assessment and the difficulty in discriminating between desirable and undesirable surface discontinuities. An automotive exterior contains many surface areas where G 2 discontinuities exist, but which clearly reflect the esthetic intent of the designer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">lypes of Curvature</head><p>There are several different measures of a surface curvature [M85] and while each can be useful, no single type of curvature detects all possible surface anomalies. Thus, it is often necessary to calculate several kinds of surface curvature to obtain an accurate impression of the s " s behavior. At any given point on a parametric surface, i.e. a surface of the form r=r(u,w), it is possible to calculate a unit normal vector:</p><formula xml:id="formula_1">n(u,w) = (rU x rw) / I ru x rwl (1) provided that 1 ru x rwI is not 0</formula><p>where ru is the partial derivative of r with respect to U and rw is the partial derivative of r with respect to w. Now, if a plane containing the normal is rotated about the normal, the intersections of this plane with the surface result in an infinite number of section curves each of which could have a different value for the curvature at the point. There are two mutually perpendicular locations of the nonnal plane where the curvature is a maximum and a minimum. These curvature values are defined to be the principal curvatures, kmax and kmin (frequently defined using the first and second fundamental forms p901).</p><p>From the principal curvatures we can calculate the Gaussian curvature and the mean or avaage curvature. The Gaussian curvature is and is the most often cited form of curvature. However, we have not found it to be one of the most useful. Notice that if either one of the principal curvatures is zero, the Gaussian curvature is also zero, even though the other principal curvature may be fluctuating wildly.</p><p>The average curvature is given by</p><p>(3)</p><p>The problem with displaying only the average curvature is that minimal surfaces always have H S . Another measure of curvature is the absolute curvature:</p><p>Some have maintained that this is the most useful measure of curvature <ref type="bibr">[F88,F90]</ref>. However, consider what happens if one of these two absolute values is several orders of magnitude larger than the other. Curvature problems in the lower magnitude direction are masked by the other direction.</p><p>In addition to the principal curvatures, we can define another pair of curvatures -the curvatures along lines of constant parameter. We define the curvature in the direction of constant U to be the primary curvature and the curvature in the direction of constant w to be the secondary curvature. In summary, Each of the seven measures of curvature can be useful for detecting different surface imperfections and assuring that the surface is fair. Our experience has indicated that the primary and secondary curvatures are the most useful for analyzing Coons type surfaces since they often detect problems in the defining boundary lines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Methods for Displaying Curvature</head><p>Not surprisingly, numerous methods for displaying surface curvature have been explored. Three of the most commonly used are normal vectors, contour lines and color [BFH86, D81, H90, F881. Normal vectors can indicate the surface curvature by a length proportional to the radius of curvature as illustrated in <ref type="figure" target="#fig_0">Figure 1</ref>. This yields the characteristic hedgehog-like surface. Unfortunately, it can be difficult to judge the relative lengths of normal vectors, and the surface can rapidly appear overcrowded and confusing if the curvature is d e s d for a high density of points.</p><p>A second method is contour lines. Here a reference plane and a series of equally spaced planes parallel to it are chosen. The intersection of these planes with the surface results in planar curves on the surface. These curves can aid in determining the surface features. For instance, saddle points appear as passes while local maxima and minima are encircled. However, one can not immediately distinguish between maxima and minima, and further, the locations of these extrema are dependent upon the initial choice of a reference plane. Also notice that this method requires calcuiating numerous surfaceplane intersections, which is computationally costly. The third method, using different colors to clisplay the varying surface curvature, is the method we explore more fully in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Displaying Curvature with Color</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Criteria for a Satisfactory Color Scale</head><p>The color scale needs to be sensitive enough to detect any areas of unacceptable curvature, yet not so sensitive as to flag any minute curvature fluctuations as problem areas.</p><p>Our initial efforts usecl a scale (similar to those of [F88]) in which the minimum curvature value corresponded to one end of the color spectrum and the maximum curvature value with the other end of the spectrum, with a linear distribution in between. There are several problems with this approach:</p><p>1. For a large curvature range the scale is not sensitive enough to detect problems over the entire spectrum of curvature values, 2. For a small curvature range the scale is overly sensitive and very small curvature variations are 3. Since the range of the colordcurvature relationship changes with every surface, it is impossible for the users to learn from experience. A good diagnosis tool must provide enough consistency so that the user can associate patterns with prior problems. Through further experimentation with a variety of exaggerattd, curvature color scales, we have defined a satisfactory curvature scale as one that satisfies the following criteria: 1) Equal changes in curvature are indicated by equal</p><p>2) There are enough colors in the scale to detect even</p><p>3) The middle and the two end colors a distinct colors.</p><p>4) The color scale always represents the same range of</p><p>The first criteria implies that we need a set of colors from a perceptually uniform color space. This is discussed in more detail in the next section. The second criteria must be formulated based on experience with how large a change in curvature results in an undesirable surface. The thirrl criteria says that the middle and the end colors need to be distinct and easily recognizable because areas that are flat or highly concave or convex need to be easy to identify. The fixed scale implied by the fourth criteria allows the frequent user to associate certain colors with certain curvatures. changes in color perception. subtle curvature problems. curvature values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Determining the Color Scale</head><p>We explored several alternative color scales. Our initial attempts were based on linear interpolation in the RGB (Red, Green, Blue) and HLS (Hue, Lightness, Saturation) color models <ref type="bibr">[FV82]</ref>. However, these attempts did not result in colors which appear equally spaced, i.e. one pair of adjacent colors may seem nearly identical, while another pair may seem significantly different. This can be misleading when trying to identify surface curvature problems.</p><p>A measure used by color scientists to indicate perceptual differences between colors is the Just Noticeable Difference (JND)[LH92, WS821. One JND unit is the minimum amount that a color would have to change so that a person with n o d vision is able to perceive a difference. Linear movements in either the RGB or HLS spaces do not result in linear changes in the number of JND's. We desire to find a set of colors which have equal JNDs between them. These equal changes in color can then be comlated with equal changes in curvature.</p><p>The problem of perceptually uniform color scales has been a focus of colorimetry (the science of color) since its origin. Although much work has been done on the subject [M74, MG87], no ideal system exists, and all uniform color scales are experimentally derived from the subjective appraisal of color variation by experimental subjects, and depend upon the conditions under which the colors are viewed. The difficulty is physiological, for the eye does not see all hues in the same way. In general, the eye is less perceptive to changes in blue light [FV82], thus the percentage of blue in a color can change more without the change being noticeable. Also, for a set of hues at the same lightness, the eye sees yellow as having a higher degree of lightness than the other hues <ref type="bibr">[M87]</ref>.</p><p>The two most frequently used uniform color spaces are based on the primary colors X,Y,Z defined by the Commission Internationale de L'Eclairage (CIE) in 193 1. These CIE primaries are not actually visible, but in combination form all visible colors. The initial CIE color space was not a uniform color space, meaning equal distances in the color space did not represent equal perceptual differences in colors. Since then, two uniform color spaces (still based on the X,Y, and Z tristimulus values) have been developed -the CIE L*a*b* and the CIE L*u*v space. Both of these systems are nonlinearly related to the X,Y, and Z tristimulus values and are nearly perceptually uniform over local neighborhoods. <ref type="figure">Figure 2</ref> shows the uniform CIE L*a*b* color space <ref type="bibr">[S87]</ref>.</p><p>The problem now becomes, how to obtain from this nearly uniform color space a one dimensional color scale in RGB space which satisfies our criteria. Only a limited range of CIE L*a*b* space can actually be displayed on a color CRT (cathode ray tube) monitor, thus we first converted red (rgb =l,O,O), green (rgW,l,O), and blue (rgb=O,O,l) to CIE L*a*b* space to determine the monitor's range is in L*a*b* space. The transformations between the color spaces can be accomplished using algorithms similar to those given by Hall [H89] and by using the standard primary values given in table 1. The flowchart shown in <ref type="figure">Figure 3</ref> illustrates the steps taken to obtain a perceptually uniform color scale. The RGB and HLS values for a set of 35 colors derived using this method are presented in Appendix A. The scale goes from -rmin to -rmx and +r-to +rmin, so that the bottom half of the scale represents concave, the middle color flat, and the top half convex. Thus the total number of colors needed is 2n + 1, with one central color for "flat". We constrain all curvature values to be within this range. From equation 5 we easily find:</p><formula xml:id="formula_3">Total number of colors = 1 + 2 ceil( iog(rmax/ r-) / log( 1 + p)) (6)</formula><p>The actual percent change curvature between colors can then be determined:</p><formula xml:id="formula_4">p = (rmtuc/rmin)'/n -1<label>(7)</label></formula><p>5. Implementation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Color Curvature Relationship</head><p>For our implementation, we decided that having each color change represent approximately a 75% change in curvature would be acceptable, and that the maximum and minimum radii of curvature should be 100,OOOmm and IO", respectively. We choose to display the results as radii of curvature rather than the more traditional measure of curvature (llr), since users found it easier to visualize. The same approach could be taken for a curvature range, in this case from 0.1 to O.oooO1 units.</p><p>From Equation 6 we calculate that a scale of 35 colors is needed. The actual percent change in curvature is then found to be 71.9% from equation 7. This may seem like a very large percent change in curvature as we jump from one color to the next, but our experience indicates that most objectionable surface anomalies occur when the curvature jumps several hundred percent. It should also be noted that these numbers are application dependent. Automotive surfaces often have very large radii of curvature, hence the rather large upper limit of 1 oo,ooomm.</p><p>Since we also desire to maintain continuity with our previous work, we had some initial constraints on which 35 colors to use. We wanted green to indicate flat, red for the extreme concave curvature of -10" and blue for the extreme convex radius of +lo".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Using Graphics Hardware for Display</head><p>The algorithm was implemented on a Silicon Graphics workstation. Surfaces are tessellated into a sufficiently fine grid of polygons to approximate the surface closely and therefore take advantage of the polygon display engine of the workstation. It is also important to make sure that the gradient of the curvature across any polygon be rather small since the polygon display engine does a linear interpolation between vertex values. This can yield strange results; for example, a blue to red interpolation shows purple in the middle of the polygon rather than the green which is indicated in the middle of our color scale.</p><p>Another potential problem occurs at discontinuities. Curvature discontinuities are a common occurrence. In these circumstances curvatwe values are different on the opposite sides of the vertex and more than one curvature value needs to be stored for each vertex. The Coons patches used in the PDGS system at Ford Motor Company consist of Mended boundary curves composed of Cincy parabolas. Since a second degree curve has a constant second derivative, there is a curvature discontinuity at the junction of each parabola, hence the patchwork quilt appearance in <ref type="figure" target="#fig_5">Figure 6</ref> and 8. Even in NURBS surfaces, repeated knot values can impose a discontinuity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Examples</head><p>A color analysis of the maximum principal curvature of a NURB surface is shown in <ref type="figure" target="#fig_3">Figure 4</ref>. Colors are linearly interpolated from red (minimum value) to blue (maximum value). <ref type="figure" target="#fig_4">Figure 5</ref> shows the primary direction curvature of an analytic surface given by z = sin(xy) (approximated by a NURB surface). A logarithmic scale was u d in this case. <ref type="figure" target="#fig_3">Figures 4 and 5</ref> shows surfaces that are "fair", i.e. the colors change smoothly over the spectrum. The scale used in <ref type="figure" target="#fig_4">Figure 5</ref> is also used in <ref type="figure" target="#fig_5">Figures 6 and 8</ref>. In this scale the minimum radius of curvature of interest (-12"concave) is shown in red, the maximum in blue (+12mmconvex), and the colors are logarithmically interpolated with green in the middle indicating a zero curvature or flat surface.</p><p>The automotive fender shown in <ref type="figure" target="#fig_5">Figure 6</ref> is composed of over five h u n d d Coons patches. The vertical blue and yellow stripes in the left center indicate a number of undesirable inflections. <ref type="figure">Figure 7</ref> shows a shaded image of the same surface. This was illuminated by a line light source, simulating a fluorescent light. Unfortunately, surface problems are only visible when the light is in certain positions, requiring that the user manipulate the lights extensively to detect this error. Furthermore, many surfaces exhibit faimess problems which are much more subtle than this one. The complete analysis took less than two minutes of CPU time on a Silicon Graphics 4D/25 workstation (16 mips).</p><p>An automotive body panel "sail area" is shown in <ref type="figure" target="#fig_6">Figure 8</ref>. Secondary direction curvature is displayed. The yellow areas surrounded by blue clearly indicate several undesirable inflections. A shaded image in <ref type="figure" target="#fig_7">Figure 9</ref> shows the correlation between the surface anomalies and the curvature plot. These examples are actual problems caught in the production process. The early detection and elimnination of these types of errors results in significant savings in both time and money.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>Of the three criteria for surface faimess given in section 1 of this paper, we have found that the global criteria relating to surface inflections and even variation of curvature are more important than the local criteria of curvature continuity. The PDGS surfaces are curvature discontinuous everywhere (because of the 2nd degree boundary curves) but the resulting surfaces are perfectly acceptable. This is counter to the common assertion often 2 found in textbooks and technical articles that G continuity is essential for surface faimess. On the other hand G1 continuity is vital and a separate part of our program flags surfaces lacking tangent continuity.</p><p>Wk have found color to be an effective tool for analyzing surface fairness. We have shown that pertinent curvature information can be best represented by having a color change represent a percent change in curvature -i.e. a logarithmic color scale, and we have presented our criteria for a "satisfactory" curvature scale..      <ref type="figure" target="#fig_8">Figure A2</ref> and HLS lightness and saturation in <ref type="figure">Figure A3</ref>. The actual colors displayed for a given rgb value can vary slightly from monitor to monitor depending on the manufacturer's specification for the chromaticity of the red, green, and blue phosphors. We used the x, y, and z values for a typical CRT monitor as given by Hall [H90] and as shown in <ref type="table">Table 1</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1: Introduction</head><p>Data represented in a visual form is used for visual analysis and for scanning for the existence of desired features. Researchers and analysts examining data displays would like to detect regions of specified values (e.g., high, medium, or low), their locations, and shapes. The problem of detecting the existence of patterns, locations, and shapes is difficult, especially in lowresolution browse sets where one would like to scan large quantities of fuzzy data as fast as possible and detect features efficiently. Fast scanning of large amounts of data is facilitated by the use of computer devices and displays. Detection of features present in fuzzy data is difficult not only because the data is fuzzy but also preattentive visual processes, one would enable the user to perceive the desired information quickly and efficiently.</p><p>The visual detection of moving objects is a preattentive process occurring relatively quickly. Traditionally, animation is usually employed to follow time development of data or to watch three-dimensional structure of objects (by viewing objects rotating in space). As noted by Livingstone <ref type="bibr">[1988]</ref>, the sensitivity of the visual system to "color contrast, movement, and stereopsis suggests that hard-to-see objects can be made more visible by introducing movement (by moving the object or the observer) or stereopsis (by simultaneously viewing two images of the same scene taken from different positions). "</p><p>In this work, animation is used for two purposes. First, animation is employed to enhance the visibility of features embedded in the data by creating changes in the displayed data during the time of viewing rather than by moving the data relative to the observer. The second purpose of using animation in this work is to draw the attention of the viewer to features present in the data. In these contexts, the notion of motion is generalized (besides linear motion of the whole image) to any changes occurring on the screen during viewing time. These changes could include linear or rotational motion of parts of the image displayed on the screen, changes in size and/or color of objects, blurring and sharpening, or any additional information plotted progressively on the screen. Such changes could be created from the original fuzzy data set and, if this is the case, they do not require the storage and retrieval of additional data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2: An Animation Primer</head><p>Detecting motion seems to be primordial and one of the most important visual mechanisms in many life forms. Whether this property comes from an adaptation geared to detecting predator or prey, or it is a common mechanism developed together with other abilities such as stem vision is a matter of speculation. It has been found that observing motion triggers a set of fast and effective mechanisms in the visual system that allow the efficient detection of the moving features. In this work, we use animation to enable the user to exploit these mechanisms to detect quickly pattems and features embedded in the data. This approach should allow the detection of fuzzy structures in low-resolution browse sets and direct the attention of the viewer to features embeddedinthedata The projection of an animated sequence creates the illusion of motion, or apparent motion. To see the apparent motion, the observer must connect features present in successive frames in a process called correspondence. Ramachandran and <ref type="bibr">Anstis [1986]</ref> have summarized facts about the correspondence process. To extract salient features during animation. the visual system prefers to use low-spatial-frequency structures, like blobs of brightness and darkness, and texture rather than detailed shape outlines and edges. To connect features appearing in successive frames (correspondence), the visual system assumes that the world has order and takes shortcuts in perceiving the situation. These mechanisms are so strong that they can lead sometimes to visual illusions that persist even if the viewers' logical minds disagree <ref type="bibr">[Ullman, 1979;</ref><ref type="bibr">Ramachandran and Anstis, 1986;</ref><ref type="bibr">Gershon, unpublished results]</ref>. For example, two objects may correspond to each other even if they have different visible shapes. Or, two objects of distinctly different sizes are perceived as shrinking and expanding rather than trading places when they are in fact exchanging places. These facts "violate" the rules of rigidity and the conservation of objects.</p><p>Based on these observations, one would like, then, to add the following rule b the ones mentioned above:</p><p>Usually, the simplest explanation is taken most seriously of all (e.g., shrinking and expanding could be taken more seriously than linear motion).</p><p>As for conditions that enhance the detection of moving objects, motion and depth perceptions are sensitive to brightness rather than hue contrast [Livingstone. 19881.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3: Methods</head><p>The methods developed in this work enhance the visibility of fuzzy structures in an image by introducing dynamics into an otherwise static display. The dynamic changes include displaying different ranges of the data separately or displaying the data with varying degrees of sharpness. These methods are described in the following paragraphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.1: Animation of Segmented Components</head><p>In this method, a single data set is classified into a discrete number of groups determined, for example, by the value of each point. In such an example, if the range of data values is from 0 to 30, the data could be distributed into 30 groups, where the first one consists of all data points in the range of 29 to 30, the second one consists of the points with values in the range of 28 to 30, and so on. The data corresponding to each region is displayed separately in an animation loop. If these regions are displayed from high to low values and then back from low to high, the resulting dynamic display consists of expanding and shrinking structures (given that the structures are determined by the data values). In this animation loop, the range of displayed data values of a particular data set could be changed, for example, by varying the minimum (and/or maximum) value of the data to be visualized during the animation sequence. The results of this type of animation could be very effective in perceiving the data values and the location and shapes of structures embedded in the data. If the background color for representing the data values outside the threshold is black, the brightness contrast between the displayed regions and the background should increase the effectiveness of this procedure. To further enhance the perception of the data structures, the entire range of the color table in a frame could be made to cover only the range of the displayed data in the frame. This could create a dynamic change in the color of the structures during viewing time. The storage of the data could be arranged so that, for example, high values of the data are transmitted first, thus making the best use of a limited communications bandwidth. To further enhance the perception of structure, data values, locations, and shapes, 3-D surface views (with color and with or without shading) could be generated for the displayed range of each frame.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1</head><label>1</label><figDesc>Curvature is represented by the length and direction of normal vectors.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 IFigure 3</head><label>23</label><figDesc>The CIE L*a*b uniform color space The standarcl chromaticities of a monitor's red, green, and blue phosphors and of its white point in terms of the CIE primaries as defined by the NationalTelevision System Committee (NTSC) [H89]. Calculate the step size in L*a*b* space for each segment from dark red to red, red to yellow, yellow to green, etc. to obtain the desired number of colors For each point on the path in L*a*b* space transform to XYZ space and then to RGB space I I I I Constrain RGB to be between 0 and 255 Flowchart for creating one dimensional perceptually uniform color scale 4.3 Color Curvature Functional RelationshipOnce we have decided on the colors to be used, it is necessary to determine what curvatures need to be distinguishable. Suppose we have the change in colors represent a linear change in the radius of curvature, r, where r = l/k and k represents any of the previously discussed measures of curvature. Then the colors indicate curvature problems of equal severity where the radius of curvature changes from 50" to lOOmm and where it changes from l00,ooo" to 100,050mm. Clearly, radii of curvature 100,000mm and 100,050" both indicate a flat surface, whereas the change from 50" to 100" does indicate a significant curvature change. At large radii of curvature the radius can change more without the change being significant. It becomes apparent that we need an indication of the percent change in curvature. Such an indication can be obtained by using a logarithmic scale. Thus the equation used to calculate the number of colors needed for a given percent change between colors is : where rmin = the minimum absolute value of the rmX = the maximum absolute value of the p = the percent change desired between colors n = the number of colors (rounded to the m&amp;us of curvature radius of curvature (e.g. for a 30% change p 4</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Maximum principle curvature of a fair NURB swface with a 'bump' in the middle of it.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Curvature in primary direction of an analytic surface z = sinw) (approximately by NURB).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Curvature analysis of a fender shows undesirable inflections (blue and yellow stipes).Flgure 7: Shaded image of fender illuminated by a line source shows the problem area.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Secondary direction curvature analysis of an automotive body sail area indicates a lack of fairness.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Shaded image of body panel shows correlation between curvature plot and surface anomalies. (See Oolorplates, p. CP-29.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure A2</head><label>A2</label><figDesc>Variation of HLS lightness and saturation values for 35 colors</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>because</head><label></label><figDesc>current display devices are inefficient. However, in contrast with the printed page, electronic display devices are flexible in the sense that they are able to change the displayed information rather quickly. If one could use this flexibility to feed information through * This work was funded by The MITRE Corporation as part of The MITRE Sponsored Research (MSR) Program.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>It basically uses what makes sense consistent with life experience. These mechanisms include the following assumptions: Objects move in straight lines rather than change direction abruptly [Ramachandran and Anstis, 19861 Objects are rigid and small details are not compared in successive frames if the global object is perceived [Ramachandran and Anstis, 1986; S . Ullman, M. Riley, and D. Marr, described in Marr, 19821 Moving objects cover and uncover portions of the background. Objects a~ conserved [Ramachandran and Anstis, 19861</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The programming efforts of Jennifer Angleton, Paul Leclerc and Paul Machtosh are gratefully acknowledged. This work was partially supported by funds from the National Science Foundation <ref type="figure">(DDM-901585 1)</ref> and The Ford Motor Company.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix A : RGB and HLS values for logarithmic curvature scale</head><p>The RGB values are the amount of red, green, and blue on a scale from 0 to 255. The hue (H) can vary from 0 to 360, while both the lightness (L) and saturation (S) are between 0.0 and 1.0. Plots of RGB are shown in <ref type="figure">Figure Al,</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Abstract In this paper, we present methods for visualization of fuzzy data based on the sensitivity of the human visual system IO motion and dynamic changes and the ease with which electronic display devices can change their display. The methods presented include taking an otherwise static image and displaying in an animation loop either its segmented components or a series of blurred versions of the whole image. This approach was applied to seasurface temperature data and was found to be effective in showing fuzzy details embedded in the data and in drawing the viewer's attention. This approach and methods could piay a significant role in the display of browse products for massive data and information systems.</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Surface Analysis Methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Farouki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">K</forename><surname>Hinds</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE CG&amp;A</title>
		<imprint>
			<biblScope unit="page" from="18" to="36" />
			<date type="published" when="1986-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An Application of Color Graphics to the Display of Surface Curvature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Dill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1981-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Curvature for Surface Interrogation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Fayard</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988-05" />
		</imprint>
		<respStmt>
			<orgName>Arizona State</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Masters Thesis</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Curves and Surfaces for Computer Aided Geometric Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Farin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Academic Press Inc</publisher>
			<pubPlace>Boston, MA</pubPlace>
		</imprint>
	</monogr>
	<note>2nd ed.</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Illumination and Color in Computer Generated Imagery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vandam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Springer-Vahg : Monographs in Visual Computing</title>
		<meeting><address><addrLine>Reading, Mass; New York</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley Publishing Co</publisher>
			<date type="published" when="1982" />
		</imprint>
	</monogr>
	<note>Fundamentals of Interactive Computer Graphics</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Geometric Modeling for Product Engineering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Hoitsma</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Elsevier Science Publishers</publisher>
			<biblScope unit="page" from="21" to="37" />
			<pubPlace>North-Holland</pubPlace>
		</imprint>
	</monogr>
	<note>Surface Curvature Analysis</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Color Scales for Image Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Levkowitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Herman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE CG&amp;A</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<date type="published" when="1992-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Uniform Color Scales</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Macadam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Opticul Society of America</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1691" to="1702" />
			<date type="published" when="1974-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Modenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geometric</forename><surname>Modeling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>John Wiley &amp; Sons</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Murch</surname></persName>
		</author>
		<title level="m">Color Displays and Color Science</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
