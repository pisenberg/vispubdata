<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualization of Simulated Airflow in a Clean Room</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Koji</forename><surname>Koyamada</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Tokyo Research Laboratory</orgName>
								<orgName type="institution">IBM Japan Ltd</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Visualization of Simulated Airflow in a Clean Room</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Techniques f o r visualizing a simulated air flow in a clean room are developed by using an efficient cell traverse of tetrahedral cells generated from irregular volumes. The proposed techniques are probing and stream line display, which are related to the measurement techniques used in actual clean rooms. The efficient traverse makes it possible to move freely around a given irregular volume and to spawn off stream lines. A successful application of these techniques to a problem in a clean room is also described.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1: Introduction</head><p>Clean rooms are extensively used in manufacturing h e s for computer components such as memories and disks. Scientists and engineers have been studying the air flow in such rooms as an application of computational fluid dynamics (CFD); initially, their objective was research, but it is now turning to practical use.</p><p>In the past, CFD was applied to the air flow of a simple clean room mainly in order to establish an optimal simulation model, such as a turbulence model, and boundary conditions. Detailed results (velocity, turbulence energy, pressure, and so on) were obtained in advance by measuring the air flow in the corresponding physical model. The dominant discretization method was the finite difference method (FDM), because only a simple geometric model had to be handled. The fmite element method (FEM) was not used so much, because it consumed more system resources than the FDM, although it has more flexibility in handling complicated geometry.</p><p>Recently, CFD based on the FEM has started to be used for optimizing the air flow of actual clean rooms, because</p><p>The FEM is becoming competitive with the FDM in terms of the required system resources FDM studies of modeling have yielded useful results, whch can be also used in FEM simu-  Although CFD has become practical, measurement of the air flow in an actual clean room is indispensable for optimizing the air flow. CFD has found a new role as a method for establishing the measurement strategy used in the actual clean room, because it is very difficult to measure the air flow of a clean room while it is in operation. Unexpected phenomena may be hidden in the CFD result, because little information about the flow field can be obtained in advance. Through the effective visualization of CFD results, scientists and engineers can clarify the knowledge about these physical phenomena that they have acquired through careful measurement of the air flow in an actual clean room. In other words, the emphasis on the air-flow-simulation in a clean room is shifting from simulation itself to visualization.</p><p>Visualization techniques should be related to measurement techniques that have been used in actual clean rooms, including:</p><p>Measurement of physical quantities such as pressure and temperature at an arbitrary point in a clean room. Flow visualization using a laser light sheet Measurement of the particle distribution, using a particle generator and particle counters. We classiiy the visualization techniques into two categories: general and detailed. For general visualization, we use a volume rendering technique, which we proposed for irregular <ref type="bibr">volumes [ 6 ]</ref> . This technique is useful for understanding the total distribution of scalar data in a clean room, for example, the density of the particles generated from a worker, because it gives us an image similar to what we see in flow visualization. A generated image can suggest which area should be visualized in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2. Volume rendering of particle density</head><p>For detailed visualization, we use probing and stream line display, which are very common visualization techniques for interpreting CFD results. Here, we are interested in visualization techniques for irregular volumes generated by FEM simulation.</p><p>Many algorithms have been developed for regular volumes, but few for irregular volumes. Steve and Creon developed a virtual windtunnel for exploring three-dimensional unsteady flowfields [ 81. However, their current implementation is based on curvilinear volumes. Giles and Haimes proposed an algorithm for probing unstructured grids, which are regarded as irregular volumes [ 11. The internal data structure of the algorithm has four different cell types: tetrahedra, pyramids, prisms, and hexahedra. This minimizes the memory requirements, but makes cell traverse inefficient, because the data in a cell are not necessarily distributed linearly. The algorithm restricts probing on a cutting plane displayed in a two-dimensional window.</p><p>In this paper, we propose algorithms for probing and stream line display based on the traverse of tetrahedral cells. All irregular volume cells are subdivided into tetrahedral cells. This subdivision makes the traverse efficient and robust enough to move freely around a given irregular volume and to spawn off stream lines, because data in a tetrahedral cell are linearly distributed and every face of the cell is planar. We also describe the successful application of our algorithms to the visualization of the air flow in an actual clean room.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2: Algorithm</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.1: Tetrahedral model</head><p>For the visualization of an irregular volume, our algorithms assume a set of tetrahedral cells and their exterior faces, which we call the tetrahedral model [SI. In the tetrahedral model, each face is a triangle, whose normal we define to be oriented outward from the parent cell. An exterior face is a face of a cell that is not shared by any other cell in a volume. Exterior faces do not overlap, and their union forms the boundary of the volume. An irregular volume cell is not necessarily a tetrahedral cell. If a visualized volume contains cells other than tetrahedral cells, we subdivide those cells into a number of tetrahedral cells in a pre-process. The tetrahedral model has four components:</p><p>A nodal data component, whose entry contains position coordinates, scalar data, and velocity vectors. A cell topology component, whose entry contains the identifiers of its four nodal data components. A cell adjacency component, whose entry contains the identifiers of the four cells connected to a cell through its four faces. If no cell is connected to a face, an exterior face identifier with a minus sign is placed in the table instead. In the irregular volumes formed by threedimensional FEM results, cell adjacency is not explicitly expressed, because procedures for numerical simulation do not require this relationship. In this case, the cell adjacency is assumed to be generated from information on the cell An exterior face component, whose entry contains the identifier of the parent cell and the face number.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>topology.</head><p>In the above expression, a face number (fn = 0,1,2,3) is defined in each cell by the following face-node relations: face 0 = (node,, node,, node,} face 1 = (node2, node3, nodea) face 2 = (node3, nodeo, node,} face 3 = <ref type="bibr">(node,,, node,, node2},</ref> where nodei denotes the identifier of the ith node in a cell. Generally, a face fn is composed of node,,^,^) , nodemodw+l,4) , and nodemodv,+2,4) , where mod(i,4) denotes the remainder when i is divided by 4. In this definition, a face with an odd number and a face with an even number are inconsistent with respect to the directions of their normal vectors, since these are oriented outward and inward from the parent cell. However, our algorithms are not affected by this inconsistency. The storage requirements for three tetrahedral models generated from actual volumes are as follows: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.2: Cell traverse</head><p>Our visualization techniques include a cell traverse gong a line whose direction is specified by a vector U , and whose starting point is specified by probing algorithms, which are discussed later. This traverse consists of the following two processes:</p><p>Given a starting point in a cell, the irregular volume can be traversed by repeating these two processes alternately.</p><p>In the first process, the exit point <ref type="bibr">(&amp;)</ref> is calculated as an intersection_ of a face and a half-line through tjhe entry point bin) parallel to the direction vector ( U). The face (0-fn) on which the intersection is made can be determined by using area coordinates ( which can be used as weighting values for interpo- </p><formula xml:id="formula_0">+ A t x U (At &gt; 0).</formula><p>We can solve and A t as simultaneous equations after pout has been eliminated from the two equations by a function named sl-eq in <ref type="figure">Figure 4</ref>. All four faces must be checked if the entry point is located inside a cell (in case this, we define i-fn = -1).</p><p>The check starts from the face specified by 0-fn, which can be guessed by iteration of a stream line display algorithm that is described later.</p><p>If we regard the direction vector (U) as a velocity, we can define the traverse time ( A t ) as the time taken for the traverse line to proceed through a cell from the time of entry to the time of exit. This traverse time is also computed by the above process. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 4. Calculating an intersection</head><p>In the second process, the identifier (next-id) of the adjacent cell and the face number (next-fn) defined in the cell are calculated, where two cells (parent and adjacent) are connected through a face. These values are used as inputs for the first process. Next-id is a cell adjacency component that is found by using the identifier (id) of the parent cell and the face number (fn) as keys. Next-fn is obtained as a location at which id is searched for among the cell adjacency components found by using next-id as a key. To meet the first requirement, we traverse cells toward the seed point, assuming some constant velocity vector. We developed two algorithms for this purpose, corresponding to the following ways in which a user can specify a seed point:</p><p>By moving from a point in a cell. By giving the coordinates of the seed point.</p><p>For the first of these ways, we assume that a user  If the above inequality is satisfied for no cell along the line, the seed point is not included in any cell along the line and the traversing edge reaches an exterior face. Since a special value (-1) is retumed in this case, the user can recognize an exterior face, which is often a part of an obstacle such as a desk or a plate in a clean room. In the second specification, if a simple brute-force algorithm is used, a seed point is found to be outside the volume only after all the cells have been checked. Our algorithm finds the seed_ cell by traversing cells _with a velocity U ( = <ref type="figure">Pe,,,,,)</ref>  For a convex volume, a single traverse is enough to fmd the seed cell. For a nonconvex volume, the maximum number of traverses is the same as the number of exterior faces. If a user views the seed point and exterior faces on a graphics display, helshe can specify the candidate faces from which the traverse starts. In this case, the required number of traverses can be reduced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Gr -</head><p>To meet the second requirement, we developed a method based on the following steps of linear interpolation:  <ref type="figure">_data(win, wout, am, %ut. i-fn.o-fn</ref>  <ref type="figure" target="#fig_2">i= 0,1,2,3)</ref> at each node in a cell.</p><formula xml:id="formula_1">3 ,=O SS -1 WCil x W T [ i d l</formula><p>If other scalar data or time sequential data are evaluated at the same seed point, it wdl be very convenient to store these weighting values and the cell identitier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.4: Stream line display</head><p>A stream line can be defined by the following equation: <ref type="figure">,, vz)</ref> is a velocity vector. This h e is calculated by integrating the instantaneous velocity field at each tetrahedral cell. The resulting exit point, at which the stream line leaves the cell, and the velocity vector at that point are transferred to the next cell, which is determined by referring to the cell adjacency component of the tetrahedral model, as the entry point and the velocity vector at that point.  <ref type="figure">(vx, v,, vz)</ref> is constant during the time step Af, the stream line is approximated by connecting points defined by: However, the main point of our algorithm is that it employs the cell traverse technique that we discyssed previously. To calculate the next position, pi+, ,-at each time step ( A t ) from the current position, pi , we need to perform the following processes:</p><formula xml:id="formula_2">where = (vx, v</formula><p>Check whether the position is still included in the same tetrahedral cell. Interpolate a velocity vector v: l at that position, if it is in the same cell.</p><p>For the first process, we compare A i with the Lime ( r,) required for the half-line tkough the point p, and parallel to the velocity vector v, to reach a face of the cell. If A t is larger than ti, the next position is outside the cell, and the intersection of the half-line and the face becomes an exit point. If not, the position is inside the cell or on a face of the cell. For the second process, we must develop an efficient method for the interpolation, because it is generally performed at many positions in the cell. Here, we employ the strategy of linear interpolation by using the data at the two ends of a line segment as in the probing algorithm. However, the method is different from that of the probing algorithms in the following respects:</p><p>One end point 6) of the line segment is not on a face but insi4e a cell. <ref type="figure">The velocity (v,)</ref> at the point is known.</p><p>The weighting values at four node points need not be calculated, because they are not used later.</p><p>Consequently, the velocity vector (vi+,) at the (i + 1)th point is calculated by linearly interpolating the velocity vectors at the ifh point and the exit point in the ratio of A t to (ti -A f ) .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3: Optimizing the air flow in a clean room</head><p>Conventionally, scientists and engineers have tried to achieve uniformly high cleanliness within a. clean room, although the required cleanliness is not the same at every point. This results in a huge and unnecessary running cost. The area requiring high cleanliness should be localized, if other areas do not share this need. In a clean room of the vertical laminar flow type, which is used in computer makers' manufacturing lines, very clean air is supplied from the ceiling so that it can smoothly blow particles generated in the clean room out through the retum ducts. In the following discussion, we consider the common situation in which a workbench and a worker are located at fixed positions in the clean room. The area in which high cleanliness is required is above the workbench on which the worker is assembling mechanical components. One promising idea is to compel the air that in the current approach goes out uselessly through the retum ducts to contribute to the achievement of local high cleanliness above the workbench. To realize the idea, we attached a rectifying board to the side of the workbench. This board is a squared plate with airguides to magnify the force that controls the air flow. The board is installed on the opposite side of the workbench to a contamination source such as a worker.</p><p>The performance of the board is evaluated by using the following parameters above the workbench:</p><formula xml:id="formula_3">Flow direction Cleanliness.</formula><p>The flow direction is recognized by using a tuft or smoke. There is a rule of thumb for optimizing the air flow that the air flow should be directed from the working area toward the contaminant source (worker). In order to measure the cleanliness, We use a particle counter to monitor the number of particles that a particle generator discharges from a diffuser, which is located at a contaminant source. If no particles are monitored, optimum cleanliness has been achieved. These parameters could be measured in an actual clean room. However, there are inevitable difficulties in the measurement:</p><p>It is difficult to make the measurements in a clean room during operation.</p><p>The measurement devices will inevitably change the flow field in a clean room.</p><p>Therefore, we obtained the parameters by numerical simulation. The air flow field (u,v,w) can be obtained by solving Navier-Stokes equations. Particle behavior can be numerically realized by calculating the transportation equation proposed by Suwa [ 91.</p><p>In the calculation, it is assumed that a particle's behavior is controlled by gravity, diffusion, and flow convection.</p><p>From the simulated airflow, we investigated the localized values of the density and the velocity around the board and the workbench by using our probing algorithms. For such investigation, the user interface is important. In order to specify the seed point in a graphics display, we use an icon composed of 4 line segment parallel to the velocity vector ( vs), pseudo-colored according to the vector's magnitude, and labeled with strings showing the magnitude.</p><p>A point pseudo-colored according to the scalar data <ref type="bibr">(s,)</ref> there, such as pressure or temperature, and labeled with strings showing the value of the data.</p><p>In this localized visualization, the probing icon plays the role of a tuft and a particle counter used in an actual clean room. We specify an arbitrary spatial point effectively by using a stereoscopic display. For interactive visualization, 120Hz-display systems are used. In the systems, two vertically compressed images are displayed in an upper and a lower parts of the display. By moving the icon interactively in the area above the workbench and spawning off stream lines, we confirmed the effectiveness of the board in the following respects:</p><p>The contaminant density above the workbench is small enough for the area to be considered highly clean. The flow is directed from the board to the worker.</p><p>actual clean room, although there are many problems to be solved in the technology of numerical simulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4: Results and Discussion</head><p>To evaluate the efficiency of the proposed algorithms, we performed benchmark tests with the following features:</p><p>An inegular volume consisting of 60,680 cells was used.</p><p>For probing, we used a translation vector ' U Each mouse operation (push) generated a translation vector.</p><p>A stream line was spawned off after a seed point had been fixed by probing operations.</p><p>We divide the total cost (T,) of the probing algorithm into two parts: The first, t,,, is the cost of calculating the intersections of a probing icon and a face of a cell. The second, t,, is the cost of displaying the coordinates and data at each mouse-push. We also divide the total cost (T,) of the stream line algorithm into two parts: The first, t,,, is the cost of the overhead at each cell. The second, t,, is the cost of interpolating a velocity vector at each iteration. Consequently, the total cost functions (T,, Ts) are estimated as: If it is assumed that the simulated air flow is accurate, more information can be obtained through visualization techniques than by measurement in an 0 Npc is the total number of times that a probing icon visits cells. N , is the total number of times that a mousepush takes place. N,, is the total number of cells that a stream line passes through.</p><p>Ni is the total number of iterations in th calculation of velocity vectors.</p><p>We measured the CPU time (Tp, T,) in milliseconds and the parameters <ref type="figure" target="#fig_2">(N,,, N,, N,, NJ. Figure 14</ref> shows the statistics on the results.</p><p>(See oolorplates, p.  No. The validity of these costs can be confirmed by using other datasets. It is apparent that these cost components are independent of the number of cells (N). However, the number of times that a probing icon visits cells in one mouse-push ( ) and the number of times that a stream line passer through cells ( N~ ) are both proportional to W 3 . This means that the total costs, T, and T,, are dependent on N. In this measurement, the above two parameters ( 5 and N= ) are 4.51 and 43.4 on average, respective??. The number of iterations at each cell (s ) is dependent on the variation of velocity vectors? In this measurement, this parameter is 30.9 on average. On the assumption that we have a volume whose number of cells is one thousand times that of the measured volume and whose number of iterations is the same, we can estimate the performance of the algorithms for probing and generating a stream line as: T~ = 1 0 0 0~'~ 4.51 x tpc + tm x 1 T, = 1 0 0 0~'~ 43.4 x (tsc +30.9 x ti) = 13.8mrec = 8 3 4 . 5 "~ This evaluation shows that our algorithm has high performance even for very large volumes (N = 60M cells).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Nsc</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>N i</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5: Conclusion</head><p>We developed two visualization techniques, probing and stream line display, for visualizing the simulated air flow in a clean room. These techniques, based 3n an eficient traverse of tetrahedral cells, play the role of measurement devices in a numerically simulated flow field. They have been shown to be very useful for optimizing the air flow in a clean room.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 .</head><label>1</label><figDesc>Measurement in an actual clean room</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>NTETRA + 28 x "ODE+ 8 x NEXT(byfes)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Calculate an exit point in a cell. Search for an adjacent cell. Q = (a[O],a[ l],u[2]); a[O] + a[ 11 + Q[2] = I), lation [2]. Whcn the three vertices of a face triangle are specified as pi (i = 0,1,2), by a function named t2f in Figure 4, we can express the exit point in two ways:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>gives a translation vector (GI from a current position (p,u~r,,). Our algorithm finds the seed cell by traversing cells with a velocity U. In the traverse of cells along the line, if re,,rry and fexll, which are the times required for the traversing edge to reach an entry point and an exit point in a cell, satisfy tencry I 1.0 I 'exit, then the seed point is included in the cell.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 .</head><label>6</label><figDesc>Probing by moving from a point in a cell</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>from a centroid (pexyor) of a cell with an exterior face to the seed point (p,). The mechanism for searching for the seed point is the same as that of probel. If the seed cell is not found in one traverse, another cell with an exterior face is searched for</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9 .</head><label>9</label><figDesc>Calculating a stream line in a volume I On the assumption that</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>-</head><label></label><figDesc>+ vi x A t ,where p, , P,+~ , and express the position vector of the ith point along the line in the tetrahedral cell, the position vector of the (i+ 1)th point, a n . the velocity vector at the point of p, , respectively. po denotes th_e point at which the stream line enters the cell, and vo denotes the velocity vector at that point. A t is first determined as the time required-for the half-line passing through the Fntry point(Po) and parallel to the velocity vector (vo) to reach a face of the cell. The calculation is performed iteratively until further decrease of Ar leads to little change in the exit point at each cell. a stream line in a cell Kaneda et al. proposed a similar algorithm [3].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>whose component was (f Ax,O,O), (0,f Ay,O), or (O,O,T Az), where Ax is defined as onetwentieth of the volume width in the x direction, and Ay and Az are defined similarly.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 12 .Figure 13 .</head><label>1213</label><figDesc>Localized visualization above the workbenchTp = Npc x 'pc + N,,, N,, x tXc + Ni x ti,where Two vertically compressed images for stereoscopic display</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>From the values of T, and T,, the cost components of the total cost function are calculated as:tpc = 2.43 x lo-' tm = 2.89 t,, = 3.80 x ti = 6.10 x</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>I would hke to thank S. Uno, manager of advanced graphics application of Tokyo Research Laboratory,</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Advanced Interactive Visualization for CFD</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Giles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haimes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Systems in Engineering</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Finite Element Methods in Stress Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Holand</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969" />
			<publisher>Tapir</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A Method of Visualizing Three-Dimensional Vector-Valued Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kaneda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Harada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Sat0</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nakamae</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions of ISPJ</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="567" to="574" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Three-Dimensional Numerical Simulation of Turbulent Air Flow in Ventilated by Means of 2-Equations Model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kat0</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Murakami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Symposium on Computational Fluid Dynamics Proceedings</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="560" to="571" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Volume Visualization of 3-D FEM Results</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Koyamada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Nishio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Journal of Research and Development</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page">12</biblScope>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note>Computer Graphics. International 92 Proceedings</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">A Monotone Streamline Upwind Finite Element Method for Convection-Dominated Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">G</forename><surname>Rice</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Schnipke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
	<note>Comput</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Meths. Appl. Mech. Engrg</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The Virtual Windtunnel: An Environment for the Exploration of Three-Dimensional Unsteady Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steve</forename><surname>Bryson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Creon</forename><surname>Levit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;9 1</title>
		<meeting>Visualization &apos;9 1</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="17" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Studies on Numerical and Transient Algorithms for Clean Room Efficiency</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Suwa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCCS the 10th Int. Symp. Proc</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="51" to="62" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
