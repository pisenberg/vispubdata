<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualization Requirements in the Atmospheric and Environmental Sciences (Five Case Study Reports)</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theresa</forename><surname>Rhyne</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">U.S. EPA Scientific Visualization Center NASA Marshall Space Flight Center Florida State University University of Wisconsin at Madison IBM T J. Watson Research Center</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theresa</forename><surname>Rhynel</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">&apos;Unisys Corporation, 2Sterling Software, &apos;U.S. Environmental Protection Agency lhtroduction The U.S. Environmental Protection Agency&apos;s @PA) Scientific Visualization</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Bolstad2</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">&apos;Unisys Corporation, 2Sterling Software, &apos;U.S. Environmental Protection Agency lhtroduction The U.S. Environmental Protection Agency&apos;s @PA) Scientific Visualization</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Penny</forename><surname>Rheingans'</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">&apos;Unisys Corporation, 2Sterling Software, &apos;U.S. Environmental Protection Agency lhtroduction The U.S. Environmental Protection Agency&apos;s @PA) Scientific Visualization</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lynne</forename><surname>Pettenon'</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">&apos;Unisys Corporation, 2Sterling Software, &apos;U.S. Environmental Protection Agency lhtroduction The U.S. Environmental Protection Agency&apos;s @PA) Scientific Visualization</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Walter</forename><surname>Shackelford3</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">&apos;Unisys Corporation, 2Sterling Software, &apos;U.S. Environmental Protection Agency lhtroduction The U.S. Environmental Protection Agency&apos;s @PA) Scientific Visualization</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Visualization Requirements in the Atmospheric and Environmental Sciences (Five Case Study Reports)</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Reports from jive research centers involved with tackling atmospheric and environmental visualization issues are presented in this case study. Visualization with heterogenous computer architectures is highlighted in the US. EPA Scientific VisualizatioT6 Center discussion. Next, NASA Marshall Space Flight Center&apos;s effort to develop the Multidimensional Analysis of Sensor Systems (MASS) environment is presented. Thirdly, Florida State University&apos;s building of a new scientific visualization package, Sci An, is reported This is followed by a discussion of the design and implementation of VIS-AD, an experimental laboratory for developing scientific algorithms, at the University of Wisconsin-Madison. Finally, the visualization of global atmospheric data at IBM T.J. Watson Research Center is highlighted. The color illustrations associated with this case study are shown in the special color signature section of these Visualization 92 proceedings.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>valuable if it presents additional information to place the data in its spatial and temporal context. Labelling a visualization with its date and time is another way to provide some basic temporal context.</p><p>Inrerprerurwn ai&amp;: EPA scientists have specific requirements for customized display functions. These functions include specialized legends, labels, and discrete color scales.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Configuration and General Strategies:</head><p>The EPA Visualization Center is a heterogneous Unix workstation environment designed to support the multiple architectures available to envrionmental researchers within the Agency. Currently, the Center is equipped with Silicon Graphics, DecStation 5000, IBM RS6000, Sun, and Data General Aviion workstations which have either been purchased by or are on loan to the facility. In a cooperative argeement with the North Carolina Supercomputer Center (NCSC), atmospheric researchers have access to NCSC's Cray Y/MP for the execution of complex non-linear environmental models. Begining in October 1992, the Agency's first high performance computer (a Cray Y/MP) will become operational at Bay City, Michigan.</p><p>The Visualization Center's software configuration is similarly heterogeneous. We presently create production visualizations using primarily FAST (Flow Analysis Software Toolkit) developed by Sterling Software for NASA-Ames [Bancroft et. a1 901, and RRVP (ROM/RADM Visualization Project) developed by Numerical Design, Ltd. for the EPA. Dynamic Graphics' IVM Draw, WaveFront's Data Visualizer, Precision Visuals' PV-Wave, and Biosym's computational chemistry tools have also been evaluated through the production of a few environmental visualizations. The EPA Visualization Center has an intensive technology assesment effort of visualization toolkit environments underway. We are currently evaluating the capabiities of AVS, IRIS Explorer, apE, IBM Data Explorer, and Khoros. We evaluate toolkits by using them to produce visualizations of actual data of interest to EPA scientists. Frequently we try to visualize the same data set using different toolkits in order to compare the functionality, usability, and speed of the toolkits. Although agency-wide standardization on a single visualization environment would be desirable, none of the tools we have used provides all the functionality we require.</p><p>Through necessity or by design we have adopted a few general strategies toward visualization. First, introduce the scientists to the possibilities of visualization and then let their needs and vision drive the research product. Other sophisticated visualizations are later produced for policy makers and the general public. Second, push software packages beyond their intended limits, then supplement and extend them with customized modules.</p><p>In particular, we have used FAST to produce animations beyond its Original intention for Computational Fluid Dynamics research. FAST has been applied to electostatic potential data sets by computational chemists in the U.S. EPA Health Effects Research Laboratory. In fluid flow applications, when tracer particles failed to clearly show air flow around a building, a facility for generating ribbons, streamers, and tubes was added to FAST. Additionally, we have built tools or modules to perform map projections on data with a geographic context, read and write data and image files in a wide variety of file formats, interpolate over missing data, and assemble animations on our optical disk. Third, balance between image quality and interactive control. Small to medium sized data sets can be manipulated interactively. For very large data sets, we use the interactive capabilites of our tools to design and display a sample frame and then compute frames from other time steps or viewing positions in a batch fashion. This has required the merger of FAST code with other customized code (RRVP). Fourth, support the heterogeneous hardware and software environment existing nationwide at the U.S. EPA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Unsolved Problems</head><p>There remain a number of unsolved systems problems with the visualization of environmental data Our current workstations provide insufficient computational power to interactively step through the time steps of large 3dimensional datasets. Large datasets present storage and access difficulties. The need to support visualization on the multiple platforms in use throughout the Agency has not yet been completely addressed. Similarly, we are just beginning to address the issues associated with remoteaccess which appear both in ourcollaborations with scientistsat remote sites and the utilization of the upcoming high performance computing site in Bay</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>City.</head><p>A number of software limitations and challenges also remain. Foremost is the need for a general purpose data import tool to facilitate the visualizations of the multiple data formats in use in the Agency. Toolkit data conversion utilities such as IRIS Explorer's Data Scribe and AVS's Data Interchange Application begin to address the problem, but stop short of a complete solution. For example, our scientists often run models on a mainframe or supercomputer and wish to view the model output. W i n g a Cray or IBM binary file into a toolkit running on an SGI machine is not something which these data conversion utilities can handle. Data collected from atmosphericmonitoringsitescausesotherpmblems. These sites may be scattered irregularly across the area of interest. The data collected does not exhibit the grid structure (either regular or irregular) expected by these tools. Until the toolkit data conversion utilities develop sufficient power to handle the types of data our scientists use, we will need to continue writing conversion programs for each new type of data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Concluding Remarks</head><p>As the EPA Visualization Center continues to support Agency visualization needs, new approaches and tools will be developed. As part of the Agency's participation in the High Performance Computing and Communications (HPCC) effort, EPA will be developing techniques to transfer high performance tools to key State, Federal and industrial users with decision makingresponsibility. These are indeed "Grand Challenges*'. The Visualization Team at ESADMSFC is involved in providing the scientists with visualization and analysis tools required to meet their needs, either through testing and implementing available software or through in-house development. This presentation will focus on the lessons learned from this experience, including deficiencies found in present visualization tools and the challenge of getting usable tools into the hands of the scientist. Also included will be a description of in-house development efforts and the concems and considerations associated with their planning and devdopment.</p><p>The needs for visualization at ESAD/MSFC run the full range of present capabilities, including image processing, 3D rendering, animation, volume rendering, GIS, and data plotting. Additional challenges result from the need to handle large data sets, and the need to coregister, visualize, and correlate a diverse array of data types from various sensors, including satellite imagery, ground-based radar and station measurements, and scalar, vector, and image products along aircraft flight paths. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SGI'sExplorer,FAST,Linkwinds,ELAS, AGIS,andthe</head><p>Intergraph suite of image processing and GIS tools. While each of these tools have provided some benefits, there have been some significant challenges with employing these tools to actual science problems within the computing environment at ESAD/MSFC. Some of the general reasons for the lack of effective use of many of these tools by scientists include:</p><p>The tool is not extensible or is too inflexible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The tool is too dificult to learn or use.</head><p>It is too dificult to get existing data into the tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The tool does not adequately link visualization and analysis.</head><p>It is too dificult and time consuming to deal with our complex heterogeneous computing environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The tool does not do what the scientist really wants to do.</head><p>The scientist is not aware or does not appreciate the scientjfic benefits to be gainedfrom using the tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The scientist does not have ready access to adequate hardware required to use the tool.</head><p>It is too difficult to communicate the reults to colleagues.</p><p>Because of some of these challenges, andin order to meet specific needs which can't be handled with existing tools, the visualization team has undertaken some initial development efforts. A primary effort is the Multidimensional Analysis of Sensor Systems (MASS), which is designed to allow simple input, coregistration. visualization, analysis, and correlation of a variety of aunospheric data sets from different sensor systems. These can include, as an example, scalar and vector measurements along aircraft flight paths, satellite imagery, scalar and vector ground-station measurements, 3D volume data from ground-based radars, and GIs-type data sets. In addition, 3D output from numerical models can be included for correlation and validation. All data sets are coregistered in both space and time. For each data type, the user is presented with optional methods for visualizing and analyzing the data.</p><p>During initial planning phases, SGI's Explorer was considered as a possible environment for developing MASS. However, because of the present inabilities to dynamically link, unlink, and modify pipes and to provide a simple and adequate user interface within Explorer, it was decided that the program would be developed outside of the Explorer environment. The criteria for development of MASS include (1) it must be simple and intuitive for a scientist or operational technician to use, (2) it must be extensible and customizable, (3) it must have general applicability for use with other data and within other disciplines, and (4) it will adhere to object-oriented principles. MASS is, at present, past the feasibility and prototype stages of development.  <ref type="bibr">(Upson, et. al)</ref> had other drawbacks. The dataflow approach to the user interface, while powerful, required too much programming (albeit in a visual paradigm) tobe acceptable to many of our scientists. Further, most of these packages seemed to be weak at animation or priced out of affordability.</p><p>The first research requiring the use of advanced 3-D visualization techniques was the workby K. Johnson to investigate theories on the initiation and evolution of mountain thunderstorms and their electric fields. Storms near Socorro, New Mexico occurred in a typical pattern of light winds and strong insolation. It is hypothesized that solar heating of elevated terrain is the dominant forcing mechanism for mountain thunderstorms under these conditions, while orographic lifting is a weaker mechanism.</p><p>The study tests these hypotheses through numerical experimentation and observational analysis. The numerical experimentation involves the generation of 2and 3-D model data sets by the Colorado State University Regional Atmospheric Modeling System (RAMS). This nonhydrostatic model is used to simulate the evolution of the thunderstorm given initial conditions of the atmosphere and a 2-D field of terrain height values. The model produced time-dependent 3-D fields of wind, pressure, temperatwe and microphysical variables.</p><p>To approach this problem, we needed to visualize 2-scalar fields and 3-D scalar and vector fields from Dop pler radar and simulations. All fields can be time-depend-ent and may contain missing data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. Results</head><p>The approach taken to satisfy the visualization needs was to develop a new scientific visualization package called SciAn (for Scientific Animation). The thunderstorm research was used as a test bed for a general approach to visualizing scalar and vector fields.</p><p>There were a number of design criteria we needed to satisfy. We wanted to make the package easy to use to increase its acceptance by scientists. We needed to support many different kinds of data and file formats. We needed the ability to make simple video animations easily and quickly. One major design decision was to build SciAn around an object-oriented approach. An object-oriented system with a procedural interface was developed in standard C. Objects are encapsulations of both data, called variables, and functions, called methods. Objects can communicate by sending each other messages, which are implemented with methods. Objects have classes, from which they inherit variables and methods. These objects are then used to represent every entity in SciAn, from controls to datasets to complete visualizations. The user interface is also designed using object-oriented pMciples.</p><p>Message passing and variable transfer between objects provides a rich environment for the exchange of information, The shift in focus from data structures to the ability to ask questions of the data greatly facilitates the separating of jobs within the program. The inheritance mechanism makes it easy for similar objects to share behavior.</p><p>The object-oriented user interface has been well accepted. In some cases, scientists have needed only thirty minutes of instruction and no documentation to become reasonably proficient in the program. Video animation is only slightly more difficult. Graduate students have produced animations on their own after only a couple of hours of instruction. * In order to use animation as an everyday research tool, it is crucial to be able to produce animations quickly and easily.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III Future</head><p>Ideally, we want to providea quality of animation comparable to the results of the traditional "renaissance team" approach <ref type="bibr">(Wilhelmson et. al.)</ref> in an environment as easy to use as an object-oriented drawing package. We have not reached that goal yet. However, we believe that we have solved the problem of ease of use and speed, and we can extend the package to this point.</p><p>The object-oriented approach shows great promise in dealing with multiple types of data. Our results suggest that data sharing projects may benefit from a similarapproach. Inparticular,infonnation serversshould not be designed as file or data servers but as "question servers" that can answer questions about the information.</p><p>As the use of computer networks increases, it will become more and more important to be able to do visualization over the network. Work is in progress on SciAn to enable its objects to be shared across the network. This will allow a user to connect to a computation, visualize the data that have been produced so far, possibly adjust the computational parameters, and disconnect, all without disturbing the progress of the computation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Development of VIS-AD as a Visualization Tool to Assist in the Creation of Algorithms and Models for Atmospheric Research</head><p>William Hibbard, Charles R. Dyer, and Brian Paul</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Univesity of Wisconsin -Madison</head><p>The VIS-AD (VISualization for Algorithm Development) system is an experimental laboratory for developing scientific algorithms. It integrates interactive visualization with algorithm editing and execution, and is described in a paper [2] in these proceedings.</p><p>The idea for VIS-AD came from an experience developing a way to render 3-D images of clouds from multi-spectral satellite data <ref type="bibr">[l]</ref>. This project required an algorithm for discriminating clouds, and getting that algorithm to work well required lots of experiments with statistical image processing techniques. By looking at the rendered 3-D clouds we could tell when the cloud discrimination algorithm failed, but to understand why it failed we needed to implement ad hoc graphics of its intermediate statistical calculations. These graphics helped us to understand high-level algorithm behavior in the same way that interactive debuggers help us to find lowlevel bugs.</p><p>Aprincipal activity ofremotesensing scientists is the development of algorithms. These algorithms classify clouds and weather patterns from satellite images, estimate winds from time sequences of images, estimate temperature and moisture profiles from multi-spectral images, etc. After our experience with cloud discrimination, we realized that the scientists developing these algorithms could benefit from the ability to generate graphical depictions of the internal workings of their algorithms, so we decided to find a way to provide that capability to them.</p><p>We looked at existing visualization systems. However, none of them had the generality to display the internal data structures of scientific algorithms, so we decided to build our own system. This also gave us control over the user interface, which we feel is critical.</p><p>We started by trying to define a fixed list of the types of data structures that our system would render, such as 2-D and 3-D images, regions and region boundaries, surfaces in 3-D, histograms, scatter diagrams, partitioned images, partitioned histograms, etc. However, it was soon clear that there were endless variations on these structures, in terms of the way the data are grouped and organized, and in terms of the need to attach auxiliary values to the structures. And we felt that our list of data structures would be prejudiced by our particular experience with algorithms.</p><p>Thus we decided to allow the users of our system to specify their own data structures, and to design an algorithm for rendering these user-specified data structures. The C language allows its users to specify a very rich set of data structures. However, designing an algorithm for rendering them seemed very difficult, so we sought a compromise between the generality of C and the ease of rendering a fixed set of structureS.</p><p>Just as "go to" statements make tures" in C). These include many useful data structures, especially if variable length arrays are allowed (they can be used like linear lists). We found that the biggest problem with rendering these structures is ambiguitythat is, there is more than one good way to render them.</p><p>Thinking about how people design data displays led us to the idea for the "scalar mapping technique". For example, given a set of hourly temperature readings in an array, a scientist will probably render them as a graph, with time on the horizontal axis and temperature on the vertical axis. We generalized this example by insisting that all primitive values in data structures, including array index values, have an application oriented "scalar" type like time or temperature, and we let the user control the ambiguity of the display by mapping the scalar types to display axes, to animation, to color and to other display parameters.</p><p>Thus we had a way for the user to specify data structures and a way for the user to control their display, but we also had an idea of arrays that was a bit unusual.</p><p>The indices of our arrays were identified with scalar types, which could be real numbers, and our arrays had variable lengths. However, this idea of arrays fit nicely with satellite images, which are arrays of pixels indexed by latitude and longitude, where the number of pixels and the alignment of pixels to latitude and longitude can vary between images. Our experience with remote sensing also told us that our system should support a special "missing" value for data. We combined these ideas to form the novel semantics for the data objects of our programming language. We learned at a Siggraph workshop [4] that other scientific fields have similar data problems that can benefit from these data semantics. We considered implementing a graphical editor for a data flow language, but decided instead to implement a text based programming language similar to C.</p><p>We felt that this would make it easier tomanage large and detailed programs and would be more familiar to our scientist users. In fact, Fortran would be most familiar to scientists, but it does not have syntax for accessing complex data types.</p><p>Our own experience as programmers suggested that interactivity is critical for algorithm development tools, so we invested a large effort to find an efficient algorithm for displaying data setucnues. We originally conceived of our display algorithm as a sequence of simple type transformations, such as, for example, inverting the order of nested a m y indices. We began by implementing this formulation of the algorithm, and had to discard about 12,000 lines of code [3] when we thought of an equivalent but more efficient formulation of the display algorithm in terms of the tree structure of data objects.</p><p>In our experience, scientists will only use a system if it has a simple and intuitive user interface. We recognized that one of the strengths of "visual programming" graphical editors is the point and click access they pmvidetoprograms. ThustheVIS-ADtexteditorallows its users to point and click in their program texts to control data display and program execution. We also recognized that large and complex data objects in scientific algorithms cannot always be effectively depicted by a single image, so VIS-AD provides numerous ways for its users to interact with graphical depictions of their program data objects.</p><p>We have applied VIS-AD to our cloud discrimination algorithm and Color Plate #3 shows depictions of two data objects from that algorithm. Each data object is an array of histograms of infrared radiances in rectangular regions of a satellite image. The blue histograms are calculated from all the pixels in each image region but the white histograms are calculated from a subset of the pixels. The display helps us to understand the effect of the subsetting operation on a region by region basis. We are working with scientists to apply VIS-AD to their algorithm design problems, and that cooperation will guide futher development of VIS-AD.</p><p>We do plan to increase its generality for defining and displaying data structm that include complex linked structures.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Visualization of Stratospheric Ozone Depletion and the Polar Vortex</head><p>Lloyd A. Treinish</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IBM T. J. Watson Research Center</head><p>A very active area of atmospheric research and one that has much public interest concerns the results of the reduction in total stratospheric ozone observed annually during the Antarctic spring. Perhaps the most critical effort to study stratospheric ozone has been the observations made by the Total Ozone Mapping Spectrometer (TOMS) aboard NASA's Nimbus-7 spacecraft, which is in a (polar) sun-synchronous orbit. It has been operational since late 1978 and is still operating today. It measures the total column density of stratospheric ozone by observing backscattered solar ultraviolet radiation in seven spectral bands. Approximately 200,OOO such measurementsaremadeeachday,whichcoverstheentire globe.</p><p>Like many observations of the earth's atmosphere from spacecraft, data from TOMS are gridded and archived in a regular, rectangular mesh. Although easy to use, such a structure is a poor representation of a continuous phenomenon over a nominally spherical surface because it tears the data. Introducing cartographic transformations of such structures and extending this notion to three dimensions is a possible solution.</p><p>In addition, the TOMS data are not uniformly available for the entire earth. The instrument requires sunlight to operate, hence, there will be regions of missing data due to local polar winters (i.e., it is dark) as well as the usual data dropout problems associated with spacecraft observations, During the early years of observations there w m many large gaps in the observations ranging from a whole spacerraft orbit to all the orbits for a day.</p><p>The rectangular mesh does not properly support such gaps in the data. Hence, the use of an irregular grid (i.e., cells only exist where there are data) that varies in time supports this type of structure without imposing artifacts.</p><p>However, the original grid resolution and missing cells should be preserved during the (cartographic) transformation process that can address the first limitation in the provided rectilinear mesh. This can be accomplished by warping the coordinates of the irregular mesh rather than interpolating to a new cartesian grid in the cartographic projection coordinate system prior to any realization (generation of renderable geometry from data).</p><p>Given the curvilinear nature of such transformations, non-linear interpolation techniques are typically required to make the transformation of acceptable qual-ity. In addition to being computationally expensive, such interpolation may make it difficult to preserve the aforementioned irregular structure of the data prior to rendering. As a result, there is no interpolation of the data until shading is applied to rendered surfaces, which should be more accurate and computationally cheaper as well as being under user control.</p><p>These TOMS data can be used to study the formation of the secalled Antarctic ozone hole each southern hemisphere spring. It should be noted that the term, ozone hole, is a misnomer. It is actually a depletion. Daily sequencing of the data during this season shows the rotation of a local ozone maximum about the south pole, which surrounds the ozone hole. Such a rotation usually has a period of several days. This structure is consistent with the formation of a polar vortex in the stratosphere. Many researchers believe that ozone-destroying chemicals are trapped in this vortex during the cold and darkness of Antarctic winter. Once spring begins and the polar region emerges from the long night, it is theorized thatthesesubstancesreactphotochemically withozoneto break the molecule apart and thus, aid in the creation of the ozone hole. Hence, in late winter, regions of ozone depletion around the pole begin to form. Within a few weeks the ozone hole is completely established. By late spring the vortex weakens, causing the ozone depletion region to fragment and eventually dissipate.</p><p>Direct analysis of the TOMS data yields important information on the morphology of the ozone hole. However, when these data are correlated with other relevant atmospheric data, information about the underlying diurnal atmospheric dynamics of the stratospheric polar vortex and potential contributions from the upper troposphere can be gleaned. This includes the formation and breakup of the ozone hole each Antarctic spring. These other data (e.g., temperature and winds) are acquired independently of the TOMS data. Hence, they are generally not registered with the TOMS data and are available in a different mesh structure. To visualize these data simultaneously as part of the analysis process, these characteristics require non-traditional visualization techniques. The use of the aforementioned cartographic and spherical warping of regular and irregular grids for registration of multiple data sets of disparate structure to common visual coordinate systems is a possible approach. A viable implementation of this idea has been made via the IBM Visualization Data Explorer utilizing a number of realization and rendering strategies and applied to the study of the seasonal polar vortex and ozone depletion.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Advanced 3 -</head><label>3</label><figDesc>D graphics capabilities, such as isosurfaces, were developed first in SciAn. More traditional 2-D capabilities are gradually being added. A number of lessons were learned as a result of the development of SciAn and its application to environmental and other sciences: * The object-orientedapproach has been very successful. whether object-oriented programming is actually used is relatively unimportant. What is crucial is the shift from asking questions such as "what does the data look like" to questions such as "how can I get what I want out of the data." * Visualization techniques developed to solve problems in one scientific discipline are almost always useful in solving problems in disparate disciplines. Techniques developed for visualizing thunderstorm radar data have proved useful to visualize electron field density and 4-D quantum chromadynamics simulations. * Advanced 3-D visualization techniques will never supplant more traditional 2-D techniques. 3-D graphics can give a better overall impression of the data, but 2-D graphics often permit more precise measurement of specific features. The combination will always be more effective than either alone.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>programs difficult to analyze, pointers make data structures difficult to analyze for rendering, so we concentrated on data structures definable with just arrays and tuples (i.e. "struc-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>[l] Hibbard, W., 1987; 4-D display of satellite cloud images. Digital Image Roc. and Visual Comm. Tech. in Meteor., Cambridge, SPIE, 83-85. 121 Hibbard, W., C. R. Dyer and B. Paul, 1992; Display of scientific data structures for algorithm visualization. Visualization '92, Boston, IEEE. [3] Marx, C., 1935; Speech explaining how the aviators flew amss the Atlantic. A Night at the Opera, MGM.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>[ 4 ]</head><label>4</label><figDesc>Trenish, L., 1991; Siggraph '90 workshop reportdata structures and access software for scientific visualization. Computer Graphics 25(2), 104-1 18.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Visualization for Atmospheric and Global Change Research at the NASA Marshall Space Flight Center Michael E. Botts University of Alabama in Huntsville (UAH)</head><label></label><figDesc></figDesc><table><row><cell>6. References</cell></row><row><cell>G. Bancroft, F. Merritt, T. Plessel, P. Kelaita,R. McCabe,</cell></row><row><cell>and A. Globus, FAST : A Multi-Processing Envhn-</cell></row><row><cell>ment for Visualization of CFD, Proceedings : Visu-</cell></row><row><cell>alization '90, pp. 14-27,1990.</cell></row><row><cell>Numerical Design Limited, ROM/RADM Visualization</cell></row><row><cell>Project, (software documentation</cell></row><row><cell>for Version 2.0, Revision A), January 1991.</cell></row><row><cell>The Earth Science and Applications Division</cell></row><row><cell>(ESAD) at NASA Marshall SpaceFlight Center (MSFC)</cell></row><row><cell>is involved in Earth systems science research related to</cell></row><row><cell>the Global Change Initiative and NASA's EOS Mission</cell></row><row><cell>to Planet Earth. Although much of the research and</cell></row><row><cell>operational activities at ESAD have, in the past, been in</cell></row><row><cell>traditional atmospheric sciences (meteorology and cli-</cell></row><row><cell>mate and fluid flow modeling), increased emphasis is</cell></row><row><cell>being placed on interdisciplinary investigations into the</cell></row><row><cell>interaction of the atmosphere with other components of</cell></row><row><cell>the Earth system, including land masses, the ocean,</cell></row><row><cell>vegetation, and soil.</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>In addition, a large component of researchers at ESAD/ MSFC have requirements for visualizing output from numerical models and for validating these calculated data with data observed by sensors. Until the late 1980's, the ESADMSFC relied almost entirely on the Man-Computer Interactive Data Analysis System (McIDAS), developed at the Space Science and Engineering Center (SSEC) at the University of Wisconsin, for meeting its visualization needs. As the requirements for visualization and analysis began to spread beyond the capabilities of the traditional McIDAS system, MSFC in conjunction with NASA Headquarters funded prototype development intended to examine the feasibility of incorporating 3D interactive visualization into the McIDAS environment. This led to the creation of VisSD, as well as an interactive display tool for MSU global temperature data.</figDesc><table /><note>However, in order to move away from total dependence on the McIDAS system, and in order to take advantage of many existing capabilities not available within McIDAS, there has been an increasing trend toward investigating and employing other visualization toolsatESADMSFC. Atthepresent, theseinclude AVS,</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>The Development of the SciAn Visualiza- tion Package in a Multidisciplinary Research Program Eric Pepke and Kenneth W. Johnson Florida State University</head><label></label><figDesc>Pepke, J. Lyons, J. Murray) has the challenge of supporting the visualization needs of all the disciplines as well as introducing visualization to new disciplines. Specific graphics packages have been useful to some disciplines, but many fields lacked these solutions. The common need to do video animation further suggested a central approach. Commercially available general-purpose packages such as</figDesc><table><row><cell>1. Overview of domain</cell></row><row><cell>The Supercomputer Computations Research</cell></row><row><cell>Institute ( S o at Florida Stateuniversity is a multidis-</cell></row><row><cell>ciplinary research program in computational science.</cell></row><row><cell>Many scientific disciplines are represented, including</cell></row><row><cell>meteorology, geophysics, theoretical physics, high en-</cell></row><row><cell>ergy physics, nuclear physics, chemistry, biology, genet-</cell></row><row><cell>ics, economics, fluid dynamics, and mathematics.</cell></row><row><cell>The Graphics Group (E. AVS</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Application Visualization System: A Computational Environment for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="30" to="42" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Study of the Evolution of a Numerically Modeled Sever Storm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Wilhelmson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Intemational Journal of Supercomputer Applications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="20" to="36" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
