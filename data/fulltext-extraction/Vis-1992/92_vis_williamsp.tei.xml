<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Splat t ing of Nonrect ilinear Volumes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
							<email>williams@csrd.uiuc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Center for Supercomputing Research &amp; Development and National Center for Supercomputing Applications</orgName>
								<orgName type="institution">University of Illinois at Urbana</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Splat t ing of Nonrect ilinear Volumes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>This paper describes various techniques for achieving interactive direct volume rendering of nonrectilinear data sets using fast projection (splatting) methods. The use of graphics hardware, rendering approximations, parallelization and reduced resolution meshes &amp;re discussed. Results from the use of these techniques are presented in the form of color photos and comparative timings.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Volume rendering (also known as volumetric rendering) is used to show the characteristics of the interior A good deal of attention has been given to volume rendering rectilinear data sets [2, 4, 9, 10, 11, 12, 13, 16, 17, 19, 20, 231. However, much less has been published dealing with nonrectilinear data [l, 5, 6, 13, 17, 18, 22, 241. Nonrectilinear data can be rendered volumetrically by first interpolating it to a rectilinear mesh; efficient methods for doing this are being investigated by Wilhelms et a1 <ref type="bibr" target="#b23">[22]</ref>. The focus of this paper is on volume rendering nonrectilinear data without interpolating it to to a rectilinear mesh.</p><p>There are three basic techniques for displaying volume data <ref type="bibr" target="#b12">[12]</ref>, the use of 2D cross sections or slices of the data, (cross section rendering); 3D level surfaces (isosurfaces) or threshold rendering, which can either be opaque or semitransparent; or direct vohme rendering where a 2D projection of a colored semitransparent 3D volume or cloud is displayed. This paper concentrates on direct volume rendering.</p><p>Direct volume rendering is a method for rendering 3D scalar fields by directly displaying the data without first extracting intermediate representations, such as isosurfaces. The volume of data as a whole is rendered. One way to do this is to display a 2D projection of a colored semitransparent 3D volume or cloud, where the color and opacity are functions of the scalar field. These functions can be used to highlight desired features in the data, such as the extrema or hot-spots, or other regions of interest such as shock waves. Thus a holistic view of the entire field can be given with the brightly colored extrema gleaming through the cloud. A feeling for the spatial orientation of the field and the relative locations of areas of interest is given by rotating the image, hence the importance of interactivity. We focus on the use of projection methods for nonrectilinear data where the data is rendered without interpolating it to a rectilinear mesh <ref type="bibr">[13, 17, 24, 261.</ref> In these methods, each cell of the mesh is projected onto the screen in back-to-front order. To do this, an algorithm is required to visibility order the cells of the mesh. The cell's color and opacity contribution to each pixel is calculated and then blended with the pixel's existing color and opacity.</p><p>A very accurate, but computationally intensive, algorithm is given by Max, Hanrahan and Grad <ref type="bibr" target="#b13">[13]</ref>. A fast approximation to this process, sometimes called a splatting algorithm, is given by Shirley and Tuchman <ref type="bibr" target="#b18">[17]</ref>. A modified version of the Shirley and Tuchman Projected Tetrahedra (PT) splatting algorithm is used as the basis for the work herein. Wilhelms and Van Gelder <ref type="bibr" target="#b24">[23]</ref> discuss a number of relevant issues.</p><p>When considering the validity of these approximated images, it is important to keep in mind that interactive volume rendering is intended to give the scientist a working tool to provide a general idea of the spa-The PT algorithm requires the cells to be visibility ordered. Algorithms and techniques for visibility ordering the cells of meshes of any shape and cell structure are given by Williams in <ref type="bibr" target="#b26">[25]</ref>. The Meshed Polyhedra Visibility Ordering (MPVO) algorithms described in that paper are used herein.</p><p>We investigate techniques for achieving interactive performance with the PT splatting algorithm along with the MPVO algorithm, even for very large data sets. The techniques investigated are parallelization, graphics hardware support, rendering approximations and mesh filtration. Using the methods described herein, images of data sets with over 1,000,000 cells have been generated interactively (in less than 15-30 seconds)'. Using the filtering methods described herein, this performance is possible for even larger data sets.</p><p>In Section 2, we discuss our investigation of fast approximations to the PT splatting process. These approximations along with the P T algorithm and the highly accurate methods for direct volume rendering form a hierarchy of rendering methods that tradeoff image accuracy/quality and generation time. We briefly describe the role of high performance graphics hardware and parallelization in achieving the goal of interactive volume rendering. In depth coverage of these topics is given in <ref type="bibr" target="#b27">[26]</ref>.</p><p>In Section 3, reduced resolution meshes are discussed. The goal is to reduce the number of cells rendered so the rendering time is improved with the minimum possible degradation in image value. tial distribution of the scalar field and roughly identify areas of interest, e.g. extrema or hot-spots, and not necessarily to create a highly realistic or precise image for publication purposes.</p><p>In other words, this environment is intended to be a data previewer for the scientist. He or she might use it in an analogous way to a professional photographer who uses a Polaroid camera to quickly check several different shots before using a 4x5 view camera for the final photo. These fast approximations can also be useful for setting initial viewing parameters.</p><p>There is a high degree of abstraction inherent in direct volume rendering using projection methods; every cell in the mesh contributes to the image. Therefore approximation errors if randomly distributed over the image may not be significant. However, if the mesh is highly regular, then these errors can be magnified and be highly noticeable.</p><p>For this paper, only tetrahedral cells are considered. The MPVO algorithm can deal with any cells. However, the PT splatting algorithm deals only with tetrahedra. <ref type="bibr">Wilhelms and Van Gelder [23]</ref> discuss the splatting of right-angled parallelepipeds (bricks). Alternatively, nontetrahedral cells can be tetrahedralized SO the PT algorithm can be used.</p><p>To highlight areas of interest in the scalar field S(z, y, z ) and de-emphasize other areas, user-specified color and density transfer functions rc,(S(z, y, z ) ) , scalar field value to a color K , , reg, tcb and density p. The density is used to calculate an opacity value.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>rc,(S(z, Y, f ) ) , K b ( S ( Z , Y, z ) ) , and P(S(C1 Y, 2)) map a</head><p>We start with an overview of the splatting process, 2 Rendering approximations then describe Shirley and Tuchman's PT algorithm, and then describe our fast splatting approximation algorithms, and finally present comparative timings and discuss image quality. In this Section, we investigate a number of fast rendering approximations that support the goal of interactive volume rendering. The Shirley and Tuchman PT algorithm, which has been modified and optimized for a high performance graphics workstation, is used as the basis for these approximations and also as a standard of comparison, both for image information content and rendering speed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.1</head><p>In splatting, as in splatting a snowball against a wall <ref type="bibr" target="#b22">[21]</ref>, each cell is projected onto the screen in visibility order from back to front to build up a semitransparent image. The contribution of each cell to the image is proportional to the thickness of the splat. The splat is rendered as a set of up to four triangles which have a common vertex at the point of maximum thickness of the splat. At this common vertex, the opacity is nonzero; at all other vertices the opacity is zero. The opacity and color at the vertices of each triangle are interpolated over the splat. Wilhelms and Van Gelder <ref type="bibr" target="#b24">[23]</ref> describe three possible interpolation methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Overview of the splatting process</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Projected Tetrahedra algorithm</head><p>The P T algorithm works by compositing into an image the polygonal projection of each cell, called the cell's footprint, onto the viewing plane. Each footprint is subdivided into from one to four triangles, depending on the projection, and then rendered as a set of triangles.</p><p>For tetrahedra, there are only two combinatorially different projections; they are shown in <ref type="figure" target="#fig_2">Figure 1</ref> as cases 1 and 2. Cases 3 and 4 are degenerate instances. My experiments show that, for irregular meshes, case 1 occurs approximately 40% of the time, on average, and case 2 approximately 60%. Cases 3 and 4 occur less than 5% of the time. In what follows, only cases 1 and 2 are discussed, the extension to the degenerate cases is obvious.</p><p>Each 2D footprint has a "nonzero thickness" (NZT) vertex as shown in <ref type="figure" target="#fig_2">Figure 1</ref>. For each cell, the opacity at the N Z T vertex is computed as described below.</p><p>The opacity at the remaining vertices is set to zero. The color and density is calculated using Equations 1 and 2 as explained below.</p><p>Using the optical model for a volume density described in <ref type="bibr" target="#b18">[17]</ref> or <ref type="bibr" target="#b28">[27]</ref>, the P T method assumes the density and color are constant along a ray t through a cell. This leads to Equations 1, 2, and 3, where tl and t2 are the cell entry and exit points of a ray through the NZT vertex. S is the scalar field. Ired(t) is the cumulative intensity of red light at point t on a ray traveling towards the eye. As suggested in [13, 17, 241, the projection of a polyhedron can be approximated by a collection of Gouraudshaded polygons. The graphics hardware linearly interpolates the color and opacity specified at each vertex over the interior of the polygon. Also, the hardware is used to blend the new and old color for each pixel. The remainder of the splatting process, cell visibility ordering, decomposition of the polyhedral cell into polygons, and calculation of color and opacity for each polygonal vertex is done in software. The P T and MPVO algorithms and the rendering approximations were parallelized for a MIMD architecture with graphics hardware. All timings reported herein, both serial and parallel, are from a Silicon Graphics 4D/360VGX graphics workstation.</p><p>The parallelization of the splatting phase is straightforward. Each CPU takes a cell and splats it in parallel.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">The rendering approximations</head><p>To determine the feasibility of even faster methods than the PT algorithm, several rendering approximation methods were investigated. Each method involves a trade-off of image accuracy/quality for faster generation time. The attenuation factor U for a given data set is calculated by adjusting U until the approximated image matches as closely as possible the corresponding image produced by the PT method. The attenuation factor need be calculated only once in a preprocessing step.</p><p>For case 1, only one triangle is output, the single frontfacing or back-facing triangle, for case 2, the two frontfacing triangles. Each triangle is rendered with a single color and opacity, the precomputed average value for the cell described above.</p><p>Images generated using the VOX approximation are shown in <ref type="figure">Figure 3</ref> and Color <ref type="figure">Figure 3</ref>; attenuation factors of 2.25 and 0.1, respectively, were used.</p><p>(See wlor plates, p. CP-5.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2">Uniform Thickness Slab approximation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Serial 6 CPUS</head><p>The next approximation, the uniform thickness slab (UTS1) approximation, treats each cell as a slab of uniform thickness. The opacity for each vertex v is calculated as <ref type="figure">a = ap(S(v)</ref>), where a is an empirically determined constant. Interesting and useful visual effects can be achieved by varying a between 0.1 and 2.5. See <ref type="figure">Figures 4 and 5</ref> where a is 1.8 and 0.4, respectively. The color for each vertex is simply tcr(S(v)), rcg(S(v)) and tce <ref type="figure">(S(v)</ref>). The vertex colors and opacities are calculated in a preprocessing step and stored as a single packed 32-bit integer for each vertex.</p><p>Rather than perform a case analysis to determine the splat profile, all front-facing faces are rendered. This technique is fast since the MPVO data structure contains information about which faces are front-facing.</p><p>A variation of this method, called UTS2, is to render the single front-facing or back-facing face for case 1 projections. This requires extra calculation to determine the footprint; but it results in about 25% fewer polygons being rendered.</p><p>Images generated with the UTSl method are shown in Figures 4 and 5 and Color <ref type="figure" target="#fig_3">Figure 2</ref>. An image from the UTSS method is shown in Color <ref type="figure">Figure 4</ref>. An attenuation factor of 0.15 was used for both color images. The UTSl method was somewhat faster than the UTS2 method for serial use. Both UTS methods were twice as fast as the PT method in serial mode. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3">Wedge approximation</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Serial 6 CPUS</head><p>The final method considered here, the wedge (WED) approximation, decomposes each splat into triangles as shown in <ref type="figure" target="#fig_2">Figure 1</ref>. Initially, the centroid was used as the NZT vertex for case 2 because it was faster to calculate than the N Z T vertex used by the PT method.</p><p>However, the image quality was not good; therefore the NZT vertex, as calculated by the P T method, had to be used.</p><p>The color and opacity for each vertex is calculated in the same way as in the UTSl method. For case 1, the color and opacity for the N Z T vertex is just the color and opacity for that vertex. For case 2, the color and opacity for the NZT vertex is the average of the color and opacity at the four cell vertices. The opacity is set to zero at the remaining vertices of the footprint. attenuation factor a used in the WED method is 0.6.</p><p>The WED approximation was not significantly faster than the PT algorithm; and its image quality was noticeably inferior. Therefore this approximation method was not considered useful. <ref type="table" target="#tab_2">Table 1</ref> shows comparative timings for these five methods, for 71,680 and for 593,920 tetrahedra, both for serial and for parallel execution using 6 CPUS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.4">Summary</head><p>The execution time for the PT splatting method, for data sets up to 600,000 cells, was brought into the interactive range by the use of graphics hardware and parallelization. Through the use of the suite of approximations described above, in particular the UTSl method, interactivity was achieved for serial rendering of data sets of over 1,000,000 cells. Using the UTSl approximation, a data set of 1,003,520 cells was rendered serially in 34.0 seconds. That same data set was rendered in parallel using the VOX method in 16.3 seconds. In comparison, the time to render that data set using the PT method in serial was 79.6 seconds, and 30.2 seconds in parallel.</p><p>It was found that the size of the image generated had little effect on the time of generation. An image that filled the entire screen took less than 2% longer than one that was one inch square.</p><p>The UTSl method was the fastest of the approximation methods for serial execution; and surprisingly, its images were the best approximation to the PT method's images, especially if the attenuation factor was carefully set. Little difference was noted between the images of the UTSl and UTS2 methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(See wlorplates, p. CPS.)</head><p>The VOX approximation also gave good images but usually the voxel nature of the approximation was clearly evident. The VOX approximation is more valid when the cells are relatively small in terms of pixel coverage. For parallel usage, this method is the fastest of all the approximations. An explanation of why the VOX method outperforms the other methods for parallel execution is given in <ref type="bibr" target="#b27">[26]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Reduced resolution meshes</head><p>Even with parallelization, fast graphics hardware and the use of rendering approximations, for very large data sets, it still may not be possible to generate images interactively. For example the hardware rendering system may have an upper bound on the number of polygons per second that it can handle. Therefore, to achieve interactivity, it may be necessary to reduce the number of cells rendered by techniques such as: filtering (rendering only selected cells), by coalescing adjacent cells, or by retriangulating a subset of the vertices of the mesh. I refer to this concept as reduced resolution meshes. How best to create such meshes is an open question.</p><p>Filtering generally requires visibility ordering the entire mesh and may result in holes or gaps in the image. The coalescing method can result in nonconvex cells not amenable to ordering by the MPVO algorithm.</p><p>The most promising approach seems to be to retriangulate a random subset of the original vertices of the mesh using a (conformed) Delaunay triangulation <ref type="bibr">[14,</ref> 251. This will decrease the time for visibility ordering since fewer cells need to be ordered; the MPVO algorithm can be used; and there will be no holes in the image. At this time, algorithms and implementations of conformed Delaunay triangulations are in the research stage.</p><p>One way to render only selected cells is by rendering the maximal independent set of the adjacency graph of the cells of the mesh. (An independent set is a set of vertices in a graph, no two of which are adjacent. A maximal independent set is an independent set which will no longer be one when any vertex is added to the set.) Such a set can be calculated as follows. More flexibility in the level of filtration can be achieved by selecting cells at random in the mesh. In general random selection methods have a nice distribution property. A volume rendered image using 25% random filtering is shown in Color <ref type="figure">Figure 6</ref>. Comparative timings for these filtering methods are given in <ref type="table">Table 2</ref> for a 1,003,520 cell mesh.</p><p>Another technique is to discard every n-th cell that is output from the visibility ordering, possibly tagging adjacent cells to prevent their removal.</p><p>For any of these methods, it may be valuable to flag cells which have interesting or rare data values at their vertices so these cells are not filtered out. Such a determination can be made based on domain specific knowledge and/or on a histogram analysis of the data.</p><p>Low-reject, high-reject or band-reject filtering can be used to eliminate uninteresting data. Filtered cells can be flagged 'do-not-render' in a preprocessing step. Similar filtration could be achieved by the density transfer function; however, such filtration would then occur at run time.</p><p>Since the size of data sets continues to grow with the increase in hardware computing power, it seems that the concept of reduced resolution meshes may remain valuable for some time to come. It may be particularly useful when the data set is being previewed or the color maps are being selected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusion</head><p>We have examined several methods for achieving interactive volume rendering: approximations to the splatting process, the use of high performance graphics hardware, parallelization and reduced resolution meshes.</p><p>By the use of parallelization and splatting approximations, the goal of interactive volume rendering has been found to be feasible, even when the data sets are very large. Nonrectilinear data sets with up to 100,000 cells were rendered volumetrically in less than 2 seconds, data sets with over 1,000,000 cells in 16 seconds. Using the filtering methods described herein, this performance is possible for even larger data sets.  <ref type="table">Table 2</ref>: Comparative timings for two filtration methods using the P T Algorithm for 1,003,520 tetrahedra.</p><p>It will remain for computational scientists to validate the utility of these volume rendering techniques. They should be valuable for data previewing and for setting initial viewing parameters. The goodness of a particular approximation method depends on the specific data set being visualized, the viewpoint, .the transfer functions used, etc. The ultimate test is whether the scientist finds the image useful for understanding his or her data, and is not misled.</p><p>Sharp ismurfaces do not seem to be feasible for the splatting methods described herein. If the density transfer function simulates a set of very narrow band pass filters, then the density map will have a set of very narrow rectangular pulses. Since the P T method averages the density at the front and back faces of a cell, the P T method could completely miss an isosurface passing through the cell.</p><p>Solids or polygons can be embedded in a volumetrically rendered image by generating a new mesh using a Delaunay triangulation that conforms to the vertices of the old mesh and the geometric description of the embedded objects.</p><p>It has been pointed out <ref type="bibr">[17,</ref> 231 that because only 8 bits are used for the opacity channel on many high performance workstations this could lead to distortions in splatted images which are created using hardware opacity blending. This is due to roundoff error when a lot of cells have very small opacity. However, this was not observed to be a problem in the experiments that I performed. If an image was too transparent then the density map or attenuation factor was adjusted. However, it would be helpful to implement a volume renderer which did not rely on hardware blending in order to compare the the images.</p><p>When the MPVO algorithm is used, it outputs the cells in layers from front to back. Then the image unfolds as if a cutting plane perpendicular to the line of sight was sweeping over the image towards the viewer.</p><p>One of the most interesting discoveries in this work was the amount of information that could be gained by watching the image being rendered. The fine structure of the interior of the scalar field could be clearly discerned during the rendering process. It was known that watching this process could be useful; however, the degree of utility far surpassed my expectations.</p><p>The rendering process became an animation. It was quite fascinating to watch; sometimes it could be breath-taking. If the rendering time was significantly faster, or much slower, this effect would be lost. This way of experiencing data provides information that is not available by looking at a finished image, even with transparency. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Acknowledgement</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>of a solid region in a 2 D image [3]. Volume data is typically defined over a mesh. Meshes can be classified by the structure of their cells as rectilinear, curvilinear or irregular (unstructured). These terms are defined in '[7, 25, 261. Curvilinear and irregular meshes are also referred to as nonrectilinear meshes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>I</head><label></label><figDesc>distinguish between interactive and real-time performance. B~ smoothly under the control of a mouse.J mean an object on the Screen be rotated</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :</head><label>1</label><figDesc>I r e d ( t l ) is the cumulative result of a cell by cell ray integration up to the point t l . Similar equations apply for the green and blue channels. 0 = LS~T vertex I Projections of a tetrahedron onto the plane. There are four cases or footprints. The point marked as NZT is used as a non-zero thickness vertex for the triangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2</head><label>2</label><figDesc>and ColorFigure 1show volumetrically rendered images using the modified P T algorithm on a Silicon Graphics 4D/360VGX workstation. The MPVO algorithm for nonconvex meshes was used for visibility ordering. The image inFigure 2is of a simulated temperature field defined on a nonconvex irregular mesh of 13,499 tetrahedra comprising a MBB-Gehause solid modeling benchmark. The mesh was generated by a conformed Delaunay triangulation [14, 151.Color Figure1 is a density field defined on a curvilinear mesh of 187,395 tetrahedra from a simulation of a blunt-fin induced shock wave and turbulent boundary layer separation [SI.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>(Figure 2 :</head><label>2</label><figDesc>See color plates, p. CPS.) Image of an irregular mesh of 13,499 tetrahedra generated with the modified PT algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 : 8 Figure 3 : 25 A</head><label>48325</label><figDesc>This image was generated using the UTSl approximation with an attenuation factor of 1.This image was generated using the VOX approximation with an attenuation factor of 2.spin-lock provides mutually exclusive access to the graphics hardware when a graphics call is made. The parallelization of the visibility ordering algorithms is discussed byWilliams in [26].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>2.3. 1 Figure 5 :</head><label>15</label><figDesc>Voxel approximationThe vote1 (VOX) approximation precomputes an average color and opacity for each cell based on the average of the scalar data at the four vertices of the cell. This value is stored as a single packed 32-bit integer in the MPVO data structure along with the cell's vertex and adjacency information. The color IC,., for a cell c is calculated as:Kr, = Kr(awgScalarData(c)) This image was generated using the UTSl approximation with an attenuation factor of 0.4 similarly for the other two channels. The opacity is calculated as: a, = ap(avgScalarData(c)) where a is an empirically determined constant called the attenuation factor. Typically, 0.05 5 a 5 5.0 for the VOX method. The average scalar data is calculated by averaging the data values at the four vertices of the cell.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>For each cell c in the mesh, render c only if none of c's neighbors have been rendered. Regularity can be avoided in this procedure if the indices of the cells are randomly permuted. A disadvantage of this method is that the degree of the nodes imposes bounds on the level of filtration allowed. Typically, maximal inde-pendent set filtration of tetrahedral meshes results in approximately 20-25% of the cells being rendered. A volume rendered image using maximal independent set filtering is shown in Color Figure 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>l, 4, 9, 11, 12, 16, 19, 221, projection methods [2, 10, 13, 17, 19, 21, 20, 23, 24, 261, and hybrid methods [5, 61.</head><label></label><figDesc>There are three classes of techniques for direct volume rendering: ray tracing or ray casting [</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>WED I VOX I UTSl I UTSS</figDesc><table><row><cell></cell><cell></cell><cell cols="2">71,680 cells</cell><cell></cell></row><row><cell>PT</cell><cell cols="4">WED VOX UTSl UTS2</cell></row><row><cell>5.51</cell><cell>4.19</cell><cell>2.76</cell><cell>2.39</cell><cell>2.79</cell></row><row><cell>1.80</cell><cell>1.74</cell><cell>1.14</cell><cell>1.69</cell><cell>1.41</cell></row><row><cell></cell><cell></cell><cell cols="2">593,920 cells</cell><cell></cell></row><row><cell>P T I</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>The color and opacity for each vertex is calculated and stored in a preprocessing step. A typical value for the 46.40 34.75 23.42 19.13 23.42 16.46 16.33 10.05 16.27 12.45 Typical timings in wall clock seconds for volume rendering irregular data sets. All methods use the MPVO algorithm for visibility ordering and were executed on a SGI 4D/360VGX graphics workstation.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>(See color plates, p. CP-5.) 11 No Filtering I Maz Indep Set I 20% Random I 50% Random I</head><label></label><figDesc>11 79.6 sec. I 35.1 sec. I 33.4sec. I 55.9 sec. 1 CPUs II 30.2 sec. I 13.9sec. I 13.0 sec. I 21.6 sec. 1</figDesc><table><row><cell>11</cell><cell>. .</cell><cell>.. ~</cell><cell>..</cell></row></table><note>SerialI I 6</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Helpful conversations were had with Herbert Edelsbrunner, Peter Shirley and Allan Tuchman. This work was partially supported by the U. S . Department of Energy under Grant DE-FG02-85-ER25001, the Air Force Office of Scientific Research Grants AFOSR-90-0044, and Sun Microsystems Inc. I am grateful to Silicon Graphics Inc. for an equipment loan.</figDesc><table /><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Parallel Volume Rendering for Curvilinear Volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Challinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comp SOC -Proc</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Scalable High Performance Computing Conference</title>
		<imprint>
			<date type="published" when="1992-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han-Rahan</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIG-GRAPH Comput. Gr</title>
		<imprint>
			<biblScope unit="volume">Rendering</biblScope>
			<biblScope unit="page" from="65" to="74" />
			<date type="published" when="1988-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Computer Graphics Principles and Practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">San Diego Workshop on Volume Visualzzation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">P</forename><surname>Garrity</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Gr. S4</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="35" to="40" />
			<date type="published" when="1990-12" />
		</imprint>
	</monogr>
	<note>Raytracing Irregular Volume Data</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Volume Visualization of Sparse Irregular Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Giertsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comp. Gr</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="40" to="48" />
			<date type="published" when="1992-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fast Volume Rendering with Embedded Geometric Primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Giertsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Comp. Gr. Intl. &apos;92</title>
		<meeting>Comp. Gr. Intl. &apos;92</meeting>
		<imprint/>
	</monogr>
	<note>To appear in</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A Data Model for Scientific Visualization with Provision for Regular and Irregular Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lucas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Collins</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;91</title>
		<meeting>Visualization &apos;91</meeting>
		<imprint>
			<date type="published" when="1991-10" />
			<biblScope unit="page" from="298" to="305" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Simulationof Blunt-Fin Induced Shock Wave and Turbulent Boundary Layer Separation, A I A A Paper 84-0457</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Buning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AIAA Aerospace Sciences Conference</title>
		<meeting><address><addrLine>Reno N V</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1984-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Rendering of Unstructured Grid Data. Manuscript</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Koyamada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Miyazawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Japan Ltd</title>
		<imprint>
			<date type="published" when="1991" />
			<publisher>Tokyo Scientific Center</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Hierarchical Splatting: A Progressive Refinement Algorithm for Volume Rendering. A CM SIGGRA PH Comput. G r</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991-07" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="285" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Display of Surfaces from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">]</forename><surname>Ill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput. Graph. Appl</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Efficient Ray Tracing of Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">C M fians O R Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<date type="published" when="1990-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Area and Volume Coherence for Efficient Visualization of 3D Scalar Functions. San Diego Workshop on Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Crawfis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Gr</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1990-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Three-Dimensional Unstructured Grid Generation Based On Delaunay Tetrahedrization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Meshkat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ruppert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">I</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Third Intl. Conf. Numerical Grid Generation</title>
		<meeting>Third Intl. Conf. Numerical Grid Generation</meeting>
		<imprint>
			<date type="published" when="1991-06" />
			<biblScope unit="page" from="841" to="851" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">CDSmesh 3D Automatic Mesh Generator User&apos;s Guide and Reference. IBM Almaden Research Center</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Meshkat</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">A rendering algorithm for visualizing 3D scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sabella</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>; C M Siggraph</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Comput</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gr</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988-07" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="51" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A Polygonal Approximation to Direct Scalar Volume Rendering. San Diego Workshop on Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. G r</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="63" to="70" />
			<date type="published" when="1990-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Probes: Interactive Data Exploration on Arbitrary Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Speray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kennon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">San Diego Workshop on</title>
		<imprint>
			<biblScope unit="volume">Visualization</biblScope>
			<biblScope unit="page" from="5" to="12" />
			<date type="published" when="1990-12" />
		</imprint>
	</monogr>
	<note>Comput. Gr.</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Keeler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>V-Buffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visible Volume Rendering. A C M SIGGRAPH Comput</title>
		<imprint>
			<date type="published" when="1988-07" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="59" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rendering. A C M SIGGRAPH Comput. Gr</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="367" to="376" />
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
	<note>Footprint Evaluation for</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Interactive Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Chapel Hill Workshop of Volume Visualization</title>
		<meeting>Chapel Hill Workshop of Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1989-05" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Direct Volume Rendering of Curvilinear Volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Challinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Alper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ramamoorthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Vaziri A</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">San Diego Workshop on</title>
		<imprint>
			<biblScope unit="volume">Visualization</biblScope>
			<biblScope unit="page" from="41" to="47" />
			<date type="published" when="1990-12" />
		</imprint>
	</monogr>
	<note>Comput. Gr.</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A Coherent Projection Approach for Direct Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Comput. Gr</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="275" to="284" />
			<date type="published" when="1991-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Issues in Interactive Direct Projection Volume Rendering of Nonrectilinear Meshed Data Sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">San Diego Workshop on</title>
		<imprint>
			<biblScope unit="volume">Visualization</biblScope>
			<date type="published" when="1990-12" />
		</imprint>
	</monogr>
	<note type="report_type">Work in Progress Report</note>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Visibility Ordering Meshed Polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="126" />
			<date type="published" when="1992-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">Interactive Direct Volume Rendering of Curvilinear and Unstructured Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
		<respStmt>
			<orgName>Dept. of Computer Science, University of Illinois at Urbana-Champaign</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">A Volume Density Optical Model. To appear in Boston Volume Visualization Workshop &apos;92</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Gr</title>
		<imprint>
			<date type="published" when="1992-10" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
