<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Rendering Surface-Particles</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarke</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Netherlands Energy Research Foundation ECN</orgName>
								<address>
									<postBox>P.O. Box 1</postBox>
									<postCode>1755 ZG</postCode>
									<settlement>Petten</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Rendering Surface-Particles</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Surface-particles are very small facets, modeled as points with a normal. They can be used to visualize flow in several ways by variation of the properties of the particle sources. Here a new method is presented for the rendering of surface-particles. This method includes an improved shading model, the use of Gaussian filters for the prevention of spatial and temporal artifacts, an efJicient scan-conversion algorithm, the handling of occlusion and the simultaneous rendering of geometric objects and surface-particles. The synthesis of images with limited depth of field is described, which literally allows the scientist to focus on areas of interest.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The visualization of 3-D flow fields is one of the most challenging application domains in scientific visualization. Several techniques are used for the visualization of 3-D vector fields, but none of them is superior. The first strategy is to reduce the dimensionality of the data space. The 3-D space is intersected with surfaces (cross-section planes or the surfaces of objects) and the relevant data are shown on these surfaces as arrows, colors, contours [I, 21 or texture 131. Also, the 3-D vector fields can be converted to 3-D scalar fields, such as for instance helicity density. These 3-D scalar fields can be visualized as iso-surfaces [4], or with volume rendering [5, <ref type="bibr" target="#b5">6</ref>, 71.</p><p>The second strategy is to attempt to visualize the 3-D vector field directly. The simplest approach is the arrow-plot, where for each cell of a 3-D grid an arrow is drawn that indicates the direction and magnitude of the velocity. However, the projection of arrows can easily lead to wrong interpretations. Particle-based techniques lead to a better insight. Here particles are released and their motion through the flow field is shown.</p><p>Instead of the moving particles themselves, also their paths can be shown: particle traces or streamlines. Stream tubes, shown as shaded surfaces, give an improved perception of the 3-D structure of the path of the particle. Further, if the path is visualized with ribbons, not only the path, but also the rotation of the particle is shown.</p><p>Each of these techniques has its own advantages. Moving particles give a good indication of the direction and magnitude of the velocity, while streamlines, stream tubes and ribbons visualize the structure of the flow field. Su$ace-particles integrate both approaches: a particle is modeled as a small part of a surface. Many visualization techniques can be simulated by variation of the properties of the particle source <ref type="bibr" target="#b7">[8]</ref>. In section 2 the main features of surface-particles are described.</p><p>In <ref type="bibr" target="#b7">[8]</ref> the focus was on the dynamics and the creation of surface-particles. The rendering was done in a simple and straightforward way: particles were drawn as straight lines, rasterized with the Bresenham algorithm <ref type="bibr" target="#b8">[9]</ref>, and merged into a z-buffer. This is a viable approach if used in combination with 3-D graphics hardware support, because the poor quality is compensated for by the possibility for real-time rotation, but it is inadequate for high-quality presentation. The animations suffer from several artifacts, such as jagged edges and strobing. In this paper the shading and rendering of surface-particles is considered in detail. This leads to new techniques, which significantly improve the image quality, and also to a new way to focus on areas of interest.</p><p>Although particles are widely used, only few authors discuss their rendering. Reeves [lo] makes two simplifying assumptions. First, particles are assumed not to intersect other surface-based modeling primitives, and hence the rendering algorithm only has to handle particles. Second, particles are modeled as point light sources. This eliminates the hidden surface problem, because each particle adds light to the pixels that it covers, and does not obscure other particles. The particle shapes are drawn anti-aliased in order to prevent temporal aliasing and strobing, but this is not discussed in detail.</p><p>Sims [l 11 treats the rendering of particles in a more flexible and general way. Each particle has a head and a tail. Both have position, radius, color, and opacity as attributes. The shape of a moving particle consists of two circles, connected with tangent lines. All parameters are interpolated linearly from head to tail, and further, the opacity. falls off from 1.0 at the center to 0.0 at the edges, according to a linear or Gaussian function.</p><p>In the remainder of this paper an altemative technique for the rendering of particles in general, and surface-particles in particular, is described. In section 2, a brief review of the surface-particle concept is given. In section 3 the steps of the new rendering process are described: shading, filtering, scan conversion, and occlusion. Several variations and applications of this technique are presented in section 4. Finally, in section 5 the results are discussed and conclusions are drawn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Surface-particles 2.1 Particle model</head><p>A surface-particle is a very small facet. Due to its small size, the shape of the facet is irrelevant, and hence the surface-particle can be modeled as a point with a normal. Further attributes of a particle are the diffuse and specular reflection coefficients for the front and back side. These are used in combination with the normal for shading calculations.</p><p>Surface-particles are released in a flow field v(x) = surface-particle through the flow field can be calculated by integration of its position in time. Also, the normal n(t) can be determined by integration. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Particle sources</head><p>The surface-particles are generated by user-definable particle sources. The sources have geometric and timerelated attributes. The most important geometric attribute is the shape of the source. Obvious choices are points, lines, circles, ellipses, rectangles and spheres. Particles can be released from regularly or randomly distributed positions within the source. Each source generates particles periodically, i.e. after a pulse time T new particles are released from the same positions.</p><p>Also for the start time of particles within the pulse time a choice can be made between regular (or discrete: all particles released at the same time) and random (or continuous: for each particle a random time is used).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Application</head><p>The great strength of the surface-particle concept is that many different visualization techniques can be realized by various combinations of properties of the sources. If continuous release is used, then point sources give stream-lines, linear sources give ribbons or stream-surfaces, and circular sources give stream-tubes. If discrete release is used, then moving points, lines, and surfaces are generated, which deform under influence of the flow.</p><p>The moving surfaces that result are not explicitly calculated, but emerge from the collective behavior of many separate particles. For a solid and smooth appearance of, for instance, stream-tubes, a large number of particles, (&gt; l0, OOO) has to be used. In practice, however, the use of a limited number of particles gives a good result. The surface-particles generate a textured surface, which moves according to the flow. In other words, surface-particles have both the advantages of surface-based and particle-based techniques: the direction and magnitude of the velocity is visualized, as well as the structure of the flow field.</p><p>In <ref type="bibr" target="#b7">[8]</ref> a simple rendering technique was used for the surface-particles. No attention was paid to anti-aliasing, which leads to jagged edges and strobing in animations. In the following sections the shading and rendering is reconsidered, which leads to significant improvements in image quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Rendering surface-particles</head><p>In this section the rendering process for surfaceparticles is described. The elements of the graphics pipeline are treated in order. First, the calculation of the brightness and color of the particle is discussed. Second, the particle is transformed to screen space and filtered. Third, the filtered particle is scan converted, and finally, the values found are added to the image. The issue of occlusion is dealt with in a simple way.</p><p>The main aim for the described rendering process was to achieve good quality at a reasonable cost. This process serves as a reference model for the variations that are discussed in the next session.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Shading</head><p>For the calculation of the intensity I =(Ir ,Ig ,Ib) of the surface of the surface-particle a standard illumination model [12, 131 that incorporates ambient, diffuse, and specular reflection can be used. The sign of the dot-product me, where n is the unit normal on the particle and e is a unit vector in the direction of the eye, indicates whether we look at the front or at the back of the particle, and is used to select the reflection coefficients of the front or the back.</p><p>We assume that the projected area of a surfaceparticle is much smaller than that of a pixel, thus, not the intensity I of the surface, but the perceived brightness B of the particle is of interest. We therefore multiply the intensity I with the projected area of the surface-particle:</p><p>where A is the area of the surface-particle, and d is the distance from the surface-particle to the eye.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Filtering</head><p>After the shading calculation, the surface-particle is transformed to screen space. The attributes of the projected particle are its brightness B = (Br,BgrBb), the position on the screen c = [c, ,cy], and its projected velocity v = [vx, vy 1. This velocity not only represents the motion of the particle, but possibly also the motion of the virtual camera. We assume that the path of a particle within a frame can be approximated by a straight line, and that perspective distortion in this path can be ignored.</p><p>The next task is to display this surface-particle, which can be modeled as a moving Dirac-pulse B 6(c + v t ), on a raster graphics display in a frame of an animation. As units for space and time, we use the size of one pixel and the duration of one frame respectively.</p><p>Both space and time are discretized, which hinders an exact representation of the surface-particles. The simple assignment of the brightness to the pixel that contains the particle does not give a satisfying result. Consider for instance a particle that moves on a circle with radius 0.4. If the circle is centered around the center of a pixel, then this pixel is continuously on; if the circle is centered at the comer of a pixel, then four pixels are set altematingly.</p><p>In the frequency domain: a Dirac-pulse has an infinite, flat spectrum, while both space and time are band-limited. The standard solution from signal theory <ref type="bibr" target="#b13">[14]</ref> is: a) remove the high frequencies of the moving Diracpulse by convolution with a spatial low-pass filter h, (x , y ) and a temporal low-pass filter h, (t ); b) resample the result in space (and time), or, scan convert the filtered particle; c) reconstruct the original function, or, assign the sampled values to the pixels. For a very readable introduction on filtering in graphics see <ref type="bibr">[15, 161.</ref> A good choice for both h, and h, is a Gaussian. This function has the beneficial property that the result of convolution of a Gaussian with another Gaussian</p><p>gives again a Gaussian. The filtering properties are fairly good. High frequencies are strongly suppressed, but the transition from low to high frequencies is smooth, which gives a somewhat blurry result. By tuning the width of the Gaussians, however, a satisfactory compromise can be achieved between blur on the one hand, and strobing and aliasing artifacts on the other hand.</p><p>To describe the filtered particle, a local axis-frame where w, and w, denote the spatial and temporal width of the filters. The temporal width w, determines the motion blur. The length of the ellipse is proportional to w, hi: particles with high velocities lead to elongated ellipses. Also, the intensity per pixel f ( x , y ) is inversely proportional to 06 &amp;d o,,: the brightness of the particle is smeared out over the ellipse.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Scan conversion</head><p>The Gaussian has to be evaluated for each pixel. The first step for the scan conversion is the determination of a bounding box in ( x , y ) space around the It can therefore be calculated incrementally, which requires only two additions per pixel. Also, the coefficients of this quadratic function, which are functions of y , can be calculated incrementally for successive scan-lines. The calculation of the coefficients can be simplified if relative coordinates (x ', y' ) = (xc, , y -cy ) are used instead of absolute coordinates ( x , y ) . Also, this assures that the values of the coordinates remain within certain bounds, which allows the use of fixed-point arithmetic.</p><p>This technique is not efficient for elongated diagonal ellipses, where a tighter bound on the border of the ellipse would be advantageous. In practice, however, most filtered particles cover only a small number of pixels, and therefore the gain of the use of tight bounds is nullified by the required pre-processing.</p><p>So far only the rendering of a single particle has been discussed. We now consider how to construct an image made up from a combination of particles. If we assume that surface-particles are small, and that the number of particles per pixel is low, then the probability that a particle is covered by another particle is nearly equal to zero. If we further assume that the background is dark, so e a t particles cannot mask light coming from behind, we can use the same solution as in [lo]. The final image is thus the sum of the contributions of all separate particles: each particle adds light to the image, and does not mask light coming from behind. <ref type="figure">Fig. 2</ref> shows a result of the described rendering process: a ribbon and two stream tubes in a rotational flow field. To indicate the sources, particles are colored white here. The color at the inside of the stream tubes was defined as black, which has the effect of back-face removal. Note that due to the relatively low particle density the surfaces are transparent. The texture that results from the blurred particles allows us to discriminate between overlapping surfaces. This effect is even stronger with animations. Here a group of particles can be followed with the eye throughout the flow, so that this group remains relatively static and the other overlapping surfaces are blurred. In practice it is well possible to distinguish up to three surfaces or layers in this way. <ref type="figure">Fig. 3</ref> shows the use of standard, spherical lightemitting particles. No shading can be applied, and no distinction can be made between the front and back side of the particles. If we compare <ref type="figure">fig. 2 with fig. 3</ref>, then it is clear that shaded surface-particles lead to better results than standard particles. <ref type="figure">Fig. 4</ref> Opaque particles</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(See wlorplates, p. CP-7.)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 3 Standard particles</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Variations</head><p>The process just described leads to good results. In this section we consider variations of the process to further improve the range of applications and the results. If our aim were realism, we would consider topics such as scattering, self-shadowing, and wavelength dependent effects. However, this technique is meant for application in data visualization, where insight of the scientist in his simulation is the primary goal, and realism is one of the possible means to reach this goal. The variations discussed here show possible ways to enlarge this insight.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Hidden particle removal</head><p>The assumptions that a dark background is used, and that particles do not mask each other, limit the usefulness of the process. The simultaneous display of geometric objects and particles is important for practical applications, and occlusion is one of the most important depth-cues. We therefore extend the rendering process as follows.</p><p>Assume that a z-buffer is used for hidden-surface removal, and that the geometric objects are rendered first. For the particles a depth-sort algorithm <ref type="bibr" target="#b16">[17]</ref> is used: the particles are first sorted from back to front. Due to the small size of the particles, the sort is not as critical as in the standard depth-sort algorithm for polygons. Thus, an 0 (n log n ) algorithm can be used for the sort, and one initial sort suffices for a range of viewpoints.</p><p>During the scan-conversion the depth zp of the particle is compared with the depth zb stored in the z-buffer. If the particle is behind the objects (z,, &gt; z b ) then the contents of the pixel are not changed. If the particle is in front of the objects (zp &lt;zb), the opacity a is evaluated. For this we use</p><formula xml:id="formula_0">1 ,-r2/2) a = (1 -k,,)min(l, - 0 5 %</formula><p>where k, is the coefficient of transparency of the surface-particle. Finally the contribution f of the particle to the pixel, and the fraction (1 -a) of the intensity g of the pixel that is not obscured are added: <ref type="figure">Fig. 4</ref> shows that this leads to a better perception of the 3-D structure of the ribbon: the spatial ordering of the surfaces is now easier to understand. It should be noted however, that the use of the Gaussian for the opacity is only a rough approximation of the mutual coverage of small particles. A correct technique would be much more involved. As an example of the kind of problems to be solved, consider two particles. Motion blur turns the images of the particles in short lines or ellipses, with a head (at t = t and a tail (at t = to). If the heads or tails of the particles overlap, then the approximation is more or less correct. However, if a head covers a tail, then the particles reach the point of overlap at different times, and therefore they do not mask each other. Stochastic sampling in space and time 1191 of spatially prefiltered particles is a possible, but expensive solution to approximate a correct result.</p><formula xml:id="formula_1">g + (1-a)g +f.</formula><p>Another escape to get a physically correct result is to change the problem instead of the solution. So far, a particle was considered as point-sized, and the Gaussian was the result of filtering. If we consider particles as small Gaussian clouds that distort under influence of the flow field, then images such as <ref type="figure">fig. 4</ref> are the result, provided that we use a short exposure time for our synthetic camera. In other words, the shape of the particle is changed, and both h, and h, are Dirac-pulses.</p><p>The proposed solution for opacity also causes artifacts with respect to shading. Suppose we display a surface, built up from surface-particles. The number of particles N that covers a certain pixel is directly proportional to d 2 (the squared distance of the surface to the eye) and inversely proportional to n-e (the cosine of the angle between the normal on the surface and a vector in the direction of the eye). Each particle contributes fi to the value of the pixel and has opacity a,. The final intensity of the pixel is then given by</p><formula xml:id="formula_2">N -1 N g = f~ + x f i n ( 1 -a j ) * i = l j = i + l</formula><p>For simplicity, let's assume that all fi and aj are equal.</p><p>The preceding equation then reduces to:</p><formula xml:id="formula_3">N-1 g = f E (~-a )~ , o r k =O 1 -( 1 -a y g = f a</formula><p>If all aj are zero (transparent particles), then g = Nf , for other values of a, g approaches asymptotically the upper limit f 1 a for increasing N .</p><p>If the surface is diffusely reflecting, then the intensity of the surface is independent of its position and orientation. For transparent particles the shading correction proposed in section 3.1 exactly compensates for the dependency of N on the distance and orientation. For opaque particles, however, this compensation is too strong. An assumption of the compensation is that all particles contribute in the same way to the ultimate intensity, while for opaque particles only the particles in the front make a significant contribution. This artifact is visible in <ref type="figure">fig. 4</ref>: the silhouettes are too dark. If many opaque particles are used, a better result is achieved if no correction is applied to the shading.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Particle shape</head><p>In the scan-conversion algorithm a look-up table is used for the exponential function. We can fill this table in a different way to get other particle shapes. As an example, a rectangular pulse, centered around a point offset can be used. This one-dimensional function is rotationally swept and scaled during the scan-conversion process, which gives a ring. Many other variations for the shape are possible. Also, different profiles for separate color-components can be used. The main limitation is that the resulting particle is always rotationally symmetric (except for scaling), which excludes shapes like blocks or arrows.</p><p>If many particles overlap, the separate shapes can no longer be distinguished, and texture is perceived instead. This is discussed in more detail in [3].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Depth of field</head><p>One of the central problems in flow visualization is that the human visual system is limited with respect to the understanding of images of 3-D solid data-sets. This explains the popularity of cross-sections: a twodimensional selection of the data-set is much easier to understand. A disadvantage is that no information is provided about the environment of this cross-section. Instead, a more flexible technique would be welcome that allows the user to focus on areas of interest, while simultaneously information on the environment is provided.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 5 Limited depth of field</head><p>We can take the word fucus literally, and use an analogue from the real world. The value of a diamond is, among other aspects, dependent on its purity. One of the skills a jeweler has to master is to focus on the front surface of the diamond, and slowly shift the focus to the back surface, looking for inclusions. This is a skill that takes time to master, but fortunately, the computer simulation of this process for surface-particles is easy.</p><p>The   <ref type="figure">fig. 2</ref>, except that a limited depth of field is used. The focal plane intersects the first curl of the ribbon, and thus the red particles are clearly visible, while the yellow particles in front of them are blurred. The technique described in section 4.2 for occlusion cannot be used in combination with the simulation of depth of field, because particles that are blurred due to a lens and an aperture function do not mask each other.</p><p>The effect of depth of field as a tool for the selection of interesting areas is the strongest if put under user control. The process is too slow to realize this in realtime. A good altemative is to pre-compute a series of images with different positions with constant spacing of the focal plane, which can be stepped through by the user. Another possibility is to link the position of the focal plane to the position of a selected particle. This enables the user to follow the motion of this particle and its direct environment in focus, while simultaneously the remainder of the data-set is shown blurred.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Application</head><p>So far only a simple and artificial example has been used. <ref type="figure" target="#fig_2">Fig. 6 and 7</ref> show a practical application: the visualization of the numerical simulation of the air flow in a television set <ref type="bibr" target="#b21">[21]</ref>. The purpose of this simulation was to perform a set of parameter studies in order to decrease some critical temperatures. The simulation was done with the CFD-code FloTHERM (Flomerics, UK) which was especially developed for the analysis of heat-transfer in electronic systems. <ref type="figure" target="#fig_2">Fig. 6</ref> shows an oblique view of the interior of the television set, with the heat dissipating elements that induce the natural convection. Printed circuit boards are rendered in brown, transformers in blue, resistors in green, and elco's in purple. A wide ribbon was used to visualize the flow from the inlet to the outlets. <ref type="figure" target="#fig_4">Fig. 7</ref> shows a side view of the same ribbon with the tube (green), interior panels (blue) and perforated panels (orange).</p><p>These representations give the designer much more useful information than the standard produced 2D vector-fields. For an experienced designer it is quite clear from such images that especially the grids are not optimally placed. For example, the large rotation towards the backplane of the set should be avoided.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>A new method for the rendering of particles in general, and surface-particles in particular, has been presented. This method incorporates an improved shading model, the use of Gaussian filters for the prevention of spatial and temporal artifacts, and an efficient scanconversion algorithm. Several variations, including the treatment of occlusion and the use of altemative shapes were shown. The use of depth of field for the selection of areas of interest is new in scientific visualization, and was easily incorporated. The new method leads to a significant improvement of the images and animations, which makes the understanding of the flow field by the scientist much easier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(See wlorplates, p. CP-7.)</head><p>The problem of rendering a moving point is interesting from a tutorial point of view. Issues such as the purpose of filtering can easily be understood when explained for the simplest primitive imaginable. This makes rendering moving points a good start for a course in image synthesis, before the rendering of more complex and messy objects such as polygons or fractal landscapes is discussed.</p><p>An inherent problem of particle-based techniques is that the user has to decide where to put his particlesources. This can be time-consuming, and also there is a risk that interesting features of the flow are overlooked. Automatic intelligent determination of the type, position and dimensions of sources based on the characteristics of the flow field would be very helpful, but also requires a considerable further research effort. The work of Helman and Hesselink [22, 231 might provide a good starting point.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>For the system described in [ 81 second-order Runge-Kutta schemes were used.[v,(x,Y,z), v,(x,Y,z), v,(x,Y, z)l. The path of the</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 3. 4</head><label>14</label><figDesc>Local axis-frame (5,q) Fig. 2 Ribbon and stream-tubes in rotational flow field filtered particle. The value for x, ,follows from Occlusionx , = c, + k (latp, I + loqqx I) ,where k is a constant that indicates when the Gaussian can be considered as equal to zero. The other extrema are calculated similarly.Next, this box is clipped against the visible window on the screen. Finally, the value of f (x , y ) is evaluated for all pixels within the bounding box. Several techniques can be applied to speed up this calculation (see also<ref type="bibr" target="#b17">[18]</ref>). The evaluation of the exponential function can be replaced by a table look-up. For a single scanline the value of r2 is a quadratic function in x of the form:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 6</head><label>6</label><figDesc>effects of a lens and an aperture function of a camera are discussed in [20], and are used to generate images which have a depth of field. The light that is emitted from a point in object space is convoluted with a point-spread function. The width of this function, or, the circle of confusion, is dependent on the geometry of the camera and on the distance of the point to the focal plane. For points near the focal plane the diameter of the circle of confusion approaches zero. (See wlor plates, p. CP-7.) Thermal air-flow TV set, oblique view Courtesy data: C.J.M. Lusance, Philips CMT If a Gaussian is used as the point-spread function, the effect of a limited depth of field can be incorporated easily in the rendering of surface-particles by addition of the radius w, of the circle of confusion to 05 and q,: G~= w~ + w , +w,IvI, and cfq = w, + w, .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5</head><label>5</label><figDesc>is the same as</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7</head><label>7</label><figDesc>Thermal air-flow TV set, side view Courtesy data: C.J.M. Lasance, Philips CMT</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">(See colorplates, p. CP-7.)</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>For the generation and the calculation of the paths of the surface-particles, the system developed by Johan Stolk at ECN, as part of his Master's thesis project for Delft University of Technology, was used. Valuable comments on earlier versions of this paper were given by Frits Post (Delft University of Technology), Franklin Schuling (Philips Research Labs.), and Johan Stolk (GIG). Clemens Lasance (Philips, Centre for Manufacturing Technology) provided very interesting and complex data-sets, which served as a severe test for the techniques described here.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Scientific Visualization at NASA&apos;s Numerical Aerodynamic Simulation Facility. Computer Graphics and Flow Visualization in Computational Fluid Dynamics, Von Karman Institute for Fluid Dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Walatka</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">P</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Series</title>
		<imprint>
			<date type="published" when="1987-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-G</forename><surname>Pagendarm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3D Computer Graphics in Flow Visualization. Von Karman Institute for Fluid Dynamics</title>
		<meeting><address><addrLine>Bruxelles, Belgium</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Spot Noise -Texture Synthesis for Data Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Wljk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="309" to="318" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lorenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cline</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Keeler</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>V-Buffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visible Volume Rendering</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="59" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A Rendering Algorithm for Visualizing 3D Scalar Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sabella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="51" to="58" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">Rendering</biblScope>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stolk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wijk</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van</surname></persName>
		</author>
		<title level="m">Surface-Particles for 3D Flow Visualization, Proceedings of the Second Eurographics Workshop on Visualization in Scientifrc Computing</title>
		<meeting><address><addrLine>Delft, The Netherlands</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1991-04" />
			<biblScope unit="page" from="22" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Algorithm for Computer Control of a Digital Plotter</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Bresenham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM Systems Journal</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="25" to="30" />
			<date type="published" when="1965" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Particle Systems -a Technique for Modeling a Class of Fuzzy Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Reeves</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Particle Animation and Rendering Using Data Parallel Computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sims</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page">13</biblScope>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Illumination for Computer Generated Pictures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bui-Tuong P</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="311" to="317" />
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Models of Light Reflection for Computer Synthesized Pictures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<date type="published" when="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">An Introduction to the Analysis and Processing of Signals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Lynn</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<pubPlace>MacMillan, London</pubPlace>
		</imprint>
	</monogr>
	<note>Third Edition</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">What We Need Around Here is More Aliasing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Retum of the Jaggy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="82" to="89" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A Solution to the Hidden Surface Problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Newell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Newell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sancha</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM National Conference</title>
		<meeting>the ACM National Conference</meeting>
		<imprint>
			<date type="published" when="1972" />
			<biblScope unit="page" from="443" to="450" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Creating Raster Omnimax Images from Multiple Perspective Views Using the Elliptical Weighted Average Filter</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Greene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="21" to="27" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Stochastic Sampling in Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="51" to="72" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Synthetic Image Generation with a Lens and Aperture Camera Model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Potmesil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chakravarty</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics I</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="85" to="108" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Numerical Simulation of Natural Convection Heat Transfer in a Television Set</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Lasance</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hesselink</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Heat Transfer in Electronic Equipment</title>
		<imprint>
			<biblScope unit="volume">171</biblScope>
			<biblScope unit="page" from="27" to="36" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
	<note>IEEE Computer</note>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hesselink</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
		<title level="m">Surface Representations of Two-and Three-Dimensional Fluid Flow Topology</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<idno>389-399. 192-198.</idno>
		<title level="m">Proceedings Visualization&apos;90</title>
		<meeting>Visualization&apos;90<address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983" />
			<biblScope unit="page" from="75" to="79" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
