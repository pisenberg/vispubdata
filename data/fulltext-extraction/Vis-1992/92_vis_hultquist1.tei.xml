<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Constructing Stream Surfaces in Steady 3D Vector Fields</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P M</forename><surname>Hultquist</surname></persName>
							<email>hultquist@nas.nasa.gov</email>
							<affiliation key="aff0">
								<orgName type="institution">Numerical Aerodynamic Simulation Systems Division NASA Ames Research Center</orgName>
								<address>
									<addrLine>Mail Stop T045-1 Moffett Field</addrLine>
									<postCode>94035-1000</postCode>
									<region>California</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Constructing Stream Surfaces in Steady 3D Vector Fields</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>A streamline is a curve which is everywhere tangent to a fluid velocity field. A stream surface is the locus of an infinite set of such curves, rooted at every point along a continuous originating line segment, o r rake. A stream surface may be approximated b y the triangular tiling of adjacent pairs of integrated streamlines. Such a surface may be refined by repeatedly splitting the widest of the ribbons b y the insertion of new curves. A more eficient method begins with a discretization of the rake. These particles are repeatedly advanced a short distance through the flow field. New polygons are appended to the downstream edge of the surface. The spacing of the particles is adjusted to maintain an adequate sampling across the width of the growing surface. This approach more eficiently accesses the flow field volume data and produces a better distribution of points over the two dimensions of the stream surface.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Tangent curves and narrow ribbons are often used to depict the velocity field of numerically simulated fluid flows, but the visual interpretation of such images is often difficult. More recent efforts have generalized the technique to construct a two-dimensional tangent surface. These sheets are more visually effective, but their construction is much more time-consuming. The curve and ribbon methods are described here, followed by a description of some earlier methods for stream surface construction. These concepts set the stage for the improved surface construction algorithm described in the remaining sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Curves and Ribbons</head><p>Many methods of vector field visualization depend on the calculation of tangent curves through the field. When the field is represented by a grid of sample points, the calculation of these curves is generally performed using numerical integration over some piecewise interpolant. If the field is the velocity of a fluid, each curve defines the path traveled by a massless particle advected through the flow; such curves are called st ream lines.</p><p>Most flow visualization packages allow the user to specify a set of initial points from which a set of these curves is computed. This set of points is often called a rake, a name taken from the array of tubing used in wind tunnels to introduce multiple streams of smoke into the flow.</p><p>Careful use of depth cues can aid in the interpretation of such images. Intensity cueing, stereopsis, and motion are perhaps the most commonly applied methods. Another aid is the representation of each curve as a narrow ribbon e.g. <ref type="bibr">Belie [l]</ref>, <ref type="bibr">Kerlick [9]</ref>) or a spacefilling and shade d cylindrical tube (e.g. <ref type="bibr">Dickinson [2]</ref>, <ref type="bibr">Haimes [5]</ref>).</p><p>Schroeder and his colleagues [13] describe a model called the stream polygon. The deformation of an infinitesimal fluid element is tracked along the length of a streamline. This deformation is depicted graphically by the changing shape of a sequence of polygons placed at regular intervals along the computed curve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Stream Surfaces</head><p>Just as a streamline is the locus of a single point advected over time, a stream surface is the twodimensional locus of an advected infinitely-malleable initial line segment. Alternatively, the sheet is the locus of all the streamlines with a seed point on the initial line. The initial line is a continuous analogue of the initial seed point used in the placement of a single streamline.</p><p>A few carefully-placed rakes can create surfaces which clearly convey the shape of a complicated flow field. The shading and obscuration of a surface provides visual cues which help one to interpret twodimensional pictures of this three-dimensional model. Surfaces curve both across and down their length, and widen in divergent flow. Surfaces can be overlaid with texture to represent additional measures of the flow, can be rendered with variable transparency to mimic the appearance of empirical smoke injections.</p><p>Krueger <ref type="bibr">[ll]</ref> implemented a proof-of-concept system for the visualization of flow fields using a novel user interface called VideoDesk. A video camera was used to merge an outline of the user's hands into the three-dimensional space of the data. One of the visualization models supported in this environment was a simple stream surface, constructed with a polygonal tiling of adjacent pairs of streamlines. Ribbons which exceeded a specified width were truncated, with the latter portion represented by two narrower ribbons.</p><p>Helman [6, 71 has implemented a system which identifies the topologically significant curves on the solid boundaries of a vehicle. The software then attempts to construct the topological separatrices, that is, the stream surfaces which emanate from these lines and extend into the surrounding flow. Helman used a ribbon tiling approach to construct these surfaces, splitting the widest ribbons down their entire length. <ref type="bibr">Eder</ref> [3] developed a distributed system for computing stream surfaces. After the user specified the rake for a new surface, the system computed between fifty and two hundred curves using a vectorized code running on a Siemens-Nixdorf VP-200. These curves were copied into the memory of a workstation, and the surface so described resampled into a rectangular array of points. A two-pass filtering marked some of these points as extraneous, and the points which remained were tiled with polygons to represent the surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Problems</head><p>Typical flow fields diverge greatly and the surfaces embedded in such flows twist and fold with wild abandon. This deformation complicates the polygonal approximation of the surface. Divergence of the flow causes adjacent streamlines to separate, while shearing tends to widen the gap between points on the same time-line. The two-phase approach taken by Eder can therefore leave sparsely sampled regions in the finished polygonal sheet.</p><p>The adaptive ribbon-splittin methods of Helman and Kreuger produce a better fistribution of sample points over the two dimensions of a diverging surface; however, the complete tracing of individual curves results in scattered access patterns to the memory pages and cache lines of the sampled flow data. An improved algorithm (described here) interleaves the advancement of a row, or froni of particles. This approach more efficiently accesses the sampled field data and provides better control over the sampling density across the width of the evolving surface representation. An implementation of these ideas was built using the SuperGlue programming environment [SI.</p><p>Section 2 describes some of the mathematics of the stream surface concept. Section 3 surveys some methods for the polygonal tiling of ribbons, one of which is used in the advancing front algorithm described in section 4. Methods for controlling the density of particles across the advancing front are presented in section 5 . This paper concludes with a review of the advantages and the potential pitfalls of this new technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Mathematics</head><p>A stream surface is a twedimensional parametric surface embedded in the three-dimensional domain of the flow field. Constructing the surface may be viewed as the problem of generating a well-distributed collection of sample points over the two dimensions of that surface, followed by a polygonal tiling of those points. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Parameterization</head><p>An ideal stream surface is the locus of an infinite number of streamlines. Each one may be uniquely identified by the fractional displacement (s E [0,1]) of its seed point along the originating rake. The surface supports a second set of curves which are the advected images of the rake at an infinite sequence of downstream displacements. These curves, called time-lines in fluid flow, may be labelled by a param-</p><formula xml:id="formula_0">eter (t E [O,N]</formula><p>. These two sets of curves define a lustrated in figure l.</p><p>The surface is bounded on one edge by the rake itself, which defines the time-line ( t o ) . The edges of the surface are marked by streamlines (SO) and SI .</p><p>These are joined by the sequence of time-lines ttl.1, which are increasingly distorted by the flow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Polygonal approximation</head><p>This continuous two-dimensional sheet may be numerically approximated and depicted using polygons. The most strai htforward implementation creates a rectangular mesa of points at regular intervals in (s, t ) space. For each point ( s i , t j ) , the first coordinate defines the displacement along the rake of the containing streamline, while the second value defines the accumulated integration stepsize downstream along that curve.</p><p>Each streamline (si) may be computed by numerical integration using a fixed stepsize to produce a sequence of points y i , to) through (si , tn). An adaptive stepsizing metho cou d be used, if fo lowed by a resampling of the curve at fixed intervals. Normals may then be computed over this rectangular mesh and the result rendered. two-dimensiona 1' coordinate space over the surface, il-As described above, a simple rectangular mesh cannot adequately represent a highly convoluted surface without a massive number of sample points. Efficient, yet accurate, representation of the surface demands adaptive sampling over its two dimensions.</p><p>The sampling density along the length of each streamline may be controlled by adaptively adjusting the integration stepsize so that regions of high curvature are captured. These methods have been carefully analyzed and are trusted by the numerical scientific community.</p><p>The time-lines, which span the surface in the crossflow direction, also exhibit curvature; therefore, the approximation of the surface must be augmented by a varying number of samples along that dimension. The splitting of ribbons increases the density of samples across the polygonal surface. The surface construction methods of Helman and Kreuger, and the method presented here, all are based on the splitting of ribbons. The polygonal tiling of such ribbons is discussed in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Tiling of ribbons</head><p>There are a number of methods which have been used to construct a set of polygons to form a ribbon which spans the gap between a pair of curves. All of these methods create triangles which connect the seed points of the two curves and extend downstream. Each new triangle shares a common edge with its predecessor, and consumes a third point from one of the two bordering curves.</p><p>The entire ribbon is constructed as the result of a sequence of choices which advance along the two curves, producing a new triangle at each step. Two curves with ( N + 1) points in each can therefore be tiled with triangles in (2N choose N ) different ways.</p><p>Any one of several algorithms may be used to select a "reasonable" tiling from among these possibilities. Regular and globally-minimal tiling, shown in figure 2, have been used in the past. The present algorithm uses a locally-greedy algorithm which is depicted in figure 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Regular Tiling</head><p>The simplest method alternates sides, thereby consuming point values on the two curves at an equal rate. <ref type="bibr">Krueger [lo]</ref> used this method in the VideoDesk application. It works well when the flow field is well behaved; in highly sheared flow, lockstep connection of these points produces long skinny triangles. This tiling may also exhaust the points on one curve before reaching the end of the other. <ref type="bibr">Siclari [14]</ref> proposed normalizing the curves by arc length to overcome this difficulty, but this raises similar problems in helical flow. The curve which lies closest to the axis will be straighter than its partner, and triangles will once again span an increasingly greater distance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Minimal tiling</head><p>The problems caused by shear can be resolved by an irregular tiling of each ribbon. The construction and the display of such a tiling is more difficult, but the shape of these triangles is closer to isosceles. The surface which is globally minimal in some measure can be obtained by the method of <ref type="bibr">Fuchs,</ref><ref type="bibr">Kedem and Uselton [4]</ref>. This algorithm uses a dynamic programming approach to find the minimally-measured tiling which connects two closed loops of points. In this application the initial points of the two adjacent curves must be connected to one another, so a simpler version of the algorithm may be used. Helman [6, 71 used this method to construct surfaces of minimum total surface area.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>regular 7 minimal</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Greedy tiling</head><p>The globally-minimal algorithm requires all of the points on the bordering curves of each ribbon. No triangles can be created until all of the integration of the curves has been completed. A greedy tiling method produces similar results with less cost, and it can produce triangles for display before the entire sheet has been completed.</p><p>The tiling begins at the rake, and continues down the length of a ribbon. The two possible triangles at each iteration are compared; the one with the shortest leading edge is appended to the growing ribbon. In practice, when the curves are close together and well sampled, this greedy method has proven to produce results quite similar to those of the globally-minimal method. <ref type="figure" target="#fig_2">Figure 3</ref> illustrates the implementation used in the current system, in which two tracerstructures are used to generate the sequence of points which define each curve. Each tracer maintains the context required to advance a particle through a sampled vector field. Multi-step methods are supported by the storage of a short list of previously-computed points. Integration may be carried out in either the physical or the grid-are easily inserted into this advancing front of points when it is becomes too SDarSelV samded. and Doints can be removed when the iampfing belomes needlessly dense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">SweeDine 1 v left</head><p>The advancing front is represented by a linkedlist of alternating tracer and ribbon structures. Each ribbon holds pointers to its lefthand and righthand tracers. Each tracer, except those which create the streamlines (so) and (SI), produces points which are shared by two ribbons.</p><p>The labels "left" and "right" are simply conventions, since the rake is arbitrarily oriented in 3space. In fact, the actual implementation performs the sweeping advances in alternating directions across the front.</p><p>Each iteration across the front begins with the "leftmost" ribbon, and advances the particles on its two neighboring curves some short distance. The greedy minimal-width tiling algorithm generates each triangle, selecting whichever point produces the triangle with the shortest leading edge. A ribbon structure is used to connect these points with a sequence of triangles. At each iteration, the two most recently connected points (LO, RO) and their successors (Ll, R1) form a quadrilateral which must be split along one of its two diagonals. The shortest of the two diagonals ( LO, R1) or (Ll, RO)) forms the next quadrilateral.</p><p>The position of each point is recorded in physical space, computational space, and the surface parametric space. Each point record also carries an integer tag which indicates the index of its data written to the output buffers. A triangle is represented by the integer indices for the data of its three vertices. Each vertex is written only once, but its index usually appears in the triple for several triangles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Advancing front</head><p>A straightforward ribbon-splitting construction algorithm retains an entire curve until its neighbors become available. Only then may the point data and triangle indices be written out to describe the surface and its tiling. The greedy minimal-width algorithm maintains only a few points along each curve, and it outputs point and tiling information in a steady progression from the start of each ribbon to the far edge of the sheet.</p><p>By interleaving the advancement of a set of tracers, we can produce a well-sampled surface while maintaining good locality of access into the flow data.  When the diagonal <ref type="figure">( L 0 , R l )</ref> is selected, the righthand neighbor of the current ribbon is advanced until the two ribbons are once again the same length along the shared curve. If necessary, the third ribbon is brought abreast with the second, and so on. Each ribbon is advanced along its righthand side as long as the leading edge of each new triangle is shorter than that of it predecessor. This method keeps the front locally orthogonal to streamlines, tends to reduce the overall length of the front, and thereby provides better control over the sampling density. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Controlling the density</head><p>The advancing front of points forms a discretization of a cross-flow line on the ideal surface. Particles may be added to or removed from the front to maintain an acceptable sampling density across this line. Ribbons which encounter massive divergence of the flow may be truncated, thus tearing the surface around this obstacle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Adding a particle</head><p>A ribbon can be split by the insertion of a new tracer structure and a new ribbon structure into the linked-list which represents the front. One new triangle, shown in figure 4, must be added to the surface to make the transition from one ribbon to its two narrower replacements.</p><p>The test which determines when to insert a point must be efficient, since it is evaluated at every iteration of the ribbon advancement. High-order methods which measure the curvature of the front might be valuable in some applications, but simpler methods have proven themselves acceptable for most cases. Perhaps the simplest test requires the splitting of a ribbon when the width of the current quadrilateral grows to more than twice its height.</p><p>When a new particle must be added, it is identified by its location in the parametric coordinate-s ace of the surface. This new particle must have an &amp;,t location between those of the two particles <ref type="bibr">(Ll,</ref><ref type="bibr">R1]</ref> which have drifted apart. The three-dimensional physical and computational positions of this new particle must then be determined.</p><p>The simplest method merely interpolates in physical coordinates midway between the most recent points on the bordering curves. A more accurate method is to solve the initial value problem starting at <ref type="figure" target="#fig_11">(smjd, t o )</ref> , but this requires considerable expense.</p><p>A compromise solution periodically saves an interpolated point in the middle of each ribbon, perhaps every ten iterations. When a ribbon then needs to be split, one of these recent positions can be advanced a short distance to where the ribbon has exceeded acceptable limits.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Removing a particle</head><p>When a particle is deemed unnecessary, it is removed from the front. The adjoining ribbons are merged into a single, wider replacement. This requires the creation of three new triangles which make the transition between the leading edges of the two ribbons and the single leading edge of the new wider replacement. This transition is shown in figure 5, which also demonstrates that the merging of ribbons advances the new ribbon by one step along both its neighboring curves, and thus requires the subsequent advancement of the righthand neighbor as described above.</p><p>The test for when to merge ribbons must consider the abutting quadrilaterals of two neighboring ribbons. If these six points are roughly coplanar, and if their height is greater than their combined width, then merging should be considered. Note that failure to merge two ribbons produces needless additional polygons in the final result, while failure to split a ribbons can produce an inaccurate representation of the true surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Ripping</head><p>When a portion of the front is stretched rapidly, it is sometimes preferable to sever the front and to continue the independent advancement of these two por-tions. The software detects this condition by comparing the relative direction travelled by the pair (LO, RO) of adjacent particles. When these are very close and headed in almost opposite directions, then an obstacle to the flow is assumed to be near. The current ribbon is truncated, and its neighboring curves become bordering edges of two separate fronts.</p><p>This ripping of the surface is depicted in the color images, which depict a flow field computed by <ref type="bibr">Rogers [12]</ref>. This solution represents an incompressible flow impinging a vertical post mounted on a flat plate. Twin vortices are shed from this obstacle and the entire flow is reflected about a horizontal symmetry plane across the top of the data depicted here. <ref type="figure" target="#fig_9">Figure A</ref> is a side view with the flow passing from left to right; figure B shows the same surfaces from a three-quarter angle of view.</p><p>The grid defines a single cylindrical coordinatespace with 38 points in the vertical direction, 38 points radially, and 76 points about the circumference. This gives a total of 109,744 grid points, with position and velocity recorded at each point for a memory size of ( N x (3 + 3) x 4) = 2.6 Mbytes. This is a moderately sized solution, with present-day datasets now ranging in the one to two "Mpoint" range. Each surface was fully computed in about three wall-clock seconds on an SGI VGX-320, and each contains roughly 2500 triangles.</p><p>Figures C and D show three-quarter and top views of a stream surface which impinges the base of the post on the upstream face. The flow reverses direction in this region, and the surface tears in the presence of the incoming flow. Note the attenuation of the textured time-lines, and the increasingly acute angles these make with the streamlines. <ref type="figure" target="#fig_9">Figure E</ref> demonstrates the maintenance of the front orthogonal to the local flow direction. <ref type="figure" target="#fig_9">Figure F</ref> highlights the triangles which were inserted when ribbons were split in this highly divergent region.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>This algorithm has been implemented and used by the author to illustrate a number of flow field solutions. The code is currently being ruggedized for production use.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Advantages</head><p>This new algorithm provides a method for the interactive exploration of flow field data. It offers increased performance, produces improved sampling densities over the constructed surface, and allows the rapid display of interim results.</p><p>performance The ribbon-based methods are most easily implemented by calculating the full length of each new curve. This causes repeated access to the same vector samples, and this can increase the number of page and cache faults. The advancing front method uses spatial coherence to improve the memory access patterns.</p><p>sampling quality The advancing front method begins at the rake and works downstream across the width of the surface. The sampling density across this line can be continually adjusted to meet the demands of the local curvature of the field.</p><p>interaction The ribbon splitting methods repeatedly replace a single previously-computed ribbon with two narrower ribbons. If the user interface is designed to continually update an image of the refining surface, then that image must be entirely redrawn. Furthermore, the surface normals are thrown away and hew normals must be computed. The advancing front method produces no interim results which would require a full redisplay. Newly-computed triangles are simply drawn into the Z-buffer and color-planes of an evolving image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Pitfalls</head><p>These surfaces can be a useful tool for the investigation of flow field data. Like any other visualization tool, they can be dangerous to the unwary and misused by the unscrupulous.</p><p>accuracy of curves The representation of the surface cannot be any more accurate than the curves on which it is constructed. These curves are numerically integrated though a field which is defined by a piecewise interpolation over a set of numerically calculated sample values. Many opportunities arise for the introduction of error, and the gee-whiz factor of nicely rendered surfaces increases the risk that these considerations will be forgotten, ignored, or swept under the rug.</p><p>insufficient splitting If the test for splitting is insufficiently rigorous, then a lengthwise fold in the surface can develop between two adjacent points on the front. This crease can continue to grow in height, and will not be represented in the final result. Unfortunately, such folds are quite common in fluid velocity fields. This problem can be avoided by maintaining a sampling density on the front which is comparable to the local sampling density of the original 3D flow field data.</p><p>overeager merging If ribbons are merged excessively, the true shape of the ideal surface will be coarsely described by distracting facets. These artifacts may obscure important information in the underlying data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Summary</head><p>Flow fields can be effectively depicted using stream surfaces constructed by the polygonal tiling of adjacent pairs of streamlines. Splitting of these ribbons can be used to adaptively refine the polygonal approximation of the ideal surface. This approach exhibits poor locality of reference and complicates the display of interim results.</p><p>Maintenance of a front of particles is a more efficient method of generating a set of sample points over a twodimensional stream surface. The resulting triangles are approximately equilateral and of a size adapted to the local curvature of the surface. These surfaces have been used to depict structures in complicated flow field data.      </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Parametric space over a stream surface</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Regular and globally-minimal tiling.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Greedy minimal-width tiling of a ribbon.local computational coordinates. Transition across the boundaries of abutting or overlapping blocks of sample points is always carried out in physical space, since the computational coordinate-spaces of different blocks are incompatible.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Points new leading edge of t 6 e ribbon and the base of the caught-up = FALSE;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Splitting a ribbon.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Merging two ribbons.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Flgure A :</head><label>:</label><figDesc>Two stream surfaces shed from a vertical post in an incompressible flow field.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure C :</head><label>C</label><figDesc>Stream surface In the flow-reversal region near the base of the post on the wlndward side.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure E :</head><label>E</label><figDesc>Color-coded representation of the separate sweeps across the expandlng sheet.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure B :</head><label>B</label><figDesc>Three-quarter vlew of two stream surfaces, from above and leeward.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure D :</head><label>D</label><figDesc>The same stream surface viewed from above and textured with time lines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure F :</head><label>F</label><figDesc>The expanding surface with the splitting of ribbons marked by dark triangles.(See colorplates, p. CP-27.)</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>I wish to thank Tom Lasinski for his patient support of this work. I have benefited from the advice of Eric Raible, Fred Brooks, Jim Coggins, and Henry Fuchs. Thanks also go to Stuart Rogers for the use of his flow data. Tom, A1 Globus, Kris Miceli, and Mary Hultquist found numerous gaps in logic and spelling.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Some advances in digital flow visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Belie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">A I A A Aerospace Sciences Conference</title>
		<meeting><address><addrLine>Reno, NV</addrLine></address></meeting>
		<imprint>
			<publisher>AIAA</publisher>
			<date type="published" when="1987-01" />
			<biblScope unit="page" from="87" to="1179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A unified approach to the design of visualization software for the analysis of field problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">R</forename><surname>Dickinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Three-dimensional Visualization and Display Technologies</title>
		<imprint>
			<publisher>SPIE</publisher>
			<date type="published" when="1989" />
			<biblScope unit="volume">1083</biblScope>
			<biblScope unit="page" from="173" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Visualisierung von teilchenstroemungun mit hilfe eines vektorrechners</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erich</forename><surname>Eder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization of Flow Fields Using Vector Computers (diplomarbeit)</title>
		<meeting><address><addrLine>Munich</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-02" />
		</imprint>
	</monogr>
	<note>Master&apos;s thesis, Fachberiech Informatik, Fachhochschule Muenchen</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zvi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Samuel</forename><forename type="middle">P</forename><surname>Kedem</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Optimal surface reconstructions from planar contours</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Uselton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="693" to="702" />
			<date type="published" when="1977-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualization in computational fluid dynamics: A case study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Haimes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dave</forename><surname>Darmofal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;91</title>
		<meeting>Visualization &apos;91<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-10" />
			<biblScope unit="page" from="392" to="397" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Representation and display of vector field topology in fluid flow data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lambertus</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hesslink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="page" from="27" to="36" />
			<date type="published" when="1989-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Surface representations of two-and threedimensional fluid flow topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lambertus</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hesslink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;91</title>
		<meeting>Visualization &apos;91<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-10" />
			<biblScope unit="page" from="6" to="13" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Superglue: A programming environment for scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P M</forename><surname>Hultquist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Raible</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92<address><addrLine>Boston, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Moving iconic objects in scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Kerlick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;91</title>
		<meeting>Visualization &apos;91<address><addrLine>San fiancisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990-10" />
			<biblScope unit="page" from="124" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Myron</forename><forename type="middle">W</forename><surname>Krueger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992-02-26" />
		</imprint>
	</monogr>
	<note>Private communication</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Artificial Reality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Myron</forename><forename type="middle">W</forename><surname>Krueger</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>Addison-Wesley</publisher>
			<biblScope unit="page" from="175" to="176" />
		</imprint>
	</monogr>
	<note>second edition</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A numerical study of three-dimensional incompressible flow around multiple posts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rogers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kwak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Kaul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">A I A A Aerospace Sciences Conference</title>
		<meeting><address><addrLine>Reno, NV</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1986-01" />
		</imprint>
	</monogr>
	<note>AIAA Paper 86-0353</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The stream polygon: A technique for 3d vector field visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Volpe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorenson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;91</title>
		<meeting>Visualization &apos;91<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-10" />
			<biblScope unit="page" from="126" to="131" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Siclari</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989-07" />
			<biblScope unit="volume">245</biblScope>
		</imprint>
	</monogr>
	<note>Private communication regarding the picture on the cover of Science</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
