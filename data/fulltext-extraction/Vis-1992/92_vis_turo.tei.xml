<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Improving the Visualization of Hierarchies with Treemaps: Design Issues and Experimentation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Turo</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science &amp; Human-Computer Interaction</orgName>
								<orgName type="institution">Laboratory University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Johnson</surname></persName>
							<email>brianj@cs.umd.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science &amp; Human-Computer Interaction</orgName>
								<orgName type="institution">Laboratory University of Maryland</orgName>
								<address>
									<postCode>20742</postCode>
									<settlement>College Park</settlement>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Improving the Visualization of Hierarchies with Treemaps: Design Issues and Experimentation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Controlled experiments with novice treemap users and real data highlight the strengths of treemaps and provide direction for improvement. Issues discussed include experimental results, layout algorithms, nesting offsets, labeling, ,animation und small multiple displays. Treemaps prove to be a potent tool for hierarchy display. The principles discussed are applicable to many information visualization situations.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Treemaps are a novel method for presenting large hierarchical information spaces on planar display areas of limited size [9,131. A treemap is generated by recursively slicing the screen into rectangular bounding boxes to convey global structure (hierarchy). Individual node information is presented through display attributes such a s bounding box size and fill color. Two families of treemap algorithms have been developed for tiling 2-D planes: slice-and-dice, which alternates between vertical and horizontal screen slices ( <ref type="figure">Figures   2,3,4)</ref>, and top-down, which slices in only one dimension, either horizontal or vertical <ref type="figure">(Figure 1)</ref>. Treemaps combine features of multivariate coding and display layout to present hierarchies in a richly visual environment which fosters relative comparison of structures in the hierarchy.</p><p>Two experiments, one with UNIX users, and one involving employees of GEnie, a consumer information service run by GE Information Services, drive the discussion presented herein. Section 2 of this paper discusses the two primary treemap layout algorithms. Section 3 describes improvements to the slice-and-dice algorithm to further convey information about the hierarchy. Section 4 offers a sampling of current research directions. Section 5 describes the experiments conducted with ueemaps. Section 6 is the conclusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Partitioning Algorithms</head><p>Thepartitioning of rectangular screen region into a treemap can take one of two approaches: the slice-and-dice approach as previously described in [91 and the top-down approach <ref type="bibr">[12]</ref>, which is discussed below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Top-Down</head><p>Development ofthe top-down algorithm was motivated by the desire to preserve the structure (and user familiarity) of traditional tree diagrams, which flow from one side of the screen to the other (usually from top to bottom). The algorithm slices the rectangular region along one dimension and flows from the root (on one side of the screen) to the leaves (on the opposite side). The algorithm relies upon each node in the tree having a pre-determined weight, dependent upon a domain-specific attribute. An overview of the basic algorithm is given below using a top to bottom flow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TOP-DOWN ALGORITHM I . The bounding box of the root no&amp; is the entire treemap</head><p>display area. Make the root node the "current node".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Divide the bounding boxof the current node proportionally</head><p>along its vertical axis using its weight compared with the sum of the weightsof its children. This produces an upper region for the current node and a lower region for its children.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Partition the lower region along the horizontal axisamong the children based on their weights, creating a bounding box for each child. 4. Iteratively make each child the "current node" and go to step 2.</head><p>Essentially, the horizontal axis is recursively sliced and divided among the children. All of the leaf nodes of the tree eventually "touch" the bottom of the display. The area of each bounding box is determined by the weight attribute. For example, if the hierarchy in <ref type="figure">Figure 1</ref> was an organization chart with size representing salary and color representing years of service (the lighter grays representing the most years), large light gray boxes would indicate longterm employees who are well paid.</p><p>This concept of emphasizing importance through size is similar to the fisheye concept <ref type="bibr">[7]</ref>, though there are multiple points of interest in treemaps.</p><p>As the top-down approach to tiling planar areas limits recursive subdivision to one dimension, acceptable results are produced only for hierarchies of limited size. Testing indicates hierarchies of around 100 to 200 nodes overwhelm the top-down algorithm on typical displays with 640 x 480 As an example, the GEnie hierarchy used in the treemap experiment contained 120 nodes (products) in twolevels (product manager and product type). This hierarchy could not be displayed using the general top-down algorithm due to limited horizontal resolution; a modified top-down approach solved this by partitioning the verlicaf axis at the final level. This modified algorithm (displayed in <ref type="figure" target="#fig_4">Figure 5</ref> ) works well, but it is not generalizable to hierarchies that are not of a uniform, fixed depth.</p><p>The main benefit of the topidown design, therefore, is its ability to conform to traditional tree diagram conventions. With small hierarchies, traditional tree diagrams may be used in conjunction with top-down treemaps as inFigure 1, fostering comparative analysis while preserving traditional diagrammatic notation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">SI ice-and-Dice</head><p>The slice-and-dice algorithm avoids the problems of the top-down algorithm by recursively partitioning the planar display area along both dimensions. Much larger hierarchies, greater than 1,000 nodes, can be displayed <ref type="figure">(Figure 8)</ref>. The slice-and-dice algorithm is presented and discussed in detail in [91.</p><p>A slice-and-dice treemap presents the hierarchy as a series of recursively-drawn bounding boxes, sliced altematively  <ref type="figure">Figure 1</ref>, only drawn using the slice-and-dice algorithm.</p><p>Because of the quantity of information that can be presented, large treemap diagrams should be thought of as powerful visualization tools requiring a degree of familiarity. Since the slice-and-dice treemap proves to be the most viable for display of large hierarchies, all further discussion of memaps will assume partitioning along both dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Treemap Display Limitations</head><p>All static hierarchy presentations have limits as to the quantity of information they are capable of presenting on a finite display space. When these limits are reached, navigational techniques such as scrolling or panning must be used, creating the potential for loss of context <ref type="bibr">[ 11.</ref> Common character-based applications use a set number of lines to display the hierarchy. Graphical tree diagrams have more leeway: depending upon the drawing algorithm and the size of the display space, a hundred or so nodes can be adequately represented on screen without the need for panning or zooming. panning, and animation can extend these limits. <ref type="table">Table 1</ref> indicates display limits for binary trees using the above approaches with non-overlapping nodes. The formulas for tree diagrams assume no horizontal separation space for nodes on the leaf level and also assume enough vertical space to display all tree levels. The formulas for treemaps assume no offsets and leaf nodes of equal weight, which will generate square bounding boxes for this example. It should be noted that without offsets only the leaf nodes appear in the displays, although intemal structure can be inferred. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Degenerate Cases</head><p>Treemaps can display the largest hierarchies when the aspect ratios of the bounding boxes are approximately one. When this condition does not hold, information may begin to "drop" out of the display. Rather than having nodes with small weights or extreme aspect ratios disappear from the display, it is possible to set minimum node dimensions. With this approach nodes whose display size would normally fall below the resolution of the display medium are assigned some small constant width or height by borrowing display space from sibling nodes.</p><p>Although this approach prevents nodes from dropping out in many cases, it has its own limitations. When the number of such nodes to be partitioned along a given axis exceeds the resolution of the display along that axis, information will still disappear. Regions where this occurs can be indicated by a special color and zooming facilities provided. Black areas in <ref type="figure">Figure 8</ref> indicate clusters of nodes that are not displayed.</p><p>Since the display size (bounding box) of a node is determined by its weight, nodes typically drop out of the display in order of their weights. This "graceful degradation" preserves relatively important nodes while indicating where collections of relatively less important nodes are located.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Conveying Information</head><p>User disorientation is a problem when presenting large bodies of information, especially when users are confronted with unconventional display methods like treemaps. The GEnie and Unix experiments along with general use of TreeViz (a treemap based Macintosh directory visualization tool) have highlighted a number of usability issues and subsequent refinements. A few of the more important issues and refinements are:</p><p>nesting offsets user control of attribute mapping, node filtering, and animation small multiple displays zooming textual "signposts" sibling node sort order</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Nesting Offsets</head><p>Treemaps convey structure via containment (nesting and grouping) in the Same fashion as Venn diagrams <ref type="bibr">[9, 141.</ref> Nesting offsets give users conuol over the allocation of display space between internal and leaf nodes. Larger offsets put greater emphasis on intemal nodes and hence the structure of the hierarchy; smaller offsets emphasize leaf nodes. Without offsets only leaf nodes are directly visible; the intemal structure of the hierarchy must be inferred from the grouping of leaf nodes. Users viewing new hierarchies often need offsets in order to become familiar with the global structure of the hierarchy.</p><p>After a short period of use users generally prefer smaller offsets (0,2, or 4 pixels), as noted in the two experiments and through the use of Treeviz. Small offsets provide a degree of global context while still maximizing the display space available for the display of leaf nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Attribute Mapping</head><p>User confidence in the treemap application may be improved by providing the user more control over attributes which determine node size (weight) and color <ref type="bibr">[8,</ref><ref type="bibr">15]</ref>. <ref type="figure">Figure   2</ref>, for example, displays the same treemap as in <ref type="bibr">Figure 3,</ref><ref type="bibr"></ref> except that all leaf nodes have the same weight (the areas of the leaf nodes' bounding boxes are all the same).</p><p>Modifying these attributes through functions allows users to emphasize features in the data of varying importance. Inversion of attributes is a simple function that flips the order of importance: instead of salespeople with the largest profits having the largest bounding boxes, salespeople with the smallesl profits would have the largest bounding boxes. Logarithmic or power functions have proven useful for providing alternative views of the hierarchy.</p><p>Domain attributes may also be mapped to color. Quantifiable attributes (placed on a numeric scale) worked well with different luminosity levels of the same hue (maintaining constant saturation) in the GEnie experiment to represent profitability levels.</p><p>If a non-quantifiable attribute is to be displayed, the approach of assigning distinct hues to each attribute is effective. The Macintosh implementation of treemaps utilizes evenly separated hues while maintaining constant saturation and luminosity to convey different file types.</p><p>User control over the color is of primary concern as color preference varies by task and individual. Aesthetically pleasing color schemes can be preconfigured for the user and accompanied by a color key or chart for user reference 131.</p><p>One area of color control addresses the problem of color deficiencies and monochrome monitors: providing a transformation to a gray scale or patterns alleviates the problem. When distinct hues are eliminated, information can be conveyed via gray scale [6J.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Node Filtering</head><p>Filtering nodes allows users to concentrate on features of interest. In hierarchies users may wish to seeonly thosenodes satisfying certain properties. Examplesinclude: intemal nodes, leaf nodes, specified branches of the hierarchy, nodes of certain depths or nodes with a particular attribute (for example, all text files).</p><p>Two functions are useful for initial orientation: expanding a level at a time allows the user to gradually step down the hierarchy and view each level before proceeding further; expanding particular nodes allows users to view the detail of node(s) in the context of the complete hierarchy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Sibling Node Sort Order</head><p>The order in which sibling nodes are displayed within a parent can be used to further orient the user or provide additional information about these nodes (node type, rank, alphabetic order, etc.).</p><p>A concern specific to grouping sibling nodes in treemaps is that of display size. A very thin node between much larger nodes tends to become lost. It is often useful to group sibling intemal and leaf nodes separately, as leaf nodes are generally far smaller than intemal nodes. It is also advantageous to groupleafnodes togetherasanestedblock(whenoffsets have been specified) instead of nesting each individual leaf node. This nested block saves display space and also provides further distinction between leaf and intemal nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Animation: Relative vs. Absolute</head><p>Treemap animation was used in the GEnie experiment with positive results: growing and shrinking boundmg boxes reflected changes in the underlying data and conveyed these changes in a powerful way. Six months worth of GEnie product data were available, displayed one month at a time. Users were able to step the diagram through the months with a slider positioned beneath the treemap.</p><p>Animating a full treemap (one that fills up the entire display area) over a time sequence presents relative changes to the user. For example, suppose a hierarchy consisted of only two bounding boxes, each taking up 1/2 of the screen. If during the next animation sequence, the first box grows to occupy 3/4 of the screen, the diagram should be interpreted to mean "Relatively, the first node's weight is three times the value of the second node's weight."</p><p>From an absolute perspective, though, the weight of the two nodes may have changed in a number of ways: increase of the first node's weight with a smaller increase, no change, or a decrease in the second's; no change in the first node's weight with a decrease in the second's; or a decrease in the first node's weight and a larger decrease in the second's.</p><p>Treemaps can, however, be utilized for animation of absolute data if local maximums are known for the attribute which determines the weight. For example, in an application which displays daily stock market information with stock value as the size attribute, the day with the total highest stock values would be reflected in a treemap which occupies the full display area. The other days, with lower total values, would use treemaps which occupy a percentage of the total display area based upon their value divided by the maximum value. Using this method, the entire treemap would grow and shrink, and the area of each bounding box would reflect absolute data over the time period being examined.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Small Multiples</head><p>Treemaps promote relative comparisons and are particularly suited to the presentation of small multiple views or animation when relative comparisons are desired [151.</p><p>The GEnie experiment used this technique to display six months' worth of data side by side. Users were asked to interpret changes by following particular squares across the diagram and noting changes in size, position, and color. <ref type="figure" target="#fig_4">Figure 5</ref> is a small multiples view of the six months in the GEnie experiment using a subset of the product data. The As the products are always displayedvertically in the same order, a single product may be followed across the months to gauge performance. In this case the first product's revenue (size attribute) is expanding relative to the other products in the product category; the darkening gray indicates the profit of the product is changing. The widths of the sections indicate overall growth in this 6 month period.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.7">Zooming</head><p>Zooming allows the promotion of any node to full display size (the zoomed node becoming the new mot of the displayed hierarchy), providing space for the presentation of small cluttered regions. But navigational tools are a double-edged sword, for while they allow users to hone in on regions of interest, they also cut off users from previous contextual features.</p><p>Zooming was successfully implemented in the GEnie experiment. Users had the option of zooming in on any node in the display, thus allowing quick navigation through the hierarchy. Options to zoom back one level and zoom back to the original root were also provided.</p><p>Care should be taken to avoid dsorienting the user. The zoom effect, therefore, should incorporate some traditional visual cues (such as zoom lines or increasing or diminishing rectangle outlines) to identify what exactly is being zoomed in to or away from.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.8">Textual Signposts</head><p>Text labels can be used to further orient the user to the hierarchy if space is available. Nodes that are large enough to provide textual signposts are useful as landmarks in a sea of boxes. <ref type="figure" target="#fig_4">Figure 5</ref> gives an indication of how text labels may be utilized in a treemap application. Each node in the diagram has a text label in the upper left comer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Current Research</head><p>Current research directions have been greatly influenced by the usability studies and experiments that have been conducted thus far. We have found users to be generally receptive to the idea of treemaps but wishing to use them to display more familiar hierarchies. Tools for visualization are no more interesting than the data they present. Can treemap users mine the wealth in rich hierarchical data sets? We think there is great potential.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Queries</head><p>A capability that would allow users to specify queries and have the results shown by highlighting or blinking matching bounding boxes is the most prevalent request. Issues here relate to appropriate highlighting mechanisms and feedback to users. An offshoot of this involves implementation of dynamicqueries <ref type="bibr">[ 16,</ref><ref type="bibr" target="#b1">2]</ref>, whichallow users togeneratealarge number of queries in a short period of time via direct manipulation with sliders or other widgets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Aspect Ratio Perception Problem</head><p>Treemaps use a single numeric weight to determine the display area of a node in the hierarchy. Perceptual difficulties arise when area comparisons are made between nodes of differing heights and widths, as users cannot accurately gauge fine area differences between rectangles differing in both dimensions. <ref type="figure">Figure 2</ref> illustrates this problem -all of the leaf nodes have the same weight (area), but their heights and widths differ. Two-D representations are poor for companng linear values that are similar, but they can show greater ranges, a benefit in the case of file sizes which can range over six orders of magnitude. Display area can be used to rapidly locate nodes of interest, which can then be compared in detail via mouse tracking and dialog boxes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Dynamic Algorithms</head><p>In a dynamic environment it is useful to isolate global recomputation from local perturbations such as node insertion, deletion, or size changes. Treemaps allocate space in a relative manner, and as such are inherently susceptible to global recomputation. Current algorithmic research is concentrating on minimizing recomputation in dynamic environments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">2 1/2-D Treemaps</head><p>A "third" dimension can be added by using the 2-D rectangular area as the base of a 3-D solid. Increasing the visual vocabulary can provide for richer information resolution <ref type="bibr" target="#b3">[4]</ref>. Simply extruding the rectangles produces a Manhattan-like scene, where rectangular solids obscure one another. Using a single point in the third dimension creates pyramids, which do not obscure each other as much. The height dimension can code one more variable, and the location of the apex, Free movement of the perspective point can provide natural zooming and perspective. More interesting nodes, defined by nearness to the perspective point, receive more display space, a natural fisheye view. As is always the case with treemaps, nodes with greater weights (more interesting data points) also receive greater display space, as their base dlmensions are greater.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Multivariate Comparison</head><p>Treemaps have potential as a multivariate exploratory data analysis tool. Hierarchies can be created based on the degree of interest in a set of categorical variables <ref type="bibr">[IO]</ref>. The display space is partitioned amongst the categorical levels of each variable relative to their proportionate values. Treemaps can be generated either singly or as a series of small multiples. <ref type="figure" target="#fig_6">Figure 7</ref> shows a small multiples presentation of subject performance in the treemap vs. UNIX directory browsing experiment .</p><p>The 12 largest vertical bounding boxes represent the total time required by each subject to answer all questions. The horizontal partition for each subject represents the treemap questions on the top and the UNIX questions on the bottom; within each interfacecondition are the 7 individual questions. The 12 short horizontal bars show therelative performance of treemaps vs. UNIX for each subject. It is readily apparent that, in general, subjects performed faster using the treemap interface. Interactive browsing also shows that the global questions (largest boxes) took substantially more time to answer using UNIX. The same information is also presented in <ref type="table" target="#tab_2">Table 2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experimentation</head><p>The utility of treemaps was tested during the past year in two experiments. Both experiments were designed to reflect real-world situations and needs. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Directory Browsing Experiment</head><p>A within-subject counterbalanced experiment with twelve subjects was used to compare treemaps with UNIX (tcsh shell) for directory browsing tasks. A directory hierarchy with approximately 500 files and 50 directories was used. Subjects answered 7 questions with each interface. <ref type="figure" target="#fig_6">Figure 7</ref> presents a relative view of users performance and <ref type="table" target="#tab_2">Table 2</ref> presents a tabular view user performance measured in seconds per question. Results were analyzed using a I-way repeated measures ANOVA.</p><p>The first 5 questions were local in scope, dealing with particular files or directories. All local questions were correctly answered within the allotted time (5 minutes per question). On the local questions, statistically significant performance time differences (p = 0.05) were found for the first two questions, which favored UNIX. Since subjects all had at least one year of UNIX experience and no previous experience wih treemaps other than the 15 minute training period, it is possible that this effect may have been due to learning effects. Subjects performed comparably using either interface on the remaining questions that were of local scope.</p><p>Since treemaps present the entire hierarchy at once it was hypothesized that treemaps would be faster for questions that are global in scope. Global questions dealt with portions of the hierarchy larger that single directories. Statistically significant performance time differences (p = 0.05) were found for both global questions, favoring treemaps. Error rate analysis was also used as many of the subjects were unable to ahswer these questions correctly within the allotted time. Five subjects were unable to complete either one or both of the global questions correctly. A total of six errors were made as one subject could answer neither of the questions. All of the errors were made by subjects using UNIX. UNIX users made statistically significantly more errors (p = 0.05). All users successfully completed the global questions using the treemap interface, demonstrating the effectiveness of treemaps for global comparisons.</p><p>A few subjects remained after the experiment to use the treemap technique to visualize their own personal UNIX <ref type="figure">(See color plates, p. CP-16,</ref>  directories. Visualizing their own information from a new perspective proved to be both interesting and exciting.</p><p>Treemaps can significantly aid such tasks as locating large old files or clusters of files with similar attributes. Treemaps proved to be an effective visualization tool for file hierarchies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">GEnie Experiment</head><p>An experiment was conducted using a top-down treemap ( <ref type="figure" target="#fig_4">Figure 5)</ref> to display financial data for the product hierarchy of GE Information Services' consumer information service, the General Elecmc Network for Information Exchange (GEnie). Six months of GEnie data was usedfor each product, revenue and profit figures were noted.</p><p>The experiment utilized a between-group design with 18 GEnie employees and tested two versions of the treemap against hard-copy financial reports currently in use at GEnie. The treemap versions included an "animated" version, in which the data was stepped through one month at a time via a slider, and a "small multiples" version, in which all six months were placed side-by-side. Size, color and animation were investigated via twelve questions on revenue, profits and data trends. Users were timed for each question with a maximum limit of five minutes perquestion. Theresults were analyzed using a 1-way ANOVA.</p><p>The performance of both treemap groups was statistically significantly faster (p = 0.05) than that of the hardcopy group for tasks requiring users to identify global trends in revence and profitability across the six months. Size allowed the users to concentrate on products of interest (products that generated the most revenue) [7] and quickly answer questions related to high revenue; a hindrance to this was the aspect ratio problem mentioned earlier where products of similar revenue had to be compared manually.</p><p>Color was a potent tool for analyzing profit changes, and the low-saturated blues and reds (representing positive and negative profit levels, respectively) showed up on the screen in sharp contrast. Users found these colors satisfactory, but several seemed to be overwhelmed by the blend at times.</p><p>Animation and zooming were used to agreat extent, and users subjectively gave these features high marks; the problems mentioned above with relative animation surfaced here, however, andcontributed to some high response times for treemaps. Subjectively, there was a strong preference for the animated treemaps in terms of screen layout, information conveyed and capabilities. We did discover a tendency to not "trust" the diagram in the initial questions, given users' lack of experience with treemaps (even with training) and the aspectratioproblem mentionedabove. Thiscausedthetreemap users' times to be skewed upward in those questions. The tendency disappeared in the latter half of the experiment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>Treemaps represent a unique approach to effectively communicating information about large hierarchies, which contain information that users may previously have gleaned over a long period of time or overlooked entirely. Providing users with the capability to display the entire hierarchy allows information to be drawn from it that may not have been obvious via traditional means. Applications include file hierarchies, organizational charts, medical clinical trials, sales figures, stock portfolio analysis, budget allocationsthere are many possibilities. As information spaces grow in size and complexity, the need for data visualization tools will only increase.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Figure 1illustrates a traditional tree structure overlaid on its top-down representation. Offsetsare used toemphasize hierarchy structure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :Figure 3 :</head><label>13</label><figDesc>Top-Down, Size by Weight Slice-and-Dice, Size by Weight resolution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :Figure 4 :</head><label>24</label><figDesc>Slice-and-Dice, Size by Unit Slice-and-Dice, no offsets vertically and horizontally. Figure 3 displays the same hierarchy as in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Figure4 illustrates the same tree as Figure 3 with offsets removed. The maximum size of representable hierarchies decreases as offset size increases.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Top-Down with Small Multiplessmall multiple technique also applies to the concept of multivariate data display, discussed in Section 4.5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure</head><label></label><figDesc>apex skew, and the four sides can code additional properties in a manner similar to datajacks 13, 51. Leaf nodes become pyramids and internal nodes become flat top plateaus.Figure 6illustrates 2 1/2-D treemaps. True 3-D treemaps would be volumes partitioned on all 3 dimensions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Treemap UNIX Experiment Results</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>(See color plates, p. CP-16.)</head><label></label><figDesc></figDesc><table><row><cell cols="3">NodeSize256 128 64 32</cell><cell>16</cell><cell>8</cell><cell>4</cell><cell>2</cell><cell>1 (squares, pixels/side)</cell></row><row><cell>HorizontalResolutioninNodes 2 4</cell><cell cols="2">8 16</cell><cell>32</cell><cell>64</cell><cell>128</cell><cell>256</cell><cell>512</cell></row><row><cell>VerticalResolutioninNodes 2 4</cell><cell cols="2">8 16</cell><cell>32</cell><cell>64</cell><cell>128</cell><cell>256</cell><cell>512</cell></row><row><cell>TreeDiagram#Levels 2 3</cell><cell>4</cell><cell>5</cell><cell>6</cell><cell>7</cell><cell>8</cell><cell>9</cell><cell>10 log2(#leaves)</cell></row><row><cell>TreeDiagram#Leaves 2 4</cell><cell cols="2">8 16</cell><cell>32</cell><cell>64</cell><cell>128</cell><cell>256</cell><cell>512 D W W</cell></row><row><cell cols="3">TreeDiagram#Nodes 3 7 15 31</cell><cell>63</cell><cell>127</cell><cell>255</cell><cell>511</cell><cell>1,023 2*DW/NW-l</cell></row><row><cell>Treemap#Levels 3 5</cell><cell>7</cell><cell>9</cell><cell>11</cell><cell>13</cell><cell>15</cell><cell>17</cell><cell>19 log2(#leaves)</cell></row><row><cell cols="8">Treemap#Leaves 4 16 64 256 1,024 4,096 16,384 65,536 262,144 DW/NW*DH/NH</cell></row><row><cell cols="8">Treemap#Nodes 7 31 127 511 2,047 8,191 32,767 131,071 524,287 2*DW/NW*DH/NH-</cell></row><row><cell>5 12 Pixel by 5 12 Pixel Display Size</cell><cell></cell><cell></cell><cell cols="3">DW: Display Width</cell><cell cols="2">NW: Node Width</cell></row><row><cell>262,144 Total Pixels</cell><cell></cell><cell></cell><cell cols="3">DH: Display Height</cell><cell cols="2">NH: Node Height</cell></row><row><cell cols="7">Table 1 : Binary Tree Display Resolution</cell><cell></cell></row><row><cell>case, rotation).</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">The number of nodes that can be displayed by a treemap</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">can be an order of magnitude greater than traditional graphi-</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">cal tree diagrams. This is the result of the tiling approach</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">More advanced graphical diagrams such as cone trees [ 1 11</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">increase the display limit through the use of a virtual third</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="4">dimension at the expense of increased navigation (in this</cell></row></table><note>which packs the display space. Treemaps, though, have limits as well; as with previous presentation methods, zooming,</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 : Treemap vs. UNlX Experiment Results (in seconds per question)</head><label>2</label><figDesc></figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>Supported in part by the University of Maryland Systems Research Center under NSF Grant CDR-88-03012.</p><p>We would like to acknowledge the support of the members of the Human-Computer Interaction Lab, whose suggestions and criticisms have been greatly appreciated.</p><p>The Treeviz application, developed at the HCIL for the </p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Mame Creator Creation Date S i r e Scaled Weight Type Modification Date P a t h Information</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Navigational techniques to improve the display of large twodimensional spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Beard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Walker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behavior &amp; Information Technology</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="45" to="1466" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interactive Data Visualization using Focusing and Linking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Buja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Michalak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;91</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="156" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">The art of scientific visualization. Academic Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cox</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990-03" />
			<biblScope unit="page">20</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A framework for the automated drawing of d a b structure diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ding</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mateti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="543" to="557" />
			<date type="published" when="1990-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Visualization at work. Academic Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ellson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990-03" />
			<biblScope unit="page">26</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Feeney</surname></persName>
		</author>
		<title level="m">Gray Scale Diagrams as Business Charts. IEEE Visualization &apos;91</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="140" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Generalized fisheye views</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Fumas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM CM&apos;</title>
		<imprint>
			<biblScope unit="volume">86</biblScope>
			<biblScope unit="page" from="16" to="23" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Viewing large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Henry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hudson</surname></persName>
		</author>
		<idno>90-13</idno>
		<imprint>
			<date type="published" when="1990-05" />
		</imprint>
		<respStmt>
			<orgName>University of Arizona</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Tree-Maps: A Space-Filling Approach to the Visualization of Hierarchical Information Structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman ; T. Mihalisin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Timlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schwegler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;91</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">91</biblScope>
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
	<note>Visualization and Analysis of Multi-variate Data: A Technique for All Fields</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">B. Shneidennan. Personal Communication, 1991. B. Shneiderman. Tree visualization with tree-maps: A 2-D space-filling approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Card</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM CHI&apos;91</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="189" to="194" />
		</imprint>
	</monogr>
	<note>Cone trees: Animated 3d visualizations of hierarchical information</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A visual representation for knowledge structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Travers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Hypertext&apos;</title>
		<imprint>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="page" from="147" to="158" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">TheDynamicHomefin&amp;r: Evaluating Dynamic Queries in a Real-Estate Information Exploration System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Tufte ; C. Willimonandb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shneidman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGIR &apos;92</title>
		<meeting><address><addrLine>Cheshire, CT</addrLine></address></meeting>
		<imprint>
			<publisher>Graphics Press</publisher>
			<date type="published" when="1983" />
		</imprint>
	</monogr>
	<note>The Visual Display of Quantitative Information</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
