<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Terrain Rendering and Volume Visualization on the Princeton Engine</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Kaba</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">National Information Display Laboratory David Sarnoff Research Center CN5300</orgName>
								<address>
									<postCode>08543-5300</postCode>
									<settlement>Princeton</settlement>
									<region>New Jersey</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Matey</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">National Information Display Laboratory David Sarnoff Research Center CN5300</orgName>
								<address>
									<postCode>08543-5300</postCode>
									<settlement>Princeton</settlement>
									<region>New Jersey</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gordon</forename><surname>Stoll</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">National Information Display Laboratory David Sarnoff Research Center CN5300</orgName>
								<address>
									<postCode>08543-5300</postCode>
									<settlement>Princeton</settlement>
									<region>New Jersey</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herb</forename><surname>Taylor</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">National Information Display Laboratory David Sarnoff Research Center CN5300</orgName>
								<address>
									<postCode>08543-5300</postCode>
									<settlement>Princeton</settlement>
									<region>New Jersey</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pat</forename><surname>Hanrahan</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Princeton University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Terrain Rendering and Volume Visualization on the Princeton Engine</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Interactive visualization of large, multi-dimensional data sets has been limited by the computation and memory intensive nature of the rendering process. Interactive visualization has been possible only on relatively small data sets or at very low display update rates. This paper describes the implementation of truly interactive volume visualization and terrain rendering algorithms on the Princeton Engine Video Supercomputer. real-time digital television system simulator, it possesses many of the attributes necessary for interactive visualization: high resolution displays, high bandwidth YO, supercomputer class computational performance, as well as a local memory array large enough to store multiple Landsat scenes and data volumes. This paper demonstrates that it is possible to generate truly interactive terrain rendering and volume visualization by computing images in real-timeat multiple frames/second</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction 2 Previous work</head><p>Continuous, interactive display is an important component of visualization techniques for terrains and volumes. To obtain interactive visualization of large data sets, image quality is frequently sacrificed in favor of rendering speed. However, some applications of terrain and volume rendering require both interactivity and image quality. For example, in magnetic resonance imaging(MRI) and computer aided tomography(CAT), high quality images are necessary, and new instruments make it possible to acquire large data sets. 5122 is emerging as the new standard image size for MRI, with corresponding volumes approaching 5 123. An increasing number of source media produce 1 0 %~ volumes and Xray microtomography data sets now exceed 2 Gbytes <ref type="bibr">[7]</ref>.</p><p>Similarly, terrain data sets continue to grow in size. This is due largely to the increasing frequency of data set acquisition, the number of spectral bands acquired, and the increasing resolution of the images. For instance, AVIRIS data sets with 17m resolution are typically available at 512 x 512 pixels of 224 spectral bands. More common are Landsat Thematic Mapper imagery data sets with 28m resolution. At roughly 6K x 7K pixels for each of 7 spectral bands, Landsat TM data sets approach Volume and terrain rendering are areas of ongoing research, particularly on advanced and specialized architectures, including massively parallel ones. We limit our present summary to this category and refer the reader to the references [ 111 and <ref type="bibr" target="#b36">[22]</ref> for a more general overview of 3D imaging algorithms and systems.</p><p>Volume rendering algorithms for fast rotation on the Connection Machine highlights the importance of matching algorithm to architecture [201 by avoiding costly general communication using the grid router.</p><p>There are several other efforts worthy of special note.</p><p>There are many papers reporting volume rendering work on the Pixel Planes 5 <ref type="bibr" target="#b18">[12,</ref><ref type="bibr" target="#b20">14,</ref><ref type="bibr" target="#b31">28]</ref>. An architecture known as the CUBE was designed specifically for volume rendering <ref type="bibr">[lo]</ref>. The MF'P <ref type="bibr">[5,</ref><ref type="bibr" target="#b0">16]</ref> is an example of an early application of massively parallel architectures to digital terrain rendering. The MPP was an important precursor to the current generation of parallel systems, particularly SIMD machines.</p><p>References <ref type="bibr">[18,</ref><ref type="bibr" target="#b22">19]</ref> provide much of the background for our implementation of terrain rendering: our volume visualization effort is based on the RGBa projection algorithm found in <ref type="bibr">[6,</ref><ref type="bibr">17]</ref>. 350 Mbytes. Aerial imagery of even higher resolution and size puts even p t e r strains on display systems.</p><p>Our research focuses on developing interactive visualization algorithms for volume and terrain rendering on a massively parallel computer, the Princeton Engine (PE). The PE is a single instruction, multiple data (SIMD) computer. Since it was originally developed as a and MasPar computers, it differs from them in that it was designed specifically for continuous, real-time, digital signal processing and display. One processing element is typically assigned to each column of an image. The processor is a wide instruction word, custom digital signal processor (DSP) operating at 14 Mhz. The system can sustain simultaneous 1/0 at 1.4 and 1.8 Gb/s, respectively. This is sufficient bandwidth to acquire six video channels and to drive two HDTV displays at 6OHz.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Princeton Engine video supercomputer</head><p>When synchronized to an NTSC signal during realtime operation each processor can execute 910 instructions per video line. Memory for the storage of images and other data structures is distributed across the processors. A full complement of 2048 processors will use 1.2 Gbytes of video rate memory. <ref type="figure">Fig. 2</ref> provides an overview of the processor. A custom DSP was designed specifically to serve as a node in a parallel array. It contains a 16bit multiplier(MPY) and arithmetic unit(ALU), a 64 element multiport register file (with simultaneous read-write access) and special address generation logic to enable efficient table lookup and video frame buffer control. Each of these resources are connected via seven independent data busses.</p><p>Logic is provided to enable the conditional execution of instructions: individual processors in the SIMD array can turn on or off based on the state of the ALU status register, providing an efficient mechanism for Hillis and Steele style data parallel programming [91. In addition, the instruction sequencer provides efficient hardware level support for stack frames and program loop control. It is possible, for example, to modify the SIMD program counter based on the result of a reduction operation.</p><p>Unlike other SIMD systems, the Princeton Engine sequencer performs its own scalar operations without control passing between the Unix host and the parallel array. This was necessary to meet the requirements for real-time video processing. Only low level user data travels between the host computer and the parallel array. These resources permit subset implementations of C and FORTRAN 90 to support video rate programming. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>--28Mhz</head><p>A 144 bit instruction word allows independent control of all processor data busses, providing a significant degree of code compaction. In a single instruction cycle, combinations of ALU, multiplier, memory access, and interprocessor communication micro-operations can be performed. For example, an n-tap horizontal FIR filter, which involves the use of both functional units and the interprocessor communications channel, can be implemented in 7+n instructions. Normally, a horizontal 1D n-tap FIR filter would require n multiplies, n-1 nearest neighbor shifts, n+l reads, 1 write and n-1 adds; reference [4] provides detailed examples. In general, for signal processing algorithms, there is about a three to one code compaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 2 DSP processing element</head><p>The communication register (COMREG), shown at top right in <ref type="figure">fig. 2</ref>, is used by each processor to configure its interprocessor communication channel(1PC). Each processor uses its COMREG to configure one of four communication modes (normal, bypass, broadcast or receive), which establishes a connection mapping between processors. Normal mode is simple connection between adjacent processors. In broadcast mode a single processor transmits to an arbiuary number of receivers.  <ref type="figure">fig. 4</ref> shows a gaussian image pyramid [31 as it would appear on a display connected to the Princeton Engine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 4 Gaussian pyramid</head><p>However, the data from which the pyramid is constructsd does not reside on consecutive processors; it is spread across the entire processor array and reordered for output by OTS patterns. During the first half of the image, pixels are clocked from each processor; during the next quarter, pixels are clocked from every other processor; during the next eighth, pixels are clocked from every fourth processor; and so on as shown in <ref type="table" target="#tab_0">Table I.</ref> OTS patterns provide a powerful, essentially computation free method for reorganizing output data. Another important architectural feature of the Princeton Engine is a dedicated communication channel which feeds back the digital output to the digital input. In conjunction with the OTS facility, this feedback channel can be used for real-time image transpose. A 512x512 by 32 bit image (or four 8 bit images) can be transposed continuously at 30 Hz with minimal instruction cost (about 5% of the NTSC real-time instruction budget of 910 instructions per horizontal line at a 30 Hz frame rate). In other words, the programmer can have up to four images and their corresponding image transposes as working real-time data structures. By utilizing a temporal frame buffer it is possible to access image-transpose pairs within the same frame time. As a result many 2D image array operations can be implemented without costly interprocessor communication steps. These include 2D implementations of image warping, rotation, and other image transforms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Terrain rendering</head><p>Terrain rendering can be implemented with rotations built from shears and a simple parallel projection [ 191. In our terrain rendering algorithm we combine digital terrain elevation data @TED) with registered image data to create a 2D parallel projection of the terrain. There are three basic steps to the implementation: maintain a moving window of data within a large data set, rotate (2D) both the DTED and the image data to the direction of motion, and parallel project along each scanline in the elevation.</p><p>As long as these operations can be done during one 33 msec frame time, an arbitrary point of view can be maintained, providing the illusion of continuous flight over the rendered terrain.</p><p>For the initial implementation, the area of data to be rendered for display is maintained in a 512 x 512 regionof-interest(RO1) buffer. A large data set is sliced into 512 pixel wide swaths and stored consecutively within the local memory of the Princeton Engine. To create motion the ROI buffer must be refreshed with new data as the viewing area is panned over the entire data set. This is a non-trivial task on a SIMD architecture with the data distributed in the local memories of different processors. However, if the motion of the display window is limited to 1 pixel/frame in an arbitrary direction, new data must be acquired for only the leading edges of the ROI buffer.</p><p>Using this technique a maximum of 1023 data pixels must be acquired from arbitrary locations on arbitrary processors over the course of a video frame time.</p><p>It has been shown that 2-D rotation can be decomposed into a cascade of one dimensional horizontal and vertical shears f23.151. However, in the scanline architecture of the Princeton Engine, the X dimension of the array is spread across processors. Thus, an X shear would require expensive inter-processor communication.</p><p>We avoid this communication cost by recognizing that an X shear can be decomposed into a transpose plus a Y shear, which can be performed at low cost via the feedback channel. A similar approach is described in <ref type="bibr" target="#b19">[13]</ref>. All shears are then local memory operations. <ref type="figure">Fig. 5</ref> illustrates this method for rotation. After the DTED and image data have been rotated to the correct angle, each processor must render the terrain along its line of sight. We use a method described in [261.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 5 2D rotation algorithm</head><p>To envision the algorithm, consider a DTED file whose intensity value at location x,y represents the elevation at position x,y. Each horizontal line in the DTED then corresponds to an elevation contour along that linear line in the terrain. As the elevation data is scanned from the bottom to the top, the terrain can be projected from the front (nearest) to the back (most distant) as seen in <ref type="figure">fig. 6</ref>. By controlling offset and gain for the elevation on a line by line basis, we can change the angle from which the scene is viewed.</p><p>If the image data is kept registered to the elevation data, we can overlay it onto the rendered terrain. This is accomplished via a direct mapping of the image data to the display projection based on the elevation data at that point. The main drawback to this forward mapping approach is that there is not necessarily a 1-to-1 mapping of input data to the display scene; there may be areas on the display to which no image data is mapped. This drawback is demonstrated by the dark gaps in <ref type="figure">fig. 7</ref> and is most noticeable in areas with a large slope. Approaches taken to solve this will depend on the level of artifacts one is willing to endure. With low resolution MSS data, for instance, a nearest neighbor, pixel-replication suffices.</p><p>However, high resolution aerial images require a more rigorous interpolation scheme. <ref type="figure">Fig. 8</ref> is an example of a terrain rendered w i t h the pixel-replication approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Scanlines Corresponding to Line N and N + l</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 6 Scanline projection</head><p>The resulting image will look much as in <ref type="figure">fig. 7</ref>, where we have colorized the contom formed by regions of equal elevation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 7 Contour projection of elevation</head><p>The initial implementation of the terrain rendering system runs at an update rate of 30 Hz. It combines a single MSS scene with a registered digital elevation at 2Kx2K resolution and maintains a 512x512 display window in real-time. To compare this result with polygon based approaches, we can consider modeling each pixel in the 512x512 region of interest with a pair of triangles. At 30 frames/second, we would need to render about 15 million triangles/second. If we were to model the full 2Kx2K terrain with triangles, we would need to render 240 million triangles/second. Although terrain regions of 2K x 2K have been demonstrated, the system has enough memory to support 23Kx23K datasets.</p><p>(See wlorplates, p. CP-37.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 8</head><p>Rendered terrain.</p><p>offset by the fact that the projection of the rotated volume can be computed directly from the original volume without significant extra storage, which is not the case in the three pass shear algorithm. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Volume rendering</head><p>Volumetric data sets are mapped onto the Princeton Engine in a straightforward manner, with the X axis corresponding to the linear processor array and a YZ slice of data stored on each processor. A single fully configured PE processor has 320K 16-bit words of memory, allowing for a maximum slice of 512x512 16bit words (plus system and working memory space).</p><p>First, consider the simple case of rotation about the X axis. In this case rotation is a srrictly local operation; each processor rotates its slice independently. The first X axis rotation method implemented was the three pass shear algorithm after [ 15,231</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig. 9</head><p>Layout of data on the engine</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>and three pass rotation</head><p>On serial architectures this is typically more efficient than the direct application of the rotation matrix because of the coherency of the memory accesses. On the PE, however, this method suffered because there was no straightforward way to utilize a number of processors greater than the number of slices. Directly applying the rotation matrix allows a set of processors to compute a subsection of the rotated volume in a proportionally smaller amount of time, and the projections of these subsections can be reassembled for output by the use of OTS patterns (as described previously). For example, this method allows a 1024 processor PE to compute the rotation and projection of a 256 slice volume in four sections with the corresponding factor of four increase in processor utilization relative to the three pass shear algorithm. The cost, of course, is a corresponding increase in the total memory usage as the volume must be duplicated four times across the processor array. This is Rotation about the Y axis could be accomplished by utilizing the same real-time OTS-feedback based rotation algorithm used by the terrain rendering algorithm, but this would require each XZ slice to be transposed twice per output frame -for a 2563 volume this would require approximately one second. An alternative method would be to pre-transpose the volume and perform X-axis rotation, with the output images being transposed back into position using OTS patterns. Neither option is completely satisfying, the first being too slow and the second clearly not allowing for multipleaxis rotation. A much better method for multiple axis rotation is to perform the projection through the volume at an angle rather than attempting to rotate the volume and then perform projection along the Z axis. This approach requires interprocessor communication of only the projection information, rather than the volumetric data.</p><p>The projection algorithm utilizes a line-drawing rotation method similar to that described in 123 and is described in detail in 1211. This algorithm is currently being implemented and is expected to perform at rates close to those for X-axis rotation.</p><p>After the rotation (in the case of the three pass shear algorithm) or during the rotation (in the case of the direct transformation algorithm and the line-projection algorithm), the projection of the rotated volume is computed using RGBa composition as described in <ref type="bibr">[17]</ref> and applied to volume rendering in <ref type="bibr">[6]</ref>. For each pixel in the projection, a ray is initialized to the background color and passed through the rotated volume from back to front along the Z-axis. Given that the color of the ray entering a voxel v i is ci, the color of the voxel is vrgb, and the opacity value of the voxel is Va, the color Ci+l leaving</p><formula xml:id="formula_0">the V O X d is equal to vavrgb + (1-Va)ci.</formula><p>Resampling of the rotated volume for projection is done by linear interpolation.</p><p>Interesting features within a volumetric data set can be exposed by manipulation of the opacity and color maps or by methods such as cutting planes or matte volumes <ref type="bibr">[6]</ref> (See wbpktes, p.  which directly expose the interior of the volume. These techniques are particularly useful when they can be manipulated interactively. Our current implementation supports interactive manipulation of cutting planes and with the maximum memory configuration can support up to three matte volumes for a data set size of 2563 The volume rendering system has produced excellent results on 1283 and 2563 volumes. Image quality has been quite good and is expected to improve dramatically with the use of more sophisticated gradient shading and antialiasing techniques. The current implementation runs at 4-8 Hz for a 2563 data set depending on the type of projection and cutting desired, and rendering a 1283 data set gives the expected 8x speed up. A very preliminary version of the line drawing projection algorithm is running at 2Hz for a 2563 volume and is currently using only 256 processors. Utilization of 1024 processors in this algorithm is not expected to be a problem. All algorithms were implemented in a subset of the C language (no assembly language was used).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Future Plans</head><p>Even on a system as powerful as the Princeton Engine, there are large, complex data sets where truly interactive rendering is impossible. Although all of the results presented so far in this paper are the result of real-time computations, we have also demonstrated the capability of using more complex algorithms to generate image sequences or animations which can then be played back using an animation program. We anticipate using this capability for the development of more complex algorithms in which interactive control of the rendering process is not needed, but for which rapid generation (on a scale of seconds to tens of seconds) of the rendered sequence is important. In fact, it is possible to create animations at an effective rate that is faster than an interactive implementation. This gain in efficiency results because the programmer does not have to schedule the video I/O microcode when operating in batch mode nor constrain the algorithm to the real-time instruction budget of 910 instructions.</p><p>The Princeton Engine was designed to serve as a realtime video system simulator to support the development of HDTV systems. In this domain all algorithms operate under hard real-time constraints which normally require each program segment to run modulo the horizontal line time -910 instructions at a 30 Hz rate of 525 line frames.</p><p>In visualization, however, it is often difficult to meet such constraints. In fact, it is often the case that the computation can only be performed at a few Hz. In order to overcome this constraint we are developing an external image buffer which will decouple display generation from rendering. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Acknowledgments</head><p>Our thanks to Frank Bernard for support of the Princeton Engine software development environment; to Danny Chin, Robert Bliedt and Robert h4aturo for support of the Princeton Engine hardware; to Stan Knight for managerial support; and to Dr. Reuben Mezrich for helpful suggestions. The National Information Display Laboratory and the David Sarnoff Research Center provided financial support. <ref type="figure">(See colorplates, p, CP-37.)</ref> </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>The</head><label></label><figDesc>Princeton Engine [4,1] is a massively parallel SIMD Computer. scalable from 64 to 2048 P r~S S O~ and capable Of executing 29 billion inSUuCtiOnS per second. AlhOugh architecturally in the m e family as the c M 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig</head><label></label><figDesc>Bypass operation is illustrated in the third example of fig. 3, where a right shift primitive operation is shown with processor Pi bypassed out of the array of processors. When a processor is bypassed, subsequent left or right shift operations cause data to travel up or down the array past the bypassed processor. Tuck's SIMD taxonomy classifies this communication model as local cut through addressing [24] . Special hardware minimizes the delay caused by consecutive bypassed processorsas long as the number of consecutively bypassed processors is less than 64, subsequent left or right primitive operations will still take a single instruction cycle of 70 ns. The total worst case delay for bypassing is 350 ns (five instruction times). With this model of communication reduction operators such as any, all, m a , min, sum and dot product require O(log N) cycles. Independent of the host interface, a real-time video interface provides continuous I/O. An important architectural feature of this facility is the ability to control on a line by line basis the exact order in which pixels are sent to the display. Pixels from individual processors are ordered by one of 16 output timing sequencer (OTS) mapping memories (refer to the bottom of fig. l), which pair processors with positions in the output pixel stream using precomputed OTS pattems. For example,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig</head><label></label><figDesc>Fig. 10 Using 1024 processors to render a 256 slice volume</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig</head><label></label><figDesc>Fig. 11 Volume Cutting Planes</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table I</head><label>I</label><figDesc></figDesc><table><row><cell></cell><cell># O</cell><cell>1 2 3 4</cell><cell>5</cell><cell>6.-</cell></row><row><cell cols="3">Image sectiodProcessor</cell><cell></cell></row><row><cell>First half Next quarter Next eighth</cell><cell cols="4">0 1 2 3 4 5 6... 0 2 4 6 8 10 12 ... 0 4 8 12 16 20 24 ...</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Biological MRI datasets were provided by the University of North Carolina and by Dr. Reuben Mezrich of the Laurie Imaging Center. CAT engine block datasets were provided by the University of North Carolina and the microtomographic rock dataset was provided by Scott Ferguson of EXXON Research and Development.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pol</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An Application of the MPP to the Interactive Manipulation of Stereo Images of Digital Tmain Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Mcallister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Davis</forename><forename type="middle">E W</forename><surname>Nasa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gsfc</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the First Symposium on the Frontiers of Massively Parallel Scientific Computing</title>
		<meeting>the First Symposium on the Frontiers of Massively Parallel Scientific Computing</meeting>
		<imprint>
			<date type="published" when="1986-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Compositing Digital Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Binenbaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;84 Fk&quot; * gs</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="253" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Dias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hsieh</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Neural Networks for SIGNAL/IMAGE Processing Using the Princeton Engine Multi-processor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">C</forename><surname>Ju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Markel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Pearson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Braccini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Workshop on Signal Processing and Neural Nets</title>
		<imprint>
			<date type="published" when="1991-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fast Geometrical Manipulations of Digital Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Marino</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Image Processing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="127" to="141" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">The Laplacian Pyramid as a Compact Image Code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Burt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">H</forename><surname>Adelson ; Chin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Passe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The Princeton Engine: A Real-time Video System Simulator</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bemard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">H</forename><surname>Tay1or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Knight</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Tramactions on Consumer Electronics</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="2" to="285" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Parallel Algorithms for Interactive Manipulation of Digital Terrain Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">W</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Mcallister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nagaraj</forename><forename type="middle">V</forename><surname>Ieee Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hmahan</surname></persName>
		</author>
		<idno>CH2649.2/89</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="5" to="6" />
			<date type="published" when="1988-08" />
		</imprint>
	</monogr>
	<note>Volume Rendering</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">X-Ray Microtomagraphy: A New Tool for the Characterization of Pourous Media</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Dunsmuir</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Ferguson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">.</forename><forename type="middle">K</forename><surname>D'amico</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Stokes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Society of Petroluem Engineers Annual Conference</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="423" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Three-pass Affme Transforms for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="71" to="78" />
			<date type="published" when="1990-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Data Parallel Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hillis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Steele</surname></persName>
		</author>
		<idno>COM-31. 532-540</idno>
	</analytic>
	<monogr>
		<title level="m">Communicatwns of the IEEE TTWU. CO</title>
		<imprint>
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Acm</forename></persName>
		</author>
		<title level="m">V0129 Num 12. M)</title>
		<imprint>
			<date type="published" when="1986-12" />
			<biblScope unit="page" from="1170" to="1183" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bak&amp;a</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Memory and Processing Architecture for 3D Voxel-Based Imagery</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<date type="published" when="1988-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Design for a Real-time High-Quality Volume Rendering Workstation</title>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="39" to="48" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
	<note>The Definition and Rendering of Terrain Maps</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m">Symposium on Interactive 3D Graphics</title>
		<meeting><address><addrLine>Cambridge, Mass</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
	<note>To appear in the</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Fast Algorithm for General Raster Rotation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Paeth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Graphics Interface 22. 4. May</title>
		<meeting>Graphics Interface 22. 4. May</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Miller</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Neumann</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">86</biblScope>
			<biblScope unit="page" from="7" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Spatial Transformations for Rapid Scan-line Surface Shadowing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Robertson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="page" from="30" to="38" />
			<date type="published" when="1989-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Fast Perspective Views of Images Using One-Dimensional Operations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Robertson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="page" from="47" to="56" />
			<date type="published" when="1987-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Fast Rotation of Volume Data on Data Parallel Architectures, Visualization &apos;91</title>
		<imprint>
			<date type="published" when="1991" />
			<publisher>IEEE Computer Society Press</publisher>
			<biblScope unit="page" from="50" to="57" />
		</imprint>
	</monogr>
	<note>Data Parallel Volume Rendering Through Line Drawing. To Appear in the Proceedings of Volume Visualization &apos;92</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Three-Dimensional Medical Imaging: Algorithms and Computer Systems, ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1991-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tanaka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kameyama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kazama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Watanabe</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A Rotation Method for Raster Image Using Skew Transformation</title>
	</analytic>
	<monogr>
		<title level="m">Proc IEEE Conference on Computer Vision and Pattern Recognition</title>
		<meeting>IEEE Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="1986-06" />
			<biblScope unit="page" from="272" to="277" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-</forename><surname>Porta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Simd</surname></persName>
		</author>
		<title level="m">An Optimally Portable SIMD ProgrMvning Language, Phd Dissertation, Duke cs</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">High Performance Computing and Communications, A Report by the Committee on Physical</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grand</forename><surname>Usg91</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Challenges</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Office of Science and Technology Policy. FY</title>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
	<note>Mathematical and Engineering Sciences</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A Two-space Solution to the Hidden Line Problem for Plotting Functions of Two Variables</title>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Comp. C</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="28" to="33" />
			<date type="published" when="1973-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m">Realistic Volume Imaging. Visualization &apos;91</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="226" to="257" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Yoo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">H</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pizer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Cullip</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Achieving Direct Volume Visualization with Interactive Semantic Region Selection. Visualization &apos;91</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rhoades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>IEEE Computer Society Press</publisher>
			<biblScope unit="page" from="58" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schrllder</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Salem</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schrmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Stoll</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">@</forename><forename type="middle">M R</forename><surname>Sty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">G</forename><surname>Freider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">O</forename><surname>Frieder</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tuck</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Wright</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yagel</forename><forename type="middle">R</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Bang</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
