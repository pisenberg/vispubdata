<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Polaris: A System for Query, Analysis and Visualization of Multi-dimensional Relational Databases</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Stolte</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pat</forename><surname>Hanrahan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Stanford University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Polaris: A System for Query, Analysis and Visualization of Multi-dimensional Relational Databases</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>A+B ={a1</term>
					<term>…</term>
					<term>an}+{b1</term>
					<term>…</term>
					<term>bm} ={a1</term>
					<term>…</term>
					<term>an</term>
					<term>b1</term>
					<term>…</term>
					<term>bm} A+P ={a1</term>
					<term>…</term>
					<term>an}+{P} ={a1</term>
					<term>…</term>
					<term>an</term>
					<term>P} A×B ={a1</term>
					<term>…</term>
					<term>an}×{b1</term>
					<term>…</term>
					<term>bm} ={a1b1</term>
					<term>…</term>
					<term>a1bm</term>
					<term>a2b1</term>
					<term>…</term>
					<term>a2bm</term>
					<term>…</term>
					<term>anb1</term>
					<term>…</term>
					<term>anbm} A×P ={a1</term>
					<term>…</term>
					<term>an}×P ={a1P</term>
					<term>…</term>
					<term>anP}</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In the last several years, large multi-dimensional databases have become common in a variety of applications such as data warehousing and scientific computing. Analysis and exploration tasks place significant demands on the interfaces to these databases. Because of the size of the data sets, dense graphical representations are more effective for exploration than spreadsheets and charts. Furthermore, because of the exploratory nature of the analysis, it must be possible for the analysts to change visualizations rapidly as they pursue a cycle involving first hypothesis and then experimentation. In this paper we present Polaris, an interface for exploring large multi-dimensional databases that extends the well-known Pivot Table interface. The novel features of Polaris include an interface for constructing visual specifications of table-based graphical displays and the ability to generate a precise set of relational queries from the visual specifications. The visual specifications can be rapidly and incrementally developed, giving the analyst visual feedback as they construct complex queries and visualizations.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In the last several years, large databases have become common in a variety of applications. Corporations are creating large data warehouses of historical data on key aspects of their operations. International research projects, such as the Human Genome Project <ref type="bibr" target="#b14">[15]</ref> and Digital Sky Survey <ref type="bibr">[23]</ref>, are generating massive databases of scientific data.</p><p>A major challenge with these databases is to extract meaning from the data they contain: to discover structure, find patterns, and derive causal relationships. The analysis and exploration necessary to uncover this hidden information places significant d emands on the human-computer interfaces to these databases. The exploratory analysis process is one of hypothesis, experiment and discovery. The path of exploration is unpredictable, and the analysts or scientists need to be able to rapidly change both what data they are viewing and how they are viewing that data.</p><p>The current trend is to treat multi-dimensional databases as ndimensional data cubes <ref type="bibr" target="#b12">[13]</ref>. Each dimension in these data cubes corresponds to one dimension in the relational schema. Perhaps the most popular interface to multi-dimensional databases is the Pivot Table <ref type="bibr" target="#b10">[11]</ref>. Pivot Tables allow the data cube to be rotated, or pivoted, so that different dimensions of the dataset may be encoded as rows or columns of the table. The remaining dimensions are aggregated and displayed as numbers in the cells of the table. Cross-tabulations and summaries are then added to the resulting table of numbers. Finally, graphs may be generated from the resulting tables. Visual Insights recently released a new interface for visually exploring projections of data cubes using linked views of bar charts, scatterplots, and parallel coordinate displays <ref type="bibr" target="#b9">[10]</ref>.</p><p>In this paper we present Polaris, an interface for the exploration of multi-dimensional databases that extends the Pivot <ref type="table">Table  interface</ref> to directly generate a rich, expressive set of graphical displays. Polaris builds tables using an algebraic formalism i nvolving the fields of the database. Each table consists of layers and panes, and each pane may be a different graphic. The use of tables to organize multiple graphs on a display is a technique often used by statisticians in their analysis of data <ref type="bibr" target="#b2">[3]</ref>[7] <ref type="bibr" target="#b26">[28]</ref>.</p><p>The Polaris interface is simple and expressive because it is built upon a formalism for constructing graphs and building data transformations. We interpret the state of the interface as a visual specification of the analysis task and automatically compile it into data and graphical transformations. This allows us to combine statistical analysis and visualization. Furthermore, all intermediate specifications that can be created in the visual language are valid and can be interpreted to create visualizations. Therefore, analysts can incrementally construct complex queries, receiving visual feedback as they assemble and alter the specifications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Related Work</head><p>The related work to Polaris can be divided into three categories: formal graphical specifications, table-based data displays and database exploration tools.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Formal Graphical Specifications</head><p>Bertin's Semiology of Graphics <ref type="bibr" target="#b3">[4]</ref> is one of the earliest attempts at formalizing graphing techniques. Bertin developed a vocabulary for describing data and the techniques for encoding data in a graphic. One of his important contributions is the identification of the retinal variables (position, color, size, etc.) in which data can be encoded. Cleveland <ref type="bibr" target="#b6">[7]</ref>[8] used theoretical and experimental results to determine how well people can use these different retinal properties to compare quantitative variations.</p><p>Mackinlay's APT system <ref type="bibr" target="#b17">[18]</ref> is one of the first applications of formal graphical specifications to computer-generated displays. APT uses a set of graphical languages and composition rules to automatically generate 2D displays of relational data. The Sage system <ref type="bibr" target="#b20">[21]</ref> extends the concepts of APT, providing a richer set of data characterizations and generating a wider range of displays.</p><p>Livny et al. <ref type="bibr" target="#b16">[17]</ref> describe a visualization model that provides a foundation for database-style processing of visual queries. Within this model, the relational queries and graphical mappings necessary to generate visualizations are defined by a set of relational operators. The Rivet visualization environment <ref type="bibr" target="#b5">[6]</ref> applies similar concepts to provide a flexible database visualization tool.</p><p>Wilkinson <ref type="bibr" target="#b27">[29]</ref> recently developed a comprehensive language for describing traditional statistical graphs and proposed a simple interface for generating a subset of the specifications expressible within his language. We have extended Wilkinson's ideas to develop a specification that can be directly mapped to an interactive interface and that is tightly integrated with the relational data model. The differences between our work and Wilkinson's will be further discussed in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Table-based Displays</head><p>Another area of related work is visualization systems that use table-based displays. Static table displays, such as scatterplot matrices <ref type="bibr" target="#b13">[14]</ref> and Trellis <ref type="bibr" target="#b1">[2]</ref> displays, have been used extensively in statistical data analysis. Recently, several interactive table displays have been developed. Pivot Tables <ref type="bibr" target="#b10">[11]</ref> allow analysts to explore different projections of large multi-dimensional datasets by interactively specifying assignments of fields to the table axes, but are limited to text-based displays. Systems such as the <ref type="table">Table  Lens</ref>  <ref type="bibr" target="#b18">[19]</ref> and FOCUS <ref type="bibr" target="#b22">[24]</ref> visualization system provide table displays that present data in a relational table view, using simple graphics in the cells to communicate quantitative values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Database Exploration Tools</head><p>The final area of related work is visual query and database exploration tools. Projects such as VQE <ref type="bibr" target="#b8">[9]</ref>, Visage <ref type="bibr" target="#b21">[22]</ref>, D E-Vise <ref type="bibr" target="#b16">[17]</ref>, and Tioga-2 <ref type="bibr" target="#b0">[1]</ref> have focused on developing visualization environments that directly support interactive database exploration through visual queries. Users can construct queries and visualizations directly through their interactions with the visualization system interface. These systems have flexible mechanisms for mapping query results to graphs, and all of the systems support mapping database records to retinal properties of the marks in the graphs. However, none of these systems leverages table-based organizations of their visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Overview</head><p>Polaris has been designed to support the interactive exploration of large multi-dimensional relational databases. Relational databases organize data into tables where each row in a table corresponds to a basic entity or fact and each column represents a property of that entity <ref type="bibr" target="#b24">[26]</ref>. We refer to a row in a relational table as a tuple or record, and a column in the table as a field. A single relational database will contain many heterogeneous but interrelated tables.</p><p>We can characterize fields in a database as nominal, ordinal or quantitative <ref type="bibr" target="#b3">[4]</ref> <ref type="bibr" target="#b23">[25]</ref>. Polaris reduces this categorization to ordinal and quantitative by assigning an ordering to the nominal fields and subsequently treating them as ordinal.</p><p>The fields within a relational table can also be partitioned into two types: dimensions and measures. Dimensions and measures are similar to independent and dependent variables in traditional analysis. For example, a product name or type would be a dimension of product, and the product price or size would be a measure. The current implementation of Polaris treats all nominal fields as dimensions and all quantitative fields as measures.</p><p>In many important business and scientific databases there are often many dimensions identifying a single entity. For example, a transaction within a store may be identified by the time of the sale, the location of the store, the type of product, and the customer. In most data warehouses, these multidimensional databases are structured as n-dimensional data cubes <ref type="bibr" target="#b24">[26]</ref>. Each dimension in the data cube corresponds to one dimension in the relational schema.</p><p>To effectively support the analysis process in large multidimensional databases, an analysis tool must meet several demands:</p><p>• Data-dense displays: The databases typically contain a large number of records and dimensions. Analysts need to be able to create visualizations that will simultaneously display many dimensions of large subsets of the data.  <ref type="figure" target="#fig_2">Figure 1</ref> shows the user interface presented by Polaris. In this example, the analyst has constructed a matrix of scatterplots showing sales versus profit for different product types in different quarters. The primary interaction technique is to drag-and-drop fields from the database schema onto shelves throughout the display. We call a given configuration of fields on shelves a visual specification. The specification determines the analysis and visualization operations to be performed by the sy stem, defining:</p><p>•</p><p>The mapping of data sources to layers. Multiple data sources may be combined in a single Polaris visualization. Each data source maps to a separate layer or set of layers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The number of rows, columns, and layers in the table and their relative orders (left to right as well as back to front). The database dimensions assigned to rows are specified by the fields on the x shelf, columns by fields on the y shelf, and layers by fields on the layer (z) shelf. Multiple fields may be dragged onto each shelf to show categorical relationships.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The selection of records from the database and the partitioning of records into different layers and panes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The grouping of data within a pane and the computation of statistical properties and aggregates. Records may also be sorted into a given drawing order.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The type of graphic displayed in each pane of the table. Each graphic consists of a set of marks, one mark per record in that pane.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The mapping of data fields to retinal properties of the marks in the graphics. The mappings used for any given visualization are shown in a set of automatically generated legends.</p><p>Analysts can interact with the resulting visualizations in several ways. Selecting a single mark in a graphic by clicking on it pops up a window displaying user-specified field values for the tuple corresponding to that mark. Analysts can draw rubberbands around a set of marks to brush records. Brushing can be performed within a single table or between multiple Polaris displays.</p><p>In the next section, we describe how the visual specification is used to generate graphics. In the following section, we describe how it is used to generate the database queries and to perform statistical analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Generating Graphics</head><p>The visual specification consists of three components: (a) the specification of the different table configurations, (b) the type of graphic inside each pane, and (c) the details of the visual encodings. We discuss each of these in turn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Table Algebra</head><p>We need a formal mechanism to specify table configurations, and we have defined an algebra for this purpose. When the analysts place fields on the axis shelves, as shown in <ref type="figure" target="#fig_2">Figure 1</ref>, they are implicitly creating expressions in this algebra.</p><p>A complete table configuration consists of three separate expressions in this table algebra. Two of the expressions define the configuration of the x and y axes of the table, partitioning the table into rows and columns. The third expression defines the z axis of the table, which partitions the display into layers.</p><p>The operands in this table algebra are the names of the ordinal and quantitative fields of the database. We will use A, B, and C to represent ordinal fields and P, Q, and R to represent quantitative fields. We assign ordered sets to each field symbol in the following manner: to ordinal fields we assign the members of the ordered domain of the field, and to quantitative fields we assign the single element set containing the field name.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A=domain(A)={a1,…,an} P ={P}</head><p>This assignment of sets to symbols reflects the difference in how the two types of fields will be encoded in the structure of the tables. Ordinal fields will partition the table into rows and columns, whereas quantitative fields will be spatially encoded as axes within the panes.</p><p>A valid expression in our algebra is an ordered sequence of one or more symbols with operators between each pair of adjacent symbols, and with parentheses used to alter the precedence of the operators. The operators in the algebra are cross (×), nest (/) and concatenation (+), listed in order of precedence. The precise se-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1: The Polaris user interface. Analysts construct table-based displays of relational data by dragging fields from the database schema onto shelves throughout the display. A given configuration of fields on shelves is called a visual specification. The specification unambiguously defines the analysis and visualization operations to be performed by the system to generate the display.</head><p>mantics of each operator is defined in terms of its effects on the operand sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Concatenation</head><p>The concatenation operator performs an ordered union of the sets of the two symbols:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Nest</head><p>The nest operator is similar to the cross operator, but it only creates set entries for which there exist records with those domain values. If we define R to be the dataset being analyzed, r to be a record, and A(r) to be the value of the field A for the record r, then we can define the nest operator as follows:</p><formula xml:id="formula_0">A/B={aibj | ∃r ∈ R st A(r)=ai &amp; B(r)=bj}</formula><p>The intuitive interpretation of the nest operator is "B within A". For example, given the fields quarter and month, the expression quarter / month would be interpreted as those months within each quarter, resulting in three entries for each quarter. In contrast, quarter × month would result in 12 entries for each quarter.</p><p>Using the above set semantics for each operator, every expression in the algebra can be reduced to a single set, with each entry in the set being an ordered concatenation of zero or more ordinal values with zero or more quantitative field names. We call this set evaluation of an expression the normalized set form. The normalized set form of an expression determines one axis of the table: the table axis is partitioned into columns (or rows or layers) so that there is a one-to-one correspondence between set entries in the normalized set and columns. <ref type="figure" target="#fig_0">Figure 2</ref> illustrates the configurations resulting from a number of expressions.</p><p>Analysts can also combine multiple data sources in a single Polaris visualization. When multiple data sources are imported, each data source is mapped to a distinct layer (or set of layers). While all data sources and all layers share the same configuration for the x and y axes of the table, each data source can have a different expression for partitioning its data into layers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">Types of Graphics</head><p>After the table configuration is specified, the next step is to specify the type of graphic in each pane. One option, typical of most charting and reporting tools, is to have the user select a chart type from a predefined set of charts. Polaris allows analysts to flexibly construct graphics by specifying the individual components of the graphics. However, for this approach to be effective, the specification must balance flexibility with succinctness. We have developed a taxonomy of graphics that results in an intuitive and concise specification of graphic types.</p><p>When specifying the table configuration, the user also implicitly specifies the axes associated with each pane. We have structured the space of graphics into three families by the type of fields assigned to their axes:</p><formula xml:id="formula_1">• Ordinal-Ordinal • Ordinal-Quantitative • Quantitative-Quantitative</formula><p>Each family contains a number of variants depending on how records are mapped to marks. For example, selecting a bar in an ordinal-quantitative pane will result in a bar chart, whereas selecting a line mark results in a line chart. The mark set currently supported in Polaris includes the rectangle, circle, glyph, text, Gantt bar, line, polygon and image. Following Cleveland <ref type="bibr" target="#b7">[8]</ref>, we further structure the space of graphics by the number of independent and dependent variables. For example, a graphic where both axes encode independent variables is different than a graphic where one axis encodes an independent variable and the other encodes a dependent variable (y=f(x)). By default, dimensions of the database are interpreted as independent variables and measures as dependent variables.</p><p>Finally, the precise form of the data transformations, in particular how records are grouped and whether aggregates are formed, can affect the type of graphic. Some graphic types best encode a single record, whereas others can encode an arbitrary number of records.</p><p>We briefly discuss the defining characteristics of the three families within our categorization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ordinal-Ordinal Graphics</head><p>The characteristic member of this family is the table, either of numbers or of marks encoding attributes of the source records.</p><p>In ordinal-ordinal graphics, the axis variables are typically independent of each other, and the task is focused on understanding patterns and trends in some function f(O x ,O y ) à R, where R represents the fields encoded in the retinal properties of the marks. This can be seen in <ref type="figure">Figure 3(a)</ref> where the analyst is studying sales and margin as a function of product type, month and state for the items sold by a hypothetical coffee chain. <ref type="figure">Figure 3</ref>(b) presents another example of an ordinal-ordinal graphic. In this figure, the analyst is investigating the performance of a graphics rendering library. The number of cache misses attributable to each line of source code have been plotted as a function of the ordinal variables line number and file name.</p><p>The cardinality of the record set in each pane has little effect on the overall structure of the table. When there is more than one record per pane, multiple marks are shown in each display, with a one-to-one correspondence of mark to record. The marks are stacked in a specified drawing order, and the spatial placement of the marks within the pane conveys no additional information about the record's data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ordinal-Quantitative Graphics</head><p>Well-known representatives of this family of graphics are the bar chart, possibly clustered or stacked, the dot plot and the Gantt chart.</p><p>In an ordinal-quantitative graphic, the quantitative variable is often dependent on the ordinal variable, and the analyst is trying to understand or compare the properties of some set of functions f(O)à Q. <ref type="figure">Figure 6</ref>(c) illustrates a case where a matrix of bar charts is used to study several functions of the independent variables product and month. The cardinality of the record set does affect the structure of the graphics in this family. When the cardinality of the record set is one, the graphics are simple bar charts or dot plots. When the cardinality is greater than one, additional structure may be introduced to accommodate the additional records (e.g., a stacked bar chart).</p><p>The ordinal and quantitative values may be independent variables, such as in a Gantt chart. Here, each pane represents all the events in a category; each event has a type as well as a begin and end time. In <ref type="figure">Figure 3</ref>(c), major wars over the last five hundred years are displayed as Gantt charts, categorized by country. An additional layer in that figure displays pictures of major scientists plotted as a function of the independent variables country of birth and date of birth. <ref type="figure">Figure 3(d)</ref> shows a table of Gantt charts, with each Gantt chart displaying the thread scheduling and locking activity on a CPU within a multiprocessor computer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Quantitative-Quantitative Graphics</head><p>Graphics of this type are used to understand the distribution of data as a function of one or both quantitative variables and to discover causal relationships between the two quantitative variables. <ref type="figure">Figure 6</ref>(a) illustrates a matrix of scatterplot graphics used to understand the relationships between a number of attributes of different products sold by a coffee chain. <ref type="figure">Figure 3</ref>(e) illustrates a another example of a quantitativequantitative graphic: the map. In this figure, the analyst is studying how flight scheduling varies with the region of the country the flight originated in. Data about a number of flights between major airports has been plotted as a function of latitude and longitude, and composed with two other layers which plot the location of airports and display the geography of each state as a polygon.</p><p>It is extremely rare to use this type of graph with a cardinality of one, not because it is not meaningful, but because the density of information in such a graphic is very low.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">Visual Mappings</head><p>Each record in a pane is mapped to a mark. There are two components to the visual mapping. The first component, described Allowing analysts to explicitly encode different fields of the data to retinal properties of the display greatly enhances the data density and the variety of displays that can be generated. However, in order to keep the specification succinct, analysts should not be required to construct the mappings. Instead, they should be able to simply specify that a field be encoded as a visual property. The system should then generate an effective mapping from the domain of the field to the range of the visual property. These mappings are generated in a manner similar to other visualization systems. We discuss how this is done for the purpose of completeness. The default mappings are illustrated in <ref type="figure">Figure 4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 3: Examples of the different graph types that can be constructed in Polaris. The graphical table (a), showing sales and margin as a function of product type and state for a hypothetical coffee chain, is an example of the ordinal-ordinal family of graphics. The source code display (b), which is displaying the source code for a graphics rendering library with the code colored by the number of cache misses attributable to each line of code, is another example of the ordinal-ordinal family. Gantt charts, used in (c) to display major wars in several countries over the last five hundred years, and in (d) to display the thread scheduling for a graphics application, are an example of the ordinal-quantitative family. Maps, as in (e) which shows flights between several major airports categorized by the region of the country they departed from</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Shape</head><p>Polaris uses the set of shapes recommended by Cleveland for encoding ordinal data <ref type="bibr" target="#b6">[7]</ref>. We have extended this set of shapes to include several additional shapes to allow a larger domain of values to be encoded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Size</head><p>Size can be used to encode either an ordinal or quantitative field. When encoding a quantitative domain as size, a linear map from the field domain to the area of the mark is created. The minimum size is chosen so that all visual properties of a mark with the minimum size can be perceived <ref type="bibr" target="#b15">[16]</ref>. If an ordinal field is encoded as size, the domain needs to be small, at most four or five values, so that the analyst can discriminate between different categories <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Orientation</head><p>A key principle in generating mappings of ordinal fields to orientation is that the orientation needs to vary by at least 30° between categories <ref type="bibr" target="#b15">[16]</ref>, thus constraining the automatically-generated mapping to a domain of at most six categories. For quantitative fields, the orientation varies linearly with the domain of the field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Color</head><p>When encoding an ordinal domain, we use a predefined palette to select the color for each domain entry. The colors in the palette are well separated in the color spectrum, predominantly on hue <ref type="bibr" target="#b25">[27]</ref>. We have ordered the colors to avoid adjacent colors with different brightness or substantially different wavelengths in an attempt to include harmonious sets of colors in each pal-ette <ref type="bibr" target="#b3">[4]</ref>[16] <ref type="bibr" target="#b25">[27]</ref>. We additionally reserve a saturated red for highlighting items that have been selected or brushed.</p><p>When encoding a quantitative variable, it is important to vary only one psychophysical variable, such as hue or value. The default palette we use for encoding quantitative data is the isomorphic colormap developed by Rogowitz <ref type="bibr" target="#b19">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Generating Database Queries</head><p>Obviously, the visual specifications determine the final visualization. However, just as importantly, the visual specification generates queries to the database that (a) select subsets of the data for analysis, then (b) filter, sort and group the results into panes, and then finally (c) group, sort and aggregate the data before passing it to the graphics encoding process. <ref type="figure" target="#fig_4">Figure 5</ref> shows the overall data flow in Polaris. We can precisely describe the transformations in each of the three phases using SQL queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Step 1: Selecting the Records</head><p>The first phase of the data flow retrieves records from the database, applying user-defined filters to select subsets of the database.</p><p>For an ordinal field A, the user may specify a subset of the domain of the field as valid. If filter(A) is the user-selected subset, then a relational predicate expressing the filter for A is:</p><formula xml:id="formula_2">A in filter(A)</formula><p>For a quantitative field P, the user may define a subset of the field's domain as valid. If min(P) and max(P) are the user-defined extents of this subset, then a relational predicate expressing the filter for P is:</p><p>(P ≥ min(P) and P ≤ max(P))</p><p>We can define the relational predicate filters as the conjunction of all of the individual field filters. Then, the first stage of the data transformation network is equivalent to the SQL statement:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SELECT * WHERE {filters}</head><p>Step 2: Partitioning the records into panes</p><p>The second phase of the data flow partitions the retrieved records into groups corresponding to each pane in the table. As we discussed in Section 4.1, the normalized set form of the table axis expressions determines the table configuration. The table is partitioned into rows, columns, and layers corresponding to the entries in these sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 4:</head><p>The different retinal properties that can be used to encode fields of the data and examples of the default mappings that are generated when a given type of data field is encoded in each of the retinal properties.</p><p>The ordinal values in each set entry define the criteria by which records will be sorted into each row, column and layer. Let Row(i) be the predicate that represents the selection criteria for the i th row, Column(j) be the predicate for the j th column, and Layer(k) the predicate for the k th layer. For example, if the y-axis of the table is defined by the normalized set:</p><formula xml:id="formula_3">{a1b1P, a1b2P, a2b1P, a2b2P}</formula><p>then there are four rows in the table, each defined by an entry in this set, and Row would be defined as: Given these definitions, the records to be partitioned into the pane at the intersection of the i th row, the j th column, and the k th layer can be retrieved with the following query: To generate the groups of records corresponding to each of the panes, we must iterate over the table executing this SELECT statement for each pane. There is no standard SQL statement which enables us to perform this partitioning in a single query. We note that this is a same problem that motivated the CUBE <ref type="bibr" target="#b12">[13]</ref> operator; we will revisit this issue in the discussion section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Step 3: Transforming Records within the Panes</head><p>The last phase of the data flow is the transformation of the records in each pane. If the visual specification includes aggregation, then each measure in the database schema must be assigned an aggregation operator. If the user has not selected an aggregation operator for a measure, that measure is assigned the default aggregation operator (SUM). We define the term aggregates as the list of the aggregations that need to be computed. For example, if the database contains the quantitative fields Profit, Sales and Payroll, and the user has explicitly specified that the average of Sales should be computed, then aggregates is defined as:</p><formula xml:id="formula_4">aggregates = SUM(Profit),AVG(Sales),SUM(Payroll)</formula><p>Aggregate field filters (for example, SUM(Profit) &gt; 500) could not be evaluated in</p><p>Step 1 with all of the other filters because the aggregates had not yet been computed. Thus, those filters must be applied in this phase. We define the relational predicate filters as in Step 1 for unaggregated fields.</p><p>Additionally, we define the following lists:</p><p>G : the field names in the grouping shelf, S : the field names in the sorting shelf, and dim : the dimensions in the database.</p><p>The necessary transformation can then be expressed by the SQL statement: </p><formula xml:id="formula_5">SELECT</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Results</head><p>Polaris is useful for performing the type of exploratory data analysis advocated by statisticians such as Bertin <ref type="bibr" target="#b2">[3]</ref> and Cleveland <ref type="bibr" target="#b7">[8]</ref>. We demonstrate the capabilities of Polaris as an exploratory interface to multi-dimensional databases by considering the following scenario.</p><p>The chief financial officer (CFO) of a national coffee store chain has just been told to cut expenses. To get an initial understanding of the situation, the CFO creates a table of scatterplots showing the relationship between marketing costs and profit categorized by product type and market ( <ref type="figure">Figure 6(a)</ref>). After studying the graphics, the CFO notices an interesting trend: certain products have high marketing costs with little or no return in the form of profit.</p><p>To further investigate, the CFO creates two linked displays: a table of scatterplots showing profit and marketing costs for each state and a text table itemizing profit by product and state ( <ref type="figure">Figure  6(b)</ref>). The two views are linked by the state field: if records are selected in either display, then all records with the same state value as the selected records are highlighted. The CFO is able to use these linked views to determine that in New York, several products are offering very little return despite high expenditures.</p><p>The CFO creates a third display <ref type="figure">(Figure 6</ref>(c)): a set of bar charts showing profit, sales, and marketing for each product sold in New York, broken down by month. In this view, the CFO can clearly see that Caffé Mocha's profit margin does not justify its marketing expenses. With this data, the CFO can change the company's marketing and sales strategies in this state.</p><p>This example illustrates several important points about the exploratory process. Throughout the analysis, both the data users want to see and how they want to see it change continually. Analysts first form hypotheses about the data and then create new views to perform tests and experiments to validate or disprove those hypotheses. Certain displays enable an understanding of overall trends, whereas others show causal relationships. As the analysts better understand the data, they may want to drill-down in the visible dimensions or display entirely different dimensions.</p><p>Polaris supports this exploratory process through its visual interface. By formally categorizing the types of graphics, Polaris is able to provide a simple interface for rapidly generating a wide range of displays. This allows analysts to focus on the analysis task rather than the steps needed to retrieve and display the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Discussion</head><p>Several of the ideas in our specification are extensions of Wilkinson's <ref type="bibr" target="#b27">[29]</ref> efforts to develop a grammar for statistical graphics. His grammar encapsulates both the statistical transformation of datasets and their mapping to graphic representations.</p><p>The primary distinctions between Wilkinson's system and ours arise because of differences in the data models. We chose to focus on developing a tool for multi-dimensional relational databases and we decided to build as much of the system as possible using relational algebra. All of the data transformations required by our visual specifications can be precisely interpreted as standard SQL queries to OLAP servers. Wilkinson instead intentionally uses a data model that is not relational, citing shortcomings in the relational model's support for statistical analysis. Consequently, his specification defines operations and function in terms of his own data model consisting of variable sets and indexed variables.</p><p>The differences in design are most apparent in the table algebra. As in our system, Wilkinson's table algebra performs two functions: it provides database services such as set operations and it specifies the layout of the tables and graphs. Since we use relational algebra for all our database services, our algebra is different. For example, his blend operator performs both set union and may partition the axes of a table; our concatenation operation is different since it just performs partitioning. Another difference is in his cross and nest operators: cross generates a 2D graphic and nest only a 1D graphic. We use a different mechanism (shelves) to specify axes of the graphic. Overall, whether our system is better than Wilkinson's is hard to judge completely, and will require more experience using the system to solve practical problems. One major advantage of our approach is that it leverages existing database systems and as a result was very easy to implement.</p><p>Another interesting issue is the interpretation of our visual specifications as database queries. When database queries are generated from the visual specifications in Polaris, it is necessary to generate a SQL query per table pane. This problem is similar to the one that motivated Gray et al. to develop the CUBE operator <ref type="bibr" target="#b12">[13]</ref>. The CUBE operator generalizes the queries necessary to <ref type="figure">Figure 6</ref>: An example scenario demonstrating the capabilities of Polaris for exploratory analysis of multi-dimensional databases. The data displayed is for a hypothetical coffee store chain, and the analyst is searching for ways to reduce the company's expenses.</p><p>develop cross-tab and Pivot Table displays of relational data into a single, more efficient operator. However, the CUBE operator cannot be applied in our situation because it assumes that the sets of relations partitioned into each table pane do not overlap. In several possible Polaris table configurations, such as scatterplot matrices, there can be considerable overlap between the relations partitioned into each pane. One can imagine generalizing the CUBE operator to handle these overlapping partitions.</p><p>Another major limitation of the CUBE operator is its method for computing aggregates. Usually only aggregates based on sums are allowed. More complex aggregation operators requiring ranking, such as computation of medians and modes, are not part of the current specification, although they are available in some commercial systems. These operators are very useful for data mining applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Conclusions and Future Work</head><p>We have presented Polaris, an interface for the exploration and analysis of large multi-dimensional databases. Polaris extends the well-known Pivot <ref type="table">Table interface</ref> to display relational query results using a rich, expressive set of graphical displays. A second contribution of this system is a succinct visual specification for describing table-based graphical displays of relational data and the interpretation of these visual specifications as a precise sequence of relational database operations.</p><p>We have many plans for extending this system. The current version of Polaris does not leverage the hierarchical structure of many multi-dimensional databases. We are currently exploring interaction techniques for navigating these types of hierarchies and developing specifications that describe graphics derived from hierarchical data.</p><p>Furthermore, because graphical marks in Polaris directly correspond to tuples in the relational databases, it is possible to generate database tables from a selected set of graphical marks. This technique can be used to develop lenses, similar to the Magic Lens <ref type="bibr" target="#b4">[5]</ref>, that can perform much more complex transformations because they operate in data space rather than image space. This technique can also be used to compose Polaris displays, using a selected mark set in one display as the data input to another. We are exploring these techniques and believe it is possible to develop a relational spreadsheet by composing Polaris displays in this manner.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>The graphical interpretation of several expressions in the table algebra. Each expression in the table algebra can be reduced to a single set of terms, and that set can then be directly mapped into a configuration for an axis of the table.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>, are an example of the quantitative-quantitative family of graphics. Line charts, as in (f) which shows average sales and profit as a function of time for the coffee chain, are another example of the quantitative-quantitative family. in the previous section, determines the type of mark. The second component encodes fields of the records into visual or retinal properties of the selected mark. The visual properties in Polaris are based on Bertin's retinal variables [4]: shape, size, orientation, color (value and hue), and texture (not supported in the current version of Polaris).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Row( 1 )</head><label>1</label><figDesc>= (A = a1 and B = b1) Row(2) = (A = a1 and B = b2) Row(3) = (A = a2 and B = b1) Row(4) = (A = a2 and B = b2)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>SELECT * WHERE {Row(i) and Column(j) andLayer(k)}</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>The transformations and data flow within Polaris. The visual specification generates queries to the database to select subsets of the data for analysis, then to filter, sort, and group the results into panes, and then finally to group, sort and aggregate the data within panes. remove this line</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors especially thank Robert Bosch and Diane Tang for their contributions to the design and implementation of Polaris, their reviews of manuscript drafts, and for many useful discussions. The authors also thank Maneesh Agrawala for his insightful reviews and discussions on early drafts of this paper. The air traffic data is courtesy William F. Eddy and Shingo Oue. The coffee chain data is courtesy Stephen Eick and Visual Insights. This work was supported in part by ASCI grant #2DJB705.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Tioga-2: A Direct Manipulation Database Visualization Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Aiken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stonebraker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Woodruff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 12 th International Conference on Data Engineering</title>
		<meeting>of the 12 th International Conference on Data Engineering</meeting>
		<imprint>
			<date type="published" when="1996-02" />
			<biblScope unit="page" from="208" to="217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Trellis Graphics Displays: A Multi-Dimensional Data Visualization Tool for Data Mining. 3 rd Annual Conference on Knowledge Discovery in Databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">Douglas</forename><surname>Martin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Graphics and Graphic Information Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bertin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980" />
			<publisher>Walter de Gruyter</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Semiology of Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bertin</surname></persName>
		</author>
		<editor>W. J. Berg</editor>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Wisconsin Press</publisher>
			<pubPlace>Madison, Wisconsin</pubPlace>
		</imprint>
	</monogr>
	<note>The University of</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Toolglass and Magic Lenses: The See-Through Interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Bier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Buxton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;93 Proceedings</title>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="73" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Rivet: A Flexible Environment for Computer Systems Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bosch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gerth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rosenblum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics</title>
		<imprint>
			<date type="published" when="2000-02" />
			<biblScope unit="page" from="68" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">The Elements of Graphing Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Wadsworth Advanced Books and Software</publisher>
			<pubPlace>Pacific Grove, California</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Visualizing Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Hobart Press</publisher>
			<pubPlace>New Jersey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An Interactive Visualization Environment for Data Exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Derthick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Knowledge Discovery in Databases</title>
		<meeting>of Knowledge Discovery in Databases</meeting>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="2" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visualizing Multi-Dimensional Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Eick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics</title>
		<imprint>
			<date type="published" when="2000-02" />
			<biblScope unit="page" from="61" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Microsoft Excel -User&apos;s Guide</title>
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Microsoft, Redmond, WA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Framwork for Knowledge-based Interactive Data Exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Journal of Visual La nguages and Computing</title>
		<imprint>
			<date type="published" when="1994-12" />
			<biblScope unit="page" from="339" to="363" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Data Cube: A Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub-Totals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chaudhuri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bosworth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Layman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Reichart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Venkatrao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pirahesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Pellow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 12 th International Conference on Data Engineering</title>
		<meeting>of the 12 th International Conference on Data Engineering</meeting>
		<imprint>
			<date type="published" when="1996-02" />
			<biblScope unit="page" from="152" to="159" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Printer graphics for clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Hartigan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Statistical Computation and Simulation</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="187" to="213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title/>
		<ptr target="http://www.ornl.gov/hgmis/about.html" />
	</analytic>
	<monogr>
		<title level="j">Human Genome Project</title>
		<imprint>
			<date type="published" when="2000-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Elements of Graph Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Kosslyn</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>W.H. Freeman and Co</publisher>
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">DEVise: Integrated Querying and Vi sual Exploration of Large Datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Livny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Beyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Donjerkovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lawande</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Myllymaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wenger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGMOD</title>
		<meeting>of ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="1997-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Automating the Design of Graphical Presentations of Relational Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM Trans. of Graphics</title>
		<imprint>
			<biblScope unit="page" from="110" to="141" />
			<date type="published" when="1986-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">The Table Lens: Merging Graphical and Symbolic Representations in an Interactive Focus+Context Visualization for Tabular Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Card</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGCHI &apos;94</title>
		<meeting>of SIGCHI &apos;94</meeting>
		<imprint>
			<biblScope unit="page" from="318" to="322" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">How NOT to Lie with Visualization. Computers in Physics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Rogowitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Treinish</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996-06" />
			<biblScope unit="page" from="268" to="274" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Interactive Graphic Design Using Automatic Presentation Knowledge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGCHI &apos;94</title>
		<meeting>of SIGCHI &apos;94</meeting>
		<imprint>
			<date type="published" when="1994-04" />
			<biblScope unit="page" from="112" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Visage: A User Interface Environment for Exploring Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lucas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Senn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">C</forename><surname>Gomberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Burks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Stroffolino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Dunmire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Information Visualization</title>
		<meeting>of Information Visualization</meeting>
		<imprint>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="3" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">FOCUS: The Interactive Table for Product Comparison and Selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Spenke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Beilken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Berlage</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the ACM Symposium on User Interface Software and Technology</title>
		<meeting>of the ACM Symposium on User Interface Software and Technology</meeting>
		<imprint>
			<date type="published" when="1996-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">On the theory of scales of measurement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Stevens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">103</biblScope>
			<biblScope unit="page" from="677" to="680" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">OLAP Solutions: Building Multidimensional Information Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Thomsen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Wiley Computer Publishing</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Effective Color Displays: Theory and Practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Travis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>Academic Press</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">The Visual Display of Quantitative Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Tufte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Graphics Press</publisher>
			<biblScope unit="volume">430</biblScope>
			<pubPlace>Box; Chesire, Connecticut</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">The Grammar of Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Springer</publisher>
			<pubPlace>New York, New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
