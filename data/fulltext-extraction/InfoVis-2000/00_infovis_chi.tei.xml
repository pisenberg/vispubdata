<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Taxonomy of Visualization Techniques using the Data State Reference Model</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><forename type="middle">H</forename><surname>Chi</surname></persName>
							<email>echi@parc.xerox.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Xerox Palo Alto Research Center</orgName>
								<address>
									<addrLine>3333 Coyote Hill Road</addrLine>
									<postCode>94301</postCode>
									<settlement>Palo Alto</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Taxonomy of Visualization Techniques using the Data State Reference Model</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Information Visualization</term>
					<term>Data State Model</term>
					<term>Reference Model</term>
					<term>Taxonomy</term>
					<term>Techniques</term>
					<term>Operators</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In previous work, researchers have attempted to construct taxonomies of information visualization techniques by examining the data domains that are compatible with these techniques. This is useful because implementers can quickly identify various techniques that can be applied to their domain of interest. However, these taxonomies do not help the implementers understand how to apply and implement these techniques. In this paper, we will extend and then propose a new way to taxonomize information visualization techniques by using the Data State Model [Chi98]. In fact, as the taxonomic analysis in this paper will show, many of the techniques share similar operating steps that can easily be reused. The paper shows that the Data State Model not only helps researchers understand the space of design, but also helps implementers understand how information visualization techniques can be applied more broadly.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>There have been several efforts to produce various information visualization taxonomies <ref type="bibr" target="#b5">[Shneiderman96,</ref><ref type="bibr" target="#b2">Chi97,</ref><ref type="bibr" target="#b6">North98,</ref><ref type="bibr" target="#b1">CMS99]</ref>. In this paper, we will present a detailed analysis of a large number of visualization techniques using the Data State Model. The contribution is that our analysis of the information visualization design space is the most detailed and thorough to date. It is more detailed in the sense that we have broken each technique down by not only its data type, but also by its processing operating steps. It is thorough in that it categorizes the well-known techniques in <ref type="bibr" target="#b2">[Chi97]</ref>, <ref type="bibr">[Olive99]</ref>, and <ref type="bibr" target="#b1">[CMS99]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>Most previous work focused on constructing taxonomies of information visualization techniques uses a data-centric point of view. In an article describing the design space of information visualization techniques, Card and Mackinlay started constructing a data-oriented taxonomy <ref type="bibr" target="#b0">[Card97]</ref>, which is subsequently expanded in <ref type="bibr" target="#b1">[CMS99]</ref>. This taxonomy divides the field of visualization into several subcategories: Scientific Visualization, GIS, Multi-dimensional Plots, Multi-dimensional Tables, Information Landscapes and Spaces, Node and Link, Trees, and Text Transforms. OLIVE is a taxonomy assembled by students in Shneiderman's information visualization class <ref type="bibr">[Olive99]</ref>, and divides information visualization techniques using eight visual data types: temporal, 1D, 2D, 3D, multi-D, Tree, Network, and Workspace.</p><p>Previously, we also proposed a taxonomy of information visualization techniques based not only on data types, but also on the processing operators that are inherent in each visualization technique <ref type="bibr" target="#b3">[Chi98]</ref>. Elaborated in <ref type="bibr" target="#b4">[Chi99]</ref>, we showed that information visualization techniques could be described using the Information Visualization Data State Reference Model (or simply Data State Model). <ref type="figure">Figure 1</ref> shows an overview of the Data State Model <ref type="bibr" target="#b3">[Chi98]</ref>, which breaks down each technique into four Data Stages, three types of Data Transformation and four types of Within Stage operators. The visualization data pipeline is broken into four distinct Data Stages: Value, Analytical Abstraction, Visualization Abstraction, and View (See <ref type="table" target="#tab_0">Table 1</ref>). Transforming data from one stage to another requires one of the three types of Data Transformation operators: Data Transformation, Visualization Transformation, and Visual Mapping Transformation <ref type="table" target="#tab_1">(Table 2)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">SUMMARY OF DATA STATE MODEL</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Stage</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Description</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Value</head><p>The raw data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analytical Abstraction</head><p>Data about data, or information, a.k.a. meta-data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Visualization Abstraction</head><p>Information that is visualizable on the screen using a visualization technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>View</head><p>The end-product of the visualization mapping, where the user sees and interprets the picture presented to her. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Data Transformation</head><p>Generates some form of analytical abstraction from the value (usually by extraction).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Visualization Transformation</head><p>Takes an analytical abstraction and further reduces it into some form of visualization abstraction, which is visualizable content.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Visual Mapping Transformation</head><p>Takes information that is in a visualizable format and presents a graphical view.  <ref type="figure" target="#fig_1">Figure 2</ref> shows an example of the Data State Model applied to the problem of visualizing the connections between a set of Web pages. This example shows that: (1) some operators create new kinds of data sets, whereas some operators create filtered subsets, which is the difference between Transformation and Within Stage operators, and (2) that the same Visualization Abstractions can be mapped using a variety of Visual Mapping Transformation operators. For example, Disk Trees or Cone Trees can both be applied to a hierarchy of interconnected nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">TAXONOMY</head><p>By isolating dependencies, we can more easily reuse different parts of the pipeline to construct new information visualizations. Therefore, we have taken this model and used it to taxonomize various visualization techniques. The idea is to analyze the various techniques, thus increasing our knowledge of how each technique can be built using various operators. In the following, we used this model to analyze some 36 visualization techniques.</p><p>With a clearer understanding of the interactions between the data and the operators, implementers will be more equipped to construct new interactions or new visualizations. In practice, these analysis techniques have been applied in a system called the Visualization Spreadsheet <ref type="bibr" target="#b2">[Chi97,</ref><ref type="bibr" target="#b4">Chi99]</ref> and have enabled reuse and rapid development.</p><p>The following table presents the taxonomy using the Data State Model. A row represents a single visualization technique or system. The cells in that row describe the operators that comprises that technique. Non-italic items refer to the operators, while Italic items refer to example data sets within that Data Stage. The columns are the seven types of operators described in <ref type="figure">Figure 1</ref>: within and nonwithin stage operators.</p><p>In certain cases below, cells marked with Ã… have no corresponding Abstractions or Operators at that stage, because the data is already in a visualizable format.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A N A L YT IC AL AB S TR ACT IO N V IS U A L IZAT IO N AB S TR ACT IO N V IE W D A T A TR AN S F OR MAT ION V IS U AL IZAT IO N TR AN S F OR MAT ION V IS U AL M A P P IN G TR AN S F OR MAT ION V ALU E S TAGE O P E R AT O R AN AL YT IC AL S T AG E O P E R AT OR V IS U AL IZA T IO N S T AG E O P E R AT OR V IE W S T AG E O P E R AT O R Figure 1: Information Visualization Data State Reference Model</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">DISCUSSION</head><p>The contribution of this taxonomy is that we have made another step toward understanding the design space of visualization techniques by extracting the crucial operating steps in each technique. Using example data domains for each technique, we described the operators that are possible. We also illustrated the power of the Data State Model by applying it to the design of many well-known visualization techniques. For both researchers and implementers, this analysis shows how each of these visualization techniques would be broken down and implemented in the Data State Model and how it could be used in a visualization system. We encourage the reader to examine the taxonomy in detail to explore the similarities between certain visualization techniques. We facilitate this analysis by grouping the techniques into several data domains.</p><p>For each of the visualization techniques, the results of the analysis help us classify and choose how to implement the different operators in a large visualization system.</p><p>For example, many hierarchical techniques share similar operating steps that can be standardized in a system. Implementers may take advantage of these similarities. As another example, the taxonomy also points out that there are many systems that use graphs or multi-dimensional point sets as the primary Analytical Abstraction. Systems could be built to take advantage of this similarity, so that the techniques can be applied more broadly to many problem domains.</p><p>For implementers, the taxonomy also directly specifies the sequential ordering of operators that are possible in a given visualization technique. In this way, it specifies the system module dependencies that are induced between the operators. Knowing these dependencies enables implementers to better organize their system for modularity. For example, we have shown that this technique enables rapid development of new visualizations in the Visualization Spreadsheet system <ref type="bibr" target="#b2">[Chi97]</ref>. Many techniques were implemented in hours rather than in days, because we realized the reusability of modules by identifying the module dependencies.</p><p>We chose the techniques based on their familiarity to the information visualization community and their relevance to information visualization systems. This set of techniques spans a range of visualization design space, as it is based on previous efforts on taxonomies of information visualization design space. In looking at each of the visualization techniques, we first determine the raw data, and how it is obtained in the system. We then construct the visualization pipeline according to the description of each of the techniques in the literature 1 .</p><p>As the visualization field grows to include more new techniques, this taxonomy will obviously change.</p><p>Future work will include taking the taxonomy and making more meta-analysis of the similarities and differences between the operators in different data domains. Given that the nature of the problem solving tasks, the Data State Model should remain a valuable tool in the analysis of the visualization design space. This is because the Data State Model helps categorization and taxonomization, which expose the dependencies between visualization modules and the similarities and differences among visualization techniques.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Data State Model applied to Web sites V AL U E</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 : Data Stages in the Data State Model</head><label>1</label><figDesc></figDesc><table><row><cell>Processing Step Description</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 : Transformation Operators Within</head><label>2</label><figDesc>each Data Stage, there are also operators that do not change the underlying data structures. These are the Within Stage Operators, of which there are four types, corresponding to the four Data Stages: Within Value, Within Analytical Abstraction, Within Visualization Abstraction, and Within View.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Visualization Technique Within Value Data Transformation Within Analytical Abstraction Visualization Transformation Within Visualiza- tion Abstraction Visual Mapping Transformation Within View Some example Scientific Visualizations</head><label></label><figDesc></figDesc><table><row><cell>Visualization Visualization Visualization</cell><cell>Within Value Within Value Within Value</cell><cell>Data Data Data</cell><cell>Within Analytical Within Analytical Within Analytical</cell><cell>Visualization Visualization Visualization</cell><cell>Within Visualiza-Within Visualiza-Within Visualiza-</cell><cell>Visual Mapping Visual Mapping Visual Mapping</cell><cell>Within View Within View Within View</cell></row><row><cell cols="3">Visible Human Project [NLM] Technique World-Within-World Technique GraphViz [AT&amp;T] Technique Time Tube [Chi98] [Feiner 93] MapQuest [MapQuest.com] Ozone Layer Visualization [Treinish94] Geographical-based Info Visualization Data:Image Scans of slices of human Marching Cubes: create voxels Transformation Data: High-dimensional point Ã… Transformation Example data: Software code Extract edges and nodes into a graph. Transformation Data: web Create graph from structure evolving web structure by set or surfaces modules, File over time and its crawling the web Data: Geographical Road Maps Parse information into records Dynamic value-system, all kinds of associated usage site filtering graphs statistics (Content, Data: Ozone layer geographical information over time Extract geographical samples into quantitative variables Profit Landscape [Visible Decisions] Data: Profit statistics linked to geographical regions Extract into quantitative variables 2D TileBars [Hearst95] Example data: text documents Parse into feature vectors. ValueBars [Chimera92] Example data: text documents, file system records Parse into feature vectors, then choose one attribute. Information Mural [Jerding96] Example data: software code, documents, stock prices, sun spot data Parse into feature vectors LifeLines [Plaisant96] Example data: medical and court records Parse into feature records Dynamic Querying [Ahlberg94] Example data: Home, Movies sales data Parse into feature records Parallel Coordinates [Inselberg97] Example data sets: production run of VLSI chip yield and its defect parameters Extract corresponding yield and parameter feature set Network history graph [Rekimoto93] [Domel94] traversal history from traversal Information Cube WebMap Data: web site Extract user path [Nation97], graph WebTOC [Munzner95] create web linkage [Beaudion96], 3D Hyperbolic Data: web site walk web site and Cheops graph DiskTree [Chi98], [Chi94] create web linkage [Johnson91], WebSpace Data: web site walk web site and Multi-dimensional Plots Cone tree [Robertson91], Hyperbolic Browser Lamping95], TreeMap Data: File system; Organization charts; Hypertext or Web linkage structure Extract into graph Web Visualization query perform weighted item and then [Wise95] vector; Choose an Galaxies stories word frequency Trees ThemeScape and Data: CNN news Create textual filtering sequences variable value-of many other Unmapped against a database reports; single sequence between different comparing a Subtraction Web page [Chi96] reports from reports; Addition, [Card96] images of each AlignmentViewer Data: Similarity Parsing textual GV3D or lpNV3D Example data: Extract Usage, and Information Landscapes and Spaces Perspective Wall [Mackinlay91] Example Data: Schedule, File system Parse information into records [Ware93] Software code connections Topology of the modules between code web site) Pad++ [Bederson94] Example data: Many types including text documents, file system, drawings. Ã… Elastic Windows [Kandogan96] Example Data: Mail reader, WWW Browser, WebBook and WebForager Data: URLs for web pages Retrieve web pages; Generate Text interfaces the data sets. Window based Ã… different views of software, several implemented using data management mentioned as patterns aggregation is communication Comment: flows; Email [Becker95] phone calls made; Internet packet and destination links. SeeNet Example data sets: Parse into source Visualization Spreadsheets</cell><cell>Abstraction: Voxels Abstraction Abstraction: Point set or surfaces. Abstraction Abstraction: graph Abstraction Analytical Abstraction: Normalize samples Evolving graph Abstraction: Parsed record set Dynamic value-filtering of records represented as ordered collection Normalize samples and quantitative values Normalize sample Search through vector; compute intersection of vectors. Allow multiple attributes to be chosen for several ValueBars. Dynamic Value-Filtering Dynamic Value-Filtering Ã… Choosing a subset of records using dynamic value-graph filtering traversal history Abstraction: value-filtering value-filtering Abstraction: Graph Apply dynamic value-filtering of nodes or edges vectors Abstraction: Text Analytical information) representing parsed pages (data structure getting the Web Alignment records generated by Abstraction: filter nodes of graph Abstraction: Parsed record set Dynamic value-filtering of records Abstraction: windows, lines, icons, points, Abstraction: Images of HTML pages Aggregate records displayed statistics; Abstraction: windows Choose variables of value-filtering; Unmapped variable sets polygons. associated feature and destination and abstraction: parsed records of source Analytical</cell><cell>Ã… Transformation Ã… Transformation Ã… Transformation Do breadth first traversal with global node Create linear list of records position over time Direct spatial mapping of quantitative values to longitude, latitude, height Direct spatial mapping of geo-coordinate variables Each rectangle corresponds to a document. Ã… Ã… Create lines on 2D plot Create multi-dimensional point sets Create point set from records spanning trees. Form navigation first traversal tree Create breadth first traversal tree Create breadth Do breadth first traversal analysis component Principal scaling (MDS); Multi-dimensional the collection create a book from from a URL and of lists); Crawl shelf (creating list Place pile on book records book or a pile; information from Aggregate into a Extracting Form nested Create linear list of records graphs from earlier extracted Create linear list of pages; Ã… graphs and networks. Ã… graphs. Transform into</cell><cell>Ã… tion Abstraction Ã… tion Abstraction tion Abstraction Visualization Ã… Abstraction: Evolving tree as Visualization Abstraction: Linear list with item features ordered list of trees Abstraction: Earth with overlaid info. Ã… Ã… Ã… Ã… Dynamic value-filtering; Apply unmapped variable filtering Dynamic value-filtering; Apply unmapped variable Visualization Abstraction: Point Abstraction: Tree set Visualization Abstraction: Tree filtering Visualization Abstraction: Tree Visualization Visualization Abstraction: Tree hierarchy positions from MDS Abstraction: 2D Visualization lists Merge sets of page with vector Merge page lists; Feature point set lists. Abstraction: Collection of page Visualization Dynamic value-Visualization Abstraction: Linear list with item features filtering; Apply unmapped variable Abstraction: Linear page lists, Many kinds of windows are compatible. Many Abstractions are compatible. Networks Abstraction: Graphs, and filtering Visualization</cell><cell>Create slices of Transformation Map high dimensional surface to local area Transformation Sophisticated graph Transformation Create Time Tube, layout algorithm that which is represented places nodes on 2D using an aggregation of Volumes Icons depicting different locations and their types: restaurants, etc. plane intelligently Disk Trees (invisible tube--like shelf) Map quantitative variables to longitude, latitude, and height; Map ozone level to color Map geo-coordinate variables onto a geographical map; Map profit variable to glyph (size of lines) Squares represent text segments; darkness Lines represent the Lines represent the document; color maps another value or type. Icons indicate discrete events; Line colors and thickness indicate relation or significance layout layout, Horizon tree circle layout, rectangle Plot point set using parallel coordinates Map to Tree layout, Hyperbolic Tree Map into scatter plot; Layout using 3D axes mappings transparent cubes. Choosing variables-to-technique with semi-Using Information Cube Layout using cone tree Layout using 3D cones; hyperbolic tree; Disk Tree; Expanding trees; Cheops approach; space filling TreeMap; hills and valleys Map into surfaces of an item in the value of the attribute of document. an item in the text value of the attribute of piles Create bookshelf, table, terms using Document Lens; Map into comb-glyphs indicates frequency of Map code modules into Create wall panels in 3D with glyphs, with focus+context distortion-based display cubes in 3D, with linkages between cubes Create books with multiple pages; View Create Elastic Window (space-tiling) mapping to screen Many representations. geographical linkmaps, or nodemaps specifying relationships Display graph as matrix,</cell><cell>Dynamic view-filtering; Rotate, Scale, Focus View: graph with minimized edge crossings. Recognize gestures for: Focus on a slice; Bring slices back into the Time Tube; Specifying slices using sliders Zooming focus on the connectivity of a node by right-clicking on it; Rotate slices; Brushing Scroll, Zoom, View-filtering of interested on pages by highlight URL on all slices; locations. Rotate, Scale, Animate; Change colormap Rotate, Scale, Animate; Change colormap Dynamic view-filtering Dynamic view-filtering Interactive permutation of axis Dynamic view-filtering; Sorting of axis; Dynamic view-filtering Dynamic view-filtering Dynamic view-filtering filtering and position of tree; Apply Dynamic level-For Galaxies: Animate scatter plot Focus node; Hide subtree; Change orientation For ThemeScape: Create slices Zoom, Rotate; Focus on detail spot Scroll; zoom using an iterator over the view-filtering) Scroll alignment; Detail-on-demand; Animation (by Document Lens; Put onto history pile Rotation, Translate Zoom; Focus on a single Browse Dynamic view-filtering Animate through the slices Focus on a particular wall; Focus an item; Dynamic view-filter; Choose different levels of detail through pages in a book; View book using Focus on a book; Focus on a page; Flip color sensitivity view-slider For nodemaps: Change symbol size; Use Dynamic query threshold view-slider speed; Change line thickness, or line length; Change focus, enlarge, zoom-out Color, Zoom; Parameter focusing; Identification by brushing; Change animation For nodemaps and linkmaps: Change Size, Zoom: some objects will fade in, some will slider; Permute rows and columns Scroll For matrix display: Threshold time view-fade out Unmapped variable view-filtering (they called it 'conditioning') For all three views: Sound feedback;</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">We have omitted the bibliography of all of the 36 techniques mentioned to save space. The interested reader should refer to<ref type="bibr" target="#b1">[CMS99]</ref> or write to the author.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0" />
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Structure of the Information Visualization Design Space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Information Visualization (InfoVis &apos;97)</title>
		<meeting>IEEE Symposium on Information Visualization (InfoVis &apos;97)<address><addrLine>Phoenix, Arizona</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="92" to="99" />
		</imprint>
	</monogr>
	<note>Color Plate 125</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Information Visualization: Using Vision to Think</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Morgan-Kaufmann</publisher>
			<pubPlace>San Francisco, California</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A Spreadsheet Approach to Information Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><forename type="middle">H</forename><surname>Chi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Barry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Riedl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Konstan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Information Visualization (InfoVis &apos;97)</title>
		<meeting><address><addrLine>Phoenix, AZ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="17" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">An Operator Interaction Framework for Visualization Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><forename type="middle">H</forename><surname>Chi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Information Visualization (InfoVis &apos;98)</title>
		<meeting><address><addrLine>Research Triangle Park, North Carolina</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">A Framework for Information Visualization Spreadsheets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><forename type="middle">H</forename><surname>Chi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-03" />
		</imprint>
		<respStmt>
			<orgName>University of Minnesota</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The eyes have it: A task by data type taxonomy of information visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symposium on Visual Languages &apos;96</title>
		<meeting>IEEE Symposium on Visual Languages &apos;96<address><addrLine>Los Alamos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1996-09" />
			<biblScope unit="page" from="336" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">A Taxonomy of Information Visualization User-Interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>North</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<ptr target="http://otal.umd.edu/Olive/" />
		<title level="m">On-line Library of Information Visualization Environments</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
