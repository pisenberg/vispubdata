<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Seamster: Inconspicuous Low-Distortion Texture Seam Layout</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alla</forename><surname>Sheffer</surname></persName>
							<email>sheffa@cs.technion.ac.il</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">C</forename><surname>Hart</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Technion I.I.T</orgName>
								<address>
									<settlement>Haifa</settlement>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Seamster: Inconspicuous Low-Distortion Texture Seam Layout</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism-Color</term>
					<term>shading</term>
					<term>shadowing</term>
					<term>and texture Texture Mapping</term>
					<term>Visibility Classification</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Seamster efficiently figures out where to cut an object to flatten it. Figure (a) shows that the seam (in blue) sneaks through low visibility regions of the model (in red) to cut into high curvature vertices, reducing the distortion of the flattening (b) and texturing (c).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Texture mapping is a useful tool in the visualization of surfaces. Texturing capitalizes on the perceptual cue of size constancy to aid the user in perceiving depth. The higher the spatial frequency of a texture, the farther away the surface appears. Texturing can also be used to annotate a surface, with grid lines, text, markers, glyphs or other features.</p><p>Texture mapping requires the assignment of texture coordinates to a meshed surface, but meshes in visualization applications are often unparameterized and unstructured. A variety of techniques have been devised to automatically generate texture coordinates for such meshes. Many of these techniques strive to minimize the distortion of the texture mapping, preserving the proportions of features in the texture as they are mapped to the object surface.</p><p>A majority of these techniques generate the texture by mapping the surface into the plane and using it as a two dimensional texture map. These techniques assume that the surface mesh has already been cut into a simply connected two-dimensional manifold-withboundary. Once such a cut has been performed, the mesh can be flattened into the domain of the texture map. The selection of this cut is often either arbitrary or left to the intuition of the user.</p><p>The cut results in a texture seam, which can appear as a discontinuity in the appearance of the texture on the object surface. Hence cuts should be made judiciously and kept short when possible. Users often hide the seam by placing it in an area of the model that is least seen. For example, texture maps for animals typically have their seam along the underbelly.</p><p>The layout of a two-dimensional texture map onto the surface of a given three-dimensional object inevitably creates distortion in all but special cases. It is a well-known differential geometry result that for a general surface patch there is no distance-preserving (isometric) parameterization in the plane <ref type="bibr" target="#b0">[1]</ref>. Distance-preserving parameterizations exist only for developable surfaces, i.e. surfaces with zero Gaussian curvature such as the cylinder.</p><p>The strategic placement of seams can reduce this distortion. Cutting a seam through areas of high Gaussian curvature can relieve the tension induced by flattening, reducing the local distortion of the area's texture at the expense of introducing a texture seam. For example, user-designed cuts of animal models often extend to the high-curvature extremeties (e.g. fingers, feet, tail).</p><p>We have previously developed a seam-cutting method that finds vertices with high Gaussian curvature and forces the seam to pass through these vertices <ref type="bibr" target="#b21">[22]</ref>. This method tried to minimize the impact of the seam by finding an approximate shortest cutting path (actually a tree) through the high curvature vertices. Unfortunately, this approximate solution was still slow, taking up to an hour on the large meshes found in visualization applications, and the seam it generated passed conspicuously through highly visible regions of the mesh.</p><p>Seamster is an improvement designed to increase the speed and the visual quality of automatic texture coordinate synthesis. Like its predecessor, Seamster cuts the surface into a low distortion patch by cutting through high curvature regions of the surface (reviewed in Section 5), though Seamster uses a faster technique, described in Section 6, for finding approximate minimal paths that runs in a few minutes on the large meshes used in visualization applications. Unlike its predecessor, Seamster minimizes the visual impact of the seam by guiding the seam through less visible parts of the surface, using a technique described in Section 4. Seamster can handle manifolds of any genus by using a cutting technique recently introduced by Erickson and Har-Peled <ref type="bibr" target="#b5">[6]</ref>. Section 6.3 shows that visibility considerations can significantly accelerate the process of finding genus reducing cuts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The layout of a texture map onto a given object surface induces a mapping of the object surface into a texture domain. Most existing automatic and interactive techniques (e.g. <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b4">5]</ref>) generate texture coordinates by providing a mapping to a two dimensional texture domain. These techniques require such a mapping to exist, i.e. they expect the surface to be an open twomanifold, topologically equivalent to a disk. Using this assumption, the methods focused only on the geometry of the mapping, leaving the mesh conectivity as is. They treated distortion as an energy functional, and collectively applied a variety of different energy minimization techniques to assign texture coordinates to mesh vertices.</p><p>Several works (e.g. <ref type="bibr" target="#b8">[9]</ref>) suggested using a spherical texture domain, which allows seamless mapping for closed surfaces. However, these methods require a spherical texture, which is rarely available, and do not necessarily lead to lower distortions than those achieved by planar mapping.</p><p>The problem of providing planar texture map for closed surfaces was raised by Piponi and Borshukov <ref type="bibr" target="#b17">[18]</ref>. The Pelting method they propose generates textures for simply connected closed meshes. The method expects the user to define the seams necessary to generate the planar mapping. Pelting also contributed a blending mechanism used to feather the texture map near its boundary, blending the boundary of the texture at its seam. This blending removes the texture discontinuity artifact that ordinarily appears along a seam, but generates blurring artifacts in low frequency and structured textures.</p><p>Lapped textures avoid distortion by creating numerous small texture maps <ref type="bibr" target="#b18">[19]</ref>. Like pelting, lapped texture also used texture blending to avoid seams. In addition, its small texture swatches had irregular boundaries to further disguise the seams. Lapped textures are not texture maps, and hence do not efficiently support texturemap applications like surface painting. The blended swatches also exhibit blurring artifacts when applied to low frequency or highly structured textures. The ability to layout a large texture instead of a bunch of small ones better supports surface painting and textures with low-frequency features.</p><p>Sander et al., <ref type="bibr" target="#b20">[21]</ref> and Levy et al. <ref type="bibr" target="#b13">[14]</ref> subdivide the surface into multiple small patches and texture map the patches separately. Carr and Hart <ref type="bibr" target="#b2">[3]</ref> have even texture mapped individual polygons. These procedures have many of the advantages and drawbacks of the lapped texture method. In a recent work, Gu et al. <ref type="bibr" target="#b7">[8]</ref> suggest using seams for reducing mapping distortion. The authors apply parameterization repetitively to find regions of maximal distortion and connect the regions to the boundary one at a time. The procedure does not provide minimal seams in terms of length and visibility. It can be time consuming as surface parameterization has to be performed repetitively to locate each region of high distortion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ALGORITHM OVERVIEW</head><p>Our algorithm receives as input a 2-manifold triangulated surface of any genus (closed or open) in three dimensions. It then cuts seams into the surface along the existing edges of the mesh to satisfy the following goals. First, the seams have to convert the surface into an open genus zero 2-manifold with a single loop of boundary edges. This requirement converts the surface into a valid input to most texture mapping methods. The majority of the methods mentioned above can not handle inputs with multiple boundary loops (e.g. a cylinder). Hence the seams we generate will have to be connected and will have to join the existing multiple boundary loops on the surface into a single boundary loop.</p><p>The second goal is to provide a surface which has acceptable mapping distortion. The actual texture distortion will depend on the parameterization method used. But as explained above it will be bounded from below by an inherent distortion functional of the surface itself. The purpose of the seams is to reduce this part of the distortion to a level acceptable to the user.</p><p>While satisfying those two goals the visual impact of the seams is minimized by minimizing their length and hiding them in less visible parts of the model. The algorithm has two main stages. First it pre-processes the model by computing a visibility measure for the mesh edges (Section 4) and assigning a distortion measure to the mesh nodes (Section 5). In the second step nodes which contribute a significant part of the distortion are selected. Those nodes are then connected by minimally visible seams (Section 6).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">VISIBILITY</head><p>The seams generated by Seamster need to cut through high distortion areas of the model to reduce distortion. This constraint still leaves a lot of freedom in the choice of the seam paths. For example, fingers and other extremities have high curvature and are usually cut from the base to the tip, but often a direct cut from any point on the base to the tip will work.</p><p>We use the visibility of the seam as an additional criterion for determining its path. The incorporation of visibility allows the seam to follow hidden paths that are the most obstructed from view.</p><p>Seamster classifies the visibility of edges using a faster, hardware accelerated version of Interior/Exterior Classification <ref type="bibr" target="#b16">[17]</ref>. Nooruddin and Turk classified regions as interior or exterior based on visibility. They performed this classification by ray tracing a polygonal object orthographically, from a variety of uniformly sampled viewpoints on a hemisphere, into layered depth images. They then classified segments as interior or exterior based on their average visibility.</p><p>Our visibility classification implementation uses a simple rasterization z-buffer. We repeatedly render the polygons of the object viewed orthographically from viewpoints uniformly sampled across the entire sphere. Each polygon is plotted with a color corresponding to the index of its face in the object mesh database. The framebuffer is then accessed, and a visibility counter associated with each polygonal face is incremented once if its color is present in the framebuffer. These face visibility counters are divided by the number of renderings to yield an average visibility of each face.</p><p>The visibility V ( f ) of a face f will range from zero, for faces of interior or heavily occluded structures, to 50% (or more) for prominent faces. (The visibility can exceed 50% due to the stochastic nature of the finite number of samples.) Adjacent face visibilities are averaged to approximate the visibility of their shared edge, which we denote V (e).</p><p>A more accurate determination of edge visibilities V (e) can be obtained by rendering a hidden line drawing. As before the object is rendered orthographically from viewpoints uniformly sampled from the sphere. This time a hidden-line rendering is performed where each edge is drawn using a color corresponding to its index in the object mesh database. As before, the framebuffer is accessed and a visibility counter is incremented for each edge whose index appears as a pixel color in the stored framebuffer.</p><p>The choice of the sphere as the sampling domain assumes that the user is equally likely to view the model from any direction. This is true in a modeling environment, but is too general for many animation scenarios. For example, when modeling animated creatures which walk on the ground the view from below the animal is usually not very likely. By limiting the sampling to parts of the sphere, we can modify the visibility measurements to reflect the more restricted set of viewpoints. This will prioritize seam placement in regions which are less visible from more common viewpoints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISTORTION</head><p>To estimate the distortion generated when the surface is mapped to the plane we can measure the Gaussian curvature of the surface <ref type="bibr" target="#b0">[1]</ref>. Zero Gaussian curvature corresponds to a developable surface which can be mapped to the plane with zero distortion. The curvature at any surface point is an indicator of how far a surface is locally from being developable. The distortion is in fact a monotone increasing function of the curvature's magnitude. Note that while the actual distortion depends on the parameterization method used, the distortion estimate should always provide a lower bound for the actual distortion. For the purpose of distortion measurement only the curvature at the mesh vertices is of interest. The edges do not contribute to the distortion, since a surface is locally developable around each edge. A pair of faces sharing an edge can always be projected to the plane with no distortion <ref type="figure" target="#fig_0">(Figure 2(a)</ref>). This is not true for vertices <ref type="figure" target="#fig_0">(Figure 2</ref> When considering distortion at vertices, we can consider the distortion within the immediate neighborhood of the vertex or across a larger surrounding region. In the later case we better capture the curvature for fine meshes. Consider for example a hand model with a fine mesh. If only local curvature is considered, the vertices on the finger tips will not stand out with respect to curvature compared to other vertices. However, if the curvature across a surrounding region is measured, the value at the tips will be significantly higher than on the palm. We define the region M r (n) around vertex n as follows. Let r ≥ 0 be the region magnitude. For r = 0, the region contains the triangles adjacent to n. For r &gt; 0 we define the region radius R as the product of r and the length of the longest edge emanating from n</p><formula xml:id="formula_0">R 1 α α 2 α 3 n τ 1 2 τ 3 τ n<label>(</label></formula><formula xml:id="formula_1">R = r max (n,m) n − m .</formula><p>Given the radius, the region M r contains all the triangles of the mesh within distance R from n (measuring distance between vertices). We then consider the triangles t j formed by the boundary edges of M r and n <ref type="figure" target="#fig_1">(Figure 3(b)</ref>). Region distortion <ref type="bibr" target="#b21">[22]</ref> is defined as</p><formula xml:id="formula_2">D r (n) = 2π − ∑ j τ j 2π ,<label>(1)</label></formula><p>where τ j are the angles at n of triangles t j . This measure varies significantly as r changes. To capture the distortion both for coarse and fine mesh levels we use</p><formula xml:id="formula_3">D r (n) = max 0≤i≤r (D i (n))<label>(2)</label></formula><p>instead. The radius i corresponding to the maximal distortion value is stored for later processing. The distortion, as defined, can be negative (at saddle points). The measure above applies only to interior mesh vertices. At the mesh boundary we need to distinguish between two cases. If the sum of angles around a boundary vertex n is less than 2π, then the sub-mesh around it is locally developable and D r (n) = 0. If the sum is above 2π, D r (n) &lt; 0 and has to be computed as above.</p><p>For D r (n) to be a correct indicator of distortion around a vertex, we need to handle two additional concerns. One concern is that the construction of M r must avoid the generation of regions with multiple loops <ref type="figure">(Figure 4(a)</ref>). Otherwise, using D r on a developable cylindrical region will wrongly indicate high distortion.</p><p>An even more important issue not handled by the previous development of this distortion measure <ref type="bibr" target="#b21">[22]</ref> is region overlap. As demonstrated in <ref type="figure">Figure 5</ref>, for any pair of nearby vertices n and m and an r larger than the distance between the two, the regions M r (n) and M r (m) will overlap. This often causes an artificial increase in the curvature measure at one of the vertices, since its region partly incorporates the region around the second vertex. In <ref type="figure">Figure 5</ref> D r (m) will be affected by the high curvature around n. If the distortion measure is used as is, this will generate artificial clustering of vertices with high D r <ref type="figure">(Figure 4(c)</ref>). To avoid this the following test is performed for any pair of vertices n and m, where n is inside M i (m) (i is the index at which D r (m) is maximized).</p><p>• If D r (n) is larger than D r (m) we assume that n is the main contributor to the distortion. In this case we need to compute the distortion around m limiting it to a region not containing n. For efficiency reasons, we in this case limit ourselves to the immediate region around m and set D r (m) = D 0 (m).</p><p>• If the two values are about equal, we need to consider the distortion in the non-overlapping regions around them. Yet again for efficiency reasons we consider only the r = 0 regions around them. If D 0 (m) &gt; D 0 (n) we keep D r (m) as is, and set D r (n) = D 0 (n), or vice versa.</p><p>After the region "filtering" we obtain a much more correct indi-cation of vertices which are the centers of regions of high distortion <ref type="figure">(Figure 4(d)</ref>). Note that using the region distortion provides a much better indicator than using the local distortion only <ref type="figure">(Figure 4(b)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">SEAM CUTTING ALGORITHM</head><p>The purpose of adding seams is to reduce the overall mesh distortion D(M) = ∑ n D r (n) by cutting through interior high distortion vertices and thus setting the distortion at these vertices to zero. In the discussion below we ignore the case where vertex distortion is negative (angle sum above 2π) for simplicity. A seam will reduce the distortion at a negative curvature point only if it passes through the saddle vertex. If the seam terminates at a negative curvature point, the flattened surface can overlap itself. A seam can reduce the distortion of a positive curvature region even if it terminates at a high curvature vertex without fear of overlap. Another purpose of the seams is to reduce the genus of multiply connected surfaces, to enable planar parameterization (Section 6.3). As explained above, the vast majority of the parameterization methods require the parameterized surface to have a single boundary loop. Therefore all the seams have to be connected. The problem of finding optimal seams to reduce the distortion below a desired level D can be defined as follows on the graph of the mesh vertices and edges (N, E).</p><p>• Set the cost of each vertex n to D r (n).</p><p>• Set the weight of each interior mesh edge W (e) = V (e) e .</p><p>(Recall V (e) is the edge visibility). For boundary edges set W (e) = ε &gt; 0 since boundary edges do not "cost" in terms of cutting, but for algorithm simplicity their weight has to be above zero.</p><p>• Find a connected sub-tree S = (N t , E t ) s.t.</p><formula xml:id="formula_4">-∑ n / ∈N t D r (n) ≤ D, -∑ e∈E t W (e) is minimal.</formula><p>This is a variant of the prize-collecting Steiner tree problem <ref type="bibr" target="#b9">[10]</ref>, which is known to be NP-Complete. A factor of two approximation algorithm for the problem is given by Goemans and Williamson <ref type="bibr" target="#b6">[7]</ref>. <ref type="figure" target="#fig_3">Figure 6(a)</ref> shows the result of implementing a variant of this method on a cow model to reduce the distortion by one-third. This example demonstrates the main drawback of using this approach in our case. The surface distortion is not spread equally or even randomly throughout the model, but more commonly is concentrated in several regions of the model. Thus local methods <ref type="bibr" target="#b6">[7]</ref> produce inadequate results. To overcome this problem we separate the solution into two tasks. First we select the vertices with high distortion measure, which we call terminals, and then construct a tree which connects them. The chosen method does not guarantee the factor of two approximation, however, in practice it generates shorter seams (in terms of weight) for the same amount of distortion reduction. The method finds the seam tree as follows.</p><p>1. Select a set of terminal vertices T to serve as the tree leaves.</p><p>2. Compute an approximate minimal Steiner tree of T .</p><p>The two stages are described in detail below. Note that the minimal Steiner tree problem, formally defined below, is also NP-Complete and hence only an approximate tree is computed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Terminal Vertex Selection</head><p>Prior to selecting the vertices, the desired distortion level D needs to be selected. Given the total distortion D(M) across the mesh, the acceptable distortion D is selected by the user, as it highly depends on specific application needs. We provided three choices of selecting D:</p><p>1. Set D to some constant, unrelated to the specific mesh properties.</p><p>2. Set D to a percentage of the overall distortion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Set an acceptable distortion at a vertex d and set D = d|N|,</head><p>where |N| is the number of vertices in the mesh.</p><p>From the experiments, the choice of D as a percentage of the overall distortion is the most intuitive and easy to manipulate. This choice was used for all the examples in the paper. Given D the selection of terminal vertices T is performed as follows.</p><p>Algorithm 1 (VerticesSelect(N)).</p><p>1. begin</p><formula xml:id="formula_5">2. sort N in nonascending order of D r (D r (n i ) ≥ D r (n i+1 )) 3. i = 0, s = 0, T ← / 0 4. while s &lt; D(M) − D 5. T ← T ∪ n i 6. i = i + 1, s = s + D r (n i )</formula><p>7. endwhile</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">end</head><p>This gives us the vertices with highest expected distortion around them. During the selection we can also consider the vertex visibility, by ordering vertices according to D r /V (n) where V (n) is the vertex visibility. This will prioritize the selection of less visible vertices. Adding the visibility factor has a minor effect on models with prominent features, but hides the seams better for models where distortion is spread relatively equally. The selection guarantees that the distortion after the seam addition will be less than D. The final surface, after the seam cutting, should have a single boundary loop. Hence, if the surface a priori contains one or more boundary loops, we add all the boundary vertices to T . By assigning small ε &gt; 0 weights to the boundary edges, as explained above, we guarantee that the boundary loops will automatically be incorporated into the seam by the Steiner tree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Approximate Minimal Steiner Tree</head><p>A Steiner tree for a set of vertices (terminals) in a graph is a connected sub-graph containing all the terminal vertices <ref type="bibr" target="#b23">[24]</ref>. A minimal Steiner tree is a Steiner tree with minimal sum of edge weights. The problem of finding the minimal Steiner tree is NP-Complete <ref type="bibr" target="#b23">[24]</ref>. The following is a standard algorithm for approximation of the minimal Steiner tree. It is proven to be within factor of 2/ √ 3 of the optimum <ref type="bibr" target="#b23">[24]</ref>.</p><p>1. For each n, m ∈ T compute the shortest path P(n, m) between n and m.</p><p>2. Define a new graph where T are the vertices and there are edges between each pair of vertices. The new edge weights are set to weight of the shortest path between the two terminals.</p><p>3. Compute the minimal spanning tree on the new graph.</p><p>Our previous implementation <ref type="bibr" target="#b21">[22]</ref> of the approximate Steiner tree for generating seams used Dijkstra's shortest path algorithm <ref type="bibr" target="#b3">[4]</ref> for Step 1 and Kruskal's minima spanning tree algorithm <ref type="bibr" target="#b3">[4]</ref> for Step 3. That implementation explicitly computed the paths from all the terminal vertices to all the vertices in the mesh. However, only a fraction of those are used for the computation of the tree in Step 3.</p><p>This work provides a new algorithm for computing the MST which shortens the computational time to a fraction of its original cost ( <ref type="table">Table 1</ref>). The main idea of the algorithm is to use front propagation from a set of seeds. The initial seeds are the selected terminal vertices. the fronts around each seed are grown by adding the vertex with shortest path to one of the seeds n to its front. When two fronts meet, at a vertex n we perform the following. First the path from seed s 1 to n and the path from seed s 2 to n are stored as part of the MST. It is proven that the two sub-paths define the shortest path from s 1 to s 2 . From now on the two fronts are considered a single joint front with the seed set {s 1 , s 2 }. This ensures that only paths from the two seeds to other terminal vertices will be considered. The process continues until all the fronts are merged. At this point we obtain a path connecting all the terminal vertices as required.</p><p>The resulting tree has the same weight sum as the one computed using the Dijkstra and Kruskal algorithms. As demonstrated in Table 1 the speedup increases with increase in model size and number of terminal vertices (model complexity). The speedup allows handling of significantly larger models (e.g. <ref type="figure">Fig. 11</ref>). However at those sizes the second part of a mapping procedure, namely the actual mapping computation becomes excessively time consuming. (This is true for any of the existing mapping methods).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Genus Reduction</head><p>A surfaces can be mapped to a planar domain only when it is homeomorphic to a disk. Hence surfaces of genus greater than zero have to be cut to enable the mapping. The genus of a connected two manifold can be computed using the Euler-Poincare formula</p><formula xml:id="formula_6">N + F − E = 2 − 2G − B,</formula><p>where N, F, and E are the numbers of mesh vertices, faces and edges respectively, G is the genus and B is the number of boundary loops. The problem of finding a minimal set of cut edges is known to be NP-Hard <ref type="bibr" target="#b5">[6]</ref>.</p><p>The algorithm proposed in <ref type="bibr" target="#b5">[6]</ref> repeatedly finds the shortest loop connecting a mesh vertex to itself using front propagation. The loops are then tested to see if they reduce the surface genus or simply cut the surface into two pieces. After the loops of all the vertices are found, the shortest one which reduces the genus by one is selected. The process is repeated until the genus is reduced to zero. The procedure is proven to find cuts whose length is within a constant factor of the minimal cuts. However, due to the repetitive testing it can be quite time consuming. Seamster integrates visibility information into the genus reduction process. This information is helpful since the interior walls of a tunnel, across which the shortest cut should pass, are less visible than its exterior entryways. The modified procedure is performed as follows. We treat genus-reducing seams as manifold boundaries, and so genus reduction occurs after visibility determination but before seams are cut between high-distortion vertices. First the mesh nodes are sorted in increasing order of visibility. Starting from least visible vertex we find the shortest weighted loop which connects the vertex to itself. The weight is the visibility of the edge computed similarly to the tree cutting procedure above. As in <ref type="bibr" target="#b5">[6]</ref> we check if the loop reduces the genus. If it does, we introduce the necessary cut. Here we differ from <ref type="bibr" target="#b5">[6]</ref> where all loops are computed and tested. In theory this can produce longer cuts, but in practice due to the use of low visibility in the vertex and path selection, we find paths which are close to optimal. Similarly to <ref type="bibr" target="#b5">[6]</ref> we continue the testing of loops until the genus is reduced to zero. By avoiding the testing of all the loops at each stage we reduce the runtime by a factor of |N|. In practice it is reduced further since low visibility vertices are likely to occur on loops which reduce genus, hence less vertices need to be tested to find such loops. An example of genus reduction is shown in <ref type="figure" target="#fig_4">Figure 7</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS</head><p>To generate surface texture Seamster needs to be combined with an actual mapping (parameterization) procedure. In the examples in this paper (e.g. <ref type="figure" target="#fig_5">Figure 8</ref>) it was combined with a texture mapping method developed by Sheffer and de Sturler <ref type="bibr" target="#b22">[23]</ref>. The method does not require the two-dimensional domain boundary to be predefined, and does not force it to be convex. Seamster can also be combined with other similar parameterization techniques <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b4">5]</ref>.</p><p>The examples in this section demonstrate the seams and the texture generated based on them. Except <ref type="figure" target="#fig_4">Figure 7</ref> all the models are of genus zero. We have demonstrated Seamster on both open and closed meshes (e.g. the head model shown in <ref type="figure" target="#fig_5">Figure 8</ref> boundary loop at its neck). The visibility function on the models shown in <ref type="figure" target="#fig_6">Figures 1, 9</ref> and 10 is visualized by a color spectrum from red to green, where red is low visibility and green is high. For the four-legged animals (cow, triceratops, and rabbit) the view sphere was constrained to views from above. The flat "skin" models show the two dimensional mapping of the cut surface. The statistics on some of the models and results are summarized in <ref type="table">Table 1</ref>.  <ref type="table">Table 1</ref>: Model Statistics. The seam length percent measures the length of the seam edges with respect to the total length of mesh edges. The mapping distortion is measured using stretch measure <ref type="bibr" target="#b20">[21]</ref> (the value range is <ref type="bibr">[1, ∞]</ref>). The execution times compare Seamster to our previous distortion-minimizing seam cutting implementation. <ref type="figure" target="#fig_6">Figure 9</ref> demonstrates the effect of the visibility factor on the seams in the triceratops model, zooming in on the head. Taking visibility into consideration, the seams become longer but move to less visible locations between the horns, under the chin and along the crown.  Seamster ran over twenty times faster on this model than did our previous MST implementation (which took over an hour).</p><p>(a) (b) <ref type="figure">Figure 11</ref>: Texturing a large model (28K faces). <ref type="figure" target="#fig_0">Figure 12</ref> compares the results of the optimal seams method with seams and texture generated using geometry images <ref type="bibr" target="#b7">[8]</ref>. The main difference between the resulting seams is in the connection of the index finger and thumb and in the seam on the back of the hand. The seams generated by seamster are shorter and the final texture has less distortion (stretch metric of 1.4 for geometry images v. 1.055 for Seamster), thanks to the free boundary mapping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSIONS</head><p>We have developed a new method for non-distorted texture mapping by generating surface seams prior to the parameterization pro-cedure. The new algorithm converts any closed or open surface into a patch homeomorphic to a disk, which can be parameterized in the plane. It reduces the parameterization distortion to a level acceptable by the user. All this is done while minimizing the visual impact of the seams, by minimizing their length and hiding them in less visible areas of the model.</p><p>One important problem to be addressed in future research is fitting textures across seams. The problem is seen in <ref type="figure" target="#fig_5">Figure 8(b)</ref>, where the texture discontinuity at the seam along the brow is very visible. The seam is necessary for distortion reduction and hence cannot be avoided. There is also no better (more hidden) path for it. However, it might be possible given a specific texture to find a local mapping stretching the texture so that the discontinuity is less visible. In the case of <ref type="figure" target="#fig_5">Figure 8</ref>(b) it is possible to move the texture on the two sides of the brow, making the yellow and black stripes meet, and thus hiding the seam. An automatic procedure to do this is an important future extension of the method.</p><p>A second problem we plan to address is a more rigorous way to measure surface distortion, which will more accurately capture the model shape. This will enable easier comparison between models with respect to their inherent distortion. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Local mapping to a plane: (a) the immediate neighborhood of an edge can be flattened with no distortion, (b) but the neighborhood of a vertex generally cannot.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Measuring distortion. (a) Submesh M r . The blue lines indicate the triangles used to measure D 0 (n); (b) Measuring D r (n) using the anglesτ j formed by n and the boundary edges of M r .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Region distortion. The spikes identify the vertices which represent high distortion regions. The colored regions around them identify the corresponding M i 's (the region for each vertex is colored in different shade). (a) Cylindrical regions generated on cow's (Figure 1) tail using basic D r definition. (b)-(d) Vertices responsible for 25% of the head model distortion. (b) Regions and vertices generated with r = 0, i.e. based only on local curvature at the vertices. (c) Regions and vertices generated with r = 5 with no overlap avoidance. (d) Same, with overlap avoidance. n m Overlapping vertex regions M r (n) and M r (m).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Seam generation methods. (a) Prize-collecting Steiner tree. (b) Seamster -minimal Steiner tree on a subset of vertices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>Seams reducing the genus of a figure eight model and the resulting texture. The two interior loops are found by the genus reduction method. The remaining seams were created by the spanning tree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 :</head><label>8</label><figDesc>Texture examples: (a) moon (2K faces); (b) head (7K faces); (c) cat (670 faces).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :</head><label>9</label><figDesc>Seams with and without visibility factor. (a) Regions of extremum points on the head. (b) Shortest seams connecting them. (c) Visibility function (red shows less visible regions) and the seams generated using visibility.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 11 Figure 10 :</head><label>1110</label><figDesc>utilizes the efficiency of Seamster's fast approximate MST algorithm to generate the seam of a large dinosaur model. Seamster generated textures. (a,d) Visibility and seams. (b,e) Flat parameterization "skin." (c,f) Texture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 12 :</head><label>12</label><figDesc>Seams and texture comparison. (a)-(b) Seams and texture generated using geometry images. (c)-(f) Seamster results. (c)-(d) Visibility functional and seams, (e)-(f) texture generated by ABF [23].</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgments. This work was sponsored in part by the NSF under grant NSG-9732379. Thanks to Hugues Hoppe for the hand model and statistics, and to Jerome Maillot for the head model. Thanks also to Sariel Har-Peled and Jeff Erickson for their help with genus reduction. The picture at the end of the references was created by Oded Fuhrmann.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Riemann Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">V</forename><surname>Ahlfors</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Sario</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1960" />
			<publisher>Princeton University Press</publisher>
			<pubPlace>Princeton, New Jersey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Piecewise surface flattening for nondistorted texture mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bennis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vezien</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Iglesias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 91</title>
		<meeting>SIGGRAPH 91</meeting>
		<imprint>
			<date type="published" when="1991-07" />
			<biblScope unit="page" from="237" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Meshed atlases for real-time procedural solid texturing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">C</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="106" to="131" />
			<date type="published" when="2002-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Introduction to Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">H</forename><surname>Cormen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">E</forename><surname>Lieseron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Rivest</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Intrinsic parameterizations of surface meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographic</title>
		<meeting>Eurographic</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
	<note>page to appear</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Cutting a surface into a disk</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Erickson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Har-Peled</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Symposium on Computational Geometry</title>
		<meeting>ACM Symposium on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="244" to="253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A general approximation technique for constrained forest problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">X</forename><surname>Goemans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Williamson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="296" to="317" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gortler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<title level="m">Geometry images. Proc. SIGGRAPH 2002</title>
		<imprint>
			<date type="published" when="2002-07" />
			<biblScope unit="page" from="355" to="361" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Conformal surface parameterization for texture mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Haker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Angenent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tannenbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sapiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Halle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="181" to="189" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Approximation Algorithms for NP-hard Problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Hochbaum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>PWS Publishing Company</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Mips: an efficient global parameterization method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hormann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Greiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Curve and Surface Design</title>
		<meeting><address><addrLine>St. Malo</addrLine></address></meeting>
		<imprint>
			<publisher>Vanderbilt University Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="153" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Quasi-conformally flat mapping the human cerebellum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hurdal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bowers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Stephenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sumners</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">K</forename><surname>Rehms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Schaper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rottenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of MICCAI&apos;99</title>
		<meeting>of MICCAI&apos;99</meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1999" />
			<biblScope unit="volume">1679</biblScope>
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Non-distorted texture mapping for sheared triangulated meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Mallet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 98</title>
		<meeting>SIGGRAPH 98</meeting>
		<imprint>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="343" to="352" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Least squares conformal maps for automatic texture atlas generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Petitjean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maillot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 2002</title>
		<meeting>SIGGRAPH 2002</meeting>
		<imprint>
			<date type="published" when="2002-07" />
			<biblScope unit="page" from="362" to="371" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lin</surname></persName>
		</author>
		<title level="m">Optimal texture mapping. Proc. Eurographics &apos;88</title>
		<imprint>
			<date type="published" when="1988-09" />
			<biblScope unit="page" from="421" to="428" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Interactive texture mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jerome</forename><surname>Maillot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yahia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Verroust</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 93</title>
		<meeting>SIGGRAPH 93</meeting>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Interior/exterior classification of polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">S</forename><surname>Nooruddin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="2000-10" />
			<biblScope unit="page" from="415" to="422" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Seamless texture mapping of subdivision surfaces by model pelting and texture blending</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Piponi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Borshukov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Annual Conference Series, 2000. SIGGRAPH &apos;00)</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="471" to="478" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emil</forename><surname>Praun</surname></persName>
		</author>
		<title level="m">Adam Finkelstein, and Hugues Hoppe. Lapped textures. Proc. SIGGRAPH 2000</title>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="465" to="470" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Texture mapping and distortion in digital graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Samek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="313" to="320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Texture mapping progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sander</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snyder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gortler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 01</title>
		<meeting>SIGGRAPH 01</meeting>
		<imprint>
			<date type="published" when="2001-08" />
			<biblScope unit="page" from="409" to="416" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Spanning tree seams for reducing parameterization distortion of triangulated surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alla</forename><surname>Sheffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Shape Modelling International</title>
		<meeting>Shape Modelling International</meeting>
		<imprint>
			<date type="published" when="2002-05" />
			<biblScope unit="page" from="61" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Smoothing an overlay grid to minimize linear distortion in texture mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alla</forename><surname>Sheffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>De Sturler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2002-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">The Algorithm Design Manual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Skiena</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
