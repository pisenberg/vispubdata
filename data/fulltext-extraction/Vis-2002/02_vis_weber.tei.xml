<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Exploring Scalar Fields Using Critical Isovalues</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gunther</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">AG Graphische Datenverarbeitung und Computergeometrie</orgName>
								<orgName type="department" key="dep2">FB Informatik</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing</orgName>
								<orgName type="department" key="dep2">Dept. of Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">AG Graphische Datenverarbeitung und Computergeometrie</orgName>
								<orgName type="department" key="dep2">FB Informatik</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">AG Graphische Datenverarbeitung und Computergeometrie</orgName>
								<orgName type="department" key="dep2">FB Informatik</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing</orgName>
								<orgName type="department" key="dep2">Dept. of Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Exploring Scalar Fields Using Critical Isovalues</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation-[I.3.6]: Computer Graphics-Methodology and Techniques I.3.8 [Computer Graphics]: A-pplications scalar field topology</term>
					<term>critical point</term>
					<term>volume visualization</term>
					<term>data exploration</term>
					<term>isosurfaces</term>
					<term>marching cubes</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Isosurfaces are commonly used to visualize scalar fields. Critical isovalues indicate isosurface topology changes: the creation of new surface components, merging of surface components or the formation of holes in a surface component. Therefore, they highlight &quot;interesting&quot; isosurface behavior and are helpful in exploration of large trivariate data sets. We present a method that detects critical isovalues in a scalar field defined by piecewise trilinear interpolation over a rectilinear grid and describe how to use them when examining volume data. We further review varieties of the Marching Cubes (MC) algorithm, with the intention to preserve topology of the trilinear interpolant when extracting an isosurface. We combine and extend two approaches in such a way that it is possible to extract meaningful isosurfaces even when a critical value is chosen as isovalue.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>An isosurface is a surface representing all locations in threedimensional (3D) space, where a trivariate scalar field f (x, y, z) assumes a given isovalue v, i.e., where f = v holds. It partitions a 3D volume into two distinct regions: Locations "inside" an isosurface have an associated value greater than or equal to the isovalue; locations "outside" an isosurface have an associated value less than the isovalue. By varying the isovalue v it is possible to visualize the entire scalar field.</p><p>Determining isovalues where "interesting" isosurface behavior occurs is difficult. Features of a scalar data set can be easily missed when certain isovalues are not considered. By examining the topological properties of a scalar field it is possible to determine critical isovalues indicating topological changes. We track all fundamental changes: At local minima or maxima closed surface components emerge or vanish. At saddles the genus of an isosurface changes, i.e., holes appear/disappear in a surface component, or disjoint surface components merge. We determine the values and locations where such changes occur and use them to aid a user in data exploration.</p><p>We consider the common case of data sets with data values given at vertices of a regular rectilinear grid. We define isosurface topology by assuming that trilinear interpolation is used within individual cells. The topology of the resulting isocontour defines isosurface topology within a particular cell. MC, introduced by Lorensen and Cline <ref type="bibr" target="#b17">[16]</ref>, is commonly used to produce an isosurface triangulation from scalar data given on rectilinear grids. In its original version MC only uses vertex "polarities" (vertices with a value less than the isovalue are classified as being "negative" and vertices with a value larger than the isovalue are classified as being "positive") to triangulate an isosurface within a cell via a lookup table (LUT). MC only uses linear interpolation along edges and makes no assumptions about interpolation on a cell's faces or within its interior. Consequently, the topology of an isosurface extracted by MC does not always match that of the piecewise trilinear interpolant.</p><p>To get an exact match, topology on a cell's boundary faces and in its interior must be determined for certain ambiguous cases: If a cell contains an ambiguous face, i.e., a face with alternating vertex polarities, different choices are possible when connecting the edge intersection points, see <ref type="figure" target="#fig_6">Figure 1</ref>. Similarly, as <ref type="figure" target="#fig_4">Figure 2</ref> illustrates, different isosurface topologies are possible in a cell's interior. By extending the LUT and examining the trilinear interpolant within a cell, it is possible to obtain a MC variant that accurately reproduces the topology of a trilinear interpolant. Current MC implementations (VTK's MC implementation <ref type="bibr" target="#b23">[22]</ref>, for example), however, use "implicit disambiguation," proposed by Montani et al. <ref type="bibr" target="#b18">[17]</ref>. This approach generates a LUT that consistently separates positive vertices on a cell's faces. It furthermore assumes that no tunnels exist in a cell's interior. When "implicit disambiguation" is used, it becomes necessary to consider more vertices to determine whether a vertex is critical or not than for a trilinear functions' correct contour, see <ref type="table">Figure 3</ref>. Thus, the critical isovalues detected by our method are only meaningful if a MC scheme is used that extracts a topologically correct isosurface triangulation of a trilinear function. We implemented a MC scheme based on a method presented by Lopes <ref type="bibr" target="#b16">[15]</ref> in his dissertation with small alterations to fix remaining errors in the topology of extracted isosurfaces and to obtain meaningful results when a critical isovalue is chosen.</p><formula xml:id="formula_0">v (a) v (b) v (c)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>MC was introduced by Lorensen and Cline <ref type="bibr" target="#b17">[16]</ref> and has become the most commonly used method for isosurface extraction in scientific visualization. Duerst <ref type="bibr" target="#b7">[6]</ref>, among others, discovered that the original approach could produce holes in an isosurface triangulation. Montani et al. <ref type="bibr" target="#b18">[17]</ref> proposed a slightly altered LUT generation scheme that prevented these holes by consistently separating positive vertices on ambiguous faces. Hamann <ref type="bibr" target="#b13">[12,</ref><ref type="bibr" target="#b14">13]</ref> and Nielson and Hamann <ref type="bibr" target="#b21">[20]</ref> resolved the problem differently by examining isocontour topology on a cell's boundary faces. They pointed out that bilinear interpolation on a cell's faces is a natural extension to linear interpolation along edges and used bilinear contour topology to resolve ambiguities on faces. Nielson and Hamann <ref type="bibr" target="#b21">[20]</ref> also showed that configurations exist where points in a cell's interior must be used in addition to the edge intersection points to obtain valid triangulations. Natarajan <ref type="bibr" target="#b19">[18]</ref>, Chernyaev <ref type="bibr" target="#b5">[4]</ref> and Cignoni et al. <ref type="bibr" target="#b6">[5]</ref> extended this concept by examining the trilinear interpolant in a cell's interior and completely determining piecewise trilinear isosurface topology. However, Natarajan's <ref type="bibr" target="#b19">[18]</ref> method does not use interior points resulting in invalid triangulations. Chernyaev's <ref type="bibr" target="#b5">[4]</ref> method uses additional points but still specifies invalid triangulations. In his dissertation, Lopes <ref type="bibr" target="#b16">[15]</ref> discussed methods for improving "accuracy in scientific visualization." His algorithm analyzes the trilinear interpolant to determine its topology and uses additional points in a cell's interior and on its faces to improve the accuracy of isosurface generation. These additional points are also used to obtain valid triangulations for all specified cases. We discuss his approach in greater detail in section 4. Nielson <ref type="bibr" target="#b20">[19]</ref> has recently provided a comprehensive analysis of the behavior of the trilinear interpolant. This analysis leads to an extension of the MC algorithm to accurately extract topologically correct contours of the trilinear interpolant. Again, points lying on the isosurface in the interior of a cell are needed. These are chosen based on isosurface topology. This extended MC algorithm always generates valid triangulations for all possible topological configurations. Comparing Nielson's work to the approaches of Cignoni et al. <ref type="bibr" target="#b6">[5]</ref> and Lopes <ref type="bibr" target="#b16">[15]</ref> shows that their case tables are incomplete.</p><p>Hamann et al. <ref type="bibr" target="#b15">[14]</ref> analyzed the exact behavior of contours on cell faces leading to a method that approximates a trilinear isosurface with rational quadratic Bézier patches. For their construction, they consider points lying on an isosurface and normals/gradients at these points. Theisel <ref type="bibr" target="#b25">[24]</ref> represented the exact contours of a piecewise trilinear scalar field by trimmed rational cubic Bézier patches and specified a reparametrization scheme that results in G 1continuous functions that preserve topology of piecewise trilinear interpolation. Wood et al. <ref type="bibr" target="#b26">[25]</ref> presented an isosurface extraction scheme based on mesh refinement. Their method first constructs a coarse mesh with the same topology as the final isosurface and refines it subsequently.</p><p>Van Gelder and Williams <ref type="bibr" target="#b11">[10]</ref> considered sampled values from quadratic functions to address topological correctness and presented topology definitions for sampled data different from the topology of piecewise trilinear interpolation. Stander and Hart <ref type="bibr" target="#b24">[23]</ref> considered implicit functions. Their approach detects all critical points of these functions and constructs polygonizations with the same topology as the implicit function. Rockwood <ref type="bibr" target="#b22">[21]</ref> considered general higher-order interpolation schemes.</p><p>Few authors utilize topological analysis for scalar field visualization. Bajaj et al.</p><p>[1] determined a contour spectrum for data given on tetrahedral meshes. The contour spectrum specifies contour properties like 2D contour length, 3D contour area and gradient integral as functions of the isovalue and can aid a user in identifying "interesting" isovalues. Bajaj et al. <ref type="bibr" target="#b2">[3]</ref> also developed a technique to visualize topology to enhance visualizations of trivariate scalar fields. Their method employs a C 1 -continuous interpolation scheme for rectilinear grids, and detects critical points of a scalar field, i.e., points where the gradient of the scalar field vanishes. Subsequently, integral curves (tangent curves) are traced starting from locations close to saddle points. These integral curves are superimposed onto volume-rendered images to convey structural information of the scalar field.</p><p>Fujishiro et al.</p><p>[7] used a hyper-Reeb graph for exploration of scalar fields. A Reeb graph encodes topology of a surface. The hyper-Reeb graph encodes changes of topology in an extracted isosurface. For each isovalue that corresponds to an isosurface topology change, a node exists in the hyper-Reeb graph containing a Reeb graph encoding the topology of that isosurface. Fujishiro et al. <ref type="bibr" target="#b8">[7]</ref> constructed a hyper-Reeb graph using "focusing with interval volumes," an iterative approach that finds a subset of all critical isovalues , which has been introduced by Fujishiro and Takeshima <ref type="bibr" target="#b9">[8]</ref>. The hyper-Reeb graph can be used, for example, for automatic generation of transfer functions. Fujishiro et al. <ref type="bibr" target="#b10">[9]</ref> extended this work and used a hyper-Reeb graph for exploration of volume data. In addition to automatic transfer function design, their extended method allows them to generate translucent isosurfaces between critical isovalues. Considering just the images shown in their paper, it seems that their approach does not detect all critical isovalues of a scalar field.</p><p>Critical point behavior is also important in the context of data simplification to preserve important features of a data set. Bajaj and Schikore <ref type="bibr" target="#b1">[2]</ref> extended previous methods to develop a compression scheme preserving topological features. Their approach detects critical points of a piecewise linear bivariate scalar field f (x, y). "Critical vertices" are those vertices for which the "normal space" of the surrounding triangle platelet contains the vector (0, 0, 1). Integral curves are computed by tracing edges of triangles along a "ridge" or "channel." Bajaj and Schikore's method incorporates an error measure and can be used for topology-preserving mesh simplification.</p><p>Gerstner and Pajarola <ref type="bibr" target="#b12">[11]</ref> defined a bisection scheme that enumerates all grid points of a rectilinear grid in a tetrahedral hierarchy. Using piecewise linear interpolation in tetrahedra, critical points can be detected. Data sets are simplified by specifying a traversal scheme that descends only as deep into the tetrahedral hierarchy as necessary to preserve topology within a certain error bound. This method incorporates heuristics that assign importance values to topological features, enabling a controlled topology simplification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DETECTING CRITICAL ISOVALUES</head><p>Our goal is to detect critical isovalues of a piecewise trilinear scalar field given on a regular rectilinear grid. Gerstner and Pajorala <ref type="bibr" target="#b12">[11]</ref> developed criteria for detecting critical points of piecewise linear scalar fields defined on tetrahedral meshes and used them in mesh simplification. We provide a comprehensive analysis of the topological behavior of piecewise trilinear interpolation and develop criteria to detect critical isovalues for these scalar fields. We further develop methods to use these critical isovalues for volume data exploration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Definitions</head><p>For a C 2 -continuous function f , critical points occur where the gradient ∇f assumes a value of zero, i.e., ∇f = 0. The type of a critical point can be determined by the signs of the eigenvalues of the Hermitian of f . Piecewise trilinear interpolation when applied to rectilinear grids, in general, produces only C 0 -continuous functions. Therefore, we must define critical points differently.</p><p>Gerstner and Pajarola <ref type="bibr" target="#b12">[11]</ref> considered piecewise linear interpolation applied to tetrahedral grids, which also leads to C 0continuous functions. Considering piecewise linear interpolation, critical points can only occur at mesh vertices. Gerstner and Pajarola's method classifies a mesh vertex depending on its relationship with vertices in a local neighborhood. In the context of a refinement scheme, all tetrahedra sharing an edge that is to be collapsed define a "surrounding polyhedron." Vertices of this surrounding polyhedron constitute the considered neighborhood of a vertex. These vertices are marked with a "+" if their associated function values are greater than the value of the classified vertex; or they are marked with a "-" if their associated function values are less than the value of the classified vertex. Equal values are not considered. Edges of the surrounding polyhedron define an edge graph. In this graph, all edges connecting vertices of different polarities are deleted. A vertex is classified according to the number of connected components in the remaining graph. If this number is one, the classified vertex is a maximum or minimum (depending on the sign of the connected component). If it is two, the classified vertex is a regular point. Otherwise, the vertex is a saddle point. Connected components in an edge graph of a surrounding polyhedron correspond to connected components in a neighborhood of a vertex. This observation leads us to the following definition: Definition 1 (Regular and Critical Points) Let F :  We consider piecewise trilinear interpolation, which reduces to bilinear interpolation on cell faces and to linear interpolation along cell edges. All values that trilinear interpolation assigns to positions in a cell lie between the minimal and maximal function values at the cell's vertices (convex hull property). In fact, maxima and minima can only occur at cell vertices. If two vertices connected by an edge have the same function value, the entire edge can represent an extremum or a saddle. It is even possible that a polyline defined by multiple edges in the grid, or a region consisting of several cells, becomes critical. In these cases, it is no longer possible to determine, locally, whether a function value is a critical isovalue. To avoid these types of problem, we impose the restriction on the data that function values at vertices connected by an edge must differ. Saddles can occur at cell vertices, on cell faces of a cell, and in a cell's interior, but not on cell edges. This fact is due to the restriction that an edge cannot have one constant function value.</p><formula xml:id="formula_1">R d → R, d ≥ 2,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 1 (Regular Edge Points) All points on edges of a trilinear interpolant with distinct edge-connected values are regular points.</head><p>The two endpoints of the edge have different values. Interpolation along edges is linear, and the derivative differs from zero. The implicit function theorem defines neighborhoods Ui × Vi and a height function hi : Ui ⇒ Vi in each of the four cubes around the edge, such that the isosurface is a height field in the direction of the edge partitioning a neighborhood in a positive and a negative region <ref type="bibr" target="#b0">1</ref> . Thus, in order to detect critical isovalues of a piecewise trilinear scalar field, we only need to detect critical values at vertices of a grid and saddle values within cells and on their boundary faces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Critical Values at Vertices</head><p>In order to classify a vertex, i.e., to determine whether a vertex is regular or represents an extremum or a saddle, it is sufficient to consider the values at the six edge-connected vertices of a given vertex. We provide a criterion for classification in the following. The complete proof for Lemma 3 relies on Lemma 2, see Appendix A.3. It is based on the fact, that the behavior of the trilinear interpolant in close proximity to a vertex v is determined by the first derivatives with respect to the coordinate axes. These first derivatives only depend on the values of the edge connected vertices, as trilinear interpolation reduces to linear interpolation along edges. It can be shown that with trilinear interpolation a neighborhood around v is partitioned into the same amount of regions with the same connectivity as it would be the case if linear interpolation was used.</p><formula xml:id="formula_2">v 0 v 7 v 5 v 4 v 6 v 2 v 3 v 1 y z x Figure 5: Vertex numbering. v (a) v (b) v (c) v (d)</formula><p>Using the L1-norm 2 , the intersection of a neighborhood with a cell corresponds to a tetrahedron. According to Lemma 3, this tetrahedron is partitioned in the same way as a tetrahedron using linear interpolation (even when, as in our case, partitioning surfaces are not necessarily planar), see <ref type="figure" target="#fig_3">Figure 6</ref>. A vertex can be classified by considering its edge-connected neighbor vertices. We treat these vertices as part of a local implicit tetrahedrization surrounding a classified vertex, where the classified vertex and three edgeconnected vertices belonging to the same rectilinear cell imply a tetrahedron, see <ref type="figure">Figure 7</ref>.</p><p>When applying Gerstner and Pajarola's criterion <ref type="bibr" target="#b12">[11]</ref> for connected components in an edge graph for the resulting implicit tetrahedrization, we obtain a case table with 2 6 = 64 entries that maps <ref type="figure">Figure 7</ref>: Edge-connected vertices as part of an implicit tetrahedrization. <ref type="figure">Figure 8</ref>: Vertex numbering scheme used in Lemma 4. a configuration of "+" and "-" of edge-connected vertices to a vertex classification. (It can be shown that the connected components in an edge graph correspond to connected components in a neighborhood.) We decided to generate this relatively small case table manually.  The complete proof for this Lemma is provided in Appendix A.4. If a point on a boundary face is a saddle of the piecewise trilinear interpolant the neighborhood is partitioned into at least two disjoint positive regions and two disjoint negative regions. These regions meet at the critical point. Any plane that contains the critical point is also partitioned into the same number of regions. Thus, the critical point is also a critical point of the plane. If a boundary surface contains a saddle, it is partitioned into two disjoint positive regions and two disjoint negative regions, see <ref type="figure">Figure 8</ref>. Each of the two adjacent cells connects either the two disjoint positive regions or the two disjoint negative regions. The face saddle is a saddle of the trilinear interpolant, if both adjacent cells connect the same two disjoint regions. The signs of the expressions in the lemma indicate which regions are connected in both adjacent cells. We thus can detect face saddles of piecewise trilinear interpolation effectively by considering all cell faces for a saddle of the bilinear interpolants on faces and checking whether the criterion stated in Lemma 4 holds. </p><formula xml:id="formula_3">2 x 1 = i |x i |</formula><formula xml:id="formula_4">B −1 A 1 D −1 D 1 B 1 A −1 C 1 C −1 y z x B D C A</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Critical Values on Faces</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Critical Values inside a Cell</head><p>Saddles of the trilinear interpolant in the interior of a cell are easy to handle as they are always saddles of the piecewise trilinear interpolant as well. Interior saddles are already used by various MC variants to determine isosurface topology within a cell. We compute these saddles by using the equations given by Nielson <ref type="bibr" target="#b20">[19]</ref>. Inner saddles of a trilinear interpolant that coincide with a cell's boundary faces or vertices are not necessarily saddles of a piecewise trilinear interpolant. Trilinear interpolation assigns constant values to locations along coordinate-axis-parallel lines passing through the saddle. We currently rule out the possibility of an internal saddle coinciding with a vertex or an edge. Otherwise, our requirement that edge-connected vertices differ in value would be violated. Saddles of trilinear interpolants that coincide with cell faces are also saddles of the bilinear interpolant on the face. As such they are discussed in Section 3.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">TOPOLOGICALLY CORRECT MARCHING CUBES</head><p>Our MC approach is based on the works of Lopes <ref type="bibr" target="#b16">[15]</ref> and Nielson <ref type="bibr" target="#b20">[19]</ref>. Lopes' method constructs an isosurface in two steps: Based on the Asymptotic Decider described by Hamann <ref type="bibr" target="#b13">[12]</ref> and Nielson and Hamann <ref type="bibr" target="#b21">[20]</ref> a configuration is chosen depending on vertex polarities and contour topology on cell faces. An LUT defines "topological polygons" (TPs) that represent the intersection of an isosurface approximation with cell faces, see <ref type="figure">Figure 9</ref>. TPs are independent of possible tunnels in a cell. The two quadrilaterals shown in configuration 10a of <ref type="figure">Figure 9</ref>, for example, can either separate the diagonally opposite bold vertices or can connect them with a tunnel. Each TP contains additional information specifying the number of so-called "loop-back" faces intersected by the polygon. (Loop-back faces are faces of a cell containing two edges of the same TP counting opposite faces only once.)</p><p>After selecting the appropriate configuration, corresponding TPs are refined by adding shoulder points of the conic (hyperbolic arc) implied by bilinear interpolants defined on cell faces, see <ref type="figure" target="#fig_6">Figure 10</ref>.</p><p>A shoulder point is computed as the intersection of a line connecting the midpoint of a linear contour approximation and the location of the face saddle with the isocontour. Therefore, the shoulder point moves toward the saddle as the contour behavior approaches the degenerate case (two perpendicular lines). In the degenerate case, the shoulder point becomes the saddle point.</p><p>By merging the shoulder points of the two hyperbolic arcs an exact representation of a degenerate contour is possible. The gradual movement of two shoulder points toward the location of a face saddle supports a smooth transition between different topologies on a face. Each resulting TP is triangulated individually by connecting its vertices to one or more internal contour points. Topological polygons that contain at least one loop-back face cannot be part of tunnels and are always triangulated using inflection points. (Inflection points occur at locations on the isosurface where two derivatives of the function F (x, y, z) vanish.) Up to six inflection points exist in a cell and can be associated with its six faces. For each TP, a triangulation is stored in an LUT based on its number of vertices and loop-back faces. A triangulation of a TP uses inflection points associated with its loop-back faces. If a TP does not contain loop-back faces, two cases are possible: 2. A tunnel does not exist. A triangulation for a TP is obtained by connecting all its edges to a "bi-shoulder point." (A bi-shoulder point is a point that is a shoulder point on a pair of perpendicular planes passing through a cell and being parallel to coordinate-system planes.) Lopes' method computes bi-shoulder points in an iterative approach by sweeping planes through a cell, starting from faces intersected by the TP. Since bi-shoulder points are not unique, a selection scheme is needed for two sweep faces that locates the most appropriate bi-shoulder point.</p><p>Nielson <ref type="bibr" target="#b20">[19]</ref> has provided a comprehensive analysis of the contours of a trilinear interpolant. His analysis leads to triangulations for all possible configurations. Again, points in the cell interior are needed to generate valid triangulations. Nielson's method uses interior points only when they are necessary. This method utilizes DeVella's necklace DeV [T ] to obtain valid triangulations. (Points on DeV [T ] are locations on coordinate-axis-perpendicular planes where contours are degenerate; they correspond to Lopes' inflection points.) The methods of Nielson and Lopes both detect tunnels by checking whether all six inflection points are inside a cell. Nielson's approach produces fewer triangles than Lopes' and still guarantees topological correctness in cases where an isovalue differs from a critical value.</p><p>We decided to implement Lopes' approach, since it produces better results for isovalues close to critical isovalues. Careful comparison showed that Lopes' approach is incomplete. Lopes stated that he could observe no tunnels for case 13. Nielson showed that two types of tunnels are possible for Lopes' case 13j: One connects positive vertices and one connects negative vertices. We modified Lopes' approach to take this into account. Lopes' original approach correctly detects the tunnel, but connects three TPs to the inflection points, resulting in an invalid triangulation. By using Nielson's criterion to distinguish between the two sub-cases we can correct this flaw.</p><p>Nielson's method uses the sign of the trilinear interpolant in the cuboid containing DeV [T ] to determine whether the positive or negative vertices must be connected. We added a flag to the LUT that specifies for each TP whether it is used only for a tunnel connecting positive or negative vertices. Since problems only arise in case 13j, this flag can also have a value of "irrelevant," indicating that a TP is part of both tunnel types. If a tunnel is detected by the presence of six inflection points, its type is determined by Nielson's criterion. Our algorithm connects only those TPs to the polyline formed by the inflection points whose flags indicate that they are part of that particular tunnel type.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">APPLICATIONS</head><p>A convenient way to use critical isovalues is to provide a user with a navigational tool in addition to an isosurface viewer. Prior to starting an isosurface viewer, critical isovalues can be computed and displayed in an "isovalue navigator." In this window, critical isovalues are listed along with a corresponding type (minimum, maximum, saddle, face saddle, interior saddle). When a user selects a critical isovalue, its corresponding position in space is marked by a sphere whose color depends on the type (blue, red and green representing a minimum, a maximum or a saddle, respectively). Buttons allow a user to set the isovalue of a displayed isosurface to a value slightly below, equal to, or slightly above a critical isovalue. The isovalue offset for the isosurfaces below and above a chosen critical isovalue is specified in a text field.</p><p>In data sets containing several "nested isosurfaces," i.e., data sets where one isosurface component is completely contained within another, it can be difficult to locate a critical point, even if its position is marked. The "isovalue navigator" contains a button that positions the camera so that the viewing focus is the critical point. Critical isovalues can also help in automatic transfer function design. Given a list of critical isovalues we construct a corresponding transfer function based on the methods described by Fujishiro et al. <ref type="bibr" target="#b10">[9]</ref>. The domain of the transfer function corresponds to the range of scalar values [smin, smax] occurring in a data set. Outside this range the transfer function is undefined. Given a list of critical isovalues cvi, we either construct a transfer function emphasizing volumes containing topologically equivalent isosurfaces or a transfer function emphasizing structures close to critical values. <ref type="figure" target="#fig_6">Figure 11</ref> shows the construction of a transfer function that emphasizes topologically equivalent regions. The color transfer is chosen such that hue uniformly decreases with the mapped value, except for a constant drop of δ h at each critical value cvi. The opacity is constant for all values except for hat-like elevations around each critical value cvi having a width of ωo and a height δo. <ref type="figure" target="#fig_0">Figure 12</ref> shows the construction of a transfer function emphasizing details close to critical isovalues. The hue transfer function is constant except for linear descents of a fixed amount δ h within an interval with a width ω h centered around each critical isovalue cvi. The opacity is constant for all values except in intervals with a width ωo centered around critical isovalues cvi where the opacity is elevated by δo. When several isovalues are so close together that intervals with a width ω h or ωo would overlap, all isovalues except the first are discarded to avoid high frequencies in the transfer function that could cause aliasing artifacts in the rendered image. <ref type="figure" target="#fig_6">Figure 13</ref> shows the "Drip" data set, obtained by sampling the analytic function F (x, y, z) = x 2 + y 2 − 0.5(0.995z 2 + 0.005 − z 3 ). (This function was provided by Terry J. Ligocki, Lawrence Berkeley National Laboratory.) The function was evaluated for x, y, z ∈ [−1.5, 1.5], sampled on a 40 3 uniform rectilinear grid. <ref type="figure" target="#fig_6">Figure 13</ref> <ref type="bibr">(a)</ref> shows the isosurface F = 0. Our method can be used to detect critical values of this scalar field and show how this "drop" evolves. Originally, there exists just one component evolving from the boundary of the domain of the scalar field. An "inner minimum" exists for a value of −0.0754. <ref type="figure" target="#fig_6">Figure 13(b)</ref> shows an isosurface for a value of −0.0754+0.01, where the isosurface component around the minimum already has grown to a visible size. An inner saddle of the scalar field exists for a value of −0.0025, shown in <ref type="figure" target="#fig_6">Figure  13</ref>(c), where a green sphere marks the saddle position. The isosurface components are still distinct, but touch at the saddle position. For an isovalue of −0.0025 + 0.01, i.e., a value slightly above the saddle value, both components have merged. Additional critical points arise on faces lying on the domain boundary. Figures 13(e) and 13(f) show a saddle that occurs as a result of the isosurface intersecting the domain boundary. A hole in the isosurface is clearly visible in <ref type="figure" target="#fig_6">Figure 13</ref>(f) as a result of domain boundary intersection. <ref type="figure" target="#fig_6">Figure 14</ref> shows a data set obtained by simulating a two-body distribution probability of a nucleon in the atomic nucleus "16O" when a second nucleon is known to be positioned at distance of 2 Fermi. This 41 3 data set is courtesy of the Sonderforschungsbereich (SFB) 382 of the German Research Council (DFG). It can be obtained at http://www.volvis.org. The isovalue navigator indicates a minimum for an isovalue of 19. From a greater distance, special contour behavior for this value cannot be perceived, see 14 <ref type="bibr">(a)</ref>. By using the isovalue navigator to define a viewpoint close to the minimum and looking at the minimum, a second component forming inside the outer isosurface component becomes visible, see <ref type="figure" target="#fig_6">Figure 14</ref>(b). Several saddles exist. Among them is a saddle for the isovalue of 103, where one inner isosurface component merges with the outer component. A clipping plane is used in the figure to make the saddle location visible, see <ref type="figure" target="#fig_6">Figure 14</ref>(c). <ref type="figure" target="#fig_6">Figures  14(d)</ref> and 14(e) show a saddle inside the outer isosurface component. Several saddles exist for the same value; one of them can be seen in the background of the saddle, marked by a green sphere. <ref type="figure" target="#fig_6">Figure 15</ref> shows the results of rendering the same data set with automatically generated transfer functions. <ref type="figure" target="#fig_6">Figure 15</ref> tails close to these critical isovalues are better visible in <ref type="figure" target="#fig_6">Figure  15</ref>(b).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS AND FUTURE WORK</head><p>We have presented a method for the detection and utilization of critical isovalues for the exploration of trivariate scalar fields defined by piecewise trilinear functions. Improvements to our method are possible. For example, it would be helpful to eliminate the requirement that values at edge-connected vertices of a rectilinear grid must differ. While our approach can be used at data sets that violate this requirement, it fails to detect all critical isovalues for such data. It is necessary to extend our mathematical framework and add the concept of "critical regions" and "polylines." Considering the case of a properly sampled implicitly defined torus, its minimum consists of a closed polyline around which the torus appears. Similar regions of a constant value can exist that are extrema. These extensions will require us to consider values in a larger region; and they cannot be implemented in a purely local approach. Some data sets contain a large number of critical points. Some of these critical points correspond to locations/regions of actual interest, but some are the result of noise or improper sampling. We need to develop methods to eliminate such "false" critical points. On the other hand it could be useful to consider more noisy data sets and generate a histogram with the number of topology changes for a lot of small isovalues ranges. It should be possible to automatically detect interesting isovalues by looking for values where there are many topological changes. This could be used to detect turbulence in data sets resulting from unsteady flow simulations in which turbulence is usually associated to "topological noise." Histograms could also be used to generate meaningful transfer functions for data sets with a large number of closely spaced critical isovalues.</p><p>Small and skinny triangles can result when using bi-shoulder points and contour points in a cell's interior. An improved scheme could consider distances between contour points and use a "blend" of Nielson's <ref type="bibr" target="#b20">[19]</ref> and Lopes' <ref type="bibr" target="#b16">[15]</ref> approaches. Furthermore, find-ing bi-shoulder points with an iterative scheme is expensive and can cause problems. In some cases, bi-shoulder points can be completely missed, due to a poorly chosen step size. A fixed step size cannot accommodate all cases. Thus, a step size must be chosen depending on the data, or other means for finding bi-shoulder points have to be found. Shoulder points are not unique, and for a sweep over different isovalues different bi-shoulder points are used, resulting in "flickering" of animated isosurfaces.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :Figure 2 :</head><label>12</label><figDesc>Ambiguous face: Considering bilinear interpolation (a) possible isocontours are hyperbolic arcs separating negative vertices (b) or positive vertices (c). In the degenerate case, the isoline corresponds to the asymptotes (v = 0.5 in this example). Correct connectivity is violated by the original MC algorithm. Trilinear interpolation within a cell. Opposite cell vertices can be separated (a) by two isosurface sheets or (b) connected by one isosurface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>be a continuous function. A point x ∈ R d is called a (a) regular point, (b) minimum, (c) maximum, (d) saddle, or (e) flat point of F , if for all &gt; 0 there exists a neighborhood U ⊂ U with the following properties: If˙ np i=1 Pi is a partition of the preimage of [F (s), +∞) in U − {x} into "positive" connected components and˙ nn j=j Nj is a partition of the preimage of (−∞, F (s))] in U − {x} into "negative" connected components, then (a) np = nn = 1 and P1 = N1, (b) np = 1 and nn = 0, (c) nn = 1 and np = 0, (d) np + nn &gt; 2, or (e) np = nn = 1 and P1 = N1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :Remark 1 Remark 2</head><label>412</label><figDesc>(a)  Around a regular point x ∈ R 3 , the isosurface F −1 (F (x)) divides space into a single connected volume P with F &gt; 0 (red) and a single connected volume N with F &lt; 0 (blue).(b) Around a minimum, all points in U have a larger value than F (x). (c) Around a maximum, all points in U have a smaller value than F (x). (d) In case of a saddle, there are more than one separated regions with values larger or smaller than the value F (x). For (a) -(d), see Figure 4. Concerning case (e), all points in U have the same value as F (x). It is possible to extend the concept of being critical to entire regions and classify regions rather than specific locations. The cases np = 2, nn = 0 and np = 0, nn = 2 are not possible for d ≥ 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>When a small neighborhood is considered, a "tetrahedral region" having v as a corner is partitioned in the same way as a linear tetrahedron.Lemma 2 (Local Maximum) Consider a cell C with vertex numbering as shown inFigure 5. If v0 &gt; max{v1, v2, v4}, then v0 is a local maximum in C.Lemma 3 (Linear Cell Partition) Consider a cell C with vertex values vi and vertex positions pi numbered as shown in Figure 5. If v := v0 = v1, v2 = v4 holds, then for all &gt; 0 there exists a δ &lt; such that for the intersection R = U δ ∩ C the following statements hold: (a) If v &gt; max{v1, v2, v4} then nn = 1 and N1 = R, i.e., all values in the region are less than v. (b) If there exist i, j, k ∈ {1, 2, 4}, i = j = k, i = k, such that v &gt; max{vi, vj} and v &lt; v k , then nn = np = 1 and R completely contains a surface dividing N1 and P1. Furthermore, all values on the triangle p0pipj are less than v. (c) If there exist i, j, k ∈ {1, 2, 4}, i = j = k, i = k, such that v &lt; min{vi, vj} and v &gt; v k , then nn = np = 1, and R completely contains a surface dividing N1 and P1. Furthermore, all values on the triangle p0pipj are less than v. (d) If v &lt; max{v1, v2, v4}, then nn = 1 and N1 = R, i.e., all values in the region are greater than v.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>2 .</head><label>2</label><figDesc>With the notations of Figure 8, where, without loss of generality, cells are rotated such that A and C are the values on the shared cell face having a value larger than the saddle value, C(A1 − A) + A(C1 − C) − D(B1 − B) − B(D1 − D) and C(A−1 − A) + A(C−1 − C) − D(B−1 − B) − B(D−1 − D) have the same sign. Otherwise, p is a regular point of the trilinear interpolant.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :Figure 10 :</head><label>910</label><figDesc>Subset of configurations used by Lopes' MC method. Case numbering according to Lopes<ref type="bibr" target="#b16">[15]</ref>, which contains the full list of configurations. Incorporating shoulder points. (a) Using shoulder point, shown as "*," increases approximation quality of a contour (green) by replacing its one-segment approximation (dashed black) with a two-segment approximation (black). (b) In the degenerate case, both shoulder points coincide with the location of the face saddle. If the shoulder points are merged, polyline approximations and contours (green) coincide at the saddle. Without adding a shoulder point, the topology of a contour approximation is incorrect.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>1 .</head><label>1</label><figDesc>All six inflection points are in a cell's interior and form a polyline along the edges of a cuboid. A tunnel exists in the cell's interior, and TP without loop-back faces are connected to the polyline formed by the inflection points forming a part of a tunnel.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 11 :</head><label>11</label><figDesc>Transfer function emphasizing topologically equivalent regions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 12 :</head><label>12</label><figDesc>Transfer function emphasizing details close to critical isovalues.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 13 :Figure 14 :</head><label>1314</label><figDesc>(a)  emphasizes volumes containing topologically equivalent isosurfaces. De-Exploration of "Drip" data set. "Nucleon" data set. Data set courtesy of SFB 382 of the German Research Council (DFG), see http://www.volvis.org.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">For details, see Appendix A.1 on the DVD proceedings.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">ACKNOWLEDGMENTS</head><p>We thank the members of the AG Graphische Datenverarbeitung und Computergeometrie at the Department of Computer Science at the University of Kaiserslautern, Germany, and the Visualization and Graphics Research Group at the Center for Image Processing and Integrated Computing (CIPIC) at the University of California, Davis.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The contour spectrum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chandrajit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valerio</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<editor>Roni Yagel and Hans Hagen</editor>
		<meeting><address><addrLine>New York, New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="167" to="173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visualizing scalar topology for structural enhancement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chandrajit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valerio</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;98</title>
		<editor>David S. Ebert, Holly Rushmeier, and Hans Hagen</editor>
		<meeting><address><addrLine>New York, New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="51" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Topology preserving data simplification with error bounds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chandrajit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="12" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Transfer function emphasizing topologically equivalent zones. (b) Transfer function emphasizing structures close to critical isovalues</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Nucleon&quot; data set. Data set courtesy of SFB 382 of the German Research Council (DFG</title>
		<ptr target="http://www.volvis.org" />
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Marching cubes 33: Construction of topologically correct isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Evgeni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Chernyaev</surname></persName>
		</author>
		<idno>CN/95-17</idno>
		<ptr target="http://wwwinfo.cern.ch/asdoc/psdir/mc.ps.gz" />
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Geneva, Switzerland</pubPlace>
		</imprint>
		<respStmt>
			<orgName>CERN</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Reconstruction of topologically correct and adaptive trilinear isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paulo</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fabio</forename><surname>Ganovelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="399" to="418" />
			<date type="published" when="2000-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Additional reference to &quot;marching cubes&quot; (letters)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><forename type="middle">J</forename><surname>Dürst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="72" to="73" />
			<date type="published" when="1988-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Automating transfer function design for comprehensible volume rendering based on 3D field topology analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Issei</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taeko</forename><surname>Azuma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuriko</forename><surname>Takeshima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;99</title>
		<editor>David S. Ebert, Markus Gross, and Bernd Hamann</editor>
		<meeting><address><addrLine>Los Alamitos, California</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="467" to="470" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Solid fitting: Field interval analysis for effective volume exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Issei</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuriko</forename><surname>Takeshima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Visualization Dagstuhl &apos;97</title>
		<editor>Hans Hagen, Gregory M. Nielson, and Frits Post</editor>
		<meeting><address><addrLine>Los Alamitos, California</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997-06" />
			<biblScope unit="page" from="65" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Volume data mining using 3D field topology analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Issei</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuriko</forename><surname>Takeshima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taeko</forename><surname>Azuma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shigeo</forename><surname>Takahashi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="46" to="51" />
			<date type="published" when="2000-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Topological considerations in isosurface generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allen</forename><surname>Van Gelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jane</forename><surname>Wilhelms</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="337" to="375" />
			<date type="published" when="1994-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Topology preserving and controlled topology simplifying multiresolution isosurface extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Gerstner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<editor>Thomas Ertl, Bernd Hamann, and Amitabh Varshney</editor>
		<meeting><address><addrLine>Los Alamitos, California</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="volume">565</biblScope>
			<biblScope unit="page" from="259" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Visualization and Modeling Contours of Trivariate Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<ptr target="http://graphics.cs.ucdavis.edu/˜hamann/hamann.html" />
		<imprint>
			<date type="published" when="1991-05" />
			<pubPlace>Tempe, Arizona, USA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, Arizona State University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Modeling contours of trivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematical Modeling and Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="51" to="75" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">On approximating contours of the picewise trilinear interpolant using triangular rational-quadratic Bézier patches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Issac</forename><forename type="middle">J</forename><surname>Trotts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerald</forename><forename type="middle">E</forename><surname>Farin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="215" to="227" />
			<date type="published" when="1997-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Adriano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lopes</surname></persName>
		</author>
		<ptr target="http://www.mat.uc.pt/˜adriano/Publications/thesis.ps.gz" />
		<title level="m">Accuracy in Scientific Visualization. Ph.D. dissertation, University of Leeds</title>
		<meeting><address><addrLine>United Kingdom</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harvey</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH 87 Conference Proceedings)</title>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">A modified lookup table for implicit disambiguation of marching cubes. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Riccardo</forename><surname>Scateni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Scopigno</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="353" to="355" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">On generating topologically consistent isosurfaces from uniform samples. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Balas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Natarajan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="52" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint/>
	</monogr>
	<note>To appear in</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The asymptotic decider: Removing the ambiguity in marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gregory</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;91</title>
		<editor>Gregory M. Nielson and Larry J. Rosenblum</editor>
		<meeting><address><addrLine>Los Alamitos, California</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="83" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Accurate display of tensor product surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alyn</forename><surname>Rockwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;90</title>
		<meeting><address><addrLine>Los Alamitos, California</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="353" to="360" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">M</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<title level="m">The Visualization Toolkit</title>
		<meeting><address><addrLine>Upper Saddle River, New Jersey</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note>second edition</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Guaranteeing the topology of an implicit surface polygonization for interactive modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Barton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">C</forename><surname>Stander</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 97 Conference Proceedings</title>
		<meeting><address><addrLine>New York, New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM SIGGRAPH, ACM</publisher>
			<date type="published" when="1997-07" />
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Exact isosurfaces for marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holger</forename><surname>Theisel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="19" to="31" />
			<date type="published" when="2002-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Semi-regular mesh extraction from volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zoë</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mathieu</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Breen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<editor>Thomas Ertl, Bernd Hamann, and Amitabh Varshney</editor>
		<meeting><address><addrLine>Los Alamitos, California</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="volume">567</biblScope>
			<biblScope unit="page" from="275" to="282" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
