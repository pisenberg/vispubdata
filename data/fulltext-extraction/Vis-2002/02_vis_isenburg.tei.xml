<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Compressing Polygon Mesh Geometry with Parallelogram Prediction</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Isenburg</surname></persName>
							<email>isenburg@cs.unc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierre</forename><surname>Alliez</surname></persName>
							<email>pierre.alliez@sophia.inria.fr</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Inria</forename><surname>Sophia-Antipolis</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">IEEE Visualization</orgName>
								<address>
									<addrLine>2002 Oct. 27 -Nov. 1</addrLine>
									<postCode>2002</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Compressing Polygon Mesh Geometry with Parallelogram Prediction</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-surface</term>
					<term>solid</term>
					<term>and object representations; Mesh compression</term>
					<term>polygon meshes</term>
					<term>geometry coding</term>
					<term>linear prediction</term>
					<term>parallelogram rule</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this paper we present a generalization of the geometry coder by Touma and Gotsman [34] to polygon meshes. We let the polygon information dictate where to apply the parallelogram rule that they use to predict vertex positions. Since polygons tend to be fairly planar and fairly convex, it is beneficial to make predictions within a polygon rather than across polygons. This, for example, avoids poor predictions due to a crease angle between polygons. Up to 90 percent of the vertices can be predicted this way. Our strategy improves geometry compression by 10 to 40 percent depending on (a) how polygonal the mesh is and (b) on the quality (planarity/convexity) of the polygons.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The emerging demand for visualizing polygon meshes in networked environments has motivated research on efficient representations for such data. Since transmission bandwidth tends to be a limited resource, compressed polygon mesh formats are beneficial. The basic ingredients that need to be compressed are the mesh connectivity, that is the incidence relation among the vertices, and the mesh geometry, that is the specific location of each individual vertex. Optionally there are also mesh properties such as texture coordinates, shading normals, material attributes, etc.</p><p>Traditionally, mesh compression schemes have focused on pure triangular meshes <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b33">33,</ref><ref type="bibr" target="#b34">34]</ref>. The triangle is the basic rendering primitive for standard graphics hardware and any other surface representation can be converted into a triangle mesh. A popular compressor for triangle meshes was proposed by Touma and Gotsman <ref type="bibr" target="#b34">[34]</ref>. Their connectivity coder tends to give the best bit-rates for compressing triangular connectivity and recent results have a posteriori confirmed the optimality of their approach <ref type="bibr" target="#b1">[2]</ref>. Also their geometry coder delivers competitive compression rates. The simplicity of this coder allows a fast and robust implementation and is one reason for the popularity of their scheme. Yet the achieved bit-rates are so good that it continues to be the accepted benchmark coder for geometry compression.</p><p>However, there are a significant number of polygon meshes that are not completely triangular. The 3D models of the View-"highly" non-convex "highly" non-planar "fairly" planar &amp; convex <ref type="figure">Figure 1</ref>: The parallelogram predictor performs poorly when adjacent triangles are highly non-convex or highly non-planar. Performing this prediction within a polygon is beneficial: polygons tend to be fairly convex and planar. point library <ref type="bibr" target="#b35">[35]</ref> for example, a well-known source of high-quality meshes, contain only a small percentage of triangles. Likewise, few triangles are found in the output of many modeling packages. The dominating element in these meshes is the quadrilateral, but pentagons, hexagons and higher degree faces are also common.</p><p>The first approaches to compress polygonal meshes performed a triangulation step prior to compression and then used a triangle mesh coder. In order to recover the original connectivity they had to store additional information that marked the edges added in the triangulation step. Inspired by <ref type="bibr" target="#b20">[21]</ref> we showed in <ref type="bibr" target="#b12">[13]</ref> that polygonal connectivity can be compressed more efficiently directly in its polygonal representation by avoiding the triangulation step.</p><p>More recently we have extended the connectivity coder of Touma and Gotsman <ref type="bibr" target="#b34">[34]</ref> to the polygonal case and also confirmed its optimality <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b17">18]</ref>. This approach gives the lowest reported compression rates for polygonal connectivity and can be seen as a generalization of Touma and Gotsman's connectivity coder <ref type="bibr" target="#b34">[34]</ref>.</p><p>In a similar spirit we show in this paper how to extend their geometry coder to the polygonal case. Thereby we confirm our claim from <ref type="bibr" target="#b12">[13]</ref> that polygonal information can be used to improve compression of geometry. Our polygonal geometry coder is just as simple as the original Touma and Gotsman (TG) coder <ref type="bibr" target="#b34">[34]</ref> but significantly improves the compression rates on polygonal meshes.</p><p>The TG coder compresses the geometry of triangle meshes with the parallelogram rule. The position of a vertex is predicted to complete the parallelogram formed by the vertices of a neighboring triangle and only a corrective vector is stored. The sequence of correctors, which tend to spread around the zero vector, can be compressed more compactly than the sequence of positions.</p><p>However, the parallelogram predictor performs poorly when adjacent triangles are highly non-convex or highly non-planar as illustrated in <ref type="figure">Figure 1</ref>. Since polygons tend to be fairly convex and fairly planar we can use them to make better parallelogram predictions. We (a) predict within rather than across polygons and (b) traverse the polygons such that we can do this as often as possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">MESH COMPRESSION</head><p>Recently we have seen a number of novel and innovative approaches to the compression of polygonal meshes. There are spectral methods <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b16">17]</ref> that perform a global frequency decomposition of the surface, there are space-dividing methods <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref> that specify the mesh connectivity relative to a geometric triangulation of connectivity-less coded positions, there are remeshing methods <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b18">19]</ref> that compress a regularly parameterized version instead of the original mesh, there are angle-based methods <ref type="bibr" target="#b24">[25]</ref> that encode the dihedral and internal angles of the mesh triangles, there are model-space methods <ref type="bibr" target="#b23">[24]</ref> that compress prediction errors in a local coordinate frame using vector quantization, there are feature-based methods <ref type="bibr" target="#b29">[30]</ref> that find repeated geometric features in a model, and finally there are progressive methods <ref type="bibr" target="#b32">[32,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b0">1]</ref> that allow to incrementally reconstruct the mesh at multiple resolutions.</p><p>All of the above schemes are fairly complex: Some perform expensive global operations on the mesh <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b16">17]</ref>, some require complex geometric algorithms <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref>, some modify the mesh prior to compression <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b18">19]</ref>, some involve heavy trigonometric computations <ref type="bibr" target="#b24">[25]</ref>, some make use of complex quantization schemes <ref type="bibr" target="#b23">[24]</ref>, some perform expensive searches for matching shapes <ref type="bibr" target="#b29">[30]</ref>, and some are meant to fulfill a more complex task <ref type="bibr" target="#b32">[32,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b0">1]</ref>. We do not attempt to improve on these schemes. Instead we generalize a simple and popular triangle mesh compressor <ref type="bibr" target="#b34">[34]</ref> to achieve better compression performance on polygonal meshes.</p><p>Traditionally, the compression of mesh connectivity and the compression of mesh geometry are done by clearly separated (but often interwoven) techniques. Most efforts have focused on connectivity compression <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b33">33,</ref><ref type="bibr" target="#b34">34,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b17">18]</ref>. There are two reasons for this: First, this is where the largest gains are possible, and second, the connectivity coder is the core component of a compression engine and usually drives the compression of geometry <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b33">33,</ref><ref type="bibr" target="#b34">34]</ref> and of properties <ref type="bibr" target="#b13">[14]</ref>.</p><p>Most connectivity compression schemes use the concept of region growing <ref type="bibr" target="#b11">[12]</ref>. Faces adjacent to an already processed region of the mesh are processed one after the other until the entire mesh is completed. Most geometry compression schemes use the traversal order this induces on the vertices to compress their associated positions with a predictive coding scheme. Instead of specifying each position individually, previously decoded information is used to predict a position and only a corrective vector is stored. All popular predictive coding schemes use simple linear predictors <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b33">33,</ref><ref type="bibr" target="#b34">34]</ref>.</p><p>The reasons for the popularity of linear prediction schemes is that (a) they are simple to implement robustly, (b) compression or at least decompression is fast, and (c) they deliver good compression rates. For nearly five years already the simple parallelogram predictor by Touma and Gotsman <ref type="bibr" target="#b34">[34]</ref> is the accepted benchmark that many recent approaches compare themselves with. Although better compression rates have been reported, in practice it is often questionable whether these gains are justified given the sometimes immense increase in algorithmic and asymptotic complexity of the coding scheme. Furthermore these improvements are often specific to a certain type of mesh. Some methods achieve significant gains only on models with sharp features, while others are only applicable to smooth and sufficiently dense sampled meshes.</p><p>Predictive geometry compression schemes work as follows: First the floating-point positions are uniformly quantized using a userdefined precision of for example 8, 10, 12, or 16 bits per coordinate. This introduces a quantization error as some of the floatingpoint precision is lost. Then a prediction rule is applied that uses previously decoded positions to predict the next position and only an offset vector is stored, which corrects the predicted position to the actual position. The values of the resulting corrective vectors tend to spread around zero. This reduces the variation and thereby the entropy of the sequence of numbers, which means they can be efficiently compressed with, for example, an arithmetic coder <ref type="bibr" target="#b37">[37]</ref>.</p><p>The simplest prediction method that predicts the next position as the last position was suggested by Deering <ref type="bibr" target="#b6">[7]</ref>. While this technique, which is also known as delta coding, makes as a systematic prediction error, it can easily be implemented in hardware. A more sophisticated scheme is the spanning tree predictor by Taubin and Rossignac <ref type="bibr" target="#b33">[33]</ref>. A weighted linear combination of two, three, or more parent vertices in a vertex spanning tree is used for prediction. The weights used in this computation can be optimized for a particular mesh but need to be stored as well. Although this optimization step is computationally expensive, it is only performed by the encoder and not by the decoder. By far the most popular scheme is the parallelogram predictor introduced by Touma and Gotsman <ref type="bibr" target="#b34">[34]</ref>. A position is predicted to complete the parallelogram that is spanned by the three previously processed vertices of a neighboring triangle.</p><p>Good predictions are those that predict a position close to its actual position. In the triangle mesh case the parallelogram rule gives good predictions if used across triangles that are in a fairly planar and convex position. Consequently, the parallelogram rule gives bad predictions if used across triangles that are in a highly non-planar and/or non-convex position (see <ref type="figure">Figure 1</ref>). Two approaches <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b4">5]</ref> have recently been proposed to increase the number of good parallelogram predictions.</p><p>Kronrod and Gotsman <ref type="bibr" target="#b22">[23]</ref> first locate good triangle pairs for parallelogram prediction and then try to use a maximal number of them. They construct a prediction tree that directs the traversal to good predictions. They propose a scheme that traverses this tree and simultaneously encodes the mesh connectivity. Especially on meshes with many sharp features, such as CAD models, they achieve significant improvements in geometry compression. However, this scheme is considerably more complex than the original method <ref type="bibr" target="#b34">[34]</ref> in both algorithmic and asymptotic complexity.</p><p>Instead of using a single parallelogram prediction, Cohen-Or et al. <ref type="bibr" target="#b4">[5]</ref> propose to average over multiple predictions. They define the prediction degree of a vertex to be the number of triangles that can be used to predict its position with the parallelogram rule. For typical meshes the average prediction degree of a vertex is two. In order to have as many multi-way predictions as possible, their geometry coder traverses the mesh vertices using a simple heuristic that always tries to pick a vertex with a prediction degree of two or higher. This approach improves slightly on the geometry compression rates reported in <ref type="bibr" target="#b34">[34]</ref>, but at the same time increases the complexity of the encoding and the decoding algorithm, since connectivity and geometry need to be processed in two separate passes.</p><p>Our geometry coder on the other hand can be seen as a generalization of the simple TG coder <ref type="bibr" target="#b34">[34]</ref> to the polygonal case. The increase in complexity is only an extra if ... else ... statement and a second set of arithmetic probability tables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">GOOD "POLYGONAL" PREDICTIONS</head><p>We compress the geometry of a polygon mesh as follows: The vertex positions are uniformly quantized with a user-defined number of bits. In an order dictated by our connectivity coder <ref type="bibr" target="#b11">[12]</ref> the vertex positions are predicted using the parallelogram rule <ref type="bibr" target="#b34">[34]</ref>. This converts the sequence of quantized positions into a sequence of corrective vectors. This sequence of integer-valued correction vectors is then compressed using arithmetic coding <ref type="bibr" target="#b37">[37]</ref>. Good predictions result in a corrector sequence with a small spread around the zero vector. Smaller symbol dispersion means lower entropy and leads to better arithmetic compression. We use the polygonal information to generate a sequence of mostly good predictions and only few bad predictions. The mesh traversal of our connectivity coder <ref type="bibr" target="#b11">[12]</ref> naturally favors the occurrence of good predictions. Furthermore, we code good predictions with a different arithmetic context than bad predictions. This makes sure that bad predictions do not "spoil" the symbol distribution of the good predictions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Quantizing of Vertex Positions</head><p>First the minimal and maximal x, y, and z coordinates of all positions are computed. They define a bounding box whose longest side is uniformly quantized with a user-defined number of k bits. The floating-point coordinates along this side are mapped into an integer number between 0 and 2 k − 2. The floating-point coordinates along the other two sides of the bounding box are mapped into an integer range proportional to their length.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Predictive Coding of Quantized Positions</head><p>The first vertex position of each mesh component has no obvious predictor. We simply predict it as the center of the bounding box. There will be only one such center prediction per mesh component. The second and the third vertex positions cannot yet be predicted with the parallelogram rule since at least three vertices are needed for this. We predict them as a previously decoded position to which they are connected by an edge. This is simple delta coding and makes a systematic prediction error, but there will be only two such last predictions per mesh component. All following vertex positions use the parallelogram predictor. We distinguish two cases: a within and an across prediction (see <ref type="figure">Figure 2</ref>).</p><p>within prediction across prediction <ref type="figure">Figure 2</ref>: The parallelogram used for prediction is shown in dark grey and the corrective vectors are shown in red. Imagine the green shaded edges symbolize a sharp crease in the model: then across predictions will perform a lot worse than within predictions.</p><p>Polygonal faces tend to be fairly planar and convex. Although they are usually not perfectly planar, major discontinuities are improbable to occur across them-otherwise they would likely have been triangulated when the model was designed. Furthermore, a quadrilateral, for example, is usually convex while two adjacent triangles can potentially form a non-convex shape. Therefore predicting within a polygon is preferred over predicting across polygons.</p><p>A good mesh traversal order maximizes the number of within predictions. At least three vertices of a (non-triangular) polygon must be known before a within prediction is possible. A simple greedy strategy should grow the already processed mesh region as follows: (a) ideally continue with a polygon that shares three or more vertices with the processed region and (b) otherwise continue with a polygon that creates (a) for the next iteration.</p><p>Luckily the mesh traversal performed by our connectivity coder already gives us such a traversal (see also <ref type="figure">Figure 3</ref>). The mesh is traversed with a heuristic that aims at reducing the number of split operations, which are expensive to code. This idea of an adaptive conquest was originally proposed by Alliez and Desbrun <ref type="bibr" target="#b1">[2]</ref> to improve the connectivity compression rates of the TG coder. Our strategy favors polygons that complete the boundary vertices of the processed region: ideally it continues with a polygon that completes a boundary vertex, which gives us (a). Otherwise it continues with a polygon that brings a boundary vertex closer to completion, which gives us (b). The results in <ref type="table">Table 1</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Arithmetic Compression of Corrective Vectors</head><p>The parallelogram prediction produces a sequence of correctors that has less variation than the sequence of positions. Namely, the corrective vectors are expected to spread around the zero vector. This sequence of correctors has a lower information entropy than the original sequence of positions and can therefore be compressed more compactly. The entropy for a sequence of n symbols is − n pi log 2 (pi) , where the ith symbol occurs with probability pi. Given sufficiently long input an adaptive arithmetic coder <ref type="bibr" target="#b37">[37]</ref> converges to the entropy of the input. We use such a coder to compress the correctors into a compact bit-stream. The correctors produced by within predictions tend to be smaller than those produced by across, last, and center predictions. That implies that the entropy of the within correctors will be lower than that of the others. For entropy coding it is beneficial not to spoil the lower entropy of the within correctors with the higher entropy of the other correctors. Therefore we use two different arithmetic contexts <ref type="bibr" target="#b37">[37]</ref> depending on whether a corrector is the result of a within prediction or not. The results in <ref type="table">Table 1</ref> confirm the benefit of this approach: the arithmetic coder compresses the correctors of within predictions on average 30 percent better than the others.</p><p>For quantization with k bits of precision we map the position coordinates to a number between 0 and 2 k − 2. We chose this instead of the more intuitive 0 and 2 k − 1 range because it simplifies efficient arithmetic coding of the correctors. The chosen range allows us to express each corrective coordinate as number between −2 k−1 − 1 and +2 k−1 − 1, which can be specified using a sign bit and k − 1 value bits. The values of the correctors are expected to be spread around zero without preference for either sign. The value bits give a symmetric and sign-independent measure of the prediction error. The high-order bits are more likely to be zero than the low-order bits. The highest order bit, for example, will only be set if the prediction error is half the extend of the bounding box or more. It benefits from almost all predictions. The lowest order bit, on the other hand, can be set whenever there is a prediction error. It benefits only from the few exact predictions.</p><p>For memory-efficient arithmetic compression we break the sequence of k − 1 value bits into smaller sequences. This prevents the probability tables from becoming too large. For a precision of k = 12 bits, for example, we break the sequence of 11 value bits into sequences of 5, 3, 2, and 1 bits (plus the sign bit). Currently we initialize the arithmetic tables with uniform probabilities and use an adaptive coder that learns the actual distribution. An additional coding gain could be achieved by initializing the table with the expected distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">IMPLEMENTATION AND RESULTS</head><p>Most geometry compression schemes that are actually used in industry-strength triangle mesh coders are those with simple and robust implementations. For example Deering's delta coder <ref type="bibr" target="#b6">[7]</ref> is used for geometry compression in Java3D <ref type="bibr" target="#b14">[15]</ref>, Taubin and Rossignac's spanning tree predictor <ref type="bibr" target="#b33">[33]</ref> will be used in the upcoming MPEG-4 standard <ref type="bibr" target="#b26">[27]</ref>, and Touma and Gotsman's parallelogram predictor <ref type="bibr" target="#b34">[34]</ref> is used by Virtue3D's compression engine <ref type="bibr" target="#b36">[36]</ref>, which is licensed by several others companies.</p><p>The proposed geometry compression scheme can be seen as a natural extension of the Touma and Gotsman <ref type="bibr" target="#b34">[34]</ref> predictor to the polygonal case. Aside from an additional switch statement and a second set of probability tables, our algorithm has the same simple implementation. However, the results listed in <ref type="table">Table 3</ref> show that our generalization to polygon meshes gives an immediate improvement of more than 20 percent in the geometry compression rates. Note that for a purely triangular model (e.g. the cow model) we get roughly the same bit-rates as the Touma and Gotsman coder. This validates that our improvement really comes from using the polygonal information.</p><p>Our approach improves on the Touma and Gotsman <ref type="bibr" target="#b34">[34]</ref> similarly at 8, 10, and 12 bits of precision. This demonstrates that the coding gains are independent from the chosen level of quantization. However, the relative percentage of compression achieved by a geometry coder is strongly dependent on the number of precision bits. This is clearly demonstrated in <ref type="table" target="#tab_2">Table 2</ref>, which reports geometry compression gains at different quantization levels: with increasing precision the achieved compression ratio decreases.</p><p>This means that predictive compression does not scale linearly with different levels of precision. Such techniques mainly predict away the high-order bits. If more precision (= low bits) is added the compression ratio (e.g. the compressed size in proportion to the uncompressed size) decreases. In order to make a meaningful statement about the average compression rates of a geometry coder it is necessary to clarify at which quantization they were achieved. In <ref type="table" target="#tab_2">Table 2</ref> we report the performance of our geometry compression scheme at commonly used levels of precision.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">SUMMARY AND DISCUSSION</head><p>We have presented a simple technique that allows to exploit polygonal information for improved predictive geometry compression with the parallelogram rule. Our scheme is a natural generalization of the geometry coder by Touma and Gotsman <ref type="bibr" target="#b34">[34]</ref> to polygon meshes and gives compression improvements of up to 40 percent. A proof-of-concept implementation of the proposed geometry coder is available in the form of an interactive Java applet on our Web page.</p><p>Can we further improve the polygonal geometry compression rates using only a simple linear predictor? Assume a parallelogram prediction is performed within a regular polygon (e.g. a planar and convex polygon with unit-edge lengths) of degree d. The prediction within regular quadrilaterals (d = 4) is perfect, but for higherdegree polygons (d &gt; 4) the prediction error grows with the degree. Measurements on our test meshes show a similar behavior: predictions within quadrilaterals have the smallest average prediction error and the error becomes larger as the degree increases.</p><p>This observation suggests two ways of improvement: On one hand one could traverse the mesh such that a maximal number of vertices are predicted within a quadrilateral or a low-degree polygon. On the other hand one could change the linear prediction rule depending on the degree of the polygon a vertex is predicted within.</p><p>The parallelogram rule can be written as the linear combination P = α * A + β * B + γ * C where α = γ = 1 and β = −1. It has the advantage that it can be implemented with pure integer arithmetic. If we allowed α, β, and γ to be floating point numbers, we could formulate a pentagon rule or a hexagon rule. Such rules would not be limited to base their predictions on only three vertices. The prediction of the last unknown vertex within a hexagon, for example, could use a linear combination of all five vertices.</p><p>The challenge is then to find generic coefficients that improve compression on all typical meshes. We tried to compute such coefficients for various polygonal degrees by minimizing the Euclidean error over all possible predictions in our set of test meshes. During compression we then switched the coefficients α, β, and γ based on the degree of the polygon we predicted within. This approach slightly improved the compression rates on all meshes; even on those that were not part of the set used to compute the coefficients.</p><p>Also predictions across polygons can be improved by switching between different floating point coefficients based on the degrees of the two polygons involved. Initial experiments show that such degree-adapted prediction rules result in small but consistent improvements in compression. However, these gains are bound to be moderate because on average more than 70 percent of the vertices are predicted within a quadrilateral. We found that the best linear predictor for these vertices is the standard parallelogram rule.  <ref type="table">Table 3</ref>: The table reports the number of vertices, polygons, holes, handles, and components for each mesh. The resulting compression rates in bytes for connectivity and geometry for the Touma and Gotsman coder (TG) and our coder (IA) are listed side by side. The coding gains of our coder over the TG coder are reported in percent. The results for geometry compression are given at three different precision levels of 8, 10, and 12 bits. Note that for purely triangular models (e.g. the cow) we get roughly the same bit-rates as the Touma and Gotsman coder. This validates that our improvement really comes from using the polygonal information. ... 0 <ref type="figure">Figure 3</ref>: The decoding process is an exact replay of the encoding process. Here a small decoding example that demonstrates in which order the connectivity decoder traverses the vertices and which parallelogram predictions the geometry decoder uses to decode their position. The parallelogram used for prediction is shown in dark grey and the corrective vectors are shown in red. The light-grey arrows stand for one or more steps of the connectivity decoder. They are not important here (but are described in <ref type="bibr" target="#b11">[12]</ref> using the same example). The black arrows with numbers denote a step of the geometry coder. They are described here: </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>0 )( 1 ) 2 ) 3 ) 4 ) 5 ) 6 ) 7 ) 8 ) 9 )</head><label>0123456789</label><figDesc>The decoder predicts vertex 0 as the center of the bounding box. The decoder predicts vertex 1 as vertex 0. (The decoder predicts vertex 2 as vertex 1. (The decoder across-predicts vertex 3 as completing the parallelogram spanned by vertices 0, 1, and 2. (The decoder within-predicts vertex 4 as completing the parallelogram spanned by vertices 0, 2, and 3. (The decoder within-predicts vertex 5 as completing the parallelogram spanned by vertices 2, 3, and 4. (The decoder across-predicts vertex 6 as completing the parallelogram spanned by vertices 5, 0, and 4. (The decoder within-predicts vertex 7 as completing the parallelogram spanned by vertices 5, 4, and 6. (The decoder within-predicts vertex 8 as completing the parallelogram spanned by vertices 6, 4, and 3. (The decoder within-predicts vertex 9 as completing the parallelogram spanned by vertices 8, 3, and 2. And so on ...</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>illustrate the success of this strategy: on average 84 % of the vertices are within-predicted.</figDesc><table><row><cell>mesh</cell><cell></cell><cell></cell><cell>predicted</cell><cell></cell><cell></cell><cell>% of</cell><cell>bpv</cell><cell></cell></row><row><cell>name</cell><cell cols="8">total within across last center within within other</cell></row><row><cell cols="3">triceratops 2832 2557</cell><cell>272</cell><cell>2</cell><cell>1</cell><cell>90</cell><cell>14.1</cell><cell>20.5</cell></row><row><cell>galleon</cell><cell cols="2">2372 2007</cell><cell>329</cell><cell>24</cell><cell>12</cell><cell>85</cell><cell>16.9</cell><cell>26.8</cell></row><row><cell>cessna</cell><cell cols="2">3745 3091</cell><cell>621</cell><cell>22</cell><cell>11</cell><cell>83</cell><cell>11.0</cell><cell>19.8</cell></row><row><cell cols="3">beethoven 2655 2305</cell><cell>326</cell><cell>16</cell><cell>8</cell><cell>87</cell><cell>21.0</cell><cell>24.2</cell></row><row><cell>sandal</cell><cell cols="2">2636 2084</cell><cell>525</cell><cell>18</cell><cell>9</cell><cell>79</cell><cell>14.1</cell><cell>22.8</cell></row><row><cell>shark</cell><cell cols="2">2560 2348</cell><cell>209</cell><cell>2</cell><cell>1</cell><cell>92</cell><cell>9.8</cell><cell>18.7</cell></row><row><cell>al</cell><cell cols="2">3618 2672</cell><cell>883</cell><cell>42</cell><cell>21</cell><cell>74</cell><cell>18.6</cell><cell>23.6</cell></row><row><cell>cupie</cell><cell cols="2">2984 2623</cell><cell>343</cell><cell>12</cell><cell>6</cell><cell>88</cell><cell>17.0</cell><cell>21.5</cell></row><row><cell cols="3">tommygun 4171 3376</cell><cell>678</cell><cell>78</cell><cell>39</cell><cell>81</cell><cell>10.9</cell><cell>19.5</cell></row><row><cell>cow</cell><cell>2904</cell><cell>0</cell><cell>2901</cell><cell>2</cell><cell>1</cell><cell>0</cell><cell>-</cell><cell>20.6</cell></row><row><cell>cow poly</cell><cell cols="2">2904 2391</cell><cell>510</cell><cell>2</cell><cell>1</cell><cell>82</cell><cell>18.0</cell><cell>21.6</cell></row><row><cell>teapot</cell><cell cols="2">1189 1016</cell><cell>170</cell><cell>2</cell><cell>1</cell><cell>85</cell><cell>14.9</cell><cell>22.7</cell></row><row><cell>average</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>84</cell><cell>15.1</cell><cell>22.0</cell></row><row><cell cols="9">Table 1: This table reports how many vertices are predicted which</cell></row><row><cell cols="9">way and the ratio between within prediction and other predictions.</cell></row><row><cell cols="9">The bit rates in bits per vertex (bpv) for within-predicted versus</cell></row><row><cell cols="9">otherwise predicted vertices are given for a precision of 12 bits.</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>This table reports geometry compression rates in bits per vertex (bpv) at different quantization levels and the corresponding gain compared to the uncompressed geometry. The latter is simply three times the number of precision bits per vertex.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">ACKNOWLEDGEMENTS</head><p>Many thanks go to Costa Touma for providing us an executable binary of his compression algorithm. The first author thanks Jack Snoeyink, Olivier Devillers, Agnès Clément Bessière, and Jean-Daniel Boissonnat for arranging his stay in France. This work was done while both authors were at the INRIA, Sophia-Antipolis and was supported in part by the ARC TéléGéo grant from INRIA.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Progressive encoding for lossless transmission of 3D meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;01 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="198" to="205" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Valence-driven connectivity encoding for 3D meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics&apos;01 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="480" to="489" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Progressive compression and transmission of arbitrary triangular meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Zhuang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization&apos;99</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="307" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Single resolution compression of arbitrary triangular meshes with properties</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Zhuang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DDC&apos;99</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="247" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Multi-way geometry encoding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Irony</surname></persName>
		</author>
		<idno>TR-2002</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Progressive compression of arbitrary triangular meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Remez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization&apos;99 Conf. Proc</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="67" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Geometry compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Deering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;95</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="13" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Geometric compression for interactive transmission</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Devillers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-M</forename><surname>Gandoin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="319" to="326" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Progressive and lossless compression of arbitrary simplicial complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Devillers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-M</forename><surname>Gandoin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;02</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="372" to="379" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Real time compression of triangle mesh connectivity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strasser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;98 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="133" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Efficient implementation of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="36" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Compressing polygon mesh connectivity with degree duality prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Isenburg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface&apos;02 Conference Proc</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="161" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Face Fixer: Compressing polygon meshes with properties</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Isenburg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;00 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Compressing the property mapping of polygon meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Isenburg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Pacific Graphics&apos;01 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="4" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<ptr target="http://java.sun.com/products/java-media/3D/" />
		<title level="m">Java3D</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Spectral compression of mesh geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Karni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIG-GRAPH&apos;00 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">3D mesh compression using fixed spectral bases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Karni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface&apos;01 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Near-optimal connectivity encoding of 2-manifold polygon meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Khodakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroeder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
	<note>to appear in GMOD</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Normal mesh compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Khodakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Guskov</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note type="report_type">preprint</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Progressive geometry compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Khodakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;00 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Connectivity compression for irregular quadrilateral meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Szymczak</surname></persName>
		</author>
		<idno>TR-99-36</idno>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
		<respStmt>
			<orgName>GVU, Georgia Tech</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Efficient coding of non-triangular meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kronrod</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Pacific Graphics</title>
		<meeting>Pacific Graphics</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="235" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Optimized compression of triangle mesh geometry using prediction trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kronrod</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 1st International Symposium on 3D Data Processing, Visualization and Transmission</title>
		<meeting>1st International Symposium on 3D Data Processing, Visualization and Transmission</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="602" to="608" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Vertex data compression for triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Ko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Pacific Graphics&apos;00 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="225" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Angle-analyzer: A triangle-quad mesh codec</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics&apos;02 Conference Proceedings</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Mesh connectivity coding by dual graph approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">C</forename><surname>Kuo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998-03" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<ptr target="http://mpeg.telecomitalialab.com/" />
		<title level="m">MPEG4</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Compressed progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Parajola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="79" to="93" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Edgebreaker: Connectivity compression for triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="61" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Compression of 3D engineering models using discovery of repeating geometric features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shikhare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bhakar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Mudur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Workshop on Vision, Modeling, and Visualization</title>
		<meeting>Workshop on Vision, Modeling, and Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">An Edgebreaker-based efficient compression scheme for connectivity of regular meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Szymczak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 12th</title>
		<meeting>12th</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m">Canadian Conference on Computational Geometry</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="257" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Progressive forest split compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Guéziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">P</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lazarus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;98 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="123" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Geometric compression through topological surgery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="84" to="115" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Triangle mesh compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Touma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface&apos;98 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="26" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Viewpoint. Premier Catalog</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>Edition) www.viewpoint.com</note>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<ptr target="http://www.virtue3d.com/" />
		<title level="m">Virtue3D</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Arithmetic coding for data compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">H</forename><surname>Witten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Neal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">G</forename><surname>Cleary</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="520" to="540" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
