<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Model for the Visualization Exploration Process</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Jankun-Kelly</surname></persName>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing, Computer Science Department</orgName>
								<orgName type="department" key="dep2">Davis</orgName>
								<orgName type="laboratory">Visualization and Graphics Research Group</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95616</postCode>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
							<email>ma@cs.ucdavis.edu</email>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing, Computer Science Department</orgName>
								<orgName type="department" key="dep2">Davis</orgName>
								<orgName type="laboratory">Visualization and Graphics Research Group</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95616</postCode>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Gertz</surname></persName>
							<email>gertz@cs.ucdavis.edu</email>
							<affiliation key="aff2">
								<orgName type="department">Davis</orgName>
								<orgName type="laboratory">Database and Information Systems Group</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<addrLine>Computer Science De-partment</addrLine>
									<postCode>95616</postCode>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Model for the Visualization Exploration Process</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3 [Computer Graphics]: Methodology and Techniques; H.5.2 [Information Interfaces and Presentation]: User Interfaces-Theory and Methods visualization process</term>
					<term>visualization models</term>
					<term>visualization systems</term>
					<term>scientific and information visualization</term>
					<term>collaboration</term>
					<term>XML</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The current state of the art in visualization research places a strong emphasis on different techniques to derive insight from disparate types of data. However, little work has investigated the visualization process itself. The information content of the visualization process-the results, history, and relationships between those results-is addressed by this work. A characterization of the visualization process is discussed, leading to a general model of the visualization exploration process. The model, based upon a new parameter derivation calculus, can be used for automated reporting, analysis, or visualized directly. An XML-based language for expressing visualization sessions using the model is also described. These sessions can then be shared and reused by collaborators. The model, along with the XML representation, provides an effective means to utilize the information within the visualization process to further data exploration.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Over the past decade, the field of visualization has matured; a wealth of techniques for a variety of data types have been developed to solve problems in various domains. As the use of visualization becomes more wide-spread, a formal understanding of how visualizations and visualization systems are used is needed. Such a formal understanding can assist in the development of new visualization systems or the refinement of current ones. For example, a system using a complete model of the visualization process can suggest courses of data exploration for users by analyzing previous results captured by the model during the current or previous exploration sessions. In addition, a standard representation of the visualization process provides documentation of that process. This documentation can be used by others to reproduce the visualization results for validation or to extend those results by continuing the data exploration. Towards this end, a model for the visualization exploration process has been developed.</p><p>It is important to note that a model of the visualization process alone is not sufficient to describe the knowledge of the user before or after the visualization. To completely capture this knowledge and insight, a meta-data model for the visualization process also needs to be developed. The ultimate goal of this research is to develop such a meta-data model using the model described here as the basis for the meta-data's descriptions. For example, meta-data annotations of previous sessions that suggest what results were "good" and which were not could help the session analysis process. Thus, this work is the first step towards that goal.</p><p>There are several benefits to capturing the visualization process with the proposed approach. With our process model, users of visualization systems are able to record their visualization sessions at a higher level than simple log systems are able to provide. For example, the two representations of the visualization process discussed in Section 3.2.1 would be difficult or impossible to create using a log file due to the lack of information about the process. Our model also allows visualization systems designers to build systems that can share results and process information between different visualization interfaces, an example of which is discussed in Section 5. Finally, represented with a formal model, the visualization process is opened up to a variety of analyses. Though work of this nature is not presented here, it is conceivable that analysts could derive different metrics using the model to further examine and optimize the visualization process. The process model discussed here addresses visualization exploration in more depth and with greater generality than has been previously presented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">A CHARACTERIZATION OF VISUALIZATION EXPLORATION</head><p>In order to develop a model which describes the visualization process, the characteristics of that process must be understood. Springmeyer et al. <ref type="bibr" target="#b19">[20]</ref> describe the entire scientific data analysis process of which scientific visualization is a part. In their taxonomy, visualization is used mainly to interact with and maneuver through scientific data. These actions include generating, examining, querying, navigating through, comparing, and classifying the data or portions of the data. While this task-based classification is useful for understanding the uses of visualization, it is less useful in distinguishing the core features of the visualization process. Upson et al. <ref type="bibr" target="#b21">[22]</ref> describe the scientific visualization process as an iterative analysis cycle. According to this model, data is filtered into subsets of interest, mapped onto visual primitives, and then rendered for the user by a function called the visualization transform. The visualization generated by this transform is then used by the user to provide feedback into the previous steps, restarting the cycle. A similar cycle of raw data transformation, visual structure generation, and view rendering with user interaction is described by Card et al. <ref type="bibr" target="#b4">[5]</ref> for information visualization. The key feature of both models is that the visualization process is an iterative sequence of user controlled transformations. Thus, elements that change during this iteration must be the focus of any description of the visualization process. These elements are the parameters which control  <ref type="table">Table 1</ref>: A summary of parameter editing capabilities of visualization exploration interfaces. The first column reports the type of interface, the second column the different type of parameter manipulation the interface supports, the third column whether the interface supports continuous rendering from parameter updates, and the fourth column whether the interface supports visualization transform editing. A "limited" in the fourth column signifies that the interface may combine a static number of different visualization techniques, such as a cutting plane in a volume rendering display.</p><p>the transforms. As parameters are visualization transformation dependent, a description of this transform is also important to any documentation of the visualization process.</p><p>To gain a better understanding of the visualization process, it is insightful to investigate different visualization user interfaces. The kinds of interactions a user has with the user interface expose different aspects of the visualization exploration process. Though the user interface community has extensively looked at user interface events (for example, see <ref type="bibr" target="#b9">[10]</ref>), the actions discussed here are at a higher semantic level and are tailored for visualization systems. Table 1 summarizes the five interface types studied and different capabilities of each. The examples discussed below focus on scientific visualization interfaces, though parallels can be drawn to information visualization tools.</p><p>The first two interface types discussed are interactive parameter control and dynamic manipulation interfaces <ref type="bibr" target="#b18">[19]</ref>. In the former interface, interactive manipulation of the parameter values does not correspond to interactive updates to the rendered result; in the later interface, the result is rendered interactively during parameter changes. Visualization transform editing-the process of creating visualization transforms through means such as data-flow networks (c.f.)-is not supported in these interfaces, though a fixed number of different transforms may be available for use. In these systems, the major action is the editing of parameter values (potentially from different parameter types in the case of interactive parameter control interfaces) to generate a visualization result. In interactive interfaces, parameter values can vary over a continuous range during manipulation. This range corresponds to a range of rendered results, which must be documented somehow. This behavior does not occur in non-interactive interfaces.</p><p>Data-flow interfaces <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b22">23]</ref> provide the ability to edit the visualization transform. The visualization transform is constructed using a visual programming language. Because the parameter types are dictated by the visualization transform, special care must be taken when recording the visualization process for data-flow interfaces. Depending on the system, parameter changes and rendering may be synchronous like dynamic manipulation interfaces or asynchronous like interactive parameter control interfaces.</p><p>The fourth type of interface presented here is the Image Graph <ref type="bibr" target="#b16">[17]</ref>. This interface uses a graph representation of the visualization process that distinctly displays the relationship between generated images via glyph edges. An image graph interface exhibits two types of parameter manipulation behaviors not found in the previous interfaces. First, it is possible to propagate a parameter change down a directed graph of related results, creating an entirely new subgraph of images. In addition, it is possible to combine several parameters from different results via parameter operators to generate new parameters and thus a new result.</p><p>The interfaces discussed so far have coupled parameter editing and rendering. Though it may be possible to edit several parameters without generating a result-and even change the same parameter multiple times before rendering-only parameters which generate a result are stored. This behavior is not true of Jankun-Kelly and Ma's visualization exploration spreadsheet-like interface <ref type="bibr" target="#b10">[11]</ref>. In this interface, parameters can be added, edited, or removed without rendering a result. When desired, the user combines a set of parameters-represented by a cell in the table-to generate a result. While all the interfaces perform the same function-collecting parameter values to create the corresponding visualization result-the spreadsheet-like interface highlights this behavior.</p><p>From the previous discussion, several key properties of the visualization exploration process can be distilled. As illustrated by the spreadsheet interface, the fundamental operation of the visualization exploration process is the application of a set of parameter values to the visualization transform to generate a visualization result. The parameter values are generated in one of three ways: a single parameter value can be generated from an old parameter value (as in non-interactive interfaces); a range of parameter values can be generated from an old parameter value (as in an interactive interface); or a set of parameter values can be derived from a different set of parameter values via some operator (as in the image graph). The parameters available vary with the visualization transform which can also change. Finally, it is possible to generate more than one result in a single operation in some interfaces. All of these properties will be addressed by the proposed model for the visualization exploration process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">VISUALIZATION EXPLORATION PROCESS MODEL COMPONENTS</head><p>The visualization exploration process model consists of two components: the visualization transform model and the visualization exploration session model. The transform model provides context for the process described in the exploration session model. Put another way, the visualization transform model describes how the visualization occurs while the visualization exploration session model describes what occurred.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Visualization Transformation Model</head><p>The visualization transform model outlines the type of visualization being applied. Without this information, it may be difficult to determine how the visualization results were generated. The transform also details what parameter types are used to generate a result. This information is needed by the session model in the next section. Previous visualization transform models have focused on describing the visualization transform itself, leaving out descriptions of the parameters involved. One model already mentioned is the data-flow model used by data-flow interfaces <ref type="bibr" target="#b7">[8]</ref>. This considers the visualization transform a pipeline where each stage in the pipeline represents a transformation. When these stages are collected, they form a network through which data flows. The data state model <ref type="bibr" target="#b5">[6]</ref>, in contrast, focuses on the transformation of data states through the visualization pipeline. In a data state network, the nodes represent states of the data and the edges operations on the data. This network is the dual of the data-flow network. Finally, the display model used by VisAD <ref type="bibr" target="#b8">[9]</ref> is interesting in that it maps data attributes directly to display via mappings utilizing lattice theory and principles developed by Bertin <ref type="bibr" target="#b1">[2]</ref> and Mackinlay <ref type="bibr" target="#b17">[18]</ref>. It is the lowest-level approach of the three models. These models neither explicitly address the parameters encoding the visualization technique nor describe the visualization process as a whole. The visualization transform model described here augments the data state model to include information about the parameters used in the visualization process. The data state model was chosen because it already focuses upon the data sets utilized in the visualization, an important parameter. Formally, the transform model consists of the following components:</p><formula xml:id="formula_0">Visualization transform A function f : D × P1 × • • • × Pn → R</formula><p>which describes the mapping of value (the data set type D) to view (the visualization transform result type R). P1 to Pn are visualization transform parameter types.</p><p>Visualization transform parameter type Any set that is part of the domain of the visualization transform function. By this definition, data set types are also a visualization transform parameter type. A member of a visualization transform parameter set is a visualization transform parameter value, or parameter value for short.</p><p>Visualization transform result type A set which is in the range of a visualization transform function. Members of this set, known as visualization transform result values, or results for short, are directly representable in graphical form (such as a raster image, shaded geometry, etc.).</p><p>When documenting the visualization exploration session, only the visualization transforms and corresponding parameter and result types used need to be recorded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Visualization Session Model</head><p>The visualization exploration session model serves two purposes. Its primary purpose is to capture the path of exploration during the visualization session. This information encapsulates the details of the visualization exploration process. The secondary purpose of the model is to allow the description of the session to be further analyzed, visualized, or manipulated.</p><p>The visualization exploration session model describes four components:</p><p>• The visualization results generated during the visualization process.</p><p>• The parameter values used during the process.</p><p>• A linear history of the generated results.</p><p>• An encoding of the relationships between results.</p><p>The visualization results are recorded because they are the desired outcome of the user's exploration process. Each result is uniquely identified by the parameter values which generated that result. Without the parameter values, the final results could not be reproduced. Finally, the history and derivation information is needed to reproduce the visualization process. Most research in visualization modeling has not focused on the process model. One work of note is that of Lee and Grinstein <ref type="bibr" target="#b15">[16]</ref>, later expanded in Lee's thesis <ref type="bibr" target="#b14">[15]</ref>. Lee uses a graph-like structure to model the visualization process for databases. Vertices in the graph represent the state of the visualization while edges are relationships between states. These relationships are based upon similarities between meta-data attributes of the states. In Lee's work, these attributes describe structural attributes of the states/results. Our work also uses a graph structure to represent relationships, but the relationships are between parameter value derivations.</p><p>Similar work in process modeling was addressed by the GRAS-PARC project <ref type="bibr" target="#b3">[4]</ref>. The project's work addresses modeling the search for a solution in a scientific problem solving environment (PSE). Like the visualization exploration process, this search is parameter driven; in this case, the parameters are the control variables for the simulation data in the PSE. A history tree structure is used to communicate and manipulate the PSE control state where nodes in the tree store the solution parameters and complete or partial results (as simulations can be interrupted). Our work differs from the GRASPARC work in several ways. First, as noted, their work focuses on the steering aspect of a problem solving process, while we address the search of the visualization parameter space. Second, our work models how the parameter values can change during the visualization process. This information is not present in the GRASPARC work. In addition, parameter derivations in our model can have multiple sources/parents, whereas branches in the GRAS-PARC history tree are limited to single parent (this is illustrated later in <ref type="figure" target="#fig_0">Figure 3)</ref>. Finally, the derivation information in our model allows the visualization process to be analyzed in many different ways instead of the single, tree-like view GRASPARC provides.</p><p>As previously stated, the fundamental operation that occurs during the visualization process is the formation of parameter value sets to derive visualization results. These parameter value sets, or p-sets, posses a parameter value for each parameter in the visualization transform. New p-sets are created by user interaction with the visualization system. The session model tracks the relationships between results by recording how a user generates new p-sets (and thus results) from old p-sets. P-set derivations can be expressed as one of three templates using a parameter derivation calculus. In the following, the pj = {pj(1), . . . , pj(n)} are p-sets and each pj(i) ∈ Pi is a different parameter value for the same parameter type Pi:</p><formula xml:id="formula_1">I. p2(i)| p0 → p1: parameter value p0(i) ∈ p0 is replaced by p2(i) ∈ p2 in order to derive p-set p1. II. [p0(i), p1(i)]| p0 → p1</formula><p>: a continuous range of parameter values is generated between discrete parameter values p0(i) and p1(i) and applied to p-set p0. p1 represents the p-set at the end of the continuous interaction.</p><p>III. p0(i) → p1(i)| p0 → p1: parameter value p1(i) was calculated from p0(i) by some function and then applied to p0 to generate p1.</p><p>All derivations are expressed as parameter-list | input-tuple → output-tuple. Such constructions are parameter derivation calculus instances. The parameter list contains input and output parameter values; the former is used to derive the later. Output parameter values are sequentially applied to the elements in the input p-set tuple to generate the output p-set tuple. In the templates, p0(i) is an input parameter value while p1(i) and p2(i) are output parameter values.</p><p>It is possible to have multiple input parameter values, output parameter values, p-sets in an input tuple, or p-sets in an output tuple. For example, <ref type="figure">Figure 1</ref> demonstrates a function derivation with two output parameter values (in braces) and two elements in the output tuple (in angle brackets). The parameter derivation calculus describes all the salient parameter behaviors described in Section 2. The only operation not supported is the "remove parameter" function of the exploration spreadsheet. This model records how results were generated during the visualization process-thus, only parameters which are used must be recorded. Parameters that were added and then removed without rendering a result have no bearing on any generated results and parameters later hidden from display by removal will still be present in the model's representation.</p><p>The parameter derivation calculus is the basis for recording the visualization exploration session. Formally, a visualization session consists of a set of visualization session results. A visualization session result is a tuple containing a p-set, the visualization result derived from the p-set, a timestamp to place the result in temporal context, and a parameter derivation calculus instance detailing how the result was derived. Example session results are given in <ref type="figure">Figure  1</ref>. Each session result represents the generation of a single visualization result. As the example illustrates, it is possible for parameter calculus instances to be the same for two or more session results (the third and fourth lines in the example). This disparity is due to the fact that calculus instances correspond to user actions while session results correspond to rendered results. The same user action can create more than one rendered result, all sharing the same timestamp. Though it is possible for a user to re-visit the same visualization result by generating the same p-set more than once, each is a unique session result identified by a distinct timestamp.</p><p>One issue remaining is the change of visualization transforms during a visualization exploration session. Changes of visualization transform are not explicitly encoded in the model. Currently, it is assumed that visualization transforms can be uniquely identified by their signature: the parameter types and result type used in the visualization transform. Thus, a p-set not only uniquely identifies a visualization result but also identifies the visualization transform that generated the result since the parameter types are defined by the transform. Explicit identification of a transform change is not needed since it is implicit in the visualization session result sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Visualization Process Graphs</head><p>Visualization process graphs visually summarize the visualization process. Two graphs of interest are the history sequence and the derivation graph <ref type="figure">(Figure 2</ref>).</p><p>In the history sequence, branches in the visualization process are collapsed into a single element. Each element in the sequence is a set of session results that were generated by the user in a single operation. The sequence can be displayed graphically using vertices representing the session results created during a single time step and directed edges representing the flow of time. These edges are labeled with the timestamp to order the sequence.</p><p>The history sequence is insufficient for describing the relationships between session results. The sequence does not distinguish between results derived directly from their predecessor or those derived from earlier results. These relationships are vital to understanding the entirety of the visualization process and are captured by the derivation graph.</p><p>The derived-from relation forms the basis of the derivation graph: A session result sj is derived from result si if and only if sj's timestamp is greater than si's timestamp and the p-set pi belonging to si either possesses a parameter value which is a member of the parameter list in sj's parameter calculus instance or pi is a s0 = p0, r0, t0, ∅ s1 = p1, r1, t1, p1(2)| p0 → p1 s2 = p2, r2, t2, p1(1) → {p2(1), p3(1)}| p1 → p2, p3 s3 = p3, r3, t2, p1(1) → {p2(1), p3(1)}| p1 → p2, p3 s4 = p4, r4, t3, p4(2)| p0 → p4 <ref type="figure">Figure 1</ref>: A series of visualization session results. A session result is a tuple of a p-set (the pi), the visualization result corresponding to that p-set (ri), a timestamp (ti), and information detailing how the result was derived. In this example, the second session result was derived from the first in the second timestep before the third and fourth results were both derived in the third timestep. Afterwards, the fifth result was derived from the first. <ref type="figure">Figure 2</ref>: The history sequence (top) and derivation graph (bottom) for the visualization sessions results (the si) from <ref type="figure">Figure 1</ref>. The graphs provide an "at-a-glance" overview of the visualization process. The graphs clearly show that s4 is not descended from s2 or s3, whereas that information may not be immediately apparent from the session results. member of the input p-set tuple in sj's parameter calculus instance. In other words, sj is derived from si if it was created after si and either used the p-set or a parameter value from si's p-set to derive sj's p-set. Using the relation, the derivation graph is constructed as follows. Each vertex in the graph represents a single session result. There is a directed edge between two vertices if and only if the vertex with the outgoing edge derived the vertex with the ingoing edge; this edge can be optionally labeled with the parameter calculus information as demonstrated in <ref type="figure">Figure 2</ref>. Derivations that generated or used several results are clearly identified in the graph. It is possible for the graph to contain disconnected components. Each disconnected component corresponds to a different visualization transform as there will be no derivations between transforms. Together with the history sequence, the derivation graph captures the key features of the visualization process.</p><formula xml:id="formula_2">s 3 s 2 s 4 s 1 s 0 t 2 t 1 t 3 s 1 s 2 s 3 ( ) 1 0 1 2 p p p a ( ) 4 0 4 2 p p p a { } 3 2 1 3 2 1 , , p p p p p p a → s 4 s 0 { } 3 2 1 3 2 1 , , p p p p p p a →</formula><p>One property to note of the derivation graph is that it is a collection of directed, acyclic graphs (DAGs). There are no cycles because of the ordering enforced by the derivation relation-no result can derive a result with a lower or same timestamp value. The DAGs represent the derivations related to a single visualization transform. Each DAG possesses a node corresponding to the default result of the visualization transform. The default result is the session result that corresponds to the initial parameter values for a visualization transform; if there is no appropriate default value for a certain parameter (such as a data set), then an "undefined" value is used. By convention, any completely new set of parameter values is derived from this default set. Only the default results are not derived from any other result.</p><p>There are potentially other visualization session graphs that can be extracted from the visualization session results. In addition, metrics can be created to measure different properties of these graphs and the session they encode. Lee's thesis <ref type="bibr" target="#b14">[15]</ref> describes several such measurements which could be adapted for analysis of visualizations performed with this model. This is a fertile area of research to be explored.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">MODEL REPRESENTATION</head><p>To transport an instance of the model of the visualization process between different systems requires the use of a common data format. To be effective, the format must be extendible to different visualization applications. It is also desirable that the representation can be used by data-mining or analysis tools. These goals are accomplished by using XML to express the visualization process.</p><p>The Extended Mark-Up Language (XML <ref type="bibr" target="#b2">[3]</ref>) is the standard data exchange format for the World-Wide Web. Standardized technologies exist to parse and extract the content from XML documents. XML documents can also be transformed into HTML <ref type="bibr" target="#b6">[7]</ref>. By expressing the visualization session with XML, the session can be easily shared with collaborators. Specific systems can translate their internal representation into our generic model (via XML) which can then be translated again to a representation usable by some other system.</p><p>The XML representation of the model is partitioned into five sections. The first section describes the visualization transforms used by listing their signatures (the parameter and result types) and name. In the next section, a list of the parameter values used is stored, each uniquely identified. Each distinct p-set is then recorded by identifying the parameter values composing the p-set. The psets are also given a unique identifier. Next, the visualization transform results are stored. For each result, a reference to the p-set which generated it, an identifier, and the result itself are recorded. Note, for interactive systems which can generate results continuously over a range, only the first and last result in that range are stored. It is assumed that the interim results can be generated by interpolating over the parameter that varied. If two results are not sufficient, then "key frame" results-results where interpolation over the range is sufficient-could also be stored. In the final section, the visualization session's results are themselves stored. Each session result identifies its p-set, visualization result, timestamp, and the derivation information for that session result. When generating the XML session document, there are different approaches to how parameters and results are stored. It is possible to embed a representation of these items directly into the XML representation. For large or binary elements, such as the data set used or the results themselves, this approach may be inadvisable. Instead, each parameter or result element in the XML document can provide an optional link attribute. A link is a URL describing where the actual parameter or result may be obtained. Linking can be used to reference large data sets over the network while accessing image files locally, avoiding costly transfers.</p><p>Note that the main purpose of the XML description of the model is for transport, not analysis. Analysis is performed on the information encoded by the XML (the visualization session results from this model), not on the XML itself. Given an XML document representing a visualization session, tools are expected to parse the XML into their own internal structures before operating on the visualization session information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EXAMPLES</head><p>To better understand the details of the visualization exploration process model, we present a few examples. Two examples are presented in this section. The first example considers a detailed visualization session in order to demonstrate the effectiveness of the model and representation. It also provides a concrete example of how the parameter calculus can describe real visualization sessions. The second example is a case study demonstrating how an implementation of the model was added to an existing visualization tool.</p><p>The first example <ref type="figure" target="#fig_0">(Figure 3)</ref> demonstrates the use of the the model and representation. A volume visualization of blood vessels in the brain was performed using the image graph (top image in the figure). The user first zoomed into a region of interest (result b). Two rotations were then used to display different views of the vessel (c and d). After zooming in again (e), the user decided to apply the final zoom magnification to the earlier images. This was accomplished by dragging the zoom edge over the previous zoom edge. The images using the new magnification (e, f , g) replaced the old images (d, b, and c respectively) to produce the image graph shown in the figure. During the exploration, the session results were recorded (middle portion of the figure); these results explicitly state how the zoom parameter value from e's p-set was applied to results b and c to derive results f and g respectively (the fifth and sixth lines in the middle portion of the figure). The derivation graph (displayed without edge labels in the figure) illustrates this point by displaying how multiple results were used to generate the later results. Finally, the exploration session was stored as an XML document and transformed into HTML (bottom image in the figure). This web page can be easily viewed and shared with collaborators to discuss results.</p><p>In the second example, the model was used to augment an existing visualization tool. The tool in this example is used to visualize anomalies in Internet routing using the Border Gateway Protocol (BGP) <ref type="bibr" target="#b20">[21]</ref>. The tool displays different types of changes to ownership of autonomous systems (ASes)-groups of hosts on the Internet. The different types of changes correspond to different colors (top image in <ref type="figure" target="#fig_1">Figure 4</ref>). Lines of the appropriate color connect an AS along the edge of the square to IP addresses affected by the AS change within the square. The tool allows a user to browse through different dates with different types of AS changes highlighted. Anomalies are found by visually searching the dates for unusual patterns of lines. In this example session, a range of dates showing all the AS change types were examined until an anomaly was discovered on August 14th, 2000 (top row of the bottom image in <ref type="figure" target="#fig_1">Figure 4</ref>). The displayed AS change types were then changed until the type of anomaly was isolated (third column in the lower image in the <ref type="figure">figure)</ref>.</p><p>In order to support the model presented here, the original tool was modified in several stages. First, the types of visualization transforms used by the system and the parameter and result types of each transform were determined. In this system, the major parameter types are the date, which of the eight AS changes to display, a list of ASes to highlight, a list of ASes to ignore, and options for modifying the display. Once the parameters were identified, the next stage determined how the parameter values can change. For this example, all parameter changes are discrete: there are no function applications and parameters cannot be manipulated over a range. Finally, hooks were added to the user interface elements corresponding to each parameter type in order to capture changes in parameter values. These hooks update session information stored by a separate library. The library (written in Python) interfaces with the original tool (written in C++) in order to produce the XML representation used by the spreadsheet (written in Java, the bottom image in <ref type="figure" target="#fig_1">Figure 4)</ref> to display the process. The above process can be repeated with other visualization systems in order to make use of the model and this XML representation; <ref type="figure">Figure 5</ref> displays the a = pa, ra, t0, ∅</p><formula xml:id="formula_3">Default b = p b , r b , t1, p b (zoom)| pa → p b</formula><p>Zoom a c = pc, rc, t2, pc(view)| p b → pc Rotate</p><formula xml:id="formula_4">b d = p d , r d , t3, p d (view)| p b → p d</formula><p>Rotate b e = pe, re, t4, pe(zoom)| p d → pe The feature of interest is the bulge in the lowest vessel in image e (captions added for clarity). During the visualization, the user dragged the zoom edge going to image e over the edge from a to zoom the other images in the image graph (top). These derivations, including the propagation of the zoom factor from e to results f and g, are recorded in the session results (top middle). The derivation graph succinctly illustrates the information within the session results (bottom middle). The XML representation of the original visualization can be used to translate the session from an image graph view to an HTML page (bottom). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">INITIAL EVALUATION</head><p>Initial evaluation of the model and representation have been positive. Users of the BGP tool, for example, were pleased with the ability to view the visualization in different formats by using the system-independent XML representation. Demonstrations of a spreadsheet-based system using the model to display session summaries in HTML have also met with approval. More studies, es- <ref type="figure">Figure 5</ref>: The XML representation of a visualization session using the BGP visualization tool; similar portions of the document are condensed for illustration purposes. The first section (blue) details what visualization transforms were used. The next portion (green) lists all the parameter values explored, followed by the parameter sets constructed (pink) and the visualization results rendered (red). Finally, the session information is recorded (purple). This representation encodes all the information described by the model and is used to transport session information between visualization systems.</p><p>pecially those which explore the analytical uses of the model, are planned for the future.</p><p>One concern is the growth of the XML representation as visualization sessions become longer. In the worst case, the size of the file can increase quadratically with the number of results (if every new result is derived from all previous results-an unlikely case). However, in practice, the text XML does not approach anywhere near the size of the original data set for common large data sets and can be effectively compressed if needed. In the BGP example, the XML session encoding never exceeded a megabyte in size for over eighty session results. Combined with the binary PNG images for the rendered results, the overall size was 6.1 MB.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>The visualization exploration process contains a wealth of information; this work has demonstrated a model to describe this information and a representation to share the information. Both the visualization technique performed and the process used to generate visualization results are captured by the model and representation.</p><p>This work impacts the user of visualization in several ways. Systems utilizing the process model assist in reuse since they clearly track where a user has been, where they are, and possibly suggest where to go. Visualizations represented using this formalism can be used in heterogeneous visualization interface environments, enabling large-scale collaboration. The salient details of the visualization process are documented, allowing others to reproduce the process. Finally, others can use the formal model to operate upon or analyze their results in a rigorous manner.</p><p>This work also contributes to the understanding of the visualization process. A characterization of user interactions with parameters during the visualization process has been performed. This characterization has led to the development of a parameter derivation calculus to describe the relationships between results created during a visualization session. Information stored using this calculus can be analyzed and further visualized to gain insight in the visualization process itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Future Work</head><p>This research can be extended in several ways. First, more visualization systems using this model should be developed in order to test the transport of the visualization process further. A framework is currently being constructed to assist in this task.</p><p>The parameter derivation calculus represents a wealth of information that has not been fully exploited. Different graphical visualizations and metrics based upon the calculus need to be investigated. For example, <ref type="figure">Figure 6</ref> displays a focus+context graph visualization of the BGP visualization of <ref type="figure" target="#fig_1">Figure 4</ref>. In this example, radial distance from the center encodes how many parameter values in a result's p-set differed from the p-set of the central result; edge exist between results with only a single parameter value difference between them <ref type="bibr" target="#b11">[12]</ref>. These sorts of visualizations may help users or designers gain insight into previous visualization sessions.</p><p>Another important aspect in many scientific visualization sessions is the change of visualization transforms. This model does not currently store any information about modifications to the transform beyond what transforms were used. A "visualization transform derivation" model is needed. However, before this could be realized, more research into unifying visualization transform representations for scientific and information visualization should be performed if any subsequent work were to be general. Finally, the model does not currently store any meta-data. Metadata can be used to annotate any portion of the model, including results, parameter settings, or the steps in the process. A scientist's notes about a particular result or the operation performed during a state transition are all examples of meta-data to store. Meta-data would provide important semantic information about the visualization process and help capture the visualization user's insight gained from the process. Like the current model, the meta-data model needs to be flexible, allowing users to customize it to their specific application. Currently, a model similar to RDF <ref type="bibr" target="#b12">[13]</ref> is being investigated for this purpose. <ref type="figure">Figure 6</ref>: A focus+context visualization of the BGP visualization session in <ref type="figure" target="#fig_1">Figure 4</ref>. Results are organized radially out from the central result. The distance from the center is determined by the number of parameter differences between the central result's p-set and the p-set of the other result. Links exist between results with only one parameter value difference between them. This type of visualization can be used to get a sense of the depth of exploration of the visualization parameter space.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>Zoom d f = p f , r f , t5, pe(zoom)| p b , pc → p f , pg Zoom b g = pg, rg, t5, pe(zoom)| p b , pc → p f , pgZoom c Representation of a brain vessel visualization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>An example of augmenting an existing visualization system (top) to store visualization session information using the model. The interface is a Border Gate Protocol (BGP) visualization tool; the bottom figure displays a spreadsheet view of an exploration process originally captured by the tool. Dates are shown across the columns and the types of origin AS change displayed (indicated by color) are shown down the rows.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was supported by the National Science Foundation, and the Lawrence Livermore National Laboratory. The reviewers for this paper also provided insightful input. Finally, we would like to thank the members of the UC Davis Visualization and Graphics Research Group for their input and assistance, especially Soon Tee Teoh for the use of the Border Gate Protocol visualization tool.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An extended data-flow architecture for data analysis and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Abram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lloyd</forename><forename type="middle">A</forename><surname>Treinish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="17" to="21" />
			<date type="published" when="1995-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Semiology of Graphics: Diagrams, Networks, Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jacques</forename><surname>Bertin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1967" />
			<publisher>University of Wisconsin Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Extensible Markup Language (XML) 1.0 (Second Edition)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Bray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean</forename><surname>Paoli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">M</forename><surname>Sperberg-Mcqueen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eve</forename><surname>Maler</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/REC-xml" />
	</analytic>
	<monogr>
		<title level="m">World Wide Web Consortium</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">GRASPARC-a problem solving environment integrating computation and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ken</forename><surname>Brodlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Poon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Helen</forename><surname>Wright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lesly</forename><surname>Brankin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Banecki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Gay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="102" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Readings in Information Visualization: Using Vision to Think</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Stuart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jock</forename><forename type="middle">D</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shneiderman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Morgan Kaufmann Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An operator interaction framework for visualization systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><forename type="middle">H</forename><surname>Chi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">T</forename><surname>Riedl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">XSL Transformations (XSLT) Version 1.0. Technical report, World Wide Web Consortium</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Clark</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/xslt" />
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualization idioms: A conceptual model for scientific visualization systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Robert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">A</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mcnabb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Scientific Computing</title>
		<editor>G.M. Nielson and B. Shriver</editor>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A lattice model for data display</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">L</forename><surname>Hibbard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><forename type="middle">R</forename><surname>Dyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><forename type="middle">E</forename><surname>Paul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="310" to="317" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Extracting usability information from user interface events</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>David</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">F</forename><surname>Hilbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Redmiles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="384" to="421" />
			<date type="published" when="2000-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Visualization exploration and encapsulation via a spreadsheet-like interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Jankun-Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="275" to="287" />
			<date type="published" when="2001-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Focus+context display of the visualization exploration process</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Jankun-Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<pubPlace>Davis</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department, University of California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Resource Description Framework (RDF) Model and Syntax Specification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ora</forename><surname>Lassila</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ralph</forename><forename type="middle">R</forename><surname>Swick</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/REC-rdf-syntax" />
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>World Wide Web Consortium</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An application architecture for large data visualization: A case study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amy</forename><surname>Henderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Ahrens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2001 Symposium on Parallel and Large-Data Visualization and Graphics</title>
		<meeting>of the 2001 Symposium on Parallel and Large-Data Visualization and Graphics</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="125" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">A Systems and Process Model for Data Exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
		<respStmt>
			<orgName>U. of Massachuesetts Lowell</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">An architecture for retaining and analyzing visual explorations of databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Peter Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><forename type="middle">G</forename><surname>Grinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization &apos;95</title>
		<meeting>of IEEE Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="101" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Image graphs -a novel approach to visual data exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization &apos;99</title>
		<meeting>of IEEE Visualization &apos;99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Automating the design of graphical presentations of relational information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jock</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="110" to="141" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Are we there yet? Exploring with dynamic visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Penny</forename><surname>Rheingans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="6" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A characterization of the scientific data analysis process</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rebecca</forename><forename type="middle">R</forename><surname>Springmeyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meera</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><forename type="middle">L</forename><surname>Blattner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization &apos;92</title>
		<meeting>of IEEE Visualization &apos;92</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="235" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Case study: Interactive visualization for internet security</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Soon Tee Teoh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felix</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization &apos;02</title>
		<meeting>of IEEE Visualization &apos;02</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The Application Visualization System: a computational environment for scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Craig</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><forename type="middle">A</forename><surname>Faulhaber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jr</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Kamins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Vroom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Gurwitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andries</forename><surname>Van Dam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="30" to="42" />
			<date type="published" when="1989-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Cantata: Visual programming environment for the Khoros system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Danielle</forename><surname>Argiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Kubica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="22" to="24" />
			<date type="published" when="1995-05" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
