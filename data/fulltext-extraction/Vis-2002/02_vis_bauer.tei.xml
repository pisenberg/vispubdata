<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Case Study in Selective Visualization of Unsteady 3D Flow</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<title level="a" type="main">A Case Study in Selective Visualization of Unsteady 3D Flow</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.8 [Computer Graphics]: Applications</term>
					<term>I.4.7 [Image Processing and Computer Vision]: Feature Measurement -Feature Representation</term>
					<term>J.2 [Applications]: Physical Sciences and Engineering -Engineering Flow Visualization, Feature Extraction, Particle Tracing</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this case study, we explore techniques for the purpose of visualizing isolated flow structures in time-dependent data. Our primary industrial application is the visualization of the vortex rope, a rotating helical structure which builds up in the draft tube of a water turbine. The vortex rope can be characterized by high values of normalized helicity, which is a scalar field derived from the given CFD velocity data. In two related applications, the goal is to visualize the cavitation regions near the runner blades of a Kaplan turbine and a water pump, respectively. Again, the flow structure of interest can be defined by a scalar field, namely by low pressure values. We propose a particle seeding scheme based on quasi-random numbers, which minimizes visual artifacts such as clusters or patterns. By constraining the visualization to a region of interest, occlusion problems are reduced and storage efficiency is gained.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Displaying moving particles is a standard technique for the visualization of time-dependent 3D vector fields. Nevertheless, for that type of data, it is hard to find better techniques. Moving streamlines are not physically meaningful, while path lines should be reserved to static visualizations. Streak lines are an adequate technique, but by discretizing them into a series of particles, some additional information can be conveyed. Particles also have the advantage of a small glyph size which minimizes occlusion in projected views. And finally, particle visualizations compare naturally to some types of flow experiments. The hydraulic CFD simulations which led to this case study are often accompanied by flow experiments where the flow is measured and visually examined in scaled models. In such experiments, cavitation bubbles can be observed (even in rotating machine parts if viewed under stroboscopic lighting).</p><p>While steady flows can be explored by scanning through the data domain, e.g. by taking slices or by moving streamline seed points, this is not an option for time-dependent data. But then, visualization has to be sparse, i.e. it can not simultaneously depict the flow everywhere in the data domain. If a certain level of detail is expected, visualization has to be constrained to a region, and as a consequence, data must be explored repeatedly. In this case study, we use the approach of defining flow regions in a data-guided way.</p><p>Computer Graphics Lab, Dept. of Computer Science, ETH Zürich, CH-8092 Zürich, Switzerland. VA Tech Hydro, Hardstr.319, CH-8023 Zürich, Switzerland. {bauer,peikert,sato}@inf.ethz.ch Mirjam.Sick@vatech-hydro.ch Flow regions of our interest are vortices and cavitation regions, but other types of flow regions, such as recirculations, could be treated similarly.</p><p>We experienced that typical regions of interest consist of a few percents of all grid cells. Hence, it makes sense to generate and trace particles only where needed. A common practice is to release particles from locations evenly spaced along lines or circles and at fixed time intervals. One can then observe how these geometric shapes are deformed over time. A different approach, which we pursued, is to randomly spread particles, aiming at a uniform density while avoiding patterns and clustering.</p><p>Instead of tracing discrete particles, 3D textures could be used to visualize the flow field, e.g. by extending the Lagrangian-Eulerian Advection algorithm proposed by Jobard et al. <ref type="bibr" target="#b4">[5]</ref> from two to three spatial dimensions. However, we did not choose this approach because hardware support for 3D texture is not generally available. Also, for time-dependent 3D textures, texture loading time becomes an issue.</p><p>The goal of evenly spaced glyphs has led to the streamline placement techniques <ref type="bibr" target="#b7">[8]</ref> which, in principle, could be extended to four dimensions for time-dependent flow. Our approach is instead to exploit the conservation of mass property of physical flow fields. For incompressible flows, conservation of mass means zero divergence, therefore the particle density remains constant if it was initially constant. For compressible flows (which we are not concerned with in this case study), an initial particle distribution can be made to reflect the density of the medium.</p><p>A common problem of particle-based flow visualization is the need for injecting new particles during the time evolution. This is necessary to maintain a uniform particle density. Texture-based methods accomplish this by continually adding noise. Noise is smeared enough by the large filter kernels typically used in LIC to avoid visible artifacts. But this solution is obviously not applicable to discrete particles. Instead, our strategy is to extend the region of interest by a few layers of "buffer" cells where particles are kept invisible. When particles enter or leave the region of interest, visibility is changed smoothly. In the buffer cells, the correct particle density can now be maintained by adding and deleting invisible particles. And because of mass conservation, this carries over to the visible particles, too.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">FLOW REGIONS OF INTEREST</head><p>The industrial case under investigation is the flow field in the draft tube of a water turbine. The flow in a water turbine passes through the vaneless spiral casing and enters the stationary stay and guide vanes which accelerate the flow. The flow decelerates through the runner and enters the draft tube, which is the last component of a water turbine. A draft tube generally is a diffuser with or without a bend whose objective is to convert the available kinetic energy into pressure rise. Depending on the operating conditions, the swirl of the flow at runner exit (and thereby at draft tube inlet) is strong enough to cause a flow instability, which is called the draft tube vortex. The typical shape of a draft tube vortex is that of a rotating helix. Due to the low pressure in the center of the vortex, the flow is often cavitating for a wide range of operating conditions, so that on the test rig, the vortex rope is naturally visualized by means of the cavitation bubbles, see <ref type="figure" target="#fig_0">Fig. 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dirk Bauer</head><p>Ronald The part-load vortex rope is of technical relevance for two reasons. Firstly, it causes vibrations within the runner and on the hub and the shaft. Secondly, it leads to an unstable throughflow and unstable power output. The shaft vibrations caused by the draft tube vortex can cause severe damage of the machine. Therefore in some plants the operating range of the machine is restricted in order to avoid a strong vortex and the resulting damage.</p><p>The design of the runner blades and the hydraulic contour of the draft tube determine the onset and the strength of the draft tube vortex. It is therefore important to understand the details of the vortex rope flow in order to define physically well founded design rules for a runner design which is safe with respect to the draft tube vortex.</p><p>The visualization methods demonstrated in this paper are based on instationary CFD simulations of the draft tube vortex in a pump turbine. The 3D Navier Stokes equations were solved by using the commercial code CFX-TASCflow <ref type="bibr" target="#b8">[9]</ref> with a circumferentially averaged inlet velocity profile resulting from a CFD simulation of the runner flow.</p><p>We will generally assume that regions of interest (ROI) can be specified by a scalar field. In many cases, such a scalar exists among the CFD data channels or can easily be derived from them. For example, cavitation regions are characterized by pressure values falling below the vapor pressure. And vortices can be characterized by high values of either helicity or normalized helicity.</p><p>When trying to define a region by a threshold of a scalar field, the result is often more than one connected component. It can then be necessary to perform a selection among these components.</p><p>In the case of a vortex, there is an alternative way to define a ROI based on an extracted vortex core. In an earlier paper <ref type="bibr" target="#b1">[2]</ref> we described how to track a vortex core in time-dependent data. The idea is now to radially extend the core line as long as the "vortex strength" is above a given threshold. We define vortex strength as the absolute value of the imaginary part of the complex eigenvalues of the velocity gradient tensor. Similar vortex tubes, but based on pressure values, have been computed by Banks and Singer <ref type="bibr" target="#b0">[1]</ref>. <ref type="figure" target="#fig_1">Fig. 2</ref> shows the principle of our algorithm, which consists of the following steps: <ref type="figure" target="#fig_3">Fig. 4</ref> shows a vortex tube resulting from this algorithm, as well as the vortex core line and some streamlines indicating the vortical structure. With a slight modification, this algorithm produces a scalar field containing the vortex strength for nodes inside the vortex tube and zero values outside the vortex tube.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE VISUALIZATION TECHNIQUE</head><p>For the purpose of selectively visualizing the flow in regions of interest, we modify the standard particle-based technique in a way to achieve these goals:</p><p>• Particles are visible exactly in the ROI with a smooth transition (fading) if they enter or leave the ROI.</p><p>• Particle density represents the density of the medium during the whole simulation. For incompressible flow, this means particle density is initially constant and remains constant.</p><p>• Particles are distributed in a way that no regular patterns or other artifacts occur.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Visibility</head><p>In our application, the ROI is defined by high values of a scalar field s(x), which is either directly given in the datasets (e.g. the negative pressure) or has previously been derived from them (e.g. the helicity, which can be computed from the velocity). Particles    become invisible if, at their location, the field s(x) drops below a threshold s 0 . Above a higher threshold s 1 , they become visible. Between the two thresholds, a smooth transition is made by using either semitransparency or reduced size glyphs.</p><p>Invisible particles can be generally treated as nonexistent by the implementation. However, in the vicinity of the ROI it is good to trace invisible particles, too (see Section 3.3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Particle seeding</head><p>The goal of the particle seeding is to generate a uniform distribution while avoiding clusters and regular patterns. In multi-dimensional spaces, quasi-random sequences give better results than pseudo-random sequences or jittered regular samples. The latter two methods lead to clustering <ref type="figure" target="#fig_4">(Fig. 5a, 5b)</ref> or patterns <ref type="figure" target="#fig_4">(Fig. 5c</ref>).</p><p>Sobol' quasi-random sequences were proposed <ref type="bibr" target="#b6">[7]</ref> and have recently been used <ref type="bibr" target="#b5">[6]</ref> for LIC methods. An advantage of the Sobol' points is that they can be tiled with no visual seams, as is shown in <ref type="figure" target="#fig_4">Fig. 5d</ref> and 5e. This allows us to tile the physical space and to create quasi-random points only for a single tile, which is repeatedly used wherever it covers the ROI (extended by a few layers of grid cells, see next section).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Particle tracing</head><p>Initially and after each time step, the grid cells are classified as "inner cells", "buffer cells" or "outer cells". Inner cells are those where at least one corner satisfies s(x) &gt; s 0 , the partial visibility criterion. Buffer cells are the cells which are in a topological k-neighborhood of inner cells. Additionally, all inner cells within the k-neighborhood of an inflow boundary are reset to buffer cells. The remaining cells are classified as outer cells (see <ref type="figure" target="#fig_5">Fig. 6</ref>).</p><p>The particles are initially distributed over inner and buffer cells. After a few time steps, particles are advected and now cover a different area. As long as this area completely covers all inner cells, everything is fine. But this condition can fail, also because the set of inner cells is dynamic.</p><p>When this situation occurs, all particles in the buffer cells are cleared and new particles are generated in the buffer cells. Since these particles are invisible by definition of the buffer cells, this replacement has no visual impact. Nevertheless, it is important that old and new particles join seamlessly at the border between buffer and inner cells, since the particles may later become visible. By using Sobol' quasi-random points, we can meet this requirement sufficiently for the purpose of visualization. And by making the ring of buffer cells wide enough, we don't have to replace particles too often.</p><p>Based on these considerations, we designed a particle tracer of the following structure:</p><p>Replacing particles in the buffer cells can be done at fixed time intervals, although a safer method would be to release marked particles at the outer boundary of the buffer cells. A marked particle entering an inner cell would trigger the replacement.</p><p>Instead of generating a new set of quasi-random points for each replacement operation, we experimented with a cheaper solution, namely to just randomly offset the old points. This corresponds simply to a translation of all tiles, so there is no need to actually modify point coordinates.</p><p>Integrating particle paths in unstructured grids requires frequent incremental point searches <ref type="bibr" target="#b2">[3]</ref>. A global point search is only necessary for newly generated particles, mostly because there is no spatial coherence in quasi-random sequences. To optimize the global point search, we organize particles in a regular grid which is a refinement of the tiling grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Conservation of mass</head><p>When velocity (and density in the case of a compressible flow) is interpolated from the node data, the resulting fields are expected to be mass-conservative. However, this is not the case if the standard techniques are used, namely trilinear interpolation in hexahedral cells and linear interpolation in tetrahedral cells. By comparing influx and outflux of each cell, we observed that typically 1-5% of the mass is "lost" numerically due to trilinear interpolation of node data. This loss can be reduced (to about 0.5-2%) if the dual grid is regarded (dual cells are the control volumes of the finite volume method used by solvers such as CFX-TASCflow).  currentTime := currentTime + timeStep for each particle in particle list Get current velocity of the particle. Calculate new position of the particle.</p><p>Find new cell and local coordinates of the particle (delete the particle if it has left the grid). next particle if drawing interval has expired Draw the particles. end if end while <ref type="figure">Figure 7</ref>: Pseudo-code of the particle tracer In principle, mass-conservative interpolation could be used <ref type="bibr" target="#b3">[4]</ref>. However, this would require the computation of two global stream functions for every simulated or interpolated time step.</p><p>We decided to use special interpolation only in cells next to solid (no-slip) boundaries, where most numerical mass loss occurs. In these boundary cells, the main effect of trilinear interpolation is that particles tend to stick at the boundary, eventually compromising the postulated uniform distribution. To prevent this, we don't allow particles to get closer to a solid wall than a certain fraction of a cell. This is done by clamping the appropriate local coordinate after each integration step, which is common practice <ref type="bibr" target="#b2">[3]</ref> and can be justified by the assumption of particles with spatial extent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Particle rendering</head><p>Besides the obvious techniques of rendering spheres <ref type="figure" target="#fig_6">(Fig. 8)</ref> or wide points, a good alternative are streamlets, i.e. short pieces of the local path line <ref type="figure" target="#fig_7">(Fig. 9)</ref>. The streamlets can be rendered as alpha-textured quadrilateral strips (ribbons) made up of billboard polygons. Billboard polygons are directed toward the viewer and give the illusion of 3D rather than flat objects. Moreover, they can be lit with diffuse and specular reflection more effectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSION</head><p>We proposed a modified particle tracer for selectively visualizing time-dependent 3D vector fields. Unlike previous representatives of its kind, our particle tracer is focused on special regions of interest in the flow, which can reduce the amount of data to be processed by one order of magnitude. By using quasi-random sequences when seeding new particles, a uniform particle density is maintained over time, and regular patterns and clusters are avoided. Due to the use of buffer cells, particles fade in and out smoothly, which is favorable for animations. We applied our method to various datasets from our industry partners, visualizing the vortex rope in the draft tube of a Francis turbine, and cavitation on the suction side of various turbine and pump runner blades. The concept of selectively visualizing relevant flow structures has proven to give additional insight into their complicated dynamic behavior.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Photograph of a cavitating vortex rope.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Principle of the vortex hull algorithm. for each point on the vortex core line Project the velocity field onto a plane perpendicular to the vortex core line. Construct a fan of rays which spreads over the plane. for each ray Generate points on the ray at small intervals. for each point on the ray Evaluate the vortex strength. if vortex strength &lt; threshold break next point on the ray next ray Draw a star-shaped polygon connecting the last points. next point on the vortex core line.Connect star-shaped polygons to a prismatic tube around the vortex core line.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Pseudo-code of the vortex hull algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Vortex core and computed vortex extent.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>(a): Pseudo-random samples, (b),(c): jittered regular samples, (d): Sobol' points, (e): four tiles of Sobol' points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Classification of cells, particle visibility, and tiles of quasi-random points (2D representation)Initialize a particle list. currentTime := startTime while currentTime &lt; endTime Get current velocity field and scalar field. if update interval has expired Update the classification for each cell (according to the scalar values of its nodes). Delete all particles in OUTER and BUFFER cells. Generate new particles in BUFFER cells. end if</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Cavitation bubbles near Kaplan runner blades (ROI specified by low pressure).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Vortex rope in Francis draft tube (ROI specified by high normalized helicity).</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>This work has been supported by the Swiss Commission for Technology and Innovation, by VA Tech Hydro, Zürich, and by Sulzer Markets and Technology, Winterthur.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Vortex Tubes in Turbulent Flows: Identification, representation, reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;94</title>
		<meeting>IEEE Visualization &apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<title level="m">Vortex Tracking in Scale-Space, Joint EUROGRAPHICS -IEEE TCVG Symposium on Visualization</title>
		<editor>D. Ebert, P. Brunet, I. Navazo</editor>
		<meeting><address><addrLine>Barcelona</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Buning</surname></persName>
		</author>
		<title level="m">Computer Graphics and Flow Visualization in Computational Fluid Dynamics, von Karman Institute for Fluid Dynamics Lecture Series</title>
		<imprint>
			<date type="published" when="1989-09-07" />
		</imprint>
	</monogr>
	<note>Numerical Algorithms in CFD Post-processing</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A mass conservative flow field visualization method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shi</surname></persName>
		</author>
		<idno>0097-8493</idno>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="749" to="756" />
			<date type="published" when="1997-11" />
			<publisher>Pergamon Press / Elsevier Science</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Lagrangian-Eulerian advection for unsteady flow visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jobard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Erlebacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Y</forename><surname>Hussaini</surname></persName>
		</author>
		<idno>ISBN 0-7803- 7200-x</idno>
		<imprint>
			<date type="published" when="2001-10" />
			<publisher>IEEE Visualization</publisher>
			<biblScope unit="page" from="53" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualizing Unsteady Flows by Adaptive Streaklines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sanna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Montrucchio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Arina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. WSCG 2000, The 8-th International Conference in Central Europe on Computer Graphics, Visualization and Interactive Digital Media&apos;2000</title>
		<meeting>WSCG 2000, The 8-th International Conference in Central Europe on Computer Graphics, Visualization and Interactive Digital Media&apos;2000<address><addrLine>Plzen, Czech Republic</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-02" />
			<biblScope unit="page" from="84" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fast and Resolution Independent Line Integral Convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings &apos;95, ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="249" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Image-Guided Streamline Placement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings &apos;96</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="453" to="460" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Theory documentation, Version 2.11.1, AEA Technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cfx-Tascflow</surname></persName>
		</author>
		<ptr target="http://www.software.aeat.com/cfx/" />
	</analytic>
	<monogr>
		<title level="m">Turbulence Closure Models</title>
		<meeting><address><addrLine>Harwell, U.K.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
