<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Visualization of Complex Plant Ecosystems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><surname>Deussen</surname></persName>
							<email>deussen@inf.tu-dresden.de</email>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Computer Science</orgName>
								<orgName type="institution">Dresden University of Technology</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carsten</forename><surname>Colditz</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Computer Science</orgName>
								<orgName type="institution">Dresden University of Technology</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Stamminger</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">REVES/INRIA</orgName>
								<orgName type="institution">Sophia Antipolis</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">Bauhaus-Universit√§t Weimar</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><surname>Drettakis</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">REVES/INRIA</orgName>
								<orgName type="institution">Sophia Antipolis</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<address>
									<addrLine>Mommsenstr. 13</addrLine>
									<postCode>D-01062</postCode>
									<settlement>Dresden</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Visualization of Complex Plant Ecosystems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Picture/Image Generation]: Display algorithms-[I.3.7]: Three-Dimensional Graphics and Realism-Animation Synthetic Plants</term>
					<term>Ecosystems</term>
					<term>Point-based rendering</term>
					<term>Level-of-detail Algorithms</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a method for interactive rendering of large outdoor scenes. Complex polygonal plant models and whole plant populations are represented by relatively small sets of point and line primitives. This enables us to show landscapes faithfully using only a limited percentage of primitives. In addition, a hierarchical data structure allows us to smoothly reduce the geometrical representation to any desired number of primitives. The scene is hierarchically divided into local portions of geometry to achieve large reduction factors for distant regions. Additionally, the data reduction is adapted to the visual importance of geometric objects. This allows us to maintain the visual fidelity of the representation while reducing most of the geometry drastically. With our system, we are able to interactively render very complex landscapes with good visual quality.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Interactive rendering of large outdoor scenes is an important task for applications such as landscaping, architecture or computer games as well as virtual reality and simulation. The display of rich natural vegetation enhances comprehension of spatial relations in a planned landscape, to judge the visual impact of new buildings or to imagine the shape of a landscape in the future.</p><p>In recent years, a number of plant generation systems have been developed that allow the user to generate the geometry of single plants with high quality. Various aspects in designing plant shapes, growth of plants and their interaction have been investigated by Prusinkiewicz et al. <ref type="bibr" target="#b15">[15]</ref> based on L-Systems. Other approaches use parameterised algorithms <ref type="bibr" target="#b3">[4]</ref> or a set of components like the xfrog system <ref type="bibr" target="#b10">[10]</ref>.</p><p>Based on these models, it is possible to generate large landscapes with many different plants. An open system architecture for such a system as well as algorithms for distributing and rendering complex scenes was presented by Deussen et al. <ref type="bibr" target="#b5">[5]</ref>, while commercial products like Bryce (http://www.metacreations.com), Ani-</p><p>matek World Builder (http://www.digi-elements.com) use plants to populate whole planets. The limiting factor for interactive rendering of scenes is the huge amount of geometry that has to be processed for each frame.</p><p>Vegetation geometry differs from other objects in a significant manner. While man-made objects such as houses, streets or cars are usually represented by a limited set of relatively large connected surfaces, vegetation usually consists of many small and isolated surfaces. Thus, most traditional level-of-detail schemes cannot be applied effectively to such scenes.</p><p>On the other hand, in recent years new rendering techniques have been proposed that allow efficient rendering of complex objects using the most simple primitives one can imagine: points. These methods seem to be appropriate for plant scenes because collections of discrete points can convey the shape of distant plants naturally.</p><p>The importance of interactive yet realistic rendering of these very complex ecosystem models cannot be overstated. For landscape design, or any kind of architectural or public works assessment, interactive viewing opens enormous potential for interactive experimentation and trial-and-error evaluation, which has previously been very hard to achieve for models of this scale and complexity. Such an interactive renderer is an invaluable tool in all architecture/design applications, as well as for virtual reality or video games.</p><p>In this paper, we present a system for interactively rendering lage outdoor scenes. Our contributions are the introduction of an appropriate method for pre-processing the model data, an efficient rendering algorithm using a point-and line-based level-of-detail approach and optimization of the scene using hierarchies.</p><p>For pre-processing we introduce a combined polygon/point and line representation; in contrast to previous methods we use lines in addition to points. Long and thin parts of plants such as leaves or branches are represented by lines, while more compact objects are approximated by points. This enables us to better convey the shape for both object categories in distant views.</p><p>Using our representation, the number of displayed vertices per second can be minimized keeping image quality high. Additionally, a new method of importance reduction allows us to represent visual important parts of a scene in a higher qualilty than others. Doing so, we can drastically reduce unimportant parts of the scene while keeping the visual impression stable. Although we focus on representing plants, the method can be combined with other levelof-detail approaches for different kinds of geometry to form a full purpose system for interactive display of complex scenes.</p><p>For rendering, we introduce a novel approach for blending through representations, which is both efficient and results in high quality visual results. Blending is done in a way that more and more polygons of a plant are represented by points and lines. Level-of-detail is obtained by reducing the displayed number of points and lines in correspondence to the viewing distance. Both polygonal data, points, as well as line approximations are stored in vertex arrays that allow us to efficiently display any desired portion of data. We optimize the performance of our system using two types of hierarchies: Single plants such as trees that have high geometric complexity are spatially subdivided using an octree data structure. On the other hand, collections of many small plants are grouped locally and each group is entirely represented by a point and line representation. This enables us to display scenes of nearly arbitrary size efficiently.</p><p>After discussing related work we proceed by giving a system overview and describe how the data has to be pre-processed. The two forms of hierarchy are then introduced and rendering issues are presented. We conclude with results and some ideas of further work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Previous approaches that are related to our work can be divided into two domains: level-of-detail representations and control for complex data and point-based rendering methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Level-of-detail (LOD) control:</head><p>Among the many existing LOD methods one can distinguish between static methods that store an object by a small set of discrete representations that are blended into each other and dynamic methods that allow finer control of the geometry generated. In combination with outdoor scenes, the most simple way to form a discrete LOD is to use billboards that contain images of single plants <ref type="bibr" target="#b0">[1]</ref> and replace the plant geometry for distant views. If the viewpoint changes, no parallax can be seen which makes the scenes flat and unrealistic. Due to its simplicity, this method is currently used in games and VR applications. Improvements are sets of impostors <ref type="bibr" target="#b19">[19]</ref> and sprites with depth <ref type="bibr" target="#b20">[20]</ref> that offer a limited amount of parallax.</p><p>Max et al. <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b11">11]</ref> hierarchically replace parts of trees by precomputed views and is able to smoothly blend between these. Unfortunately, the proposed technique is too inefficient for interactive display. Perbert and Cani <ref type="bibr" target="#b13">[13]</ref> explore an efficient rendering and animation method for meadows based on impostors.</p><p>Dynamic LOD representations for smooth objects were presented by Hoppe et al. <ref type="bibr" target="#b7">[7]</ref>. Objects are represented by a base geometry and a set of vertex split operations that refine the triangle mesh. Methods applied to terrain rendering were presented by Duchaineau et al. <ref type="bibr" target="#b6">[6]</ref> and by Hoppe <ref type="bibr" target="#b8">[8]</ref>. Unfortunately, foliage cannot be processed this way. The discrete structure of the leaves allows edge collapses only to a very limited extend. Nevertheless, Rossignac and Borrel reduced geometry by collapsing nearby vertices regardless of the connection structure <ref type="bibr" target="#b17">[17]</ref>. This can be applied to the foliage but changes the visual appearance drastically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Point rendering:</head><p>The first general idea of using points as display primitives was presented by Levoy and Whitted <ref type="bibr" target="#b9">[9]</ref>. In the same year, Reeves and Blau <ref type="bibr" target="#b16">[16]</ref> rendered complex trees using a set of small disks representing the foliage. Weber and Penn presented a level-of-detail representation of trees using sets of points for the leaves and lines for the tree skeleton <ref type="bibr" target="#b24">[24]</ref>. As mentioned above, we extend this idea to model whole plant populations. Shade et al. <ref type="bibr" target="#b20">[20]</ref> sampled geometric plant models using a modified ray tracing procedure. Based on the resulting point sets they were able to render images from various view points. This works well for distant views but results in holes and a grainy look for close-ups.</p><p>An LOD method based on points is presented by Rusinkiewicz and Levoy <ref type="bibr" target="#b18">[18]</ref>. A hierarchy of point representations allows smooth reduction of the amount of geometry for smooth surfaces. Pfister et al. <ref type="bibr" target="#b14">[14]</ref> present sophisticated rendering methods for point representations. Their method works in software and therefore is too slow for interactive rendering highly complex scenes.</p><p>Cohen et al. <ref type="bibr" target="#b2">[3]</ref> combine a LOD representation for polygonal objects with point rendering using a multi-resolution graph which describes simplification operations that lead to a point representation. By displaying the prefix of this graph, geometry reduction is performed. In this manner, they are able to smoothly blend between geometry and point representations. A similar transition method is presented by Chen and Nguyen <ref type="bibr" target="#b1">[2]</ref>. However, for our highly complex objects an explicit representation of refinement operations seems to be too inefficient. Given a single tree with half a million of leaves (see figure 7(b)) the resulting graph would need a large amount of memory. Instead, we use vertex arrays that store the geometry of plants in an appropriate manner that allows us to reduce geometry by showing only the first part of such an array.</p><p>Stamminger and Drettakis <ref type="bibr" target="#b21">[21]</ref> present a point based method for plants using random sample positions on the surface. Each plant is described by a set of points obtained from these positions. A similar approach is described in <ref type="bibr" target="#b23">[23]</ref>, where a plant is rendered by a random set of points, which is just dense enough not to exhibit holes. As the authors determine the point positions individually for each frame, aliasing is introduced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SYSTEM OVERVIEW</head><p>Plants for our system are generated from surface oriented plant descriptions produced by the plant modellers described previously. In a pre-processing step these models are converted into point and line sets. Both the polygonal description and its point or line approximation are stored in a data file for each plant. <ref type="figure">Figure 1</ref>: System structure, following the outline given in <ref type="bibr" target="#b5">[5]</ref> A separate editor, similar to the one described in <ref type="bibr" target="#b5">[5]</ref>, is used to combine the plants to generate complex scenes. This involves model quantization to reduce the number of different plant geometries. For a single plant population in most cases a set of five to ten different plant models is sufficient, the whole landscape may require several dozens.</p><p>Our scenes are described by a set of plant models and so called eco files that store positions of plants and instancing information. Instances of the plant models are spread over the terrain to form the plant population. Eco files can be used hierarchically, i.e., one eco file may by a combination of reference to other eco files.</p><p>The rendering system reads in eco files and plant geometries. For the entire content of each eco file a point approximation is determined. In distant views only this very sparse point representation is used. When zooming in, all the plants of the eco file are displayed. Visibility culling on the basis of bounding boxes is used to determine the visible plants. The system decides whether a polygonal representation will be used or its approximation as a function of the projected size of a plant. <ref type="figure">Figure 1</ref> displays the system outline.</p><p>In the following, level-of-detail control is done with respect to the vertex count. This count describes the number of vertices that maximally can be processed by the graphics processor per second. In most cases, our scenes consist of many small triangles. The pixel fill rate of the graphics processor does not play a significant role in this case and the performance is thus fully determined by the vertex count.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">PRE-PROCESSING OF MODELS</head><p>During modelling of a plant, each plant is divided into elements that are approximated by points and others that are approximated by lines in distant views. The user decides which parts of a plant model are represented by which primitive. This is only done during modelling the plants in an early stage. If several instances of a plant type with slightly varying geometry are used in a scene, modelling, with its corresponding effort, is only performed once and therefore is negligible. Another attribute that has to be set by the user is the visual importance of the plant parts that is later used for showing visually important plant parts with higher precision than others.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Point Representation</head><p>Point representations are typically used for leaves of a tree, petals etc. By default, for an object of n triangles, 2n points are generated, reflecting the fact that a separate triangle requires about as much time for rendering as three points and therefore an approximation by two points needs less rendering time. The 2n points are distributed randomly over the object, in no particular order, but in a way that equal surfaces receive equal numbers of points. This means that small triangles might not be attributed any points, whereas big triangles can be represented by many. All the random points are stored in a single list. During rendering, only a prefix of this list with length depending on the projected size of the plant is drawn <ref type="bibr" target="#b21">[21]</ref> (see <ref type="figure" target="#fig_1">Fig. 2</ref>). A different sampling technique is applied if all triangles of the object have about the same area. In this case, we generate two sample points on each of the triangles. This corresponds to stratified sampling and leads to more even sampling. Furthermore, the triangles and points are randomly reordered in the same order, so we still know the point-triangle correspondence. This allow us to render part of the object by triangles, and the rest by points. In this manner, we can blend between polygonal and point representations smoothly, largely avoiding popping artefacts, as we will describe later.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Line Representations</head><p>Thin and long structures like twigs or several types of leaves are better represented by a line than by a set of points <ref type="bibr" target="#b24">[24]</ref>. We generate a line set for these object parts already in the modelling phase, when all information about the object structure is available. The line set is also randomly reordered, and stored in a list. In the same manner as for the points, for each view only a prefix of this list is rendered, according to the current viewing distance. We will discuss this issue further in the rendering section. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Importance Reduction</head><p>Best visual results can be achieved if the plants are not uniformly reduced. Visual important parts like petals or other plant elements with special colors should be reduced more slowly than than the rest of the plant. In <ref type="figure" target="#fig_3">Figure 4</ref> an example is shown. The daisies in the meadow are visually important even though their geometry is small in comparison to the rest. If all geometry is reduced uniformly, the reduction is more noticeable, and the perceived quality much worse than if these elements are handled separately.</p><p>Currently, an importance factor is set interactively by the user. In the future this might be automated by color analysis of the geometric primitives: in most cases objects seem to be important if their color is clearly distinguishable from the majority of element colors in a plant. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Memory Requirements</head><p>The additional point and line data roughly doubles the memory requirements for storing our models. This is why we will try to fully automate the entire pre-processing step. In this case the plant models can be stored as procedural plant descriptions in the form of L-Systems or xfrog-files with very low memory needs. The extraction and approximation process then has to be done for each run in a pre-processing step. However, the memory needs for our plant models should are not very high, due to the approximate instancing mechanism in which a complex scene needs about several dozens of different models requiring usually less than a hundred megabytes of memory. For the scenes shown on the accompanying video, the entire geometric data was compact enough to be stored in AGP memory, which increases the rendering throughput by a factor of almost two.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RENDERING PLANT MODELS</head><p>After eco files and plant models are input into the rendering system, the geometry (polygons, points and lines) is stored in vertex arrays. During display, for each part of a plant its representation-triangles or points and lines-and the number of displayed primitives is determined dynamically.</p><p>Before rendering an object, visibility culling is applied. First, the culling is performed on each of the eco files, then on the plant model instances. If eco files are organized in a hierarchy, the culling is also applied hierarchically.</p><p>In the following, we assume that the original plant model consists of n triangles T1, .., Tn with area A in world space. Some of these triangles are approximated by n l lines L1, .., Ln l with overall length l, others are approximated by np points P1, .., Pn p . We now split the set of triangles T1, .., Tn of the model description into two sets, one set TP = T1, .., T k that is approximated by points and the set TL = T k+1 , .., Tn approximated by lines. The set TL has an area A l , the set TP has an area Ap in world space. Clearly we have:</p><formula xml:id="formula_0">A = Ap + A l .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Rendering Points</head><p>In the rendering stage, point and line representations are handled separately: For the point approximation the number of points is calculated that is required to render the current object faithfully, i.e. without holes and with correct coverage. Here each point of the approximation is represented by a small subimage, a so called splat, usually one pixel in diameter.</p><p>The user controls the speed versus quality tradeoff by setting a sample distance parameter d , that defines the average distance between two neighboring point samples on the image plane. A large value of d results in a larger distance and thus fewer samples and vice versa. Consequently, the required point splatting area is A sp = d 2 (in practice, we will use slightly bigger splat areas to avoid holes; see below).</p><p>The number of points that is needed for representing the plant faithfully depends on the surface Ap, as well as its average distance to the virtual camera r. In order to avoid scaling factors, we define the image plane to be at distance one from the camera. The approximate projected area A p of the triangle set TP on the image plane and the required point number p can be calculated by (see also <ref type="bibr" target="#b21">[21]</ref>):</p><formula xml:id="formula_1">A p = 1 2 Ap r 2 p = cp A p A sp np<label>(1)</label></formula><p>In this formula it is assumed that the triangles are double sided, i.e., a leaf is modelled by a single surface and not two separate surfaces for front and back. The factor 1/2 accounts for leaf orientation under the assumption that all leaves are randomly distributed. 1/r 2 corresponds to perspective foreshortening. The splat factor cp allows us to increase the splat size in order to avoid gaps that appear due to the random sampling. Values from 1.2 to 1.5 are usually sufficient. If the number of required points p &gt; np the model part is rendered polygonally, otherwise by its point approximation using p points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Rendering Lines</head><p>For the plant part that is to be approximated by lines the approach is slightly different. Here we have two requirements for the approximation: the projected area needed to represent the object faithfully and the geometric approximation error of the lines. This is due to the fact that two line sets with equal projected area can approximate the object differently.</p><p>Let the line set L1, .., Ln l approximate the triangle set TL with a maximum distance l in world space. In image space the value is compared with the sampling distance. If l /r ‚â• d we render the set by triangles, otherwise -as in the point case -we compute the image area if all lines were drawn. Doing so we need the projected area A l of the polygonal representation of corresponding triangle set T L. This is determined by projecting it similarly to Eq. (1). If l is the length of all lines in world space, the lines will have length l/2r in the image plane, where again 1/2 accounts for the (random) orientation, and 1/r for the perspective foreshortening (1/r instead of 1/r 2 , because we project length and not area!). The image plane area covered by the lines drawn with line width d is thus</p><formula xml:id="formula_2">A sl = l d = ld 2r ,<label>(2)</label></formula><p>We are now able to determine the ratio between projected area of T L and its line approximation q l = A l /A sl . If q l ‚â§ 1 we draw q l n l lines, otherwise the model part is drawn using polygons. Note that this assumes, that all line segments have about the same length, which is the case for the lines generated by our modelling tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Blending Representations</head><p>In the above section we described how and when to switch between a polygonal description and its approximation by points or lines. Depending on the selected sample distance d , this switch in representations may become visible (popping). However, this effect can easily be avoided by not switching between point and triangle representations immediately, but instead continuously replacing more and more triangles by points or vice versa.</p><p>As described above, for certain objects, we determined two random points on each triangle for the point representation. The point list is scrambled in the same way as the triangles, so that the first 2n points always correspond to the first n triangles. The selected level of detail depends on p, the number of requested points (see Eq.</p><p>(1) and also <ref type="figure" target="#fig_5">Fig. 6</ref>). If p is larger than three times the number of triangles k, that form the part of the plant that is to be approximated by points, the full triangle set is rendered. On the other hand, if p &lt; 2k, we render the first p points of the point array. For 2k ‚â§ p &lt; 3k, we blend between both representations by rendering the first p‚àí2k triangles, and the points corresponding to the remaining triangles. Due to the ordering enforced during the pre-process, these points can be rendered efficiently as vertex arrays.</p><p>If we count the number of rendered vertices (number of rendered points plus three times the number of triangles), we see that p vertices are always rendered, but never more than 3k, so the rendering time is roughly linear in the number of pixels covered by the object, and essentially independent of object complexity.</p><p>The blending between polygons and their approximation works particulary well for the isolated surfaces which constitute plants. In <ref type="figure" target="#fig_4">Figure 5</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Implementation Issues</head><p>Image display can be altered by two parameters: the sampling distance d and the splat factor cp in Eq. 1. <ref type="figure" target="#fig_4">Fig. 5(a)</ref>-(c) demonstrates the influence of both parameters. If the sampling distance is increased, elements are converted into points earlier, resulting in fewer, but larger points. If the splat size is enlarged, resolution is decreased but the larger area of the splats allows a stronger reduction.</p><p>A noteworthy side effect of calculating the representations in the described way is that the sampling distance d can be varied dynamically to ensure a desired vertex complexity. This enables animations with nearly constant frame rates.</p><p>Another nice aspect of our rendering method is that due to the fixed size of the display elements a point representation often causes fewer aliasing artefacts than a polygonal representation with very small polygons. In this sense, our point representation causes aliasing due to its discrete structure, but due to the stable display of points in animations the point approximations of plants are visually more stable than their polygonal representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">OPTIMIZATION</head><p>As mentioned above, in our system vegetation is represented by plant models and eco files with instancing information. In order to deal with the huge complexity of nature, we introduced hierarchical data structures in two ways: for the efficient rendering of complex individual plants and for the representation of very large numbers of small plants.</p><p>Since our rendering system is tightly coupled to the modeller, we directly work on its output, and need to get fast visual feedback.</p><p>Resorting the objects, building completely new scene hierarchies, or prefiltering of the point sets is thus not possible. We essentially have to use the structure of the scene as provided by the modeller, and enhance it with lightweight hierarchical information. In the following we describe our solution, which adds hierarchical information even to complex scenes in a few seconds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Representation of Complex Plants</head><p>Eqs. 1 and 2 provide a global mechanism for representing a plant geometry polygonally or by points and lines. This is in contrast to the local schemes presented in <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b1">2]</ref>. The advantage of the global decision is that it is very efficient. Nonetheless, this approach has a drawback for large and complex plant models: If the viewer is close to a single leaf of a complex tree, due to Eq. (1) all the leaves are displayed polygonally because of the large projected size of the nearby leaves. This is not optimal for the distant leaves of the same plant that might be better represented by points or lines.</p><p>To reduce this effect, large and complex objects are spatially subdivided by an octree of small depth. All the triangles in a cell are represented by a polygon set and a point and line set. If the camera comes closer, the content of nearby cells is shown polygonally while distant cells can be approximated. The maple in <ref type="figure" target="#fig_7">Figure 7</ref>(b) is a typical example of a tree that benefits from such a structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Grouping of Plants</head><p>Rendering large scenes requires the storage and display of millions of plants. In this case, the iteration over all plants tends to be the limiting factor even if each plant is displayed by only a single point or line.</p><p>To deal with plant models of such size, vast plant populations are stored in a set of quadratic tiles that fit together. This results in a local grouping of plants. If a single tile has too many instances, it is further subdivided into sub-tiles, until a given number of instances per tile is achieved.</p><p>Each tile is represented by an eco file. For each eco file a rough point representation for the geometry of the entire tile is computed by randomly collecting points from the geometry approximations of the plant instances. Additionally, eco files can be organized hierarchically i.e., an eco file contains several eco files with positional information. If this is the case, the rough point approximations of the children are merged to form a point approximation of the overall content of the eco file. Doing so, we are able to display large areas.</p><p>In contrast to a quad-tree data structure this model-oriented spatial data structure gives us more freedom to organize different plant populations by several eco files that, for instance, obtain different importance parameters. This is why we prefer this data organization. Nevertheless, it is relatively easy to use a quad-tree data structure for the same purpose.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Caching</head><p>For performance reasons it is very important to load as much data as possible into memory which is quickly accessible by the graphics processor. Free AGP memory is usually quite limited, e.g., about 18MB on our GeForce3. Therefore, we determine how often a plant model is used in the current scene. The geometric data of frequently used models is primarily loaded into AGP memory. The previously described instancing scheme that limits the number of different models in our scenes helps in this respect by minimizing the amount of geometry needed. We are thus able to achieve a vertex rate of about eleven million vertices per second for rendering our scenes on a GeForce3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Shadow Computation</head><p>Shadows are very important for correct light interaction in outdoor scenes. In combination with our interactive system we implemented two shadow map mechanisms. The first is to obtain a standard shadow map in a pre-processing step. This can be used efficiently during rendering but does not allow any dynamic objects and results in pixelisation artifacts for the large scenes we want to show.</p><p>The second possibility is to use the perspective shadow map proposed by Stamminger and Drettakis recently <ref type="bibr" target="#b22">[22]</ref>. In this case, the map is obtained for each image in a way that the pixel resolution is concentrated to areas where it is needed. This is done by computing the map after the perspective projection of the scene. The approach allows us to use a relatively small map without visible artefacts. On the other hand, the map has to be obtained for each frame, which reduces performance. When computing a conventional high resolution shadow map the scene has to be used without any level-of-detail approximation -a procedure that might last for some seconds-the perspective shadow map can be generated in level-of-detail mode seen from the camera. The frame rate is thus about 50% of the frame rate without shadow computation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS AND FUTURE WORK</head><p>We have applied the method to a number of plant models and eco systems. With modern graphics hardware based on PC's -we used a 1,2 GHz Pentium with NVidia Geforce3 graphics processor-over eleven million vertices per second can be drawn. The vertex rate is enough for interactively displaying a number of fairly complex plant scenes as can be seen in the accompanying video.</p><p>In <ref type="figure" target="#fig_7">Figure 7</ref>(a) an outdoor scene is shown, that consists of over 120 million polygons. The original scene generated by Deussen et al.</p><p>[5] is a part of what we use in our system. Their conventional renderer needed about 75 minutes for image generation of 30 million triangles computing 9 samples per pixel. In our system we achieve eight to ten frames per second for the much larger scene albeit without anti-aliasing. <ref type="figure" target="#fig_7">Figure 7</ref>(b) shows another scene with a large tree and 13 thousand sunflowers, 70 million triangles in total. This scene is displayed typically at three to four frames per second. The relatively low performance stems from the models that allow no strict reduction without visual artefacts. The line-approximated scene of <ref type="figure" target="#fig_2">Figure 3</ref> consists of 12 million triangles and is typically displayed with five to ten frames. In <ref type="table" target="#tab_0">Table 1</ref> some values are given.</p><p>Future work will include the automatic texture synthesis for distant eco files and a simple approach for simulating wind. Using the ingredients described, a variety of users from fields like such architecture, landscaping, simulators, and game design can use scenes  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>IEEE</head><label></label><figDesc>Visualization 2002 Oct. 27 -Nov. 1, 2002, Boston, MA, USA 0-7803-7498-3/02/$17.00 ¬© 2002 IEEE</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Point representation of a pine. Polygonal model and representation by 13,000, 6,500, 3,250, and 1,625 points. Low sampling density has been selected to visualize the point models.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Representing a small palm by lines. Upper row: polygonal model and representation with 106 lines. Lower row: 1,500 plants distributed on a plane, original scene size is 12M triangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Importance reduction: a) uniform reduction; b) importance reduction, the visually important daisies are represented polygonally.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Left column: Influence of sampling distance d and splat factor cp: a) Sampling distance of about one pixel. Plants in the front are drawn by polygons, those in the back by points. b) With a larger sampling distance, more plants are rendered by points. An insufficient splat factor leads to holes in the rendering. c) Same sample distance as in b), but a larger splat factor leads to bigger splats, such that holes are reduced. Right column: Mixed representation of plants. d) a tree rendered by triangles, e) a mix of triangles and points, f) points only.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Rendering a plant in mixed polygon/line/point representations</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>(d)-(f) the representation change is presented. While subfigure (d) shows the polygonal model, in (e) a mixed representation is given and in (f) a point approximation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>a) Outdoor scene, rendered with typically 8-10 Hz, original model size: 120 million triangles, image: 795x700 ; b) sunflower field, rendered with 3-4 Hz average, original model size: 70 million triangles, image: 729x536</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Complexity of different scenes and count of elements in average during interactive rendering. Typical frame rates; if camera is very close smaller rates can result.</figDesc><table><row><cell></cell><cell>Size</cell><cell>LOD</cell><cell>LOD</cell><cell>LOD</cell><cell>Frame</cell></row><row><cell cols="5">Model (triang) Triang. Lines Points</cell><cell>rate</cell></row><row><cell></cell><cell></cell><cell>(av.)</cell><cell>(av.)</cell><cell>(av.)</cell><cell>(av.)</cell></row><row><cell>640 trees</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>as in Fig. 2</cell><cell>10M</cell><cell>500K</cell><cell cols="2">100K 400K</cell><cell>9-16 Hz</cell></row><row><cell>Fig. 3</cell><cell>12M</cell><cell>560K</cell><cell>40K</cell><cell>0</cell><cell>12-20 Hz</cell></row><row><cell>Fig. 7(a)</cell><cell>120M</cell><cell>460K</cell><cell cols="2">400K 300K</cell><cell>8-10 Hz</cell></row><row><cell>Fig. 7(b)</cell><cell>70M</cell><cell>450K</cell><cell cols="2">220K 400K</cell><cell>3-4 Hz</cell></row><row><cell cols="4">with rich vegetation for a real virtual reality.</cell><cell></cell><cell></cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">ACKNOWLEDGEMENTS</head><p>Marc Stamminger has been supported by a Marie-Curie postdoctoral fellowship while doing this work.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Iris performer programmer&apos;s guide</title>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Pop: A hybrid point and polygon rendering system for large data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Nguyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Hybrid simplification: Combining multi-resolution polygon and point rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Aliaga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Plant models faithful to botanical structure and development</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>De Reffye</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Edelin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Francon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jaeger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Puech</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;88 Proceedings)</title>
		<editor>J. Dill</editor>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1988-08" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="151" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Realistic modeling and rendering of plant ecosystems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pharr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lintermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mƒõch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Prusinkiewicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 98 Conference Proceedings</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">ROAMing terrain: Real-time optimally adapting meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sigeti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Aldrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mineev-Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 96</title>
		<editor>Holly Rushmeier</editor>
		<meeting>SIGGRAPH 96</meeting>
		<imprint>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">View-dependent refinement of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 97 Conference Proceedings</title>
		<editor>Turner Whitted</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="189" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">The use of points as display primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Whitted</surname></persName>
		</author>
		<idno>TR 85-022</idno>
		<imprint>
			<date type="published" when="1985" />
		</imprint>
		<respStmt>
			<orgName>Univ. of North Carolina at Chapel Hill</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Interactive modeling of plants</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lintermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="56" to="65" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Hierarchical imagebased rendering using texture mapping hardware. Eurographics Rendering Workshop</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Keating</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-06" />
			<biblScope unit="page" from="57" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Rendering trees from precomputed Z-buffer views</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ohsaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Rendering Workshop</title>
		<imprint>
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Animating prairies in real-time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Perbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Symposion on interacive 3D Graphics</title>
		<imprint>
			<biblScope unit="page" from="103" to="110" />
			<date type="published" when="2001-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Surfels: Surface elements as rendering primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Baar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 2000 Conference Proceedings</title>
		<imprint>
			<biblScope unit="page" from="335" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">The Algorithmic Beauty of Plants</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Prusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lindenmayer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Approximate and probabilistic algorithms for shading and rendering structured particle systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Reeves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Blau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;85 Proceedings)</title>
		<imprint>
			<date type="published" when="1985-07" />
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="313" to="322" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Multi-resolution 3D approximations for rendering complex scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Borrel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric Modeling in Computer Graphics</title>
		<editor>B. Falcidieno and T.L. Kunii</editor>
		<meeting><address><addrLine>Genova, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="455" to="465" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Qsplat: A mulitresolution point rendering system for large meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 2000 Conference Proceedings</title>
		<imprint>
			<biblScope unit="page" from="343" to="352" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A three dimensional image cache for virtual reality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gernot</forename><surname>Schaufler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Strzlinger</surname></persName>
		</author>
		<idno>1067-7055</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="227" to="236" />
			<date type="published" when="1996-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Layered depth images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Shade</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Gortler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Szeliski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 98</title>
		<meeting>SIGGRAPH 98</meeting>
		<imprint>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="231" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Interactive sampling and rendering for complex and procedural geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stamminger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Drettakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Rendering Techniques</title>
		<editor>S. Gortler and C. Myszkowski</editor>
		<meeting><address><addrLine>Vienna</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="151" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Perspective shadow maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stamminger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Drettakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPHH 2002 Conference Proceedings. ACM Siggraph</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Friedhelm Meyer auf der Heide, and Wolfgang Stra√üer. The randomized z-buffer algorithm: Interactive rendering of highly complex scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Wand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingmar</forename><surname>Peter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 2001 Conference Proceedings</title>
		<imprint>
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Creation and rendering of realistic trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Penn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;95 Proceedings)</title>
		<editor>R. Cook</editor>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="119" to="128" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
