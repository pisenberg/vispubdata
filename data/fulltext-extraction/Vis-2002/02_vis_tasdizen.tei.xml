<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Geometric Surface Smoothing via Anisotropic Diffusion of Normals</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tolga</forename><surname>Tasdizen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Computing Univ. of Utah</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><surname>Whitaker</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">School of Computing Univ. of Utah Paul Burchard Dept. of Mathematics UCLA Stanley Osher Dept. of Mathematics UCLA</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Geometric Surface Smoothing via Anisotropic Diffusion of Normals</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Curve</term>
					<term>surface</term>
					<term>solid and object representations anisotropic diffusion</term>
					<term>surface fairing</term>
					<term>geometric surface processing</term>
					<term>intrinsic Laplacian of curvature</term>
					<term>level sets</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Processing results on the MRI head model: (a) original isosurface, (b) isotropic diffusion (intrinsic Laplacian of mean curvature flow), and (c) anisotropic diffusion. The small protrusion under the nose is a physical marker used for registration.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The fundamental principles of signal processing give rise to a wide range of useful tools for manipulating and transforming signals and images. The generalization of these principles to the processing of 3D surfaces has become an important problem in computer graphics, visualization, and vision. For instance, 3D range sensing technologies produce high resolution descriptions of objects, but they often suffer from noise. Medical imaging modalities such as MRI and CT scans produce large volumes of scalar or tensor measurements, but surfaces of interest must be extracted through some segmentation process or fitted directly to the measurements.</p><p>One of the most prevalent uses of image processing, is for smoothing or denoising images. Often denoising of images is done with a low-pass filter, which reduces noise, but also blurs sharp features and details, such as edges. The literature demonstrates a variety of nonlinear processes that reduce noise while preserving edges. Likewise, when we build surfaces from measured data, we would like to reduce the effects of noise on visualization or subsequent processing. However, the question of how to apply nonlinear image-smoothing processes to surfaces remains open.</p><p>In this paper, we focus on the generalization of anisotropic diffusion, a PDE-based, edge-preserving, image-smoothing technique, to surface processing. The proposed method offers two advantages over previous work on feature-preserving smoothing of surfaces. First is the use of level set surface models, which allows us to process very complex shapes of arbitrary and changing topology. This generality makes the method well suited for processing and visualizing surfaces that are derived directly from measured data. The second advantage is that the proposed method follows from a well-founded variational formulation, which is a natural generalization of anisotropic diffusion, as proposed by Perona and Malik <ref type="bibr" target="#b20">[21]</ref> (P&amp;M) for images. This formulation will alleviate the need for developing heuristics, which are sometimes used to achieve the qualitative effects of the P&amp;M diffusion in the absence of a complete, mathematical generalization for surfaces <ref type="bibr" target="#b5">[6]</ref>. <ref type="figure">Figure 1</ref> demonstrates these concepts on an isosurface extracted from a MRI scan. The original isosurface is a good example of the kind of noisy, measured data with which this paper is concerned. Isotropic diffusion which behaves like a low pass filter on the surface normals is not particularly effective for denoising; the noise is removed but surface features are deformed or lost in the process. Anisotropic diffusion is a much better candidate for denoising as can be seen in <ref type="figure">Figure 1</ref>(c). Note that all of the surfaces in this paper are represented and processed volumetrically and rendered using the marching cubes algorithm <ref type="bibr" target="#b13">[14]</ref>.</p><p>The use of a level set formulation enables us to achieve a "black box" behavior, which is reflected in the nature of the results presented in this paper. Hence, the techniques presented in this paper offer a new set of capabilities that are especially interesting when processing measured data. Measured data can be acquired directly in volumetric form or acquired as a surface mesh and converted into a volume <ref type="bibr" target="#b3">[4]</ref>. In some applications, such as animation, models are manually generated by a designer and the parameterization is not arbitrary but is an important aspect of the geometric model. In these cases mesh-based processing methods offer a powerful set of tools, such as hierarchical editing <ref type="bibr" target="#b10">[11]</ref>, which are not yet possible with the proposed representation. However, in other applications, such as 3D segmentation and surface reconstruction <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b31">32]</ref>, the processing is data driven, surfaces can deform quite far from their initial shapes and change topology, and user intervention is not practical. Furthermore, when considering processes other than isotropic smoothing, such as nonlinear smoothing, the creation or sharpening of small features can exhibit noticeable effects of the mesh topology-features that are aligned with the mesh are treated differently than those that are not.</p><p>The proposed method relies on a novel technique for solving fourth-order flows on level set surfaces <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b25">26]</ref>. Our strategy is to split the surface deformation into a two step process that (i) solves anisotropic diffusion on the normal map of the surface, and (ii) deforms the surface so that it fits the smoothed normals. This approach is based on the proposition that the natural generalization of image processing to surfaces is via the surface normal vectors. The variation of the normals has more intuitive meaning than the variation of points on the surface. A smooth surface is one that has smoothly varying normals and creases on a piecewise smooth surface appear as discontinuities in the normals. For instance, the definition of a crease becomes much more complicated and tied to the parameterization if the variation of points on the surface is used instead of the normals; see <ref type="bibr" target="#b26">[27]</ref> for more details. In this light, the differences between surface processing and image processing are threefold. Normals live on a manifold (the surface) and cannot necessarily be processed using a flat metric, as is typically done with images. Normals are vector valued and constrained to be unit length; the processing techniques must accommodate this. Normals are coupled with the surface shape, and thus the normals should drag the surface along as their values are modified during processing. This general mechanism will also open the door of possibilities for mapping other types of image processing algorithms to surfaces.</p><p>The rest of this paper is organized as follows: Section 2 will present a brief overview of related work in the literature. The mathematical formulation for our approach will be discussed in Sec. 3. Examples of isotropic and anisotropic diffusion will be presented in Sec. 4. Section 5 will summarize the results of this paper and outline directions for future work. The details of the numerical implementation of our method is covered in Appendix A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The majority of surface smoothing research has been in the context of surface fairing with the motivation of creating aesthetically pleasing surfaces using triangulated meshes. Surface fairing typically operates by minimizing a fairness or penalty function that favors smooth surfaces <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b29">30]</ref>. Fairness functions can depend on the geometry of the surface or the parameterization. Geometric penalty functions make use of invariants such as principal curvatures, and therefore produce results that are not significantly affected by arbitrary decisions about the parameterization. The proposed work relies on geometric penalty functions.</p><p>One way to smooth a surface is to incrementally reduce its surface area. This can be accomplished by mean curvature flow (MCF) which is a second order geometric flow. MCF can reduce noise, but also has some unsatisfactory side effects, including the creation of singularities and shrinkage (see Sec. 3). A great deal of research has focused on modified second-order flows that produce better results than MCF. Using level set models, several authors have proposed smoothing surfaces by weighted combinations of principle curvatures. For instance, Whitaker <ref type="bibr" target="#b30">[31]</ref> has proposed a nonlinear reweighting scheme that favors the smaller curvature and preserves cylindrical structures. Faugeraus <ref type="bibr" target="#b14">[15]</ref> proposes a smoothing by the minimum curvature. A variety of other combinations have been proposed <ref type="bibr" target="#b23">[24]</ref>.</p><p>A similar set of curvature-based algorithms have been developed for surface meshes. For instance, Clarenz et al. <ref type="bibr" target="#b5">[6]</ref> propose a modified MCF as an anisotropic diffusion of the surface. They threshold a weighted sum of the principle curvatures to determine the surface locations where edge sharpening is needed. Tangential displacement is added to the standard MCF at these locations for sharpening the edges. Although, this flow produces results that tend to preserve sharp features, it is not a strict generalization of P&amp;M diffusion from images to surfaces. Another mesh-based modified MCF is proposed in <ref type="bibr" target="#b17">[18]</ref> where a threshold on the mean curvature is used to stop over-smoothing. Anisotropic diffusion as a modified surface area minimization for height functions was proposed in <ref type="bibr" target="#b8">[9]</ref>. Taubin proposes a "linear anisotropic Laplacian operator" for meshes that is based on a separate processing of the normals <ref type="bibr" target="#b28">[29]</ref>. As with <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b17">18]</ref>, it is essentially a reweighting of the Laplacian. It is similar to our approach in the sense that surface positions are refitted to the processed normals; however, our approach uses level set surfaces that are refitted to the normals with a second order PDE as opposed to the least squares mesh fitting in <ref type="bibr" target="#b28">[29]</ref>.</p><p>These level set and mesh based methods are all modifications of curvature flows, and are therefore all second-order processes. Because they are based on reweightings of curvature, these methods always smooth the surface in one direction or another. They do not exhibit a sharpening of details, which is achieved by the P&amp;M equation (for images) through an inverse diffusion process. Hence, these methods are not satisfactory generalizations of the P&amp;M anisotropic diffusion equation.</p><p>The generalization of P&amp;M to surfaces requires a high-order geometric flow. Using a variational framework, a useful second-order penalty function is total curvature</p><formula xml:id="formula_0">¡ S κ 2 1 ¢ κ 2 2 dS£<label>(1)</label></formula><p>where κ 1 and κ 2 are the principal curvatures. Minimizing <ref type="bibr" target="#b0">(1)</ref> has been shown to deform surfaces into spheres <ref type="bibr" target="#b21">[22]</ref>, which are a steady state solution. Total curvature is a geometric (invariant) property of the surface. The mesh fairing approach of <ref type="bibr" target="#b29">[30]</ref> which minimizes <ref type="bibr" target="#b0">(1)</ref> involves fitting local polynomial basis functions to local neighborhoods for the computation of total curvature. The first variation of total curvature is intrinsic Laplacian of mean curvature (ILMCF), a fourth order equation. Instead of solving fourth order PDEs directly, Kobbelt et al. decouple the fourth order expression into a pair of second-order equations <ref type="bibr" target="#b24">[25]</ref>. However, this approach works only for meshes, and relies on analytic properties of the steadystate solutions, ∆H ¤ 0, by fitting surface primitives that have those properties. Thus, it does not apply to other types of smoothing processes, such as those that minimize nonlinear feature-preserving penalties.</p><p>If we penalize the parameterization (i.e. non-geometric), total curvature becomes the thin plate energy functional. The variational derivative of thin plate energy is the linear biharmonic operator. Weighted averages of thin plate and membrane energies are used to construct mesh filters with desirable properties <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b12">13]</ref>. Modifications to the mesh operators alleviate parameterization dependencies <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b10">11]</ref>. In this paper, we focus on geometric surface smoothing strategies on level set surfaces using nonlinear penalty functions.</p><p>The work in this paper is also motivated by that of Chopp &amp; Sethian <ref type="bibr" target="#b4">[5]</ref>, who derive the intrinsic Laplacian of curvature for an implicit curve, and solve the resulting fourth-order nonlinear PDE. However, they argue that the numerical methods used to solve second order flows are not practical, because they lack long term sta-  : Shown here in 2D, the process begins with a shape and constructs a normal map from the distance transform (left), modifies the normal map according to a PDE derived from a penalty function (center), and refits the shape to the normal map (right).</p><p>bility. They propose several new numerical schemes, but none are found to be completely satisfactory due to their slow computation and inability to handle singularities. The results in this paper allow us to solve this equation more effectively, in 3D, with an additional, nonlinear term that preserves sharp details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">MINIMIZING TOTAL CURVATURE</head><p>Several authors have observed the advantages of higher-order derivatives for smoothing surfaces <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b7">8]</ref>. As an illustration of the importance of higher-order geometric processing, consider the results in <ref type="figure" target="#fig_0">Fig. 2</ref>, which demonstrates the differences between processing surfaces with mean curvature flow (MCF) and intrinsic Laplacian of mean curvature flow (ILMCF). The amount of smoothing for both was chosen to be qualitatively similar, and yet important differences can be observed on the smaller features of the model. MCF has shortened the horns, and yet they remain sharpnot a desirable behavior for a "smoothing" process. This behavior for MCF is well documented as a pinching off of cylindrical objects and is expected from the variational point of view: MCF minimizes surface area and therefore will quickly eliminate smaller parts of a model. Some authors <ref type="bibr" target="#b23">[24]</ref> have proposed volume preserving forms of second-order flows, but these processes compensate by enlarging the object as a whole, which exhibits, qualitatively, the same behavior on small features. ILMCF, in <ref type="figure" target="#fig_0">Fig. 2</ref>, preserves the structure of these features much better while smoothing them.</p><p>In this section, we will introduce a method for solving general fourth order surface flows by breaking them into two second order PDEs. The specific flows we are interested in are isotropic (ILMCF) and anisotropic diffusion. This pair of equations is solved by allowing the surface shape to lag the normals as they are filtered and then refitted by a separate process. <ref type="figure" target="#fig_1">Figure 3</ref> shows this three step process graphically in 2D for ILMCF-shapes give rise to normal maps, which, when filtered, give rise to new shapes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Notation</head><p>To facilitate the discussion, we use the Einstein notation convention, where the subscripts indicate tensor indices, and repeated subscripts within a product represent a summation over the index (across the dimensions of the underlying space). Furthermore, we use the convention that subscripts on quantities represent derivatives, except where they are in parenthesis, in which case they refer to a vector-valued variable. Thus, φ i is the gradient vector of a scalar quantity φ : IR n Level set surface models rely on the notion of a regular surface, which is a collection of 3D points, , with a topology that allows each point to be modeled locally as a function of two variables. We can describe the deformation of such a surface using the 3D velocity of each of its constituent points, i.e., ds § i¨ t dt for all s § i¨ . If we represent the surface implicitly at each time t, then ¤</p><formula xml:id="formula_1">s § i¨ t " φ s § i¨ t £ t ¤ 0<label>(2)</label></formula><p>Surfaces defined in this way divide a volume into two parts: inside (φ $ 0) and outside (φ % 0). It is common to choose φ to be the signed distance transform of , or an approximation thereof. The surface remains a level set of φ over time, and thus taking the total derivative with respect to time (using the chain rule) gives</p><formula xml:id="formula_2">∂ φ ∂t ¤ &amp; φ j ds § jd t<label>(3)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Total Curvature of Normal Maps</head><p>When using implicit representations one must account for the fact that derivatives of functions defined on the surface are computed by projecting their 3D derivatives onto the tangent plane of the surface. Let N § i¨: IR 3 ¦ S 3 be the normal map, which is a field of normals that are everywhere perpendicular to the family of embedded iso- i¨r eturns the projection of V § i¨o nto N § i¨. Let I § i j¨b e the identity matrix. Then the projection onto the plane that is perpendicular to the vector field N § i¨i s the tangent projection operator, T § i j¨¤ I § i j¨&amp; P § i j¨. Under typical circumstances the normal map N § i¨i s derived from the gradient of φ , and T § i j¨p rojects vectors onto the tangent planes of the level sets of φ . However, the computational strategy we are proposing allows φ to lag the normal map. Therefore, the tangent projection operators differ, and we use T φ § i j¨t o denote projections onto the tangent planes of the level sets of φ and T N § i j¨t o denote projections onto planes perpendicular to the normal map.</p><formula xml:id="formula_3">surfaces of φ -thus N § i¨¤ φ i φ k φ k .</formula><p>The shape matrix <ref type="bibr" target="#b9">[10]</ref> of a surface describes its curvature independent of the parameterization. The shape matrix of an implicit surface is obtained by differentiating the normal map and projecting that derivative onto the tangent plane of the surface. The Euclidean norm of the shape matrix is squared curvature</p><formula xml:id="formula_4">κ 2 ¤ N § i¨j T φ § jk¨2 (4) If N § i¨i s derived directly from φ , this gives κ 2 ¤ T φ § il¨φ l j T φ § jk¨2 (5)</formula><p>The generic penalty function of total curvature is</p><formula xml:id="formula_5">) κ 2 ¤ ¡ 0 g κ 2 dx § i¨£<label>(6)</label></formula><p>where g κ 2</p><p>is monotonically increasing scalar function. Notice, that if we take the first variation of (6) with respect to φ using (5) for total curvature we obtain a fourth-order PDE on φ . On the other hand, if we use (4) for total curvature and take the first variation of (6) with respect to N § i¨, allowing φ to remain fixed, we obtain a second-order PDE on N § i¨. We take the latter approach in this paper.</p><p>As we process the normal map N § i¨, letting φ lag, we must ensure that it maintains the unit length constraint, N § i¨N § i¨¤ 1. This is expressed in the penalty function using Lagrange multipliers. The constrained penalty function is</p><formula xml:id="formula_6">) κ 2 ¡ 0 λ x § l¨ N § k¨N § k¨&amp; 1 dx § l¨£ (7)</formula><p>where λ</p><p>x § l¨ is the Lagrange multiplier at x § l¨. The next step is to derive the first variation. Curvature given by (4) can be written as</p><formula xml:id="formula_7">κ 2 ¤ N § i¨j 2 &amp; N § i¨j φ j 2 φ k φ k (8)</formula><p>Using <ref type="bibr" target="#b7">(8)</ref> and solving for λ in (7) introduces a projection operator</p><formula xml:id="formula_8">T N § i j¨o n the first variation of )</formula><p>, which keeps N § i¨u nit length. Then the first variation of (7) with respect to N § i¨i s</p><formula xml:id="formula_9">T N § i j¨d ) dN § j¨¤ 2 T N § i j¨g 3 κ 2 N § j¨k &amp; N § j¨l φ l φ k φ m φ m k £ (9)</formula><p>where g3 is the derivative of g with respect to κ 2 . A gradient descent on this metric</p><formula xml:id="formula_10">∂ N § i¨ ∂t ¤ &amp; T N § i j¨d ) dN § j¨, results in a PDE that minimizes g κ 2</formula><p>on the normal map. Notice that this is precisely the same as solving the constrained diffusion equation on N § i¨u sing the method of solving PDEs on implicit manifolds described by <ref type="bibr" target="#b2">[3]</ref>. We will discuss several choices for g in Sec. 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Surface Evolution via Normal Maps</head><p>We have shown how to evolve the normals to minimize functions of curvature; however, the final goal is to process the surface, which requires deforming φ . Hence, the next step is to relate the evolution of φ to the evolution of N § i¨. Suppose that we are given the normal map N § i¨t o some set of surfaces, but not necessarily level sets of φ -as is the case if we filter N § i¨a nd let φ lag. We can manipulate φ so that it fits the normal field N § i¨b y minimizing a penalty function that quantifies the discrepancy. This penalty function is <ref type="bibr" target="#b9">(10)</ref> where U 7 IR 3 is the domain of φ . The first variation with respect to φ is</p><formula xml:id="formula_11">5 φ ¤ ¡ U φ i φ i &amp; φ i N § i¨d x § j¨£</formula><formula xml:id="formula_12">d 5 dφ ¤ &amp; " " φ k " " φ j φ m φ m j &amp; N § j¨j ¤ &amp; " " ∇φ " " H φ &amp; H N (11)</formula><p>where H φ is the mean curvature of the level set surface and H N is the induced curvature of the normal map. A gradient descent on φ that minimizes this penalty function is ∂ φ</p><formula xml:id="formula_13">∂t ¤ &amp; d 5</formula><p>dφ . Thus, the surface moves as the difference between its own curvature and that of the normal field. The factor of © ∇φ © , which is typical with level set formulations, comes from the fact that we are manipulating the shape of the level set, which is embedded in φ , as in <ref type="bibr" target="#b2">(3)</ref>.</p><p>We propose to solve fourth-order flows on the level sets of φ by a splitting strategy, which entails processing the normals and allowing φ to lag and then be refitted later, in a separate process. In a related work, joint interpolation of vector fields and gray level functions was used for successfully filling-in missing parts of images in . We have derived a gradient descent for the normal map based on a certain class of penalty functions that use total curvature in Sec. 3.2. This process is denoted in <ref type="figure" target="#fig_2">Fig. 4</ref>   <ref type="figure" target="#fig_2">Fig. 4</ref>. The overall algorithm shown in <ref type="figure" target="#fig_2">Fig. 4</ref> repeats these two steps to minimize the penalty functions in terms of the surface. We refer to both of these processes, back to back, as one iteration of our algorithm. In <ref type="bibr" target="#b26">[27]</ref> we have shown that the overall process of simultaneously solving these two PDEs as shown is equivalent to the fourth-order flow on the original surface. This establishes the mathematical foundation of the proposed method.</p><formula xml:id="formula_14">φ n φ init C φ n N n dG dN Iterate to process N N n+1 dD dφ φ n lags Iterate for φ to catch N φ n+1 D φ n fi x e d φ final</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">APPLICATIONS</head><p>The flexible normal map energy minimization and surface refitting methodology introduced in Sec. 3 allows us to experiment with various forms of g in (6) that give rise to different classes of penalty functions. The choice of g κ 2 ¤ κ 2 leads to ILMCF which we will refer to as isotropic diffusion. Minimizing the total curvature of a surface works well for smoothing surfaces and eliminating noise, but it also deforms or removes important features. This type of smoothing is called isotropic because it corresponds to solving the heat equation on the normal map with a constant, scalar conduction coefficient. Isotropic diffusion is not particularly effective if the goal is to denoise a surface that has an underlying structure with fine features. <ref type="figure">Figure 1(a)</ref> showed an example of the skin surface, which was extracted, via isosurfacing, from an magnetic resonance imaging (MRI) data set. The roughness of the skin is noise, an artifact of the measurement process. This model is also topologically complex because, despite our best efforts to avoid it, the isosurfaces include many convoluted passages up in the sinuses and around the neck. As an indication of this complexity, consider that marching cubes produces 543,000 triangles from this 256 ( 256 ( 175 volume. Isotropic diffusion, shown in <ref type="figure">Fig. 1(b)</ref>, is marginally effective for denoising the head surface. Notice that the sharp edges around the eyes, nose, lips and ears are lost in this process.</p><p>The problem of preserving features while smoothing noise has been studied extensively in computer vision. Perona &amp; Malik <ref type="bibr" target="#b20">[21]</ref> proposed to replace Laplacian smoothing, which is equivalent to the heat equation</p><formula xml:id="formula_15">∂ I ∂t ¤ ∇ F ∇I, with a nonlinear, anisotropic PDE ∂ I ∂t ¤ ∇ F g3 © ∇I © 2 ∇I £ (12)</formula><p>where I is generally the grey-level image. This PDE is the first µ. Edges are generally associated with large image gradients, and thus diffusion across edges is stopped while regions that are relatively flat undergo smoothing. A mathematical analysis shows that solutions to (12) can actually exhibit an inverse diffusion near edges, and can enhance or sharpen smooth edges that have gradients greater than µ <ref type="bibr" target="#b23">[24]</ref>.</p><p>The generalization of P&amp;M anisotropic diffusion to surfaces is achieved from variational principles by choosing the appropriate function of the squared curvature in <ref type="bibr" target="#b5">(6)</ref> </p><p>where g3 is the derivative of g with respect to κ 2 . The first variation with respect to the surface normals gives a vector-valued anisotropic diffusion on the level set surface-a straightforward generalization of <ref type="bibr" target="#b11">(12)</ref>. This flow is a modified version of ILMCF that preserves or enhances areas of high curvature, which we will call creases. Creases are the generalization of edges in images to surfaces. The differences between anisotropic diffusion and isotropic diffusion can clearly be observed in <ref type="figure">Fig. 1(c)</ref>. Around the smooth areas of the original model such as the forehead and the cheeks, there is no noticeable difference in the results of the two processes. However, very significant differences exist around the lips and the eyes. The creases in these areas, which have been eliminated by isotropic diffusion, are preserved by the anisotropic process. The computation time required for one iteration of the main processing loop operating on this model is approximately 20 minutes on a 1.7 Ghz Intel processor for both isotropic and anisotropic diffusion. The results shown in <ref type="figure">Fig. 1(b)</ref> and (c) are both after 3 iterations which translates to around 60 minutes of processing. The generality of the proposed approach comes at the cost of significant computation time. However, the method is practical with state-of-the-art computers and is well-poised to benefit from parallel computing architectures, due to its reliance on local, iterative computations. Furthermore, the computation times for the proposed method are quite competitive if one compares them to the end-to-end computation times for meshes, which can include manually establishing base meshes and/or "fixing" topological problems, which can require several hours of computation <ref type="bibr" target="#b11">[12]</ref>.</p><p>Another example of denoising by anisotropic diffusion is shown in <ref type="figure" target="#fig_3">Fig. 5</ref>. Independent Gaussian noise with standard deviation 1 0 was added to the original model which in this case is a 221 ( 221 ( 161 volume. The noise was added to the voxel values in the volume which are distances to the surface. After 3 iterations of the main processing loop (see <ref type="figure" target="#fig_2">Fig. 4</ref>) the noise was successfully removed while preserving the features of the original model. A qualitative, visual comparison of these results with results from the same model shown in <ref type="bibr" target="#b5">[6]</ref> <ref type="figure" target="#fig_0">(Fig. 2)</ref> suggests that the results in this paper demonstrate better preservation of fine, sharp details, such as those around the eyes and in the hair. The computation times per iteration for this example are approximately 7 minutes on a 1.7 Ghz Intel processor compared to 20 minutes per iteration for the example in <ref type="figure">Fig. 1</ref>. This is indicative of the relatively high degree of complexity of the MRI based model. <ref type="figure">Figure 6</ref>(a) shows a different isosurface (the cortex) extracted from the same MRI scan as the model in <ref type="figure">Fig. 1</ref>. The complexity of this model, i.e. the many tightly nested folds, make it ill suited for mesh based deformations. Also the main cortical surface has many detached pieces, an artifact of the segmentation process. The approach proposed in this paper can automatically simplify topologically noisy features due to the level set implementation -an important aspect of denoising measured surfaces. The example in <ref type="figure">Fig. 7</ref> demonstrates another aspect of the proposed method. Although this model was constructed as a volume directly from 3D range data <ref type="bibr" target="#b6">[7]</ref>, it does not exhibit significant noise. When running the proposed method for anisotropic diffusion, however, surfaces tend toward solutions that have piecewise constant normals with sharp discontinuities in the normal map-analogous to the behavior of the P&amp;M equation for intensity images. Such properties in the normal map correspond to surfaces consisting of planar patches bounded by sharp creases. Thus, the proposed method generates a feature preserving scale space, very much like that of P&amp;M for images. These results support our proposition that processing the normals of a surface is the natural generalization of image processing. The non-linear progression of elimination of details from the smallest scale to the largest in <ref type="figure">Fig. 7</ref> also suggests applications of this method to surface compression and multi-resolution modeling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSION</head><p>A generalization of anisotropic diffusion for surfaces leads to a smoothing process that enhances creases while reducing smallscale noise. Our approach is based on the proposition that the natural generalization of image processing to surfaces is via the normals. Variational expressions for the surface have corresponding variational formulations on the surface normals. This philosophy leads to a clear generalization of P&amp;M anisotropic diffusion to surfaces. As a result the behavior for surfaces that mirrors that of images-we see piecewise smooth surface patches bounded by high curvature creases. Processing the normals separately from the surface leads to a pair of coupled second-order equations instead of a fourth-order equation.</p><p>We solve the surface deformation using level sets, an implicit representation that relies on a discrete grid, which is a volume. Because of this implementation, the proposed method applies to any shape that can be modeled as an isosurface. Consequently, our results show results with a level of surface complexity that goes beyond that of previous methods. For example, the proposed method can be used on isosurfaces that are extracted directly from 3D medical data-a difficult task for mesh based approaches.</p><p>Future work will study the usefulness of other interesting image processing techniques such as total variation <ref type="bibr" target="#b22">[23]</ref>. To date, we have dealt with post processing noisy surfaces. The noise en- countered in these examples, such as the MRI scans, were additive noise in the volume elements. Other surface processing problems exhibits different types of noise, such as the line-of-sight noise in reconstruction from laser range finder data <ref type="bibr" target="#b31">[32]</ref>. Future work will combine the proposed method with segmentation and reconstruction from range data techniques. The current shortcoming of this method is the computation time, which is significant. However, the process lends itself to parallelism, and the advent of cheap, specialized, vector-processing hardware promises significantly faster implementations. Multi-grid adaptive level sets and implicit PDE solvers are possibilities for research towards reductions in the computational complexity of the method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A NUMERICAL IMPLEMENTATION</head><p>By embedding surface models in volumes, we have converted equations that describe the movement of surface points to nonlinear PDEs defined on a volume. The next step is to discretize these PDEs in space and time. In this paper, the embedding function φ is defined on the volume domain U and time. The PDEs are solved using a discrete sampling with forward differences along the time axis. There are two issues with discretization: (i) the accuracy and stability of the numerical solutions, (ii) the increase in computational complexity introduced by the dimensionality of the domain.</p><p>For brevity, we will discuss the numerical implementation in 2D-the extension to 3D is straightforward. . We will refer to a specific time instance of this function with superscripts, i.e. φ n</p><formula xml:id="formula_17">U p£ qV ¤ φ x p £ y q £ t n</formula><p>. For a vector in 2-space v, we use v § x¨a nd v § y¨t o refer to its components consistent with the notation of Sec. 3. In our calculations, we need three different approximations to first-order derivatives: forward, backward and central differences. We denote the type of discrete difference using superscripts on a difference operator, i.e., δ § Ẍ for forward differences, δ § Ḧ for backward differences, and δ for central differences. For instance, the differences in the x direction on a discrete grid with unit spacing are</p><formula xml:id="formula_18">δ § Ẍ x φ U p£ qV Y ¤ φ U p ¢ 1£ qV &amp; φ U p£ qV £ δ § Ḧ x φ U p£ qV Y¤ φ U p£ qV &amp; φ U p &amp; 1£ qV £ and (15) δ x φ U p£ qV Y ¤ φ U p ¢ 1£ qV &amp; φ U p &amp; 1£ qV 2£</formula><p>where the time superscript has been left off for conciseness. The application of these difference operators to vector-valued functions denotes componentwise differentiation. The positions of derivatives computed with forward and backwards differences are staggered off the grid by 1 2 pixels. In describing the numerical implementation, we will refer to the flow chart in <ref type="figure" target="#fig_2">Fig. 4</ref> for one time step of the main loop. Hence, the first step in our numerical implementation is the calculation of the surface normal vectors from φ n . Recall that the surface is a level set of φ n as defined in <ref type="bibr" target="#b1">(2)</ref>. Hence, the surface normal vectors can be computed as the unit vector in the direction of the gradient of φ n . The gradient of φ n is computed with central differences as</p><formula xml:id="formula_19">φ n i U p£ qV d δ x φ n U p£ qV δ y φ n U p£ qV ;<label>(16)</label></formula><p>and the normal vectors are initialized as</p><formula xml:id="formula_20">N uf 0 § i¨U p£ qV ¤ φ n i U p£ qV © φ n k U p£ qV ©<label>(17)</label></formula><p>Because φ n is fixed and allowed to lag behind the evolution of N § i¨, the time steps in the evolution of N § i¨a re denoted with a different superscript, u. For this evolution, ∂ N § i¨ ∂t </p><formula xml:id="formula_21">¤ &amp; d ) dN § i1 p-1 p p+1 q-1 q q+1 [p,q] [p-1,q] [p,q] [p,q-1]</formula><formula xml:id="formula_22">M u § i¨d δ § Ẍ x N u § i¨&amp; xc C u § i¨δ § Ẍ x φ n £ (18) yc M u § i¨d δ § Ẍ y N u § i¨&amp; yc C u § i¨δ § Ẍ y φ n<label>(19)</label></formula><p>where the time index n remains fixed as we increment u, and where</p><formula xml:id="formula_23">xc C u § i¨¤ xc N u § i¨j xc φ n j xc φ n k xc φ n k £ and yc C u § i¨¤ yc N u § i¨j yc φ n j yc φ n k yc φ n k<label>(20)</label></formula><p>Derivatives are computed with forward differences; therefore they are staggered, located on a grid that is offset from the grid where φ and N § i¨a re defined, as shown <ref type="figure">Fig. 8</ref> for the 2D case. Furthermore, notice that since the offset is half pixel only in the direction of the differentiation, the locations of δ § Ẍ</p><p>x N § i¨a nd δ § Ẍ y N § i¨a re different, but are the same locations as the flux <ref type="bibr" target="#b17">(18)</ref> and <ref type="bibr" target="#b18">(19)</ref>   <ref type="figure">Fig. 8</ref> with the heavy rectangle. For instance, the staggered gradients of φ are</p><formula xml:id="formula_24">xc φ n j ¤ φ n j U p ¢ 1 2 £ qV d δ § Ẍ x φ U p£ qV 1 2 δ y φ U p£ qV ¢ δ y φ U p ¢ 1£ qV £ yc φ n j ¤ φ n j U p£ q ¢ 1 2 V d 1 2 δ x φ U p£ qV ¢ δ x φ U p£ q ¢ 1V δ § Ẍ y φ U p£ qV<label>(21)</label></formula><p>The staggered gradients of the normals are computed in the same way as <ref type="bibr" target="#b20">(21)</ref>. To evaluate (9), we also need to compute g3</p><formula xml:id="formula_25">κ 2</formula><p>at the precise locations where the flux <ref type="bibr" target="#b17">(18)</ref> and <ref type="bibr" target="#b18">(19)</ref> are located. For this, we need the total intrinsic curvature <ref type="bibr" target="#b21">( 22)</ref> at the required locations.</p><formula xml:id="formula_26">xc κ 2 ¤ xc N u § i¨j xc N u § i¨j &amp; xc C u § i¨x c C u § i¨£ and yc κ 2 ¤ yc N u § i¨j yc N u § i¨j &amp; yc C u § i¨y c C u § i¨</formula><p>Backwards differences of the flux are used to compute the divergence operation in <ref type="bibr">(</ref></p><formula xml:id="formula_27">9) &amp; d ) dN § i¨u d δ § Ḧ x g xc κ 2 xc M u § i¨¢ δ § Ḧ y g yc κ 2 yc M u § i¨( 23)</formula><p>Notice that these backwards differences are defined at the original φ grid location U p£ qV because they undo the forward staggering in the flux locations. Thus both components of d ) dN § i¨a re located on the original grid for φ . Using the tangential projection operator in <ref type="bibr" target="#b8">(9)</ref>, the new set of normal vectors are computed as</p><formula xml:id="formula_28">N u X 1 § i¨¤ N u § i¨¢ T N d ) dN § i¨u ¤ N u § i¨¢ d ) dN § i¨u I § i j¨&amp; N u § j¨N u § i¨<label>(24)</label></formula><p>Starting with the initialization in <ref type="bibr" target="#b16">(17)</ref> for u ¤ 0, we iterate (24) for a fixed number of steps, 25 iterations for the examples in this paper. In other words, we do not aim at minimizing the energy given in <ref type="bibr" target="#b6">(7)</ref> in the d ) dN loop of <ref type="figure" target="#fig_2">Fig. 4</ref>; we only reduce it. The minimization of total mean curvature as a function of φ is achieved by iterating the main loop in <ref type="bibr" target="#b16">(17)</ref>.</p><p>Once the evolution of N is concluded, φ is evolved to catch up with the new normal vectors according to <ref type="bibr" target="#b10">(11)</ref>. We denote the evolved normals by N n X 1 § i¨. To compute <ref type="bibr" target="#b10">(11)</ref> we must calculate H φ and H N nc 1 . H N nc 1 is the induced mean curvature of the normal map; in other words, it is the curvature of the hypothetical target surface that fits the normal map. Calculation of curvature from a field of normals is</p><formula xml:id="formula_29">H N nc 1 d δ x N n X 1 x ¢ δ y N n X 1 y £ (25)</formula><p>where we have used central differences on the components of the normal vectors. H N nc 1 needs to be computed once at initialization as the normal vectors remain fixed during the catch up phase. Let v be the time step index in the d 5 dφ loop. H φ v is the mean curvature of the moving level set surface at time step v and is calculated from φ with the smallest area of support</p><formula xml:id="formula_30">H φ v d δ § Ḧ x δ § Ẍ x φ v xc φ v j xc φ v j ¢ δ § Ḧ y δ § Ẍ y φ v yc φ v j yc φ v j<label>(26)</label></formula><p>where the gradients in the denominators are staggered to match the locations of the forward differences in the numerator. The staggered gradients of φ in the denominator are calculated using the 2 ( 3 neighborhood as in <ref type="bibr" target="#b20">(21)</ref>. The PDE ∂ φ</p><formula xml:id="formula_31">∂t ¤ &amp; d 5</formula><p>dφ is solved with a finite forward differences, but with the up-wind scheme for the gradient magnitude <ref type="bibr" target="#b18">[19]</ref>, to avoid overshooting and maintain stability. The up-wind method computes a one-sided derivative that looks in the up-wind direction of the moving wave front, and thereby avoids overshooting. Moreover, because we are interested in only a single level set of φ , solving the PDE over all of U is not necessary. Different level sets evolve independently, and we can compute the evolution of φ only in a narrow band around the level set of interest and reinitialize this band as necessary <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b19">20]</ref>. See <ref type="bibr" target="#b25">[26]</ref> for more details on numerical schemes and efficient solutions for level set methods. Using the upwind scheme and narrow band methods, φ v X 1 is computed from φ v using the curvatures computed in <ref type="bibr" target="#b24">(25)</ref> and <ref type="bibr" target="#b25">(26)</ref>. This loop is iterated until the energy in (10) ceases to decrease; let v f inal denote the final iteration of this loop. Then we set φ for the next iteration of the main loop (see <ref type="figure" target="#fig_2">Fig. 4</ref>) as φ n X 1 ¤ φ v f inal and repeat the entire procedure. The number of iterations of the main loop is a free parameter that generally determines the extent of processing.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Second-and fourth-order surface smoothing. From left to right: Original model, mean curvature flow, and intrinsic Laplacian of mean curvature flow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3</head><label>3</label><figDesc>Figure 3: Shown here in 2D, the process begins with a shape and constructs a normal map from the distance transform (left), modifies the normal map according to a PDE derived from a penalty function (center), and refits the shape to the normal map (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Flow chart<ref type="bibr" target="#b1">[2]</ref></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>(a) Noisy venus head model, and (b) smoothed version after 3 iterations of anisotropic diffusion.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>(a) Original brain isosurface from MRI data set, (b) result of MCF, and (c) after 5 iterations of anisotropic diffusion. Various stages of anisotropic diffusion: (a) original model, (b) after 10 iterations, and (c) after 20 iterations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 : 2 (</head><label>82</label><figDesc>Computation grid is implemented with smallest support area operators. For ILMCF and anisotropic diffusion d ) dN § i¨i s given by (9) which we will rewrite here component by component. The Laplacian of a function can be applied in two steps, first the gradient and then the divergence. In 2D, the gradient of the normals produces a 2( 2 matrix, and the divergence operator in (9) collapses this to a 1 vector. The diffusion of the normal vectors in the tangent plane of the level sets of φ , requires us to compute the flux in the x and y directions. The "columns" of the flux matrix are computed independently as xc</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>respectively. To evaluate<ref type="bibr" target="#b19">(20)</ref>, derivatives of φ and N § i¨m ust computed at respectively. These computations are done with the smallest support area operators, using the symmetric 2( 3 grid of samples around each staggered point, as shown in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>IR. The Hessian is φ i j , and the Laplacian is φ ii . A vector field is v § i¨, where v : IR n IR n , and the divergence of that field is v § i¨i . Scalar operators, such as differentials behave in the usual way. Thus, gradient magnitude is i φ i and the differential for a coordinate system is dx § i¨¤ dx 1 dx 2 dx n .</figDesc><table><row><cell>¥ ¦</cell><cell></cell><cell></cell><cell></cell></row><row><cell>©</cell><cell>φ i</cell><cell>©</cell><cell>¤</cell></row><row><cell>¥ ¦</cell><cell></cell><cell></cell><cell></cell></row></table><note>φ</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head></head><label></label><figDesc>2£ qV . This is staggered by 1 2 pixels in the x direction from the grid. To keep track of staggered locations, we will use the following notation: α,</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>For</cell></row><row><cell cols="8">instance, δ x φ  § Ẍ sitions U p 1£ qV and U p£ qV as defined in (15) uses information from po-U p£ qV with equal weights; hence, it exists at</cell></row><row><cell></cell><cell></cell><cell></cell><cell>¢</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">xc α, and</cell><cell cols="2">yc α will denote the variable α computed</cell></row><row><cell>at</cell><cell>U p£ qV ,</cell><cell>U</cell><cell>p</cell><cell>1 2£ qV , and</cell><cell cols="2">U p£ q</cell><cell>1 2V , respectively.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>¢</cell><cell></cell><cell></cell><cell>¢</cell></row></table><note>U p¢ 1</note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A fast level set method for propogating interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Adalsteinson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computational Physics</title>
		<imprint>
			<biblScope unit="page" from="269" to="277" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Filling-in by joint interpolation of vector fields and gray levels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ballester</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertalmio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Caselles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sapiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Verdera</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Image Processing</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1200" to="1211" />
			<date type="published" when="2001-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Variational methods and partial differential equations on implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertalmio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L.-T</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sapiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computational Physics</title>
		<imprint>
			<biblScope unit="volume">174</biblScope>
			<biblScope unit="page" from="759" to="780" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">3d scan conversion of csg models into distance volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Breen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sean</forename><surname>Mauch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1998 Symposium on Volume Visualization</title>
		<meeting>the 1998 Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="page" from="7" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Motion by intrinsic laplacian of curvature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Chopp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Interfaces and Free Boundaries</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Anisotropic geometric diffusion in surface processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Clarenz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Diewald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="397" to="405" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A volumetric method for building complex models from range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96 Proceedings)</title>
		<imprint>
			<date type="published" when="1996-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Implicit fairing of irregular meshes using diffusion and curvature flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schroder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;99</title>
		<meeting>SIGGRAPH&apos;99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="317" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Anisotropic feature-preserving denoising of height fields and bivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Differential Geometry of Curves and Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">P</forename><surname>Docarmo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976" />
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Multiresolution signal processing for meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Guskov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;99</title>
		<meeting>SIGGRAPH&apos;99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="325" to="334" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Topological noise removal</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Guskov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">J</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Interactive multi-resolution modeling on arbitrary meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Campagna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vorsatz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;98</title>
		<meeting>SIGGRAPH&apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="105" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface reconstruction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;87</title>
		<meeting>SIGGRAPH&apos;87</meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Co-dimension 2 geodesic active contours for the segmentation of tubular strucures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liana</forename><surname>Lorigo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olivier</forename><surname>Faugeras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Grimson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renaud</forename><surname>Keriven</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ron</forename><surname>Kikinis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arya</forename><surname>Nabavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carl-Fredrik</forename><surname>Westin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Computer Vision and Pattern Recognition</title>
		<meeting>Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Shape modeling with front propagation: A level set approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ravikanth</forename><surname>Malladi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Baba</forename><forename type="middle">C</forename><surname>Vemuri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on PAMI</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="158" to="175" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Functional optimization for fair surface design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">P</forename><surname>Moreton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Sequin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;92</title>
		<meeting>SIGGRAPH&apos;92</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="167" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Polyhedral surface smoothing with simultaneous mesh regularization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ohtake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Belyaev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">A</forename><surname>Bogaevski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric Modeling and Processing</title>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fronts propagating with curvature dependent speed: Algorithms based on hamilton-jacobi formulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computational Physics</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="12" to="49" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A pde based fast local level set method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Merriman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H-K</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computational Physics</title>
		<imprint>
			<biblScope unit="volume">155</biblScope>
			<biblScope unit="page" from="410" to="438" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Scale space and edge detection using anisotropic diffusion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Perona</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Malik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="629" to="639" />
			<date type="published" when="1990-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Compact surfaces of least total curvature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Polden</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<pubPlace>Germany</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Tubingen</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Nonlinear total variation based noise removal algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rudin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Fatemi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica D</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="259" to="268" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guillermo</forename><surname>Sapiro</surname></persName>
		</author>
		<title level="m">Geometric Partial Differential Equations and Image Analysis</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Generating fair meshes with g 1 boundary conditions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric Modeling and Processing Proceedings</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="251" to="261" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Level Set Methods: Evolving Interfaces in Geometry, Fluid Mechanics, Computer Vision, and Material Sciences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Geometric surface processing via normal maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tasdizen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Burchard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<idno>UUCS-02-03</idno>
		<imprint>
			<date type="published" when="2002-01" />
		</imprint>
		<respStmt>
			<orgName>University of Utah</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A signal processing approach to fair surface design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;95</title>
		<meeting>SIGGRAPH&apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="351" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Linear anisotropic mesh filtering. Technical Report RC22213, IBM Research Division</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Free-form shape design using triangulated surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;94</title>
		<meeting>SIGGRAPH&apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="247" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Volumetric deformable models: Active blobs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization In Biomedical Computing. SPIE</title>
		<editor>Richard A. Robb</editor>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">A level-set approach to 3D reconstruction from range data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Computer Vision</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="203" to="231" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
