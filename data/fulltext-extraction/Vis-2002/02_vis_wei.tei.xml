<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Simulating Fire With Texture Splats</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoming</forename><surname>Wei</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center For Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department Of Computer Science</orgName>
								<orgName type="institution">State University Of New York At Stony Brook Stony Brook</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Li</surname></persName>
							<email>liwei@cs.sunysb.edu</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center For Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department Of Computer Science</orgName>
								<orgName type="institution">State University Of New York At Stony Brook Stony Brook</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus</forename><surname>Mueller</surname></persName>
							<email>mueller@cs.sunysb.edu</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center For Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department Of Computer Science</orgName>
								<orgName type="institution">State University Of New York At Stony Brook Stony Brook</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arie</forename><surname>Kaufman</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center For Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department Of Computer Science</orgName>
								<orgName type="institution">State University Of New York At Stony Brook Stony Brook</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Simulating Fire With Texture Splats</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Physically based modeling</term>
					<term>I.3.6 [Computer Graphics]: Methodology and Techniques-Interaction techniques</term>
					<term>I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism-Animation Fire Modeling, Textured Splatting, Lattice Boltzmann Model, Graphics Hardware</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We propose the use of textured splats as the basic display primitives for an open surface fire model. The high-detail textures help to achieve a smooth boundary of the fire and gain the small-scale turbulence appearance. We utilize the Lattice Boltzmann Model (LBM) to simulate physically-based equations describing the fire evolution and its interaction with the environment (e.g., obstacles, wind and temperature). The property of fuel and non-burning objects are defined on the lattice of the computation domain. A temperature field is also incorporated to model the generation of smoke from the fire due to incomplete combustion. The linear and local characteristics of the LBM enable us to accelerate the computation with graphics hardware to reach real-time simulation speed, while the texture splat primitives enable interactive rendering frame rates.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Amorphous phenomena, such as smoke, fire, and gas are essential in many applications, such as in virtual environments, flight simulation, landscape design and film making, to name just a few. However, the animation and visualization of such phenomena is a difficult task. Among the recent and impressive works to model fluid behaviors, the Navier-Stokes (NS) equations have been solved in different ways. To simulate the hot and turbulent behavior of gas, Foster and Metaxas <ref type="bibr" target="#b7">[8]</ref> presented a full 3D finite difference solution of the NS equations. Stam <ref type="bibr" target="#b20">[21]</ref> further proposed an unconditionally stable implicit solution. Foster et al. <ref type="bibr" target="#b6">[7]</ref> implemented a modified semi-Lagrangian scheme to solve the animation of liquid. Fedkiw et al. <ref type="bibr" target="#b5">[6]</ref> improved the semi-Lagrangian method by introducing the concept of vortex confinement to the graphics field.</p><p>Among all these natural phenomena, fire is believed to be the most difficult to describe, since we do not have a complete understanding of fire and its complexity. Numerous studies have been conducted to describe different aspects of the behavior of fire <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b19">20]</ref>. Nielsen <ref type="bibr" target="#b15">[16]</ref> has given a good survey of the visualization and modeling of fire. Among the early works, Perlin and Hoffert <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18]</ref> have presented a noise-based method to model 2D and 3D fire, where the turbulence movement is achieved by a fractal perturbation. However, this procedural method constrains the viewpoint position and it cannot describe external effects, such as wind and spread over terrain. <ref type="bibr">Reeves [20]</ref> was the first to use particle systems to model fire. In the film Star Trek II: The Wrath of Khan, the wall-of-fire element was generated using a two-level hierarchy of particle systems. The top-level system was centered at the impact point of the genesis bomb, generating particles which were themselves particle systems. These second-level particle systems were modeled to resemble explosions where each such particle system acted like a volcano exploding upwardly, eventually falling back to the planet surface due to the pull of gravity, forming a parabolic curve rather than a straight line. Due to the discrete nature of particles, a huge amount of them were required to achieve good results.</p><p>To avoid the computational complexity of large particle systems, King et al. <ref type="bibr" target="#b10">[11]</ref> have used textured splats to achieve fire animation. These splat primitives are based on simple and local dynamics, and only a small number of them are required for an animation with a sufficient amount of complexity. The high-detail textures not only supply the turbulence appearance of the fire, but also generate a smooth boundary. A drawback of their model is, however, that it lacks the interaction of the fluid with environmental influences, such as wind and temperature, isolating the fire from the rest of the scene.</p><p>Chiba et al. <ref type="bibr" target="#b2">[3]</ref> have proposed the use of a vortex-based velocity field and a 2D fuel map to describe the spread of fire. Their 2D velocity field is generated randomly. Stam and Fiume <ref type="bibr" target="#b21">[22]</ref> have represented the flammable objects with a map indicating the fuel density and temperature at every point on the surface. They then used a numerical finite difference method to simulate the resulting fire. Their method is computationally somewhat expensive. Perry and Picard <ref type="bibr" target="#b18">[19]</ref>, and recently Beaudoin et al. <ref type="bibr" target="#b0">[1]</ref>, have simulated the spreading of fire on polygon meshes. They used several connected sample points to represent the boundary of the fire. Lee et al. <ref type="bibr" target="#b11">[12]</ref> have extended their work to model both the evolution of fire on complex geometrical structures and the merging of multiple fires. After we completed the current work, we came across Nguyen et al.'s <ref type="bibr" target="#b14">[15]</ref> paper, which was concurrently developed. However, while they implemented a full physically-based simulation of fire, our main concern has been to achieve real-time modeling speed.</p><p>In this paper, we propose the use of textured splats, instead of particles, as the display primitives in order to achieve real-time performance. However, in contrast to King et al. <ref type="bibr" target="#b10">[11]</ref>, we also model the interaction of the display primitives with the environment, such as wind and boundary objects. Since our goal is to preserve real-time performance, we cannot use the standard finite difference methods. However, at the same time, we do not want to give up the physically-based behavior either. For this reason, we propose to model fire using a technique known in the fluid dynamics literature as the Lattice Boltzmann Model (LBM), which has not been used before in the fields of computer graphics and visualization. Based on a simple cellular automata framework, the LBM has great potential to achieve our goals of real-time and physically-based interaction with the environment. In contrast to the traditional differential equations, the LBM approach considers the problem from the microscopic perspective, using simple, linear and local calculations. These properties make the LBM method very amenable to acceleration on commodity graphics hardware.</p><p>In our implementation, we distinguish between macroscopic and microscopic particles. The microscopic particles form the "packets" that propagate across the LBM grid links, while the macroscopic particles form the "display primitives" that move freely about in space. The LBM consists of a discrete lattice, where on every lattice cell, a number of microscopic packet distribution values, representing the density of the microscopic particles, are defined. At each time step, these local microscopic packets relax toward certain values in order to conserve the mass and momentum locally, and their new values propagate to the neighbors along predefined directions. After the LBM packet propagation phase, macroscopic velocity vectors are calculated at each grid node and the resulting velocity field is used to drive the macroscopic particles across space. A physically-based flow simulation results, but at a coarse scale. To add the fine-scale detail for visual plausibility, we associate that macroscopic particle with a texture splat that bears some detail of fire or smoke. An advantage of this framework is that both simulation and rendering of the textured splats can be accelerated on commodity graphics hardware. All put together, we obtain a visual simulation of fire with smoke that is both physically and visually realistic and can occur in real-time.</p><p>The remainder of the paper is organized as follows. In the next section, we introduce the basic elements of fire. The textured splats are discussed in Section 3. In Sections 4, 5, 6 and 7, we present the ideas of the LBM, the initial and boundary conditions and the hardware acceleration and its implementation. In Section 8, we demonstrate the generation of smoke from fire by incorporating a temperature field into the model. Finally, we describe several examples in Section 9.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">FIRE THEORY</head><p>Fire requires three elements to be present: fuel, heat and oxygen.</p><p>Fuel can be in the form of a solid, liquid or gaseous substance. However, in order to burn, all fuels must be chemically decomposed into gases or vapors. This process takes place through the action of heat.</p><p>Heat can be understood as a measure of the molecular activity occurring within an object. The higher the temperature, the faster the action of the molecules. If sufficient heat is applied to an object, the molecules may move so fast that they break away from the bulk of the surface. This is how the fuel is transformed to gas. Heat can be transferred in three ways: convection, conduction and radiation. An intensely burning fire may be sufficient to ignite fuel even from a distance.</p><p>Oxygen contained in air is essential to the combustion. At a certain stage, fire particles may change to smoke particles because of the lack of oxygen in air.</p><p>Based on the sum of these conditions, the fire will spread in some places and extinguish in others, due to the existence and consumption of fuel, heat and oxygen. Fire can exist in different forms under different circumstances, ranging from the quietly burning flame of a candle to the roaring fire of a burning oil well. Generating an accurate model of physics that covers all types of fire is too complicated at least for now. In this work, we will concentrate on the modeling of the freely fed fire, for instance, the flickering torch which has no lack of fuel and receives plenty of air. This kind of fire may be advected by all kinds of external forces, which requires the modeling of the interaction between the burning objects and non-burning objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">TEXTURE SPLATS</head><p>In this paper, we associate texture splats <ref type="bibr" target="#b3">[4]</ref> with the display primitives for visualizing the fire. A texture splat in this context is a small image of turbulence detail, that is multiplied with a smoothing function, for example a Gaussian, to provide good blending in areas where splats partially overlap. The textures can be generated from real images (see <ref type="figure" target="#fig_2">Figure 1</ref> for two sets of example textures), from a noise function <ref type="bibr" target="#b17">[18]</ref>, or from a high-resolution detailed simulation of fire. The high-detail textures can achieve the appearance of turbulent behavior. In our experiments, around 100 display primitives are sufficient to obtain a visually pleasing result. The image size of the textured splats is 32 ¢ 32 pixels. Besides 2D textures, 3D hypertextures <ref type="bibr" target="#b17">[18]</ref> could also be employed. The color and transparency of the display primitives are decided by their location in the fire. Since the temperature rises towards the center of the fire, the radiation from different layers of the fire has a different wavelength distribution. In our work, we use a black body color table to define the colors at different layers. The display primitives at the center of the fire are assigned a brighter color than those located on the periphery of the fire. We further assume that light scattering inside the fire is insignificant and thus implement a single scattering of light toward the viewer <ref type="bibr" target="#b8">[9]</ref> in form of the back- to-front rendering of the N primitives to the screen:</p><formula xml:id="formula_0">E i C i • T i ¡E i 1 1 i N (1)</formula><p>Here, E i is the light received at the current position, C i is the amount of light emitted toward the viewer by the display primitive i, and T i is the transparency of the display primitive i. This function can be implemented by the blending function of OpenGL, if we consider C i as the incoming fragment and E i 1 as the content of the frame buffer. <ref type="figure" target="#fig_3">Figure 2a</ref> and 2b show the results of a simple camp fire generated using the two sets of texture splats shown in <ref type="figure" target="#fig_2">Figure 1a</ref> and 1b respectively. In this example, around 100 display primitives were used. Both results are quite satisfying as long as we keep the turbulent detailed part at the center of the texture. The following is the process of our basic campfire model: 7. Go back to step 2.</p><p>As mentioned in the introduction, this simple model works quite well for an individual open surface fire, however, it cannot address the issues of the generation of smoke and the interaction with surrounding environment, such as wind and boundary objects. By defining the conditions of temperature, pressure and wind velocity around a burning object, one could solve the governing differential equations to model the exact movement of the fire. However, this would require a huge amount of computation time. We avoid this expensive computation by considering the fire as a form of hot gas, so the behavior of the fire is mainly decided by the wind direction and the location of the fuel and non-burning boundary objects. In the next section, we describe the use of LBM as the underlying physical model to account for the effect of wind and boundary objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">LATTICE BOLTZMANN MODEL</head><p>The LBM <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14]</ref> is based on Cellular Automata (CA), proposed by John Von Neumann as formal models of self-reproducing organisms. They are discrete dynamic systems, where the space, <ref type="figure">Figure 4</ref>: The D3Q19 lattice geometry time, and the state of the cells are all discrete. Each cell in the regular spatial lattice can be in any one of a finite number of states. The states are synchronously updated according to local rules. The CA can produce extremely complex structures from the evolution of rather simple local rules. Dobashi et al. <ref type="bibr" target="#b4">[5]</ref> used a special CA model to implement a realistic animation of clouds.</p><p>Like CA, the LBM is calculated on a 2D or 3D discrete grid, where both the time and the state of each cell are also discrete. Several variables are defined at each cell to indicate whether there are microscopic packets moving in a certain direction. In CA, boolean values are used as these variables, while in the LBM, the averaged packet distributions f qi are used at each cell. They can be of any positive real value, representing the density of the microscopic particle packet. In this way, the simulation result of the LBM does not need to be averaged over a certain grid size, while the averaging has to be done in a CA with boolean variables. The index qi describes the D-dimensional sub-lattice defined by the permutations of a D-tuple of (¦1,...,¦1,0,...0), where q is the number of non-zero components and i counts the sub-lattice vectors. For a 3D grid, there are four sub-lattices, as shown in <ref type="figure" target="#fig_1">Figure 3:</ref> (a) q=0, the cell (0,0,0) has particle packets with zero velocities;</p><p>(b) q=1, the six nearest neighbors´¦1 0 0µ,´0 ¦1 0µ,´0 0 ¦1µ, where the particle packets move with unit velocity;</p><p>(c) q=2, the twelve second-nearest neighbors´¦1 ¦1 0µ, 0 ¦1 ¦1µ,´¦1 0 ¦1µ, where the particle packets move with a velocity of Three different 3D LBM grids can be formed by combining these sub-lattices. In our current work, we implement the D3Q19 model, which represents a good compromise in terms of computational efficiency and reliability. The D3Q19 lattice consists of three sublattices: sub-lattices 0, 1 and 2. <ref type="figure">Figure 4</ref> shows the D3Q19 model lattice geometry. The velocity directions of the 18 moving packet distributions are shown as arrows. The red center is the packet distribution with zero velocity.</p><p>The macroscopic density (mass) ρ and velocity u are calculated from the respective velocity moments of the packet distribution values as follows:</p><formula xml:id="formula_1">ρ ∑ qi f qi (2) u 1 ρ ∑ qi f qi e qi (3)</formula><p>where f qi is the packet distribution value defined at each cell and e qi is the velocity vector, representing the packet velocity along the lattice link qi. Its definition is shown in <ref type="figure" target="#fig_1">Figure 3</ref>. The physical rules of the LBM grid are designed such that they satisfy the incompressible Navier-Stokes equations globally. That is, the LBM must guarantee the conservation of mass and momentum. Based on this, at each time step, every cell updates its packet distribution values according to two simple and local rules: collision and propagation. Collision describes the redistribution of microscopic packets at each local node. It is decided by the collision operator. No matter how the collision operator is defined, the local conservation of mass and momentum must be satisfied. Propagation means the packet distribution values move to the nearest neighbor along their velocity directions. These two rules of the LBM can be described by the following equations:</p><formula xml:id="formula_2">collision : f new qi´x tµ f qi´x tµ Ω qi<label>(4)</label></formula><p>propagation :</p><formula xml:id="formula_3">f qi´x • e qi t • 1µ f new qi´x tµ (5)</formula><p>where Ω is a general collision operator. The collisions are completely local, making the LBM efficiently parallelizable. In one time step t, each packet distribution value at every node is updated based on the collision operator Ω. Then, in time step t+1, the new packet distribution value propagates to the nearest node along the velocity vector e qi .  where τ is the relaxation time scale and f eq qi´ρ uµ is the equilibrium packet distribution. According to Muders's work <ref type="bibr" target="#b13">[14]</ref>, the equilibrium packet distribution can be represented by a linear formula:</p><formula xml:id="formula_4">f eq qi ρ´A q • B q´eqi ¡uµ • C q´eqi ¡uµ 2 • D q´u µ 2 µ (7)</formula><p>where the coefficients A q through D q are dependent on the employed lattice geometry. They are constant values for the specific model. In <ref type="table" target="#tab_1">Table 1</ref>, we list the coefficients used in the D3Q19 model. Using these coefficients in conjunction with Equations 6 and 7 ensures local conservation of mass and momentum. Based on the work <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14]</ref>, it can be demonstrated that by observing the above propagation and collision rules, the following macroscopic incompressible Navier-Stokes equations without external forces can be recovered.</p><formula xml:id="formula_5">∇ ¡u 0 (8) ∂u ∂t ´u ¡∇µu 1 ρ ∇p • ν∇ 2 u<label>(9)</label></formula><p>The viscosity of a fluid is a measure of the fluid resistance to change of shape. For example, water has a higher viscosity value than gas. In LBM, the viscosity is decided by the relaxation time scale τ with equation ν 1 3´τ 1 2 µ. Since viscosity is always greater than zero, τ must be greater than <ref type="bibr" target="#b0">1</ref> 2 . We now describe our algorithm for calculating the LBM: 6. Modify the packet distribution locally to satisfy the boundary conditions;</p><p>7. Back to Step 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">INITIAL CONDITIONS AND BOUNDARY OBJECTS</head><p>Initial conditions are usually specified in terms of macroscopic variables, such as densities and velocities. For the LBM, these macroscopic values are translated into the corresponding microscopic packet distribution values for each node. This is done by solving the equilibrium Equation 7. Hence, the initial values of the density and velocity of each node are plugged into Equation 7, and the equilibrium packet distribution values are set as the initial packet distribution values at each node. Obstacles in the scene are modeled as boundary conditions. For a grid node near the boundary, some of its neighboring nodes lie outside the computation domain. Therefore, the packet distribution values at these nodes are not uniquely defined. In <ref type="figure" target="#fig_5">Figure 5</ref>, we show a concave edge boundary node of the D3Q19 model with nine unknown packet distribution values. Different types of boundary conditions have been introduced in the field of Hydrodynamics for the LBM. In this paper, we implement the simple bounce-back method, where boundary nodes are placed half-way between the grid points. When packets propagate to the boundary nodes, they just bounce back along the link. The propagation step is changed to f qi´x t • 1µ f qi´x tµ. This approach is fast, easy to implement and it can handle complicated boundaries.</p><p>For the boundary condition of an outlet, one way to do in the LBM is to assign a density value for the outflow. However, we have found that it is difficult to define the outflow density before the simulation. We instead impose a zero derivative condition after the collision step, which works very well. Suppose the surface Z=N z is an outlet (where N z is the number of lattice cells in the Z-direction), for each of the outlet nodes, we execute the equation:</p><formula xml:id="formula_6">f qi´i j N z 1µ f qi´i j N z µ</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">HARDWARE ACCELERATION</head><p>The local nature of the LBM calculations lends itself well to an implementation on commodity graphics hardware for additional speedup. The LBM Equations 2, 3, 6 and 7 are mainly composed of simple operations such as addition, subtraction and multiplication, that are naturally available on the rasterization stage of the graphics hardware. Division and other more complicated operations are implemented with lookup tables.</p><p>First, we divide the Lattice Boltzmann model and group the packet distributions f qi into arrays according to their velocity directions. All the packet distributions with the same velocity direction are grouped into the same array, while keeping the neighboring relationship of the original model. We then store the arrays as 2D textures. For a 2D model, all such arrays are naturally 2D, while for a 3D model, each array forms a volume and is stored as a stack of 2D textures. The idea of 2D textures stacks is from 2D texturebased volume rendering, but note that we don't need three replicated copies of the dataset (one for each major direction). The density ρ and velocity u are then computed by summing the f qi from all directions. Next, the f qi are updated according to Equations 6 and 7 with similar hardware configurations. The new distribution textures are generated and replace the old ones. Finally, the newly created f qi propagates to the neighboring grid at every time step. We decompose the velocity into two parts, the velocity component within the slice and the velocity component orthogonal to the slice. The propagation is done for the two velocity components independently. The in-slice propagation is achieved simply by translating the distribution textures and the propagation along the direction of the orthogonal velocity is done by renaming the textures.</p><p>To reduce the overhead of switching between textures, multiple textures representing packet distributions with the same velocity direction are stitched into one larger texture. For the initial and boundary conditions, the packet distribution values should be handled differently. A general approach is to compute the new distribution values for these nodes, then set the new values into the distribution textures. The computation of these new packet distributions can be done with either CPU or graphics hardware.</p><p>A major concern about using graphics hardware for general computation is the accuracy. Most graphics hardware supports only 8 bits per color channel. There have been a few limited supports of 16-bit textures but these are too restrictive to be capable of relatively complicated application such as the LBM simulation. Fortunately, the variables of our current LBM simulation fall into a small numerical range which makes the use of range scaling quite effective. The hardware acceleration gives us a speedup factor of over 50. (See <ref type="bibr" target="#b12">[13]</ref> for detailed description of the hardware implementation.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">IMPLEMENTATION</head><p>Our simulation process consists of two parts. First, considering that the fire can only burn in the form of gas, we initialize the LBM grid with the velocity of the fire and the boundary conditions, and generate a 3D velocity volume. Then, the display primitives, later rendered as texture splats, are injected into the scene and are advected by this 3D velocity volume. We assume that each display primitive has a certain amount of fuel. After a few time steps, the display primitives are removed from the system as the fuel they carry is consumed by the combustion. Initially, the inlets are defined explicitly. During the simulation, the flammable objects can catch fire and new inlets are defined. The power of our method is that we distinguish between the microscopic packets in the LBM and the macroscopic display primitives that we can observe. Thus, we do not require a huge amount of display primitives, which allows the rendering to be fast. Our fire simulation system works in the following way:</p><p>1. Inject new fire particles (display primitives) into the system with an initial texture (the number of particles characterizes the density of the fire);</p><p>2. Update the velocity vector on the grid points according to the LBM algorithm in Section 4. We implement this part in texture hardware to attain real-time interaction speed;</p><p>3. Compute the velocity vector at the current position by trilinear interpolation for each fire particle, and move it to its new location. If a fire particle moves out of the grid, remove it from the system. If a fire particle consumes all of the fuel it carries, it is also removed from the system; 4. Assign the color and transparency for each fire particle;</p><p>5. Render all fire particles in a back-to-front order using texture splatting. Since fire emits light, to account for the effect of fire on other objects, we first render the fire particles separately to construct a light image, then use projective textures to map the image onto surrounding objects.</p><p>6. Go back to step 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">SMOKE</head><p>Smoke generally refers to a visible mixture of products given off by an incomplete combustion of a substance such as wood, coal and fuel oil. This airborne mixture usually contains small particles of carbon, ash and the like, as well as vapor, such as carbon dioxide and water vapor. The generation of smoke from fire can be modeled by ways of a temperature field. The exchange of fire energy in air   <ref type="bibr" target="#b2">[3]</ref>, instead of a more accurate differential equation, to approximate the change of temperature for the display primitives. Our model is governed by the following heat formula:</p><formula xml:id="formula_7">T k´t µ αT k´t 1µ • β ∑ j k G´d k j µT j´t 1µ (10)</formula><p>where α is the conservation coefficient; β is the transferability coefficient; d k j is the distance between the display primitives k and j; and G´µ is a function describing the thermal diffusion. We use a Gaussian filter as the function G´µ to approximate the effect of diffusion. At t=0, T k´0 µ is a predefined initial value, indicating the initial temperature. As the temperature of a display primitive decreases to a certain point, the fire particle changes to a smoke particle. The texture on it is kept unchanged. A separate color table is used to assign the color for smoke. The computation for smoke is done on CPU.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">EXAMPLES</head><p>In this section, we show a few examples of fire generated using the LBM and the textured splats. Our work has been implemented on a P4 1.6GHz PC with a Nvidia GeForce3 Ti 200 card that has 64MB of memory. <ref type="figure" target="#fig_6">Figure 6</ref> shows two images of the same camp fire model in <ref type="figure" target="#fig_3">Figure 2</ref>, with the addition of smoke. In <ref type="figure" target="#fig_3">Figure 2b</ref>, we set a wind boundary condition on the left side of the grid. <ref type="figure" target="#fig_7">Figure 7</ref> indicates the interaction of fire with the surrounding boundary objects. A kettle is placed above a campfire. We initialize a 4 ¢4 patch as the inlet of the LBM grid with a velocity of 0.2. The kettle is placed as a boundary box into the grid. <ref type="figure" target="#fig_8">Figure 8</ref> is an image sequence showing the change of the fire boundary as we move a torch. Initially, the torch is stationary, as shown in <ref type="figure" target="#fig_8">Figure 8a</ref>. As we move it to the left, the computation LBM grid moves together with the base of the torch and we set the left side of the grid to a velocity of 0.1, simulating the moving speed. This boundary condition is kept unchanged throughout the moving process. As the torch stops, the speed of the boundary condition is gradually reduced to 0. The shape of the fire becomes stable again, as shown in <ref type="figure" target="#fig_8">Figure 8d</ref>. In all these examples, our grid size is 32 ¢32¢32. The time used for one step simulation without using graphics hardware is about 180ms. With graphics hardware, the computation time for one simulation step is about 4.6ms. For each example, around 100 display primitives are used to generate the images. The rendering time for the entire image is 15ms. Since in our current work, we solve the LBM on a relatively lowresolution grid, one may ask why not solve the NS equations on the same grid. Although it is true that combining the NS equations with the high-resolution texture splats has the same effect, however, the computation of the NS equations is not as simple as that of the LBM. Also, the fact that the calculation of the LBM only consists of simple operations such as addition, subtraction and multiplication, and it is conducted locally, allows us to further improve the calculation speed of the LBM by employing commodity texture hardware to achieve real-time speed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">CONCLUSIONS</head><p>In this paper, we have proposed the use of textured splats as the basic primitives to model fire. The interaction of fire and the surrounding environments, such as boundary objects and blowing wind, is described by the simple and linear LBM. This method can be used in many applications, such as virtual environment, flight simulation and landscape design. Our approach has the following advantages:</p><p>The calculation of the LBM can be accelerated by texture hardware, due to the LBM's linear and local computations. In all of our experimental results, we were able to achieve real-time frame rates. This can be of great help when dealing with dynamic changes of the boundary conditions during 3D simulations.</p><p>The turbulence behavior of the fire can be incorporated via texture splats. These can be rendered quickly as well on commodity texture hardware.</p><p>There still remain a few things to be investigated. First, we plan to extend our model to handle the propagation of fire in complex polygonal models. We believe that combining our work with the fire spreading models <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b18">19]</ref> will be a promising direction. Second, alternating the textures of the display primitives during the simulation will also help to get visually more pleasing results. Finally, we would like to incorporate more complex illumination effects in future implementations, such as the heat-based refractive effects that occur when objects are viewed across the hot fire.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :Figure 2 :</head><label>12</label><figDesc>Two sets of example texture splats generated from real images, used in our work (courtesy of Scott King). A simple camp fire using texture splats.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>The four sub-lattices defined on a 3D grid. The velocity vectors e qi are shown as arrows in each sub-lattice.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>1 .</head><label>1</label><figDesc>Set glBlendFunc(GL ONE,GL ONE MINUS SRC ALPHA); 2. Clear frame buffer to black; 3. Inject new display primitives into the system with an initial assigned texture splat; 4. Update the position of the display primitives based on a simple upward velocity; 5. Assign color and opacity for each display primitive based on its current location;6. Render all textured splats in back-to-front order using splatting<ref type="bibr" target="#b22">[23]</ref>;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Ô 2 ;</head><label>2</label><figDesc>and (d) q=3, the eight third-nearest neighbors´¦1 ¦1 ¦1µ where the particle packets move with a velocity of Ô 3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>1 . 3 . 4 .</head><label>134</label><figDesc>Set the initial conditions for all grid cells, choose proper density and velocity for inlet cells, and select a relaxation time scale τ. In our current work, τ is empirically set to be 0.5128 to have a stable simulation; 2. Calculate the macroscopic variables of density and velocity for each cell using Equations 2 and 3; Compute the equilibrium packet distribution for each packet distribution by Equation 7; Plug the packet distribution and equilibrium values into the kinetic equation, Equation 6; 5. Propagate the packet distribution to all neighboring cells;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Concave edge boundary node with nine unknown values (some invisible links shown by dashed arrow lines).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>A camp fire with smoke</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>A kettle on a campfire can be characterized as a combination of the convection and diffusion of heat in neighboring cells. To achieve fast speed, we use a linear equation, similar to Chiba et al.'s</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :</head><label>8</label><figDesc>An image sequence (a) to (d) showing the dynamic change of fire behavior as a torch is moving to the left side of the scene.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Combining Equations 4 and 5, we get f qi´x • e qi t • 1µ f qi´x tµ Ω qi . It is critical to select Ω qi in such a way that the mass and momentum are conserved locally. Based on the work of Chen and Doolean [2], we assume that for each individual packet distribution f qi at each cell, there is always a local equilibrium packet distribution f eq qi . Its value only depends on the conserved quantities ρ and u at that cell. In this way, we get a new equation, also called the kinetic equation:</figDesc><table><row><cell>f qi´x • e qi t • 1µ f qi´x tµ</cell><cell>1 τ´f</cell><cell>qi´x tµ f</cell><cell>eq qi´ρ uµµ</cell><cell>(6)</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Coefficients of the three sub-lattices in the D3Q19 model</figDesc><table><row><cell></cell><cell cols="3">Sub-lattice 0 Sub-lattice 1 Sub-lattice 2</cell></row><row><cell>A q B q C q D q</cell><cell>1 3 0 0 1 2</cell><cell>1 18 1 6 1 4 1 12</cell><cell>1 36 1 12 1 8 1 24</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work has been partially supported by ONR grant N000140110034 and NSF CAREER grant ACI0093157.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Realistic and controllable fire simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Beaudoin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Paquet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Poulin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Graphics Interface</title>
		<meeting>Graphics Interface</meeting>
		<imprint>
			<date type="published" when="2001-06" />
			<biblScope unit="page" from="159" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Lattice Boltzmann method for fluid flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Doolean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annu. Rev. Fluid Mech</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="329" to="364" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Twodimensional visual simulation of flames, smoke and the spread of fire</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Chiba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Muraoka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Miura</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Visualization and Computer Animation</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="37" to="53" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Texture splats for 3D scalar and vector field visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1993-10" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A simple, efficient method for realistic animation of clouds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Dobashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kaneda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yamashita</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Okita</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Nishita</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2000-08" />
			<biblScope unit="page" from="121" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visual simulation of smoke</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001-08" />
			<biblScope unit="page" from="129" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Pratical animation of liquids. Proceedings of SIGGRAPH</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001-08" />
			<biblScope unit="page" from="15" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Modeling the motion of a hot, turbulent gas</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Foster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Metaxas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="181" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Real-time cloud rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Harris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lastra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eurographics Proceedings)</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="76" to="84" />
			<date type="published" when="2001-09" />
		</imprint>
	</monogr>
	<note>Computer Graphics Forum</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Large scale lattice-boltzmann simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">D</forename><surname>Kandhai</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-12" />
		</imprint>
		<respStmt>
			<orgName>University of Amsterdam</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Fast volume rendering and animation of amorphous phenomena</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>King</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Reid</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="229" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<title level="m">Meshes on fire. EG Workshop on Computer Animation and Simulation</title>
		<imprint>
			<date type="published" when="2001-09" />
			<biblScope unit="page" from="75" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Accelerating lattice Boltzmann method on graphics hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Science Department, SUNY at Stony Brook</title>
		<imprint>
			<date type="published" when="2001-04" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report 010416</note>
	<note>revised version submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Three-dimensional parallel lattice boltzmann hydrodynamics simulations of turbulent flows in interstellar dark clouds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Muders</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995-08" />
		</imprint>
		<respStmt>
			<orgName>University at Bonn</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Physically based modeling and animation of fire</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint/>
	</monogr>
	<note>to appear 2002</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Modelling, animation, and visualization of fire</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">E</forename><surname>Nielsen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-04" />
			<pubPlace>Denmark</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Copenhagen</orgName>
		</respStmt>
	</monogr>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">An image synthesizer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Perlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of SIGGRAPH</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="287" to="296" />
			<date type="published" when="1985-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Perlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Hoffert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hypertexture</surname></persName>
		</author>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1989-07" />
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="253" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Synthesizing flames and their spreading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Perry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Picard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifth Eurographics Workshop on Animation and Simulation</title>
		<meeting>the Fifth Eurographics Workshop on Animation and Simulation</meeting>
		<imprint>
			<date type="published" when="1994-09" />
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Particle system-a technique for modeling a class of fuzzy objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Reeves</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of SIGGRAPH</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="359" to="376" />
			<date type="published" when="1983-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stam</surname></persName>
		</author>
		<title level="m">Stable fluids. Proceedings of SIGGRAPH</title>
		<imprint>
			<date type="published" when="1999-08" />
			<biblScope unit="page" from="121" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Depiction of fire and other gaseous phenomena using diffusion processes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Fiume</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIG-GRAPH</title>
		<meeting>SIG-GRAPH</meeting>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="129" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Footprint evaluation for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of SIGGRAPH</title>
		<imprint>
			<biblScope unit="page" from="367" to="376" />
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
