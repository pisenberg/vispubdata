<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Geometric Verification of Swirling Features in Flow Fields</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Jiang</surname></persName>
							<email>jiang@cis.ohio-state.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raghu</forename><surname>Machiraju</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Thompson</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Mississippi State University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Geometric Verification of Swirling Features in Flow Fields</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>feature verification</term>
					<term>vortex detection</term>
					<term>flow field visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this paper, we present a verification algorithm for swirling features in flow fields, based on the geometry of streamlines. The features of interest in this case are vortices. Without a formal definition, existing detection algorithms lack the ability to accurately identify these features, and the current method for verifying the accuracy of their results is by human visual inspection. Our verification algorithm addresses this issue by automating the visual inspection process. It is based on identifying the swirling streamlines that surround the candidate vortex cores. We apply our algorithm to both numerically simulated and procedurally generated datasets to illustrate the efficacy of our approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Large-scale computational fluid dynamics simulations of physical phenomena produce data of unprecedented size. Unfortunately, development of appropriate data management and visualization techniques has not kept pace with the growth in size and complexity of such datasets. One paradigm for large-scale visualization is to browse regions containing significant features of the dataset while accessing only the data needed to reconstruct these regions. The cornerstone of this visualization paradigm is a representational scheme that facilitates progressive access to macroscopic features in the dataset <ref type="bibr" target="#b9">[10]</ref>. In this approach, an automatic feature detection algorithm is used to accurately identify and rank contextually significant features.</p><p>In general, a feature can be defined as a pattern occurring in a dataset that is the manifestation of correlations among various components of the dataset. The swirling features in flow fields, which are the central subject of this paper, are commonly called vortices. By most accounts <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13]</ref>, a vortex is characterized by swirling motion of fluid around a central region. From the morning coffee to the evening bath, it is perhaps one of the most common and natural phenomena occurring in everyday life. Yet, it's very definition still eludes those who are active in its pursuit.</p><p>Despite this lack of formalism, various detection algorithms exist that can identify, to a certain degree, these swirling features. The main deficiency common to these algorithms is not the false positives which they may produce, but rather their inability to distinguish the false positives from the true swirling features. For many, this is due to their heavy reliance on the velocity gradient tensor as a local tool for identifying global features, such as vortices <ref type="bibr" target="#b3">[4]</ref>. As noted by Thompson et al. <ref type="bibr" target="#b18">[19]</ref>, these local techniques are inherently problematic because they do not incorporate the necessary information into their detection process for a global feature.</p><p>The ability to verify the correctness of a candidate feature is essential for any feature-based visualization paradigm. Feature verification can not only improve the quality of the identification process, but also improve its overall performance by obviating the need to apply computationally expensive detection algorithms at all points in the field. Inexpensive and less accurate techniques can be used to identify candidate features which are then subjected to the verification process. By operating only on the candidate features, the more expensive verification process is made computationally efficient. This modus operandi is indispensible in the context of largescale datasets. Further, for features such as vortices, aggregate ver-ification techniques can be developed that capture the global nature of the feature <ref type="bibr" target="#b18">[19]</ref>.</p><p>In this paper, we present an automatic verification algorithm for 3D swirling features in flow fields. This work is an extension from our previous work <ref type="bibr" target="#b6">[7]</ref> on efficiently detecting vortex core regions. We present a geometric approach to verifying vortices that is most consistent with the notion of a swirling flow. In the absence of a formal definition, this is the most logical approach to take for such a visually recognizable feature. Given a candidate vortex core, we measure certain differential geometry properties of the surrounding streamlines to determine whether or not these streamlines are swirling around the core region. If the streamlines satisfy our 2π swirling criterion for 3D vortices, then from a geometric perspective, the candidate vortex core is an actual vortex core.</p><p>Our paper is structured as follows. We first provide a brief review of existing vortex detection algorithms and discuss some of the issues involved in vortex definition. We then describe the vortex core region detection algorithm that we use to identify candidate vortex cores. Then, we provide the implementation details behind our verification algorithm and the results that demonstrate the efficacy of our approach. Finally, we draw conclusions as to the relative merits of our feature verification algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PREVIOUS WORK</head><p>To our knowledge, no attempts have been made to address the issue of feature verification as a post-processing step of feature detection in computational datasets. Although Peikert and Roth <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b13">14]</ref> have suggested using their parallel vectors operator to corroborate the results from another detection operator, their suggested approach lacks the ability to exploit the initial detected results for computational efficiency. More importantly, their suggested approach offers little to address the issue of dealing with false positives.</p><p>For completeness, we briefly review several detection algorithms in the literature. Though these reviews are not meant to be exhaustive, they provide a fairly good overview of the state of the art in detecting vortices in flow fields. The detection algorithm chosen for verification is based on our previous work <ref type="bibr" target="#b6">[7]</ref> on efficiently detecting vortex core regions. We defer its discussion to a later section. It should be noted that each of these algorithms described below may generate false positives and miss otherwise obvious vortices.</p><p>The first group of methods is based on isosurfaces of a scalar field. Levy et al. <ref type="bibr" target="#b7">[8]</ref> developed a method on the assumption that a vortex core is located in a region where the normalized helicity</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>V•(∇V)</head><p>|V||∇V| approaches ±1. In <ref type="bibr">Berdahl and Thompson's [2]</ref> method, the assumption is that two of the eigenvalues of the velocity gradient tensor are a complex conjugate pair in regions of swirling flow. A parameter termed the "swirl" is defined at each point in the domain using the magnitude of the imaginary part of the conjugate pair and the velocity in the plane perpendicular to the eigenvector. According to <ref type="bibr" target="#b1">[2]</ref>, the swirl is nonzero in regions containing vortices and attains a local maximum in the core region.</p><p>Jeong and Hussian <ref type="bibr" target="#b5">[6]</ref> defined a vortex based on the symmetric deformation tensor S and the antisymmetric spin tensor Ω. According to <ref type="bibr" target="#b5">[6]</ref>, if the second largest eigenvalue of S 2 + Ω 2 is negative at a point, that point is contained within a vortex. Additionally, if the second invariant of the velocity gradient tensor <ref type="bibr" target="#b0">1</ref> 2 |Ω| 2 − |S| 2 is positive at a point, the point is contained within a vortex. The main disadvantage with these methods is their difficulty in automatically distinguishing the individual vortices.</p><p>The second group of methods is based on the extraction of vortex core lines. Banks and Singer <ref type="bibr" target="#b0">[1]</ref> developed a predictor-corrector algorithm based on the assumptions that the vortex core is a vorticity line (a streamline in the vorticity field) and that pressure should be minimum in the core. Sujudi and Haimes <ref type="bibr" target="#b17">[18]</ref> described a line-based method that extracts the vortex core by locating points that satisfy the following two conditions: 1) the velocity gradient tensor has a pair of complex eigenvalues and 2) the velocity in the plane perpendicular to the real eigenvector is zero. By connecting these points, a line segment representing the vortex core is constructed, though it is not always possible to form a contiguous line. To address this problem, Haimes and Kenwright <ref type="bibr" target="#b3">[4]</ref> recast the algorithm to be face-based rather than cell-based.</p><p>Roth and Peikert <ref type="bibr" target="#b14">[15]</ref> proposed a different approach for detecting core lines using the parallel vector operator. Rather than performing an eigen-analysis on the velocity gradient tensor, their algorithm detects for parallel alignment between the velocity vector and the acceleration vector. Their approach was especially designed for turbomachinery datasets, which often contain weakly rotating vortices with nonnegligible curvature. Whereas Sujudi and Haimes' <ref type="bibr" target="#b17">[18]</ref> method has difficulty with curved vortices, theirs' performs a correction for the curvature by taking second-order derivatives into account. The main disadvantages with these methods are their computational complexity and inability to produce contiguous lines.</p><p>The third group of methods is based on the geometric properties of streamlines. Portela <ref type="bibr" target="#b11">[12]</ref> developed a collection of mathematically rigorous definitions for a vortex, using set theory and differential geometry. Essentially, his definitions are based on the idea that a vortex is comprised of a central core region surrounded by swirling streamlines. His 2D method detects vortices by verifying whether or not the winding angle of streamlines around a grid point is a scalar multiple of 2π. Sadarjoen et al. <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b16">17]</ref> proposed a simplification to the 2D winding-angle method, by using the summation of signed angles along a streamline instead. The main disadvantage with these methods is that they lack a viable 3D counterpart to their 2D approach -winding angles are only meaningful in 2D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SWIRLING FEATURES</head><p>Without a formal definition, it is not unreasonable to consider a vortex as a swirling feature. Among the existing definitions, the association of swirling motion with the presence of a vortex is the most common thread. This association stems from our visual perception of the swirling phenomena that are pervasive throughout the natural world. However, translating that perceptual understanding of a vortex into a formal definition has been quite a challenge. The difficulty lies in the generality of such definitions. Lugt <ref type="bibr" target="#b8">[9]</ref> proposed the following definition for the presence of a vortex.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A vortex is the rotating motion of a multitude of material particles around a common center.</head><p>The problem with this definition is that it is too vague. Although it is consistent with visual observations, it does not lend itself readily to designs for a detection algorithm. Terms such as rotating motion and material particles are easy to conceptualize, but difficult to implement. In light of this, Robinson <ref type="bibr" target="#b12">[13]</ref> attempted to provide a more concrete definition of a vortex, by specifying the conditions for detecting rotating motion in 3D.</p><p>A vortex exists when instantaneous streamlines mapped onto a plane normal to the vortex core exhibit a roughly circular or spiral pattern, when viewed from a reference frame moving with the center of the vortex core.</p><p>The primary shortcoming of this definition is that it is selfreferential: the existence of a vortex requires knowing the direction of its core. Additionally, no one has been able to utilize it for the development of an effective detection algorithm <ref type="bibr" target="#b0">[1]</ref>. In general, it is difficult to detect the correct reference frames for all types of vortical flows.</p><p>More recently, Portela <ref type="bibr" target="#b11">[12]</ref> developed a collection of mathematically rigorous definitions for a vortex, using elementary tools from set theory and differential geometry. Although his 2D definitions are replete with pedantries and subtleties, his 3D definitions appear less novel and ultimately resemble those of Robinson's <ref type="bibr" target="#b12">[13]</ref>. However, the intuition behind his definitions is quite simple and general: a vortex is comprised of a central core region surrounded by swirling streamlines. He appealed to the Jordan Curve Theorem to distinguish the central core region of a vortex and the winding angle concept to measure the swirling of streamlines. The winding angle of a streamline measures the rotation of that streamline with respect to a given point. Satisfying the swirling criterion means the streamline must have a winding angle of at least 2π. Note that this approach is inherently limited to 2D. Whereas in 2D, curvature alone dictates the rotation of a planar curve, in 3D, both curvature and torison dictate the bending and twisting of the space curve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DETECTION ALGORITHM</head><p>As a pre-processing step to the verification algorithm, most of the existing detection algorithms would suffice. The only requirement is that the output of the detection algorithm must be vortex cores, in the form of either lines or regions. In the case of vortex core lines, the collection of grid cells intersected by the core line is used as input to the verification algorithm. The necessity of this conversion will become clear in the next section when we discuss the verification algorithm in detail.</p><p>The detection algorithm we chose in this case is from our previous work <ref type="bibr" target="#b6">[7]</ref> on efficiently detecting vortex core regions. In this approach, a combinatorial labeling scheme is employed to identify all the grid points that belong to vortex cores and aggregate them into individual regions. Unlike most of the existing detection methods, this labeling scheme is extremely efficient, and its efficacy has been demonstrated in <ref type="bibr" target="#b6">[7]</ref>. What makes this approach so effective at detecting vortex core regions is its close resemblence to Sperner's lemma from Fixed Point Theory in combinatorial topology. The connection between vortices and fixed points (i.e. critical points) are well known <ref type="bibr" target="#b17">[18]</ref>. Whereas the Sperner's lemma labels the vertices of a simplex and identifies the fixed points of a labeled subdivision <ref type="bibr" target="#b4">[5]</ref>, the detection algorithm labels the velocity vectors of the grid points and identifies grid cells that are most likely to contain critical points. Each velocity vector is labeled according to the direction in which it points. Since velocity vectors around core regions exhibit certain flow patterns that are unique to vortices, it is sufficient to examine the immediate neighborhood of a grid point for the existence of those flow patterns. This procedure is sufficient for detecting 2D vortex core regions.</p><p>In 3D, it is necessary to approximate the core direction vector first, and then project the neighboring velocity vectors onto the plane normal to it, before applying the above procedure to the projected velocity vectors. We refer to this plane as the swirl plane because instantaneous streamlines projected onto this plane exhibit a swirling pattern that is commonly associated with 2D vortices. <ref type="figure" target="#fig_0">Figure 2</ref> illustrates the 3D algorithm, along with the swirl plane and the combinatorial labeling scheme. Potential candidates for the core direction vector include the vorticity vector <ref type="bibr" target="#b0">[1]</ref>, which is one of the least computationally intensive methods, and the real eigenvector <ref type="bibr" target="#b17">[18]</ref>, which is one of the most computationally intensive methods. What makes the 3D algorithm unique is its relative insensitivity to core direction approximations. In the detection process, using the vorticity vector to approximate the core direction vector can be just as effective as using the real eigenvector.</p><p>The advantage of this approach over other vortex core region detection algorithms is its ability to segment the core regions individually. This would allow the verification algorithm to proceed directly without any extra processing. Its advantage over vortex core line detection algorithms is its computational efficiency, due to the combinatorial nature of the detection algorithm. Although a vortex core line can more precisely represent a vortex core, this does not imply its detection process is more accurate. This increase in the precision of representation can effect an increase in the complexity of the detection process, a tradeoff that is unnecessary in the context of the verification algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">GEOMETRIC VERIFICATION</head><p>With the existing detection algorithms, one of the most effective means to ascertain the accuracy of the detected results is through visual inspection. By seeding streamlines near the detected vortex cores, one can visualize the swirling patterns that are generally associated with vortices. Both <ref type="bibr" target="#b14">[15]</ref> and <ref type="bibr" target="#b17">[18]</ref> utilized this strategy to build a convincing argument for the validity of their results. The problem with visual inspection is that it requires human intervention, a process that is contrary to the automatic nature of the detection algorithm. And in the context of large-scale datasets, the inspection process becomes highly infeasible.</p><p>The geometric verification algorithm we propose addresses the above issue by automating the visual inspection process. Since formal verification is not possible without a formal definition, geometric verification is the logical alternative. By identifying the swirling patterns surrounding a candidate vortex core, our verification algorithm can arbitrate the presence or absence of a vortex most consistently with visual scrutiny. Although there are limitations to the visual inspection process, it is more practical to formalize that process, as a way to address the false positive issue, than to propose yet another vortex definition.</p><p>Given a candidate vortex core, the underlying goal of our geometric verification algorithm is to identify the swirling streamlines surrounding it, by using elementary differential geometry properties of the streamlines. For the 2D case, both <ref type="bibr" target="#b11">[12]</ref> and <ref type="bibr" target="#b16">[17]</ref> have presented methods that are sufficent for identifying planar swirling streamlines. As described previously, these methods involve measuring the winding angle of a planar streamline and checking if the winding angle is at least 2π, which is a clear indication that the streamline is swirling. However, both approaches cannot be directly extended into 3D, because the winding angle measurement they use is inherently 2D.</p><p>To remedy this problem, Portela <ref type="bibr" target="#b11">[12]</ref> proposed reducing the problem from 3D to 2D by projecting the local velocity vectors onto the plane normal to the vortex core direction, the swirl plane. Note that this is similiar to what Robinson <ref type="bibr" target="#b12">[13]</ref> proposed as the definition of a vortex. The problem with this approach is deciding which local velocity vectors to project onto the swirl plane. Not only would there be an issue with the size of the projected neighborhood, so that enough velocity vectors are projected onto the swirl plane to apply the 2D algorithm, but also with the distortion caused by the projected grid structure. To our knowledge, no viable algorithm based on Portela's <ref type="bibr" target="#b11">[12]</ref> proposed idea exists.</p><p>Similarly, projecting streamlines onto a swirl plane, as Robinson <ref type="bibr" target="#b12">[13]</ref> has proposed, is also problematic because the core direction along a vortex core can vary depending on the curvature of the vortex core. Like tangents along a space curve, the direction vector at a particular point along a vortex core only approximates the core direction within a small neighborhood. Therefore, as soon as the streamline is traced outside of that neighborhood, the validity of the projected streamline on the swirl plane becomes suspect. The situation is exacerbated by slowly rotating streamlines around curved vortex cores, such as those in turbomachinary flow fields described by <ref type="bibr" target="#b14">[15]</ref>. As Banks and Singer <ref type="bibr" target="#b0">[1]</ref> correctly pointed out, this approach does not lend itself conveniently to a viable algorithm.</p><p>Measuring the swirling of a 3D streamline is a nontrivial problem. The difficulty arises from streamlines that swirl around curved vortex cores. As the deficiency in Robinson's <ref type="bibr" target="#b12">[13]</ref> proposal illustrates, the measurement process for 3D swirling has to take into account the curvature of the vortex core. To address this issue, we introduce probe vectors, which can be computed along a streamline at each point. As its name suggests, a probe vector probes the vortex core for the direction vector at that particular point. Since a direction vector approximates the local behavior of a vortex core, it provides the necessary curvature information to the measurement process.</p><p>We also introduce a local alignment process, based on the probed direction vectors, to accommodate vortex cores with nontrivial curvatures. The process individually rotates the direction vectors to align with the z-axis, and then applies the same transformation to the streamline. From a streamline's perspective, this transformation would locally straighten any curved vortex cores. Consequently, the transformed streamline can be projected onto the (x, y)-plane for the 2D winding angle computation. However, locally transforming the streamline can result in irregular geometry, because the alignment transformation is nonuniform for curved vortex cores. To avoid this problem, we transform the tangent vectors of a streamline instead. In tangent space, the transformed tangent vectors are projected onto the (x, y)-plane to create a tangent profile. Rather than computing the winding angle of the projected streamline, we compute the angle spanned by the tangent profile to determine if it satisfies the 2π swirling criterion.</p><p>Before discussing the implementation details of our geometric verification algorithm, we illustrate it using two canonical examples from the literature: the Rankine vortex and the bent helical vortex. These two vortices are ideal for demonstrating the geometric verification process, because the geometry of their streamlines are uniform.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Rankine Vortex</head><p>A fluid motion composed of a solid body rotation with angular velocity Ω within a certain radius R and a potential vortex outside of this radius is called a Rankine vortex <ref type="bibr" target="#b8">[9]</ref>. The Rankine vortex is a good model for a real vortex because of the concentrated vorticity in its core region and the decay of the circumferential velocity as the distance from the core is increased. For the three-dimensional vortex, we have added a constant velocity U along the axis of the </p><formula xml:id="formula_0">u θ =    Ω r, r ≤ R Ω R 2 r , r &gt; R u z = U<label>(1)</label></formula><p>The velocity field defined by Equation 1 satisfies the continuity equation for incompressible flow and therefore represents a kinematically possible velocity field. <ref type="figure" target="#fig_1">Figure 3</ref> illustrates a Rankine vortex with R = 0.1 and Ω = 10. The velocity field was generated on a 128 3 cartesian grid. The yellow region is an extracted isosurface, representing the vortex core region, and the blue lines are the swirling streamlines, seeded near the vortex core region.   To illustrate the geometric verification process, we seeded a streamline near the vortex core and traced it for one-third of a spiral, and then for another one-third. This is illustrated in <ref type="figure" target="#fig_4">Figure 5</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Bent Helical Vortex</head><p>The bent helical vortex is an important model for turbomachinery flow fields <ref type="bibr" target="#b13">[14]</ref>. The model consists of a helical flow field built from a rigid rotation in the (x, z)-plane, a constant motion in y-direction and a bent of radius R in the (x, y)-plane. The velocity field for the bent helical vortex is given in the (x, y, z) coordinate system by</p><formula xml:id="formula_1">u x = − ω x z R r 2 − γ y r u y = − ω y z R r 2 + γ x r u z = R − R 2 r ω<label>(2)</label></formula><p>where</p><formula xml:id="formula_2">r = x 2 + y 2 .</formula><p>R is the radius to which the vortex core is bent, γ is the axial component along the core, and ω is the rotation component about the core. This flow field has zero divergence (i.e. it conserves mass for a incompressible medium), but it is not an exact solution of the Navier-Stokes equations, and it possesses a singularity on the z-axis. However, in the vortex core region there are no singularities or critical points, and similar flow patterns have been found in numerical solutions from a Navier-Stokes solver <ref type="bibr" target="#b13">[14]</ref>.  <ref type="figure" target="#fig_6">Figure 6</ref> illustrates a bent helical vortex with R = 1, ω = 6 and γ = 0.5. The velocity field was generated on a 128 3 cartesian grid. The yellow region represents the detected vortex core, and the blue lines, the swirling streamlines. Clearly, the vortex core is curved with a nontrivial curvature. To illustrate the efficacy of our local alignment transformation, we seed a streamline near one end of the bent vortex core and compute its tangent space both with and without the transformation. <ref type="figure" target="#fig_7">Figure 7</ref>(left) illustrates the streamline, along with its tangent vectors and probe vectors. <ref type="figure" target="#fig_7">Figure 7</ref>(right) illustrates both tangent spaces. The difference between the two is quite clear: without transformation, the tangent vectors can point in various directions without any particular order, and with transformation, the tangent vectors uniformly revolve around the z-axis, forming a cone shape with its apex at the origin of the tangent space. To demonstrate the effectiveness of our geometric verification algorithm on slowly rotating, curved vortices, we conducted several experiments using the bent helical vortex model, with R = 1, γ = 0.5, and ω varying from 6 down to 1. <ref type="figure" target="#fig_8">Figure 8(left)</ref> illustrates the results for ω = 4, and <ref type="figure" target="#fig_8">Figure 8(right)</ref>, the results for ω = 2. For ω &lt; 1, the tangent profiles did not satisfy the 2π swirling criterion (i.e. they did not complete a revolution in the (x, y)-plane). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">IMPLEMENTATION DETAILS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Automatic Verification</head><p>The main premise of our geometric verification algorithm is that it can automatically determine the presence or absence of a vortex core. To this end, the algorithm must be able to perform verification without any user interaction. Given a candidate vortex core, the algorithm proceeds to first locate the tip of the core; more specifically, it locates the upstream extent of the vortex core. Once the starting point is located, it seeds streamlines around that location and traces them until either their tangent profiles satisfy the 2π swirling criterion, or they exit the computational grid. If none of the streamlines satisfy the 2π swirling criterion, then it proceeds downstream, in the direction of the core, to a nearby point within the core region, (e.g. one grid cell unit away from the preceding point). The algorithm repeats the above procedure until either the 2π swirling criterion is satisfied, or the starting point is located outside the bounding box.</p><p>The search downstream for swirling streamlines is necessary because existing detection algorithms do not produce ideal candidate vortex cores. Besides the false positives that are generated, an actual vortex core may be detected as several individual pieces <ref type="bibr" target="#b3">[4]</ref>, or it may be aggregated with other grid points into a region that does not swirl everywhere <ref type="bibr" target="#b6">[7]</ref>. It is for the latter reason that we perform an exhaustive search over the length of the candidate vortex core. Consequently, deciding that a candidate vortex core is not an actual vortex core requires the most computation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Starting Point</head><p>Depending on the segmentation process and the orientation of the vortex, it is not known a priori where the upstream extent of the candidate core region is located. Our heuristic for locating the starting point of the verification algorithm involves the bounding box of the core region. In the process of computing the bounding box, the six boundary grid cells of the core region, tangent to the six bounding planes, are identified automatically. For each grid cell, compute the inner product between its core direction vector and the inwardpointing normal of its tangent bounding plane. If the inner product is negative, then its core direction vector must be pointing outside the bounding box; similarly, if it is positive, its core direction vector must be pointing inside the bounding box. Choose the grid cell with the largest positive inner product to be the starting point of the verification algorithm. (It should be noted that this heuristic is unnecessary for candidate core lines, since one its two ends has to be the starting point.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Seeding Strategy</head><p>To further exploit the candidate vortex cores, we present a featureguided seeding strategy designed specifically for seeding streamlines near a vortex core. Given a point within a core region, compute its direction vector. The seed points are placed on the swirl plane, normal to the direction vector, equidistant from the core point. In other words, the seed points are uniformly distributed on a circle in the swirl plane. For an ideal vortex core, this arrangement would produce the most number of swirling streamlines, given that the radius of the circle is within the swirl region. In the experiments we have conducted, the distance from the core, beyond which most streamlines stop swirling, varies from fifty grid cells for a high grid resolution to five grid cells for a low grid resolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Probe Vectors</head><p>The probe vectors are computed for every point along a streamline. Since they probe a vortex core for the direction vectors, it is essential for them to point consistently toward the core region from the streamline. To accomplish this, we introduce a procedure that iteratively computes the probe vectors based on the rotations of the tangent vectors in tangent space. For each streamline, the procedure initializes the first probe vector by subtracting its seed point from the starting point. Since the seed point lies in the swirl plane of the starting point, the initial probe vector certainly points toward the core region.</p><p>As a streamline swirls around a vortex core, the probe vectors must rotate along with it in order to maintain its focus on the vortex core. The rotation between the probe vectors is identical to the rotation between the tangent vectors. Therefore, after computing the initial tangent vector and probe vector, compute the next tangent vector, determine the rotation in tangent space between the two tangent vectors, and apply the rotation to the initial probe vector to generate the next probe vector. And the procedure iterates by alternately computing the tangent vector and the probe vector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS</head><p>Besides the Rankine vortex and the bent helical vortex, we also tested our geometric verification algorithm on three other datasets. The first dataset is the test tornado dataset from LLNL <ref type="bibr" target="#b2">[3]</ref>, illustrated in <ref type="figure">Figure 1</ref>. The dataset is defined on a 48 3 cartesian grid. The only vortex core detected in this dataset is curved at two places in the middle and is illustrated, along with its swirling streamlines, in <ref type="figure">Figure 1</ref>(middle). Our verification algorithm was able to identify swirling streamlines throughout the extent of the vortex core. <ref type="figure">Figure 1</ref>(left) illustrates one such streamline, spanning the entire length of the vortex core, along with its tangent vectors and core direction vectors, colored in purple. To demonstrate the verification process in more detail, we seeded a streamline near one of the two curved portions of the core. <ref type="figure">Figure 1(right)</ref> illustrates the tangent vectors and the probe vectors along this streamline. Due to the high rotational velocity around the core, the tangent vectors are nearly coplanar with the (x, y)-plane in tangent space. In this case, the tangent profile readily satisfies the 2π swirling criterion.</p><p>The next dataset we tested is the blunt fin dataset, defined on a 40x32x32 curvilinear grid. There are three vortex cores detected in this dataset: one along the floor and two along the fin. They are illustrated <ref type="figure" target="#fig_9">Figure 9</ref> along with their swirling streamlines. For the vortex core along the floor, its rotational velocity is relatively low, and its swirling streamlines fade quickly downstream from its tip.  <ref type="figure">Figure 10</ref>(top left), both the core region and the streamlines exhibit a flat shape that does not resemble the cylindrical shape of an ideal vortex. In the flat regions in <ref type="figure">Figure 10(top right)</ref>, the tangent vectors are nearly colinear, creating two clusters in tangent space that are opposite of each other. Even in this case, the tangent profile satisfies the 2π swirling criterion.</p><p>The last dataset we tested was the delta wing dataset from NASA, defined on a 67x209x49 curvilinear grid, with an angle of attack at 30 • . With this dataset, we can demonstrate not only the verification process for vortex cores but also the elimination process for false positives. In total, there are fourteen detected vortex cores in this dataset, of which six exhibit swirling motion and the other eight do not. We attribute these eight false positives to be artifacts of the detection algorithm. <ref type="figure" target="#fig_10">Figure 11</ref>(left) illustrates the six vortex cores in yellow and the eight false positives in light green. <ref type="figure" target="#fig_10">Figure 11</ref>(middle) illustrates the six vortex cores along with their swirling streamlines. For the two wing-edge vortices, our verification algorithm did not identify any swirling streamlines until reaching the middle portion of their vortex cores. <ref type="figure" target="#fig_10">Figure 11</ref>(right) illustrates the tangent vectors and probe vectors along a swirling streamline of the vortex core on the left wing. The tangent profile clearly satisifies the 2π swirling criterion. <ref type="figure" target="#fig_0">Figure 12</ref> illustrates the difference in tangent profiles between a vortex core and a false positive. Whereas the top tangent profile clearly satisfies the 2π swirling criterion, the bottom one does not. The bottom tangent profile is typical of streamlines from the false positive: the angle spanned is less than one quadrant of the (x, y)plane in tangent space. The slight bent in the streamlines account for most of the variations in the tangent profile.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>We have presented a geometric verification algorithm for vortical features in flow fields. This algorithm addresses the need to deal with false positives that are inevitably generated from existing detection algorithms. It automates the visual inspection process that has become the defacto method for verifying detected results. Without a formal definition, our verification algorithm proceeds to identify the swirling streamlines that are commonly associated with 3D vortices. Given a candidate vortex core, our verification algorithm automatically searches for the swirling streamlines surrounding the core region, where the measure for swirl is defined in terms of the differential geometry properties of the streamline. We have successfully demonstrated the efficacy of our approach using several <ref type="figure">Figure 10</ref>: Despite the flatness of the vortex core region and its swirling streamlines, its tangent profile still satisfies the 2π swirling criterion. standard examples and datasets.</p><p>One of the limitations of our apporoach is that it does not address the frame of reference issue that is central to unsteady flows. Our verification approach may encounter difficulty with vortices in unsteady flows. In our opinion, this is a difficult problem that has not been addressed adequately. We plan to address this issue formally in future work, along with tracking swirling features robustly and efficiently in unsteady flows.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>3D vortex core region detection algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>3D Rankine vortex vortex (in this case, the z-axis). The equations describing the velocity field of the Rankine vortex are given in cylindrical coordinates (r, θ , z) by u r = 0</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>A streamline seeded near a Rankine vortex: (a) Tangent vectors, (b) probe vectors and (c) tangent profile.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4</head><label>4</label><figDesc>illustrates the tangent vectors, probe vectors and tangent space computed along a streamline. The dark green arrows along the streamline inFigure 4(a)are the tangent vectors. The orange red arrows pointing toward the vortex core inFigure 4(b)are the</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Steady progression of the verification process for the Rankine vortex: (left) one-third and (right) two-third of a complete spiral. probe vectors. And Figure 4(c) is the tangent space, in which the tangent vectors are projected onto the (x, y)-plane to generate the tangent profile.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Figure 5(left) illustrates the first third and Figure 5(right), the second third. Note the steady progression of the tangent profile around the (x, y)-plane as the streamline spirals around the vortex core. Each complete spiral corresponds to a complete revolution in the (x, y)plane of the tangent space.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Bent helical vortex<ref type="bibr" target="#b13">[14]</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>Difference between tangent profiles with (bottom) and without (top) the local alignment transformation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :</head><label>8</label><figDesc>Effectiveness of our verification algorithm for slowly rotating, curved vortices: (left) ω = 4 and (right) ω = 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :</head><label>9</label><figDesc>Blunt fin dataset Upon a closer inspection in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :</head><label>11</label><figDesc>The delta wing dataset: (left) vortex cores in yellow and false positives in light green, (middle) vortex cores and their swirling streamlines and (c) verification process for the right wing vortex.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 :</head><label>12</label><figDesc>Difference in tangent profiles between a vortex core and a false positive.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">ACKNOWLEDGMENTS</head><p>We would like to thank Prof. Han-Wei Shen from The Ohio State University for providing us with the delta wing dataset. This work is partially funded by the NSF under the Large Data and Scientific Software Visualization Program (ACI-9982344), the Information Technology Research Program (ACS-0085969), a grant from the Army Research Office (DAA D19-00-1-0155) and an NSF Early Career Award (ACI-9734483). We also thank the anonymous reviewers for many useful suggestions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A Predictor-Corrector Technique for Visualizing Unsteady Flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="151" to="163" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Eduction of Swirling Structure Using the Velocity Gradient Tensor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Berdahl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AIAA J</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="97" to="103" />
			<date type="published" when="1993-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Texture Splats for 3D Vector and Scalar Field Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;93</title>
		<meeting>IEEE Visualization &apos;93</meeting>
		<imprint>
			<date type="published" when="1993-10" />
			<biblScope unit="page" from="261" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">On the Velocity Gradient Tensor and Fluid Feature Extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haimes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kenwright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AIAA 14th Computational Fluid Dynamics Conference</title>
		<imprint>
			<date type="published" when="1999-06" />
		</imprint>
	</monogr>
	<note>Paper 99-3288</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">A Combinatorial Introduction to Topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Henle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>Dover</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">On the Identification of a Vortex</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hussain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">285</biblScope>
			<biblScope unit="page" from="69" to="94" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A Novel Approach to Vortex Core Region Detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Joint Eurographics-IEEE TCVG Symposium on Visualization</title>
		<imprint>
			<date type="published" when="2002-05" />
			<biblScope unit="page" from="217" to="225" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Graphical Visualization of Vortical Flows by Means of Helicity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Degani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Seginer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AIAA J</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1347" to="1352" />
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Vortex Flow in Nature and Technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lugt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1972" />
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">EVITA -Efficient Visualization and Interrogation of Tera-Scale Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K</forename><surname>Soni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Mining for Scientific and Engineering Applications</title>
		<editor>R. Grossman et al.</editor>
		<imprint>
			<publisher>Kluwer Academic Publisher</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="257" to="279" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Operator -a Vector Field Visualization Primitive</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;99</title>
		<meeting>IEEE Visualization &apos;99</meeting>
		<imprint>
			<date type="published" when="1999-10" />
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
	<note>The &quot;Parallel Vectors</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Identification and Characterization of Vortices in the Turbulent Boundary Layer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">M</forename><surname>Portela</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Coherent Motions in the Turbulent Boundary Layer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Robinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Rev. Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="601" to="639" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Automatic Extraction of Vortex Core Lines and Other Line-Type Features for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roth</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
		<respStmt>
			<orgName>Swiss Federal Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A Higher-Order Method for Finding Vortex Core Lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;98</title>
		<meeting>IEEE Visualization &apos;98</meeting>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="page" from="143" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Extraction and Visualization of Geometries in Fluid Flow Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">A</forename><surname>Sadarjoen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
		<respStmt>
			<orgName>Delft University of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Selective Visualization of Vortices in Hydrodynamic Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">A</forename><surname>Sadarjoen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">G</forename><surname>Pagendarm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;98</title>
		<meeting>IEEE Visualization &apos;98</meeting>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="volume">558</biblScope>
			<biblScope unit="page" from="419" to="422" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Identification of Swirling Flow in 3D Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sujudi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haimes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AIAA 12th Computational Fluid Dynamics Conference</title>
		<imprint>
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
	<note>Paper 95-1715</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Physics-Based Feature Mining for Large Data Exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Nair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Craciun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Venkata</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computing in Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="22" to="30" />
			<date type="published" when="2002-07" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
