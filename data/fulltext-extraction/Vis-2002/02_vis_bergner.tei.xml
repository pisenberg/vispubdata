<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Spectral Volume Rendering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><surname>Bergner</surname></persName>
							<email>sbergner@cs.uni-magdeburg.de</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Simulation and Graphics † Graphics</orgName>
								<orgName type="laboratory">Usability, and Visualization Lab ‡ School of Information Systems</orgName>
								<orgName type="institution" key="instit1">University of Magdeburg</orgName>
								<orgName type="institution" key="instit2">Simon Fraser University University of East</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Torsten</forename><surname>Möller</surname></persName>
							<email>torsten@cs.sfu.ca</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><forename type="middle">S</forename><surname>Drew</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Graham</forename><forename type="middle">D</forename><surname>Finlayson</surname></persName>
							<email>graham@sys.uea.ac.uk</email>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">IEEE Visualization</orgName>
								<address>
									<addrLine>2002 Oct. 27 -Nov. 1</addrLine>
									<postCode>2002</postCode>
									<settlement>Boston</settlement>
									<region>MA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Spectral Volume Rendering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism-Color</term>
					<term>shading</term>
					<term>shadowing</term>
					<term>and texture I.3.6 [Computer Graphics]: Methodology and Techniques-Interaction techniques spectral volume rendering</term>
					<term>post-illumination</term>
					<term>interactive re-lighting</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Anglia (a) (b) (c) (d) Figure 1: Raycast image of a frog using spectral colours. The images can be re-illuminated with different light sources in real-time. By using specially designed materials, this allows one to accentuate or hide additional details.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The challenges of volumetric visualization arise from the size of volume data as well as the complexity of the data. One of the key goals of volume graphics is the interactive exploration of volumetric data. Exploration of data includes two important aspects -the change of the viewpoint as well as the change of the visible parts of the data (manipulated through the transfer function.)</p><p>Much research has focused on the quick rendering of the data in order to enable (real-time) interaction and hence to improve the 3D understanding of the data. The interactive manipulation of the viewpoint allows us to recover a 3D understanding from a series of 2D screen projections making use of the kinetic depth effect.</p><p>Another important aspect of volume data exploration is the ability to manipulate colour and opacity of voxels to adjust their visibility and appearance. Transfer function design is a vibrant research area for the development of new ideas and alternative approaches. The basis of transfer function design has been the assignment of R, G, B, and a transparency value α for each voxel.</p><p>Many algorithms gain speed by assuming that the transfer function is fixed. While this seems a rather restrictive assumption, we demonstrate in this paper that we can still manipulate the visualization to potentially gain more insight into our dataset simply by controlling the light sources. We show how to do this in real-time for any volume rendering algorithm. Previous transfer function designs have been carried out using the restrictive RGB colour model. Several researchers have shown that this colour model is not adequate for accurate and high-quality visualizations (see, e.g., <ref type="bibr" target="#b8">[9]</ref>). Hence we extend transfer function design to non-restrictive colour spectra. This enables us to exploit to our advantage certain phenomena of colour that are usually undesired. Our main idea is to make use of the concept of metamers. Metamers are spectra that appear perceptually identical under a certain light. If we are assigning metameric colours to certain data intensity ranges (using spectral transfer functions), we have the ability to visually merge these ranges into one colour under a specific light. By changing the light source we then can visually separate these ranges. This has the potential to help the user explore the relationships between certain intensity ranges.</p><p>Spectrally accurate rendering is dependent on a new method <ref type="bibr" target="#b4">[5]</ref> for spectral multiplication. In this method, full-spectrum accuracy is maintained throughout light-interaction accumulation by means of a special intermediate low-dimensional colour-vector space, typically of dimension 5 to 7. Furthermore we show that we can change the light source interactively (15 fps) using what we term post-illumination. This makes this concept very attractive as an enhanced data exploration technique as well as practical for inclusion into existing visualization packages.</p><p>The rest of the paper is structured into the following sections.</p><p>Section 2 summarizes previous work. In §3 we present the heart of our paper: the enhancement to transfer function design that enables spectral colours. In §4 we explain our post-illumination framework -this enables the interactive manipulation of rendered images. Section 5 contains necessary details for the replication of our work, while §6 discusses our results. Some ideas for future extensions of this work are discussed in §7, and conclusions are drawn in §8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>In the past five years we have seen great advances in the area of real-time volume graphics. Special hardware for volume rendering, known as VolumePro <ref type="bibr" target="#b27">[27]</ref>, was successfully introduced and is commercially available. Much improved consumer hardware is available that has been efficiently exploited for volume rendering using texture mapping capabilities (such as <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b28">28]</ref>) as well as many new features of modern graphics cards <ref type="bibr" target="#b10">[11]</ref>. Exciting new insights into software-based algorithms have brought high-quality interactive visualizations within reach. The UltraVis system <ref type="bibr" target="#b13">[14]</ref> achieves 5-10 frames per second on moderate datasets through an optimized memory architecture. Other improved data structures such as an adjacency list or an RLE based data structure were introduced to speed up the splatting algorithm tremendously <ref type="bibr" target="#b24">[24,</ref><ref type="bibr" target="#b10">11]</ref>. The Shear-Warp approach <ref type="bibr" target="#b14">[15]</ref> as well as Fourier Volume Rendering <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b30">30]</ref> enable software-only real-time rendering under quality degradation.</p><p>In the area of data exploration through transfer function manipulation, the visualization community has seen great advances as well. Traditionally, a transfer function simply depends on the data values only. In order to strengthen transition regions (regions in which data values change significantly), Levoy <ref type="bibr" target="#b15">[16]</ref> suggested considering the data value as well as the magnitude of the local derivative. Kindlmann <ref type="bibr" target="#b11">[12]</ref> et al. extended this idea to include the second derivative as well. The contour spectrum, as proposed by Bajaj et al. <ref type="bibr" target="#b0">[1]</ref> uses more general criteria such as contour area and gradient integral to select a transfer function.</p><p>Enhanced histograms (Laplacian-weighted) have been used as a backdrop to the transfer function widget by Pekar et al. <ref type="bibr" target="#b26">[26]</ref> This gives the user a better context for finding and selecting meaningful transfer functions. Kniss et al. <ref type="bibr" target="#b12">[13]</ref> have designed a transfer function widget that builds on the ideas of Kindlmann et al. <ref type="bibr" target="#b11">[12]</ref> of exploring the 3D transfer function space. They use a probe in order to correlate the real 3D data with the 3D transfer function space.</p><p>A totally different approach was taken by Marks et al. <ref type="bibr" target="#b18">[19]</ref>, who used genetic algorithms to visually explore the space of all possible transfer functions. They created a widget that groups images according to their visual similarities and lets the user pan and zoom within that space in order to select the appropriate visualization.</p><p>Ebert et al. <ref type="bibr" target="#b5">[6]</ref> automatically determine colour and opacity values by using photographic volumes, such as provided by the Visible Human project. Utilizing additional photographic information is an important step towards rendering photo-realistic volumetric scenes. Thus, their method could be a promising basis for spectral rendering.</p><p>Since we are interested in maintaining correct spectral information, we should consider past attempts to accurately model spectra in an efficient manner. Certainly, the most straightforward method of dealing with spectral information is to simply carry spectrally point-sampled data through any rendering calculation. Simply sampling at a uniform interval, however, would mean carrying too many samples -real surfaces and illuminants are typically measured at &gt;100 sample points and represented using 31 samples from 400 to 700nm at 10nm intervals. Non-uniform sampling has been proposed to optimize the representation with respect to human perception, and other methods of filtered sampling have been used for most computations. Point sampling has the benefit of remaining most faithful to the original measurement representation, but to achieve high accuracy a large number of samples has to be taken. To reduce dimensionality Rougeron et al. <ref type="bibr" target="#b29">[29]</ref> proposed a multiresolution representation for spectra using a wavelet basis. As light spectra bounce through the scene the representation is progressively refined to maintain given error bounds. This model provides controllable quality with a reasonable demand on storage. The only drawback is the computational effort of representing and operating on different resolutions. In volume rendering adaptive refinement is mostly not necessary because most techniques only take primary scattering events into account.</p><p>Polynomial models have also been proposed for spectral representation and recently used in image synthesis. However, when the polynomial degree becomes large (≥7) computational instability arises due to the high-power terms. Other linear models have typically been based on eigenfunction expansions of collections of spectral power distributions. Such finite-dimensional models offer optimal representation, in terms of variance-accounted-for, and generally have low dimension (6 to 8). Peercy <ref type="bibr" target="#b25">[25]</ref> made good use of such models in an attempt to integrate spectra into surface graphics. However, one is still left with a matrix multiply at each interaction with matter and this presents a stumbling block for using the method .</p><p>This issue is precisely what the new colour-vector representation we present here avoids: spectral multiplication is reduced to a simple extension of RGB-colour componentwise multiplication <ref type="bibr" target="#b4">[5]</ref>. Of course, in the end what we render is colour, not spectra, using some 3-dimensional colour space such as RGB, CIE XYZ, or CIE Lab. The method we present here essentially creates a new slightly higher-dimensional colour space (5 to 7 component) such that the usual graphics method of multiplying portions of RGBs at each interaction carries through, but with spectral accuracy as well. Three-dimensional colour is calculated only at the last step, after all light interactions are complete.</p><p>Finally, Noordmans et al. <ref type="bibr" target="#b23">[23]</ref> integrate spectral colour models into a volume rendering pipeline. They discuss different renderers by distinguishing achromatic, elastic and inelastic scattering (particles) independent of achromatic or chromatic absorption (medium). To speed up their rendering, they go from rendering full/actual spectra towards rendering coefficients of materials, which occupy distinct spectral bands. By limiting spectral absorption to be constant for these groups, the rendering computation becomes equivalent to RGBA compositing. The important differences are that these materials get correct colours and that it is possible to have selective absorption by other materials. The use of sharp banded, piecewise constant absorption allows them to set up a general spectral renderer with the ability to show inner structures through solid exterior. The difference in our approach is to gain performance by using an optimized linear colour model throughout the entire rendering process. This allows us to perform full spectral multiplications with minimal computational effort. The rendering is not restricted to a given number of materials, as for Noordmans. Our method also provides more freedom in the way spectra are changing while interacting within the scene. This is essential for more advanced illumination models. As well, we discuss the question of how to sensibly create and use spectra, an important issue for volume rendering and for computer graphics in general not addressed by Noordmans.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">INTERACTION ICON</head><p>A brute-force extension to current transfer functions would be to allow the user to continuously vary each spectral band individually for each data-point, just as is done with the RGBα model. However, the manipulation of just 3 colour-bands for RGB is found to be unintuitive, and this will get even worse for more colour-bands. Hence our goal is to create certain materials, which can be used to great effect. While material assignment has been used success-fully in volume rendering before ( <ref type="bibr" target="#b3">[4]</ref>), using full spectra provides a good deal more freedom in designing transfer functions. A careful strategy is required to sensibly make use of this freedom. A useroriented integration of spectral concepts into a volume rendering pipeline will have to consider the following steps:</p><p>1. Materials and light sources have to be designed with an eye to their use in volume rendering: metamers can and should be used to pick out particular regions of interest.</p><p>2. Materials are assigned to spectral transfer function values in order to create the most distinct perceptual discrimination.</p><p>3. Finally, we are able to navigate through different visualizations by controlling the light source. Since multiple light dimensions are involved we create a new interaction icon.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Material Design</head><p>The goal is to construct colour constellations that are useful for the visualization task. Real-world materials and light sources can form a basis from which to proceed, and in fact it may be useful to model real materials. However, we may also introduce new artificial materials (with non-physical spectral bands, e.g., negative wavelength amplitudes) with differing properties that produce colours that are indistinguishable from real ones, or contrasting colours. While there is a vast number of possible material designs, we wanted to find materials that would help the user to gain a better understanding of the dataset. Further we were hoping to exploit certain features that colour spaces have to offer. Specifically we made use of the following concepts:</p><p>• Metamerism -the colour-matching of differing spectra under one or several lights -can be used to merge volume structures with the background. Alternatively, changing the light can separate materials that were previously metameric, thus creating the ability to emphasize certain structures.</p><p>• "Colour constancy" can be used: i.e., given the high dimensionality of spectra we can design materials that move together (or do not move) in colour space. This allows a situation in which only one thing changes at a time, thus focusing attention to a specific feature.</p><p>By assigning distinct reflectances to distinct materials we are able to separate materials. However, we created materials such that they interact with the light source in such a way that the resulting colour is identical for our visual sensors (metamers) and hence we have the ability to merge certain materials and therefore focus or de-focus on said materials. The use of concepts of colour constancy allows us to create light sources in connection with the materials, which will leave the colour of some materials the same and only change the colour of the materials we intend to influence with that light.</p><p>Hence within the same visualization (without another change of the transfer function) we are able to emphasize and de-emphasize particular regions of interest in connection with particular light sources, independently of other materials in the scene. Therefore we can help the user understand the relationships between these materials. We can create light-sliders that are attached to particular regions and hence will only influence that region. This is demonstrated in <ref type="figure">Figure 1</ref>. In <ref type="figure">Figure 1a</ref> we designed light 1 to make all materials appear equal. Light 2 has been designed to highlight the stomach and intestines of the frog (seen in <ref type="figure">Figure 1c</ref>). <ref type="figure">Figure 1b</ref> shows an in-between frame, where the stomach starts to become more visible.</p><p>Since traditional colour theory usually describes only phenomena that occur in the real world, this restricts us to non-artificial metameric materials. However, it would be desirable to design materials that disappear entirely from the image, if so desired by the user. These materials are called metameric blacks, i.e., materials with zero RGB under some specific set of lights. This phenomenon doesn't normally appear in real life and hence needed an extension of the theory. In rendering, alpha compositing still takes place, so occlusion of other materials is not in fact undone. Nevertheless, it is possible to introduce materials that only scatter light but do not actually have an alpha value to diminish light that comes from the back. If those X-ray materials turn black under a certain light they entirely disappear from the image sum and free the view to things that they obscure. Since they will always have an X-ray like look, it is not possible to draw crisp surfaces with such materials. In <ref type="figure">Figure</ref> 1d we see that part of the frog's flesh has disappeared. This is due to metameric blacks.</p><p>The mathematical details for the material design are published in our technical report <ref type="bibr" target="#b1">[2]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Spectral Transfer Functions</head><p>Transfer functions shall now consist of mappings from data values to spectral materials instead of RGB values. The resulting freedom in design requires a systematic approach to generate both materials and lights, with guiding principles set out in §3.1. The transfer function is designed with a view to assigning spectral materials to distinct features in order to prepare a set of different visual situations for the user. Each combination of lights and materials is meant to highlight distinct qualities of the dataset, with mixing properties of views adhering to mixtures of lights: we may wish to view several features at once, and this can be accomplished by mixing lights that pick out each feature separately. The transfer function shown in <ref type="figure" target="#fig_0">Fig. 2</ref> assigns materials to different intervals of data values that represent distinct segments. The height of the function represents alpha values, which are more opaque for some intervals. The actual colour shown on the screen is determined using a mixture of lights. The colours change as the light for the scene is changed using the control sliders on the right. Thus, the materials can emphasize certain qualities of the dataset. The goal is to have relevant structures emerge or fade away under different lights. These features can be distinct segments or other local quantities, such as gradient length or local variance, etc. This allows control of visibility of several features focusing and defocusing the attention of the user.</p><p>Since we are creating and assigning materials (and lights) with certain properties, we can incorporate our ideas within any transfer function design that has been proposed so far. Instead of assigning RGB values, one can assign material spectra to certain data values. Hence we can integrate these ideas into the framework proposed by e.g., either Kniss <ref type="bibr" target="#b12">[13]</ref> or Pekar <ref type="bibr" target="#b26">[26]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Navigating Visibility</head><p>We can design materials and lights such that each light influences exactly one material. Hence a linear combination of the lights will create a mixed rendition of the scene. Assuming that we have n materials and hence n lights, we have a n-dimensional space to navigate to produce different visualizations. This is potentially a difficult, if not impossible, task.</p><p>One way to proceed is to have a separate intensity-slider for each light attached. This is an important interaction method and is hence implemented in our program (see <ref type="figure" target="#fig_1">Fig. 3a)</ref>. While changing the light source can also change the overall illumination of the scene, one might want to normalize by the overall brightness. This can then be controlled by a separate intensity slider. This interaction method provides versatile control because any combination of lights can be represented. Hence one is guaranteed to be able to explore the entire n-dimensional visualization space.</p><p>Since for some applications this completeness is not relevant, it is worthwhile to consider a simpler, but possibly more restrictive interaction method. For some problems it is not necessary to set a specific combination of lights. Instead it is enough to smoothly interpolate between certain key constellations. That especially applies to the interactive exploration of a volumetric rendering. The pure lights are most interesting and any combination in between can be chosen somewhat arbitrarily. Another aspect is that controlling all sliders requires several clicks and careful aiming for the slide button. A more intuitive interaction metaphor would include all light sources within an interaction widget. For this purpose we suggest a two-dimensional n-gon slider, mapping a 2D space into the ndimensional parameter space (see <ref type="figure" target="#fig_1">Fig. 3b</ref>). Our n light sources are the vertices of the n-gon. Any position the plane characterizes a weighted sum of the light sources that make up the n-gon. This weighted light is weighted by the inverse distances to the light sources marked by the vertices. When the position coincides with the position of a light source in the widget, then the influence of all other light sources is eliminated. Hence this widget allows one to focus on one particular material attached to this light source at a time. The subspace of lights achieved this way can be further controlled by moving the control points around or switching them off, thus making the subspace take on a new 'shape'. This makes the slider more versatile. In particular, <ref type="figure">Fig. 1c</ref> shows the change from <ref type="figure">Fig. 1b</ref> after switching off the light that illuminates the flesh of the frog.</p><p>Our new proposed interaction widget implements three different interaction metaphors:</p><p>1. move light slider (change weights by distance), 2. move light nodes (change shape of 2D mapping in higherdimensional parameter space, correlate dimensions by spatial distance in slider plane),</p><p>3. switch lights on/off (reducing dimensionality, comparable to taking a light node and moving it away; for deactivation the light can keep its position in the mapping plane.)</p><p>This type of 2D slider may be useful for other tasks, such as navigating between different points of view, controlling alpha values of different segments, etc. However, this is left for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">REAL-TIME EXPLORATION</head><p>In the previous section we introduced a new way of changing the appearance of a scene. By smoothly fading between different light colours, segments become visible or merge with the background. To make this technique usable for data exploration it is important to re-render the scene at interactive framerates. The basic idea of postillumination is to separate shading and compositing from the actual computation of an RGB colour. This allows one to generate new images for different light sources without repeating the entire rendering process. After all light bouncing and transmission is complete, only one matrix multiplication per final image pixel is needed to calculate the updated RGB image for the scene. This gives the necessary speedup for our purpose.</p><p>The following derivation is based on a general form of the rendering integral, which is discussed in Max <ref type="bibr" target="#b19">[20]</ref>. This form combines different absorption and scattering properties up to multiple scattering. As shown by Kajiya <ref type="bibr" target="#b9">[10]</ref>, special cases of such an integral can be interpreted to describe surface raycasting and radiosity. This makes it a convenient framework to show the usability of postillumination in general. For the implementation the integral has to be simplified and discretized. As well, the spectra cannot be represented as arbitrary continuous functions. Instead a linear colour model is used as described in § 5. To incorporate a spectral colour model the rendering integral gets an additional dependency on the wavelength λ. <ref type="figure" target="#fig_2">Fig. 4</ref> illustrates some symbols used in the following equations. The light Ii arriving at a point x from direction ωi is determined by</p><formula xml:id="formula_0">Ii(x, ωi, λ) = D 0 Ir(x − sωi, ωi, λ) • e − s 0 τ (x−tω i ,λ)dt ds, (1)</formula><p>where D is the distance from where the ray first enters the volume. The integral accumulates the light Ir radiated from a point x into direction ωi. It is also known as the volume rendering integral, used in raycasting. An image pixel can be seen as a point x in the scene. When tracing a ray through the volume to the pixel the light is diminished by local absorption of the materials, which is represented by the extinguishing coefficient τ . This local absorption is independent of the wavelength if only 'flat' particle scattering is adopted. In case of a participating medium, the absorption varies depending on the wavelength of the light. So the light is not only diminished but can also change colour. If a simple local illumination model is used, Ir is basically the light from the source weighted to incorporate diffuse reflection. To be more general and include shadowing and multiple scattering, the locally radiated light becomes</p><formula xml:id="formula_1">Ir(x, ωr, λ) = (2) 4π ρ(x, ωr, ωi, λ) • Ii(x, ωi, λ) + I L i (x, ωi, λ) dωi.</formula><p>The incident light is integrated over a unit sphere of all directions ωi. The amount that is scattered towards ωr is described by a ratio ρ called the bidirectional reflection distribution function (BRDF). This function represents the reflection properties of the material. It determines the colour by reflecting wavelengths differently. Two different contributions to the incident light can be distinguished. The indirect light Ii results from multiple scattering from other particles. It is similar to the light illuminating a screen pixel. If the rendering method only traces primary scattering events this term is zero. In that case only direct light I L contributes to the local scattering. It can be factored into the pure light spectrum L from the source and an extinction integral</p><formula xml:id="formula_2">I L i by I L i (x, ωi, λ) = L(λ) • I L i (x, ωi, λ) (3) I L i (x, ωi, λ) =    e − 1 0 τ (tx+(1−t)x L ,λ)dt if ωi = x L − x 0 otherwise (4)</formula><p>The factor I L i can also be seen as the amount of light from a flat white light source at position x L arriving at point x. This takes care of tracing shadows in the volume. In case of a local illumination model, shadows are ignored and I L i is equal to L. Solving the recursion of Ii through Ir is subject to radiosity algorithms <ref type="bibr" target="#b19">[20]</ref>. However, it is easy to see that the factorization propagates through the volume. Hence, in order to extract the actual light spectrum from the rendering integral, the factorization from Eq. 4 can be used directly in Eq. 2,</p><formula xml:id="formula_3">I L r (x, ωr, λ) = L(λ) • I L r (x, ωr, λ)<label>(5)</label></formula><formula xml:id="formula_4">I L r (x, ωr, λ) = (6) 4π ρ(x, ωr, ωi, λ) • Ii(x, ωi, λ) + I L i (x, ωi, λ) dωi,</formula><p>and subsequently in Eq. 1:</p><formula xml:id="formula_5">I(x, ω, λ) = L(λ) • D 0 I L r (x − sω, ω, λ) • e − s 0 τ (x−tω)dt ds. (7)</formula><p>This is the basic equation for post-illumination. To be able to factor out the light spectrum there must not be any self emitting particles in the volume. Otherwise it would not be possible to factor out L. All light that is contributing from within, originates from the outside light source. Also, the illumination model is limited to work based on a BRDF which is just a spectral factor. Shifting or remapping the spectrum as must be done for fluorescence is not possible. A nice feature is that this method can still contain factors for diffuse and specular shading or anisotropic reflection. The BRDF can also be used to incorporate iridescent reflection models such as interference colours. In that case the re-weighting of different wavelengths is due to pathlength in a thin surface. It can be treated like a reflectance that depends on location x and the angles ωi and ωr. Our implementation uses raycasting, only looking at primary scattering events. The actual computation of the rendering integral in Eq. 7 is done stepwise for samples xi in a simplified form, where the xi are defined by the discretization ∆s, i.e., xi = x(si) = x − siω = x − i∆sω. The colour spectrum C L arriving in a pixel x0 for a light source L is accumulated by</p><formula xml:id="formula_6">C L (λ) ≈ L(λ) d i=0 T (xi, λ) • R L (xi, λ) • S L (xi, λ) • ∆s . (8)</formula><p>Note that the BRDF has become a factor R L . It still depends on the local position. The superscript symbolizes that it is a reflectance dedicated to the light source L. That means this factor is not the actual BRDF but an evaluated version for a certain angle of incidence from the light source and a radiation direction to the viewer. The contribution of the light from the outside is combined in S L , which is the sum of the indirect light Ii and the shadowed direct irradiation I L i . For a local illumination model this factor is just constant 1, since the light does not undergo any changes before illuminating the point xi.</p><p>The transmittance T (xi, λ) is related to the discretized extinction integral. It is stepwise multiplied beginning with</p><formula xml:id="formula_7">T (x0, λ) ≡ 1, T (xi+1, λ) = T (xi, λ) • A(xi, λ) with A(xi, λ) = e − ∆x i τ (x i ,λ) .<label>(9)</label></formula><p>The local absorption A(xi, λ) has to be adjusted to the sampling distance ∆s. It can be precomputed for every voxel if the samples are equidistant. The following equation is an example of contributions to the light source dependent reflectance R L :</p><formula xml:id="formula_8">R L (xi, λ) = R(xi, λ) + R L iridescent (xi, λ) + w L specular<label>(10)</label></formula><p>The reflectance R is the basic reflectance without any relationship to a light source. It is responsible for the actual colour of the material. The summand w L specular is the specular coefficient from the Phong illumination model. It can be interpreted as adding a certain amount of flat white to the local reflectance, which will become the colour of the light source after multiplying L. Since everything is being calculated for a static light position and fixed perspective it is even possible to interpret interference colours as a local 'reflectance'. This and other iridescent effects such as dispersion or anisotropy can be combined in R L iridescent .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Post-Illumination with a linear colour model</head><p>To make the implementation efficient the discretized rendering integral has to be rewritten based on a linear colour model. In a linear subspace, illumination calculations are typically performed by a matrix multiplication. Peercy shows how to set up a matrix M that does the calculation within a linear subspace <ref type="bibr" target="#b25">[25]</ref>. This matrix is devised for a special set of reflectances and is used for the multiplication of the weighted basis functions for the light and the reflectance. The result is projected back into the linear space. Here, the matrix M(y) is used to do this spectral multiplication in the linear space for a given reflectance y. That is, x = M(y)x is the spectrum x after bouncing off reflectance y. This matrix is used to rewrite Eq. 8: <ref type="figure">M(a(xi)</ref>), T(x0) = I</p><formula xml:id="formula_9">c l = d 0 T(xi) • M(r l (xi)) • M(s l (xi)) • l with T(xi+1) = T(xi) •</formula><p>The symbols T, a, r l , s l , and l are the the linear subspace representations for the full spectra of T , A, R L , S L , and L from Eq. 8.</p><p>The stepwise absorption of the light is treated as discrete transmission events with spectrum a. These are accumulated into a transparency matrix T. Finally, for each pixel a matrix is added up along the ray through that pixel from local light transform matrices. A light can then be multiplied by that matrix afterwards to get the actual colour spectrum.</p><p>In general, we wish to reduce matrix multiplications to scalar multiplication. We use a special basis to promote simple componentwise multiplies of basis coefficients (the factor model) as described in § 5. The basis is designed to reduce M to a diagonal matrix, for which it is enough to just store and modify a diagonal vector. The step from complete matrix multiplications to simple componentwise multiplications of light vectors greatly improves the performance of the algorithm. Without any further optimizations the rendering speed is comparable to that of a RGB raycaster. The important difference is that the use of spectra yields correct colours and design flexibility, and post-illumination allows fast relighting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION ISSUES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">The factor model of colour</head><p>The linear colour model we use here is based on an extension to spectral bases of the idea of spectral sharpening in colour constancy algorithms <ref type="bibr" target="#b6">[7]</ref>. In graphics, usually RGB is simply multiplied to form colour. In surface graphics, for example, we multiply illuminant RGB times surface RGB, to generate a product RGB. This is not physically accurate, but can be made more so by a preliminary matrix transformation of camera sensors to generate an intermediary colour space.</p><p>Here, we are interested in multiplying spectra. The best we can do in an optimal fashion for representing spectra that participate in image formation is to form some principal component basis for the spectral curves. However, since each spectrum is represented as a sum over basis coefficients, this implies a matrix multiply of current light coefficients times the next interaction spectrum coefficients. But we can pre-"sharpen" the basis by a simple matrix transform and agree to operate within the sharpened basis for all surface or volume interactions <ref type="bibr" target="#b4">[5]</ref>. Note that no information is lost by such a transform, and accuracy to within the adopted dimensionality of the underlying finite-dimensional model is maintained.</p><p>Then indeed we can represent spectral interactions in terms of the low-dimensional coefficients (typically 5 to 7D) and calculate interactions using simple componentwise multiplication of the coefficients. Since light colour change is now simply one componentwise multiplication, it can be the final multiply, and hence a postillumination. In the last step, descending to 3D RGB colour, we simply need a 3 × k matrix multiply for each pixel to create colour on the screen, where k is the dimension of our "colour" space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Spectral Design</head><p>Section 3.1 provides guidelines for creating lights and materials for spectral transfer functions. We have developed a framework that creates spectra that fit given design properties <ref type="bibr" target="#b1">[2]</ref>. The input to the algorithm is a design palette as shown in <ref type="figure">Fig. 5</ref>. It is a matrix of colours having columns for the light sources and rows associated with the materials. The colour for certain light-material combinations can be specified at the corresponding position in the matrix. To relax the constraints for the design process an additional weight indicates the importance of the specified colour. Each spectrum can either be input to the algorithm or be open for redesign. The example in <ref type="figure">Fig. 5</ref> shows the setup for the frog in <ref type="figure">Fig. 1</ref>. The first light is standard illuminant D65, the second is Tungsten. The other two lights, as well as the materials are generated by the algorithm to match the specified colours. The first blue column indicates that all <ref type="figure">Figure 5</ref>: Interface to the spectral design palette materials are metameric under light 1. The black fields indicate that some materials disappear under the corresponding light. The light in the last column for instance turns all materials to black except the second one, which is used to mark the eyes of the frog.</p><p>The algorithm allows us to find actual spectra for the given RGB colours. To generate 'reasonable' spectra it is possible to incorporate additional desirable properties. Smoothness is used to avoid spiky zig-zag spectra and also usually removes large and small spectral components, obviating the need for explicit upper and lower bounds. For rendering, the spectra are projected into the linear basis vector subspace described in §5.1. To keep the approximation error small, we include a matrix that minimizes the difference of the RGB values for the full and the projected spectrum. All properties (colours, smoothness, and error minimization) are expressed as a collection of normal equations. For these, a global minimum solution can be found using the pseudoinverse of a stacked matrix. This solution can then be used as the initial value for a constrained minimization that ensures that all components are positive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>To use re-illumination as a new degree of interaction imposes distinct restrictions on visualization. But the limitations inherent in this technique -in the form of defined lights for defined materials -are not necessarily negative. If arranged in a sensible way, information usually becomes more accessible to the user. By preparing different visual situations an author can guide the interaction that is provided through the light slider. This is a means to emphasize a certain set of features that can be explored by the user.</p><p>In <ref type="figure">Fig. 6</ref> (a) the engine block and inner parts are metameric, with the 'smoke' (probably reconstruction noise) being black and thus invisible. Picture (b) shows the palette constellation for the next light, yielding distinguishable parts. In picture (c) the smoke becomes visible, glowing white. Using the light dial, it is possible to move smoothly between the lights. With the block keeping a constant colour this allows toggling the visibility of additional details.</p><p>For the dataset in <ref type="figure">Fig. 7</ref> each material has one dedicated light source. If one light is illuminating the scene the other segments go black. This allows emphasizing different aspects separately. In <ref type="figure">Fig. 7a</ref> the lights illuminating the inner segments have no influence since the slider is directly over one light node. <ref type="figure">Fig. 7b and 7c</ref> are both the result of a mixture of lights, with the light for the interior switched off in (b).</p><p>Rendering the frog (250x235x138) on a 1.4 GHz Pentium 4 takes 18s for a 800x800 image. The re-illumination is done at 7 fps, which depends on the image size only. A similar configuration takes 14s using an RGB colour model, which does not allow reillumination. Rendering to a 400x400 screen takes 5s for the spec- tral and 4s for the RGB colour model. The post-illumination can be done at 20 fps. This shows that the RGB raycasting is an expected factor faster than spectral rendering. But the important difference is that the latter provides correct colours and light changing at framerates an order of magnitude higher.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">FUTURE WORK</head><p>Our current implementation represents a proof of concept; the new technique has not been fully explored as of yet. We would like to incorporate this framework into some more sophisticated transfer function designs, e.g., Kniss' work <ref type="bibr" target="#b12">[13]</ref>. Our ideas are not restricted to any rendering method. Hence we would like to include faster rendering as well. Some preliminary work has been done on splatting. Using vertex shaders, we are able to adapt hardware accelerated splatting to our spectral models. The efficient representation of spectra using the factor model allows versatile modifications to the spectra while rendering. To fully exploit this fact it would be worthwhile investigating the integration of the method presented into light mapping mechanisms <ref type="bibr" target="#b7">[8]</ref> or BRDF factorizations <ref type="bibr" target="#b21">[21]</ref> to allow sophisticated spectral reflection models in real-time. This could open a new field for rendering photo-realistic volumetric scenes, which could be of great benefit for medical training applications.</p><p>Spectral materials could be used to more sensibly map information from multi-modal data to the screen. The material editor, in connection with the new exploration method of re-illumination, is a first step in that direction.</p><p>Another area to explore is the extension to spectral light fields using the technique introduced in <ref type="bibr" target="#b16">[17]</ref>. Some preliminary work on re-lighting light fields is described in <ref type="bibr" target="#b22">[22]</ref>. A problem is that the datasets are strongly related to the static lighting under which they have been acquired. But re-lighting is precisely what the method presented here is best used for. Work in this field has some interesting relationships to representing BRDFs as carried out by <ref type="bibr" target="#b7">[8]</ref>. There has not been much work done so far on interactively rendering spectral BRDFs. A lot of work has been done on deriving elaborate spectral reflectance models, but no real-time capable (or convincingly general) representations have been developed as yet.</p><p>Another interesting area is user-oriented design. The interface widgets created here have not been evaluated with respect to their usefulness and we have played with several other ideas to interact with the n-dimensional light space. More work should be done to evaluate our interface widgets, develop new ones, and explore other possible metaphors for user interaction. Spectral volume rendering drastically complicates the transfer function design space. It is already difficult to explore transfer functions using RGB-based colour spaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSIONS</head><p>In this particular work, and in volume rendering in general, the focus is not photo-realistic rendering. We have shown how to use concepts, like metamers and colour constancy, in order to explore a volumetric data set. These effects are not possible by using the traditional RGB colour model.</p><p>Based on an improved linear model, a framework for spectral volume rendering has been developed. To emphasize the use of reillumination we proposed a method for rendering spectral scenes independent from a light source. This allows the user to get different impressions of the data under different lights, which is an enhancement of any technique, that utilizes a transferfunction for volume exploration. The spectral design method allows the preparation of specific illumination situations to highlight certain aspects of the data. The artificial creation of spectra is complementary to using real spectra.</p><p>The design framework helps to make spectra more usable in computer graphics in general. For many applications it is essential to have control over specific properties of spectra while leaving others 'realistic'. There is an interesting duality inherent in spectral rendering: it provides improved realism on the one hand, and on the other provides enhanced possibilities for artificially manipulating a scene. These properties make spectra a powerful tool for computer graphics.</p><p>We have shown that our techniques are effective enhancements for transfer functions. While some of the demonstrated effects could perhaps be achieved by changing of opacities and assigned colours in the a traditional RGB-based rendering system, a complete re-rendering of the scene becomes necessary. Postillumination proves useful for the interactive exploration of visualizations, even for high-quality rendering methods such as raytracing.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>GUI for defining a spectral transfer function.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Different interfaces to control the mixture of lights a) using separate sliders for each light b) using normalized inverse distances of the slider (yellow circle) to the light nodes (blue circles).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Lights and directions necessary to calculate the illumination at a point x.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>An engine, demonstrating the use of metamers and metameric blacks in spectral volume rendering. Under each light only one material is not black. The mixture of lights produces different combinations of segments without repeating the raycasting.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">ACKNOWLEDGMENTS</head><p>This work was made possible by the partial support of Natural Sciences and Engineering Research Council of Canada (NSERC) and the Advanced Systems Institute (ASI) of BC. The authors would like to thank Ziemek Trzesicki for developing large parts of vuVolume -the visualization development environment we have used. Further we would like to thank the members of the Graphics, Usability, and Visualization (Gruvi) Lab for their creative input to this work.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The contour spectrum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1997-11" />
			<biblScope unit="page" from="167" to="175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Spectral volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bergner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Drew</surname></persName>
		</author>
		<idno>SFU-CMPT-03/02-TR2002-03</idno>
		<imprint>
			<date type="published" when="2002-03" />
		</imprint>
		<respStmt>
			<orgName>Simon Fraser University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Accelerated volume rendering and tomographic reconstruction using texture mapping hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1994 Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 88)</title>
		<imprint>
			<date type="published" when="1988-08" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="65" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Also: Representation of colour in a colour display system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Drew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Finlayson</surname></persName>
		</author>
		<idno>SFU-CMPT-03/02- TR2002-02</idno>
	</analytic>
	<monogr>
		<title level="m">UK Patent Application No. 0206916.9. Under review, British Patent Office</title>
		<imprint>
			<date type="published" when="2002-03" />
		</imprint>
		<respStmt>
			<orgName>Simon Fraser University School of Computing Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>Multispectral processing without spectra</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Designing effective transfer functions for volume rendering from photographic volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rheingans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Yoo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="183" to="197" />
			<date type="published" when="2002-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Spectral sharpening: sensor transformations for improved color constancy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Finlayson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Drew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">V</forename><surname>Funt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Opt. Soc. Am. A</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1553" to="1563" />
			<date type="published" when="1994-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Light field techniques for reflections and refractions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Heidrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lensch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the EG Rendering Workshop &apos;99</title>
		<meeting>of the EG Rendering Workshop &apos;99</meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Full-spectral color calculations in realistic image synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Fairchild</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="47" to="53" />
			<date type="published" when="1999-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The rendering equation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kajiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH &apos;86</title>
		<meeting>of SIGGRAPH &apos;86</meeting>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="143" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Splatting optimizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kilthau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<idno>SFU-CMPT-04/01-TR2001-02</idno>
		<imprint>
			<date type="published" when="2001-04" />
		</imprint>
		<respStmt>
			<orgName>School Of Computing Science, Simon Fraser University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Semi-automatic generation of transfer functions for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Durkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization Symposium</title>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Interactive volume rendering using multi-dimensional transfer functions and direct manipulation widgets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="255" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The ultravis system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Knittel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2000 Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="2000-10" />
			<biblScope unit="page" from="287" to="294" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fast volume rendering using a shear-warp factorization of the viewing transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lacroute</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;94</title>
		<editor>A. Glassner</editor>
		<meeting>SIGGRAPH &apos;94</meeting>
		<imprint>
			<date type="published" when="1994-07" />
			<biblScope unit="page" from="451" to="458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Light field rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGGRAPH 1996. ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH 1996. ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Fourier volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Malzbender</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="233" to="250" />
			<date type="published" when="1993-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Design galleries: A general approach to setting parameters for computer graphics and animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Andalman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Beardsley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gibson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">K</forename><surname>Hodgins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mirtich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ruml</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ryall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Seims</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shieber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97</meeting>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="389" to="400" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Optical models for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="99" to="108" />
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Homomorphic factorization of brdfs for high-performance rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Mccool</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ahmad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001-08" />
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Reshading light fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Meneveaux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fournier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Smeulders. Spectral volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">J</forename><surname>Noordmans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">T M</forename><surname>Van Der</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Voort</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="196" to="207" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Accelerated splatting using a 3d adjacency data structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Orchard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface</title>
		<imprint>
			<date type="published" when="2001-06" />
			<biblScope unit="page" from="191" to="200" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Linear color representations for full spectral rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Peercy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;93)</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="191" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Fast detection of meaningful isosurfaces for volume data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pekar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Wiemker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hempel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="223" to="230" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The volumepro real-time ray-casting system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hardenbergh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Knittel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Seiler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 99</title>
		<meeting>SIGGRAPH 99</meeting>
		<imprint>
			<date type="published" when="1999-08" />
			<biblScope unit="page" from="251" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Interactive volume rendering on standard pc graphics hardware using multi-textures and multi-stage rasterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rezk-Salama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Greiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics/SIGGRAPH Workshop on Graphics Hardware</title>
		<imprint>
			<date type="published" when="2000-08" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">An adaptive representation of spectral data for reflectance computations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Rougeron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Péroche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Rendering Techniques&apos;97, (Proceedings of the Eurographics Workshop on Rendering)</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="126" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Frequency domain volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Totsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 93</title>
		<meeting>SIGGRAPH 93</meeting>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
