<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">QuadTIN: Quadtree based Triangulated Irregular Networks</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
							<email>pajarola@acm.org</email>
							<affiliation key="aff0">
								<orgName type="department">Department School of Engineering Fac. de CC. Físicas</orgName>
								<orgName type="laboratory">Computer Graphics Lab Multimedia Technology Integration Center Dpto. Arquitectura de Computadores y Automática Information &amp; Computer Science</orgName>
								<orgName type="institution" key="instit1">University of California Irvine La Salle University</orgName>
								<orgName type="institution" key="instit2">Universidad Complutense Madrid</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Antonijuan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department School of Engineering Fac. de CC. Físicas</orgName>
								<orgName type="laboratory">Computer Graphics Lab Multimedia Technology Integration Center Dpto. Arquitectura de Computadores y Automática Information &amp; Computer Science</orgName>
								<orgName type="institution" key="instit1">University of California Irvine La Salle University</orgName>
								<orgName type="institution" key="instit2">Universidad Complutense Madrid</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Lario</surname></persName>
							<email>rlario@dacya.ucm.es</email>
							<affiliation key="aff0">
								<orgName type="department">Department School of Engineering Fac. de CC. Físicas</orgName>
								<orgName type="laboratory">Computer Graphics Lab Multimedia Technology Integration Center Dpto. Arquitectura de Computadores y Automática Information &amp; Computer Science</orgName>
								<orgName type="institution" key="instit1">University of California Irvine La Salle University</orgName>
								<orgName type="institution" key="instit2">Universidad Complutense Madrid</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">QuadTIN: Quadtree based Triangulated Irregular Networks</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 Computational Geometry and Object Modeling</term>
					<term>I.3.3 Image Generation</term>
					<term>E.2 Data Storage Representation multiresolution triangulation, real-time terrain visualization, triangulated irregular networks, level-of-detail</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Interactive visualization of large digital elevation models is of continuing interest in scientific visualization, GIS, and virtual reality applications. Taking advantage of the regular structure of grid digital elevation models, efficient hierarchical multiresolution triangulation and adaptive level-of-detail (LOD) rendering algorithms have been developed for interactive terrain visualization. Despite the higher triangle count, these approaches generally outperform mesh simplification methods that produce irregular triangulated network (TIN) based LOD representations. In this project we combine the advantage of a TIN based mesh simplification preprocess with high-performance quadtree based LOD triangulation and rendering at run-time. This approach, called QuadTIN, generates an efficient quadtree triangulation hierarchy over any irregular point set that may originate from irregular terrain sampling or from reducing oversampling in high-resolution grid digital elevation models.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Efficient interactive visualization of very large digital elevation models (DEMs) is important in a number of application domains such as scientific visualization, GIS, virtual reality, flight simulation, military command &amp; control, or interactive 3D games. Grid digital terrain data sets can easily reach several million vertices while graphics hardware accelerators may be capable of interactively render only a fraction of this at 20 frames or more per second. Due to the generally very large size of DEM terrain data sets and the limited rendering power of graphics systems, efficient level-of-detail (LOD) based mesh simplification is required to reduce the geometric scene complexity adaptively and without leading to an intolerable poor visual representation.</p><p>Taking advantage of the regular grid structure of common DEM terrain data sets, quadtree based hierarchical multiresolution triangulation methods <ref type="bibr" target="#b17">[18]</ref> have proven to be very efficient in terms of LOD selection, triangulation and rendering performance. On the other hand, TIN based triangle mesh simplification methods <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b1">2]</ref> are generally superior in the triangle count for a given LOD error threshold and allow arbitrary irregular input point data sets. Achieving the high performance of regular quadtree based multiresolution triangulation on irregular point sets is hard to achieve.</p><p>Having uniform high-resolution terrain data available does not mean that this uniform resolution is desired everywhere at all. Therefore, quadtree based methods do not provide an adequate approach. However, TIN based simplification in a preprocess to eliminate unnecessary detail data (see our examples in Section 5) can optimally remove this redundancy. The remaining data set is not anymore a conforming grid that is directly usable in quadtree based methods.</p><p>Our method imposes an efficient quadtree triangulation hierarchy on any irregular TIN based input, <ref type="bibr" target="#b0">1</ref> thus the name QuadTIN . The proposed approach is able to provide fast quadtree based adaptive LOD triangulation and real-time rendering of irregular terrain height-field data using additional Steiner points. Furthermore, due to the imposed restricted quadtree triangulation on the TIN input any arbitrary LOD can be represented as one single triangle strip. See <ref type="figure" target="#fig_0">Figure 1</ref> for an example.</p><p>The remainder of the paper is organized as follows. Section 2 presents a short overview on related work and in Section 3 we review the quadtree based triangulation method underlying our approach. In Section 4 we describe our QuadTIN triangulation approach. Experiments are presented in Section 5 and Section 6 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">RELATED WORK</head><p>There has been extensive work on TIN based triangle mesh simplification, refinement methods and multiresolution triangulation for terrains that goes beyond the scope of this paper. We refer the interested reader to the literature for more details (see <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b18">19]</ref>). Because such TIN based methods work on arbitrary irregular point input data sets they tend to have higher computa-1. irregular triangulation of elevation points in the 2D projection tional costs associated with simplification and refinement operations compared to regular hierarchical methods. Furthermore, TIN based multiresolution hierarchies require more complex and costly data structures as well to capture irregular refinement or simplification operations and adjacency relations. Their main advantages are handling of arbitrary point distributions and superior (smaller) triangle counts for given LOD thresholds.</p><p>Adaptive quadtree based hierarchical multiresolution triangulations have been studied in the literature for adaptive triangulation of grid-digital terrain elevation models <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b22">23]</ref>. In <ref type="bibr" target="#b17">[18]</ref> we discuss advantages and differences between the various approaches of this class of quadtree <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b22">23]</ref> or bintree <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b13">14]</ref> triangulations. These methods take advantage of the regular grid structure to create an efficient multiresolution triangulation hierarchy. The main advantages are simple construction of the multiresolution hierarchy, fast LOD selection and efficient rendering. The main disadvantages are the suboptimal size of an adaptive LOD mesh compared to TINs and the restricted applicability.</p><p>In <ref type="bibr" target="#b25">[26]</ref> semi-regular, quasi-regular and irregular 4-k meshes are presented. However, this type of irregularity is quite different from what we are considering in this paper. In <ref type="bibr" target="#b25">[26]</ref>, the semi-and quasi-regular 4-8 meshes are basically subdivision methods <ref type="bibr" target="#b24">[25]</ref>, and the irregular 4-8 meshes are adaptive tesselations of parametric or implicit surfaces. In contrast, this paper discusses how to use any given irregular point set in 2D with additional Steiner points to create a restricted quadtree triangulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">RESTRICTED QUADTREE TRIANGULATION</head><p>The restricted quadtree triangulation (RQT) method is an adaptive, hierarchical triangulation model <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b26">27]</ref> to tessellate surfaces. <ref type="figure" target="#fig_1">Figure 2</ref> shows the basic recursive quadtree subdivision and triangulation that introduces vertices from the grid in two steps. To avoid cracks in the triangulated surface from unrestricted adaptive subdivision and triangulation of the quadtree as shown in <ref type="figure" target="#fig_2">Figure 3</ref>, RQT subdivision is constraint such that the levels of adjacent quadtree nodes differ by at most one. We call this the restricted quadtree property .  <ref type="figure" target="#fig_3">Figure 4</ref> a) and c), that must be included in the triangulation such that v itself can be selected without introducing a crack.</p><p>It has been noted in <ref type="bibr" target="#b6">[7]</ref> that a conforming strictly monotonic error metric allows a simple top-down selection of vertices without having to consider the dependency relation shown in <ref type="figure" target="#fig_3">Figure 4</ref> or any quadtree subdivision constraint. With a conforming error metric the selected vertices adhere to these constraints automatically. This observation was also made in <ref type="bibr" target="#b15">[16]</ref> and a technique, referred to as error saturation , was proposed to support a broad range of error metrics.</p><p>Furthermore, this class of restricted quadtree or bintree triangulations allows the entire triangle mesh to be represented by one single generalized triangle strip <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b15">16]</ref> which is important for rendering efficiency. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">QUADTIN TRIANGULATION</head><p>In this section we describe the algorithmic details of the proposed QuadTIN method. At this point we assume we are given an irregular point data set or TIN from an irregular-sampling terrain reconstruction process or from preprocessed and simplified terrain height field data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Overview</head><p>As shown in <ref type="figure" target="#fig_4">Figure 5</ref>, the QuadTIN approach consists of a preprocess to construct the restricted quadtree hierarchy from a TIN, or irregular set of elevation points. It is important that the input data is organized in an efficient spatial index structure that allows fast range query access for the QuadTIN construction process. In our current version we use a quadtree <ref type="bibr" target="#b20">[21]</ref> to manage the input data.</p><p>The QuadTIN construction process as described in Section 4.2 iteratively creates a restricted quadtree top-down. The resulting quadtree hierarchy is not balanced but conforming to the RQT constraints. Additional information such as approximation error, bounding spheres and normal cones used for view-dependent triangulation and rendering are also computed for each node at this stage.</p><p>The rendering application reads a QuadTIN data structure from file and adaptively triangulates and displays the terrain based on various LOD criteria such as variable (object space) geometric approximation error thresholds or (image space) view-dependent error metrics as outlined in Section 4.4. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Subdivision and vertex selection</head><p>The recursive irregular quadtree subdivision by binary triangle splitting and vertex selection for corresponding edge bisection is a crucial part of the QuadTIN construction process. The triangle subdivision as shown in <ref type="figure" target="#fig_1">Figure 2</ref> is basically a special case of the longest side bisection triangle refinement method <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">24]</ref> where all triangles are isosceles right-triangles. As shown in <ref type="figure" target="#fig_5">Figure 6</ref>, in QuadTIN triangles are not anymore isosceles right-triangles. However, we maintain the alternating split-base for edge bisection as in the regular restricted quadtree or bintree triangulation. Furthermore, in QuadTIN an edge is (geometrically) bisected not by introducing the edge's actual midpoint but by adding a vertex from the input data set. For edge bisection and vertex selection, we have to consider two triangles and forming a quadrilateral region that share the same base edge that is to be split. The vertical projection of into the x,y -plane is called the domain . The basic idea is that whenever two base-adjacent triangles have to be refined by edge bisection of their base edge , the vertex closest to the midpoint of is selected as shown in <ref type="figure" target="#fig_6">Figure 7</ref> a). However, to avoid bad aspect-ratio triangles only points from a restricted domain as shown in <ref type="figure" target="#fig_6">Figure 7</ref> b) are considered. To define the restricted search domain exactly let us first define the offset region of a triangle t as shown in <ref type="figure" target="#fig_7">Figure 8</ref>. For a given triangle in the x,y -plane with base edge and offset factor f we define to be the intersection of the open half spaces defined by and . For a quadrilateral we define the restricted search domain to be . It is possible that base-adjacent triangles and that must be split form a non convex quadrilateral domain as shown in <ref type="figure" target="#fig_8">Figure 9</ref> a). Care has to be taken not to select any vertex that may cause overlapping or flipped triangles. By definition, the restricted search domain avoids such degeneracies as shown in <ref type="figure" target="#fig_8">Figure 9 b</ref>). Due to the dependency constraints, outlined in Section 3 and <ref type="figure" target="#fig_3">Figure 4</ref>, irregular point distributions and the restricted search domain it is possible that two triangles must be split where there are no points available from the input data set for edge bisection. In that case we insert a so called Steiner point (see also <ref type="bibr" target="#b3">[4]</ref>) within the region to guarantee a matching restricted quadtree triangulation. The coordinates and normal vectors of Steiner points are locally interpolated from the nearest neighbors of the input data set as outlined in the following section.</p><p>On the boundary of the input data, triangle subdivision differs slightly. Choosing the vertex closest to the midpoint of could lead to a situation where unprocessed input points are outside of the boundary of the refined triangulation as shown in <ref type="figure" target="#fig_0">Figure 10</ref> a). To avoid this problem and preserve the inside-boundary relation at any time, the vertex that minimizes the largest angle formed with is selected as shown in <ref type="figure" target="#fig_0">Figure 10 b</ref>). The restricted search domain parameter f mainly determines the number of inserted Steiner points. Without offset restrictions, f = 100%, only the minimal necessary number of Steiner points is inserted that satisfies the dependency restrictions of the quadtree triangulation outlined in Section 3, and that prevents flipped triangles due to concave quadrilaterals as shown in <ref type="figure" target="#fig_8">Figure 9</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Construction preprocess</head><p>The process to create the QuadTIN data structure consists of the following components:</p><p>• Top-down construction of restricted quadtree hierarchy.</p><p>• Vertex selection for edge bisection.</p><p>• Interpolation of Steiner points.</p><p>• Computation of error metric and view-dependent </p><formula xml:id="formula_0">rendering parameters. level l level l-1 level l level l+1 v center t t ' Q t t' , t t' ∪ = e t t' , t base t' base = = Q t t' , ∂Q t t' , e t t' , v ∂Q t t' , ∈ e t t'</formula><formula xml:id="formula_1">∂t offset ∂t A B C , , ( ) = e BC = ∂t offset B off A off A off C off Q t t' , ∂Q t t'</formula><p>, offset</p><formula xml:id="formula_2">∂t offset ∂t' offset ∩ = ∂t A C V A off B off C off V = (B + C) / 2 A off = V + f • (A -V) B off = V + f • (B -V) C off = V + f • (C -V) ∂t offset B t t' ∂Q t t' , v ∂Q t t' , ∈ ∂Q t t' , offset a) b) ∂Q t,t' t' t ∂Q t t' , offset t base v split ∂t offset ∈ t base a) b) boundary t base t base v split</formula><p>Top-down hierarchy construction: The QuadTIN hierarchy H is initialized with a quadtree root node containing two triangles defined by the corners and one diagonal of the bounding box of the input data set. In general, the corners of the bounding box are interpolated Steiner points. The hierarchy is iteratively created by subdividing the leaf nodes and triangles of the quadtree H in breadth-first order and center-vertices first (see <ref type="figure" target="#fig_5">Figure 6</ref>) which allows preserving the restricted quadtree property at any time during the construction process. If a triangle t has to be subdivided, first it is checked that the base-adjacent triangle t' already exists. If not, subdivision is propagated to the parent triangle of t' first. Unless a subdivision is induced by a dependency relation, the topdown triangle subdivision stops if no more input points are within .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Edge bisection:</head><p>As outlined in the previous section, for each subdivision of triangles and the input point set must be searched for candidate vertices within the restricted search domain to perform edge bisection. To support such spatial search queries efficiently, the input points are loaded into a spatial indexing structure. We currently use a region quadtree <ref type="bibr" target="#b20">[21]</ref> to quickly select a subset of input points within the bounding box of . Then we reduce this subset to valid candidate points within . Error metric: The error metric that QuadTIN uses is the L ∞ norm of the vertical distance (terrain elevation dimension) of vertices to the triangulated surface. Let us denote the minimum vertical distance of a vertex v to two triangles and by , and let be the vertex selected for subdividing the base edge . Therefore, the error of is initialized to .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(EQ 1)</head><p>This error metric provides a conservative LOD triangulation, the top-down vertex selection and triangle subdivision can be stopped at nodes with below a given tolerance. By definition of the error metric, stopping selection at with below the given error threshold guarantees that there is no other vertex within farther than from the current triangles t and t'. Because this error metric is not guaranteed to be monotonic, cracks in the triangulation have to be avoided by propagating subdivision according to the dependency relations shown in <ref type="figure" target="#fig_3">Figure 4</ref>. Thus propagated subdivisions must verify the error threshold as well. Note that in <ref type="bibr" target="#b14">[15]</ref> a view-dependent error metric was proposed that is monotonic and does not require dependency resolution via split propagation.</p><p>Rendering parameters: Besides the geometric approximation error that is stored with each vertex, each node of the QuadTIN hierarchy also stores bounding sphere (center h.c and radius h.r) and bounding normal cone <ref type="bibr" target="#b21">[22]</ref> (cone axis h.n and semi opening angle h.θ) parameters used for view-dependent triangulation and rendering. The bounding sphere of a node h encloses all vertices, and the bounding normal cone bounds all triangle normals of descendants of h. These parameters are computed bottomup after the basic quadtree data structure has been constructed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Real-time rendering</head><p>Our interactive visualization application reads the preprocessed QuadTIN data structure from a binary file. The real-time rendering process performs the following steps for each frame: 1. View-dependent vertex selection. Rendering.</p><p>The top-down traversal of the QuadTIN hierarchy H for vertex selection is similar to the algorithms presented in <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b22">23]</ref>. However, for a fly-through application vertices are selected based on a view-dependent (image space) error metric as outlined below. Due to this view-dependent vertex selection the RQT constraints have to be satisfied by including all vertices according to the dependency relation shown in <ref type="figure" target="#fig_3">Figure 4</ref>. Dependency resolution is efficiently performed in linear time with respect to the size of the generated triangle mesh as shown in <ref type="bibr" target="#b15">[16]</ref> and is not further discussed here.</p><p>Furthermore, due to the imposed restricted quadtree hierarchy on the TIN input data set, including a few additional Steiner points, the presented QuadTIN approach can represent different LOD triangulations of an irregular point set using only one single triangle strip (with swap operations). Note that also the triangle strip generation algorithm <ref type="bibr" target="#b15">[16]</ref> is linear in time with respect to the number of rendered triangles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>View-dependent vertex selection:</head><p>The vertex selection takes three view-dependent selection criteria into account: view-frustum culling, back-face culling and screen projection tolerance. These criteria allow efficient back-tracking during the recursive traversal of the QuadTIN hierarchy H for vertex selection. If the bounding sphere of a node does not intersect the view frustum (approximated by a viewing cone) or if the bounding normal cone indicates a completely back-facing region, recursive vertex selection can be stopped at this node h. For performance reasons Quad-TIN computes view-frustum and back-face culling similar to <ref type="bibr" target="#b16">[17]</ref> using only a few floating point operations, see also <ref type="figure" target="#fig_0">Figure 11</ref>. We assume that the viewpoint e and semi-angle ω (as well as its sine, cosine and tangens) of the viewing cone are given for each frame. Furthermore, for each node we know its bounding sphere (c, r) and bounding normal cone (n,θ).</p><p>View-frustum culling as shown in <ref type="figure" target="#fig_0">Figure 11 a)</ref> is performed if or . Using the rules and this can be rewritten to .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(EQ 2)</head><p>Equation 2 can efficiently be evaluated without trigonometric functions by using a dot-product and an additional division.</p><p>can be precomputed once as long as the FOV aperture angle does not change between frames and . A few additional relations such as ⇒ continue selection, ⇒ continue selec-</p><formula xml:id="formula_3">∂Q t t' , t t' ∂Q t t' , offset Q t t' , ∂Q t t' , offset v ∂Q t t' , offset ∈ e t t' , v v ∂Q t t' , offset ∈ { } ∅ = Q t t' , Q t t' , t</formula><p>t' e t t'</p><formula xml:id="formula_4">, t t' d v Q t t' , , ( ) v split e t t' , v split E v split ( ) max v ∂Q t t' , ∈ d v Q t t' , , ( ) ( ) = E v split ( ) v split E v split ( ) ∂Q t t' , E v split ( ) h H ∈ h H ∈ h H ∈ γ α - ω &gt; γ α - ( ) cos ω ( ) cos &lt; α ( ) cos 90 α - ( ) sin = α β + ( ) sin α ( ) sin β ( ) sin + ≤ γ ( ) cos α ( ) sin + ω ( ) cos &lt; γ ( ) cos c e - ( ) w • ( ) c e - ⁄ = ω ( ) cos α ( ) sin r c e - ⁄ = γ ( ) cos ω ( ) cos &gt; c e - r &lt;</formula><p>tion, and ⇒ stop selection need to be tested before Equation 2 can be used to stop recursive vertex selection.</p><p>While view-frustum culling as explained above is slightly different and more efficient than in <ref type="bibr" target="#b16">[17]</ref>, back-face culling as shown <ref type="figure" target="#fig_0">Figure 11 b</ref> and can be computed efficiently without trigonometric functions as shown in <ref type="bibr" target="#b16">[17]</ref>. In addition to view-frustum and back-face culling which are used for back-tracking, a screen projection error tolerance is used for vertex selection as well as back-tracking. A vertex that refines triangles t and t' is selected only if its geometric approximation error projected on screen exceeds a given tolerance τ. Given the normalized viewing direction w and the focal length d of the viewing plane as shown in <ref type="figure" target="#fig_0">Figure 12</ref>, the projected error on screen that is compared to τ for vertex selection is .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(EQ 4)</head><p>Note that the approximation error as computed in Equation 1 does not actually have to occur at itself but can occur at any point within the bounding sphere. Therefore, for the purpose of back-tracking we use an adjusted conservative screen projection error given by . Rendering: The rendering process mainly takes advantage that due to the imposed quadtree hierarchy the irregular point set can be triangulated with one single triangle strip. We use the algorithm presented in <ref type="bibr" target="#b15">[16]</ref> to generate a generalized triangle strip including swap operations. The so created triangle strip (see also <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b13">14]</ref>) contains almost as many swap operations as triangles. If a swap operation is simulated in OpenGL by repeating the second last vertex and thus creating a degenerate line-triangle, the resulting triangle strip contains almost twice the number of actually visible triangles. Note however, that even in the worst case this triangle strip is still better then an indexed triangle list. This is because even with swap operations no more than 2 vertices (amortized) per visible triangle are processed for transform and lighting compared to 3 per triangle with an indexed triangle list.</p><p>To avoid popping artifacts in multiresolution triangulations vertex morphing was proposed in <ref type="bibr" target="#b10">[11]</ref> to smoothen the transition between different LODs. In vertex morphing, a vertex v is first inserted at an interpolated start position v start and then smoothly translated to its end position v end by over some time, or number of frames. This works well when inserting vertices since the start position can be interpolated from the current triangulation and because the end position is well defined by the vertex' actual coordinates. On the other hand, vertex morphing is problematic when removing vertices to decrease the LOD. In that case the start position v start is the vertex v's current coordinates as used for rendering. However, the end position v end is not well defined as shown in <ref type="figure" target="#fig_0">Figure 13</ref>. If any of the vertices, from which the end point v end is interpolated, is itself a morphing vertex then it is difficult to efficiently prevent any popping at the time when v has to be removed from the mesh. In addition to the above problems of correctly determining end positions for vertex removal, morphing also poses problems in the vertex selection process. Creating a particular LOD triangulation is not anymore a one-step process because vertices not only have to be selected but must also actively be removed over a number of frames. Thus vertices must be actively scheduled for removal as soon as they are selected only due to dependency relations from vertices that are already in the process of being removed. Due to the asymmetry of vertex morphing at insertion and removal time and due to open problems in LOD selection under dynamic vertex removal, morphing is currently not implemented within our rendering algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">EXPERIMENTS</head><p>In this section we present experimental results with digital elevation models (DEMs) from the United States Geological Survey (USGS). The original DEM files are all regular grid height-field data sets from which we generated irregular TIN representations in a mesh simplification preprocess. We used the Terra software <ref type="bibr" target="#b8">[9]</ref> available from http://graphics.cs.uiuc.edu/~garland/CMU/scape/ to simplify the DEMs to a fraction of the original data size using only very small error tolerances. The so generated TINs were used as example input data sets to our QuadTIN construction algorithm and QuadTIN rendering application. The downloaded Terra software has some limitations, it processes a height-field with a fixed </p><formula xml:id="formula_5">γ α - ω &gt; β θ + 90°&lt; v split E v split ( ) E screen E v split ( ) d ⋅ v split e - ( ) w ⋅ ---------------------------------- = E v split ( ) v split E screen E v split ( ) d ⋅ v split e - ( ) w ⋅ r - ------------------------------------------ = v split -e w e v split r d E(v split ) viewing plane v 1 t - ( ) v start t v end ⋅ + ⋅ = v start =v v end =0.5(v 1 +v 2 ) v 1 v 2 v start v end v 1 ' v 2 ' a) b)</formula><p>spacing of one unit between points in x,y. To avoid any loss of resolution in the elevation dimension we did not scale (down) the elevation accordingly but processed the input file conservatively using Terra with exaggerated elevation. We used the following terrain data sets to test our QuadTIN approach: Isabel Valley, Mindego Hill, Palo Alto, <ref type="bibr" target="#b0">1</ref> San Jose 1 (all available from http://bard.wr.usgs.gov/), Puget Sound, and Grand Canyon (both from http://www.cc.gatech.edu/projects/ large_models/). <ref type="table" target="#tab_1">Table 1</ref> shows results of the preprocess using Terra mesh simplification and the QuadTIN construction process. The Terra preprocess was conducted on a Sun Enterprise 450 server with 4GB memory and running on one of the four 296MHz UltraSPARC-II CPUs. The QuadTIN construction process was performed on a Sun Ultra60 workstation with a 450MHz UltraSPARC-II and 512MB main memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">QuadTIN construction</head><p>Despite the fact that the QuadTIN construction process performs demanding spatial search operations on the TIN input data, executes complicated distance and error metric calculations, inserts new Steiner points and computes a bounding sphere and bounding normal cone hierarchy it is very efficient. The construction process operated at a rate of processing more than 4300 points per second for most input files. One can also observe that the ratio of inserted Steiner points in comparison to the input data set is only about 23% for an offset factor of f = 80% for the restricted search domain (see also Section 4.2).</p><p>In <ref type="table" target="#tab_1">Table 1</ref> we also show the unusual results obtained with the Grand Canyon data set. This data set is unlike the others in several aspects. It has a very poor resolution of only 8 bits in the elevation dimension (only 256 different altitude values). This causes the Terra preprocess to perform poorly in terms of mesh simplification. The unusual simplification and extreme point distribution also causes the QuadTIN construction to perform poorly. Altogether, this outlier data set performs about 2 times worse in all aspects than the other data sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Triangulation and rendering</head><p>In <ref type="figure" target="#fig_0">Figure 14</ref> we show the numbers of selected vertices for different object-space geometric approximation error thresholds for a subset of the Palo Alto data set. We compared a plain restricted quadtree triangulation (RQT) built on the full resolution height-field, and our QuadTIN approach with two different Terra preprocess variants to corresponding simplifications with Terra which are single resolution meshes. Despite the added Steiner points our QuadTIN approach outperforms the regular grid RQT method significantly in terms of selected vertices for the same LOD. The Terra results are shown for comparison only since Terra provides only discrete simplifications and is not a multiresolution method. <ref type="figure" target="#fig_0">Figure 19</ref> illustrates adaptive QuadTIN triangulation for a perspective view of the Mindego Hill data set at varying image-space error thresholds τ. As shown in <ref type="figure" target="#fig_0">Figure 15</ref> for the Palo Alto model, the ratio of Steiner points is as low as 14% for coarse triangulations with high approximation errors. This shows that the QuadTIN triangulation adopts extremely well to the TIN input at coarse levels, and the inserted Steiner points are mainly required for conforming quadtree triangulations at high LODs. This can also be seen nicely in <ref type="figure" target="#fig_0">Figure 18</ref> where we observe that the number of selected Steiner points (red dots) is larger in regions close to the actual viewpoint (with high LOD) than in regions farther away (with low LOD).   <ref type="figure" target="#fig_0">Figure 16</ref> shows per frame timing results of our rendering algorithm at varying image-space error thresholds τ. The corresponding number of selected vertices, relative per vertex timing, and frame rates are given in <ref type="table" target="#tab_3">Table 2</ref>. We can see that the number of selected vertices and the rendering cost decreases rapidly (exponentially) as the image-space error threshold value τ increases slowly (linearly). One can also observe that the overall display performance for very small tolerances τ is dominated by the vertex  selection time, which performs the error calculations and LOD based vertex selection. Furthermore, looking at the display cost measured per rendered vertex it is noticeable that the system actually amortizes the cost better per vertex for small τ and larger meshes, despite the fact that the frame rate is lower (compare to <ref type="figure" target="#fig_0">Figure 16</ref>). However, this observation is not surprising since the constant overhead costs of the algorithms and data structures have more impact if the number of displayed vertices is small. In <ref type="figure" target="#fig_0">Figure 17</ref> we show experimental results of the Mindego Hill data set (280K vertices) rendered on a Dell 2.2GHz Pentium 4 with GeForce4Ti 4600graphics card. <ref type="figure" target="#fig_0">Figure 17</ref> shows per frame rendering cost comparison between standard triangle strip and vertexcache based rendering. It does not include timing for vertex selection or triangle strip generation but only the rendering cost. The standard method keeps the vertices in the application's system memory and uses an indexed triangle strip to render the triangulated terrain model. In contrast, the vertex-cache approach stores all vertices of the data set on the graphics card's memory using a NVIDIA OpenGL extension. The performance improvement is particularly significant for very small screen-space error tolerances τ with high triangle counts. Note that all vertices of the Mindego Hill data set fit into the graphics card's memory.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">CONCLUSION</head><p>In this paper we presented QuadTIN, a novel approach to impose quadtree-based multiresolution triangulation hierarchy on arbitrary irregular sets of elevation points. Using a limited number of Steiner points this triangulation hierarchy allows fast view-dependent LOD triangulation, triangle strip generation and real-time rendering. We also introduced an efficient heuristic how such a hierarchy can efficiently be constructed with a minimal number of Steiner points.</p><p>Experiments on a variety of meshes have shown the efficiency and applicability of our approach. Compared to TIN based multiresolution approaches the QuadTIN triangulation hierarchy provides better triangulation and rendering speed, and compared to quadtree or bintree triangulations based on regular grids QuadTIN requires significantly fewer vertices for given error thresholds and less storage space.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>FIGURE 1 .</head><label>1</label><figDesc>QuadTIN triangulation of irregular points of the Puget Sound elevation model. The seamingly irregular triangle mesh is represented and rendered by one single triangle strip. IEEE Visualization 2002 Oct. 27 -Nov. 1, 2002, Boston, MA, USA 0-7803-7498-3/02/$17.00 © 2002 IEEE</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>FIGURE 2</head><label>2</label><figDesc>FIGURE 2. Recursive quadtree subdivision and triangulation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FIGURE 3 .</head><label>3</label><figDesc>Cracks (shaded in grey) resulting from an unrestricted quadtree subdivision. An efficient variation of this constraint to avoid cracks is the dependency relation shown in Figure 4 that was introduced in [14]. This relation specifies for each vertex v on level l two other vertices v a , v b on level l as in Figure 4 b) and d), or on level l -1 as in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FIGURE 4 .</head><label>4</label><figDesc>Dependency relation of a RQT. The center vertex a) depends on the inclusion of two corners of its quad region. The boundary edge midpoints b) depend on the center vertex. Dependencies within and between the next higher resolution levels are shown in c) and d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>FIGURE 5 .</head><label>5</label><figDesc>Schematic overview of QuadTIN framework.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIGURE 6 .</head><label>6</label><figDesc>Irregular QuadTIN subdivision.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>FIGURE 7 .</head><label>7</label><figDesc>Vertex closest to the midpoint of base edge e t,t' is selected for edge bisection a) but only from within a restricted search domain b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>FIGURE 8 .</head><label>8</label><figDesc>Offset region ∂ t offset for f = 50% of one triangle ∂ t =( A,B,C ) used to define the restricted search domain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>FIGURE 9 .</head><label>9</label><figDesc>Non-convex quadrilateral a), and restricted point search domain for edge bisection b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>FIGURE 10 .</head><label>10</label><figDesc>Vertex closest to midpoint causes input points to be outside the boundary after edge bisection a), and b) modified vertex selection retaining inside-boundary relation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>Finally, the vertex closest to the midpoint of is selected for edge bisection and removed from the input point set or marked as used. If no suitable input point can be found, , a new Steiner point is inserted. Steiner points: To interpolate the coordinates and normal vectors of Steiner points, again the input point set is searched. For every Steiner vertex v S that is inserted in at least three and up to four closest points within from the input data set, or corners of the incident triangles and , are selected. The z-coordinate and normal vector of v S are averaged from these closest points. The x,y-coordinates are set to the midpoint of the bisected edge . If not initially given, the vertex normals of the input points are calculated from the TIN input file as average from the adjacent triangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>2 . 3 .</head><label>23</label><figDesc>Dependency resolution. Triangle strip construction. 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>FIGURE 11 .</head><label>11</label><figDesc>a) View-frustum culling if and b) back-face culling if are used for efficient backtracking in vertex selection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>(EQ 5 )FIGURE 12 .</head><label>512</label><figDesc>Screen projection of the approximation error is performed by perspective division.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>FIGURE 13 .</head><label>13</label><figDesc>Vertex morphing endpoint interpolation at the beginning of the morph a) and at the end when the interpolated vertices are modified as well.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>FIGURE 14 .</head><label>14</label><figDesc>Number of vertices used to represent a LOD triangulation for different object-space approximation errors.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>FIGURE 15 .</head><label>15</label><figDesc>Number of Steiner points in comparison to the overall number of selected vertices for different objectspace approximation errors and offset factor f = 80%.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Figure 16</head><label>16</label><figDesc>shows experimental results of the Palo Alto data set (1.4M vertices) rendered on a Dell 1.7GHz Pentium 4 with QuadroPro2 graphics card. The results are amortized over a large number of frames while interactively viewing the data set.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>FIGURE 16 .</head><label>16</label><figDesc>Per frame timing results of the rendering algorithm for different screen projection error thresholds τ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>FIGURE 17 .</head><label>17</label><figDesc>Comparison of rendering time between standard triangle strip rendering and rendering using vertex caching on the graphics card.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_24"><head>FIGURE 18 .</head><label>18</label><figDesc>Example of Steiner points (red dots) shown in comparison to all selected vertices for a perspective view of the San Jose data set (shown from bird's eye view).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_25"><head>FIGURE 19 .</head><label>19</label><figDesc>QuadTIN triangulations of the Mindego Hill data set with screen projection error threshold τ &lt; 4, 7 and 12 pixels (from left to right), resulting in 7984, 3789 and 1601 selected vertices respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>) is practically identical. Recursive vertex selection can be stopped at node h if or .</figDesc><table><row><cell>This is equivalent to</cell><cell></cell></row><row><cell>,</cell><cell>(EQ 3)</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>merged together Model #points Terra error #points QuadTIN #points %SteinerTABLE 1 .</head><label>1</label><figDesc>First four columns: number of points of initial models, time used by Terra for simplification, preprocess error tolerance in meters, and size of the resulting TIN. Last three columns: QuadTIN construction time, resulting data set size including inserted Steiner points, and percentage of Steiner points added in comparison to the TIN input size.</figDesc><table><row><cell>Isabel Valley</cell><cell>154795</cell><cell cols="2">16" 0.4</cell><cell>45770</cell><cell>10"</cell><cell>56610 23.68</cell></row><row><cell>Mindego Hill</cell><cell cols="4">1507815 2'43" 1.2 230117</cell><cell cols="2">51" 282475 22.75</cell></row><row><cell>Palo Alto</cell><cell cols="4">6021376 14'46" 0.8 1147256</cell><cell cols="2">4'29" 1418299 23.63</cell></row><row><cell>San Jose</cell><cell cols="4">17958000 35'06" 1.2 2008583</cell><cell cols="2">7'54" 2461123 22.53</cell></row><row><cell cols="3">Puget Sound 16785409 36'32"</cell><cell cols="2">6 2073276</cell><cell cols="2">8'17" 2563548 23.65</cell></row><row><cell>G. Canyon</cell><cell>8394753</cell><cell cols="5">33' 2.0 2540172 16'29" 3825217 50.59</cell></row></table><note>1. multiple terrain data files</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>TABLE 2 .</head><label>2</label><figDesc>Timing experiments for different screen-space error</figDesc><table /><note>thresholds τ.</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The digital elevation models shown in this paper all originate from the US Geological Survey, and we thank the large geometric models project at the GVU Center at Georgia Tech for the preparation of the textured Puget Sound and Grand Canyon data sets. Furthermore, we would like to thank the University Complutense of Madrid and the Spanish research grant TIC 99-0474 for their generous support of Roberto Lario's visit at UCI. We also want to thank the students Gary Oldham, Steven Hoey and Amy Wright for their work in the early stages of this project.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Efficient algorithms for embedded rendering of terrain models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laurent</forename><surname>Balmelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Serge</forename><surname>Ayer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Vetterli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Int. Conf. on Image Processing ICIP 98</title>
		<meeting>IEEE Int. Conf. on Image Processing ICIP 98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="914" to="918" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A comparison of mesh simplification algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paolo</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="54" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On levels of detail in terrains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Katrin</forename><surname>Mark De Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dobrindt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">11th Symposium on Computational Geometry</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="26" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Mark De Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Van Kreveld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Otfried</forename><surname>Overmars</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schwarzkopf</surname></persName>
		</author>
		<title level="m">Computational Geometry: Algorithms and Applications. Springer-Verlag</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Multiresolution models for topographic surface description</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leila</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paola</forename><surname>Marzano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enrico</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="317" to="345" />
			<date type="published" when="1996-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hierarchical triangulation for multiresolution surface description</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leila</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enrico</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="363" to="411" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Roaming terrain: Realtime optimally adapting meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Murray</forename><surname>Wolinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">E</forename><surname>Sigeti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><forename type="middle">C</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Aldrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><forename type="middle">B</forename><surname>Mineev-Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization 97</title>
		<meeting>IEEE Visualization 97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Right-triangulated irregular networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Williams</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Townsend</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="264" to="286" />
			<date type="published" when="2001-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Fast polygonal approximation of terrains and heigt fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<idno>cmu-cs-95-181</idno>
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Pittsburgh, PA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>School of Computer Science, Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Multiresolution compression and visualization of global topographic data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Gerstner</surname></persName>
		</author>
		<idno>29</idno>
		<imprint>
			<date type="published" when="1999" />
			<pubPlace>Bonn</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Universit</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>Institut f&quot;ur Angewandte Mathematik. to appear in Geoinformatica</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH 96</title>
		<meeting>SIGGRAPH 96</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Smooth view-dependent level-of-detail control and its application to terrain rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization 98</title>
		<meeting>IEEE Visualization 98</meeting>
		<imprint>
			<publisher>Computer Society Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Incremental viewdependent multiresolution triangulation of terrain</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Reinhard</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tobias H/"</forename><surname>Uttner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Pacific Graphics 97</title>
		<meeting>Pacific Graphics 97</meeting>
		<imprint>
			<publisher>IEEE, Computer Society Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="127" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Real-time, continuous level of detail rendering of height fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Ribarsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Larry</forename><forename type="middle">F</forename><surname>Hodges</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nick</forename><surname>Faust</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">A</forename><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH 96</title>
		<meeting>SIGGRAPH 96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Visualization of large terrains made easy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valerio</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<publisher>Computer Society Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="363" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Large scale terrain visualization using the restricted quadtree triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization 98</title>
		<meeting>IEEE Visualization 98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="volume">515</biblScope>
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Fastmesh: Efficient view-dependent meshing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Pacific Graphics</title>
		<meeting>Pacific Graphics</meeting>
		<imprint>
			<publisher>IEEE, Computer Society Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="22" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Overview of quadtree-based terrain triangulation and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
		</author>
		<idno>UCI-ICS-02-01</idno>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
		<respStmt>
			<orgName>Information &amp; Computer Science, University of California Irvine</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Variable resolution terrain surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enrico</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th Canadian Conference on Computational Geometry</title>
		<meeting>the 8th Canadian Conference on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="202" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A discussion on mixed (longest-side midpoint insertion) delaunay techniques for the triangulation refinement problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Rivara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th International Meshing Roundtable</title>
		<meeting>the 4th International Meshing Roundtable</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="335" to="346" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The quadtree and related hierarchical data structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanan</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="187" to="260" />
			<date type="published" when="1984-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The cone of normals technique for fast processing of curved patches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leon</forename><forename type="middle">A</forename><surname>Shirman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Salim</forename><forename type="middle">S</forename><surname>Abi-Ezzi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings EUROGRAPHICS 93</title>
		<meeting>EUROGRAPHICS 93</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="261" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Algorithms for constructing quadtree surface maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ron</forename><surname>Sivan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanan</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th Int. Symposium on Spatial Data Handling</title>
		<meeting>5th Int. Symposium on Spatial Data Handling</meeting>
		<imprint>
			<date type="published" when="1992-08" />
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A modified longest side bisection triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christoph</forename><surname>Stamm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephan</forename><surname>Eidenbenz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
		</author>
		<ptr target="http://cgm.cs.mcgill.ca/cccg98/proceedings/cccg98-stamm-modified.ps.gz" />
	</analytic>
	<monogr>
		<title level="m">Electronic Proceedings of the 10th Canadian Conference on Computational Geometry</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Using semi-regular 4-8 meshes for subdivision surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luiz</forename><surname>Velho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Graphics Tools</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="35" to="47" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Variable resolution 4-k meshes: Concepts and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luiz</forename><surname>Velho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonas</forename><surname>Gomes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="195" to="214" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Accurate triangulations of deformed, intersecting surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Von Herzen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH 87</title>
		<meeting>SIGGRAPH 87</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="103" to="110" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
