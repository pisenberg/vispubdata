<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Multiphase Approach to Efficient Surface Simplification</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
							<email>garland@cs.uiuc.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Shaffer</surname></persName>
							<email>shaffer1@cs.uiuc.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A Multiphase Approach to Efficient Surface Simplification</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-surface and object representations multiphase simplification</term>
					<term>quadric error metrics</term>
					<term>massive meshes</term>
					<term>out-of-core simplification</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a new multiphase method for efficiently simplifying polygonal surface models of arbitrary size. It operates by combining an initial out-of-core uniform clustering phase with a subsequent in-core iterative edge contraction phase. These two phases are both driven by quadric error metrics, and quadrics are used to pass information about the original surface between phases. The result is a method that produces approximations of a quality comparable to quadric-based iterative edge contraction, but at a fraction of the cost in terms of running time and memory consumption.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Whether arising from isosurface extraction or high-precision laser scanners, automatically generated polygonal surfaces are often very densely tessellated. Indeed, they are frequently unnecessarily detailed for a variety of applications, most notably interactive display. Over the last decade, several effective methods have been developed to automatically simplify polygonal surfaces, producing approximations that use far fewer triangles. Such simplification techniques have become a standard component of many surface acquisition systems.</p><p>Over time, the accuracy of scanning technology has improved dramatically, and the size of available polygonal meshes has risen at a similar pace. Most existing simplification methods are iterative in nature, and can only realistically process models up to 1-2 million triangles in size. Beyond this point, they tend to either be impractically slow or require unacceptable amounts of memory. However, extremely high-precision scans of objects at sub-millimeter accuracy are now available. At sizes that reach above 1 billion triangles, they are far beyond the capacity of iterative algorithms. The desire to be able to simplify such massive models has lead to the development of out-of-core simplification algorithms based on single-pass spatial clustering rather than iterative deletion of surface primitives.</p><p>These are the two fairly distinct classes of simplification algorithms now in common use. Iterative methods generally produce high quality results, but are incapable of processing truly large models because of excessive time and space requirements. In contrast, one-pass spatial clustering methods can process models of any size, but the quality of the resulting approximations tends to decline quite rapidly as the desired output size decreases.</p><p>We propose a new multiphase simplification system that provides the benefits of both of these algorithm classes. It is able to process models of arbitrary input size, like one-pass clustering, but is able to produce approximations of a quality comparable to iterative methods. In fact, our system produces results of comparable quality to the QSlim method <ref type="bibr" target="#b4">[5]</ref> but in a fraction of the time and using substantially less memory -we have routinely been able to produce nearly identical approximations in 1 / 5 the time or less. It achieves this level of performance by combining two distinct simplification passes: an initial spatial clustering phase, followed by an iterative edge contraction phase. These two phases are coupled together by passing quadric error information between them. The resulting system, based on well-understood techniques, is quite simple, can be implemented with little effort, and provides an excellent balance of efficiency and quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head><p>Among the earliest of simplification methods is the uniform vertex clustering algorithm developed by Rossignac and Borrel <ref type="bibr" target="#b16">[17]</ref>. The bounding box of the model is subdivided on a regular grid, and all vertices within a single cell are unified into a single representative vertex. This early algorithm was later generalized to use adaptive partitioning schemes such as octrees <ref type="bibr" target="#b12">[13]</ref> and collections of spheres <ref type="bibr" target="#b10">[11]</ref>. The greatest advantage of such clustering methods is their efficiency. They are typically extremely fast, although the quality of the resulting approximations degrades rapidly with decreasing output size. Clustering algorithms can also be designed to process input models by making a single linear scan through the data, and can have memory requirements that are independent of the input size. These properties make them a natural choice for out-ofcore processing of extremely large meshes <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9]</ref>. Combining onepass uniform clustering with a second adaptive BSP pass results in a slower but generally more accurate out-of-core method <ref type="bibr" target="#b17">[18]</ref>.</p><p>One of the most widely used classes of simplification algorithms is that based on iterative edge contraction. Such algorithms begin by ranking all edges of the model by some error metric, and proceed by repeatedly collapsing the minimum cost edge. It is also possible to connect topologically separate components by allowing the underlying algorithm to consider "virtual edges" that connect arbitrary pairs of vertices <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b4">5]</ref>. Hoppe's algorithm for constructing progressive meshes <ref type="bibr" target="#b5">[6]</ref> generally produces high quality results, but also has relatively high time and space requirements. This method can be adapted for use on very large models by segmenting the original data into tiles, processing them independently, and merging partially simplified tiles <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b15">16]</ref>. The quadric-based simplification algorithm developed by Garland and Heckbert <ref type="bibr" target="#b4">[5]</ref> tends to provide a good compromise between output quality and computation cost, producing generally good approximations in short amounts of time. Lindstrom and Turk's "memoryless" algorithm <ref type="bibr" target="#b9">[10]</ref> is closely related to the quadric-based method, but consumes less memory at the cost of somewhat greater running time. El-Sana and Chiang <ref type="bibr" target="#b1">[2]</ref> developed an iterative approach to processing very large models by combining data segmentation with out-of-core data structures.</p><p>These are the methods most directly related to our new multiphase algorithm. More complete details on existing simplification methods can be found in several published surveys <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b11">12]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Quadric Error Metrics</head><p>Our approach to the simplification problem is based on the quadric error metric <ref type="bibr" target="#b4">[5]</ref>, which we briefly summarize. A given triangle with unit normal vector n defines a unique plane n T v + d = 0. We can define a weighted quadric Q for which Q(v) is the squared distance of the point v to this plane, scaled by the weight ω:</p><formula xml:id="formula_0">Q = (ωA, ωb, ωc) = (ωnn T , ωdn, ωd 2 ) (1) Q(v) = ω(v T Av + 2b T v + c)<label>(2)</label></formula><p>This is the fundamental quadric for the given triangle. The fundamental quadric of a vertex is the sum of the fundamental quadrics of its adjacent faces. The weighted sum of squared distances of a point v to the planes defined by a set of triangles { f j } can be evaluated by summing the quadrics for each plane:</p><formula xml:id="formula_1">∑ j Q j (v) = ∑ j Q j (v)<label>(3)</label></formula><p>We choose the weights ω j to be 1 / 3 the areas of the corresponding triangles in order to achieve invariance of the error metric over all geometrically identical tessellations of the surface <ref type="bibr" target="#b3">[4]</ref>. The point v * for which Q(v) is minimal is the solution to the linear system</p><formula xml:id="formula_2">Av * = −b<label>(4)</label></formula><p>Since the matrix A is positive semidefinite, Cholesky decomposition is the preferred approach to solving this linear system <ref type="bibr" target="#b14">[15]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">MULTIPHASE SIMPLIFICATION</head><p>Experience has shown that different approaches to simplification are often suitable for varying simplification tasks. For example, uniform vertex clustering is suitable when time and space efficiency are the paramount concern and the desired level of simplification is not too aggressive. In contrast, iterative contraction algorithms tend to be slower and consume more memory, but produce much higher quality results, particularly as the desired output size shrinks. Our goal is to produce a single unified scheme for efficiently processing models of any size, while maintaining the ability to produce high quality approximations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Overview</head><p>The idea behind our multiphase simplification system is quite simple. We combine a uniform clustering phase and an iterative contraction phase in a simplification pipeline. The structure of the system can be quickly summarized: Notice that this is not equivalent to merely passing the input model through a clustering step, writing an intermediate approximation,</p><p>and then passing that model through an iterative contraction step. The crucial difference is that our system couples successive phases together by passing quadrics accumulated in one phase onto the next. While a simple idea, this use of quadrics to pass information between phases has a very significant practical impact. <ref type="figure" target="#fig_0">Figure 1</ref> shows the results of simplifying a dragon model with (b) two separate passes and (c) two coupled passes. Qualitatively, important details of the surface (e.g., the tail and mouth) are preserved much better by our coupled multiphase approach. The mean squared error is also about 50% lower than that of the model produced by two separate passes. Indeed, it is nearly identical in quality to (d) the approximation produced by QSlim alone. But whereas QSlim requires O(n log n) time and O(n) space, our system requires only O(n + r log r) time and O(r) space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Phase I: Uniform Clustering</head><p>The first phase of the system is quite similar to Lindstrom's OoCS method <ref type="bibr" target="#b7">[8]</ref>. Briefly, we begin by subdividing the axis-aligned bounding box of the input on a regular grid <ref type="bibr" target="#b0">1</ref> . Within each voxel of this grid, we maintain a cumulative quadric and mean vertex position. Each triangle of the input is scanned, and its fundamental quadric is derived as in Equation 1. This fundamental quadric is added into the cumulative quadrics for the (up to) three voxels containing the corners of the triangle. The output triangles are exactly those whose corners fall in three different voxels. Following the approach proposed by Lindstrom and Silva <ref type="bibr" target="#b8">[9]</ref>, we also accumulate edge normals to help preserve open boundaries. Once all input triangles have been scanned, we can compute a representative vertex location v * for each voxel using Equation 4, or the mean vertex position if A is singular. The choice of position here is not terribly important, as the next phase will derive its own vertex positions. Only along boundary curves, where Phase II will reference the intermediate geometry to construct boundary constraints, does our choice of intermediate vertex location effect the final approximation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Original</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>QSlim</head><p>Multiphase Original QSlim Multiphase <ref type="figure">Figure 2</ref>: Multiphase results nearly identical to those of QSlim (except on boundaries), but generated in 1 / 5 the time.</p><p>This initial phase produces an intermediate approximation and a set of quadrics. Each grid voxel containing one or more input vertices produces exactly one intermediate vertex. Associated with each intermediate vertex is exactly one quadric which is the sum of the fundamental quadrics of all the input vertices contained in the corresponding voxel. This is the only data passed to the following phase. All other data, such as mean vertex position and cumulative edge normals are discarded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Phase II: Iterative Contraction</head><p>The standard quadric-based contraction algorithm QSlim <ref type="bibr" target="#b4">[5]</ref> is divided into two fundamental stages: (1) initialization assigns quadrics to input vertices and (2) iteration continues contracting the current edge of least cost until the desired output size is reached. Our system uses the standard iteration stage unaltered, but it is preceeded by a new initialization stage that accepts intermediate results from Phase I.</p><p>Initialization of the iterative phase would normally involve constructing fundamental quadrics for each vertex from the planes of its adjacent faces. But instead of constructing quadrics from the geometry of the intermediate approximation, we merely use the quadrics accumulated during the previous phase of the system. This means that we continue to use quadrics derived from the input geometry. Provided that the grid used in Phase I was suitably fine, these quadrics will reliably characterize the local shape of the original surface. Having assigned these basic quadrics to each vertex, we accumulate additional constraint quadrics to preserve boundaries <ref type="bibr" target="#b4">[5]</ref>. The rest of the simplification algorithm proceeds as normal, producing the final approximation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Selecting Grid Resolution</head><p>In order for this system to perform well, it is of course important that the resolution of the voxel grid used in Phase I be chosen appropriately. As a general rule of thumb, we have observed that the grid resolution should be chosen so that Phase I produces at least 4 times more intermediate vertices than desired output vertices. While the user could simply specify the dimensions of the grid directly, we recommend two general strategies for automatically selecting an appropriate resolution.</p><p>The first alternative is for the user to specify a desired memory usage limit for the Phase I grid. Since we use a sparse grid data structure, we cannot guarantee absolute memory limits a priori as the memory required will depend on the number of occupied voxels. While we cannot determine this exactly, we can in fact estimate it with reasonable reliability by sampling the input vertex density on a fixed size grid. This estimation comes at the price of an additional scan over the data, but it provides the user with a useful level of control over the storage requirements of the simplification system. A user particularly concerned with the quality of the output could thus select an extremely fine resolution by allowing the system to consume a large fraction of all available memory.</p><p>A second approach to selecting the grid resolution is to directly specify the size of an individual voxel. This is currently our preferred approach, because it provides a guaranteed bound on the Hausdorff error introduced during Phase I. When clustering on a grid with voxel diameter d, no output vertex is more than d away from an input vertex.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Discussion</head><p>Our primary motivation for coupling quadric-based iterative contraction with a uniform clustering preprocess was to produce high quality approximations of arbitrarily large input meshes. However, there are some additional advantages to this initial clustering step.</p><p>First and foremost, is the increased speed and decreased memory consumption of the overall system. Given that quality of the multiphase output is comparable to QSlim, this multiphase system can be used as a much more efficient replacement for QSlim even on meshes of moderate sizes. Unlike most iterative contraction methods, the multiphase system can easily process models where coincident vertices are duplicated (so called "triangle soups"), as the initial clustering will unify all duplicated vertices. It can also remove small topological features, which we have found works at least as well as, if not better than, iterative contraction using additional virtual edges.</p><p>Unfortunately, we cannot exercise much control over these topological modifications. This points to the single greatest disadvantage of the initial clustering pass: we cannot guarantee topological preservation. The use of a fixed voxel grid also results in the output approximation being sensitive to translation/rotation of the input mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>Our experiments have shown that our multiphase simplification system performs very well. We have compared its performance with our own implementations of uniform out-of-core clustering (OoCS) <ref type="bibr" target="#b7">[8]</ref>, adaptive out-of-core clustering (BSP) <ref type="bibr" target="#b17">[18]</ref>, and quadric-based contraction (QSlim) <ref type="bibr" target="#b4">[5]</ref>. Multiphase simplification is able to simplify models of arbitrary size, like OoCS, but is able to generate much higher quality approximations at moderate to small output sizes. Indeed, it consistently produces approximations of quality comparable to QSlim, but using considerably less running time and memory, both asymptotically and in practice.  All performance tests were run on an 1 GHz Pentium III system with 4 GB of RAM and running a Linux kernel. Our implementations all share a common code base, including identical implementations of the quadric error metric and iterative edge contraction. Our QSlim software uses an ASCII input format, while the others use memory-mapped binary files. For this reason, all running times exclude file I/O time. <ref type="figure">Figure 2</ref> demonstrates the comparative performance of our multiphase system with the iterative QSlim algorithm. Both systems were used to produce a 1000 face approximation of the 69,451 face original. The multiphase system produced an intermediate approximation of 9127 faces using a 40×40×31 grid. Visually, the quality of the approximations is very similar. Rather surprisingly, the mean squared error of the multiphase approximation is actually 40% lower. And the multiphase system produced this approximation 4.5 times faster than the QSlim system. The only significant difference in the quality of the results is in the preservation of the boundary curves along the base of the model. Because it is forced to use a weaker heuristic, the initial clustering phase does not preserve the open boundary as well as iterative contraction. <ref type="figure" target="#fig_3">Figure 3</ref> illustrates the simplification of a moderately large input model: Michelangelo's David scanned at 2mm resolution, containing 8 million triangles. The out-of-core uniform clustering system used a 11×28×6 grid, and produced an approximation with 1157 faces. The multiphase system produced an intermediate approximation of 19,000 faces using a 40×101×23 grid. As we would expect from uniform clustering at this aggressive level, the quality of the approximation has deteriorated severely. The topology of the surface has been adversely effected (e.g., the arm joining the hip) and various features such as the arm have been seriously distorted. The black regions (e.g., atop the head) are areas where part of the surface has been turned inside out. The rough outlines of the regular grid are also apparent in the triangulation, particularly on the stomach. In contrast, the results from the multiphase system have preserved the surface details of the original to a much greater extent. In particular, notice that the eye brow, hair line, nose, and other facial features are still quite identifiable. This very substan-    <ref type="figure">Figure 6</ref>: Effect of grid size on approximation error. <ref type="table">Dimensions  Total Occupied Occupancy Rate   60×42×27  68,040  8073  11.9%  90×63×40  226,800  17,999  7.9%  120×85×54  550,800  31,869  5.9%  150×106×67 1,065,300  48,349  4.5%  180×127×80 1,828,800</ref> 66,920 3.7% <ref type="table">Table 1</ref>: Grid sizes used for results in <ref type="figure">Figure 6</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Number of Cells</head><p>tial increase in quality was achieved with a fairly modest increase in running time. Multiphase simplification required a total of 43 seconds, as compared to 19 seconds for uniform clustering. For further comparison, <ref type="figure" target="#fig_4">Figures 4 and 5</ref> present the results of running all four simplification systems on the dragon pictured in <ref type="figure" target="#fig_0">Figure 1</ref>. Our QSlim implementation supports both the original Garland-Heckbert algorithm as well as a "memoryless" variant inspired by the Lindstrom-Turk algorithm. These implementations are equivalent except that the standard form accumulates quadrics at each step and the memoryless form recomputes quadrics at each step. We have also tested three variants of the multiphase algorithm: (1) the standard multiphase algorithm presented in Section 3 (2) separate de-coupled passes and (3) de-coupled passes where the second pass is a memoryless form of iterative contraction. All multiphase trials in these figures were run with a fixed grid size of 180×127×80. Approximations for the 800,000 face original were produced at the 100,000, 50,000, 10,000, 5000, and 1000 face levels. <ref type="figure" target="#fig_4">Figure 4</ref> shows the running times of the simplification systems plotted as a function of the mean squared error of the approximations generated. As expected, both QSlim variants were substantially slower than the other methods. Uniform clustering was the fastest, with the multiphase method roughly twice as slow. However, the error of the approximations produced by the multiphase system are consistently lower. Surprisingly, it produces higher quality approximations even than the QSlim system at lower output sizes. In contrast, the purely clustering-based systems are producing approximations with more than an order of magnitude greater error by the time we reach the 1000 face level. <ref type="figure" target="#fig_5">Figure 5</ref> demonstrates in greater detail the output quality of the various methods. The pure clustering methods produce output with substantially higher error than all other methods. The quality of the approximations generated by all three multiphase variants are all comparable to the results produced by the QSlim variants, and even produce lower total error at lower output resolutions. Of the three multiphase variants, the coupled variant that we have proposed consistently produces results with the lowest total error. On average, our proposed method produced results with 20-30% lower error than the two de-coupled variants. We have observed that at very fine grid resolutions, the difference between coupled and de-coupled multiphase methods becomes fairly negligible. This is what we would expect, since as the grid resolution increases, more and more of the simplification work is actually being done in Phase II. Similarly, as the grid used becomes coarser, the performance gap between the coupled and de-coupled methods grows significantly, until the coupled version produces errors which are a factor of 2-3 below that of the de-coupled version.</p><p>The choice of grid resolution during Phase I is one of the most significant factors determining the quality of the approximations generated by our multiphase system. To help quantify its impact, we generated several 5000 face approximations of the dragon model and measured the error of the resulting output. The specific grid sizes used are shown in <ref type="table">Table 1</ref>, and the results of the experiment are shown in <ref type="figure">Figure 6</ref>. As noted above, we see that phase coupling significantly reduces approximation error, except at very fine and very coarse grid resolutions. We also see that the memoryless variant consistently produces less accurate approximations at moderate resolutions. And as we would expect, there is some point beyond which error grows very rapidly as the grid resolution is decreased, ultimately reaching the much higher error rate characteristic of pure uniform clustering. <ref type="figure" target="#fig_6">Figure 7</ref> provides a more qualitative demonstration of the effect of Phase I grid resolution on the quality of the final result. The original input model has roughly 28 million triangular faces, and we produced several 5000 face approximations using our multiphase system. Each approximation is labeled by the Phase I grid size and the number of triangles in the resulting intermediate approximation.</p><p>The rightmost approximation corresponds to uniform clustering, as the Phase I grid has already simplified the input beyond the target size. For each subsequent approximation, the Phase I dimensions were doubled along each axis. As expected, increasing the grid size does indeed produce better results, and larger intermediate models. We also see the diminishing returns of increasing grid size. Increasing the grid size beyond that shown here yields extremely small incremental improvements. Total simplification times ranged from 145 seconds for the coarsest grid to 160 seconds for the finest grid. This relatively narrow variation in running time, as compared with the variation in grid sizes, is because for data of this size -500 MB in this particular case -the running time is largely dominated by the cost of simply scanning through the data stream.</p><p>We conclude by looking at the performance of our system on a truly large surface model. The model of Michelangelo's St. Matthew shown in <ref type="figure" target="#fig_7">Figure 8</ref> was scanned at 0.25mm resolution, contains roughly 372 million triangles, and is over 6.5 GB in size when uncompressed. The three approximations shown in <ref type="figure" target="#fig_7">Figure 8</ref> were generated in approximately 47 minutes using a constant intermediate grid size of 300×847×273. The first approximation, containing 1 million triangles, has lost very little of the detail of the original, and our system continues to produce high-fidelity approximations at an output size of 100,000 triangles. Even with only 10,000 output triangles, the approximation preserves the overall shape of the statue quite well. Note that the holes apparent here are actually preserving holes present in the input data, although they have grown in size.</p><p>The images shown in <ref type="figure" target="#fig_8">Figure 9</ref> illustrate the performance of our system on the St. Matthew model in closer detail. The primary effect of reducing the model from 372 million to 1 million triangles has been to remove the very fine grained chisel marks that cover the surface, hence the smoother look of the leg in the reduced model. Even with 100,000 output triangles, the shape of the surface is largely intact. In particular, notice that the contours of the clothing and the indentation above the knee are represented reasonably accurately. Finally, with 10,000 output triangles, a substantial amount of the original detail has been removed. Nevertheless, the contours of the leg and the clothing surrounding it remain easily identifiable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSION</head><p>We have presented a new multiphase method for efficiently producing high quality approximations of polygonal models of arbitrary size. By combining one-pass spatial clustering with iterative edge contraction, it provides the benefits of both methods. It can process models far larger than iterative methods are capable of, and produces higher quality approximations than pure clustering methods, especially at small output sizes. The two phases of the system are coupled together by attaching quadric error data to the intermediate model passed between them. Just as quadrics have proven effective at driving iterative edge contraction and spatial clustering Original (372 million triangles) 1 million triangles 100,000 triangles 10,000 triangles   <ref type="figure" target="#fig_7">Figure 8</ref>. Note the preservation of surface details even after extremely aggressive reduction.</p><p>separately, they are also an effective means of communicating information between these different simplification frameworks. We believe that this new algorithm is truly general purpose, in that it can be applied to inputs of any size, from a few thousand to a few billion faces, and can successfully produce high quality approximations in fairly little time. While the current system has performed quite well, there are a number of areas for future work that could potentially improve its performance appreciably. Currently, the choice of grid resolution for the clustering phase is completely fixed, either by memory limit or voxel size. It would be desirable to have a method that could automatically select an adaptive grid size based on the structure of the input surface itself. It is also apparent that our proposed multiphase system is only a single instance of a much more general system where multiple simplification phases are combined in a pipelined fashion. Many alternative designs for the individual stages could be explored, but we believe that it would be most productive to investigate alternative adaptive clustering strategies, such as octrees or BSP trees. Finally, we were quite surprised to find that the multiphase algorithm frequently produced results with error lower than the results of the fully iterative QSlim method. This rather counterintuitive result deserves more careful scrutiny.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>IEEEFigure 1 :</head><label>1</label><figDesc>Visualization 2002 Oct. 27 -Nov. 1, 2002, Boston, MA, USA 0-7803-7498-3/02/$17.00 © 2002 IEEE An 870,000 triangle model is reduced to 1000 faces by (b) two separate simplification passes and (c) two passes coupled by quadrics. Note the greater fidelity resulting from our coupled multiphase system (e.g., around the tail), comparable to the (d) QSlim results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>1 .</head><label>1</label><figDesc>Perform uniform clustering on input model (of size n), producing an intermediate approximation (of size r) with 1 quadric per vertex. 2. Beginning with this intermediate approximation and its associated quadrics, perform iterative edge contraction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>The multiphase system clearly outperforms uniform clustering when aggressively simplifying large meshes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Tradeoff of running time vs. error for the dragon model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Approximation error as a function of output size for the dragon model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Simplification to a target output size of 5000 faces using different Phase I grid resolutions. Model sizes shown are for intermediate models; the rightmost model is already beyond the target size, so this is also the output size.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Multiple approximations of a very large (6.5 GB) surface model using a constant Phase I grid resolution of 300×847×273.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Close-up view of models shown in</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Only a small fraction of the many voxels are typically occupied. Sparse grid data structures are essential for good performance.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">ACKNOWLEDGEMENTS</head><p>We would like to thank the Stanford Graphics Lab and the Digital Michelangelo Project for providing the surface models shown in this paper. This work was funded in part by the National Science Foundation under grant CCR-0098170.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A comparison of mesh simplification algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="54" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">External memory view-dependent simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jihad</forename><surname>El</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-</forename><surname>Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yi-Jen</forename><surname>Chiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="139" to="150" />
			<date type="published" when="2000-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Multiresolution modeling: Survey &amp; future opportunities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">State of the Art Report</title>
		<imprint>
			<date type="published" when="1999-09" />
			<biblScope unit="page" from="111" to="131" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Quadric-Based Polygonal Surface Simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
		</author>
		<idno>CMU-CS-99-105</idno>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon University, CS Dept.</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. Rept.</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIG-GRAPH 96</title>
		<meeting>SIG-GRAPH 96</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Smooth view-dependent level-of-detail control and its application to terrain rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization 98 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="volume">516</biblScope>
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Out-of-core simplification of large polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lindstrom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="259" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A memory insensitive technique for large model simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cláudio</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="121" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Fast and memory efficient polygonal simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization 98</title>
		<meeting>IEEE Visualization 98</meeting>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="volume">544</biblScope>
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Model simplification using vertex-clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tiow-Seng</forename><surname>Kok-Lim Low</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tan</surname></persName>
		</author>
		<ptr target="http://www.iscs.nus.sg/∼tants/" />
	</analytic>
	<monogr>
		<title level="m">1997 Symposium on Interactive 3D Graphics. ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Advanced Issues in Level of Detail</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amitabh</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benjamin</forename><surname>Watson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 2001 Course Notes. ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="2001-08" />
			<biblScope unit="volume">45</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">View-dependent simplification of arbitrary polygonal environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carl</forename><surname>Erikson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="199" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Progressive simplicial complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jovan</forename><surname>Popović</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="217" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Numerical Recipes in C: The Art of Scientific Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>William</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Saul</forename><forename type="middle">A</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">T</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><forename type="middle">P</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Flannery</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
	<note>Second edition</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Progressive meshes for large models of arbitrary topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Prince</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
		<respStmt>
			<orgName>University of Washington</orgName>
		</respStmt>
	</monogr>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Multi-resolution 3D approximations for rendering complex scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarek</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Borrel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Modeling in Computer Graphics: Methods and Applications</title>
		<editor>B. Falcidieno and T. Kunii</editor>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="455" to="465" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Efficient adaptive simplification of massive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Shaffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization 2001</title>
		<meeting>IEEE Visualization 2001</meeting>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="127" to="134" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
