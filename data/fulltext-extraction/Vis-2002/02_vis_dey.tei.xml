<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PMR: Point to Mesh Rendering, A Feature-Based Approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tamal</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<postCode>43210</postCode>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Hudson</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<postCode>43210</postCode>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">PMR: Point to Mesh Rendering, A Feature-Based Approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: I.3.3 [Computer Graphics]: Picture Image Generation-Viewing algorithms; I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Object hierarchies rendering</term>
					<term>feature</term>
					<term>multi-resolution</term>
					<term>level of details</term>
					<term>Voronoi diagram</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Within the field of computer graphics and visualization, it is often necessary to visualize polygonal models with large number of polygons. Display quality is mandatory, but it is also desirable to have the ability to rapidly update the display in order to facilitate interactive use. Point based rendering methods have been shown effective for this task. Building on this paradigm we introduce the PMR system which uses a hierarchy both in points and triangles for rendering. This hierarchy is fundamentally different from the ones used in existing methods. It is based on the feature geometry in the object space rather than its projection in the screen space. This provides certain advantages over the existing methods.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Interactive visualization of large polygonal meshes poses a problem to many of the present day graphic rendering systems. Indeed, the most common graphic libraries in use today do not have any builtin facilities for dealing with models that need larger RAM than the one available in the rendering computer. Of course, the problem is alleviated with larger memory, but the gain in hardware resources is fast overtaken by the demand on data size with advancing technology. This has prompted research in algorithmic techniques that can complement the available hardware and software for rendering large polygonal models.</p><p>Known approaches. One way to reduce the demand on the rendering resource is by displaying only the visible parts and no more. The hierarchical Z-buffers <ref type="bibr" target="#b15">[16]</ref>, adaptive displays <ref type="bibr" target="#b13">[14]</ref>, and Hierarchical Occlusion Maps <ref type="bibr" target="#b28">[29]</ref> fall into this category. It is also possible to coarsen or refine the model itself as it is being viewed. Progressive and view dependent meshes <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b19">20]</ref>, multiresolution meshes based on subdivisions <ref type="bibr" target="#b16">[17]</ref>, wavelets <ref type="bibr" target="#b3">[4]</ref> and others <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b11">12]</ref> are examples of this approach.</p><p>Most of the computation during rendering a mesh is devoted to rasterizing polygons. Consequently, efforts have focused on replacing them with easier primitives such as points that can be rendered as pixels. This has led to intense research on point cloud representation of models in recent years <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b29">30]</ref>. The notion of points as rendering primitive dates back as early as 1974 ยก This research is partially supported by NSF under grants CCR-9988216 and DMS-0138456 (subcontract: Stanford University) with the work of Catmull <ref type="bibr" target="#b2">[3]</ref>. In 1985 Levoy and Whitted proposed points exclusively as the primitive of choice for display <ref type="bibr" target="#b21">[22]</ref>. In <ref type="bibr" target="#b17">[18]</ref> and <ref type="bibr" target="#b27">[28]</ref>, points are used as a primitive for ray tracing of images.</p><p>The idea of view dependent hierarchy which is used in mesh rendering <ref type="bibr" target="#b19">[20]</ref> is first incorporated in point based rendering by Rusinkiewicz and Levoy in QSplat <ref type="bibr" target="#b26">[27]</ref> and later by Pfister et. al in Surfel <ref type="bibr" target="#b24">[25]</ref>. Zwicker et. al introduce a screen space based splatting technique to render points with textures <ref type="bibr" target="#b29">[30]</ref>. Kalaiah and Varshney selectively alters the size of the points to be displayed <ref type="bibr" target="#b20">[21]</ref>. A problem with the point based rendering scheme is that when one moves very close to the surface, the sample points may be more than one screen pixel apart. This means that either a blocky image will be seen (in the case where no interpolation is done), or artifacts may be present if the interpolation is performed in screen space (an example of such a blocky image is shown in <ref type="figure" target="#fig_1">Figure 1</ref>). This problem is overcome with the hybrid techniques that use both points and triangles as rendering primitive as proposed in POP <ref type="bibr" target="#b4">[5]</ref> and Hybrid Simplification <ref type="bibr" target="#b6">[7]</ref>. POP uses a point hierarchy as in QSplat and uses triangles only at the lowest level. Hybrid Simplification on the other hand uses a triangle hierarchy based on edge collapsing and replaces them with points adaptively based on an error metric. We introduce a hybrid technique called PMR which is similar to POP and Hybrid Simplification in that it also uses points and triangles adaptively, but is fundamentally different in generating the hierarchy.</p><p>First, PMR builds a hierarchy of points and triangles and thus, unlike POP, takes advantage of the multiple resolution of triangles as well as points. Second, the hierarchy is computed solely based upon a scale independent metric as opposed to a scale dependent error metric as in Hybrid Simplification. This is achieved by making the hierarchy dependent on intrinsic features of the model rather than its specific scaled embedding. Third, unlike POP and Hybrid Simplification, the hierarchy in PMR is built on an input point cloud without requiring that a surface mesh be input. While, if needed, one can always compute a surface mesh from a point cloud, it is sometimes prohibitive to compute such a mesh from a large data. Taking away this onus from the user, PMR provides more flexibility. A side benefit of this approach is that the hierarchy becomes lighter weight. It does not need a huge graph structure as in the Hybrid Simplification, a coarse octree structure is sufficient to hold the hierarchy instead.</p><p>Our approach. Our rendering system PMR, like POP and Hybrid Simplification, utilizes both points and triangles for display. However, there are some new features which are different from previously introduced rendering systems. In particular, our algorithm makes use of feature-dependent decimation rather than screenspace projections in order to determine which points are "more important" for a visually pleasing display of the model. Indeed, if a large number of points are located near each other in an area of low curvature, it may be possible to position the viewer such that the distance between the points is more than one pixel. However, since the area is flat, there is no advantage to showing all the detail at once; a small subset of the points connected with polygons would be adequate to represent that particular area faithfully. PMR in fact does deal with this situation: it appropriately reduces the number of  A brief overview of the method is as follows. The input point cloud is organized into an octree; this serves as a spatial decomposition of the data. As an additional benefit, the octree is used for accelerating the rendering later. An algorithm based upon the Voronoi diagram and its dual Delaunay triangulation is then used to preprocess the point set and to determine the relative importance of the points for display. This importance is computed by estimating the local feature size around a point from the point cloud itself. In addition, a polygon based approximation to the surface is also computed using information from the Delaunay triangulation. This process is repeated for several levels of decimation in order to produce a hierarchy of points and triangles; this allows the rendering time spent on each area of the image to be tailored to the specific detail requirements of that region. Finally, the pre-processed file is written to disk. The viewer application may then choose a level in the precomputed hierarchy according to the viewing distance. A simple user defined parameter can be used to control the relation between the hierarchy level and the viewer distance, thus achieving the speed/quality tradeoff. Within each hierarchy level, the choice of point vs. triangle is guided by a screen space metric. The key features of PMR can be summarized as follows.</p><p>(1) Good quality at all viewing distances.</p><p>(2) Adaptive display based upon model complexity.</p><p>(3) Adjustable speed/quality tradeoffs as the user desires. The rest of the paper is organized as follows. Section 2 describes the preprocessing step that creates the point and triangle hierarchy. Section 3 details the rendering algorithm that uses the created hierarchy stored into the disk. Section 4 shows our results and we conclude in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PREPROCESSING</head><p>We preprocess the data to create a hierarchy of points and a triangular mesh out of them. The hierarchy is based on the geometry of the shape rather than on a screen space metric. The input point cloud is decimated wherever its density is more than needed to capture the features of the shape. A threshold parameter guides the level of this decimation resulting in a hierarchy of points. Notice that this method does not introduce any new point; it only filters the input selectively solely based on features.</p><p>Spatial decomposition. Our feature based hierarchy obviously calls for a feature detection step. We do this by a Voronoi based method described in <ref type="bibr" target="#b10">[11]</ref>. Unfortunately, Voronoi diagram computations are costly. In particular, large data sets pose severe problems if the Voronoi diagram data structure demands more RAM memory than is available. Frequent thrashing in this case cripples the computation. We overcome this problem by dividing the data with an octree and then concentrating on each node individually for the Voronoi diagram and subsequent computations. This strategy has given remarkable success in Voronoi based surface reconstruction from large point clouds, see <ref type="bibr" target="#b9">[10]</ref> for details.</p><p>The depth of the octree subdivision depends on the number of points that we allow in the octree nodes at the lowest level (leaf nodes). Since these octree nodes will be used later in the rendering stage as well, it is advantageous that they not have too many or too few points within them. As the octree nodes become smaller, there are more of them to process, and overhead rises. Conversely, if the octree nodes are too few in number, some efficiency is lost in the rendering stage again. Experiments suggest that a maximum between 8000 and 12000 points per octree node provides a good balance. Point hierarchy. It has been observed by Amenta and Bern <ref type="bibr" target="#b1">[2]</ref> that the Voronoi cells for a point cloud that is dense with respect to local feature sizes are "long" and "skinny." We capture this aspect by computing the height and radius of a Voronoi cell ยก for a point  Intuitively, the height of a Voronoi cell measures the distance of a sample point from the medial axis of the shape enclosed by the surface. This distance is small where the surface bends sharply (high curvature) or has other parts of the surface near by. This means that the height measures the local feature size. The radius, on the other hand, measures the distance between sample points that are neighbors on the surface. Thus, the ratio ยง "</p><formula xml:id="formula_0">v S + p p p + h p r p v (a) (b) (c)</formula><p>gives an estimate of the sample density with respect to the local feature size.</p><p>The decimation step that is used to create the point hierarchy removes those points whose Voronoi cells have ยง " ratio smaller than a threshold value ) because they must have several other points close to them and so they are redundant for the display of the surface at a lower resolution. Points in areas with high curvature or small features will be retained because their cells will not be long and skinny. An iterative point deletion with the above ratio condition generates a point cloud for one level in the hierarchy. Different levels of the hierarchy are created via adjusting the value of the threshold ) . In particular, the decimation should be relatively low in the more detailed levels of the hierarchy so that there will be sufficient detail for close views. In addition, since sparser data sets are able to be displayed more rapidly, the most decimated levels of the hierarchy may be comparatively sparse, since they will not be shown unless the corresponding part of the object is further away. For our experiments, we typically used a range of values from (that is, any leaf node that shares an edge, face, or vertex with the node). Those points which are outside 0 are processed just as any other point with the exception that their information is not written to disk at this time (the data for any point is written only when the leaf node containing it is the current one being processed). <ref type="figure" target="#fig_4">Figure 3</ref> shows the point hierarchy for the HAND data set.</p><p>Triangle hierarchy. Each point cloud in the point hierarchy is also equipped with a set of triangles that approximate the surface for display at higher resolutions. Let . We take the dual Delaunay triangles of these edges which create an umbrella for at the hierarchy level A ; see <ref type="figure" target="#fig_3">Figure 2</ref>(c). For sufficiently dense point samples, the umbrella triangles lie flat with respect to the surfacean observation that follows from the results in <ref type="bibr" target="#b8">[9]</ref>. The umbrella triangles for represent the interpolated surface locally around . All such umbrella triangles at level A create the A th level of the triangle hierarchy. <ref type="figure" target="#fig_5">Figure 4</ref> shows the hierarchy of triangles produced by this method for the HAND data set.</p><p>Records. In addition to the point and triangle hierarchy, we also compute some other information within each leaf node. For each hierarchy level, we determine the umbrella radius for a point ยฃ , which is the maximum distance of ยฃ to any other vertex in its set of umbrella triangles. Later, this umbrella radius is used to select whether to render a given sample point as a single pixel or as a collection of umbrella triangles. In addition, the average value of all the umbrella radii at each hierarchy level is also computed and stored. This is used later to determine the level of hierarchy which should be selected for display. It should be noted that a triangle which is present in one sample point's umbrella will very likely be present within the umbrellas of the other two vertices of that triangle. To accelerate rendering, then, it is useful to associate a flag with each triangle so that in subsequent rendering it is only drawn once.</p><p>The entire octree is written into the disk with the following information.</p><p>(1) Point list : the points in a leaf node are placed consecutively in this list.</p><p>(2) Normals : the estimated normals at each point from the Voronoi diagram of the undecimated point set at each leaf node.</p><p>(3) Octree structure : the tree data structure representing the octree.</p><p>(4) Hierarchy : Each level of the hierarchy in a leaf node has (a) A list of umbrella triangles for each vertex (b) umbrella radii for each vertex and the average umbrella radius over all points.</p><p>All preprocessing steps can be done offline, thus saving time during rendering. Moreover, if the disk file containing the octree information is mapped into memory, the octree does not need to take the full amount of RAM that would otherwise be necessary. If the viewing system does not have enough memory to hold all the data at once, portions can be selectively paged to and from the disk file.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">VIEWING</head><p>After the preprocessed file is written to disk, it may now be viewed in an accelerated manner. We take advantage of the system call mmap() under Linux; this references a disk file as if it is actually an area of RAM. The operating system's disk caching facilities then handle the buffering of recently used data in memory and provide for fast access to frequently used information. If the disk file is larger than the available memory space, data can be selectively loaded from disk or purged from memory as needed under the control of the operating system. One may observe that there is no need to build any octree data structure at this time since the stored file already has the data blocked into nodes and the octree is thus stored there. The octree decomposition of the point cloud also could allow us to selectively cull away portions of the model which lie outside the view frustum. This is the same idea as used in QSplat; the rationale is that no effort should be spent on invisible nodes. Once a node is chosen for display, we first need to select an appropriate level of hierarchy for it. Next, we need to determine whether to render a particular point as a single pixel or as an umbrella of triangles. In fact, both of these questions are answered via a mapping between the world and the screen space.</p><p>World to screen space. It is necessary to determine the size of a pixel (referred to as pixel size) in relation to the "world space" in which the object's point coordinates are defined. However, a single pixel covers an ever-increasing amount of such space as its distance ยก ยก ยก <ref type="figure">Figure 5</ref>: The pixel size grows as distance from the viewer increases.</p><p>from the eye point increases -or, equivalently, as its Z-buffer value grows larger (see <ref type="figure">figure 5)</ref>.</p><p>Therefore, it is necessary to map the distance of the model from the viewer to the pixel size. Since it would be too expensive to perform such an estimation for every point in the model, we again make use of our octree data structure. Specifically, when a leaf node is processed, we examine its eight corner vertices. One of these vertices will be closest to the eye point. Next, we take another world space point which is also at the same distance from the eye but is one world space unit away from the corner point. Both points are projected to screen space. The distance between them in screen space is then computed. The reciprocal of this distance gives an estimate of the size of a pixel at a given distance from the eye. This size, then, is taken as the pixel size anywhere within that octree node. Note that this is a conservative estimate: as one moves further from the eye within that node, the amount of world space covered increases, so we are underestimating the pixel's coverage. As we will see later, this amounts to overestimating the amount of detail needed for a given area of the image; however, it does ensure that no hole appears in the rendering at the expense of possibly performing a small amount of extra work. <ref type="figure">Figure 7</ref> shows the hierarchies chosen based on the pixel size.</p><p>Selecting hierarchy. Recall that each node has several levels of a point hierarchy contained within itself. To select a hierarchy level, we choose the level which has an average umbrella radius that is close to being the same as the estimated pixel size for that node. The idea is that this will allow the maximum number of sample points to be rendered as pixels. It has been observed that point-based rendering is much faster than polygon-based rendering, so we attempt to favor this as much as possible when it can be done without compromising quality. In order to allow the user to trade off quality for speed, we provide a selectable value that indicates the screen-space tolerance for error. This is done by selecting a level whose average umbrella radius is a user-defined constant factor multiplied by the estimated pixel size. <ref type="table" target="#tab_5">Table 2</ref> and <ref type="figure">Figure 9</ref> exemplify this quality/speed tradeoff.</p><p>Point vs. umbrella. To determine whether to render a point as a point or an umbrella, we again compare the twice the umbrella radius with the estimated pixel size for the given leaf node. The value is doubled to ensure that there is no possibility of a hole appearing, as it might if the umbrella were nearly circular and the radius was close to the estimated pixel size. If the pixel size is larger than twice the umbrella radius, it must be the case that the pixel completely covers the point in question. Moreover, it also covers the entire umbrella of that point as well. In that case, it would be a waste of resources to render anything more than a single point since all details are "hidden" within that single pixel. Thus, in this case, a single point is rendered. Otherwise, the full umbrella is drawn since the detail covers more than one pixel. Drawing the entire umbrella also ensures that no holes appear within the surface. Recall that the pixel size was underestimated previously, so any inaccuracies will tend to lead to more umbrellas being drawn; this also prevents the appearance of holes. <ref type="figure" target="#fig_8">Figure 6</ref> shows that more points are rendered as the object recedes further from the eye. However,  since the hierarchy level used also changes, the number of points does not increase too much; instead, the system switches to using a sparser hierarchy level and draws triangles instead. Thus, both the total number of points drawn and the total number of triangles decreases.</p><p>Algorithm. The display procedure calls the Render procedure and passes it an argument of the octree's root node. This procedure in turn makes use of another procedure called Render-Node: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>We experimented with PMR on several large data sets available from Georgia Tech and Stanford web sites <ref type="bibr">[33,</ref><ref type="bibr" target="#b32">34]</ref>. The system used for these tests contained an Intel Pentium 4 processor running at 1.7 GHz. The system was configured with 2GB of RAM and a Matrox Millenium G450 graphics card. The Voronoi diagrams for the hierarchies were generated with the help of the CGAL library <ref type="bibr" target="#b31">[32]</ref>. This hierarchy computation uses point deletions in 3D Voronoi diagrams which is not yet efficiently implemented in CGAL. As a result, though off-line, the preprocessing for generating the hieararchy took considerable time; see <ref type="table" target="#tab_3">Table 1</ref>. <ref type="figure" target="#fig_8">Figure 6</ref> shows the rendering speed with DAVIDHEAD at different viewing distances. As the model recedes further, more points  are rendered and more decimated level of the hierarchy is chosen. This results in higher frame rates. <ref type="figure">Figure 7</ref> shows the hierarchy that is used for the display. The triangles and points within each octree leaf node are colored according to the level of hierarchy that was selected for that leaf node. Notice that those areas closest to the viewer tend have the most detailed representation; those further away are more likely to have less detail since it is not needed for a good display. However, this not true in all cases. For example, the top of DAVIDHEAD in <ref type="figure">Figure 7</ref> is colored blue though the region is closer to the viewer. The reason for this fact is that the sample is extremely dense in this area and PMR can produce acceptable quality while using the most decimated level in the hierarchy, despite the fact that the area is close to the viewer. <ref type="figure">Figure 8</ref> shows the result of PMR compared to the full-detail representations. The quality differences between them are not very apparent even at close range, which highlights the quality preservation of PMR.</p><p>As was mentioned previously, there is a user-definable tolerance factor available for determining the amount of detail to display. The higher this factor, the faster is rendering with lower quality. <ref type="table" target="#tab_5">Table 2</ref> illustrates the rendering speed dependency on this factor.</p><p>Recall that we varied the decimation threshold from 0.1 to 1.0 in steps of 0.1 or 0.2 to generate the point hierarchy. When is large (close to 1.0), features of the model are distorted or lost. However, this loss is not visibly significant when those parts of the model are further away. In order to make sure that the sparse hierarchy levels are availed only when the viewing distance is quite large, we introduce a modification to the tolerance factor computation. No alteration in the tolerance factor occurs until a pixel size is at least two. After this, we reduce the factor linearly until the pixel size is at least four, at which point the factor will have a value of one. The net effect of this modification is to slow the transition as the decimation level becomes progressively more sparse. Consequently, the very sparse levels are not used until their lower resolution is not visible. All timing figures cited in this paper make use of this modification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>DRAGON BLADE</head><p>DAVIDHEAD HAPPY <ref type="figure">Figure 7</ref>: The hierarchies. Red denotes the most detailed area, followed successively by orange, yellow, green, and blue as more decimated levels are used. <ref type="figure">Figure 9</ref> illustrates the dependency of the quality on the tolerance factor at different viewing distances. The left column is produced with a factor of one, while the right column is produced with a factor of five. In the top three images, the eye is placed at a distance from the scene; notice that less detailed hierarchy levels are used and factor 3 and 5 both use the most decimated hierarchy level. In the middle images, the eye has been moved closer. For this reason, the program switches to more detailed hierarchy levels for factor 1, but chooses less detailed level for factor 3 and 5. Finally, the area highlighted is viewed at a very close distance in the bottom row where detailed levels are used for all factors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSIONS</head><p>We have introduced PMR, a hybrid rendering scheme that uses both points and triangles adaptively for display. The hierarchy is precomputed with the feature geometry in the object space and is selected with a screen space during display. An input surface is not required, and the separation of tasks into preprocessing and viewing stages allows for a fruitful division of labor and a higher frame rate while rendering. Experiments on several large data show PMR's effectiveness in maintaining quality, speed and providing a speed/quality tradeoff.</p><p>A future research direction would be to investigate if and how the method of PMR can be applied to volume rendering. The idea of "dividing cubes" projecting to a less than a pixel <ref type="bibr" target="#b5">[6]</ref>    <ref type="figure">Figure 9</ref>: St. Matthew data: Factor=1 (left), factor=3 (middle), and factor=5 (right). As in <ref type="figure">Figure 7</ref>, color denotes the hierarchy level. Top: The eye is furthest from the figure. Middle: As the eye draws nearer, more detailed hierarchy levels are used. Bottom: The most detailed hierarchy levels are used when the eye is very close to the figure. FPS denotes the frames rendered per second.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>IEEE</head><label></label><figDesc>Visualization 2002 Oct. 27 -Nov. 1, 2002, Boston, MA, USA 0-7803-7498-3/02/$17.00 ยฉ 2002 IEEE</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Splatting systems may show aliasing at close range (center). PMR draws triangles instead of pixels at close range (right) and respects the features of the model. points and polygons required due to its feature-based technique.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( 4 )( 5 )</head><label>45</label><figDesc>The ability to use disk space during viewing which eases memory requirements. No requirement of an input mesh.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2</head><label>2</label><figDesc>Figure 2: A long skinny Voronoi cell ยก for a sample point ยฃ on a densely sampled surface ยค , (a) the corresponding farthest Voronoi vertex ยฃ ยฅ , estimated normal ยง ยก and the tangent polygon (shaded), (b) the heightยจand radius ยฉ of ยก , (c) the umbrella triangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>The octree for the HAND data set (far left). The hierarchy of points respects the features, from most to least detailed (center and right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>The hierarchy of triangles, from most to least detailed. . The height is the distance between and the farthest Voronoi vertex in ยก ยข ; shown as ยค in Figure 2(b). It is known that the vector ยฅ ยข from to this farthest Voronoi vertex estimates the normal at on the sampled surface. Therefore, the plane passing through having ยฅ ยข as its normal estimates the tangent plane at . This tangent plane intersects ยก ยข within a convex polygon, which we call the tangent polygon for . See Figure 2 for an illustration. The radius of ยก ยข is the distance of to the furthest point in the tangent polygon; shown as ยฆ in Figure 2(b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>).</head><label></label><figDesc>=0.1 to ) =1.0, with a spacing of 0.1 to 0.2 between successive val-ues. The Voronoi diagram is continuously updated throughout the preprocessing. Obviously, computation of the height and radius requires that all surface neighbors of each point be present while computing the Voronoi diagram for each octree node 0 Although this is the case for most points, the points near the boundary of 0 do not have their neighbors. To remedy this, we include points from all adjacent nodes while computing the Voronoi diagram of the points in0</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>cell of a point in the Voronoi diagram of a point cloud 1 in this hierarchy along with the points at the same hierarchy level from neighboring leaf nodes. The tangent polygon of computed with this Voronoi diagram intersects certain Voronoi edges in ยก ยข</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>DAVIDHEAD at different viewing distances; FPS frames/second. Points are shown in red; triangles are shown in blue.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1 :</head><label>1</label><figDesc>Preprocessing statistics. Times are given in hours:minutes.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head></head><label></label><figDesc>Comparison of full-detail meshes and the hierarchical renderings at close range for DRAGON, BLADE, and HAPPY. FPS denotes the frames rendered per second.that such rendering scheme may be useful.</figDesc><table><row><cell>Object DRAGON HAPPY BLADE DAVIDHEAD STMATTHEW</cell><cell>0.54 FPS (full detail) 0.25 FPS (full detail) 0.43 FPS (full detail) FPS Full Mesh Hierarchy, Factor=1 Hierarchy, Factor=3 Hierarchy, Factor=5 3.85 FPS (PMR) 0.71 FPS (PMR) 3.44 FPS (PMR) FPS FPS FPS 0.54 0.57 1.69 3.85 0.43 0.54 2.29 3.44 0.25 0.27 0.71 0.71 0.11 0.32 0.61 0.78 Figure 8: Number of Vertices 437645 542557 882954 2000646 3382855 0.072 0.64 0.66 0.67</cell></row><row><cell></cell><cell>is an evidence</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 2 :</head><label>2</label><figDesc>Frame rates with different factors.</figDesc><table><row><cell>0.64 FPS</cell><cell>0.67 FPS</cell><cell>0.67 FPS</cell></row><row><cell>0.29 FPS</cell><cell>0.59 FPS</cell><cell>0.59 FPS</cell></row><row><cell>0.16 FPS</cell><cell>0.74 FPS</cell><cell>0.96 FPS</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement:</head><p>We thank Marc Levoy for letting us use mod-</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Point set surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Behr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fleishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="21" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A new Voronoi-based surface reconstruction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bern</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kamvysselis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 98</title>
		<meeting>SIGGRAPH 98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="415" to="421" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A subdivision algorithm for computer display of curved surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1974" />
		</imprint>
		<respStmt>
			<orgName>University of Utah</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive multiresolution surface viewing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Certain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Popoviฤ</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Salesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIG-GRAPH 96</title>
		<meeting>SIG-GRAPH 96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">POP: A hybrid point and polygon rendering system for large data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">X</forename><surname>Nguyen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="45" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Two algorithms for the three-dimensional reconstruction of tomograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ludke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Crawford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Teeter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Medical Physics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="320" to="327" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Hybrid Simplification: combining multi-resolution polygon and point rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">G</forename><surname>Aliaga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="37" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Brooks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wright</surname></persName>
		</author>
		<title level="m">Simplification envelopes. Proc. SIGGRAPH 96</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="119" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Detecting undersampling in surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Giesen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 17th Ann. Sympos</title>
		<meeting>17th Ann. Sympos</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="257" to="263" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A Delaunay based shape reconstruction from large data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Giesen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hudson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Sympos. in Parallel and Large Data Visualization and Graphics</title>
		<meeting>IEEE Sympos. in Parallel and Large Data Visualization and Graphics</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="19" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Decimating samples for mesh simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Giesen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hudson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Canadian Conf</title>
		<meeting>13th Canadian Conf</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="85" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Controlled simplification of genus for polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization 97</title>
		<meeting>Visualization 97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="403" to="412" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Multiresolution representation and reconstruction of triangulated surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Magillo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Visual Form Analysis</title>
		<editor>C. Arcelli, L. Cordella, G. Sanniti di Baja</editor>
		<meeting><address><addrLine>Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>World Scientific</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="140" to="149" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sequin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 93</title>
		<meeting>SIGGRAPH 93</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="247" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Hierarchical Z-Buffer visibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Greene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 93</title>
		<meeting>SIGGRAPH 93</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="231" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Multiresolution signal processing for meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Guskov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schrรถder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 99</title>
		<meeting>SIGGRAPH 99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="325" to="334" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Grossman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Dally</surname></persName>
		</author>
		<title level="m">Point sample rendering. 9th Eurographics Workshop on Rendering</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="181" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 96</title>
		<meeting>SIGGRAPH 96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">View-dependent refinement of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="189" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Differential point rendering. Rendering Techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kalaiah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<editor>S.G. Gortler and K. Myszkowski</editor>
		<imprint>
			<date type="published" when="2001-08" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Turner</forename><surname>Whitted</surname></persName>
		</author>
		<idno>85-022</idno>
		<imprint>
			<date type="published" when="1985-01" />
		</imprint>
		<respStmt>
			<orgName>University of North Carolina at Chapel Hill Computer Science Department</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Rendering trees from precomputed Z-buffer view</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ohsaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographics Workshop on Rendering</title>
		<meeting>Eurographics Workshop on Rendering</meeting>
		<imprint>
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Spectral processing of point-sampled geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pauly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="379" to="386" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Surfels: Surface elements as rendering primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Baar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="335" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Multi-resolution 3D approximations for rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Borrel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Modeling in Comput. Graphics</title>
		<imprint>
			<biblScope unit="page" from="455" to="465" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">QSplat: A multiresolution point rendering system for large meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="343" to="352" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Ray tracing point sampled geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schaufler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">W</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographics Rendering Workshop</title>
		<meeting>Eurographics Rendering Workshop</meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Visibility culling using hierarchical occlusion maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hudson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="77" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Baar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
		<title level="m">Surface splatting. Proc. SIGGRAPH</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="371" to="378" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Cocone software for surface reconstruction</title>
		<ptr target="http://www.cis.ohio-state.edu/tamaldey/cocone.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">CGAL: Computational Geometry Algorithms Library</title>
		<ptr target="http://www.cgal.org" />
	</analytic>
	<monogr>
		<title level="m">CGAL consortium</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Georgia Tech Large Model Archive</title>
		<ptr target="http://www.cc.gatech.edu/projects/largemodels/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<ptr target="http://graphics.stanford.edu/software/qsplat/" />
		<title level="m">Qsplat software</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
