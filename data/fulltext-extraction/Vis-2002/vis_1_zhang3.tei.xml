<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Volumetric Shadows Using Splatting</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Caixia</forename><surname>Zhang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Volumetric Shadows Using Splatting</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation -Display algorithms; I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism -Color</term>
					<term>shading</term>
					<term>shadowing and texture visualization</term>
					<term>volume rendering</term>
					<term>shadows</term>
					<term>illumination</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper describes an efficient algorithm to model the light attenuation due to a participating media with low albedo. The light attenuation is modeled using splatting volume renderer for both the viewer and the light source. During the rendering, a 2D shadow buffer attenuates the light for each pixel. When the contribution of a footprint is added to the image buffer, as seen from the eye, we add the contribution to the shadow buffer, as seen from the light source. We have generated shadows for point lights and parallel lights using this algorithm. The shadow algorithm has been extended to deal with multiple light sources and projective textured lights.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Volume rendering is the display of datasets sampled in three dimensions. There are four popular volume rendering algorithms: raycasting, splatting, shear-warp, and hardware-assisted 3D texture mapping. Based on the comparison and evaluation of the {zhangc, crawfis}@cis.ohio-state.edu, 2015 Neil Ave., 395 Dreese Lab, Columbus, OH 43210, USA four algorithms <ref type="bibr" target="#b7">[8]</ref>, splatting can create high-quality images, and render efficiently in the case of sparse dataset. Splatting was proposed by Westover <ref type="bibr" target="#b18">[19]</ref>, and its basic principles are: <ref type="bibr" target="#b0">(1)</ref> represent the volume as an array of overlapping basis functions with amplitudes scaled by the voxel values;</p><p>(2) project these basis functions to the screen to achieve an approximation of the volume integral. A major advantage of splatting is that only relevant voxels are projected and rasterized. This can tremendously reduce the volume data that needs to be processed and stored. A shadow is a region of relative darkness within an illuminated region caused by an object totally or partially occluding the light. Shadows are essential to realistic images. Earlier implementations of shadows focused on hard shadows, in which a value of 0 or 1 is multiplied with the light intensity. The shadow volume algorithm by Crow <ref type="bibr" target="#b3">[4]</ref> introduces the concept of shadow volumes. A shadow volume is the polygonalized solid that models the volume of a shadow cast into space by the silhouette of an occluder. During the rendering, a visible point is first verified that it does not fall inside such a shadow volume before it is illuminated by the light source. In the 2-pass hidden surface algorithm by Nishita and Nakamae <ref type="bibr" target="#b14">[15]</ref> and Atherton et al. <ref type="bibr" target="#b0">[1]</ref>, the first pass transforms the image to the view of the light source, and separates shadowed and unshadowed portions of the polygons. Then a new set of polygons is created, each marked as either completely in shadow or not. In the second pass, visible determination from the eye is done, and the polygons are shaded taking into account their shadow flag. This 2-pass hidden surface algorithm is only suitable for polygon primitives. <ref type="bibr">Williams</ref>  <ref type="bibr" target="#b21">[22]</ref> uses a z-buffer depth-map algorithm to generate shadows. A light-source depth-map is first created with respect to the light source. During the rendering, the z-buffer depth-map is used to determine if an object point, visible from the eye, is also visible from the light source. This algorithm supports primitives other than just polygons, but it has aliasing problems due to discretized depth-map cells. New graphics hardware can generate shadows without participating media. For example, NVIDIA GeForce4 video cards are used to do rendering calculation and implement shadows.</p><p>The shadow volume algorithm, 2-pass hidden surface algorithm and z-buffer depth-map algorithm can only determine if an object point is in shadow or not, resulting in only binary values for the light intensity. These algorithms are not suitable for volume rendering. In volume rendering, as the light traverses the volume, the light intensity is continuously attenuated by the volumetric densities. Raytracing offers the flexibility to deal with the attenuation of the light intensity. Raytracing has been used to generate shadows for both surface representations <ref type="bibr" target="#b20">[21]</ref> and volumetric datasets <ref type="bibr" target="#b17">[18]</ref>. Here we investigate a new shadow algorithm that properly determines this light attenuation and generates the shadows for volumetric datasets, using a splatting paradigm for volume rendering.</p><p>Behrens <ref type="bibr" target="#b1">[2]</ref> uses texture mapping hardware to add shadows to a texture-based volume renderer. A shadowed volume which contains the light attenuation information is first produced by the hardware using the original unshadowed volume and the light vector. The shadowed volume is then rendered using texturebased volume rendering. The resulting image has diffusely illuminated effects and the performance decreases by less than 50% when shadows are added. However, for high performance, it is limited to parallel light sources. Lokovic and Veach <ref type="bibr" target="#b8">[9]</ref> proposed the concept of deep shadow maps to deal with light attenuation. A deep shadow map is a rectangular array of pixels in which every pixel stores a visibility function. The function value at a given depth is the fraction of the light beam's initial power that penetrates to that depth. The deep shadow map is equivalent to computing the approximate value of (1.0 -opacity) at all depths. They implemented deep shadow maps in a highly optimized scanline renderer. However their work gives us some ideas into how to deal with the light attenuation in volume rendering using splatting.</p><p>Nulkar and Mueller have implemented an algorithm to add shadows to volumetric scenes <ref type="bibr" target="#b15">[16]</ref> using splatting. They use a twostage splatting approach. In the first-stage, splatting is used to construct a three-dimensional light volume; the second stage is formed by the usual rendering pipeline (the only difference is that the light contributions are interpolated from the light volume). Since the algorithm needs a 3D buffer to store the light volume, it has the problem of high storage and memory cost. Here, we investigate a new algorithm to implement shadows using splatting that requires only a 2D buffer for each light source.</p><p>In this paper, we focus on generating shadows using imagealigned slicing algorithms, in particular image-aligned sheet-based splatting. The algorithm uses the same splatting for both the light attenuation and the rendering, as seen from the light source and from the eye respectively. In the following section, the imagealigned sheet-based splatting is reviewed and the motivation of this work is given. Section 3 describes the basic shadow algorithm for a single light source. Sections 4 and 5 are the extensions of the basic shadow algorithm: multiple light sources and projective textured lights. Section 6 discusses the accuracy issues and the conclusions are given in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">IMAGE-ALIGNED SHEET-BASED SPLATTING</head><p>In splatting, each voxel is represented by a 3D kernel weighted by the voxel value. The 3D kernels are integrated into a generic 2D footprint along the traversing ray from the eye. This footprint can be efficiently mapped onto the image plane and the final image is obtained by the collection of all projected footprints, weighted by the voxel values. This splatting approach is fast, but it suffers In order to mitigate this problem, Westover proposed the sheetbuffer splatting method <ref type="bibr" target="#b19">[20]</ref>, in which the voxels are summed within volume slices most parallel to the image plane and stored in the sheet buffer. The sheets are then composited together to form the final image. This improved splatting introduces a more substantial popping artifact when the orientation of the sheets changes. Mueller et. al. <ref type="bibr" target="#b13">[14]</ref> eliminates this popping drawback by aligning the sheets to be parallel to the image plane. This splatting method (as shown in <ref type="figure" target="#fig_0">Figure 2</ref>) is called image-aligned sheetbased splatting. All the voxel kernels that overlap a slab are clipped to the slab and summed into a sheet buffer. The sheet buffers are composited front-to-back to form the final image. While this significantly improves image quality, it requires much more compositing and several footprint sections per voxel to be scan-converted. Using a front-to-back traversal, this method can make use of the culling of occluded voxels by keeping an occlusion map and checking whether the pixels that a voxel projects to have reached full opacity <ref type="bibr" target="#b5">[6]</ref>. Splatting using post classification was proposed by Mueller et. al. <ref type="bibr" target="#b11">[12]</ref> to generate images without blurry appearance.</p><p>The motivation of this paper is to implement shadows using the image-aligned sheet-based splatting to create more realistic and informative images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">BASIC SHADOW ALGORITHM FOR A SINGLE LIGHT SOURCE</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Illumination Models</head><p>In splatting, we calculate per-pixel illumination at each sheet, then composite the sheet with its previous sheets by the following formula <ref type="bibr" target="#b18">[19]</ref>:</p><p>For a front-to-back traversal:</p><formula xml:id="formula_0">)) * ( * ) 1 (( n n c c o A I A I I - + = (1) ) * ) 1 (( n c c o A A A A - + =</formula><p>For a back-to-front traversal:  </p><formula xml:id="formula_1">) * ( ) * ) 1 (( n n c n o A I I A I + - = (2) n c n o A A A A + - = ) * ) 1 ((</formula><formula xml:id="formula_2">))) ( ) ( ( * ) ( ( * ) ( ) ( x L x N x I k I k x C x C d a a obj × + = (3) n k s x R x E x I k )) ( ) ( ( * ) ( × +</formula><formula xml:id="formula_3">k k (x E d k s n ) ) (x obj a I (x L ) (x R ) (x I ) (x N )</formula><p>Here, k , , k , and are independent of the sample location. However, , ,</p><p>and are functions of the location x. is calculated by estimating the gradient at each pixel using central differences <ref type="bibr" target="#b11">[12]</ref>. The object color, , and opacity, can be determined from a transfer function at each pixel. For the implementation of shadows, the main work is to determine the intensity of the light arriving at each location x. The intensity of the light is decreased due to light attenuation as light traverses the semitransparent volume.</p><formula xml:id="formula_5">a ) x d k s C n k ( obj C obj a I ( I ) ) x (x ) x ) (x N ( N ) (x L ) x ) (x E ( R ) x ( I</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Implementation of Shadows Using Splatting</head><p>Visibility algorithms and shadow algorithms are essentially the same. The former determine the visibility from the eye, and the latter determine the visibility from the light source. However, it is hard to implement shadows, especially accurate shadows, in volume rendering, because the light intensity is continuously attenuated as the light traverses the volume. We need to determine the light intensity arriving at the point being illuminated.</p><p>Nulkar and Mueller <ref type="bibr" target="#b15">[16]</ref> use a two-stage splatting algorithm to add shadows. They first splat the volume with respect to the light source using the image-aligned splatting algorithm and store the opacity values at each pixel for each sheet. Secondly, they splat the volume with respect to the eye to render the volume. They pixels light source eye light ray sheets thus construct an entire light volume to store the intensity values after the first-stage splatting. The advantages of this approach include pre-processing the attenuation calculation for viewindependent light volume. Accurate shadows are difficult to implement using this method, due to the limited resolution of the light volume.</p><p>In our shadow algorithm, we implement shadows by traversing the volume only once to generate per-pixel accurate shadows. The same splatting algorithm is used for both the viewer and the light source. For each footprint, while adding its contribution to the sheet buffer as seen from the eye, we also add its contribution to a shadow buffer as seen from the light source.</p><p>Here, we consider the case of a light source behind the viewer. In the image-aligned sheet-based splatting, the light passing through the front sheets will be attenuated and cause shadows on the back sheets along the light rays. This effect of front sheets on back sheets is shown in <ref type="figure" target="#fig_2">Figure 3</ref>.</p><p>The opacity with respect to the light source can also be accumulated using the same formula (1) and (2) as before.   During the rendering, when we calculate the illumination for a pixel at the current sheet, we determine the accumulated opacity for the pixel from the shadow buffer by mapping the pixel to the shadow buffer. The pixel at the current sheet is first transferred back to eye space, and it is then re-projected to the shadow buffer as seen from the light source (as shown in <ref type="figure" target="#fig_3">Figure 4</ref>). Here we take the orientation of the shadow buffer aligned with the image plane.</p><p>The pixel on the current sheet buffer can be mapped to the pixel on the shadow buffer using the following transformation:</p><formula xml:id="formula_6">) , ( j i ) , ' ' j i ( ç ç (4) ÷ ÷ ø ö ç ç è ae = ÷ ÷ ø ö è ae - j i M M j i 1 1 2 ' '</formula><p>where,</p><p>is the matrix which transfers the pixel on the current sheet buffer to the point x in eye space; is the matrix which transfers the point x in eye space to the pixel on the shadow buffer. </p><formula xml:id="formula_7">+ = a a obj I k x C x C ( * ) ( ) ( ( 0 . 1 ( * x I k + × - ))) ( ) ( ( * )) x L x N light d a n k x R x E x I k )) ( ) ( ( * )) ( 0 . 1 ( * × -a light s ( 6 )</formula><p>For a given point x, we get its ) (x a by choosing its nearest pixel's opacity value in the shadow buffer. For better shadow quality, we can also interpolate the opacity values of nearby pixels.</p><p>Compared to splatting without shadows, two more buffers are needed: a 2D shadow buffer to store the composited opacity from the light to the current sheet, and a 2D shadow sheet buffer to store the opacity caused by the current sheet from the transfer function with respect to the light. The shadow sheet buffer is composited into the shadow buffer and used for the next slice.</p><p>The shadow algorithm using the image-aligned sheet-based splatting is demonstrated with the pseudo code in <ref type="figure">Figure 5</ref>.</p><p>Using the above algorithm, we have implemented shadows for two different light sources: parallel lights and point lights. <ref type="figure" target="#fig_5">Figure 6</ref> shows the shadow of a robot which is composed of cube primitives and rectangular parallelepiped primitives. The shadow of the Olympic rings composed of torus primitives is shown in <ref type="figure">Figure 7</ref>. <ref type="figure">Figure 8</ref> is a scene of a smoky room with a volumetric cube inside. <ref type="figure">Figure 9</ref> shows a room scene, which includes the robot, the Olympic rings and a smoke-like object constructed using a turbulence function. <ref type="figure">Figure 10</ref> is the HIPIP (high-potential iron-sulfur protein) dataset, which describes a one-electron orbital of a four-iron and eight-sulfur cluster found in many natural proteins. The data is the scalar value of the wave function 'psi' at each point. Shadows provide spatial relationship information. <ref type="figure">Figure 11</ref> shows the 1. Transform each voxel to eye space; 2. Bucket sort voxels according to the transformed z-values; 3. Initialize occlusion map to zero opacity; 4. Initialize the shadow buffer to zero; 5. For each sheet in front-to-back order 6.</p><p>Initialize image sheet buffer; 7.</p><p>Initialize shadow sheet buffer; 8.</p><p>For each footprint 9.</p><p>Rasterize and add the footprint to the current image sheet buffer; 10.</p><p>Rasterize and add the footprint to the current shadow sheet buffer; 11. End; 12. Calculate the gradient for each pixel using central difference; 13. Classify each pixel in the current image sheet buffer; 14. Map pixel to the shadow buffer and get its opacity; 15. Calculate the illumination to obtain the final color; 16. Composite the current image sheet buffer to the frame buffer; 17. Classify each pixel on current shadow sheet buffer and composite to accumulated shadow buffer; 18. End; <ref type="figure">Figure 5</ref>. Pseudo code of shadow algorithm using the image-aligned sheet-based splatting curved shadows on smooth objects. <ref type="figure">Figure 1</ref>(a) and 1(b) provides more results from our algorithm. <ref type="figure" target="#fig_0">Figure 12</ref> is a uncBrain with shadows included.</p><p>The above images are generated using a front-to-back rendering. The room scene in <ref type="figure">Figure 1(c)</ref> is an example of backto-front rendering: light comes into the room through the window from the back. A desk and a chair reside in the room filled with a light haze.</p><p>When light is attenuated, the running time is longer than the time without shadows, because footprint evaluation and shadow buffer compositing need to be done with respect to the light source. The algorithm with shadows takes less than twice the time without shadows. For the Bonsai tree (256*256*128) rendered to a 512*512 image, the running time with shadows is only about 56% slower, making the algorithm attractive for high-quality volume rendering.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">MULTIPLE LIGHT SOURCES</head><p>The shadow algorithm can be easily extended to multiple light sources by using multiple shadow buffers. Each light source needs a separate accumulated shadow buffer. For each footprint, we add its contribution to multiple shadow buffers as seen from multiple light sources. Hence, we splat the footprint n+1 times for n light sources.</p><p>During the rendering, when we calculate the illumination of a pixel at the current sheet, we map the pixel to multiple shadow buffers and get multiple opacity values for the pixel. The intensity of the light arriving at the point x corresponding to the pixel is thus: <ref type="figure">Figure 9</ref>. A room scene with shadows</p><formula xml:id="formula_8">th i (7) i light i i I x x I ) ( * )) ( 0 . 1 ( ) ( a - =</formula><p>The illumination model becomes: <ref type="bibr" target="#b7">( 8 )</ref> This extension has one limitation: all the lights need to lie either in front of the volume or behind the volume, with respect to the viewer. This is required in order to render the scene from front-to-back or from back-to-front. <ref type="figure" target="#fig_2">Figure 13</ref> shows the shadow of a robot with two light sources. It can be seen that the region shadowed by the two lights is darker than the region that is only in the shadow of one light. <ref type="figure">Figure 10</ref>. A scene of a HIPIP data set (left: without shadow; right: with shadow)</p><formula xml:id="formula_9">) )) ( ) ( ( * )) ( 0 . 1 ( * ) ( ( ))) ( ) ( ( * )) ( 0 . 1 ( * ) ( * ) ( ( * ) ( ) ( n k i i i light s i i i i light d obj i a a obj x R x E x I k x L x N x I k x C I k x C x C × - + × - + = å å a a</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">PROJECTIVE TEXTURED LIGHTS</head><p>Projective textures can be added for special effects. We use a light screen to get the effect of the "light window" or slide projector and map the light pattern to the scene. The range of the shadow buffer is determined by projecting the light screen to the shadow buffer plane. We give the light screen an initial image. So in the illumination model:</p><formula xml:id="formula_10">+ = a a obj I k x C x C ( * ) ( ) ( + × - ))) ( ) ( ( * )) ( 0 . 1 ( * ) ( x L x N x x I k light d a n k light s x R x E x x I k )) ( ) ( ( * )) ( 0 . 1 ( * ) ( × -a (9)</formula><p>the intensity of the light should be treated as a vector (the color of the light).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>) (x I light</head><p>If the light is not aligned to the splat buffers, we need to warp the light pattern to the buffer, defining the initial distribution of the light intensity in the buffer. During the rendering, the corresponding values can be obtained from this buffer. <ref type="figure" target="#fig_3">Figure 14</ref> shows a scene where the light screen has a pattern of red and green rings. A semi-transparent block is placed above a ground plane, which either sees the light or is partially attenuated by the block. The room scene in <ref type="figure">Figure 15</ref> is lit by a light with an image of the logo of The Ohio State University. Shadows are generated by the robot and the rings which reside in the room.</p><p>In <ref type="figure">Figure 1(d)</ref>, a parallel area light with a grid texture casts the grid pattern on a HIPIP scene. It gives us some dimension information of the object in 3D space. <ref type="figure" target="#fig_5">Figure 16</ref> shows images with light beams passing through a semi-transparent cube. Three light beams with red, green and blue colors enter the cube at the right top, traverse the cube and come out from the left bottom. The left image is without consideration of light attenuation, while the right one is with light attenuation. The light intensity exiting the cube is the same as the original intensity entering the cube in the left image, while the resulting light intensity is lower than the original light intensity due to attenuation as the light traverses the cube in the right image. In the middle area of the beams, the beam colors are partially blocked by front participating media. <ref type="figure" target="#fig_3">Figure 14</ref>. A scene with shadows for a light screen with ring pattern; <ref type="figure" target="#fig_2">Figure 13</ref>. A robot with two light sources (left);</p><p>A robot with one light source (right) <ref type="figure">Figure 15</ref>: A room scene for a light screen with an image of OSU logo <ref type="figure" target="#fig_5">Figure 16</ref>. A scene with beams of light that pass through the cube (left: without attenuation; right: with attenuation)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">ACCURACY ISSUES</head><p>One limitation of our algorithm for shadows using image-aligned sheet-based splatting is in dealing with light sources perpendicular to the eye vector. The image-aligned splatting makes it difficult to keep track of accurate opacities as seen from the perpendicular light source, especially for those slices with similar z-values as the light source (as seen in <ref type="figure">Figure 17)</ref>. We can solve this problem by using a new non-image-aligned sheet-based splatting. Here, we calculate the half way vector between the eye vector and the light vector, then splat the volume in the direction of the half way vector. For each sheet, we add the footprint contribution to the image plane aligned with the eye for the rendering, and to the shadow buffer aligned with the light source for the shadow (as shown in <ref type="figure">Figure 18</ref>). We use per-pixel classification. The pixel (i,j) at the current image buffer is first transferred back to the point x in eye space, and it is then projected to the shadow buffer aligned with the light source. The light intensity arriving at the point x is obtained from the accumulated opacity stored at the corresponding pixel (i',j') on the shadow buffer, which has been calculated from front sheets. In this way, the light attenuation is accurately modeled. Kniss <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref> recently has also proposed the idea of a half angle slice axis.</p><p>Using this non-image-aligned splatting method, we generate shadows for a perpendicular light source (as shown in <ref type="figure">Figure 19</ref>): a semi-transparent cube is at (0, 0, 0), the eye at (0, 0, 120) and the light beam at (0, -1, 0) direction. The splatting is along the half way vector (0.0, 0.5, 0.5) and the footprints are individually warped to the image buffer and the shadow buffer. From the comparison of the two images in <ref type="figure">Figure 19</ref>, we can see that the light is attenuated.</p><p>The shadow algorithm for non-image-aligned splatting has been extended to generate shadows for multiple light sources. We use the average light vector of all the light sources to calculate the half way vector. Still, all the light sources should satisfy either or in the coordinate system defined by the half-way vector, so that the volume can be rendered either in front-to-back or back-to-front order. Here, E is the eye vector, and are the light vectors. <ref type="figure" target="#fig_0">Figure 20</ref> shows the Olympic rings with shadows implemented using this new non-image-aligned splatting for two light sources: one at (0, 320, 240), and the other at (0, 240, 320). The region shadowed by two lights is darker than the region that is only shadowed by one light.</p><formula xml:id="formula_11">0 ³ × i L E i L 0 £ × i L E image plane light</formula><p>In front-to-back or back-to-front rendering, if lights move with respect to the viewer, this non-image-aligned sheet-based splatting along the half way vector will not have the popping artifacts as mentioned for the sheet-based splatting in <ref type="bibr" target="#b19">[20]</ref>, since the splatting direction changes continuously with the eye vector and/or the light vectors. A consistent ray integration is generated with accurately reconstructed sheets. During the switch from front-toback rendering to back-to-front rendering, there could be some popping problem for non-image-aligned splatting. Since we use small slice thickness, the popping artifacts are not discernable in our study. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">CONCLUSIONS</head><p>In this paper, we have described an algorithm to model the light attenuation through a volume using the image-aligned sheet-based splatting. This algorithm models the light attenuation with respect to the light source and generates shadows. We need two additional 2D buffers to keep the accumulated opacity and the individual sheet opacity with respect to the light source. For the running time, the algorithm with shadows takes less than twice the time without shadows. This algorithm has the advantage of saving storage and running time. We have used this algorithm to implement shadows for point lights and parallel lights. Projective textured lights are used to create images with special effects or quantitative analysis. Our work also includes the implementation of shadows with respect to multiple light sources, by keeping separate shadow buffers with respect to each light and getting the opacity value for each light at each pixel. Future work has progressed on extending this algorithm to deal with extended light sources to generate soft shadows with penumbra and umbra <ref type="bibr" target="#b23">[24]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 .</head><label>2</label><figDesc>Image-aligned sheet-based splatting from color bleeding and popping artifacts due to incorrect volume integration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>The light attenuation model (Front sheets cause shadows to the back sheets along the light ray)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 .</head><label>4</label><figDesc>Determining the opacity value for the considered pixel</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Then, the intensity of the light arriving at the point x is:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 .</head><label>6</label><figDesc>A robot with the shadow</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 11 .Figure 7 .Figure 12 :</head><label>11712</label><figDesc>Curved shadows on smooth objects (left: without shadow; right: with shadow) Shadows of Olympic rings uncBrain with shadowsFigure 8. A smoky room with a cube inside</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 17 .Figure 18 .Figure 20 :</head><label>171820</label><figDesc>The problem of image-aligned splatting in dealing with perpendicular light sources the corresponding pixel to the light (i'j') light half way vector shadow buffer planeFigure 19. A scene with a beam of light that passes through the cube (left: without shadow; right: with shadow) Non-image-aligned sheet-based splatting Shadows of Olympic rings for two light sources</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>where I denotes the intensity, A denotes the opacity, o denotes the output, c denotes what is already in the image buffer, and n denotes the new point in the current sheet.and becomes and for the next sheet respectively.</figDesc><table /><note>o Io Ac Ic A For the per-pixel illumination at each sheet, the illumination model we use is:</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">ACKNOWLEDGEMENTS</head><p>We would like to thank the NSF Career Award (#9876022) for support to this project and thank the University of Erlangen-Nuremberg for providing the Teddy bear and Bonsai tree datasets.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Polygon Shadow Generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Atherton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;78</title>
		<meeting>SIGGRAPH&apos;78</meeting>
		<imprint>
			<date type="published" when="1978" />
			<biblScope unit="page" from="275" to="281" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Adding Shadows to a Texturebased Volume Renderer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Behrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ratering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="39" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<title level="m">High Quality Splatting and Volume Synthesis</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Shadow Algorithm for Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Crow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;77</title>
		<meeting>SIGGRAPH&apos;77</meeting>
		<imprint>
			<date type="published" when="1977" />
			<biblScope unit="page" from="242" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huges</surname></persName>
		</author>
		<title level="m">Computer Graphics: Principles and practice</title>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">FastSplats: Optimized Splatting on Rectilinear Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shareef</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="219" to="227" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Multi-Dimensional Transfer Function for Interactive Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Interactive Translucent Volume Rendering and Procedural Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Premoze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ebert</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>IEEE Visualization (2002 to appear</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Deep Shadow Map</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lokovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Veach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;2000</title>
		<meeting>SIGGRAPH&apos;2000</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">A Practical evaluation of Popular Volume Rendering Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meissner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-10" />
			<biblScope unit="page" from="81" to="90" />
			<pubPlace>Salt Lake City</pubPlace>
		</imprint>
	</monogr>
	<note>Symposium on Volume Rendering</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Splatting Errors and Antialiasing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Moeller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Swan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shareef</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="178" to="191" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Splatting Without the Blur</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Moeller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visuali-zation&apos;99</title>
		<meeting>Visuali-zation&apos;99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="363" to="371" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">High-quality Splatting on Rectilinear Grids with Efficient Culling of Occluded Voxels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shareef</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="116" to="134" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Eliminating Popping Artifacts in Sheet Buffer-based Splatting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization&apos;98</title>
		<meeting>Visualization&apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="239" to="245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An Algorithm for Half-Tone Representation of Three-Dimensional Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Nishita</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nakamae</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing in Japan</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="93" to="99" />
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Splatting With Shadows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Nulkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="volume">Graphics</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Hypertexture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Perlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Hoffert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;89</title>
		<meeting>SIGGRAPH&apos;89</meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="253" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Volumetric Raytracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Sobierajski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="11" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Interactive Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">C</forename><surname>Westover ; N</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Volume Visualization Workshop</title>
		<meeting>Volume Visualization Workshop</meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of North Carolina</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Footprint Evaluation for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;90</title>
		<meeting>SIGGRAPH&apos;90</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="367" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An Improved Illumination for Shaded Display</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Whitted</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="343" to="349" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Casting Curved Shadows on Curved Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;78</title>
		<meeting>SIGGRAPH&apos;78</meeting>
		<imprint>
			<date type="published" when="1978" />
			<biblScope unit="page" from="270" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A Survey of Shadow Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Poulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fournier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Implementation of Shadows Using Splatting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Ohio State University Master thesis</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
