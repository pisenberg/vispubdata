<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Volume Warping for Adaptive Isosurface Extraction</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laurent</forename><surname>Balmelli</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research T.J. Watson Center Hawthorne</orgName>
								<address>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">J</forename><surname>Morris</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research T.J. Watson Center Hawthorne</orgName>
								<address>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Taubin</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research T.J. Watson Center Hawthorne</orgName>
								<address>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fausto</forename><surname>Bernardini</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">IBM Research T.J. Watson Center Hawthorne</orgName>
								<address>
									<region>NY</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Volume Warping for Adaptive Isosurface Extraction</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Ge-ometry and Object Modeling-curve, surface, solid, and object representations</term>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-hierarchy and geometric transformations</term>
					<term>isosurfaces, adaptive isosurface extraction, volume warping, adaptive tessellation</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Adaptive isosurface extraction using volume warping (Bonsai tree dataset.) Left: isosurface extracted from the standard (unoptimized) ½¾ ¿ dataset. In this mesh, the vertices are evenly distributed (see closeup view.) Center: isosurface extracted from a warped ½¾ ¿ volume. Regions containing containing small details, such as branches, have been inflated to the expense of coarser ones. Right: unwarped version of the surface shown in the center. The resulting mesh is adaptively tessellated in regions containing details as a result of the warping process (see closeup view.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>With the advancement of data acquisition and storage techniques, volume datasets are steadily increasing in both size and resolution. As a result, we need efficient methods to visualize these datasets and cope with bandwidth and storage limitations. Researchers are investigating ways to adapt a common visualization technique, namely isosurface extraction, to the focus of the visualization. A typical strategy is to make the extraction adaptive to the local complexity of the isosurface in order to produce meshes that are fine in areas of interest and coarse in the remaining ones. This strategy differs from extracting vertices uniformly over the isosurface. In this way, the overall density of extracted vertices is significantly reduced while preserving the quality of the isosurface. The immediate benefit is the reduction of the cost in storage, transmission and rendering. We address this problem, i.e. adaptive isosurface extraction, by proposing a new methodology based on a volume warping technique.</p><p>Our technique is an extension of the space-optimized texture  map formulation presented in <ref type="bibr" target="#b1">[2]</ref> to volume datasets. Given an importance map (represented as a volume dataset) we use a relaxation algorithm to warp the input volume. In the warped volume, areas designated as important by the map are inflated to the expense of less important ones. Consider the example of <ref type="figure">Figure  1</ref>: The model on the left handside is extracted from an unoptimized volume, i.e. the volume has not been warped. The closeup view illustrates the uniformity of the tessellation. The central model in <ref type="figure">Figure 1</ref> is extracted from the warped volume. Importance is given to the branches and small fluctuations along the model's surface. Hence, these regions are inflated.</p><p>Once a mesh is extracted from the warped volume, the vertex locations are unwarped in order to locally rescale the isosurface to its original proportions. The rescaled isosurface looks identical to the one extracted without warping the volume, with the difference being that the sampling of the mesh is finer in areas regarded as important. The model on the right handside of <ref type="figure">Figure 1</ref> is the unwarp version of the central model. The closeup view shows the adaptive tessellation as a result of the warping operation. The extraction algorithm is applied to a smaller (warped) version of the input volume in order to get a total vertex count identical to the one obtained with the extraction from an unoptimized volume. Our method is therefore more economic in computational and storage requirements with the benefit of producing an adaptively sampled isosurface. Obviously, our method requires that we previously warp the input volume. For this task, we use an efficient multigrid approach allowing this operation to be performed efficiently.</p><p>Our method has several advantages: For example, our algorithm does not require the use of any complex data structures, such as octrees and is relatively simple to implement. Furthermore, our method allows the user to control the importance map such that the extraction is best suited to the goal of the visualization. The importance map can be computed automatically by analyzing the content of the volume, but can also be fully specified by the user. Our method relies on the fact that a warped volume can be resized (i.e. downsampled) up to a certain extent without significant loss of details. A rapid analogy in signal processing is the downsampling of a discrete signal without aliasing. This is possible only there is no frequency component (in the underlying continuous function) that is higher than half the resampling frequency (Shannon's sampling theorem.) Therefore a warped volume can be downsized without loss of details up to a critical size. Expectedly this size depends directly on the characteristics of the dataset, i.e. on the amount of high-frequency details.</p><p>As stated previously, our method does not require the use of a specific extraction algorithm. Hence our method can be used jointly with the latest extraction techniques. Finally, our algorithm pro-duces isosurfaces that are adapted to the volume structure and the user's specifications and does not suffer from any mesh discontinuities or gap-filling problems that typically require additionnal processing <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PREVIOUS WORK</head><p>Many researchers have sought to extend common isosurface extraction methods, such as Marching Cubes <ref type="bibr" target="#b5">[6]</ref>, to produce adaptively tessellated isosurfaces (see for example <ref type="bibr" target="#b9">[10]</ref>.) A prevalent idea, as is presented by Saupe et al. <ref type="bibr" target="#b7">[8]</ref>, for the solution to this problem requires the use of algorithms and data structures that are often very specific to certain visualization scenarios and typically require large amounts of additional storage. Commonly, structures such as octrees <ref type="bibr" target="#b10">[11]</ref> and interval trees <ref type="bibr" target="#b2">[3]</ref> have been applied to address this problem. Furthermore, to facilitate the transition from finely sampled regions to coarser ones, multiresolution hierarchies are used <ref type="bibr" target="#b6">[7]</ref>. These techniques provide results of quality, however, their costs in storage can be a limitation. Several techniques providing feature-driven extraction have been previously implemented, for example, by Wood et al. <ref type="bibr" target="#b11">[12]</ref> and Kobbelt et al. <ref type="bibr" target="#b4">[5]</ref>. Some of these techniques use multiresolution hierarchies in order to allow users to select areas to be refined adaptively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">APPROACH</head><p>Our method has four stages represented in the example of Figures 2a-f. Given an input volume (the isolevel to be extracted is represented in <ref type="figure" target="#fig_1">Figure 2a</ref>), an importance map is first specified for the isolevel, as suggested in <ref type="figure" target="#fig_1">Figure 2b</ref>. The map is given as a volume dataset, possibily having a different size. In this paper we give an intuitive representation of importance maps as painted isosurfaces. The darker the shade of the isosurface region, the more important the corresponding area in the volume. The map can be specified by the user, as in <ref type="figure" target="#fig_1">Figure 2b</ref>, or computed automatically (e.g. as in <ref type="figure">Figure 4</ref>, see next section.) In the map of <ref type="figure" target="#fig_1">Figure 2b</ref> we assign the highest importance to the teeth of the Skull model.</p><p>A warping function is computed using the map and a relaxation algorithm. The function is modeled using a tridimensional regular grid of a user-defined resolution, as suggested in <ref type="figure" target="#fig_1">Figure 2c</ref>. The input volume is then resampled using the warping function, leading to a warped volume <ref type="figure" target="#fig_1">(Figure 2d</ref>.) Finally, a mesh is extracted from the warped volume <ref type="figure" target="#fig_1">(Figure 2e</ref>) and the vertex locations are unwarped using again the warping function depicted in <ref type="figure" target="#fig_1">Figure 2c</ref>. In the resulting adaptive isosurface represented in <ref type="figure" target="#fig_1">Figure 2f</ref>, the mesh is denser in important areas. In <ref type="figure" target="#fig_2">Figure 3</ref> we illustrate the dramatic increase in mesh density in the teeth when using the importance map given in this example.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Feature-sensitive importance map</head><p>A powerful component of our pipeline is the importance map. The values in the map define a measure of importance for each corresponding voxel (or group of voxel) location. Importance maps for volume visualization have previously been investigated, for example, by Bajaj et al. in <ref type="bibr" target="#b0">[1]</ref>. This map is used to compute the warping function (e.g. as in <ref type="figure" target="#fig_1">Figure 2c</ref>) which, in turn, is used to resample the volume (e.g. as in <ref type="figure" target="#fig_1">Figure 2d</ref>.) The importance map can be explicitly defined by the user as it is in <ref type="figure" target="#fig_1">Figure 2b</ref>. In this example, the teeth have been designated as important. Alternatively, a common goal is create adaptive isosurfaces that preserve areas of significant detail across the entire volume. To do so we propose a method to compute an importance map based on the number of crossings for the given isolevel in a user-defined neighborhood for side view of skull The algorithm to compute an importance map works as follows: For each voxel we search for intensity values within a user-defined range of the isolevel. If such a crossing is found, then each voxel in a neighborhood surrounding the voxel is then checked for an isolevel crossing. Each time an isolevel crossing is found, a counter is incremented. The resulting number of crossings is stored for each voxel in the importance map. The isolevel, its range, and the size of the neighborhood kernel are specified by the user.</p><p>In <ref type="figure">Figure 4</ref> we give an illustration of the neighborhood-crossing map obtained for the Bonsai tree dataset. The isosurface extracted from the volume warped using this importance map is shown in <ref type="figure">Figure 1</ref>. More examples of neighborhood-crossing maps can be found in <ref type="figure">Figures 8 and 9</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Volume warping</head><p>We describe now the volume warping operation more formally. We start with a scalar function É Ê defined on the unit cube É. Our goal is to generate an adaptive polygon-mesh approximation of the level set Ë Ô ´Ôµ Ä , where Ä is the isolevel of interest. We first compute a warping function Û É É (we actually estimate Û ½ , see <ref type="figure">Figure 5</ref>.) Then, we generate a uniform polygon-mesh approximation Å ¼ of the isolevel Ë ¼ Ô ¼ ¼´Ô¼ µ Ä , where ¼</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>AE .</head><p>The continous function is represented as a regularly sampled volume dataset « ¼ « AE</p><p>, and incorporates trilinear interpolation to achieve continuity. The uniform polygon mesh Å ¼ is computed as an isosurface extracted from the warped scalar function ¼ , which, for this purpose, must also be represented as a regularly sampled dataset ¼ . To generate ¼ , we use the 3D equivalent of inverse texture mapping. We evaluate the inverse warping function at the coordinates of the centroid Ô ¼ « of each voxel in ¼ to obtain a point Ô« in the domain of , and set the value ¼ « of the voxel equal to the result ´Ô«µ of evaluating the original scalar function the computed point Ô«.</p><p>Note that this procedure does not require the warped data set ¼ to be of the same size as the input dataset . The sampling rate can be changed (increased or decreased) during the inverse mapping step.</p><p>The warping function is represented by two associated grids, denoted by and ¼ <ref type="figure">(Figure 5)</ref>, with the same connectivity, and again, trilinear interpolation for continuity. A more complex interpolation scheme can be used, but we found trilinear interpolation to be good enough for our experiments for both the volume data and the warping function. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Relaxation</head><p>As explained in the previous section, the warping function is representated using two associated grids and ¼ . The function is computed using an extension of the relaxation algorithm described in <ref type="bibr" target="#b1">[2]</ref> to tridimensional grids. We briefly describe the relaxation process below and refer the reader to <ref type="bibr" target="#b1">[2]</ref> for more details. Initially, the vertices in the grid are initialized to a uniform cube in the unit volume. At each step of the relaxation, a displacement vector is computed for each vertex. These vectors are evaluated by sampling the intensity of the importance map at each vertex location in the volume. Note that since the importance map does not have necessarily the same size as the original volume, trilinear interpolation is used to retrieve the intensity. A weight is evaluated for each pair of neighbor vertices using their sampled intensity. Note that we consider only the neighbors in the six cardinal directions. A weight will be large for a vertex sampling an important region. As a result, vertices in less important regions are pulled by the ones sampling important ones (e.g. as suggested in <ref type="figure" target="#fig_4">Figure 7</ref>.) To improve convergence accuracy and speed, we use a multigrid approach. Initially, the warping function is modeled with a coarse grid, e.g. a ¿ ¢¿ ¢ ¿ grid (see the left handside of <ref type="figure" target="#fig_4">Figure 7</ref>.) When the relaxation converges for the current grid resolution, the grid is subdivided using linear interpolation (right handside of <ref type="figure" target="#fig_4">Figure 7.</ref>) Then, the process is reiterated until convergence and again the grid is subdivided, and so on. In our experiments, the grid is subdivided until it reaches the same size as the input volume. In order to ensure that the warping function spans the whole volume during the relaxation process, constraints are applied to vertices lying on faces and at corners. Corner vertices are not allowed to move, whereas face vertices can only move within their face. In <ref type="figure" target="#fig_4">Figure  7</ref> only the internal grid vertices are represented using a sphere for clarity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Isosurface extraction</head><p>Once the volume is warped, any isosurface extraction algorithm can be used to generate the corresponding mesh. This flexibility is allowed due to the fact that areas of interest have already been expanded within the warped volume in contrast to the remaining areas of lesser interest which have been contracted. Subsequently, any extraction algorithm will define these regions appropriately. Our vol- <ref type="figure">Figure 6</ref>: Extraction from downsampled datasets. First row: extraction from optimized volume. Second row: extraction from warped volume. The volumes are warped using the importance map shown in <ref type="figure">Figure 8</ref>. The volume dimensions are, from left to right, ½¾ ¿ , ¿ , ¿ and ¿¾ ¿ , respectively. ume warping and extraction pipeline is implemented in OpenDx <ref type="bibr" target="#b0">1</ref> . In this environment the Alligator extraction algorithm <ref type="bibr" target="#b3">[4]</ref> is implemented (a modification of the Marching Cubes algorithm <ref type="bibr" target="#b5">[6]</ref>.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Unwarping of the extracted isosurface</head><p>The vertices Å ¼ of the extracted isosurface are recovered from the warped volume ¼ . In order to obtain the original proportion of the mesh, i.e. Å, the vertex location must be unwarped. Since the vertices of the warped mesh lie on edges of the grid ¼ , the final location of each vertex is computed using the same warping function used to warp the volume, i.e.</p><formula xml:id="formula_0">Å ´Å ¼ µ<label>(1)</label></formula><p>The output polygon mesh Å has the same connectivity as Å ¼ .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>We tested our volume warping with common volume datasets. These datasets have size ½¾ ¿ and are freely available on the Internet 2 .</p><p>In <ref type="figure">Figures 8 and 9</ref> we show experimental results. In both figures, the importance map used to warp the volume is shown in the central frame. In the first rows, we show the volumes extracted from the unoptimized and warped dataset, respectively. In both figures, the models in the second rows (right handsides) have a <ref type="bibr" target="#b0">1</ref> www.opendx.org 2 www.gris.uni-tuebingen.de/areas/scivis/volren/datasets/datasets.html number of vertices close to the one obtained using the unoptimized ½¾ ¿ volume. For the Skull model, this is obtained with a warped ½¼¿ ¿ volume, whereas for the Foot model this is obtained for a warped ½½ ¿ volume. For the latter dataset, we observed that the number of vertices obtained from the extraction decreases very quickly when downsampling the volume (see <ref type="table" target="#tab_2">Table 1</ref>.) We suggest that this behavior is due to a significant amount of noise in the dataset for the chosen isolevel. The isosurface extracted from the warped ½¼¿ ¿ volume (second row, right handside in <ref type="figure">Figure 9</ref>) is smooth compared to the one obtained for the unoptimized volume, while conserving most of the significant details. Finally, we show examples of adaptive tessellations in the third rows of both figures.</p><p>We give in the table below the number of extracted vertices obtained with our implementation for different volume dimensions. We use isolevels 42, 35, 50 for the Bonsai, Skull and Foot dataset, respectively (the volumes are encoded using two bytes per intensity.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Model</head><p>Unoptimized Warped  We show in <ref type="figure">Figure 6</ref> that details are longer preserved in a warped volume compared to an unoptimized one when reducing the size of the datasets. In the figure, the isosurfaces in the first row are extracted from unoptimized Skull datasets, where the second row contains isosurfaces extracted from warped datasets. The datasets are warped using the importance map shown in <ref type="figure">Figure 8</ref>. The number of extracted vertices in each case is given in the table below.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSION</head><p>Downsampling volume datasets often change the geometry and the topology of the isosurface. This effect can be observed in the first row of <ref type="figure">Figure 6</ref>, where unoptimized volumes are downsampled. For these surfaces the reduction of the volume size creates holes underneath the right eye. This effect does not appear in the warped volumes (second row in <ref type="figure">Figure 6</ref>) and the geometry and topology of the highest resolution surface (leftmost surface in each row) seems to be better preserved.</p><p>The automatic generation of effective importance map is a difficult task and is still an open problem. Our algorithm to generate maps based on crossings in neighborhood voxels is simple, yet it gives excellent results in our experiments. An essential requirement of feature-preserving maps is that the resulting warping uniforms detail information throughout the volume. Therefore, such an importance map should measure detail information efficiently across the volume. The resulting warped volume can then be reduced down to a critical size without creating aliasing artifacts. Additionnally, the computation of the importance map should take into account noise and any outliers.</p><p>Finally, the isotropic nature of the warping process appears to limit the degree of adaptivity in the resulting surfaces. In our opinion an anisotropic warping mechanism would alleviate this issue and produce even better results.</p><p>In our future work we plan to investigate the generation of effective importance maps, improve the computational efficiency of our warping pipeline, and include out-of-core techniques in order to process larger datasets. <ref type="figure">Figure 8</ref>: Skull model. First row, left to right: extraction from an unoptimized ½¾ ¿ volume (186'007 vertices) and a warped ½¾ ¿ volume (313'840 vertices), respectively. Framed: importance map used for computing the warping function. Second row, left to right: unwarped surface extracted from a (warped) ½¾ ¿ volume and a (warped) ½¼¿ ¿ volume (162'762 vertices.) Third row, left to right: tessellation of the isosurface extracted from an unoptimized ¿ volume and a warped ¿ volume, respectively. <ref type="figure">Figure 9</ref>: Foot model. First row, left to right: extraction from an unoptimized ½¾ ¿ volume (125'052 vertices) and a warped ½¾ ¿ volume (175'890 vertices), respectively. Framed: importance map used for computing the warping function. Second row, left to right: unwarped surface extracted from a (warped) ½¾ ¿ volume and a (warped) ½½ ¿ volume (96'935 vertices), respectively. Third row, left to right: tessellation of the isosurface extracted from an unoptimized ½¾ ¿ volume and a warped ½½ ¿ volume, respectively.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>IEEE</head><label></label><figDesc>Visualization 2002 Oct. 27 -Nov. 1, 2002, Boston, MA, USA 0-7803-7498-3/02/$17.00 © 2002 IEEE (a) Original isosurface. (b) Importance map. (c) Warping function. (d) Warped volume. (e) Extracted warped isosurface. (f) unwarped isosurface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Volume warping pipeline. In this example an importance map is given by the user. The map assigns maximum importance to the teeth of the Skull model. Consequently this region is agressively inflated in the warped volume. The resulting isosurface is densely tessellated around the teeth and coarse elsewhere. A closeup of the output mesh is shown inFigure 3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Closeup view of the adaptive tessellation of the teeth (when using the importance map given in the example of the pipeline depicted inFigures 2a-f.)each voxel. We call such a map neighborhood-crossing map.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Importance map for the Bonsai tree dataset. The map is represented as a painted isosurface. The darker the shade of the isosurface region, the more important the corresponding area in the volume. Warping and inverse warping .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>Representation of the grid used to model the warping function. In the multigrid approach, a coarse ¿ ¢ ¿ ¢ ¿ grid is first used (right.) The grid is split to a ¢ ¢ and the relaxation algorithm is reiterated. In our implementation grids are split until reaching a ½¾ ¢ ½¾ ¢ ½¾ resolution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>A regular grid ¼ covers the dataset ¼ , and the (inverse) warped grid covers the dataset . To evaluate the inverse warping function at a point Ô ¼ ¾ É, we first need to determine which cell ¼ the point belongs, then compute trilinear coordinates of the point with respect to the eight vertices of the containing cell on ¼ , and finally evaluate the trilinear coordinates at the eight vertices of the corresponding cell on . Since the</figDesc><table /><note>grid covering ¼ is regular, determining which cell Ô ¼ belongs to is simply done by quantization. Evaluating the forward warping function is more expensive because, since the grid is not regular, determining which cell a point Ô ¾ É belongs to requires a spatial search. However, this is irrelevant because our approach does not require to evaluate the forward warping function at all.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Number of vertices extracted with our openDx implementation.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 2 :</head><label>2</label><figDesc>Number of vertices extracted from downsampled datasets.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">ACKNOWLEDGEMENTS</head><p>We would like to thank Gregory Abram for his assistance with OpenDX. The volume warping pipeline used to generate the illustrations in this paper is implemented entirely in OpenDX. We are also grateful to the university Eberhard Karls in Tübingen for providing access to the datasets used in our experiments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Visualization-specific compression of large volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chandrajit</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Insung</forename><surname>Ihm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanghun</forename><surname>Park</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Pacific Graphics</title>
		<meeting>Pacific Graphics<address><addrLine>Tokyo, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="212" to="222" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Space-optimized texture maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laurent</forename><surname>Balmelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fausto</forename><surname>Bernardini</surname></persName>
		</author>
		<ptr target="http://www.balmelli.net/" />
		<imprint>
			<date type="published" when="2002-09" />
		</imprint>
	</monogr>
	<note>To appear in Proceedings of Eurographics. preprint available at</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Speeding up isosurface extraction using interval trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paolo</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paola</forename><surname>Marino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enrico</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Scopigno</surname></persName>
		</author>
		<idno>1077-2626</idno>
	</analytic>
	<monogr>
		<title level="j">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="158" to="170" />
			<date type="published" when="1997-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Segmentation and surface-based modeling of objects in 3-D biomedical images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">D</forename><surname>Kalvin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
		<respStmt>
			<orgName>New York University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.d. thesis</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Feature-sensitive surface extraction from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leif</forename><forename type="middle">P</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mario</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename><surname>Schwanecke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
		</author>
		<idno>1-58113-292-1</idno>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 2001, Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM Press / ACM SIGGRAPH</publisher>
			<date type="published" when="2001-08" />
			<biblScope unit="page" from="57" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Lorenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harvey</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Hierarchical and adaptive visualization on nested grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mario</forename><surname>Ohlberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="365" to="385" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Optimal memory constrained isosurface extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dietmar</forename><surname>Saupe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jürgen</forename><surname>Toelke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Vision, Modelling and Visualization</title>
		<meeting><address><addrLine>Stuttgart, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cornhill. Octree-based decimation of marching cubes surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Raj</forename><surname>Shekhar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Elias</forename><surname>Fayyad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roni</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fredrick</surname></persName>
		</author>
		<idno>0-89791-864-9</idno>
	</analytic>
	<monogr>
		<title level="m">Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="335" to="344" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Adaptive marching cubes. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Kankanhalli</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="202" to="217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Octrees for faster isosurface generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jane</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allen</forename><surname>Van Gelder</surname></persName>
		</author>
		<idno>0730-0301</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="201" to="227" />
			<date type="published" when="1992-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Semiregular mesh extraction from volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">J</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Breen</surname></persName>
		</author>
		<idno>0-7803-6478-3</idno>
	</analytic>
	<monogr>
		<title level="m">Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000-10" />
			<biblScope unit="page" from="275" to="282" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
