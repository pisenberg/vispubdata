<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Isometric embedding by surface reconstruction from distances</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingrid</forename><surname>Hotz</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<postBox>P.O. Box 3049</postBox>
									<postCode>D-67653</postCode>
									<settlement>Kaiserslautern</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Isometric embedding by surface reconstruction from distances</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry-Geometric algorithms; isometric embedding</term>
					<term>metric</term>
					<term>tensor fields</term>
				</keywords>
			</textClass>
			<abstract>
				<p>To display the intuitive meaning of an abstract metric it is helpful to look on an embedded surface with the same inner geometry as the given metric. The resulting partial differential equations have no standard solution. Only for some special cases satisfactory methods are known. I present a new algorithmic approach which is not based on differential equations. In contrast to other methods this technique also works if the embedding exists only locally. The fundamental idea is to estimate Euclidean distances, from which the surface is built up. In this paper I focus on the reconstruction of a surface from these estimated distances. Particular the influence of a perturbation of the distances on the shape of the resulting surface is investigated.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Symmetrical second order tensor fields are of great importance in computational physics. Applications are widely spread over many areas of physics and engineering, ranging from fluid flow over mechanical properties of solids to numerical relativity. Although techniques for analysis of tensor data exist they only cover some applications. Common methods can essentially be classified in local and global methods. Local methods are in work in general with icons <ref type="bibr" target="#b4">[5]</ref>, with the risk of cluttering. The global methods are topological methods, which investigate the eigenvector field <ref type="bibr" target="#b5">[6]</ref>, tensor realization by intrinsic geometry <ref type="bibr" target="#b1">[2]</ref> and the deformation of interrogation objects <ref type="bibr" target="#b8">[9]</ref>. My approach is a global method, where the tensor field is interpreted as a distortions of a flat metric, that I presented in <ref type="bibr" target="#b6">[7]</ref>. In general one does not have an intuitive understanding of the abstract metric itself. In the two dimensional case or when considering two dimensional slices in some higher dimensional space, this problem can be solved by visualizing a two dimensional surface embedded in three dimensional Euclidean space, with the same inner geometry. This isometric embedding is given by a system of partial nonlinear differential equations for a surface parametrization. There are no satisfactory standard algorithms to solve these differential equations for arbitrary surfaces. The numerical methods depend on the category of the differential equations: elliptic, parabolic or hyperbolic which is determined by the sign of the Gaussian curvature. Thus only surfaces with a fixed sign of the Gaussian curvature can be treated. An alternative method, the direct construction of the three-dimensional points of a wire frame leads to a system of nonlinear algebraic equations. Having a sufficiently good initial guess these systems can be solved using the Newton-Raphson method <ref type="bibr" target="#b2">[3]</ref>. For surfaces with a spherical topology Nollert and Herold used this approach <ref type="bibr" target="#b3">[4]</ref>. In general it is not easy to obtain good start values. Poor start values you can lead to nearly arbitrary results, without any quality control. Another algorithm for surfaces with spherical topology was given by Bondarescu, Alcubierre and Seidel <ref type="bibr" target="#b9">[10]</ref>. Their algorithm appears to work well for their special task of computing the embedding of apparent horizons of black holes with the very restricting property of being star-like. A further problem is that the tensors and metrics that I am interested in are results of numerical simulations or measurements. Thus, I am concerned with discrete data. The chosen interpolation has an important influence on the resulting surface. It cannot be decided which surface is the "true" one. Thus, my aim is not to solve the differential equation for some special interpolation or to reconstruct a given surface, but to construct and visualize a surface which gives an intuitive understanding of the underlying metric. The focus is not a high accuracy, but an easy and fast algorithm. For this purpose every solution is satisfactory as long as it represents the metric. This means that the distances and the Gaussian curvature fit to the given metric.</p><p>My algorithmic approach can be divided in two parts: The computation of the distances of neighboring surface points and the surface construction. In this paper I deal primarily with the surface construction from estimated distances of neighboring points. For the distance computation which is based on a curvature estimation refer to <ref type="bibr" target="#b7">[8]</ref>. The estimation of the distances is afflicted with some error according to the chosen interpolation. Therefore the surface construction does not use fixed values for the distances but allows some error tolerance. For the evaluation of the algorithm surfaces are reconstructed from given distances of well known surfaces. In this case an exact reconstruction is possible. Afterwards the distances are perturbed with a statistical error and the influence on the resulting surface is observed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">THE PROBLEM</head><p>In general a two dimensional surface S is given as a subset of three dimensional Euclidean space, in the analytical case as parametrization X : <ref type="figure">figure 1</ref>) and in the discrete case as a set of points {Pi ∈ IR 3 |i ∈ I finite subset of IN } (figure 2) with neighborhood relations. Afterwards the geometric entities as normals, distances, curvature are defined on the surfaces. Thereby a distinction can be drawn between entities according to the intrinsic geometry and those which involve the outer space, as the surface normal and the normal curvature. The properties of the surface which can be expressed only in terms of the metric and its derivations belong to the intrinsic geometry. The metric g of a surface with parametrization X(u, v) = (x(u, v), y(u, v), z(u, v)) is given by: were Xu and Xv denote the partial derivatives to u and v respectively. &lt;. , .&gt; means the standard Euclidean scalar product. I now go the other way round. I do not want to determine the metric for a given surface, but look for a surface that fits to a given metric g = (gij) : IR 2 ⊃ U → IR 2,2 . This means I have to find an embedded surface S ⊂ IR 3 and a parametrization X : U → S with:</p><formula xml:id="formula_0">IR 2 ⊃ U → S ⊂ IR 3 (</formula><formula xml:id="formula_1">g = (gij) = &lt; Xu, Xu &gt; &lt; Xu, Xv &gt; &lt; Xv, Xu &gt; &lt; Xv, Xv &gt; =: E F F G</formula><formula xml:id="formula_2">ds 2 ! = ds 2 ⇔ g11 du 2 + 2g12 du dv + g22 dv 2 ! = dx 2 + dy 2 + dz 2</formula><p>The differential equations determining the parametrization</p><formula xml:id="formula_3">X(u, v) = (x(u, v), y(u, v), z(u, v))</formula><p>are given by:</p><formula xml:id="formula_4">E = g11 = x 2 u + y 2 u + z 2 u F = g12 = xuxv + yuyv + zuzv G = g22 = x 2 v + y 2 v + z 2 v</formula><p>It is not guaranteed that there exists always a surface that fits globally to the given geometric properties, but for every point there exists such a neighborhood (Theorem of Bonnet see for example <ref type="bibr" target="#b0">[1]</ref>).</p><p>To obtain the embedded surface, there are two fundamentally different approaches: The solution of the differential equations to get the parametrization function and the direct computation of the three dimensional points of the surface as a wire frame. The discretization of the differential equations lead to the algebraic equations that  <ref type="figure">figure 3</ref>. To get rid of this ambiguity we take also the Gaussian curvature into account, which is an entity of the intrinsic geometry. Definition: A discrete surface is an isometric embedding of a discrete metric, if the surface points fulfill the following properties:</p><p>• The Gaussian curvature of the surface in the vertices correspond to the Gaussian curvature determined by the metric.</p><p>• The distances of neighboring points correspond to the metric.</p><p>The values for the distances and the Gaussian curvature are no fixed numbers but allow some variance according to the uncertainty in the distance estimation. The estimation of the distances of the points is based upon the geodesic distances in combination with a curvature estimation. The construction of the surface is an iterative process where alternating new points are computed and the curvature approximation is improved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE EMBEDDING ALGORITHM</head><p>The algorithm starts in a point of interest. Around this central point the surface is constructed ring by ring as long as possible. The basic principle for the computation of a new ring is:</p><p>• A first estimation of the curvature in the new points is computed. This estimation is based on the curvature of neighboring points and the local Gaussian curvature which we obtain from the metric.</p><p>• All relevant distances for the computation of the new points are computed based on the first curvature estimation.</p><p>• The error tolerance for each distance is determined, based on an estimation of the uncertainty in the distance computation.</p><p>• A first approximation for the new points is calculated using these distances.</p><p>• The curvature estimation is improved based on the first approximation for the surface points</p><p>• Distances and error tolerance are computed again, with the improved curvature values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• Final computation of the new points</head><p>To get a better result the last two steps could be repeated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Some notes on the estimation of the distances</head><p>For the surface construction we need Euclidean distances, which are values of the outer geometry and not available for us. The integration of the differential length ds along a straight connection of two points in the parameter space U gives the length of the corresponding surface curve. For a linear interpolation of the metric between the two end points this computation is easily done. In doing so we make two essential mistakes:</p><p>"Detours on the surface": (corresponds to the geodesic curvature kg) This problem can be solved by computing the geodesic distance. The run of the geodesic connection (the green line in figure 4) between two points is given uniquely by the metric and is therefore computable with our knowledge. The numerical computation of the geodesic connection is very expensive even for linear interpolations (boundary value problem). But the geodesic curvature kg in the endpoints is easy to compute.</p><p>"Detours with the surface": (corresponds to the normal curvature kn of the surface) This error is the major problem, because we do not have any knowledge about the curvature of the surface except the Gaussian curvature which is an entity of the inner geometry. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Triangulation of the parameter space</head><p>We use triangles as basic structure of the wire frame of the parameter space. The special choice of the triangulation is based on three criteria:</p><p>• The construction of the surface ought to be as symmetrical as possible</p><p>• We construct the surface ring by ring around a point of interest, thus we are looking for a structure which represents this ring structure.</p><p>• Each of the distances delivers one equation, because every distance involves two points with three degrees of freedom, at least six distances are relevant for each point. All these criteria suggest a uniform triangulation with equilateral triangles as shown in figure 5. Then every point has six direct neighbors in the parameter space evenly distributed around it. We will see later that the consideration of neighbor of first orders, the points with indices P(1,-,-) in figure 5 do not suffice to determine the points uniquely. Therefore also neighbors of second order are relevant for my algorithm, These are the points with indices P(2,-,-) in figure 5. The side length of the triangles is the characteristic value of the triangulation and is a measure for the resolution.</p><p>The points are indexed by the ring number r = 0, .., n, the edge p = 0, ..5 and the point number within the edge of the six angle l = 0, .., r − 1. The number of points per r-th ring is 6r. The total number of points for n rings is N = 1 + n r=1 <ref type="bibr" target="#b5">6</ref> • r = 3 n (n + 1) + 1</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">COMPUTATION OF NEW SURFACE POINTS</head><p>The computation of new points is based on distances to points that have already been computed. Because every point has three degrees of freedom, we need at least three distances for its determination. Using three distances the computation corresponds to the construction of a tetrahedron. The basic triangle ABC and three distances sa, s b and sc from the new point P to the vertices of the triangle are known (see <ref type="figure" target="#fig_3">figure 6</ref>). We chose a coordinate system </p><formula xml:id="formula_5">¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ ¡ ¢ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ £ ¡ £ ¡ £ ¡ £ ¡ £ ¡ £ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¡ ¤ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¡ ¥ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦ ¡ ¦</formula><formula xml:id="formula_6">x = c 2 + s 2 a − s b 2c y = b 2 + s 2 a − s 2 c − 2c1x 2c2 z 2 = s 2 a − x 2 − y 2</formula><p>with c := |AB|, b := |AC| and a := |BC|. We now distinguish three cases depending on the value of z 2 : z 2 &gt; 0: There are two solutions which are symmetric respective to the basis triangle ABC. This means if a solution exists, there are in general two possibilities for the point P . For a surface consisting of n points this can lead to about 2 n different results. This problem expresses the fact, that if we impose constraints only to direct neighbor points, we have no control about the curvature of the surface. To be able to control the curvature also distances to neighbors of higher order have to be taken into account.</p><p>Thus we involve three distances to direct neighbors, that must be fulfilled exactly, the so called "must-distances". They are used to determine the position of the new point up to the sign of z. To decide which of these two points is chosen we use distances to neighbors of second order. Because these distances are afflicted with a greater error they are only used as "control-distances". z 2 = 0: It exists exactly one solution for P in the plane spanned by A, B, C. z 2 &lt; 0: There is no point which corresponds exactly to the demanded distances.</p><p>Supposing that all triangle inequalities are fulfilled, we get a maximum and minimum length of the distance sc depending on the lengths of the other edges (see figure7). For all solutions we demand also, that the error of the control distances does not exceed a given limit.</p><p>The error tolerance is given by a maximum percentage error. The tolerance value is taken from the scope in the distance estimation, that depends on the variation of the metric in the involved points. Because in general the distances to further points are more erroneous the tolerance value depends also on the order of the connection.</p><p>In the final embedding algorithm the error tolerance is varied from a greater value in the first iteration step to a smaller value for the last iteration..</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Existence and uniqueness</head><p>The question of existence and uniqueness for an analytical metric is treated in the theorem of Bonnet. It contains the compatibility conditions which are differential equations for the curvature. In the case of a discrete metric these equations are replaced by algebraic equations for the distances of points of first and second order. Since the computation of the new points corresponds to the construction of a tetrahedron, the question of the existence of the surfaces leads to the question of the existence of the tetrahedron with given side length. A fundamental requirement is the fulfillment of the triangle inequalities. To get an imagination of the meaning of these equations for the metric we estimate the distance of two points P1 and P2. Let</p><formula xml:id="formula_7">gi := g(Pi) = Ei Fi Fi Gi with i = 1, 2</formula><p>be the metrics in Pi with eigenvalues λi and µi. Let λmin be the smallest and λmax the greatest eigenvalue of these four values. The length of the surface curve connecting P1 and P2 along the parameter line is given by: This estimation is very strong, and covers the worst cases. In general the triangle inequality are not a problem. But the existence of all triangles does not guarantee the existence of the embedding. There are also equations concerning the constructed tetrahedron from the four triangles. They are expressed by four area inequalities.</p><formula xml:id="formula_8">s = P 2 P 1 ds = E(u, v) du 2 + G(u, v) dv 2 + 2F (u, v</formula><formula xml:id="formula_9">A1 ≤ A2 + A3 + A4 A2 ≤ A3 + A4 + A1 A3 ≤ A4 + A1 + A2 A4 ≤ A1 + A2 + A3</formula><p>where Ai means the area of the i-th triangle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE SURFACE CONSTRUCTION</head><p>In this section I describe the construction scheme in more detail. The computation starts in a marked point which serves as condensation point for the surface. In the first ring all seven points are computed at the same time. These points have seven times three degrees of freedom, and therefore 21 unknowns. The consideration of translation and rotation of the whole ring reduces the number of unknowns to 15. The distances between direct neighbors deliver twelve conditions which are used as "must-distances". In figure 9 these are drawn as solid lines. To determine the first ring uniquely the six diagonals are used as "control-distances" (dashed lines).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>n-th ring :</head><p>To obtain a symmetric construction, we start with the computation of the six corners. The relevant distances are shown in figure 10. Again solid lines mean "must-distances" and dashed lines "control-distances". For every corner three <ref type="figure">Figure 10</ref>: Computation of the corner points P 9, P 0 and P 1 are computed simultaneously. At first the two solutions for P 0 are computed using the reference points R9, R0 and R1. Afterwards the points P 1 and P 9 are computed with the distance to P 0, R0 and R1 respective R9 for each value of P 0. This leads to four different points for P 1 and P 9. From all possible combinations of these points, the one which fits best to the "control-distances" is taken as final result.</p><p>To obtain the remaining points of the edges points are computed successively from the corners towards the middle (see <ref type="figure" target="#fig_7">figure 11</ref>). As reference points P 9, R9 and R1 are used. Again we gain two possible solutions for each point. The better one according to the "control-distances" is chosen. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Break off :</head><p>The algorithm stops if no more tetrahedron can be constructed according to the error tolerances or if the border of the parameter space is reached.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>To evaluate the algorithm it makes sense to start with well known surfaces. For the metric of these surfaces we are sure, that the embedding exists. Further we know how the result should look like. At first I use accurate distances form such surfaces. In this case the Algorithm should provide an exact reconstruction. In general the distance estimation does not deliver accurate values. Therefore the next step is the investigation of the influence of this deviation on the existence and the shape of the result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Accurate distances</head><p>I start with a simple example, the plane. Because all z-values of the plane are equal to zero, errors can be detected easily. The result is shown in <ref type="figure" target="#fig_9">figure 13</ref>. As an example for a surface with a positive   I start with a small error and let it grow slowly. It can be observed that at the beginning the surface does not change much. But from a threshold suddenly the shape of the surface changes abrupt and the surface will not be smooth anymore. The threshold depends on the resolution and the curvature of the surface. Interestingly the surface construction is more stable for greater curvature. This effect is based on the role of the control distances. If the two solutions in the tetrahedron construction differ much, an error in the control distances does not lead to a wrong decision. But if these points are very similar also a small error leads to wrong choice.</p><p>In contrast to the statistical perturbation for real data the errors from neighboring distances are correlated. Thus the threshold value up to which the the construction is stable is higher than in the statistical case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>Recapitulating the algorithm works very well if the estimation of the distances is good enough. If the embedding exists we we get satisfying results. The main problem concerning the embedding of a surface with an arbitrary metric is the sensitivity of the global existence of the embedding on small variations of the metric. Often many patches are needed to cover the complete domain. In general these patches cannot be connected without cracks. Therefore the aim is to find a balance between allowed errors and a minimum number of patches. For that purpose it could be suggestive to allow at first a greater variance of the distance. The result could be used as start surface of an optimization process which spreads the error evenly over the complete surface.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>IEEEFigure 1 :Figure 2 :</head><label>12</label><figDesc>Visualization 2002 Oct. 27 -Nov. 1, 2002, Boston, MA, USA 0-7803-7498-3/02/$17.00 © 2002 IEEE Parametrized surface D Discrete surface</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>Computation of the euclidean distance of two pointsAs approximation of the Euclidean distance d (the red line infigure 4) we use the length of the surface curve s (the blue line infigure 4)corrected by a curvature estimation k which is a combination of the normal and the geodesic curvature k 2 = k 2 g + k 2 n . Concerning the question of the curvature estimation I do not go further into details but refer to<ref type="bibr" target="#b7">[8]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Indexing of the points</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Computation of a new point P where A = (0, 0, 0), B = (c, 0, 0) and C = (cx, c h , 0). Then the coordinates of P = (x, y, z) are given by:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>sc 2 max = b 2 Figure 7 :Figure 8 :</head><label>278</label><figDesc>+ s 2 a + 2(h c h − x cx) sc 2 min = b 2 + s 2 a + 2(−h c h − x cx) Maximum and minimum length of sc If sc ∈ [smin, smax] an "optimal point" is computed as midpoint of the triangles Pa, P b and Pc according to figure 8. Computation of an optimal pointIf the deviation of the resulting distances moves in the given tolerance interval, the point is accepted. Otherwise the computation is aborted in this direction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>) du dv It can be estimated as follows: λmin a ≤ s ≤ λmax a For a triangle ABC the triangle inequalities are: sa + s b &gt; sc s b + sc &gt; sa sc + sa &gt; s b Let a, b, and c be the lengths of the triangle edges in parameter space and λmax and λmin the maximum and minimum eigenvalues respectively. The triangle inequalities are always fulfilled if the maximum and minimum eigenvalues obey the following conditions. sa + s b ≥ λmin (a + b) For a ≤ b ≤ c this is equivalent to λmin λmax ! &gt; c a + b With the above triangulation only some special proportions of the triangle sides are relevant. equilateral triangles (a = b = c)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :</head><label>9</label><figDesc>Computation of the first ringFirst ring :</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 11 :</head><label>11</label><figDesc>Computation of the points on the edgesIf the number of points on the edge is even the last two points are computed simultaneously. The used reference points are shown in the upper picture of figure 12. For an odd number the last point is over determined from the distances to direct neighbors. Here two points are computed and the resulting middle point is taken.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 12 :</head><label>12</label><figDesc>Computation of the points in the middle of the edges, upper figure: point number even, lower figure point number odd</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 13 :</head><label>13</label><figDesc>Plane with a resolution of 20 rings Gaussian curvature we choose the paraboloid. Starting point is the middle of the domain (seefigure 14). The third and most criticalFigure 14: Paraboloid left with a resolution of 20 rings, right with a resolution of 3 rings example is the torus with different curvature behaviors. All three surfaces delivered exact results. Even the reconstruction of the torus resulted in a closed surface shown in figure 15.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 15 : 2 .</head><label>152</label><figDesc>Torus with a resolution of 14 rings Statistically distorted distances I now move to the case of statistically distorted distances. The imposed error is a percental error with Gaussian distribution around zero. The variance of the distribution is given as a parameter. The effect of the distortion is demonstrated for the example of the paraboloid with different error variances. Because the differences in the shape of similar surfaces are difficult to see, I show the projection of the paraboloid in the xy-plane, where the variation can be detected earlier. For the undistorted case I reobtain the six-angle structure of the parameter space..</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 16 :Figure 17 :</head><label>1617</label><figDesc>Error variance: left 0.01%, right 0.5% Error variance from 1%</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Building up a surface ring by ring around a point of interest as long as the embedding exists. The computation of new points is based on distances to other points, that are already computed.</figDesc><table><row><cell>Recapitulating the problem:</cell></row><row><cell>Starting situation :</cell></row><row><cell>-a rectangular domain U = Iu × Iv where Iu and Iv are inter-</cell></row><row><cell>vals in IR</cell></row><row><cell>-a discrete subset D ⊂ U of U , and a corresponding triangu-</cell></row><row><cell>lation</cell></row><row><cell>-a discrete, symmetric, positive definite second order tensor</cell></row><row><cell>field T : D → {T ∈ IR 2,2 |T symmetric, positive definite}</cell></row><row><cell>defined on D.</cell></row><row><cell>Final aim :</cell></row><row><cell>Construction of a discrete surface around a point of interest, rep-</cell></row><row><cell>resenting the metric in the neighborhood of this point, in the</cell></row><row><cell>sense that the distances and the Gaussian curvature fit to the given</cell></row><row><cell>metric. The whole domain can be covered using several starting</cell></row><row><cell>points.</cell></row><row><cell>Available from the metric are :</cell></row><row><cell>Principally all entities of the intrinsic geometry are computable</cell></row><row><cell>from a given metric with the mentioned variance.</cell></row></table><note>-the geodesic distances of surface points -the Gaussian curvature of the surface Not available from the metric are : -the Euclidean distances of surface points -the normal curvature of the surface The idea :</note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">Do</forename><surname>Manfredo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Carmo</surname></persName>
		</author>
		<title level="m">Differential Geometry of Curves and Surfaces</title>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Dodd</surname></persName>
		</author>
		<title level="m">A new Approach to the Visualization of Tensor Fields Graphical Models and Image Processing</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="286" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Flannery</surname></persName>
		</author>
		<title level="m">Numerical Recipes in C</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
	<note>2end edition</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Relativity and Scientific Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Nollert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heinz</forename><surname>Herold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Curves Spacetimes -Visualization of Surfaces via Embedding</title>
		<editor>F.W.Hehl, R.A.Puntigam, H.Ruder</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="330" to="351" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Hesselink Visualization of Second Order Tensor Fields IEEE Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Th</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Delmarcelle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="316" to="323" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The Topology of Symmetric Second-Order 3D Tensor Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lambertus</forename><surname>Hesselink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuval</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yingmei</forename><surname>Lavin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualizing second order symmetric tensor-fields as metrical surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingrid</forename><surname>Hotz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization Conference</title>
		<meeting><address><addrLine>San Diego</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Isometric embedding for a discrete metric</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingrid</forename><surname>Hotz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the Book &quot;Geometric Modelling for Scientific Visualization</title>
		<editor>Guido Brunnett, Bernd Hamann, Heinrich Mueller</editor>
		<imprint/>
	</monogr>
	<note>accepted for publication</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><surname>Boring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pang</surname></persName>
		</author>
		<title level="m">Interactive Deformations from Tensor Fields IEEE Visualization</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="297" to="304" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mihai</forename><surname>Bondarescu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miguel</forename><surname>Alcubierre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><surname>Seidel</surname></persName>
		</author>
		<idno type="arXiv">arXiv:gr-qc/0109093</idno>
		<title level="m">Isometric embeddings of black hole horizons in threedimensional flat space</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
