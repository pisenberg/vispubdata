<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.1" ident="GROBID" when="2016-09-09T14:58+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Voronoi-Based Extraction and Visualization of Molecular Paths</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Norbert</forename>
								<surname>Lindow</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Daniel</forename>
								<surname>Baum</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Hans-Christian</forename>
								<surname>Hege</surname>
								<roleName>Member, Ieee</roleName>
							</persName>
						</author>
						<title level="a" type="main">Voronoi-Based Extraction and Visualization of Molecular Paths</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index Terms—Molecular visualization</term>
					<term>data filtering</term>
					<term>geometry-based techniques</term>
					<term>view-dependent visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Mechanosensitive channel (PDB: 2OAU). Left: Ball-and-stick representation (yellow), potential molecular paths (blue), and extension surface (red) of the most important paths. Middle: Van der Waals surface of the molecule with screen space ambient occlusion and path illumination. Right: Solvent excluded surface clipped by the extension surface of the red paths. Abstract—Visual analysis is widely used to study the behavior of molecules. Of particular interest are the analysis of molecular interactions and the investigation of binding sites. For large molecules, however, it is difficult to detect possible binding sites and paths leading to these sites by pure visual inspection. In this paper, we present new methods for the computation and visualization of potential molecular paths. Using a novel filtering method, we extract the significant paths from the Voronoi diagram of spheres. For the interactive visualization of molecules and their paths, we present several methods using deferred shading and other state-of-the-art techniques. To allow for a fast overview of reachable regions of the molecule, we illuminate the molecular surface using a large number of light sources placed on the extracted paths. We also provide a method to compute the extension surface of selected paths and visualize it using the skin surface. Furthermore, we use the extension surface to clip the molecule to allow easy visual tracking of even deeply buried paths. The methods are applied to several proteins to demonstrate their usefulness.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p> Understanding molecular interactions is the key to many open questions in biochemistry, molecular biology and pharmaceutics. This is because molecular interactions are the driving forces for many biochemical processes taking place in all kinds of organisms, from the most simple to highly developed ones. Before interactions can take place, however, the interacting molecules must come close enough to each other. For example, before a ligand can bind to a protein, the ligand must reach the binding site of the protein. Hence, besides answering the question whether a ligand can bind to the protein's binding site, we also need to know, whether the ligand can reach the binding site, and if, what the possible paths are. Over the past two decades, several methods to explore and visualize molecular paths have been proposed. Most of them <ref type="bibr" coords="1,217.52,545.42,9.71,8.02" target="#b7">[8,</ref><ref type="bibr" coords="1,229.50,545.42,11.21,8.02" target="#b37"> 38,</ref><ref type="bibr" coords="1,242.97,545.42,11.21,8.02" target="#b38"> 39,</ref><ref type="bibr" coords="1,256.45,545.42,11.21,8.02" target="#b44"> 45,</ref><ref type="bibr" coords="1,269.93,545.42,11.95,8.02" target="#b47"> 48] </ref>are restricted to a small subset of paths. Others are able to detect all channels in a molecule but do not find cavities <ref type="bibr" coords="1,208.48,565.35,13.74,8.02" target="#b10">[11]</ref> . Further meth- ods <ref type="bibr" coords="1,46.25,575.31,14.19,8.02" target="#b18">[19,</ref><ref type="bibr" coords="1,62.75,575.31,11.21,8.02" target="#b23"> 24,</ref><ref type="bibr" coords="1,76.25,575.31,11.21,8.02" target="#b27"> 28,</ref><ref type="bibr" coords="1,89.76,575.31,11.21,8.02" target="#b39"> 40,</ref><ref type="bibr" coords="1,103.27,575.31,11.95,8.02" target="#b46"> 47] </ref>do not compute path descriptions but only the surface of accessible areas. In this paper, we address the problem of computing and visualizing paths to all regions of a molecule. The computation of these paths is particularly interesting for molecules like nanotransporters, whose design is becoming more and more important <ref type="bibr" coords="1,199.10,625.72,13.74,8.02" target="#b26">[27]</ref>. Nanotransporters are often very complex and have many binding sites. Identification of these binding sites via molecular dynamics simulations is too sive. Hence, there is a need to restrict the search space. Here, the paths computed with our method can provide guidance for the computation of molecular dynamics simulations. We compute the paths from the Voronoi diagram of spheres which already contains all paths we are interested in. For the calculation of the Voronoi diagram of spheres, we present improvements to speed up the algorithm for molecular data. To extract the paths, we apply a fast novel method to filter the Voronoi diagram. The filter needs only few parameters and is easy to implement, since it is based on depth first search in the graph built from the Voronoi diagram. The paths that remain after filtering provide a good overview of all accessible areas of the molecule. We visualize the molecule and its paths using deferred shading and other state-of-the-art methods like ray-casting and screen space ambient occlusion. Furthermore, by placing light sources along the paths, we draw the attention of the user to the cavities and channels . All visualizations run at interactive speed. We also support the selection of single paths by the user to explore them more thoroughly. For the selected paths, we compute their extension surface and visualize it using the skin surface. This has several advantages over previous methods. Moreover, to allow easy tracking of even deeply buried paths, we clip the molecule using their extension surface. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Our geometry-based path detection relies on the computation of Voronoi diagrams. Voronoi diagrams were defined by the Ukrainian mathematician G. Voronoi in 1908. A survey on the basics of the diagrams , their variations and algorithms is given, for example, by Okabe et al. <ref type="bibr" coords="1,313.72,686.61,14.94,8.02" target="#b35">[36] </ref>or Aurenhammer <ref type="bibr" coords="1,394.54,686.61,9.52,8.02" target="#b2">[3]</ref>. <ref type="bibr" coords="1,410.01,686.61,84.76,8.02">In 2005, Kim et al. [21] </ref>presented the first algorithm to compute the Voronoi diagram of spheres in threedimensional space. One year later, they accelerated this algorithm by reducing the search space <ref type="bibr" coords="1,388.53,716.50,13.74,8.02" target="#b9">[10]</ref>. Medvedev et al. <ref type="bibr" coords="1,468.34,716.50,14.94,8.02" target="#b34">[35] </ref> presented a similar algorithm in the same year. In 2007, Ma˘ nák et al. <ref type="bibr" coords="1,492.09,726.46,14.94,8.02" target="#b32">[33] </ref>published further improvements for the techniques of <ref type="bibr" coords="1,452.42,736.42,14.19,8.02" target="#b9">[10,</ref><ref type="bibr" coords="1,469.22,736.42,11.95,8.02" target="#b20"> 21] </ref>by the use of the Delaunay complex and an iterative reduction of the search space. The detection of molecular paths and cavities is a large research area with many different approaches. Because of the large number of publications in this field, we will mention only the most significant works dealing with geometry-based extraction and identification of such structures. The first group of tools creates surfaces or volumes for cavities and channels by filling them with geometric structures. While SURFNET <ref type="bibr" coords="2,65.75,135.32,13.74,8.02" target="#b27">[28]</ref>, HOLLOW <ref type="bibr" coords="2,128.56,135.32,14.94,8.02" target="#b18">[19] </ref>and 3V <ref type="bibr" coords="2,177.61,135.32,14.94,8.02" target="#b46">[47] </ref>use probe spheres of variable size, VOIDOO <ref type="bibr" coords="2,116.12,145.28,14.94,8.02" target="#b23">[24] </ref>takes water molecules and Exner et al. <ref type="bibr" coords="2,34.45,155.24,14.94,8.02" target="#b15">[16] </ref>as well as Raunest and Kandt <ref type="bibr" coords="2,166.20,155.24,14.94,8.02" target="#b39">[40] </ref>take voxels, where their tool dxTuber is the first to deal with dynamic proteins. The recently presented work by Krone et al. <ref type="bibr" coords="2,141.77,175.17,14.94,8.02" target="#b25">[26] </ref>improves handling of dynamic proteins with interactive detection and exploration of selected cavities. They integrated their work into MegaMol. All these tools provide a good visual representation of the interior area, but the result is always represented by surfaces or volumes that do not contain detailed path information like branching points, etc. This makes it difficult to detect alternative paths or to extract and analyze specific paths. The second group of tools detects channels through proteins. There are several different approaches and most of them require a userdefined starting position. One of the tools is HOLE <ref type="bibr" coords="2,212.93,265.95,13.74,8.02" target="#b44">[45]</ref>, which uses a simulated annealing technique to maximize the radius of spheres without overlapping the van der Waals surfaces of the atoms. Petrěk et al. <ref type="bibr" coords="2,33.17,295.83,14.94,8.02" target="#b38">[39] </ref>presented a grid based path search named CAVER. The weight of each grid cell depends on the distance to the molecule, which allows using the Dijkstra shortest path algorithm for an easy path detection. One year later, Petrěk et al. <ref type="bibr" coords="2,128.31,325.72,14.94,8.02" target="#b37">[38] </ref>enhanced their algorithm by using a classical Voronoi diagram instead of a grid. They called the new tool MOLE. A similar approach based on the idea of Voronoi diagrams of spheres, but using the dual Delaunay complex of the classical Voronoi diagram, was done by Medek et al. <ref type="bibr" coords="2,194.95,365.57,14.94,8.02" target="#b33">[34] </ref>in the same year. In 2008, Yaffe et al. <ref type="bibr" coords="2,99.73,375.54,14.94,8.02" target="#b47">[48] </ref>presented MolAxis which provides further improvements including a better approximation of the different atom radii. PoreWalker <ref type="bibr" coords="2,88.14,395.46,10.45,8.02" target="#b7">[8] </ref>was the first program that computed the greatest channel in a protein without a user-defined starting position. However, all of these tools are restricted to the computation of only one channel or a fixed number of paths for a single starting position. The CHUN- NEL <ref type="bibr" coords="2,43.36,435.31,14.94,8.02" target="#b10">[11] </ref>tool addresses this problem and detects all channels in a protein by analyzing the topology of the molecular solvent excluded surface. However, the algorithm does not detect cavities like molecular pockets and the computation takes very long, even for molecules with only a few thousand atoms. The last group comprises all tools and publications that do not directly belong to any of the other two groups. In contrast to CHUN- NEL, CAST <ref type="bibr" coords="2,68.77,506.17,14.94,8.02" target="#b29">[30] </ref>detects all molecular pockets instead of the channels. This tool relies on the alpha shape theory <ref type="bibr" coords="2,179.66,516.13,13.74,8.02" target="#b14">[15]</ref>. A similar approach was used by Maeda et al. <ref type="bibr" coords="2,118.99,526.09,14.94,8.02" target="#b31">[32] </ref>to evaluate protein-protein interfaces. Roll <ref type="bibr" coords="2,40.41,536.05,14.94,8.02" target="#b48">[49] </ref> is a program that also detects pockets based on the comparison of molecular surfaces with different probe radii. Molecular path planning employing rapidly-exploring random trees (RRTs) <ref type="bibr" coords="2,241.42,555.98,14.94,8.02" target="#b28">[29] </ref>was done by Cortes et al. <ref type="bibr" coords="2,103.79,565.94,14.19,8.02" target="#b12">[13,</ref><ref type="bibr" coords="2,121.24,565.94,10.65,8.02" target="#b11"> 12]</ref>. This technique allows one to detect paths depending on the geometry and dynamic of a given substrate, but the algorithm does not compute all paths of a protein. Finally, Bajaj et al. <ref type="bibr" coords="2,54.21,595.83,10.45,8.02" target="#b3">[4] </ref>proposed an algorithm to detect and characterize cavities in molecular structures based on the topological research of level sets. Nearly all of the mentioned path detection tools visualize their results . In most cases, they approximate the surface of the channels and cavities. These surfaces are rendered in combination with standard molecule visualization. State-of-the-art rendering of smooth molecular surfaces was presented by Chavent et al. <ref type="bibr" coords="2,182.55,656.72,9.52,8.02" target="#b8">[9]</ref>, Krone et al. <ref type="bibr" coords="2,242.57,656.72,14.94,8.02" target="#b24">[25] </ref>and Lindow et al. <ref type="bibr" coords="2,73.70,666.68,13.74,8.02" target="#b30">[31]</ref> . A new volume-based approach for rendering dynamic molecular surfaces was presented by Krone et al. <ref type="bibr" coords="2,223.06,676.65,13.94,8.02" target="#b25">[26]</ref>; it allows clipping of the molecule with a plane. Tarini et al. <ref type="bibr" coords="2,209.70,686.61,14.94,8.02" target="#b45">[46] </ref>described an algorithm for real-time ambient occlusion of the van der Waals surface and the ball-and-stick representation. Another approach based on ambient occlusion was presented by Borland <ref type="bibr" coords="2,185.75,716.50,10.45,8.02" target="#b6">[7] </ref> for rendering molecular cavities. Bidmon et al. <ref type="bibr" coords="2,124.20,726.46,10.45,8.02" target="#b5">[6] </ref>developed an algorithm for the visual clustering of molecular path lines. Apart from molecular visualization , there exist many other approaches to render paths with their surrounding geometry. As an example, the flow visualization technique of Jones et al. <ref type="bibr" coords="2,336.67,73.31,14.94,8.02" target="#b19">[20] </ref>shall be mentioned. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">VORONOI DIAGRAM OF SPHERES</head><p>In this paper, we assume that a molecule is given by its n atoms with positions p i ∈ R 3 and van der Waals radii r i ∈ R. Thus, we consider a molecule as a set of spheres. From this description of a molecule, we compute the potential molecular paths in two main steps. First, we compute the Voronoi diagram of spheres from the van der Waals spheres. The Voronoi diagram of spheres represents a complete description of the topological structure of the distance transform d(·) of the molecule, where d(p) := min{p − p i − r i | 1 ≤ i ≤ n}. </p><formula>(1) </formula><p>The paths we are looking for are a subset of this topological structure. Hence, the Voronoi diagram of spheres already contains all paths that are of interest to us. Thus, we only need to filter the Voronoi diagram in a second step. The computation of the Voronoi diagram of spheres is described in this section, while the filtering is addressed in Sect. 4. Note that from now on, whenever we use the term Voronoi diagram we refer to the Voronoi diagram of spheres. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Definition</head><p>A three-dimensional Voronoi diagram consists of Voronoi regions, facets, edges, and vertices. A Voronoi region of an atom is the set of all points closest to the corresponding sphere, that is, </p><formula>V i = p | p − p i − r i ≤ p − p j − r j , i = j . </formula><p>For the definition of the remaining Voronoi structure, there are two limitations. First, there must not exist a point with the same distance to more than four atom spheres, because this yields a degenerate Voronoi diagram. In practice, we avoid such situations by adding a very small random offset to all atom positions. Second, no sphere may lie completely inside another sphere, which should not be the case for van der Waals spheres of a molecule. A Voronoi facet is the surface between two atoms given by the intersection of their Voronoi regions. The analytical description of a Voronoi facet is a piece of a two-sheeted hyperboloid bounded by curves, the Voronoi edges. A Voronoi edge is the intersection of three Voronoi regions. It can be described as a part of a planar rational quadratic Bézier curve. These curves are symmetric w.r.t. the plane given by the three spheres of the regions and can be closed or unclosed. A closed curve will be created by a small sphere lying between two great spheres. In a special case, the Voronoi edge is equal to the complete closed curve. The algorithm that we describe next will not detect such edges. All other Voronoi edges are bounded by at least one Voronoi vertex. Finally, a Voronoi vertex lies at the intersection of four Voronoi regions. Each vertex describes the center of an empty sphere tangent to the four spheres given by the regions. A two-dimensional Voronoi diagram of circles is illustrated in <ref type="figure" coords="2,407.65,566.68,19.81,8.02" target="#fig_1">Fig. 4</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Computation 3.2.1 Computation of a tangent sphere of four spheres</head><p>The computation of the Voronoi diagram requires the calculation of tangent spheres for sets of four atoms i, j, k, l. Here, we summarize the method of Gavrilova et al. <ref type="bibr" coords="2,393.60,629.64,13.74,8.02" target="#b16">[17]</ref>. Assume without loss of generality that atom l has the smallest radius. We move the atoms such that l lies at the origin. Then we shrink the four radii by the radius of atom l. As result, we get the following equation system for the tangent sphere with positioñ p and radius˜rradius˜ radius˜r of the transformed atoms. </p><formula>( ˜ p − ˜ p i ) 2 = (˜ r + ˜ r i ) 2 , where˜pwhere˜ where˜p i = p i − p l and˜rand˜ and˜r i = r i − r l ( ˜ p − ˜ p j ) 2 = (˜ r + ˜ r j ) 2 , where˜pwhere˜ where˜p j = p j − p l and˜rand˜ and˜r j = r j − r l ( ˜ p − ˜ p k ) 2 = (˜ r + ˜ r k ) 2 , where˜pwhere˜ where˜p k = p k − p l and˜rand˜ and˜r k = r k − r l ˜ p 2 = ˜ r 2 c e α max s e </formula><p>Fig. 2. Illustration of an edge tracing step in 2D. The gate consists of the blue spheres with the start vertex depicted by the red sphere. The center of the green sphere is g e and the end vertex is drawn as dotted red sphere. The maximal angular distance is α max . </p><p>The first three equations become linear by subtracting the fourth. Now, we solve the linear system with r as parameter and apply the solution to the last equation yielding a quadratic equation in r. The system can have none, one, two or infinitely many solutions. For Voronoi diagrams, we only consider the empty tangent spheres. We get the radii of the tangent spheres by applying the inverse translation and subtracting the radius of l. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">The Edge Tracing Algorithm</head><p>To compute the Voronoi diagram of spheres, Kim et al. <ref type="bibr" coords="3,248.54,374.75,14.94,8.02" target="#b20">[21] </ref>presented the edge tracing algorithm. This algorithm starts with an initial Voronoi vertex. From this Voronoi vertex, Voronoi edges are traced until no further edge can be found. To find the initial Voronoi vertex , Kim et al. <ref type="bibr" coords="3,88.62,414.60,14.94,8.02" target="#b20">[21] </ref>and Medvedev et al. <ref type="bibr" coords="3,185.03,414.60,14.94,8.02" target="#b34">[35] </ref>propose two different methods, which we will not explain here. Consider a correct Voronoi start vertex tangent to four atom spheres. This vertex creates four Voronoi edges, one edge for each atom triple. Kim et al. <ref type="bibr" coords="3,116.53,454.92,14.94,8.02" target="#b20">[21] </ref>call these triples gates and we adopt this term. Each gate holds the corresponding start vertex and is added to a stack. The algorithm then starts tracing the edges as follows: The algorithm takes a gate from the stack and computes the end vertex. If the end vertex is equal to an existing vertex in the graph, we only create the edge. Otherwise, we add the vertex to the graph and push the remaining three gates to the stack. The computation of the end vertex is the most expensive part of the algorithm. We have to find the fourth atom sphere for the three given gate atoms, so that the tangent sphere of these atoms is empty and closest to the start vertex. All n−3 remaining atoms have to be considered. Note that the fourth atom of the start vertex could also be the fourth atom of the end vertex. With a naive approach, we get a time complexity of O(n 2 ), because we have to compute the tangent spheres and test them for emptiness. But Kim et al. <ref type="bibr" coords="3,159.79,706.53,14.94,8.02" target="#b20">[21] </ref>found that the tangent sphere closest to the start vertex w.r.t. an angular directed distance is equal to the end vertex. So the emptiness test is not necessary, which reduces the complexity to O(n). We describe the computation of the edge di- d <ref type="figure" coords="3,294.12,179.17,18.89,7.37">Fig. 3</ref>. The left image shows the expansion of the search space by grid rings, starting with the red grid cell. On the right side, one can see the break condition d &gt; r max for the blue gate with green start vertex and red current end vertex. rection in detail, because Kim et al. <ref type="bibr" coords="3,421.78,236.79,14.94,8.02" target="#b20">[21] </ref>give only a coarse description and the technique presented by Medvedev et al. <ref type="bibr" coords="3,472.49,246.75,14.94,8.02" target="#b34">[35] </ref>works only for unbounded data with a relatively regular atom distribution as present in liquids or gases. One method to detect the direction of an edge is to shrink the sphere of the start vertex. Consider the set of all tangent spheres of a gate (see <ref type="figure" coords="3,376.43,286.60,20.36,8.02">Fig. 2</ref>). The start and end vertices of an edge are elements of this set. The idea is to move the start vertex to the end vertex by changing the radius such that the current sphere is empty and tangent to the gate. If we move the start vertex into the wrong direction , the sphere will intersect the fourth atom. So we define a direction by shrinking the start vertex and testing whether it is still empty. To realize the shrinking, we calculate the position of a sphere with given radius tangent to the three gate spheres. This is done similarly to the computation of a tangent sphere of four spheres (see Sect. 3.2.1). We use the same transformation for the three gate spheres. This yields a system of two linear and one quadratic equations. In the regular case, we obtain two spheres. The sphere closer to the start vertex needs to be tested for intersection with the fourth atom. Remember that the edge lies in a plane, which we call edge plane (proofed by Kim et al. <ref type="bibr" coords="3,524.33,416.12,13.44,8.02" target="#b20">[21]</ref>). The direction is given by the normal of the edge plane. The initial normal n e of the position s e of a start vertex is defined as moving the start vertex into the correct direction. In case that none of the n − 3 atoms creates a valid tangent sphere, the edge goes to infinity. Therefore, we compute a representative vertex with a great radius and mark it as infinity vertex. We also implemented the techniques by Cho et al. <ref type="bibr" coords="4,61.61,93.23,14.94,8.02" target="#b9">[10] </ref>to further reduce the costs. Nevertheless, the overall complexity of the algorithm is O(n·e), where e is the number of edges. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Further improvements for faster calculation</head><p>To further reduce the search space, we use a three-dimensional grid as spatial data structure. An atom belongs to a grid cell if its center lies inside the cell. For molecules, it is a good choice to set the maximal number of grid cells equal to the number of atoms. The grid is designed in the following way. First one computes the axis aligned bounding box of the atoms. Then, the cell size and the real number of grid cells is calculated such that the cells become similar to a cube. The grid allows a fast detection of the end vertex without touching all n − 3 atoms. This is done by looping over rings of grid cells. In the first loop, we run over all atoms in the cell of the start vertex. The second loop tests all atoms of all grid cells that touch the cell of the first loop, and so on (see <ref type="figure" coords="4,98.51,244.91,21.12,8.02">Fig 3)</ref> . When we reach a state at which the distance of the current end vertex to the nearest remaining potential atom with greatest possible radius r max is greater than the sum of their radii, we have found the end vertex and can stop the search. We approximate this for the i'th loop by </p><formula>d = c r − c g − e p − e r &gt; r max , </formula><p>where c g is the center of the cell of the first loop and c r = (i − 0.5)c min with c min being the smallest cell dimension. The vertex position is e p and its radius is e r (see <ref type="figure" coords="4,111.76,343.41,20.47,8.02">Fig. 3</ref>). The grid reduces the complexity to O(1) in regions with a high atom density, but does not speed up the vertex detection at boundaries. To further improve the runtime, we developed a parallel version of the algorithm. For this, we need two stacks of gates, an active and an inactive one. The algorithm computes all end vertices of the gates of the active stack in parallel. Then, we sequentially pop the vertices of the active stack. We test whether the vertex already exists in the graph. If not, we add the vertex and the new gates to the inactive stack. In the last step, we switch the active and inactive stacks and restart the procedure until the active stack is empty. Note that the most expensive part of the algorithm is done in parallel. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">Boundary Handling</head><p>The Voronoi diagram contains many edges outside the domain of the molecule and a lot of them are infinitely long. These edges are not elements of molecular paths and create visual clutter around the molecule. To remove them, we first cut the Voronoi diagram with the axis aligned bounding box. Of course, this does not suffice for molecules whose shapes are not box-like. So in the second step, we remove the remaining paths by applying a simple technique that is also used in computer graphics for the approximation of ambient light in a point. For this, at each vertex, we cast a set of rays in all directions. The more rays hit the molecule the more likely it is that the vertex resides inside the molecule. For vertices inside cavities and channels, many rays will intersect the molecule. One interpretation for this method is, that vertices with sparse ambient illumination are inside or near the molecule. We remove all vertices, for which the hit ratio, that is the ratio between the number of rays hitting the molecule and the overall number of rays, is smaller than a given threshold. Note that a value of 0.5 approximately cuts the vertices outside the convex hull of the molecule and that we can parallelize the whole computation. <ref type="figure" coords="4,96.51,674.63,20.93,8.02" target="#fig_5">Fig. 6</ref>shows a result of our boundary handling. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Topological Structure</head><p> The Voronoi diagram of the van der Waals spheres describes the complete topology of the distance transform d(·) of the molecule. We adapt the definition of the critical points of d(·) from Siersma <ref type="bibr" coords="4,255.70,726.46,13.74,8.02" target="#b42">[43]</ref>. For this, we need the dual structure of the Voronoi diagram of spheres, called quasi-triangulation <ref type="bibr" coords="4,379.31,247.74,14.19,8.02" target="#b21">[22,</ref><ref type="bibr" coords="4,396.03,247.74,10.65,8.02" target="#b22"> 23]</ref>, which is the analogon of Note that the critical points do not have a one-to-one correspondence to the Voronoi structures, that is, there does not exist a critical point on every Voronoi facet, edge, or vertex. This is only guaranteed for the Voronoi region, which always contains a minimum. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">PATH COMPUTATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Topology Graph Construction</head><p> The Voronoi edges and vertices contain all points that locally are furthest away from the atoms of the molecule. These are exactly the points we are interested in. Therefore, in the following, we concentrate on the vertices and edges and ignore the Voronoi facets and regions. From these topological structures, we build a topology graph that we simplify to obtain the most significant potential molecular paths. Now we describe the construction of the topology graph from the Voronoi diagram. The directed topology graph is a vertex-labeled directed graph G = {V, L, E}, with vertices V , labels L, and directed edges E. We denote the undirected topology graph by G. The set of vertices V contains all Voronoi vertices and all index 2 saddle points. Its corresponding label set is L = {l(v)|v ∈ V }, where l : V → {maximum, minimum, regular} is defined as follows. A vertex v ∈ V is called @BULLET maximum, if v is a maximum in the Voronoi diagram. Now we construct the edges E of G as follows. For each u ∈ V with l(u) = minimum, we add two directed edges (u, v) and (u, w), where v and w are the vertices corresponding to the Voronoi edge on which u lies. For each edge of the Voronoi diagram without an index 2 saddle point, we add (u, v) to E if d(u) &lt; d(v), where u and v are the corresponding vertices of the Voronoi edge. Note that the small random noise on the atom positions avoids d(u) = d(v), which is the degenerate case u = v. Furthermore v can be a regular vertex but also a max- imum. <ref type="figure" coords="5,58.45,73.31,21.26,8.02" target="#fig_1">Fig. 4</ref>shows the topology graph of a Voronoi diagram for the two-dimensional case. In the constructed topology graph, each minimum has only outgoing edges, each maximum only incoming edges, and each regular vertex incoming and outgoing edges. Before we explain how we filter G, we give some definitions concerning an undirected graph G s . A branch G b is a connected subgraph of G s , where all vertices have at most two adjacent edges in G s and at least one vertex has a single edge in G s . We call G b regular, if all vertices in G b are regular. A branching vertex is a vertex with more than two adjacent edges. We define a significant molecular path as a path in G through a tunnel or into a cavity which starts and ends in a branching vertex or a maximum and has at least one minimum. Furthermore , there is no other path in G through this tunnel or into this cavity that has a greater smallest minimum. Note that we will sometimes speak of a sphere v instead of a vertex. In this case, we mean the sphere with center v and radius d(v). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Path Filtering</head><p>In this section, we describe the complete filtering pipeline to obtain the most significant molecular paths. We use five filtering methods that are applied sequentially. @BULLET Radius filter. This filter removes vertices from the topology graph that are closer to the molecule than a pre-defined radius. @BULLET Regular-branch filter. This filter removes branches from the topology graph that do not contain critical points. @BULLET Regular-edge filter. This filter removes single edges from the topology graph. As a result of this, new regular branches emerge, so we apply the regular-branch filter again after this step. @BULLET Cycle filter. This filter removes cycles from the topology graph to further simplify the graph structure. @BULLET Branch filter. Finally, this filter removes branches that are already represented by more significant paths. </p><p>The graph that is left after applying all the filtering methods contains all the paths we are interested in. Possibly, it still contains some dispensable path segments, but only very few, so that the visual impression is not impaired. An example for a filtering is given in <ref type="figure" coords="5,242.00,456.19,23.17,8.02" target="#fig_5">Fig. 6.</ref></p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Radius Filter</head><p> This filter removes all edges along which a sphere with pre-defined radius r f cannot move without colliding with any atom of the molecule. So all vertices whose distance value is smaller than r f are removed from the graph, together with their adjacent edges. The sphere with radius r f can be thought of as a very rough approximation of a small molecule interacting with the target molecule. In case of a water molecule, r f is generally set to 1.4 ˚ A. When r f is set to 0, the filter eliminates all edges that intersect the atoms of the target molecule. The value of r f can be freely chosen according to the molecule and the question of interest. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Regular-Branch Filter</head><p>In this filtering step, we operate on an undirected subgraph G s of the topology graph G and remove all regular branches from G s (Sect. 4.1). To identify regular branches, we start at any regular vertex of G s that has only a single edge and collect all vertices in a depth-first-search manner. When we arrive at a vertex that is not regular or has more than two edges, we stop. We remove all vertices found during the depthfirst search except the last one. As a result of this step, we might create isolated maxima which we also remove. We apply this filter after the radius filter as well as after the filter that will be described in the next section. To illustrate the usefulness of this filter, we give two examples. First, imagine a simple tunnel with a minimum in the middle of the tunnel and two paths of regular vertices to the maxima at the ends of the tunnel. After removing the minimum by applying the radius filter, it does not make sense to keep branches <ref type="figure" coords="5,294.12,190.69,19.43,7.37">Fig. 5</ref>. Two-dimensional sketch of cycle elimination. Image (a) shows the cycle detection algorithm for cycles of length 2, starting in s going to the right. The red paths fail, the green is the cycle and the dotted path will be removed. Image (b) shows a non-empty cycle. If we remove the minimum m in image (c), we get two branches with a common start vertex, so the smaller branch will be removed (dotted). into the tunnel, because the connection is lost. Another example is a simple cavity. Assume the graph has a single minimum at the entrance to the cavity. If this minimum is removed, we can also remove the path to the cavity, since the cavity is not accessible. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Regular-Edge Filter</head><p>We now describe a filtering step that simplifies the graph by removing edges. In this step, we consider a subgraph G s of the directed topology graph G. From G s we remove edges outgoing from regular vertices, such that after this step, for each regular vertex, there will be only one outgoing edge. The motivation for this step is to break cycles but also to remove paths to maxima that are of less interest. After this step, we again apply the regular-branch filter described in Sect. 4.2.2. In this filter, we consider all regular vertices v ∈ G s with more than one outgoing edge. For each v, we follow all outgoing edges up to the next maximum and compare the outgoing edges. We then remove all outgoing edges that are of less interest to us. Several criteria for the selection of the best outgoing edge are possible, for example, we can consider the length of their paths or the maxima they lead to. In our implementation, we always keep the outgoing edge that leads to the closest maximum. This can again be decided using depth-first search. As a result of this filter, some maxima may become isolated and will finally get removed. These maxima are of no interest to us, since they are not directly connected to a minimum via a separate path. Note that a significant path contains at least one minimum and this filter does not remove minima. Hence, all significant paths remain and each minimum is connected to at most two maxima. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.4">Cycle Filter</head><p>At this point, the filtered undirected topology graph still contains many insignificant paths which connect vertices of the graph that are already connected by more important paths. To remove the less significant paths, we apply a two-step approach. First, we identify empty cycles containing these paths, where a cycle is defined as being empty if it can be shrunk linearly to its center of gravity without cutting any atom. Second, for each empty cycle, we remove its smallest minimum and its adjacent branches. We remove empty cycles depending on their lengths, where the length of a cycle is given by the number of contained minima. We start the path elimination with cycles of length 1 and continue up to a user-defined length. To identify cycles of length k, we start the search at all minima. To find a cycle of length k for a minimum m, we apply a modified recursive depth first search with backtracing on the undirected topology graph. Since each minimum is connected to exactly two vertices, we can start the search at one of them and try to reach the other one. The algorithm marks all visited vertices and unmarks them during backtracing . During the depth first search, we count all visited minima. When we reach the end vertex and the number of visited minima is equal to k − 1, we have found a cycle of length k and we store the cycle in a global list. If we reach a vertex that is smaller than m or the number of encountered minima exceeds k, we backtrace to the last branch. In our implementation, we use a vertex stack to store the cycle. An example for the detection of an empty cycle is shown in <ref type="figure" coords="6,238.16,276.11,19.81,8.02">Fig. 5</ref>. Before we can eliminate a cycle, we need to test it for emptiness. We use a geometric heuristic that casts rays from the center of the cycle to regularly sampled points on the cycle (see <ref type="figure" coords="6,185.49,306.74,19.79,8.02">Fig. 5</ref>). The points must be close enough so that we do not miss any atom possibly residing in the cycle. If no ray hits an atom before reaching the point on the cycle, the cycle is empty and can be removed. The tests for intersection of a ray with the molecule can be done very fast using the grid data structure described in Sect. 3.2.3. Finally, we remove the cycle by deleting the smallest minimum on the cycle together with its adjacent branches. Sometimes both branches start in the same vertex. In this case, only the branch with the smallest vertex will be removed, shown in <ref type="figure" coords="6,31.72,396.41,23.17,8.02">Fig. 5.</ref></p><formula>(a) (b) (c) (d) (e) </formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.5">Branch Filter</head><p>The goal of this filter is to remove short branches and branches that are close to other branches. To identify branches that can be removed, we consider the end vertex v of each branch G b and test v's sphere for intersection with the spheres of all vertices w not belonging to G b . In the following, we will speak of sphere u instead of vertex u, by which we mean the sphere centered at u with radius d(u). If we do not find a vertex w such that the radius of the intersection circle of the spheres v and w is greater than r f , we keep the branch. Otherwise, we collect all vertices˜vvertices˜ vertices˜v on G b . If we find for each sphere˜vsphere˜ sphere˜v a sphere˜wsphere˜ sphere˜w such that the radius of their intersection circle is greater than r f , we can remove G b . Here, an intersection circle with radius greater than r f means that a sphere of radius r f can move freely from one vertex to the other. Thus, the vertices are not separated. Note that we sort the branches according to the distance value of their end vertices, starting with the smallest distance. This way it is guaranteed that we remove the branches with smaller distance at the end points. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Path Selection</head><p>The filtered topology graph provides an overview of all possible molecular paths. This allows the user to select paths that are of particular interest. The selected paths might then be further investigated. We describe methods to visualize selected paths in Sect. 5. Here, we explain how paths are selected from the undirected filtered topology graph given a start vertex s and an end vertex t. We describe the computation of the k best paths from s to t. In order to apply a variant of Dijkstra's shortest path algorithm, we need to define weights on the edges of the graph. To compute the shortest path in terms of distance , one can simply use the length of an edge as its weight. Petrěk et al. <ref type="bibr" coords="6,33.47,716.50,14.94,8.02" target="#b37">[38] </ref> use edge weights that also take the distance transform into account . Using their formula, paths with larger distance to the molecule are preferred over paths that get close to the molecule. Our goal is to compute the k best paths from s to t such that for all paths j = 1 . . . k, it holds that (1) j contains at least one edge that is not contained in any of the paths 1 to j − 1, and (2) there is no shorter path for which (1) is true. Since (1) is generally not guaranteed by other k-shortest path algorithms, we developed the following procedure. First, we compute the shortest path from s to t using the Dijkstra algorithm and mark all vertices and edges of this path. For each marked vertex, we store the distance to s and the distance to t. Now assume that we have already found the j − 1 shortest paths and have marked all their vertices and edges, and stored the shortest distances to the primary start vertex s and the end vertex t. To find the j'th shortest path from s to t, we search for the shortest detour of the previous paths. To do so, we start the Dijkstra algorithm at each marked vertex v which is initialized with the shortest distance to s. The Dijkstra algorithm must follow only unmarked edges to guarantee (1). If the algorithm reaches another marked vertex u, we sum up the new minimal distances from s to v, v to u, and u to t. If the distance of the next vertex in the heap is greater than the length of the current minimal path, we have found the shortest detour via v. The j'th shortest path is defined by the shortest detour of all marked vertices. We repeat this until we have found the k shortest paths. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">VISUALIZATION</head><p>The user of our program should be able to visually explore the results in a fast and intuitive way. We implemented several methods to visualize the molecules and their paths using state-of-the-art rendering techniques. Using adaptations and combinations of them, we obtain comprehensible high quality images at interactive speed. All our implementations were carried out using the Open Graphics Library (OpenGL) <ref type="bibr" coords="6,366.76,521.92,10.45,8.02" target="#b0">[1] </ref> and shader programs of the OpenGL Shading Language (GLSL) <ref type="bibr" coords="6,367.67,531.88,13.74,8.02" target="#b40">[41]</ref>. In the following sections, we present our methods for visualizing the extracted paths and the molecular structure according to these paths. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Molecule Rendering</head><p>There are several possibilities to render a molecular structure. In our program, we provide the typical atom based visualizations like balland-stick and molecular surfaces like van der Waals surface, solvent accessible surface, solvent excluded surface and molecular skin surface . The rendering of the ball-and-stick model is based on the work of Sigg et al. <ref type="bibr" coords="6,333.47,636.19,13.74,8.02" target="#b43">[44]</ref> , while the computation and rendering of the molecular surfaces is based on the works of Krone et al. <ref type="bibr" coords="6,466.64,646.15,14.94,8.02" target="#b24">[25] </ref>and Lindow et al. <ref type="bibr" coords="6,296.70,656.11,13.74,8.02" target="#b30">[31]</ref>. The raycasting based rendering techniques provide fast and high quality visualizations. The direct illumination of molecular structures, however, does not provide good depth cues. This makes it difficult to detect cavities and tunnels by pure visual inspection. To overcome this, we use screen space ambient occlusion developed by <ref type="bibr" coords="6,429.86,706.53,9.52,8.02" target="#b4">[5]</ref>. This method provides a much better depth perception and is easy to implement. In Sect. 5.4.1 we present a novel technique to further improve the visual perception of cavities and tunnels using the extracted paths. <ref type="figure" coords="7,46.97,186.28,3.32,7.37">7</ref>. The KirBac1.1 potassium channel (PDB: 1P7B) with different illumination techniques. From left to right: direct illumination only, after adding point lights on the filtered paths, after adding screen space ambient occlusion, and after adding the blur effect for glow impression. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Topology Graph Rendering</head><p>To visualize the significant molecular paths, we display the undirected topology graph. Because of the sharp bends in the graph created by the Voronoi diagram, we smooth the graph using non-uniform rational basis splines (NURBS). The NURBS are rendered as short segments of cylinders or cones with spheres at the ends of the spline. For the rendering, we use raycasting of quadrics <ref type="bibr" coords="7,186.93,290.51,13.74,8.02" target="#b43">[44]</ref>. With each sampled point on the spline, we store the distance to the nearest atom. We visualize the distance either by color-coding or by scaling the radii of the splines. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Rendering of Selected Paths</head><p> Besides the actual location of a selected path, the most interesting information about the path is the size of the empty area surrounding it. Similarly to other works <ref type="bibr" coords="7,122.20,372.64,14.19,8.02" target="#b37">[38,</ref><ref type="bibr" coords="7,138.93,372.64,10.65,8.02" target="#b47"> 48]</ref>, we visualize this area by rendering the extension surface enclosing the spheres positioned at the vertices v along the path. As sphere radii we use d(v) (see Eq. 1). In contrast to previous approaches, however, we visualize the extension surface using the skin surface developed by Edelsbrunner <ref type="bibr" coords="7,213.46,412.49,13.74,8.02" target="#b13">[14]</ref> . The skin surface is a tangent continuous surface of a set of spheres. It has only a single parameter, the so-called shrink factor. The shrink factor takes a value between 0 and 1, where a value close to 0 creates a surface close to the convex hull of the spheres, while a value of 1 creates a surface enclosing exactly the spheres. To render the skin surface, we use the raycasting approach presented in <ref type="bibr" coords="7,154.74,472.26,13.74,8.02" target="#b30">[31]</ref> . Since the creation of the extension surface is very fast, the user can interactively switch between paths and visualize more than one path. We use a shrink factor around 0.7, which creates smooth extension surfaces and avoids intersections with the molecular surface. Example images are given in <ref type="figure" coords="7,237.77,512.11,19.81,8.02">Fig. 1</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Molecules and Paths</head><p>One of the most challenging problems in visualizing paths is to display the extracted paths together with their surrounding molecular geometry . In the following paragraphs, we address this problem. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.1">Illumination</head><p>In this paragraph, we present a novel technique for path visualization that places many small point lights on the paths to draw the user's attention to channels and cavities reached by the paths. Results of this technique can be seen in <ref type="figure" coords="7,121.39,626.56,19.81,8.02">Fig. 7</ref>. In order to guarantee a high visual quality as well as interactive speed for many light sources, we use deferred shading <ref type="bibr" coords="7,227.26,646.76,14.19,8.02" target="#b41">[42,</ref><ref type="bibr" coords="7,243.61,646.76,10.65,8.02" target="#b17"> 18]</ref>, which was developed to reduce the costs of illumination to the number of pixels in the final image instead of lighting all fragments of the scene including hidden ones. By using multiple render targets, we first render the molecule without illumination. We store the color, the normal and the depth of each fragment in three textures. If we want to combine the technique with ambient occlusion, we do this in the second pass, which then also makes use of the stored depth and normal textures . In the last pass, we compute the illumination of the point lights and combine the result with the current image. </p><p>Because we create some thousand lights, it is not possible and not necessary to consider all lights for the lighting of each fragment. Instead , we only use lights close to the fragment. To do so, we apply a three-dimensional grid similar to the grid of atoms described in Sect. 3.2.3. For each cell of the three-dimensional grid, we store the light sources in a two-dimensional texture. Each point light is defined by its position and a radius, both of which are stored in one floating point RGBA pixel. In our implementation, the light color is fixed, but it could also be stored in another texture. The strength of the light fades out linearly with the distance to the position of the light. Each grid cell points to the pixel of its first light in the texture. The rest of the lights of the cell follows behind until the radius becomes negative which defines the end of the cell. The grid itself is represented by a three-dimensional texture. The radius of each point light is set depending on the distance value d(v) at vertex v. To take effect, the radius must be larger than d(v). In our implementation, we use a radius of min(2 · d(v), 4 · r f ). During illumination, for each fragment, we compute the block of cells according to the maximum light radius, that is 4 · r f . We fetch the lights of the cells and compute simple diffuse lighting. To avoid darkness at positions without paths, we add a weak directional headlight. Working with many lights often creates white artificial areas due to color clamping. To solve this problem, we use high dynamic range (HDR) rendering. A simple tone mapping function maps values in [0, ∞) to <ref type="bibr" coords="7,325.72,468.47,9.46,7.96">[0,</ref><ref type="bibr" coords="7,336.17,468.62,6.14,8.02" target="#b0"> 1]</ref> . Together with gamma correction, a much better illumination is obtained. To make the illumination more intuitive, we allow adding a glow effect at the boundary of the molecule. To do so, for each fragment not belonging to the molecular structure, we collect all the colors within a certain radius. The new fragment color is set to the average of the collected colors. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.2">Surface Clipping</head><p>The methods presented so far enable the user to get a good overview of the interesting cavities and tunnels. They also allow one to view the extension surface of one or more selected paths alone or together with, for example, the ball-and-stick representation. But if the molecule is very complex, it becomes difficult to follow the selected paths. To solve this problem, we propose a simple but effective method: we clip the molecular structure, in particular the molecular surface using the extension surface of the selected paths. A similar technique was previously used by Jones et al. <ref type="bibr" coords="7,423.96,645.92,14.94,8.02" target="#b19">[20] </ref> for visualizing flow trajectories together with volume data. There are several possibilities to realize the clipping, so we describe our method in detail. The first step is to render the extension surface into a frame buffer object without illumination, since we are only interested in the depth values. In contrast to the default rendering, where the closest depth values to the camera are stored, we clear the depth buffer with 0 and store the farthest depth values into a texture. During rendering of the molecular structure, we read this texture and discard all fragments closer to the camera than the values given by the texture. </p><p>Two more features help to distinguish between the area behind the cut and the rest of the structure. First, for all fragments with a depth value of 0 in the texture, the surrounding depth values within a given radius are checked. The ratio r col between the number of depth values equal to 0 and the overall number of values is used to color the cutting boundary. The final pixel color c pix is determined by </p><formula>c pix = r col · c sur f + (1 − r col ) · c bound , </formula><p>where c sur f is the color of the molecular surface and c bound is the boundary color. The result can be seen, for example, in <ref type="figure" coords="8,225.08,148.18,20.02,8.02">Fig. 8</ref>, where the boundary appears to be black. As a second feature, the brightness of all fragments behind the cut is changed by a user-defined value. In <ref type="figure" coords="8,22.50,178.07,19.81,8.02">Fig. 8</ref>, the pixel values behind the cut have been brightened. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>In this section, we present times for the computation of the Voronoi diagram, for the path filtering, and for rendering. Furthermore, we present some application results. Timings for the computation of the molecular surface and the skin surface can be found else- where <ref type="bibr" coords="8,46.69,248.85,14.19,8.02" target="#b24">[25,</ref><ref type="bibr" coords="8,63.18,248.85,10.65,8.02" target="#b30"> 31]</ref>. They are negligible in comparison to the computation of the Voronoi diagram and the path filtering. We applied our methods to several molecules from the PDB <ref type="bibr" coords="8,255.70,268.78,13.74,8.02" target="#b36">[37]</ref>. The PDB IDs of these molecules together with the number of atoms of each molecule can be found in Tab. 1. We also applied our methods to a dendritic core multi-shell nanotransporter (CMS-NT). All results presented here were obtained on an Intel Xeon X5650 E5540 2.66 GHz system with 6 cores and an NVIDIA Geforce GTX470 graphics card. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Voronoi Diagram Computation</head><p>We tested the Voronoi diagram algorithm on several molecules from the PDB. We ran the algorithm on a single core as well as on multiple cores using OpenMP <ref type="bibr" coords="8,99.71,378.61,9.52,8.02" target="#b1">[2]</ref>. The computation times for 1 and 6 cores are given in Tab. 1. We also ran the algorithm on other machines with up to 8 cores. On all machines, we found that the speed-up is approximately 0.5 · c, where c is the number of cores. The theoretical time complexity of the algorithm is O(n·e) <ref type="bibr" coords="8,117.24,418.46,13.74,8.02" target="#b20">[21]</ref>, where n is the number of input spheres and e is the number of Voronoi edges. But with the improvements of Kim et al. <ref type="bibr" coords="8,63.26,438.38,14.94,8.02" target="#b9">[10] </ref>and our grid data structure (see Sect. 3.2.3), for the tested PDB molecules with up to 100, 000 atoms, the algorithm scales almost linearly with the number of atoms. We compared our results with Ma˘ nák et al. <ref type="bibr" coords="8,89.40,468.27,13.74,8.02" target="#b32">[33]</ref>, who are the only ones presenting timings for molecules of the PDB. Like Ma˘ nák we used an Intel Core 2 QUAD 2.4 GHz system. We tested several molecules on one core and measured that our Voronoi diagram computation is about two times faster. For the protein PDB: 1HX6 it takes 5.8 seconds in contrast to 11.2 seconds by Ma˘ nák's algorithm. The boundary handling depends on the number of rays and the hit ratio (see Sect. 3.2.4). In all our tests, we fixed the number of rays to 100 and the hit ratio to 0.5. The timings for one and six cores are given in Tab. 1. The timings show that the boundary handling scales linearly with the number of atoms. Furthermore, we see that it is the most expensive part in the computation pipeline. The speedup for six cores is around 5.5. System: Intel Xeon X5650 E5540 2.66 GHz. <ref type="figure" coords="8,285.12,312.97,18.36,7.37">Fig. 8</ref>. Molecular paths of the CMS nanotransporter with a camera zoom (right) and surface clipping for user-selected paths (red). The top images show paths with radii of at least 3 ˚ A, approximating a morphine molecule. The paths do not reach the inner core, but cavities in the outer shell. The paths in the bottom images have radii of at least 1.4 ˚ A, which approximates water. Molecules of this size can reach the inner core. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Path Filtering and Selection</head><p>The results of the filtering depend on two parameters, which are the filter radius r f (see Sect. 4.2.1) and the maximal size of cycles that are considered for empty cycle cancellation (see Sect. 4.2.4). We kept the maximal cycle size to the fixed value of 20 and varied only the filter radius r f . The filter radius r f as well as the accumulated filter timings are given in Tab. 1. We found that the cycle filter is the most expensive one. Its speed depends mainly on the complexity of the remaining graph and the maximum cycle size. The more elements are removed by the boundary handling and radius filters, the faster the cycle filter works. The remaining filters are very fast and scale linearly with the number of atoms. Overall, the speed of all filtering steps is still fast enough to allow filtering within several seconds. In contrast, CHUNNEL <ref type="bibr" coords="8,363.19,533.38,14.94,8.02" target="#b10">[11] </ref>takes several hours to detect all channels in molecules with only a few thousand atoms. From the filtered paths, the user of our program can interactively select start and end vertices and compute the k best paths between the selected vertices. This takes at most a few seconds for k ≤ 10. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Rendering</head><p>We measured the rendering times for the same molecules and the same path extraction parameters as given in Sect. 6.2. The images were rendered with a fixed image size of 1024×1024 and a varying complexity of illumination as shown in <ref type="figure" coords="8,384.33,636.13,19.62,8.02">Fig. 7</ref>. The frame rates are given in Tab. 2. The paths were rendered as cylindrical lines and the molecular structure using the solvent excluded surface (SES). The fastest rendering is achieved with only a single directional head light. To add complexity, we then turned on the point lights given by the filtered paths as well as the screen space ambient occlusion (SSAO). Finally, we added a glow effect. Even with the most expensive illumination, we still achieve 9 frames per second and more. We also tested the performance of the rendering when clipping the molecular surface using the extension surface of the selected paths. Of course, the performance depends on the complexity and size of the <ref type="figure" coords="9,31.50,59.61,25.46,7.37">Table 2</ref>. Rendering performance given in frames per second w.r.t. a given fill rate (FR). First, we rendered the SES and the paths only with one directional head light (DL), then we added the point lights (PL), the screen space ambient occlusion (SSAO), and finally the glow effect. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="4,285.12,187.39,250.38,7.37;4,285.12,196.85,250.38,7.37;4,285.12,206.32,250.38,7.37;4,285.12,215.78,140.12,7.37"><head>Fig. 4. </head><figDesc>Fig. 4. The left image illustrates a two-dimensional Voronoi diagram of circles. Each vertex corresponds to an empty circle (dotted). The right side shows our corresponding directed topology graph with blue minima, red maxima and yellow regular vertices. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="4,504.60,247.74,30.90,8.02;4,285.12,257.70,250.38,8.02;4,285.12,267.66,115.33,8.02;4,295.46,286.00,198.15,8.66;4,295.46,300.65,240.04,8.66;4,305.05,311.26,213.69,8.02;4,295.46,325.26,240.05,8.66;4,305.05,335.87,200.89,8.02;4,295.46,349.88,240.04,8.66;4,305.05,360.48,131.36,8.02"><head></head><figDesc> a Delaunay complex for a classical Voronoi diagram. We distinguish four different types of critical points: @BULLET Minima. The minima lie at the centers of the atoms. @BULLET Index 1 saddles. An index 1 saddle lies in the Voronoi facet at the intersection point with its dual quasi-triangulation edge. @BULLET Index 2 saddles. An index 2 saddle lies on a Voronoi edge at the intersection point with its dual quasi-triangulation facet. @BULLET Maxima. The maxima are the Voronoi vertices that lie inside their dual quasi-triangulation region. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="4,295.46,621.11,240.04,8.66;4,305.05,631.72,230.45,8.02;4,305.05,641.68,230.45,8.02;4,305.05,651.64,217.27,8.02;4,295.46,665.65,193.97,8.66"><head></head><figDesc>@BULLET minimum, if v is an index 2 saddle in the Voronoi diagram. This means that the index 2 saddle points in the Voronoi diagram turn into minima in the topology graph. They represent the narrowest points in the topology graph and later on the extracted paths. @BULLET regular, if v is neither a maximum nor a minimum. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="6,22.50,176.11,513.00,7.37;6,22.50,184.51,82.12,8.44;6,100.63,184.51,383.31,9.17;6,479.96,185.58,55.54,7.37;6,22.50,195.04,348.21,7.37"><head>Fig. 6. </head><figDesc>Fig. 6. The results of the path computation pipeline illustrated from left to right for a Chaperonin protein (PDB: 1AON). The color illustrates the distance from black (3 ˚ A) to yellow (maximal distance). (a) Bounding box clipping. (b) Boundary handling. (c) Radius filter (r f = 3 ˚ A). (d) Regularbranch filter, Regular-edge filter, and cycle filter. (e) Branch filter and removal of small components. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6" coords="7,31.50,186.28,513.00,7.37;7,31.50,195.75,457.18,7.37"><head>Fig. </head><figDesc>Fig. 7. The KirBac1.1 potassium channel (PDB: 1P7B) with different illumination techniques. From left to right: direct illumination only, after adding point lights on the filtered paths, after adding screen space ambient occlusion, and after adding the blur effect for glow impression. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="true" coords="8,22.50,607.46,250.38,112.41"><figDesc coords="8,22.50,607.46,250.38,7.37;8,22.50,616.93,250.38,7.37;8,22.50,626.39,157.60,7.37">Table 1. Computation times in seconds of the Voronoi diagram (VD), the boundary handling (BH) and the filtering (F). The VD and BH were computed with 1 and 6 cores using OpenMP.</figDesc><table coords="8,28.48,649.95,239.59,69.92">PDB ID 
#Atoms 
VD 
BH 
r f 
F 

1 
6 
1 
6 

2OAU 
13573 
5.2 
1.6 
10.4 
1.9 
1.0 
3.3 
1GKI 
20150 
7.3 
2.3 
13.6 
2.4 
1.4 
2.6 
1G3I 
46040 
18.9 
5.8 
36.2 
6.4 
2.0 
4.6 
1AON 
58870 
23.7 
7.5 
46.9 
8.6 
3.0 
4.0 
1JJ2 
98543 
44.1 
13.4 
82.9 
15.2 
1.4 
13.3 

</table></figure>

			<note place="foot">n e = (s e − c e ) × (g e − c e ) where c e is a point in the edge plane and g e is the intersection of the edge curve with the plane defined by the centers of the three gate spheres (see Fig. 2). One can compute g e by transforming the gate spheres into the two-dimensional plane. Then one computes the empty tangent circles of three given circles. This is similar to what we described above in one dimension lower (see Sect. 3.2.1). The inverse transformation returns the resulting position of g e . We obtain one solution for an unclosed edge curve and two solutions for a closed curve, where we take the position of the smaller circle. The point c e is necessary for the definition of a distance between two points of an edge. The distance d e of two edge points e 1 and e 2 is defined by d e (e 1 , e 2 ) = ∠(e 1 − c e , e 2 − c e ) if e 1 × e 2 , n e &gt; 0 2π − ∠(e 1 − c e , e 2 − c e ), else . For an unclosed edge curve, we choose c e to lie on the symmetry axis of the curve with c e = g e , and for a closed curve, we select the midpoint of the two solutions for g e . If the shrunken start vertex intersects the fourth atom, we have to invert n e . Now we have defined a direction of the edge depending on a point c e and the edge plane normal n e . The nearest sphere is defined by the smallest angular distance d e from the start vertex to the position of the sphere. Note that the angle takes values between 0 and 2π and that there exists a maximum angle smaller than 2π for unclosed edge curves. The maximum angle is the directed angle between s e − c e and the vector on the symmetry axis that does not intersect the curve, see Fig. 2. All vertices with a greater distance are invalid, because there is no possibility to reach them by</note>

			<note place="foot">Fig. 9. Sodium ion channel (PDB: 3HGC). The channel is important for epidermal ion transport into the cell. Blocking this channels by amiloride is a way to treat cystic fibrosis. heuristics. For example, we kept the edge with the largest distance slope or the edge of the path leading to the largest maximum. However , we did not recognize great differences in the results. To the best of our knowledge, our approach is the first which detects all paths through tunnels as well as into cavities. In comparison to CHUNNEL [11], which is able to detect all paths through tunnels, our approach is faster by at least two orders of magnitude. Our filtering keeps only the significant paths containing the main paths extracted also by others, compare to [8, 11, 38, 39] Our interactive rendering with the combination of screen space ambient occlusion and the novel lighting of channels and cavities provides a very good depth impression and allows one to quickly identify the important areas. Nevertheless, it can be difficult to understand still pictures, because it is more intuitive for the user to see dark cavities, where typically no light exists. To make the illumination more consistent and the visualization more intuitive, we use a dark background and a blur effect at the boundary, which creates the impression of glow. Instead of using lights, we could also color the molecular surface according to the distance to the paths. Illumination, however, has the advantage, that we can still use the color to display other properties of the molecule. One other advantage is that we can also use the lights for dynamic illumination of selected paths only and for path animation. The complete overview of all potential paths enables the user to quickly find the interesting ones. These paths can be further investigated by interactive selection. We visualize selected paths by displaying their extension surface, which was also done by Petrěk et al. [38] and Yaffe et al. [48]. In contrast to their methods, we visualize the extension surface using a raycasted skin surface. This is much faster, since we do not need to triangulate the surface. Furthermore, we can easily apply it to several selected paths. We also use the extension surface to clip the molecular structure. This greatly improves the understanding of the location of the paths w.r.t. to the molecular structure. So far, we have only used the extracted paths for visualization. In the future, we plan to use the paths for guiding molecular simulations. The precomputed potential paths can reduce the computational cost of such simulations, since large parts of the search space can be excluded. Furthermore, we want to compute paths depending on the geometry and dynamic of the substrate, instead of paths only for spheres. ACKNOWLEDGMENTS We would like to thank Marcus Weber and Amir Sedighi from Zuse Institute Berlin (ZIB) for providing the CMS-NT structure and for many helpful discussions.</note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Application Results</head><p>In  , we show the filtered paths of a dendritic core multi-shell nanotransporter (CMS-NT). The left images show all extracted paths for two different filter radii. The top images display the paths of molecules approximated by a radius of 3 ˚ A. A sphere of this size approximates a morphine molecule. We did not find any path reaching the core of the molecule. Only cavities in the outer shell are reached; one is depicted in the right image. In the bottom images, we filtered the paths using a filter radius of 1.4 ˚ A, which is the size of a water molecule. In the right image, we selected a path going through the core of the molecule. Another example is given in , which shows the feasible sodium channels in 3HGC. These channels are accessible for NA+ ions but can be blocked by amiloride. Note that NA+ ions and amiloride have approximate radii of 1 ˚ A and 2.5 ˚ A, respectively. The image shows the paths extracted using a filter radius of 1 ˚ A. As can be expected from the 3-fold rotational symmetry of 3HGC, the extracted paths also show such a symmetry. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION AND CONCLUSION</head><p>In this paper, we presented several improvements for the computation and visualization of potential molecular paths. By computing the molecular paths from the Voronoi diagram of spheres, we are able to extract the paths from the exact distance transform of the molecule in contrast to others <ref type="bibr" coords="9,188.34,477.39,14.19,8.02" target="#b37">[38,</ref><ref type="bibr" coords="9,205.52,477.39,11.21,8.02" target="#b33"> 34,</ref><ref type="bibr" coords="9,219.71,477.39,10.65,8.02" target="#b47"> 48]</ref> , who use approximations . Our Voronoi diagram computation is about two times faster than that presented by Ma˘ nák et al. <ref type="bibr" coords="9,184.93,497.32,13.74,8.02" target="#b32">[33]</ref>. One reason might be the overhead by computing the Delaunay complex for a fast neighbor search. We also tested the program by Medvedev et al. <ref type="bibr" coords="9,227.83,517.24,13.74,8.02" target="#b34">[35]</ref>. However, their algorithm is restricted to data with periodic boundary, which allows them to use a simpler edge direction detection, which fails for typical proteins. After several minutes, we terminated their program. From the Voronoi diagram of spheres, we compute the most significant paths by applying a sequence of methods. Among these, the boundary handling is the most expensive one. We thought about two alternatives. First, we could cut all vertices v of the Voronoi diagram with d(v) greater than a given value. Such a filtering would be very fast, but it would also eliminate paths inside large cavities. A second alternative is to use a mask approximating the structure of the molecule. However, creating such a mask would involve user interaction and might be time consuming for complex molecules. Our boundary handling seems a good compromise between fast computation and good boundary estimation. Furthermore, we compute the hit ratio only once and store it. The fixed ratio of 0.5 in our tests, cuts the paths approximately at the convex hull (see Sect. 3.2.4), like in many other molecular path detection algorithms. A cut with the convex hull can be done much faster, but with our approach the user can change the ratio to keep for example only paths deep inside the molecule. Empirically , 100 rays seemed enough to cover the domain around a vertex. We believe that an implementation for graphics cards would greatly accelerate this method. For the regular-edge filter, we also tried other </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct coords="10,40.76,74.58,159.85,7.13"  xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">Opengl</forename>
				<surname>Webseite</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,84.05,164.73,7.13"  xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">Openmp</forename>
				<surname>Webseite</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,93.51,232.12,7.13;10,40.76,102.97,161.84,7.13"  xml:id="b2">
	<analytic>
		<title level="a" type="main">Power diagrams: properties, algorithms and applications</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Aurenhammer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Comput</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="78" to="96" />
			<date type="published" when="1987-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,112.44,232.12,7.13;10,40.76,121.90,232.12,7.13;10,40.76,131.37,232.12,7.13;10,40.76,140.83,198.61,7.13"  xml:id="b3">
	<analytic>
		<title level="a" type="main">Topology based selection and curation of level sets</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Bajaj</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gillette</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Goswami</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Topology-Based Methods in Visualization II, Mathematics and Visualization</title>
		<editor>H.-C. Hege, K. Polthier, and G. Scheuermann</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="45" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,150.30,232.12,7.13;10,40.76,159.76,232.12,7.13;10,40.76,169.23,93.63,7.13"  xml:id="b4">
	<analytic>
		<title level="a" type="main">Image-space horizon-based ambient occlusion</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Bavoil</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Sainz</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Dimitrov</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH 2008 talks, SIGGRAPH &apos;08</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,178.69,232.12,7.13;10,40.76,188.16,232.12,7.13;10,40.76,197.62,69.29,7.13"  xml:id="b5">
	<analytic>
		<title level="a" type="main">Visual abstractions of solvent pathlines near protein cavities</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Bidmon</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Grottel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Bös</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Pleiss</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Ertl</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="935" to="942" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,207.08,232.12,7.13;10,40.76,216.55,208.54,7.13"  xml:id="b6">
	<analytic>
		<title level="a" type="main">Ambient occlusion opacity mapping for visualization of internal molecular structure</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Borland</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of WSCG</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="17" to="23" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,226.01,232.12,7.13;10,40.76,235.48,232.12,7.13;10,40.76,244.94,232.12,7.13;10,40.76,254.41,56.81,7.13"  xml:id="b7">
	<analytic>
		<title level="a" type="main">PoreWalker: A novel tool for the identification and characterization of channels in transmembrane proteins from their three-dimensional structure</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">P</forename>
				<surname>Calace</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Maiwald</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">M</forename>
				<surname>Thornton</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Computational Biology</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">7</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,263.87,232.12,7.13;10,40.76,273.34,232.12,7.13;10,40.76,282.80,77.26,7.13"  xml:id="b8">
	<analytic>
		<title level="a" type="main">High quality visualization of molecular skin surface</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Chavent</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Lévy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Maigret</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Graphics and Modelling</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1391" to="1398" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,292.26,232.12,7.13;10,40.76,301.73,232.12,7.13;10,40.76,311.19,232.12,7.13;10,40.76,320.66,232.12,7.13;10,40.76,330.12,83.31,7.13"  xml:id="b9">
	<analytic>
		<title level="a" type="main">Reduction of the search space in the edge-tracing algorithm for the Voronoi diagram of 3d balls</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Cho</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Lee</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Park</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D.-S</forename>
				<surname>Kim</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computational Science and Its Applications -ICCSA 2006</title>
		<meeting><address><addrLine>Berlin ; Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="111" to="120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,339.59,232.12,7.13;10,40.76,349.05,232.12,7.13;10,40.76,358.52,75.49,7.13"  xml:id="b10">
	<analytic>
		<title level="a" type="main">Finding and characterizing tunnels in macromolecules with application to ion channels and pores</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">G</forename>
				<surname>Coleman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">A</forename>
				<surname>Sharp</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biophys. J</title>
		<imprint>
			<biblScope unit="volume">96</biblScope>
			<biblScope unit="page" from="632" to="645" />
			<date type="published" when="2008-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,367.98,232.12,7.13;10,40.76,377.45,232.12,7.13;10,40.76,386.91,78.81,7.13"  xml:id="b11">
	<analytic>
		<title level="a" type="main">Encoding molecular motions in voxel maps</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Cortes</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Barbe</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Erard</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Simeon</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM Trans. Comput. Biol. Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="557" to="563" />
			<date type="published" when="2011-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,396.37,232.12,7.13;10,40.76,405.84,232.12,7.13;10,40.76,415.30,116.33,7.13"  xml:id="b12">
	<monogr>
		<title level="m" type="main">A path planning approach for computing large-amplitude motions of flexible molecules</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Cortes</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Simon</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">R</forename>
				<surname>De Angulo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Guieysse</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Remaud-Simeon</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Tran</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,424.77,232.12,7.13;10,40.76,434.23,135.48,7.13"  xml:id="b13">
	<analytic>
		<title level="a" type="main">Deformable smooth surface design</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Edelsbrunner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete &amp; Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="87" to="115" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,443.70,232.12,7.13;10,40.76,453.16,127.51,7.13"  xml:id="b14">
	<analytic>
		<title level="a" type="main">Three-dimensional alpha shapes</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Edelsbrunner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">P</forename>
				<surname>Mücke</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="43" to="72" />
			<date type="published" when="1994-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,462.63,232.12,7.13;10,40.76,472.09,232.12,7.13;10,40.76,481.55,56.01,7.13"  xml:id="b15">
	<analytic>
		<title level="a" type="main">Identification of substrate channels and protein cavities</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Exner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Keil</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Möckel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Brickmann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Modeling</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="340" to="343" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,491.02,232.12,7.13;10,40.76,500.48,232.12,7.13;10,40.76,509.95,137.25,7.13"  xml:id="b16">
	<analytic>
		<title level="a" type="main">Updating the topology of the dynamic Voronoi diagram for spheres in euclidean d-dimensional space</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">L</forename>
				<surname>Gavrilova</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Rokne</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Aided Geom. Des</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="231" to="242" />
			<date type="published" when="2003-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,519.41,232.12,7.13;10,40.76,528.88,36.97,7.13"  xml:id="b17">
	<monogr>
		<title level="m" type="main">Deferred shading. Game Developers Conference (GDC) talks</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Hargreaves</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,538.34,232.12,7.13;10,40.76,547.81,232.12,7.13;10,40.76,557.27,128.08,7.13"  xml:id="b18">
	<analytic>
		<title level="a" type="main">HOLLOW: Generating accurate representations of channel and interior surfaces in molecular structures</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">K</forename>
				<surname>Ho</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Gruswitz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC structural biology</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">49</biblScope>
			<date type="published" when="2008-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,566.74,232.12,7.13;10,40.76,576.20,232.12,7.13;10,40.76,585.66,184.72,7.13"  xml:id="b19">
	<analytic>
		<title level="a" type="main">Visualizing flow trajectories using locality-based rendering and warped curve plots</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Jones</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K.-L</forename>
				<surname>Ma</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="1587" to="1594" />
			<date type="published" when="2010-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,595.13,232.12,7.13;10,40.76,604.59,232.12,7.13;10,40.76,614.06,85.23,7.13"  xml:id="b20">
	<analytic>
		<title level="a" type="main">Euclidean Voronoi diagram of 3d balls and its computation via tracing edges</title>
		<author>
			<persName>
				<forename type="first">D.-S</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Cho</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Kim</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="1412" to="1424" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,623.52,232.12,7.13;10,40.76,632.99,232.12,7.13"  xml:id="b21">
	<analytic>
		<title level="a" type="main">Quasi-worlds and quasi-operators on quasi-triangulations</title>
		<author>
			<persName>
				<forename type="first">D.-S</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Cho</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Sugihara</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Aided Des</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="874" to="888" />
			<date type="published" when="2010-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,642.45,232.12,7.13;10,40.76,651.92,232.12,7.13;10,40.76,661.38,73.28,7.13"  xml:id="b22">
	<analytic>
		<title level="a" type="main">Quasi-triangulation and interworld data structure in three dimensions</title>
		<author>
			<persName>
				<forename type="first">D.-S</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Cho</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Sugihara</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="808" to="819" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,670.84,232.12,7.13;10,40.76,680.31,232.12,7.13;10,40.76,689.77,121.31,7.13"  xml:id="b23">
	<analytic>
		<title level="a" type="main">Detection, delineation, measurement and display of cavities in macromolecular structures</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<forename type="middle">J</forename>
				<surname>Kleywegt</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">A</forename>
				<surname>Jones</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Acta Crystallographica Section D</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="178" to="185" />
			<date type="published" when="1994-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,699.24,232.12,7.13;10,40.76,708.70,232.12,7.13;10,40.76,718.17,110.79,7.13"  xml:id="b24">
	<analytic>
		<title level="a" type="main">Interactive visualization of molecular surface dynamics</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Krone</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Bidmon</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Ertl</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1391" to="1398" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,727.63,232.12,7.13;10,40.76,737.10,232.12,7.13;10,303.38,54.06,107.97,7.13"  xml:id="b25">
	<monogr>
		<title level="m" type="main">Interactive exploration of protein cavities. To appear in Computer Graphics Forum</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Krone</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Falk</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Rehm</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Pleiss</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Ertl</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Proceedings. of EG/IEEE EuroVis 2011</note>
</biblStruct>

<biblStruct coords="10,303.38,63.52,232.12,7.13;10,303.38,72.99,232.12,7.13;10,303.38,82.45,232.12,7.13;10,303.38,91.92,232.12,7.13;10,303.38,101.38,69.29,7.13"  xml:id="b26">
	<analytic>
		<title level="a" type="main">Nanoparticles for skin penetration enhancement -A comparison of a dendritic coremultishell nanotransporter and solid lipid nanoparticles</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Küchler</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Radowski</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Blaschke</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Dathe</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Plendl</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Haag</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Schäfer-Korting</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Kramer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eur. J. Pharm. Biopharm</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="243" to="250" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,110.85,232.12,7.13;10,303.38,120.31,232.12,7.13;10,303.38,129.78,73.28,7.13"  xml:id="b27">
	<analytic>
		<title level="a" type="main">Surfnet: A program for visualizing molecular surfaces, cavities, and intermolecular interactions</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">A</forename>
				<surname>Laskowski</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="323" to="330" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,139.24,232.12,7.13;10,303.38,148.70,49.81,7.13"  xml:id="b28">
	<monogr>
		<title level="m" type="main">Rapidly-exploring random trees: A new tool for path planning</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">M</forename>
				<surname>Lavalle</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,158.17,232.12,7.13;10,303.38,167.63,232.12,7.13;10,303.38,177.10,232.12,7.13;10,303.38,186.56,91.43,7.13"  xml:id="b29">
	<monogr>
		<title level="m" type="main">Anatomy of protein pockets and cavities: measurement of binding site geometry and implications for ligand design Protein science: a publication of the</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Liang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Edelsbrunner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Woodward</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998-09" />
			<publisher>Protein Society</publisher>
			<biblScope unit="page" from="1884" to="1897" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,196.03,232.12,7.13;10,303.38,205.49,232.12,7.13;10,303.38,214.96,69.29,7.13"  xml:id="b30">
	<analytic>
		<title level="a" type="main">Accelerated visualization of dynamic molecular surfaces</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Lindow</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Baum</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Prohaska</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H.-C</forename>
				<surname>Hege</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="943" to="952" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,224.42,232.12,7.13;10,303.38,233.88,232.12,7.13;10,303.38,243.35,232.12,7.13;10,303.38,252.81,110.03,7.13"  xml:id="b31">
	<analytic>
		<title level="a" type="main">Development of new indices to evaluate protein-protein interfaces: Assembling space volume, assembling space distance, and global shape descriptor</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">H</forename>
				<surname>Maeda</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Kinoshita</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Graphics and Modelling</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="706" to="711" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,262.28,232.12,7.13;10,303.38,271.74,232.12,7.13;10,303.38,281.29,232.12,6.86;10,303.38,290.67,232.12,7.13;10,303.38,300.14,59.26,7.13"  xml:id="b32">
	<analytic>
		<title level="a" type="main">Fast discovery of Voronoi vertices in the construction of Voronoi diagram of 3d balls</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Ma˘ Nák</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Kolingerová</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 International Symposium on Voronoi Diagrams in Science and Engineering , ISVD &apos;10</title>
		<meeting>the 2010 International Symposium on Voronoi Diagrams in Science and Engineering , ISVD &apos;10<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="95" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,309.60,232.12,7.13;10,303.38,319.07,232.12,7.13;10,303.38,328.53,148.91,7.13"  xml:id="b33">
	<analytic>
		<title level="a" type="main">Computation of tunnels in protein molecules using Delaunay triangulation</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Medek</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Beneš</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Sochor</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of WSCG</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1-3</biblScope>
			<biblScope unit="page" from="107" to="114" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,337.99,232.12,7.13;10,303.38,347.46,232.12,7.13;10,303.38,356.92,149.44,7.13"  xml:id="b34">
	<analytic>
		<title level="a" type="main">An algorithm for three-dimensional Voronoi s-network</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">N</forename>
				<surname>Medvedev</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">P</forename>
				<surname>Voloshin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<forename type="middle">A</forename>
				<surname>Luchnikov</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">L</forename>
				<surname>Gavrilova</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Chemistry</title>
		<imprint>
			<biblScope unit="page" from="1676" to="1692" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,366.39,232.12,7.13;10,303.38,375.85,232.12,7.13;10,303.38,385.32,153.34,7.13"  xml:id="b35">
	<monogr>
		<title level="m" type="main">Spatial tessellations: Concepts and applications of Voronoi diagrams. Probability and Statistics</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Okabe</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Boots</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Sugihara</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<forename type="middle">N</forename>
				<surname>Chiu</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Wiley</publisher>
			<pubPlace>NYC</pubPlace>
		</imprint>
	</monogr>
	<note>2nd. edition. 671. pages</note>
</biblStruct>

<biblStruct coords="10,303.38,394.78,127.63,7.13"  xml:id="b36">
	<monogr>
		<title/>
		<author>
			<persName>
				<forename type="first">Data</forename>
				<surname>Protein</surname>
			</persName>
		</author>
		<author>
			<persName>
				<surname>Bank</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,404.25,232.12,7.13;10,303.38,413.71,232.12,7.13;10,303.38,423.17,101.76,7.13"  xml:id="b37">
	<analytic>
		<title level="a" type="main">MOLE: A Voronoi diagram-based explorer of molecular channels, pores, and tunnels</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Petrěk</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Kosinová</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Koca</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Otyepka</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Structure</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="151357" to="1363" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,432.64,232.12,7.13;10,303.38,442.10,232.12,7.13;10,303.38,451.57,169.70,7.13"  xml:id="b38">
	<analytic>
		<title level="a" type="main">CAVER: a new tool to explore routes from protein clefts, pockets and cavities</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Petrěk</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Otyepka</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Banas</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Kosinová</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Koca</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Damborsky</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">316</biblScope>
			<date type="published" when="2006-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,461.03,232.12,7.13;10,303.38,470.50,232.12,7.13;10,303.38,479.96,100.17,7.13"  xml:id="b39">
	<analytic>
		<title level="a" type="main">dxTuber: Detecting protein cavities, tunnels and clefts based on protein and solvent dynamics</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Raunest</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Kandt</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Graphics and Modelling</title>
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,489.43,232.12,7.13;10,303.38,498.89,113.24,7.13"  xml:id="b40">
	<monogr>
		<title level="m" type="main">OpenGL(R) Shading Language</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">J</forename>
				<surname>Rost</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2006-01" />
			<publisher>Addison- Wesley Professional</publisher>
		</imprint>
	</monogr>
	<note>2nd. Edition</note>
</biblStruct>

<biblStruct coords="10,303.38,508.36,232.12,7.13;10,303.38,517.82,226.25,7.13"  xml:id="b41">
	<monogr>
		<title level="m" type="main">Comprehensible rendering of 3-d shapes</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Saito</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Takahashi</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1990-09" />
			<publisher>ACM</publisher>
			<biblScope unit="page" from="197" to="206" />
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,527.28,232.12,7.13;10,303.38,536.75,232.12,7.13;10,303.38,546.21,73.75,7.13"  xml:id="b42">
	<analytic>
		<title level="a" type="main">Voronoi diagrams and Morse theory of the distance function</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Siersma</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometry in Present Day Science</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="187" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,555.68,232.12,7.13;10,303.38,565.14,232.12,7.13;10,303.38,574.61,136.27,7.13"  xml:id="b43">
	<analytic>
		<title level="a" type="main">GPU-based ray-casting of quadratic surfaces</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Sigg</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Weyrich</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Botsch</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gross</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eurographics Symposium on Point-Based Graphics</title>
		<meeting>the Eurographics Symposium on Point-Based Graphics</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="59" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,584.07,232.12,7.13;10,303.38,593.54,232.12,7.13;10,303.38,603.00,219.49,7.13"  xml:id="b44">
	<analytic>
		<title level="a" type="main">HOLE: a program for the analysis of the pore dimensions of ion channel structural models</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<forename type="middle">S</forename>
				<surname>Smart</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">G</forename>
				<surname>Neduvelil</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Wang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<forename type="middle">A</forename>
				<surname>Wallace</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">S</forename>
				<surname>Sansom</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Graphics</title>
		<imprint>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page">14</biblScope>
			<date type="published" when="1996-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,612.47,232.12,7.13;10,303.38,621.93,232.12,7.13;10,303.38,631.39,232.12,7.13;10,303.38,640.86,30.10,7.13"  xml:id="b45">
	<analytic>
		<title level="a" type="main">Ambient occlusion and edge cueing for enhancing real time molecular visualization</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Tarini</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Cignoni</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Montani</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="1237" to="1244" />
			<date type="published" when="2006-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,650.32,232.12,7.13;10,303.38,659.79,232.12,7.13;10,303.38,669.25,17.93,7.13"  xml:id="b46">
	<analytic>
		<title level="a" type="main">3V: cavity, channel and cleft volume calculator and extractor</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">R</forename>
				<surname>Voss</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gerstein</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Research</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="555" to="562" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,678.72,232.12,7.13;10,303.38,688.18,232.12,7.13;10,303.38,697.65,232.12,7.13;10,303.38,707.11,29.89,7.13"  xml:id="b47">
	<analytic>
		<title level="a" type="main">MolAxis: Efficient and accurate identification of channels in macromolecules</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Yaffe</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Fishelovitch</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<forename type="middle">J</forename>
				<surname>Wolfson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Halperin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Nussinov</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proteins: Structure, Function, and Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">73</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="72" to="86" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,716.57,232.12,7.13;10,303.38,726.04,232.12,7.13;10,303.38,735.50,110.03,7.13"  xml:id="b48">
	<analytic>
		<title level="a" type="main">Roll: a new algorithm for the detection of protein pockets and cavities with a rolling probe sphere</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Yu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Zhou</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Tanaka</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Yao</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="46" to="52" />
			<date type="published" when="2010-01" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
