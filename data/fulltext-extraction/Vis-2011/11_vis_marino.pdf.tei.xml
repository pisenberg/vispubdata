<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.1" ident="GROBID" when="2016-09-09T14:59+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Context Preserving Maps of Tubular Structures</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Joseph</forename>
								<surname>Marino</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Wei</forename>
								<surname>Zeng</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Xianfeng</forename>
								<surname>Gu</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Arie</forename>
								<surname>Kaufman</surname>
								<roleName>Fellow, Ieee</roleName>
							</persName>
						</author>
						<title level="a" type="main">Context Preserving Maps of Tubular Structures</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index Terms—Geometry-based technique</term>
					<term>volume rendering</term>
					<term>biomedical visualization</term>
					<term>medical visualization</term>
					<term>conformal mapping</term>
				</keywords>
			</textClass>
			<abstract>
				<p>(a) (b) (c) Fig. 1. Context preserving map of a colon. (a) The original colon mesh from a standard view point. (b) The projected 2D skeleton of the colon after untangling and spacing. (c) The context preserving flattened map of the colon surface based on the 2D skeleton in (b). Abstract—When visualizing tubular 3D structures, external representations are often used for guidance and display, and such views in 2D can often contain occlusions. Virtual dissection methods have been proposed where the entire 3D structure can be mapped to the 2D plane, though these will lose context by straightening curved sections. We present a new method of creating maps of 3D tubular structures that yield a succinct view while preserving the overall geometric structure. Given a dominant view plane for the structure, its curve skeleton is first projected to a 2D skeleton. This 2D skeleton is adjusted to account for distortions in length, modified to remove intersections, and optimized to preserve the shape of the original 3D skeleton. Based on this shaped 2D skeleton, a boundary for the map of the object is obtained based on a slicing path through the structure and the radius around the skeleton. The sliced structure is conformally mapped to a rectangle and then deformed via harmonic mapping to match the boundary placement. This flattened map preserves the general geometric context of a 3D object in a 2D display, and rendering of this flattened map can be accomplished using volumetric ray casting. We have evaluated our method on real datasets of human colon models.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>A common application in visualization is to navigate inside a tubular structure in order to inspect its walls, such as in virtual colonoscopy. In providing such a navigation, it is often desirable to maintain an external view of the object so that one's position within it can be easily determined. This is especially important when the structure looks similar at different regions. However, using a typical 3D model for this purpose leads to its own problem, where sections can occlude each other when they exist in the same region on the viewing plane and at different depths along the view direction (see <ref type="figure" coords="1,196.06,625.55,26.90,8.12">Figures</ref>geometric context, so that they can be used to guide navigation within the structure, but do not contain intersections which would cause oc- clusions. A flattened representation of a structure can be useful for providing an overview of the entire structure in a single 2D view. However, common methods of creating such views will straighten the object, such that it is difficult to locate where positions would correspond to by simply looking at the flattened representation. This is evident, for example, in the case of flattening a colon to a long linear strip. Though the 3D colon structure is often classified into separate sections based on the major bends it contains, this information is lost in the flattened representation. In this work, we aim to preserve such geometric context of 3D structures in their 2D flattened representations. Our method is based on first shaping the skeleton curve of the structure within a 2D plane. The 3D skeleton is orthogonally projected to an optimal viewing plane. Given this projection, the 2D skeleton is adjusted to ensure that the length along it is correct. Intersections of the skeleton are then removed and the spacing between skeleton segments is adjusted so that neighboring areas are not so close to each other. A final smoothed version is created to reduce high frequency noise along <ref type="figure" coords="2,118.09,176.51,29.43,7.64">Figure 1</ref> viewed from above. From this vantage point, it is easy to see how two long sections of the colon occlude each other when viewed from the front or back. the skeleton. This 2D skeleton will still maintain the general geometric context of the structure (see <ref type="figure" coords="2,124.20,235.40,32.76,8.12">Figure 1b</ref>). Given this 2D skeleton of the structure, it is then used as a guide in placing the location of the boundary of the object for the flattened map. The structure is sliced open, and each point along its boundary is associated with a point along the skeleton. Using the radius of the structure along the skeleton, the boundary is embedded in the plane. Once the boundary of the flattened map has been computed, the 3D surface can be mapped to the plane using harmonic mapping. Harmonic mapping is chosen so that the boundary can be predefined without being a canonical shape. The mesh, now flattened to the plane, can then be rendered with volumetric ray casting to give a view of the inner surface of the entire structure. The resulting context preserving flattened map is then readily usable for guiding navigations, as the user is able to identify geometric landmarks that would otherwise be lost in a flattening map that has been straightened. Performing such a mapping can also make more intuitive use of display real estate space. For example, a flattened colon that has been straightened would require a very long display or a very thin representation. Using a context preserving flattening, the map will require less contiguous screen space in a single direction. The paper is organized as follows. Section 2 presents related works dealing with curve skeletons and flattening. In Section 3 we discuss the method for shaping the 2D skeleton of the structure. Section 4 explains the placement of the boundary for the flattened surface in relation to the 2D skeleton. Section 5 details the mapping of the surface from 3D to 2D using harmonic mapping and its subsequent visualization. We discuss our results in Section 6 and conclude the paper in Section 7. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p> Extracting a skeleton curve of an object is a popular method of compactly representing the general geometric shape of the structure. Much work has been done over the years on methods of extracting these skeleton curves. Skeleton extraction from volumetric medical data by connecting centerlines based on a medial voxel path has been pre- sented <ref type="bibr" coords="2,49.48,576.81,13.75,8.12" target="#b21">[22]</ref>. A method has been proposed using a distance from boundary field with penalty weights to obtain general skeletons of treelike structures <ref type="bibr" coords="2,75.51,596.74,9.52,8.12" target="#b1">[2]</ref> . Obtaining a skeleton directly from a mesh by contracting the surface, without any need for a volumetric representation, has been suggested <ref type="bibr" coords="2,94.19,616.67,9.52,8.12" target="#b8">[9]</ref>. Both surface and curve skeletons from genus 0 structures have been extracted through the use of advection to move mass from the object's surface to its skeleton <ref type="bibr" coords="2,191.81,636.59,13.75,8.12" target="#b11">[12]</ref>. The use of least squares optimization has been suggested for extracting curve skeletons in an efficient manner which is insensitive to noise <ref type="bibr" coords="2,229.29,656.52,13.75,8.12" target="#b17">[18]</ref>. Curve skeletons can also be approximated for data from incomplete point clouds based on a generalized rotational symmetry axis for a set of points <ref type="bibr" coords="2,46.66,686.40,13.75,8.12" target="#b14">[15]</ref>. There are many uses for skeleton curves in the fields of computer graphics and visualization, and their 1D representation of 3D objects is useful for compact shape descriptions, navigation, animation, and analysis <ref type="bibr" coords="2,54.94,726.38,9.52,8.12" target="#b2">[3]</ref> . Skeleton curves can be used to drive shape deforma- tions <ref type="bibr" coords="2,43.44,736.34,13.75,8.12" target="#b18">[19]</ref>. They have also been used in describing shape to allow for the creation of shape-based transfer functions <ref type="bibr" coords="2,463.29,53.30,13.75,8.12" target="#b10">[11]</ref> . They are commonly used for navigation in endoscopic visualizations, such as virtual colonoscopy <ref type="bibr" coords="2,332.59,73.23,13.75,8.12" target="#b16">[17]</ref>, and accurate curves are important for such kinds of navigation <ref type="bibr" coords="2,324.99,83.19,13.75,8.12" target="#b15">[16]</ref>. The use of conformal geometry for mapping triangular meshes, where local angles are preserved, has been well established in the field of computer graphics, especially in the creation of texture maps <ref type="bibr" coords="2,518.32,113.23,13.75,8.12" target="#b13">[14]</ref>. Discrete Ricci flow is a more recent method of computing conformal maps of structures <ref type="bibr" coords="2,356.09,133.15,9.52,8.12" target="#b7">[8]</ref>. There are many applications where discrete Ricci flow is useful, such as in surface parameterization for texture mapping and construction of geometric structures <ref type="bibr" coords="2,464.93,153.08,10.46,8.12" target="#b6">[7] </ref> as well as to obtain optimal surface parameterizations using inverse curvature maps <ref type="bibr" coords="2,285.12,173.00,13.75,8.12" target="#b19">[20]</ref>. Applications of Ricci flow will typically use a target Gaussian curvature of zero everywhere, or constrain the boundary to a canonical shape, such as a disc. Flattening tubular structures is a method of displaying the entire inner surface of the objects in a succinct 2D image and has been used successfully for several medical imaging applications. For the colon, it has been proposed to virtually unfold the surface by rendering rays cylindrically around the centerline <ref type="bibr" coords="2,412.83,242.89,9.52,8.12" target="#b0">[1]</ref>. A similar technique that also preserves some z-depth information along the flattened mesh has been proposed <ref type="bibr" coords="2,320.71,262.81,13.75,8.12" target="#b9">[10]</ref>. Conformal mapping of the colon surface to the plane has also been utilized for triangular mesh models <ref type="bibr" coords="2,467.40,272.78,9.52,8.12">[4]</ref>, and conformal mapping with volume rendering for image generation has been pre- sented <ref type="bibr" coords="2,311.57,292.70,9.52,8.12" target="#b4">[5]</ref> . Likewise, similar techniques have been applied to flatten vessels in an angle preserving manner <ref type="bibr" coords="2,441.43,302.66,13.75,8.12" target="#b22">[23]</ref>. In addition to using flattening techniques simply for the purposes of visual display, these techniques have also been used for analysis of the surfaces. Computer aided detection of colonic polyps based on volume rendering on a conformally flattened colon image has been presented <ref type="bibr" coords="2,490.19,342.52,9.52,8.12" target="#b5">[6]</ref>. The use of quasi-conformal mapping for the registration of supine and prone colon surfaces has also been suggested <ref type="bibr" coords="2,426.46,362.44,13.75,8.12" target="#b20">[21]</ref>. In this work, we use the flattened representation to present to the user a visual display of the structure. Unlike previous works, where flattened views straighten the structure along a line, we generate the flattened representation such that the geometric context is preserved, allowing the user to easily identify at what location in the original 3D structure a position is. We use the skeleton curve as a basis for describing the geometric shape of the structure. We combine the use of discrete Ricci flow and harmonic mapping in this pipeline. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SKELETON LAYOUT</head><p>The creation of a context preserving map is based upon manipulating the skeleton of the structure, which can be found using any of the standard methods <ref type="bibr" coords="2,352.06,494.46,9.71,8.12" target="#b1">[2,</ref><ref type="bibr" coords="2,364.86,494.46,6.47,8.12" target="#b2"> 3]</ref>. Given the 3D skeleton, it is first projected to an optimal 2D plane. This projection is then corrected for length, untangled to remove intersections, and spaced properly to prevent selfintersections of the structure's surface. The details of each of these steps follow. All operations are performed on a discretized version of the skeleton with initial equal spacing between points. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Orthogonal Projection</head><p>The original 3D skeleton of the structure is first projected to a plane, such that all z values become 0. Since this projection is to be used as the basis for a map, perspective distortion is unnecessary and even detrimental, and thus orthogonal projection is used. The projection is performed using the standard orthogonal projection matrix: </p><formula>x y = u x u y u z v x v y v z   x y z   , (1) </formula><p>where u and v are the right and up vectors of the projection plane. The projection plane is chosen to be an optimal viewing plane for the structure. For most types of objects, especially in medical applications , a canonical view is known which provides the best view and is familiar to the user. If such a view is not known a priori, a plane which minimizes structural overlap and skeletal intersections can be used. The 2D projected skeleton of a colon is shown in <ref type="figure" coords="2,484.57,736.34,32.78,8.12" target="#fig_1">Figure 3a</ref>. (c). Note that though from a distance the skeleton in (c) still appears to have intersections, they are in actuality just locations where the skeleton sections are very close. </p><formula>(d) (a) (b) (c) (e) </formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Lengthening</head><p>When performing the orthogonal projection, the lengths of portions of the skeleton can be substantially diminished if the segment direction is aligned with the view direction of the projection plane. The closer to parallel the segment direction and view direction are, the greater the loss of length. To recover this length in the 2D skeleton, a lengthening procedure is applied that bends a straight skeleton with even spacing into the shape of the projected skeleton. For every point along the projected skeleton (except endpoints), its two neighboring skeleton points are used to create two vectors v 1 and v 2 , and the angle between them is calculated in the standard way based on the law of cosines: </p><formula>θ = cos −1 v 1 · v 2 |v 1 ||v 2 | . </formula><formula>(2) </formula><p>All of the points in the skeleton are then set in a straight line, with equal spacing between them equivalent to the original spacing of the 3D discretized skeleton. Starting at beginning, the corresponding angle θ is used to rotate all following points p = (x, y) around the current point p 0 = (x 0 , y 0 ) as follows: </p><formula>x y = cos θ − sin θ sin θ cos θ x − x 0 y − y 0 + x 0 y 0 . </formula><formula>(3) </formula><p>If the original rotation was clockwise instead of counterclockwise in relation to the normal of the projection plane, then the transpose of the matrix is used accordingly. This is performed for all points along the skeleton until the end is reached. After this process, the length of the skeleton from its original 3D shape is preserved, while the geometric structure of the projected 2D skeleton is also preserved. The lengthened 2D skeleton of a colon is shown in <ref type="figure" coords="3,199.29,676.27,32.88,8.12" target="#fig_1">Figure 3b</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Untangling</head><p>Given the lengthened 2D projected skeleton, it is then necessary to untangle it so that no intersections are present. This process, however, should maintain the general shape of the structure (compare Figures 3b-c). This is done by looking for three types of intersections: loops, crossings, and abutments. An example of each type of intersection and the corresponding result of untangling is shown in <ref type="figure" coords="3,475.45,384.06,28.92,8.12" target="#fig_3">Figure 4</ref>. The three types of intersections are as follows: </p><p>Abutment: An abutment (see <ref type="figure" coords="3,407.06,415.55,33.61,8.12" target="#fig_3">Figure 4a</ref>) occurs when a center point among three consecutive discrete skeleton points lies on the opposite side of another line segment of the skeleton than the other two points. This causes both line segments formed by the three points to intersect the skeleton at a single line segment, and thus contains two points of intersection. </p><p>Loop: A loop (see <ref type="figure" coords="3,366.62,484.88,33.97,8.12" target="#fig_3">Figure 4b</ref>) occurs when a skeleton comes around and crosses over itself without any other intersections within the formed loop. This creates one intersection point. </p><p>Crossing: A crossing (see <ref type="figure" coords="3,396.77,524.33,34.42,8.12" target="#fig_3">Figure 4c</ref>) occurs when two sections of a skeleton intersect each other without any loops or abutments between them. This contains two intersection points. </p><p>To remove these intersections, all intersections of the skeleton are first found. Each intersection is actually located twice within the list, once for each time it is encountered when tracing the path. The list of intersections is then searched to locate the three different types listed above. Given that an intersection is made of two intersecting line segments in the discrete case, each intersection is represented by four points, the first two points representing the endpoints of the first line segment and the second two points representing the endpoints of the second line segment along the skeleton. The points themselves are ordered as their order along the skeleton. Each of the three intersections can be identified as follows: </p><p> Abutment: An abutment is located by finding two consecutive intersections for the same line segment (intersecting two separate line segments). </p><p>Loop: A loop is located as two consecutive intersections where the pair of line segments for the two intersections is the same. Crossing: A crossing is located as two consecutive intersections that do not meet either of the above two conditions. After searching the list of intersections, the first intersection of the highest priority that is found is corrected. The intersections in order from high to low priority are abutment, loop, and crossing. Each type of intersection is corrected as follows: </p><p>Abutment: An abutment is removed by simply setting the offending point to the average of its two neighbor points. </p><p>Loop: A loop is removed by first creating a line segment from the loop intersection point to the median point of the loop. All points within the loop are then reflected through this line segment to untangle it. </p><p>Crossing: A crossing is removed similarly to a loop. A line segment spanning the two intersection points is found. All points within the crossing, on both segments of the skeleton, are then reflected through this line segment to untangle it. Since performing one correction can cause new intersections to arise, the skeleton is searched again after every correction procedure to find all intersections. This is repeated until no intersections are found along the skeleton. After untangling, the skeleton is iteratively smoothed to remove small sharp features (see <ref type="figure" coords="4,188.32,596.49,32.49,8.12" target="#fig_5">Figure 5a</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Spacing</head><p>After the untangling procedure, several segments can lie very close to each other due to the orientation of the projection plane. These close areas must be spaced out so that there is room for the colon surface boundary when flattened. The radius of the structure along the skeleton is recorded, and the 2D skeleton points are translated perpendicular to their direction such that the radius segment from every point does not intersect other sections of the skeleton. For each offset of the skeleton points, if an intersection is created, the offset is undone. In this way, no new intersections will occur. Neighboring skeleton points are also moved slightly to help avoid sharp bends. At the end, iterative smoothing is applied to the entire skeleton to yield a clean path. An example of the result of this process is shown in <ref type="figure" coords="4,196.96,736.33,32.88,8.12" target="#fig_5">Figure 5b</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">BOUNDARY PLACEMENT</head><p>Given the untangled skeleton path of the structure, it is necessary to place the boundary for the flattened surface in relation to it. In addition to preserving the overall shape of the structure, we also wish to represent the general size of structure along the skeleton. We accomplish this by calculating the approximate radius along the skeleton and using it to control the layout of the boundary. This has the effect of condensing the surface perpendicular to the skeleton, but the overall relation of size between regions can still be observed. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Slicing</head><p>In order to map a tubular structure to a plane, it is necessary for the structure to have a single boundary. The structure is discretely represented by a closed surface triangular mesh (i.e., without boundaries), which is initially topologically equivalent to the sphere in R 3 (it has an Euler characteristic number χ = 2). To make the surface instead topologically equivalent to a plane in R 3 , it must be sliced open from one end to the other, creating a single boundary. Although this boundary could technically be located anywhere, it should match the skeleton on the original structure. To locate the path along which the mesh is to be sliced open, Dijkstra's shortest path algorithm is used. This is advantageous for structures with features such as bumps and valleys, through which the cutting line should not pass, as Dijkstra's algorithm naturally tends to avoid these areas and instead locate a path along more uniform regions . In the case of the colon, for example, this means that the slicing path will generally not go through features such as the haustral folds. For Dijkstra's algorithm, the starting point is taken to be the vertex on the surface mesh nearest to one end of the 3D skeleton. The target point can then be taken as usual as the surface vertex with the greatest distance from the source. Alternatively, the surface vertex located nearest to the other end of the skeleton can be taken as the target. Given a path along the surface to use for slicing the surface open, two small holes are punched at each end of the path by removing one face for each. This yields a structure that is now topologically equivalent to a cylinder (χ = 0). Slicing along the cutting path is now equivalent to slicing a cylinder from one boundary to another, yielding a surface with a single boundary (χ = 1) which is topologically equivalent to the plane. For every vertex along the slicing path, a new vertex </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Skeletal Correspondence</head><p> As the boundary vertices are mapped to a surface around the 2D skeleton , it is necessary for each boundary vertex to have a correspondence to a position along the skeleton. Two corresponding boundary vertices (i.e., an original vertex from the unsliced mesh and a newly created vertex from the slicing at the same position) are both associated with the same position along the skeleton. The four end vertices on the boundary that result from punching holes at each end are treated as corner points and are not associated with the skeleton, as they do not contribute to the mapped shape. For all boundary vertices (other than corresponding pairs as mentioned), no two boundaries can be associated with the same location along the skeleton. Since the twists and turns of a structure can often lead to situations where the closest skeletal point for a boundary vertex is actually in a separate section, the location of correspondences between the skeleton and boundary is created based on finding the nearest boundary point for each skeleton point, determining boundary to skeleton correspondences from those, and then interpolating positions for boundary points which were not indicated by a skeleton point. The correspondences are determined for the set of original surface vertices on the slicing path, and then duplicated to the newly created vertices. The first and last vertices along the slicing path are mapped to the first and last position along the skeleton. The algorithm is as follows: </p><p>for all skeleton points do The correspondences (excluding the two end points) are then smoothed through several iterations by setting the current boundary's correspondence position to the average of its two neighbors. The results of this correspondence are shown in <ref type="figure" coords="5,181.43,686.14,29.02,8.12" target="#fig_9">Figure 7</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Radius Along Skeleton</head><p>The radius for each point along the skeleton is determined based on the correspondence with the boundary vertices explained above. The algorithm is as follows: The radii of the skeleton points are then iteratively smoothed (again excluding the endpoints) by averaging each skeleton point's radius and its two neighbors. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Boundary Position</head><p>The position of the boundary is determined for every boundary vertex. For every vertex on the slice path (original vertices and newly created vertices), the boundary location on the 2D map for a vertex v i is calculated based on the discrete 2D skeleton points preceding and following the vertex's location on the skeleton. The positions of these before and after points are p1 = (p1 x , p1 y ) and p2 = (p2 x , p2 y ), and the radii for of the two points are r1 and r2, respectively. The normalized distance from p1 is represented by α. The new mapped position p for each vertex on the slice path is calculated as follows: </p><formula>n = p1 − p2, d = d x d y = n y −n x , p0 = p1 * (1 − α) + p2 * α, r = r1 * (1 − α) + r2 * α, p = p0 + d * r, ∀v i ∈ M 0 p0 − d * r, ∀v i / ∈ M 0 , </formula><formula>(4) </formula><p>where M 0 is the original unsliced mesh. The boundary points not on the slice path (from when the holes were punched) are set to equal intervals between the nearest sliced vertices. A smoothing operation is applied to remove intersections that might occur, while still preserving the overall general geometric structure. An example of the boundary for the mapping is shown in <ref type="figure" coords="5,396.50,736.33,29.02,8.12" target="#fig_10">Figure 8</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">SURFACE MAPPING</head><p>Given the projected and spaced 2D skeleton of the structure and the boundary placement generated as the target domain S 2 , we map the original 3D sliced colon surface S 1 to the plane. Such mapping preserves the original projected curved information. Discrete Ricci flow is used to map the open surface S 1 to a </p><formula>gle D 1 conformally, φ 1 : S 1 → D 1 . </formula><p>Similarly, the target domain S 2 is mapped to another rectangle D 2 conformally, φ 2 : S 2 → D 2 . Using harmonic mapping, we compute the one-to-one and onto correspondence </p><formula>D 1 and D 2 , h : D 1 → D 2 . </formula><p>Finally, we lift the 2D correspondence to the 3D surfaces, f : S 1 → S 2 , and map the original 3D surface to the designed target domain. The pipeline is shown in Equation 5. The final result can then be rendered either using mesh rendering with vertex normal information stored from the original structure, or using volume rendering through the original volumetric dataset, which is the preferred method. </p><formula>S 1 f − −−−− → S 2 φ 1     φ 2 D 1 h − −−−− → D 2 (5) </formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Ricci Flow</head><p>To map the 3D surface to the 2D plane, discrete Ricci flow is used. Ricci flow is a powerful tool for geometric analysis, and it has been used to successfully prove the Poincaré conjecture. It behaves like a heat diffusion, deforming one Riemannian metric to another Riemannian metric conformally, as shown in Equation 6: </p><formula>dg dt = −Kdt (6) </formula><p>where g is the Riemannian metric and K is the target curvature. A full description of the method of discrete Ricci flow for mapping triangular meshes is outside the scope of this paper <ref type="bibr" coords="6,170.42,706.17,9.52,8.12" target="#b7">[8]</ref>. For the sliced colon surface, the boundary sides between each two corners are mapped to a straight segment, and the four corners are mapped to be the right corners of a rectangle. At the same time, the  interior surface is mapped conformally to the plane. Therefore, for discrete Ricci flow, we set the target curvature of four corners to be π 2 and the curvatures of other boundary vertices and interior vertices to be 0. The result of this is a rectangular mapping, as shown in <ref type="figure" coords="6,483.20,397.02,28.80,8.12" target="#fig_11">Figure 9</ref> . Similarly , for the generated target domain, we compute the corresponding corner vertices and boundary sides, set the same target curvature, and obtain its conformal rectangular mapping. As a mesh is needed for this, we use the 2D boundary samples as constraints and perform a constrained Delaunay triangulation <ref type="bibr" coords="6,413.57,446.83,14.94,8.12" target="#b12">[13] </ref> to generate the triangular target domain. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Deformation</head><p>Now we compute the one-to-one and onto correspondence between two rectangles by minimizing the harmonic energy. The resulting harmonic mapping obtains the smoothest deformation between two rectangles . In general, the original 3D colon surface S 1 and the 2D target domain S 2 are not conformally equivalent. As shown in <ref type="figure" coords="6,497.64,528.13,34.12,8.12" target="#fig_13">Figure 10</ref>, their conformal modules (the ratios between height and width for the conformal mappings D 1 and D 2 ) are quite different. From the computation of the target boundary placement, the correspondence of boundary vertices is known. The positions of the target boundary vertices are then used as the constrained condition in the harmonic mapping, as shown in the following equations: </p><formula>harmonic energy E = ∑ edge(i, j)∈D 2 h(v i ) − h(v j ) 2 (7) harmonic mapping h = 0, h| ∂ D 2 = φ 1 (S 1 )| ∂ D 1 (8) </formula><p>where v i is the ith vertex and (i, j) is the edge of &lt; v i , v j &gt; in the discrete triangular mesh D 2 . The detailed computation can be found elsewhere <ref type="bibr" coords="6,322.98,675.10,13.75,8.12" target="#b20">[21]</ref></p><formula>f = φ −1 2 h @BULLET φ 1 : S 1 → S 2 . </formula><p>The 3D colon surface is now mapped to the target boundary domain, as shown in <ref type="figure" coords="6,472.51,736.33,32.78,8.12">Figure 1c</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Rendering</head><p>The flattened map can then be volume rendered similarly to how other flattened surfaces have been rendered <ref type="bibr" coords="7,167.15,334.45,13.75,8.12" target="#b20">[21]</ref> . Such volume rendered images are preferred over a mesh rendering. Given the flattened (u, v) coordinates for each vertex, these can be used to place the map in the 2D plane. Each vertex's original (x, y, z) coordinates are then used to reference the original location within the volume from which the surface was extracted. For each vertex, a camera position is also needed; this position is taken to be the nearest skeleton point in relation to the flattened mesh. Since the boundary points are already associated with a skeleton point, the nearest boundary vertex is found for each inner vertex. The boundary vertex's corresponding skeleton point is then taken to be the camera position for that vertex. Using this information, volumetric ray casting is performed to generate the final images (see <ref type="figure" coords="7,224.48,454.20,32.50,8.12">Figure 1c</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DISCUSSION</head><p>The pipeline was implemented in C++ in a Windows environment. Matlab was used during the flattening for solving the linear system. The volumetric rendering was performed on the GPU using OpenGL and Cg. The entire pipeline takes approximately 2-3 minutes to run. The colon data used in this work generally come from volumes with an approximate size of 512 × 512 × 400 voxels. Preprocessing of the volumes includes electronic cleansing, segmentation, triangular mesh extraction, and skeleton extraction. The meshes obtained are often very large (typically over 1.5 million faces) and are simplified to approximately 5% of their original size. The skeleton is discretized at a spacing of 1mm for use in this work. We have successfully used this method to map colon surfaces, which are notoriously twisty, to a plane in such a way that preserves the overall context. In observing the results, the major bends of the colon are preserved , and an indication of the colon's radius along the skeleton is also present. In addition to the colon shown in <ref type="figure" coords="7,212.38,636.52,30.17,8.12">Figure 1</ref>, a second mapping example is shown in <ref type="figure" coords="7,144.32,646.48,35.39,8.12" target="#fig_15">Figure 11</ref>with the original mesh, 2D shaped skeleton, and rendered result. Since volume rendering is used to create the final image, even small polyps are easily observable. The colon shown in <ref type="figure" coords="7,89.11,676.36,34.88,8.12" target="#fig_15">Figure 11</ref>has a small 4mm polyp near the rectum. A zoomed in version of this region, closer to the viewing level one would use if scanning the surface for polyps, is shown in <ref type="figure" coords="7,212.27,696.29,37.38,8.12" target="#fig_15">Figure 11d</ref>, and the polyp can be readily observed as a small oval bump on the surface. A further close-up of the polyp on the flat colon is shown in <ref type="figure" coords="7,239.47,716.21,37.04,8.12" target="#fig_15">Figure 11e</ref>. Compared with straightened mappings, these context preserving maps allow for a greater understanding of the general geometry of the structure. The colon in <ref type="figure" coords="7,393.55,310.96,30.47,8.12">Figure 1</ref>is mapped to a straight rectangle in <ref type="figure" coords="7,303.52,320.92,30.32,8.12" target="#fig_11">Figure 9</ref> and is also mapped a straightened representation accounting for radius in <ref type="figure" coords="7,352.56,330.89,32.80,8.12" target="#fig_0">Figure 12</ref>. Compared to both, the general geometry of the colon is well preserved. Due to the several smoothing operations in creating the non-intersecting boundary, some of the radius information is lost compared to <ref type="figure" coords="7,366.89,360.78,33.76,8.12" target="#fig_0">Figure 12</ref>, but the general thickness is preserved and gives a sense of the size. In addition to better preserving the geometric structure, these maps can also make more intuitive use of a squarish region. This is readily observable when comparing the context preserving map from <ref type="figure" coords="7,521.09,401.20,23.41,8.12;7,294.12,411.16,8.46,8.12">Figure  1c</ref>to the straight maps in Figures 9 and 12. The straightened versions require much greater contiguous space along a single axis if they are to be presented without breaks, while the context preserving map makes better use of a squarish block of space. For the colon, a typical viewing plane is known, which would be parallel to and above the abdomen of a patient lying in the supine position (face up) on a table. The position and orientation information for the CT slices can be obtained directly from the DICOM header information, allowing for the view plane to be determined automatically . The selection of a good projection plane is important to the final result, and choosing views far away from the optimal view can lead to unusual results, as shown in <ref type="figure" coords="7,396.50,521.32,33.12,8.12" target="#fig_1">Figure 13</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS AND FUTURE WORK</head><p>We have presented a method for creating flattened maps of 3D tubular structures which preserve the overall geometric context of the object. Our method is based on first projecting the skeleton of the structure to the optimal 2D plane. This 2D skeleton is then untangled and shaped to approximate the geometric shape of the object. Given this, a boundary can be placed around it for the boundary of a sliced open object to be mapped to. Using this boundary, the 3D sliced surface is first mapped using discrete Ricci flow to a rectangle, and this rectangle is then deformed using harmonic mapping to match the target boundary. As opposed to other papers on flattening 3D surfaces, in this work we perform the flattening such that it creates a context preserving map of the structure. The user can then observe their progression along this map as they navigate inside the structure, without worrying about regions being occluded. We have tested our technique on datasets of the human colon, an organ which is known for being tubular and twisted. In the future, we wish to extend this work to multi-branched tubular structures, such as blood vessels or the bronchi. We will also investigate the further use of discrete Ricci flow in mapping for setting target curvatures based on the derived boundary. Specific to the colon, we <ref type="figure" coords="8,218.43,141.64,28.13,7.64">Figure 1</ref>. The top and bottom sections combine to form a single strip from left to right. </p><formula>(a) (b) (c) (d) (e) (f) </formula><p>Fig. 13. Examples of failures for bad viewpoints for the colon in <ref type="figure" coords="8,250.29,492.03,22.58,7.64;8,22.50,501.50,3.32,7.64">Figure  1</ref>, viewed from (a, c, e) the top and (b, d, f) the side. Shown are (a, b) the original mesh, (c, d), the projected skeleton, and (e, f) the final untangled and spaced skeleton. will also look at how this method can be integrated into a hybrid virtual/optical colonoscopy system, where the virtual model is registered to the patient's colon during intervention. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="2,22.50,176.51,250.38,7.64;2,22.50,185.97,250.37,7.64;2,22.50,195.43,165.72,7.64"><head>Fig. 2. </head><figDesc> Fig. 2. Colon surface from Figure 1 viewed from above. From this vantage point, it is easy to see how two long sections of the colon occlude each other when viewed from the front or back. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="3,31.50,314.38,512.99,7.64;3,31.50,323.84,513.00,7.64;3,31.50,333.30,512.99,7.64;3,31.50,342.77,271.15,7.64"><head>Fig. 3. </head><figDesc>Fig. 3. Skeleton of the human colon shown in Figure 1. When intersections along the skeleton are present, alternating regions between intersections are colored black and red. (a) Projected 2D skeleton. (b) Lengthened projected 2D skeleton. (c) Untangled skeleton. (d) Close-up of an intersection region from (b). (e) Close-up of the same region from (c). Note that though from a distance the skeleton in (c) still appears to have intersections, they are in actuality just locations where the skeleton sections are very close. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="4,22.50,324.76,201.45,7.64"><head>Fig. 4. </head><figDesc>Fig. 4. Types of intersections and their untangling results. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="4,285.12,298.81,250.37,7.64;4,285.12,308.27,250.37,7.64;4,285.12,317.73,131.20,7.64"><head>Fig. 5. </head><figDesc>Fig. 5. Refined 2D skeleton of the colon shown in Figure 1. (a) The smoothed version of the untangled 2D skeleton. (b) The spaced and smoothed version of the 2D skeleton. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7" coords="5,31.50,242.16,250.37,7.64;5,31.50,251.63,144.52,7.64"><head>Fig. 6. </head><figDesc>Fig. 6. Slicing path (shown in blue) on the 3D surface of the colon shown in Figure 1. (a) Front view. (b) Back view. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8" coords="5,50.43,559.12,104.56,8.12;5,40.46,569.06,27.42,8.04;5,40.46,579.02,119.68,8.15;5,50.43,589.01,190.65,8.12;5,50.43,598.97,180.69,8.12;5,40.46,608.91,27.42,8.04;5,40.46,618.87,207.83,8.15;5,50.43,628.86,76.44,8.12;5,40.46,638.80,27.42,8.04"><head></head><figDesc>Find nearest boundary vertex end for for all vertices on slicing path do Find all skeleton points indicated as correspondences Take center of those points as true correspondence end for for all vertices on slicing path without correspondence do Interpolate neighbors end for </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9" coords="5,294.12,204.85,250.37,7.64;5,294.12,214.32,250.37,7.64;5,294.12,223.77,238.07,7.64"><head>Fig. 7. </head><figDesc>Fig. 7. Correspondence between boundary vertex points and skeleton points. The skeleton path is shown in green, the slicing path in red, and the connections between a boundary point and the skeleton in blue. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10" coords="6,22.50,304.01,250.37,7.64;6,22.50,313.48,250.38,7.64"><head>Fig. 8. </head><figDesc>Fig. 8. Placement of the boundary in 2D for the colon in Figure 1. The narrow portion is caused by a narrowing in the original mesh (see inset). </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11" coords="6,285.12,247.88,250.37,7.64;6,285.12,257.34,250.37,7.64;6,285.12,266.81,21.26,7.64"><head>Fig. 9. </head><figDesc>Fig. 9. Colon surface mapped to a rectangle. The four sections from top to bottom combine to form a single strip from left to right of the entire colon. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13" coords="6,285.12,316.49,250.37,7.64;6,285.12,325.96,250.35,7.64;6,285.12,335.42,132.44,7.64"><head>Fig. 10. </head><figDesc>Fig. 10. Example conformal modules (the ratios between height and width for the conformal mappings) for (a) the original surface (0.045796) and (b) the target domain (0.015378). </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15" coords="7,31.50,270.11,512.99,7.64;7,31.50,279.57,307.31,7.64"><head>Fig. 11. </head><figDesc>Fig. 11. Results for a colon model. (a) The original colon surface. (b) The shaped skeleton. (c) The flattened and rendered colon map. (d) Zoomed region of the rectum with a small 4mm polyp circled in yellow. (e) Close-up of the polyp. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16" coords="8,22.50,141.64,496.99,7.64"><head>Fig. 12. </head><figDesc>Fig. 12. Straight map adjusted for radius of the colon in Figure 1. The top and bottom sections combine to form a single strip from left to right. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false" coords="1,31.50,625.55,250.38,109.13"><figDesc coords="1,225.26,625.55,56.61,8.12;1,31.50,635.52,250.38,8.12;1,31.50,645.48,250.38,8.12">1a and 2). Such problems necessitate rotation of the 3D structure. We present here a method of producing flattened maps of the surface which preserve the</figDesc><table coords="1,31.50,675.75,246.39,58.93">@BULLET The authors are with the Computer Science Department at Stony Brook 
University. E-mail: {jmarino, zengwei, gu, ari}@cs.stonybrook.edu. 

Manuscript received 31 March 2011; accepted 1 August 2011; posted online 
23 October 2011; mailed on 14 October 2011. 
For information on obtaining reprints of this article, please send 
email to: tvcg@computer.org. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false" coords="6,285.12,675.10,250.38,59.40"><figDesc coords="6,336.73,675.10,3.44,8.12;6,295.08,685.21,240.42,9.27;6,285.12,695.17,207.58,9.27;6,492.70,699.39,3.49,6.32;6,496.68,695.17,34.83,8.12;6,531.51,699.39,3.49,6.32;6,285.12,704.58,250.38,9.83;6,285.12,715.10,250.38,8.12;6,285.12,726.37,46.72,8.12">. We map the rectangle D 2 of the target curved domain S 2 to the rectangle D 1 of the 3D sliced colon surface S 1 to get D 2 . Now D 2 and D 1 are well aligned. Then, the correspondence h : D 1 → D 2 is obtained. Therefore, the correspondence between 3D surfaces can be recovered by</figDesc><table></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS </head><p> This paper has been supported by NSF grants IIS0916235, CCF- 0702699, and CNS0959979 and NIH grant R01EB7530. The colon datasets have been obtained through the NIH, courtesy of Dr. Richard Choi, Walter Reed Army Medical Center. </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct coords="8,40.76,670.77,232.12,7.22;8,40.76,680.23,217.56,7.22"  xml:id="b0">
	<analytic>
		<title level="a" type="main">Nonlinear virtual colon unfolding</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">V</forename>
				<surname>Bartrolí</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Wegenkittl</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>König</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Gröller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>. of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="411" to="420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,40.76,689.70,232.12,7.22;8,40.76,699.16,232.12,7.22;8,40.76,708.62,93.43,7.22"  xml:id="b1">
	<analytic>
		<title level="a" type="main">Penalized-distance volumetric skeleton algorithm</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Bitter</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">E</forename>
				<surname>Kaufman</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Sato</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="195" to="206" />
			<date type="published" when="2001-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,40.76,718.09,232.12,7.22;8,40.76,727.55,232.12,7.22;8,40.76,737.02,119.43,7.22"  xml:id="b2">
	<analytic>
		<title level="a" type="main">Curve-skeleton properties, applications , and algorithms</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<forename type="middle">D</forename>
				<surname>Cornea</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Sivler</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Min</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="530" to="548" />
			<date type="published" when="2007-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,289.11,168.62,246.39,7.22;8,303.38,178.08,232.12,7.22;8,303.38,187.55,175.15,7.22"  xml:id="b3">
	<analytic>
		<title level="a" type="main">Nondistoring flattening maps and the 3-D visualization of colon CT images</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Haker</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Angenent</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Tannenbaum</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Kikinis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Medical Imaging</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="665" to="670" />
			<date type="published" when="2000-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,197.02,232.12,7.22;8,303.38,206.48,232.12,7.22;8,303.38,215.94,61.99,7.22"  xml:id="b4">
	<analytic>
		<title/>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Hong</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Gu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Qiu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Jin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Kaufman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conformal virtual colon flattening. Proc. ACM Symposium on Solid and Phyiscal Modeling</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="85" to="93" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,225.40,232.12,7.22;8,303.38,234.87,232.11,7.22;8,303.38,244.34,87.46,7.22"  xml:id="b5">
	<analytic>
		<title level="a" type="main">A pipeline for computer aided polyp detection</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Hong</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Qiu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Kaufman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="861" to="868" />
			<date type="published" when="2006-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,253.80,232.12,7.22;8,303.38,263.27,232.12,7.22;8,303.38,272.73,49.82,7.22"  xml:id="b6">
	<analytic>
		<title level="a" type="main">Discrete surface Ricci flow: Theory and applications</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Jin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<forename type="middle">D</forename>
				<surname>Gu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IMA Conf. on the Mathematics of Surfaces</title>
		<meeting>. of IMA Conf. on the Mathematics of Surfaces</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="209" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,282.19,232.12,7.22;8,303.38,291.66,232.11,7.22;8,303.38,301.12,17.94,7.22"  xml:id="b7">
	<analytic>
		<title level="a" type="main">Discrete surface Ricci flow</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Jin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Luo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Gu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1030" to="1043" />
			<date type="published" when="2008-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,310.59,232.11,7.22;8,303.38,320.06,232.11,7.22;8,303.38,329.52,102.73,7.22"  xml:id="b8">
	<analytic>
		<title level="a" type="main">Skeleton extraction by mesh contraction</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Kin-Chung Au</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C.-L</forename>
				<surname>Tai</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H.-K</forename>
				<surname>Chu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Choen-Or</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T.-Y</forename>
				<surname>Lee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">2744</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="4410" />
			<date type="published" when="2008-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,338.98,232.11,7.22;8,303.38,348.44,232.12,7.22;8,303.38,357.91,49.82,7.22"  xml:id="b9">
	<analytic>
		<title level="a" type="main">Surface reconstruction for efficient colon unfolding</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Lim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H.-J</forename>
				<surname>Lee</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B.-S</forename>
				<surname>Shin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Geometric Modeling and Processing</title>
		<meeting>. of Geometric Modeling and essing</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="623" to="629" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,367.38,232.11,7.22;8,303.38,376.84,232.11,7.22;8,303.38,386.31,98.29,7.22"  xml:id="b10">
	<analytic>
		<title level="a" type="main">Shape-based transfer functions for volume visualization</title>
		<author>
			<persName>
				<forename type="first">J.-S</forename>
				<surname>Praßni</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Ropinski</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Mensmann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Hinrichs</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Pacific Visualization Symposium</title>
		<meeting>. of Pacific Visualization Symposium</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,395.76,232.12,7.22;8,303.38,405.23,232.11,7.22;8,303.38,414.70,232.14,7.22;8,303.38,424.16,40.74,7.22"  xml:id="b11">
	<analytic>
		<title level="a" type="main">Computing multiscale curve and surface skeletons of genus 0 shapes using a global importance measure</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Reniers</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">J</forename>
				<surname>Van Wijk</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Telea</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="355" to="368" />
			<date type="published" when="2008-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,433.63,232.12,7.22;8,303.38,443.10,200.81,7.22"  xml:id="b12">
	<analytic>
		<title level="a" type="main">A Delaunay refinement algorithm for quality 2-dimensional mesh generation</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Ruppert</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Algorithms</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="548" to="585" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,452.55,232.12,7.22;8,303.38,462.02,232.12,7.22;8,303.38,471.48,17.94,7.22"  xml:id="b13">
	<analytic>
		<title level="a" type="main">Conformal equivalence of triangle meshes</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Springborn</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Schröder</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">U</forename>
				<surname>Pinkall</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">2777</biblScope>
			<biblScope unit="issue">311</biblScope>
			<biblScope unit="page" from="1" to="77" />
			<date type="published" when="2008-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,480.95,232.12,7.22;8,303.38,490.42,232.13,7.22;8,303.38,499.88,42.96,7.22"  xml:id="b14">
	<analytic>
		<title level="a" type="main">Curve skeleton extraction from incomplete point cloud</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Tagliasacchi</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Cohen-Or</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="71" to="72" />
			<date type="published" when="2009-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,509.34,232.12,7.22;8,303.38,518.80,232.12,7.22;8,303.38,528.27,232.14,7.22;8,303.38,537.74,35.65,7.22"  xml:id="b15">
	<analytic>
		<title level="a" type="main">Automatic correction of level set based subvoxel precise centerlines for virtual colonoscopy using the colon outer wall</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">L</forename>
				<surname>Van Uitert</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">M</forename>
				<surname>Summers</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Medical Imaging</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1069" to="1078" />
			<date type="published" when="2007-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,547.20,232.11,7.22;8,303.38,556.67,232.12,7.22;8,303.38,566.12,128.54,7.22"  xml:id="b16">
	<analytic>
		<title level="a" type="main">Automatic centerline extraction for virtual colonoscopy</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Wan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Liang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Q</forename>
				<surname>Ke</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Hong</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Bitter</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Kaufman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Medical Imaging</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1450" to="1460" />
			<date type="published" when="2002-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,575.59,232.11,7.22;8,303.38,585.06,232.12,7.22;8,303.38,594.52,118.11,7.22"  xml:id="b17">
	<analytic>
		<title level="a" type="main">Curve-skeleton extraction using iterative least squares optimization</title>
		<author>
			<persName>
				<forename type="first">Y.-S</forename>
				<surname>Wang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T.-Y</forename>
				<surname>Lee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="926" to="936" />
			<date type="published" when="2008-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,603.99,232.12,7.22;8,303.38,613.46,232.11,7.22;8,303.38,622.92,197.15,7.22"  xml:id="b18">
	<analytic>
		<title level="a" type="main">Shape deformation using a skeleton to drive simplex transformations</title>
		<author>
			<persName>
				<forename type="first">H.-B</forename>
				<surname>Yan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S.-M</forename>
				<surname>Hu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">R</forename>
				<surname>Martin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Y.-L</forename>
				<surname>Yang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="693" to="706" />
			<date type="published" when="2008-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,632.38,232.12,7.22;8,303.38,641.84,232.11,7.22;8,303.38,651.31,176.77,7.22"  xml:id="b19">
	<analytic>
		<title level="a" type="main">Optimal surface parameterization using inverse curvature map</title>
		<author>
			<persName>
				<forename type="first">Y.-L</forename>
				<surname>Yang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Luo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S.-M</forename>
				<surname>Hu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Gu</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1054" to="1066" />
			<date type="published" when="2008-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,660.78,232.12,7.22;8,303.38,670.24,232.12,7.22;8,303.38,679.71,219.17,7.22"  xml:id="b20">
	<analytic>
		<title level="a" type="main">Supine and prone colon registration using quasi-conformal mapping</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Zeng</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Marino</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">C</forename>
				<surname>Gurijala</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Gu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Kaufman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1348" to="1357" />
			<date type="published" when="2010-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,689.16,232.13,7.22;8,303.38,698.63,232.13,7.22;8,303.38,708.10,85.90,7.22"  xml:id="b21">
	<analytic>
		<title level="a" type="main">Efficient skeletonization of volumetric objects</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Zhou</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">W</forename>
				<surname>Toga</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="196" to="209" />
			<date type="published" when="1999-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="8,303.38,717.56,232.12,7.22;8,303.38,727.03,232.12,7.22;8,303.38,736.49,84.92,7.22"  xml:id="b22">
	<analytic>
		<title level="a" type="main">Flattening maps for the visualization of multibranched vessels</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Zhu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Haker</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Tannenbaum</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Medical Imaging</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="191" to="198" />
			<date type="published" when="2005-02" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
