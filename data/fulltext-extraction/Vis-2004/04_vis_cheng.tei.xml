<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Guaranteed Quality Triangulation of Molecular Skin Surfaces</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ho-Lun</forename><surname>Cheng</surname></persName>
							<email>hcheng@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xinwei</forename><surname>Shi</surname></persName>
							<email>shixinwe@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Guaranteed Quality Triangulation of Molecular Skin Surfaces</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>J.3 [Life and Medical Sciences]: Biology and Genetics; I.3.8 [Computer Graphics]: Computational Geometry and Object Modeling-Curve</term>
					<term>Surface</term>
					<term>Solid</term>
					<term>and Object Representation Smooth surfaces</term>
					<term>meshing</term>
					<term>guaranteed quality triangulation</term>
					<term>homeomorphism</term>
					<term>Morse-Smale complex</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Molecular models of an A-DNA molecule. The leftmost shows the ball and stick model; the center left and right show the solvent accessible model and molecular skin model respectively; the rightmost shows the zoomed mesh details in the box of the center right figure.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Surface models are essential in many fields of computational science. For example, molecular surfaces are preferable in investigating the inter-molecular interactions such as the ligand docking. The reason is that the surface model can represent the geometry of the molecules better than other models such as the ball and stick model. See <ref type="figure">Figure 1</ref> as an example.</p><p>There are three existing molecular surface models <ref type="bibr" target="#b4">[5]</ref>. The van der Waals surface (or VW) model is defined as the boundary of union of the atoms by considering each atom as a ball with its van der Waals radius. The other two surface models are defined through tracing a probe sphere that rolls over the VW model. The solvent accessible (or SA) model is the surface traced by the center of the probe sphere. The molecular surface (or MS) model is the surface traced by the inward-facing surface of the probe sphere. The MS model has a major advantage over the other two for its smoothness in most cases. Because smooth surfaces can be meshed with good quality triangles, MS model may facilitate accurate numerical computations. However, sharp corners still exist since the MS model can have self-intersections. These singularities result in unfaithful representations of the molecules and unrobust visualization software implementation <ref type="bibr" target="#b4">[5]</ref>.</p><p>Edelsbrunner <ref type="bibr" target="#b8">[8]</ref> defines a paradigm of smooth surfaces for molecular modeling, namely, the skin surface. The skin model of a molecule is similar to its MS model. Moreover, it has a number of distinct properties such as smoothness, decomposability and complementarity and they are desirable in molecular modeling applications. In addition, the skin surface can deform freely with smooth transitions, which may be used for molecular dynamics simulations. Therefore, the skin surface model outruns the existing models for macromolecules such as DNAs and proteins.</p><p>However, there is still no efficient algorithm to mesh the skin surface for visualization and numerical computations. Although Cheng et al. <ref type="bibr" target="#b14">[14]</ref> presented and implemented two algorithms, namely, a static and a dynamic skin triangulation algorithms, their performance are unsatisfactory. It will take hours to generate a skin surface of a protein molecule with about 1000 atoms. This paper proposes an efficient algorithm to mesh the skin surfaces.</p><p>October 10-15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Challenges in Surface Meshing</head><p>Surface meshing has been studied widely in the computer graphics and computational geometry literature <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4]</ref>. In order to support visualization and numerical simulation of surface models, the meshing algorithms are required to generate correct surface mesh with high triangle quality efficiently. However, several challenges still reside in existing methods. First, there should be provable bounds on the triangulation quality. Second, the output triangulation should be topological equivalent to the original surface. Both issues are important for the applications such as the numerical computations with finite element method (FEM). Finally, with the guarantees of mesh quality and topological correctness, the algorithm should be efficient and guaranteed to terminate.</p><p>Nevertheless, current works can not overcome all these challenges at the same time. The well-known marching cube algorithm <ref type="bibr" target="#b13">[13]</ref> can achieve topological consistent implicit surface polygonization efficiently. However, it only ensure the triangulation is a manifold, which may not be homeomorphic to the original surface. On the other hand, Stander et al. <ref type="bibr" target="#b16">[16]</ref> study the homeomorphic implicit surface polygonization by tracking the critical points of the implicit function using Morse theory. The surface reconstruction algorithm proposed by Amenta et. al <ref type="bibr" target="#b0">[1]</ref> generate a homeomorphic mesh with sufficiently dense sample points. Nevertheless, the algorithm computes the Delaunay tetrahedrization of the sample points, which would be slow for large point set. Furthermore, the output mesh of all these works always includes bad shape triangles, that is, the triangles with extreme sharp or obtuse angles. Chew <ref type="bibr" target="#b3">[4]</ref> proposes an algorithm to achieve guaranteed quality mesh for curved surfaces without addressing the topological equivalence problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Objective</head><p>Our goal is to design a skin triangulation algorithm to satisfy the following requirements:</p><p>• High efficiency;</p><p>• Good quality mesh;</p><p>• Homeomorphic mesh;</p><p>• Correctness and termination.</p><p>First, we aim to mesh the skin model of proteins within a few minutes on PC platforms. At the same time, the algorithm will guarantee the mesh quality with a lower bound on the minimum angle in the triangulation, that is, no angles in the mesh are less than 21 • . Moreover, we can construct a homeomorphism between the triangulation and the skin surface. Finally, we require the algorithm is provable correct and terminates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Our Approach</head><p>We approximate the skin surface by constructing its restricted Delaunay triangulation incrementally using the advancing front method without computing the Delaunay tetrahedrization of sample points. In particular, we use the Morse-Smale complex to handle the front collision problem in the advancing front meshing.</p><p>The advancing front method constructs the surface mesh by iteratively attaching triangles to the front, which is the boundary of partial triangulations. However, the newly added triangles may overlap existing ones as the front advancing and we call this the front collision problem. Conventional methods to handle this problem is time consuming because the potential collisions are detected by frequently checking the distance of any two vertices on the front <ref type="bibr" target="#b11">[11]</ref>. Even though the collisions can be detected and the front stops advancing at such regions, there will be cracks in the partial triangulations when no more triangles can be added. Fixing these cracks involves heuristics, which always lead to robustness problems of algorithms. Inspired by the ideas from Morse theory, We advance the front with the priority specified by a Morse function on skin surfaces. As a result, we can predict the potential front collisions and connect different parts of the front correctly according to topological changes of the front while it is advancing.</p><p>Nevertheless, difficulty arises for the topologically complex regions, that is, the front may change its topology in a sophisticated way corresponding to the small-scale details of the surface. With the recent results on the topological simplification <ref type="bibr" target="#b7">[7]</ref>, we compute the Morse-Smale complex to simplify the topological changes of the front. Finally, we can detect the front collisions efficiently and avoid cracks fixing. Our implementation suggests that our algorithm achieves high efficiency. The computation time of a skin surface decreases from hours to a few minutes.</p><p>Moreover, we achieve homeomorphic mesh with high quality by adapting the triangle size to the surface curvature. Specifically, we control the local size of the mesh to be proportional to the radius of the maximum principle curvature of the surface. Two conditions are maintained while attaching triangles and these conditions guarantee the mesh quality and homeomorphism to the surface. The operations of maintaining the conditions are proved correct and avoid infinite loops bouncing back and forth, which implies the correctness and the termination of the algorithm.</p><p>It should be noted that our application of Morse theory on skin triangulation differs from Stander et al. <ref type="bibr" target="#b16">[16]</ref>. On one hand, we use a height function on the surface, a smooth 2-manifold, as the Morse function. Stander et al. use the function that defines the implicit surface as the Morse function, which could be considered as a height function on a 3-manifold. On the other hand, Stander et al. guarantee the homeomorphism between the mesh and the implicit surface by tracking the critical points of the implicit function. However, our homeomorphic triangulation is guaranteed by locally controlling the triangles size. Besides, a related concept to the Morse-Smale complex in our paper is the Reeb graph used in the surface reconstruction <ref type="bibr" target="#b10">[10]</ref>. The Reeb graph is a compressed representation of the components of implicit surfaces. However, the Morse-Smale complex expresses the gradient flow on surfaces. We use the Morse-Smale complex of a height function to simplify the topological changes of the front.</p><p>Outline. Section 2 introduces the skin model of molecules and some geometric conditions of the skin triangulation. In Section 3, we handle the front collision problem by predicting the topological changes of the front according to Morse theory. We describe our algorithm in Section 4. Finally, we demonstrate some triangulation results in section 5 and conclude the paper with suggestions for the future works in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head><p>In this section, we give a brief summary of the skin model of molecules. Readers who wish the details can refer to the works of Edelsbrunner <ref type="bibr" target="#b8">[8]</ref>. Then, we present the conditions for constructing the homeomorphic skin triangulation with guaranteed quality, which are cited from Cheng et al. <ref type="bibr" target="#b2">[3]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Molecular Skin</head><p>A skin surface is defined by a set of weighted points</p><formula xml:id="formula_0">B = {b i = (z i , w i ) ∈ R 3 × R | i = 1..n},</formula><p>where b i is a weighted point with z i as its position and w i as its weight. The skin surface F B defined by B is the boundary of an in-finite family of spheres derived from B by convex combination and shrinking operation. Considering the shrinking factor as <ref type="bibr" target="#b0">1</ref> 2 , the skin surface is a closed C 1 continuous surface with continuous maximum principle curvature. It can be decomposed by the mixed complex M B into a finite collection of quadratic patches, namely, sphere patches and hyperboloid patches. The mixed complex M B is a collection of polyhedra that partition the R 3 space. The portion of the skin surface in each polyhedron is a quadratic patch.</p><p>To model a molecule with the skin surface, we consider each atom as a weighted point b i ∈ B. That is, the position z i is the center of an atom, and its weight w i is √ 2 times the summation of the atom's van der Waals radius with the radius of the probe sphere, which is usually chosen as 1.4 Angstrom to represent the water as solvent. Then, the skin surface F B gives a model of the molecule. <ref type="figure">Figure 1</ref> shows the SA model and the molecular skin model of a DNA molecule. The molecular skin uses hyperboloid to blend the spheres and forms a smooth surface model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Skin triangulation</head><p>The triangulation of a skin surface is to form a simplicial complex whose underlying space is homeomorphic to the skin surface. We use the restricted Delaunay triangulation of a set of points, T ⊆ F B , to approximate the skin surface, F B .</p><p>Restricted Delaunay triangulation. Let T ⊆ F B be a finite subset of points on the skin surface. The restricted Voronoi polygon of a ∈ T is defined as ν a ′ = ν a F B , in which ν a is the Voronoi cell of a with respect to T in R 3 . The dual of the restricted Voronoi polygons is the restricted Delaunay triangulation, namely,</p><formula xml:id="formula_1">D T ′ = conv (U) U ⊆ T, F B ∩ a∈U ν a = / 0 .</formula><p>Conditions. For a restricted Delaunay triangulation D T ′ to be homeomorphic to the skin surface, F B , the point set T has to satisfy the closed ball property, which requires the restricted Voronoi polygon is a topologically closed ball of appropriate dimension. <ref type="bibr" target="#b9">[9]</ref>. Cheng et al. <ref type="bibr" target="#b2">[3]</ref> propose to generate such a point set by adapting the sizes of the edges and triangles in D T ′ to the local surface curvature. At any point x ∈ F B , let κ(x) be the maximum principle curvature at x. Call ρ(x) = 1/κ(x) the local length scale at x. Then, the D T ′ needs to satisfy two conditions,</p><p>[L] R ab &gt; C Q ρ ab , for every edge ab,</p><p>[U] R abc &lt; CQρ abc for every triangle abc.</p><p>In Condition [L], notation R ab is the size of an edge ab ∈ D T ′ which is equal to ab /2. Similarly, the size of a triangle abc ∈ D T ′ is defined as R abc that is the circumradius of the triangle abc. The local length scale of the edge ab is defined as ρ ab = max{ρ(a), ρ(b)} and that of the triangle abc is defined as ρ abc = min{ρ(a), ρ(b), ρ(c)}. C and Q are judiciously chosen positive constants. C controls how closely the mesh approximates the surface and Q controls the quality of the mesh.</p><p>Cheng et al. <ref type="bibr" target="#b2">[3]</ref> proved that the restricted Delaunay triangulation D T ′ has the closed ball property if these two Conditions are satisfied with C = 0.08 and Q = 1.65. This implies D T ′ is homeomorphic to the skin surface F B <ref type="bibr" target="#b9">[9]</ref>. At the same time, the minimum angle in D T ′ is larger than arcsin 1 Q 2 , which is around 21 • for Q = 1.65. In our algorithm, we will control the triangle sizes to maintain these two conditions while constructing the skin triangulation incrementally. As a result, we achieve homeomorphic skin triangulation with a lower bound on its minimum angle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">FRONT COLLISION HANDLING</head><p>We employ the advancing front method to construct the surface mesh. However, the front collision problem still arises. In this situation, the newly added triangles may overlap other existing triangles. We introduce Morse theory to handle this problem. Firstly, we introduce the Morse function and its relationship with the topological changes of the front. Then, we construct the Morse-Smale complex and utilize it to simplify the topological changes of the front.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Topological Changes of the Front</head><p>Morse theory on surfaces describes the topological changes of the partial surface boundary specified by a function, namely, the Morse function <ref type="bibr" target="#b15">[15]</ref>. Firstly, we introduce the Morse function and its critical points on surfaces. Then, we describe their relationships with the topological changes of the front.</p><p>Morse function. We denote M as a smooth, compact 2-manifold without boundary in R 3 and a function f : M → R. We assume a local coordinate system (x 1 , x 2 ) in a neighborhood of a point p ∈ M. The point p is a critical point of function f if all its partial derivatives vanish with respect to the local coordinate system, that is,   We illustrate the topological changes of the level curve L a at the three types of critical points of h with the example in <ref type="figure" target="#fig_2">Figure 2</ref>. Let ε be a small positive number. While we sweep a horizontal plane T a upwards from a = −∞, the partial surface, M a , is empty when a &lt; h(p). After T a passes the minimum p and when a = h(p) + ε, the level curve L a changes from L h(p)−ε = / 0 to L h(p)+ε , which is a topological circle. When the horizontal plane rises to T h(r) , the two topological circles in L h(r)−ε touch at r. At the level h(r) + ε, the curve L h(r)+ε becomes one topological circle. As the height increases to h(s), L h(s) changes to two topological circles with their contact point at s. When the horizontal plane T a arrives at the maximum u, one topological circle converges to the point u. Finally, L h(t)+ε becomes empty after the horizontal plane passes the maximum t.</p><formula xml:id="formula_2">∂ f ∂ x 1 p = ∂ f ∂ x 2 p = 0. Otherwise,</formula><p>By this observation, we are inspired to sweep the partial triangulation over the skin surface in a similar manner. The topological changes of the level curve correspond to the topological changes of the front. Therefore, the front will collide around the critical points on the skin surfaces. We set a protecting sphere with the center at each critical point to detect the potential collisions of the front. Thus, we only manage the topological changes of the front within each protecting sphere. There are three kinds of topological changes corresponding to the three types of critical points, namely, "creation" at the minima, "bridge" at the saddle points and "seal" at the maxima. For the radii of the protecting spheres, we will discuss them in Section 4.2.</p><p>However, two critical points may be close to each other and their protecting spheres have non-empty intersection. More sophisticated solutions are needed in this case. One possible solution is to decrease the size of all the triangles in the triangulation. The reason is that the radii of the protecting spheres decrease as the triangle sizes decrease. We can reduce the triangle sizes until no two protecting spheres intersect. However, it results in huge number of triangles, which would decrease the efficiency of the algorithm and increase the storage.</p><p>On the other hand, we can remove the critical points that are close to each other without influencing the construction of homeomorphic triangulation. We will use the Morse-Smale complex to remove these critical points that are close to each other in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Simplification</head><p>The critical points that are close to each other can be interpreted as the noisy critical points, which can be eliminated if they are connected by an arc in the Morse-Smale complex <ref type="bibr" target="#b7">[7]</ref>.</p><p>Firstly, we describe the structure of the Morse-Smale complex. Then, we describe how to construct the Morse-Smale complex on skin surfaces. Finally, we show how to simplify the topological changes of the front by eliminating the noisy critical points. </p><formula xml:id="formula_3">= ( ∂ f ∂ x 1 (p), ∂ f ∂ x 2 (p)) in an orthogonal local coordinate system (x 1 , x 2 )</formula><p>. The gradient vanishes at the critical points. For a regular point, the gradient is the tangent vector in the steepest ascending direction.</p><p>The Morse-Smale complex is a collection of vertices, arcs and regions. Each vertex is a critical point, and each arc is an integral line connecting a saddle point to a minimum or a maximum critical point. The arcs divide the manifold M into quadrangular regions. Each region is surrounded by two saddle points, a minimum and a maximum critical point <ref type="bibr" target="#b5">[6]</ref>. See <ref type="figure" target="#fig_13">Figure 10</ref>(a) for an example.</p><p>Construction. The first step to construct the Morse-Smale complex of h on the skin surface F B is to locate all the critical points. In the skin decomposition, the critical points can be easily computed analytically by exploring every single sphere or hyperboloid patch.</p><p>Next, we compute the arcs in the Morse-Smale complex, which are the integral lines connected to the saddle points. At each saddle point, there are two integral lines of the steepest ascent and another two of the steepest descent. First, we compute the tangent vectors of each saddle point that indicates the steepest ascending and descending directions. Because each saddle point lies on an one-sheeted hyperboloid, we can get the vectors analytically by computing the tangent vectors of a vertical cross section of the hyperboloid.</p><p>Then, we compute the gradient of the height function h at the regular points. For each regular point p ∈ F B , we denote the gradient vector of the height function h at p as g p and the unit surface normal vector of p as n p . The gradient vector is g p = V n p •V − n p , in which the unit vector V = (0, 1, 0) represents the height direction.</p><p>Finally, we approximate the integral lines with piecewise linear curves because the integral lines on the skin surface are difficult to compute analytically. At each saddle point, starting from the tangent vectors indicating the steepest directions, we trace four integral lines by iteratively stepping forward following the gradient until we meet a maximum or a minimum critical point. The accuracy of the approximation is guaranteed by choosing sufficiently small step sizes adaptive to the surface curvature. The <ref type="figure" target="#fig_13">Figure 10</ref>(a) illustrates an example of the Morse-Smale complex.</p><p>Elimination of the noisy critical points. For the critical points whose protecting spheres intersect each other, we remove them by contracting the short arcs in the Morse-Smale complex. An arc is contracted through deleting its two ending critical points and reconnecting their neighbors. We describe the contraction of an arc with the example illustrated in <ref type="figure" target="#fig_4">Figure 3</ref>. Let a be a saddle point and b be a minimum critical point. Suppose that the arc ab is a short ascending integral line from b to a. We can view the contraction of the arc ab as merging critical points a, b into another minimum critical point c that connected to a. The four integral lines connected to a are removed and all the integral lines start from b are extended to c. After the contraction of ab, each region is still a quadrangle with minimum, saddle, maximum and saddle in order. The short arcs between the saddle points and maxima can be contracted in a similar way.</p><p>Contraction of the short arcs between a saddle point and a minimum or a maximum critical point is the only operation required in eliminating the noisy critical points. With a sequence of contraction operations, it is sufficient to get a simplified Morse-Smale complex in which no two protecting spheres intersect each other <ref type="bibr" target="#b5">[6]</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ADAPTIVE SWEEPING TRIANGULATION</head><p>When the front is advancing, the new triangles are always attached to the lowest vertex on the front, which is called departure vertex. Thus, the partial triangulation sweeps from the bottom to the top of the skin surface until the whole surface is covered. In each step of <ref type="figure">Figure 4</ref>: Six snap-shots of the growing mesh from the bottom to top of the skin surface defined by 8 weighted points at the corners of a cube. The red points are the minima, the blue points are the saddle points and the green points are the maxima; The red portion of the partial mesh is the front.</p><p>adding new triangles, their sizes are adaptive to the surface curvature and the triangulation is guaranteed to be homeomorphic to the surface.</p><p>We first give a top-down description of the algorithm. Then, we discuss the curvature adaptation schema to control the sizes of triangles. Refinement operations that maintain the closed ball property are introduced at the end of the section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Algorithm</head><p>The input of the algorithm is a set of weighted points, B, and the output is a triangulation, K, which approximate the skin surface F B . The algorithm is divided into two stages, namely, initialization stage and sweeping triangulation.</p><p>Initialization. In this stage, we construct two combinatorial structures, namely, the mixed complex M B of the set of weighted point B and the Morse-Smale complex of the height function h on the skin surface F B . These two complexes guide the mesh generation in the next stage. We first compute the mixed complex, M B , of B by constructing the weighted Delaunay triangulation of B. For each polyhedron µ in M B , it is the Minkowski sum of a simplex in the weighted Delaunay triangulation of B and its dual Voronoi cell, scaled by 1/2. Then, we locate all the critical points on each quadratic patch within µ. Finally, we compute the Morse-Smale complex.</p><p>We set a protecting sphere for each the critical point according to their curvature, which will be described in Section 4.2. If two protecting spheres intersect, we eliminate the critical points by contracting the short arcs in the Morse-Smale complex.</p><p>Sweeping Triangulation. Next, we add triangles to the mesh incrementally. The partial triangulations sweep over the skin surface along the height direction. <ref type="figure">Figure 4</ref> demonstrates six snap-shots of the growing mesh of a skin surface. The sweeping triangulation stage is divided into three steps, namely, creating the initial front, creeping triangles and sealing holes, and they are implemented according to the topological changes of the front at the three types of critical points, namely, minima, saddle point and maxima respectively.</p><p>First, we create the initial front at the minima with the "creation" operations. Then we advance the front along the height direction by attaching triangles to the lowest vertex on the front iteratively. During this process, the different portions of the front connect around the saddle points within its protecting sphere, and we call this the "bridge" operation. When the front is in the protecting spheres of the maxima and no more triangles can be attached, we close the holes with the "seal" operation and the algorithm terminates.</p><p>Initial front. We first construct the initial front by applying "creation" operation at each minimum critical point. The "creation" operation creates a "bowl" of 6 neighboring triangles that share one common vertex. See <ref type="figure" target="#fig_5">Figure 5</ref>. Let p 0 be the minimum critical point. We first draw a tangent disk with p 0 as the center. Then we locate six points q i , i = 1..6 on the boundary of the tangent disk. See the dashed circle in <ref type="figure" target="#fig_5">Figure 5</ref>. These six points divide the tangent circle into six arcs uniformly, that is, ∠q i p 0 q i+1 = 60 • . We add the new vertices p i by projecting q i to the skin surface and form the six triangles. The boundary of each bowl is a cycle of 6 edges, which is a front polygon. After applying creation() operation to all minima, we get the initial front, which consists of a set of front polygons. We push all the edges in the front polygons to a priority queue, Q, which enables us to get the departure vertex with the minimum height in the next step.</p><p>Creeping triangles. In this step, we add more triangles iteratively from the initial front. There are two operations in this process: the creep() operation to attach triangles to the front from a departure vertex, and the bridge() operation to connect two portions of the front around the saddle points. The step of creeping triangles is implemented with CreepTriangles(), which is illustrated in the following pseudo code.</p><p>In each iteration, we get the departure vertex from Q to attach new triangles. A fan of triangles around the departure vertex are created by the creep() operation. See <ref type="figure" target="#fig_8">Figure 6</ref> as an example. Let p t be the departure vertex. We first draw the tangent disk with p t as the center. The dashed circle in <ref type="figure" target="#fig_8">Figure 6</ref> is the boundary of the tangent disk. Let p 0 , p n be the neighbors of p t on the front and the points q 0 , q n are the projections of p 0 , p n on the tangent plane of p t . We add new vertices p i and form new triangles p i−1 p t p i from i = 1 to i = n, in which n = ⌈ ∠q 0 p t q n 60 • ⌉. To get p i , we first locate q i that satisfies ∠q i p t q i+1 ≃ 60 • . Then, we project each q i to a point p i on the skin surface. After each creep() operation, we push the if c is ready to be bridged then Refine the newly added triangles; 15: end while new front edges to the priority queue Q. While the priority queue Q is not empty, we repeat the creep() operation to advance the front towards the untriangulated part of the surface. During the front advancing by the creep() operation, the small angle between two front edges may cause overlap between the newly added triangles and the existing triangles. See the <ref type="figure" target="#fig_10">Figure  7</ref> (a).  In <ref type="figure" target="#fig_10">Figure 7</ref>, the angle ∠g f d is a small angle and the vertex d is the departure vertex. The dashed circle is the boundary of the tangent disk in the current creep() operation. In the <ref type="figure" target="#fig_10">Figure 7 (a)</ref>, two newly added mesh vertices are p 0 and p 1 . Because ∠g f d is small, the vertex p 1 lies in the existing triangle e f g. As a result, the new triangles f p 1 d and p 1 p 0 d overlap the existing triangle e f g. We can solve this problem by fixing the angle ∠g f d before we apply creep() to vertex d. As illustrated in the <ref type="figure" target="#fig_10">Figure 7 (b)</ref>, the newly added triangles from d do not overlap the existing ones after adding a triangle gd f .</p><p>We call fixing small angles the wing() operation and apply it at the end of each creep() operation to fix all the small angles. It en-sures that there are no angles smaller than 90 • between any two adjacent front edges during front advancing.</p><p>However, the newly added triangles in the creep() operation may not maintain the closed ball property in Section 2.2. We need refinement operations to maintain the Condition [L] and Condition [U] for the closed ball property. We will introduce the refinement operations in Section 4.3.</p><p>Bridging the front. As the partial mesh grows, the fronts will get closer to each other around the saddle points or the maxima. The protecting spheres for the critical points will detect such events. Once the front falls into the protecting sphere of a saddle point, we stop the front advancing at this portion because it would lead to front collision. If the front reaches the protecting sphere of a saddle point on two different sides, we use a bridge() operation to connect the two sides of the front. <ref type="figure" target="#fig_11">Figure 8</ref> illustrates the result a bridge operation. In <ref type="figure" target="#fig_11">Figure 8</ref>, the vertex p s is a saddle point and the thin dotted line represents the protecting sphere of p s . The front edges p l p r and p u p v fall in the protecting sphere on two different sides of p s . We add new triangles to bridge the front together at the edges p l p r and p u p v . Then, we update the priority queue Q after a bridge() operation and resume the loop of creep() operation to advance the front. See the snapshots number 2, 3 and 4 in <ref type="figure">Figure 4</ref> for an example.</p><p>Sealing holes. Once the front falls into the protecting sphere of a maximum critical point, we simply stop the front advancing at that portion. When the priority queue Q is empty, the surface, F B , is covered by an almost finished partial triangulation with holes only around maxima. The boundary of each hole is a topological circle consisted of a cycle of edges in the protecting sphere of a maximum. We seal the hole by repeatedly adding triangles whose two edges are neighbors in the circle. The snapshots number 5 in <ref type="figure">Figure 4</ref> illustrates the holes around each maximum before the sealing operation.</p><p>Finally, we get the triangulation K of the skin surface F B after refining the newly added triangles in these seal() operations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Curvature Adaptation</head><p>In the creation() and creep() operations, we obtain new mesh vertices by projecting the points from a tangent circle to the surface. In order to guarantee the closed ball property, we need to adjust the radius of the tangent disk to ensure that the new triangles satisfy the two Conditions in Section 2.2. Also, we use the same radii for the protecting spheres at the critical points. The reason is that each step of the front advancing must not cross to the other side of the spheres.</p><p>Edge length constraints. Let the departure vertex be a and a new mesh vertex be b. Denote the radius of the tangent disk as r a centered at a. Our consideration is to ensure the edge length of ab is not too long nor too short for both vertices a and b according to the two Conditions in Section 2.2. We first derive the lower bound and upper bound of the size of edge ab, R ab , relative to the local length scale ρ(a).</p><p>Cheng et al. <ref type="bibr" target="#b2">[3]</ref> prove that the rate of changes of the local length scale on the skin surface satisfy the following Lipschitz condition,</p><formula xml:id="formula_4">|ρ(x) − ρ(y)| ≤ x − y ,</formula><p>in which x, y are two points on the skin surface F B . From this condition, we can determine the bound of ρ(b) in terms of ρ(a). As a result, we get the lower bound and upper bound of the size of edge ab according to the two Conditions, that is,</p><formula xml:id="formula_5">C Q − 2C ρ(a) ≤ R ab ≤ CQ 1 + 2CQ ρ(a).</formula><p>The inequality shows that we need a slightly longer edge than the edge length in Condition [L] in order to make sure the edge is long enough for both vertices a and b. With the edge length constraints, we can determine the radius of the tangent disk.</p><p>Radius of the tangent disk. To ensure the edge is not too short, we can use the bound of r a &gt; 2C Q−2C ρ(a) since R ab &gt; r a /2. For the upper bound of r a , we know that R ab increases when b gets further from the tangent disk. However, there is a sandwiching ball with radius ρ(a) for every vertex a <ref type="bibr" target="#b14">[14]</ref>. The sandwiching ball is tangent to the skin surface at the point a and the skin surface does not penetrate into this ball. <ref type="figure" target="#fig_7">Figure 9</ref> shows the cross section of the skin surface and the sandwiching ball at a. Then, the longest edge will be created if b is on the surface of the sandwiching ball of a. In <ref type="figure" target="#fig_7">Figure 9</ref>, we compute the angle θ = arcsin(R ab /ρ(a)) and thus</p><formula xml:id="formula_6">r a = 2R ab cos θ = 2R ab 1 − ( R ab ρ(a) ) 2</formula><p>Substituting the upper bound of R ab = CQρ(a)</p><p>1+2CQ into the above equation, the upper bound of the tangent disk radius is r a = CQ (1 + 2CQ) 2 (1 +CQ)(1 + 3CQ) • ρ(a).</p><p>For C = 0.08 and Q = 1.65, the numerical value of r a /ρ(a) is around 0.208, which is better than the lower bound 2C Q−2C = 0.107.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Local Refinement</head><p>The curvature dependent radius of the tangent disk r a ensures that the edge length is not too long nor too short in most cases. However, the partial triangulations may not maintain the closed ball property during sweeping. It is mainly due to three reasons. Firstly, the local region of newly added triangles in each step may not keep the restricted Delaunay property, we use edge flipping to maintain the restricted Delaunay triangulation. Secondly, the short edges added in the wing() operation may violate the Condition [L], we use the edge contraction to remove these short edges. Finally, edge contraction may lead to violation of the Condition [U]. Thus, we need the vertex insertion operation to destroy the big triangles. We refer to the implementation of the refinement operations introduced in the dynamic skin triangulation algorithm <ref type="bibr" target="#b2">[3]</ref>. After each step of adding new triangles, these refinement operations are applied. As a result, we maintain the closed ball property for the sweeping mesh. Cheng et al. proved that these refinement operations terminate, which implies the termination of our algorithm. Experiments with our implementation show that the refinement operations only influence a very small number of triangles around the new attached ones in each creep() operation. It means the refinement operations are efficient. At the same time, these refinement operations guarantee the minimal angle in the triangulation is larger than 21 • , which implies a good quality mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head><p>We demonstrate the skin meshes constructed by our algorithm in this section. <ref type="figure" target="#fig_13">Figure 10(a)</ref> shows the surface of a simple molecule named "pdb7tmn", which is a binding inhibitor of protein molecule. <ref type="figure">Figure 11(a)</ref> shows the molecular skin surface model of "Gramicidin A" molecule and <ref type="figure">Figure 11</ref> <ref type="bibr">(b)</ref> illustrates its partial mesh details included in the box of <ref type="figure">Figure 11(a)</ref>. <ref type="table" target="#tab_1">Table 1</ref> lists the statistical results of the examples shown in this paper, along with a comparison of computation time with the dynamic skin triangulation algorithm <ref type="bibr" target="#b2">[3]</ref>. A Pentium 4 processor running at 2.54GHZ is used in the test. It is easily noticed that our approach can greatly improve the efficiency. Moreover, we achieve a better bound on the minimum angle of the triangulation than the theoretical result on the bound of the minimum angle, that is, 21  The dramatic improvement of the performance over the dynamic skin triangulation depends on the efficient solution of the front collision handling and avoidance of computing 3D tetrahedrization of the sample points. Moreover, the computation time is almost linear to the number of the triangles in the triangulation since it takes constant time in each iterative step of attaching triangles. The strategy of the initial points placement and the refinement operations can explain the achievement of high triangle quality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DISCUSSION</head><p>This paper introduces a new method for visualizing the macromolecules such as proteins and DNAs. We construct high quality mesh of the molecular skin models with guarantees on the topology and a lower bound of the minimum angle. The surface triangulation can support not only the protein visualization but also numerical simulations of the protein interactions. We achieve high efficiency by employing the Morse theory to handle the front collision problem in advancing front method.</p><p>The application of skin surfaces is not limited in modeling the molecules. Theoretically, every orientable closed surface has a skin representation <ref type="bibr" target="#b8">[8]</ref>. The <ref type="figure" target="#fig_13">Figure 10</ref>(b) illustrates a human face modeled by the skin surface. Kruithof et.al <ref type="bibr" target="#b12">[12]</ref> had stepped toward using the skin surface to approximate an arbitrary polygonal surface.</p><p>The choice of the height function in our paper might be questionable as the resulting critical points and Morse-Samle complex are obviously dependent on the choice of the height direction. However, our algorithm can generate correct mesh with different directions of the height function. Another issue is the number of the critical points. Since a large number of critical points may affect the efficiency of our algorithm, we tackle this by using an efficient point location data structure, namely, the kd-tree. On the other hand, it is possible to use other Morse functions instead of the height function and we change the priority of the front advancing accordingly.</p><p>We also propose to extend our algorithm to triangulate other smooth compact 2-manifolds, for example, implicit surfaces. A main challenge for this extension lies in finding the homeomorphism conditions to determine the curvature adaption schema. We are also interested in extending our algorithm for the triangulation of parametric surfaces such as Nonuniform Rational B-Splines (NURBS). </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>it is a regular point. If p is a critical point, f (p) is the critical value of f at p. The critical point p is non-degenerate if the Hessian of f at p, H(p), which is the matrix of the second derivatives, is non-singular, namely, det H(p) = 0. The function f is called a Morse function if all its critical points are non-degenerate. For a critical point p ∈ M, we can choose an appropriate local coordinate system (x 1 , x 2 ) in the neighborhood of p such that the Morse function f is expressed in the form f(x 1 , x 2 ) = ±x 2 1 ± x 2 2 + f (p).The number of minuses is called the index of f at p. Thus, there are three types of critical points on a smooth 2-manifold in R 3 , namely, minima with index 0, saddle points with index 1 and maxima with index 2.In this paper, we employ the height function h(p) = y p on M as the Morse function if p = (x p , y p , z p ). The critical points of h are the points with horizontal tangent planes.Topological changes of the front. Let M a = {x ∈ M | h(x) ≤ a} be the partial surface for some a ∈ R. Denote L a = {x ∈ M | h(x) = a} as the level curve at a. The curve L a is the boundary of M a and it is the intersection of M and the horizontal plane T a : y = a.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Critical points and level curves of height function h on a smooth 2-manifold. The points p, q are minima, r, s are saddle points and t, u are maxima of h. Solid curves are the level curves at different height.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Morse-Smale complex. The critical points of the height function are connected in the Morse-Smale complex via the integral lines. An integral line, γ, is a curve on M. For each point p ∈ γ, its tangent vector on γ agrees with the gradient of the height function h at p. The gradient of the height function h at a point p can be defined as ∇h</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>The contraction of the ab in the Morse-Smale complex.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Create a bowl at the minimum point p 0 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>if t falls in the protecting sphere of a saddle point c then 4:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>9 :</head><label>9</label><figDesc>else if t falls in the protecting sphere of a maximum point c then</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>Creep triangles from a departure vertex p t .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 :</head><label>7</label><figDesc>Wing a small angle to avoid the overlapping triangles in creep() operation. Figure (a) and (b) illustrate the result of creep() operation before and after fixing the small angle ∠g f d.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8 :</head><label>8</label><figDesc>Bridge the front at a saddle point p s .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 9 :</head><label>9</label><figDesc>Cross section of the scenario of projecting the point from the tangent disk with radius r a .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 10 :</head><label>10</label><figDesc>Skin surface models. Figure (a) illustrates the molecular skin model of "pdb7tmn" and its Morse-Smale complex before simplification. The red and green curves are the integral lines connecting minimum-saddle pairs and maximum-saddle pairs respectively. Figure (b) shows a human face modeled by the skin surface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Performance of our meshing algorithm.</figDesc><table /><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A simple algorithm for homeomorphic surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Leekha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the sixteenth annual symposium on Computational geometry</title>
		<meeting>the sixteenth annual symposium on Computational geometry</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="213" to="222" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Introduction to Implicit Surface: Surface Tiling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jules</forename><surname>Bloomenthal</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Dynamic skin triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ho-Lun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tamal</forename><forename type="middle">K</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sullivan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the twelfth annual ACM-SIAM symposium on Discrete algorithms</title>
		<meeting>the twelfth annual ACM-SIAM symposium on Discrete algorithms</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="47" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Guaranteed-quality mesh generation for curved surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Chew</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ninth annual symposium on Computational geometry</title>
		<meeting>the ninth annual symposium on Computational geometry</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="274" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Molecular surfaces: A review</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">L</forename><surname>Connolly</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hierarchical Morse-Smale complexes for piecewise linear 2-manifolds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Harer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zomorodian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="87" to="107" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The molecular skin model of &quot;Gramicidin A&quot;. Figure (a) shows its surface model and (b) illustrates the zoomed mesh details of the portion in the box of (a)</title>
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Topological persistence and simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Letscher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zomorodian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="511" to="533" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Deformable smooth surface design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Edelsbrunner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="87" to="115" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Triangulating topological spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nimish</forename><forename type="middle">R</forename><surname>Shah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the tenth annual symposium on Computational geometry</title>
		<meeting>the tenth annual symposium on Computational geometry</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="285" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Topological Modeling for Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Anatolij</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tosiyasu</forename><forename type="middle">L</forename><surname>Fomenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kunii</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Tokyo</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A marching method for the triangulation of surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erich</forename><surname>Hartmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="95" to="108" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Approximation by skin surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nico</forename><surname>Kruithof</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gert</forename><surname>Vegter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the eighth ACM symposium on Solid modeling and applications</title>
		<meeting>the eighth ACM symposium on Solid modeling and applications</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="86" to="95" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harvey</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th annual conference on Computer graphics and interactive techniques</title>
		<meeting>the 14th annual conference on Computer graphics and interactive techniques</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Algorithm for Smooth and Deformable Surfaces in 3D</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cheng</forename><surname>Ho Lun</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<pubPlace>UIUC</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">An Introduction to Morse Theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yukio</forename><surname>Matsumoto</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>American Mathematical Society</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Guaranteeing the topology of an implicit surface polygonization for interactive modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Barton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">C</forename><surname>Stander</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th annual conference on Computer graphics and interactive techniques</title>
		<meeting>the 24th annual conference on Computer graphics and interactive techniques</meeting>
		<imprint>
			<publisher>ACM Press/Addison-Wesley Publishing Co</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
