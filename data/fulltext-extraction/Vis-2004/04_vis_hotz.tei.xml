<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Physically Based Methods for Tensor Field Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingrid</forename><surname>Hotz</surname></persName>
							<email>ihotz@ucdavis.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Louis</forename><surname>Feng</surname></persName>
							<email>zfeng@ucdavis.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><surname>Joy</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Boris</forename><surname>Jeremic</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">IDAV</orgName>
								<orgName type="institution" key="instit2">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Technical University of Kaiserslautern</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution" key="instit1">IDAV</orgName>
								<orgName type="institution" key="instit2">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">Dept. of Civil Eng</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Physically Based Methods for Tensor Field Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3. [COMPUTER GRAPHICS]: Picture/Image Generation-Line and curve generation; J.2. [Physical Science and engineering]: Engineering tensors field</term>
					<term>stress tensor</term>
					<term>strain tensor</term>
					<term>LIC</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The physical interpretation of mathematical features of tensor fields is highly application-specific. Existing visualization methods for tensor fields only cover a fraction of the broad application areas. We present a visualization method tailored specifically to the class of tensor field exhibiting properties similar to stress and strain tensors, which are commonly encountered in geomechanics. Our technique is a global method that represents the physical meaning of these tensor fields with their central features: regions of compression or expansion. The method is based on two steps: first, we define a positive definite metric, with the same topological structure as the tensor field; second, we visualize the resulting metric. The eigenvector fields are represented using a texture-based approach resembling line integral convolution (LIC) methods. The eigenvalues of the metric are encoded in free parameters of the texture definition. Our method supports an intuitive distinction between positive and negative eigenvalues. We have applied our method to synthetic and some standard data sets, and &quot;real&quot; data from Earth science and mechanical engineering application.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Tensor data play an important role in many disciplines. In geomechanics or solid state physics for example tensors are used to express the response of material to applied forces; in geometry, the curvature and metric tensors describe the fundamental properties of surfaces; the gradient tensor of a flow field provides a characterization of flow structure. A very different application area is medical imaging, where the diffusion tensor describes the directional dependence of molecule motion. These areas are only a few examples. Mathematically, a tensor is a linear function that relates different vectorial quantities. Its high dimensionality makes it very complex and difficult to understand. Thus, there is much need for tensor field visualization that enables easy and intuitive understanding. Because the physical interpretation of mathematical features is highly application-specific it is important that the visualization is closely driven by the special application.</p><p>We present a visualization method for symmetric tensor fields of second order that are similar to stress, strain and the symmetrical part of the gradient tensor. Our method provides a continuous representation of the tensor field, which is closely related to the physical meaning of the tensor field and emphasizes regions of expansion and compression. This behavior is strictly connected to the sign of the eigenvalues. A change of sign indicates regions where the material tends to crack. Therefore, we do not focus on the isotropy behavior of tensor fields but on the integration of the sign of the eigenvalues. The underlying idea of our method is to transform the tensor field into a metric, which is visualized. To represent the resulting metric we use a texture that is aligned to the eigenvector fields, similarly to LIC <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b12">13]</ref>. The metric eigenvalues are included using the free parameters of the convolution filter, like filter length, and free parameters of the input noise texture. Finally, we obtain a dense texture in regions of compression and a sparse texture in regions of expansion. By an animation of these parameters we can enhance the impression of stretching and compression. The representation expresses what is physically happening in the field.</p><p>In Section 2, we provide an overview of related work. We review the mathematical basics of tensor fields in Section 3. In Section 4, we explain our method, its motivation and realization. Section 5 discusses results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>In contrast to the visualization of scalar or vector fields, tensor field visualization is still in its infancy. Even symmetric tensors with six independent values contain so much information at each point that it is not easy to capture at once. Several good visualization techniques exist for tensor fields, but they only cover a few specific applications. Many of the existing visualization methods are extensions from vector field visualization, which focus on the technical generalization without providing an intuitive physical interpretation of the resulting images. These methods often concentrate on the representation of eigendirections and neglect the importance of the eigenvalues. Therefore, in many application areas traditional 2D plots are still used, which represent the interaction of two scalar variables.</p><p>A basic way to represent a tensor field is using icons. They illustrate the characteristics of a field at some selected points. One simple example icon that represents a symmetric tensor is the ellipsoid. The principal axes of the ellipsoid are aligned to the eigendirections and scaled according to the corresponding eigenvalues (see for example <ref type="bibr">Kriz et al. or Haber,</ref><ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b11">12]</ref>). More complex glyphs were constructed by Leeuw et al. showing additional features using flow probes <ref type="bibr" target="#b2">[3]</ref>. Even though these icons represent the tensor value at one point well they fail to give a global view of the tensor field. The problem of choosing appropriate points to examine is left to the user. Thus, these methods have limited usage in exploration of complete data sets. Furthermore, they hold the problem or cluttering.</p><p>A more advanced but still discrete approach uses hyperstreamlines. This approach is strongly related to streamline methods used for vector fields. They were introduced by Delmarcelle and Hesselink <ref type="bibr" target="#b4">[5]</ref> and have been utilized in a geomechanical context by Jeremic et al. <ref type="bibr" target="#b10">[11]</ref>. Given a point p in the field, one eigenvector field is used to generate a vector field streamline. The other two eigendirections and eigenvalues are represented by the cross section along the streamline. Even though this method extracts more information than icons, it still leaves the problem of choosing appropriate seed October 10-15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE points and is limited to low resolution due to cluttering.</p><p>To generate a more global view, a widely accepted solution for vector fields is the reduction of the field to its topological structure. These methods generate topologically similar regions that lead to a natural separation of a field. The concept of topological segmentation was also applied to two-dimensional tensor fields <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b14">14]</ref>. The topological skeleton consists of field singularities and connecting separatrices. For tensor fields the vector field singularities are replaced by degenerate points, which are points where the tensor has multiple eigenvalues. Although the tensor field can be reconstructed on the basis of topological structure, physical interpretation is difficult. One reason is the fact that high multiplicity of eigenvalues has no general physical significance. (For example, for stress fields they are points of high symmetry).</p><p>A very different approach was chosen by Pang et al. <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b16">16]</ref>. They considered the tensor field as a force field that deforms an object placed inside the field. The local deformation of these probes, such as planes and spheres, illustrate the tensor field. The deformation is computed by multiplying the local tensor with a userspecified vector in this point. These point-probe techniques can be used at interactive rates. However, the inner product reduces the tensor field to a vector field and thus only displays the tensor information corresponding to one direction. In addition, only a small number of probes can be included in one picture to avoid visual clutter. Zheng et al. extended this method <ref type="bibr" target="#b18">[18]</ref> by applying it to light rays that are bended by the local tensor value.</p><p>Zhukov and Barr <ref type="bibr" target="#b19">[19]</ref> developed a technique to visualize diffusion tensors of magnetic resonance data with the goal of tracing anatomical fibers. Their method is based on the assumption that there exists one large and two small eigenvalues inside the fibers, and fiber direction corresponds to the dominant eigenvector. This approach is an adaptation of hyperstreamlines to diffusion tenors. An approach that arose in a similar context is an adaptation of direct volume rendering to diffusion tensor fields presented by Kindlmann et al. <ref type="bibr" target="#b15">[15]</ref>. After a classification of a field with respect to anisotropy, it is divided into three categories: linear, planar and spherical. This property is then used to define barycentric coordinates of a transfer function over a triangular domain that highlights regions of different anisotropic properties. These approaches are specially designed for the visualization of diffusion tensors that only have positive eigenvalues and thus are not appropriate for stress, strain or gradient tensor fields.</p><p>An approach that does attempt to provide a continuous global view is the adaptation of LIC-similar texture approaches to tensor fields by Pang et al. <ref type="bibr" target="#b17">[17]</ref>. Here a white noise textures is blurred according to the tensor field. In contrast to LIC images, the convolution filter is a two-dimensional area determined by the local tensor field. This visualization is especially good at showing the anisotropy of a tensor field. However, one problem of this method is the need for integration of the sign of the eigenvalues. Points with eigenvalues with opposite sign are illustrated as isotropic.</p><p>A geometrical approach was followed by Hotz et al. <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref>. This approach uses a metric interpretation of a tensor field to emphasize the physical meaning of tensors behaving similarly to stress, strain or gradient tensors. An isometric embedding is used to visualize the resulting abstract metric. The problem with this approach is that, in general, no global Euclidean embedding exists for arbitrary metrics, and several "patches" must be used to cover the entire domain <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">MATHEMATICAL BASICS</head><p>A tensor is a type of geometrical entity that generalizes the concept of scalars, vectors and linear operators in a way that is independent of any chosen coordinate system. It is the mathematical idealization of a geometric or physical quantity that expresses a linearized relation between multidimensional variables. The curvature tensor used in geometry, for example, relates a direction to the change of the surface normal. The physical stress, strain or elasticity tensors express the response of material to an applied force. We now review some required basics.</p><p>Let V be a vector space of dimension n, and let V * be its dual space. In typical applications, V is the tangent space at a point of a manifold; the elements of V may represent velocities or forces. A tensor of order (q, p) is a multilinear mapping from the tensor product of p copies of V and q copies of the dual vector space V * into the space of real numbers, i.e.,</p><formula xml:id="formula_0">T : v * ⊗ . . . ⊗V * q−times ⊗V ⊗ . . . ⊗V p−times → IR.<label>(1)</label></formula><p>According to a basis of V and V * , T can be expressed by a n p+qdimensional array of real numbers. It must be emphasized that the tensor T and the representing array are not the same. Tensors of order zero (p = q = 0) are scalars, tensors of first order (q = 1, p = 0) are vectors. A tensor field over some domain D assigns to every point P ∈ D a tensor T(P).</p><p>We restrict ourselves to tensors of second order (q = 2, p = 0) defined over three-dimensional Cartesian space. Using a fixed coordinate basis, each tensor can be expressed as a 3 × 3 matrix, given by nine independent scalars:</p><formula xml:id="formula_1">T = (t i j ) =    t 11 t 12 t 13 t 21 t 22 t 23 t 31 t 32 t 33    .<label>(2)</label></formula><p>A tensor T is called symmetric if for any coordinate basis, the corresponding array of scalars is symmetric, i.e., t</p><formula xml:id="formula_2">i j = t ji for i, j = 1, .., n. It is called antisymmetric if t i j = −t ji for i, j = 1, .., n.</formula><p>Every tensor can be decomposed in a symmetric S and an antisymmetric A part:</p><formula xml:id="formula_3">T = S + A<label>(3)</label></formula><p>where</p><formula xml:id="formula_4">s i j = 1 2 (t i j + t ji ) and a i j = 1 2 (t i j − t ji ).<label>(4)</label></formula><p>The antisymmetric part is defined by three independent scalars and can be interpreted as a rotation around the three-dimensional vector a = (a 23 , −a 13 , a 12 ). The symmetric part of the tensor S, is defined by six independent scalars and is represented by a symmetric matrix:</p><formula xml:id="formula_5">S = (s i j ) =    s 11 s 12 s 13 s 12 s 22 s 23 s 13 s 23 s 33    .<label>(5)</label></formula><p>The tensor S is characterized by its eigenvalues λ 1 , λ 2 and λ 3 and corresponding eigenvectors w 1 , w 2 and w 3 , implied by the eigenvalue equation:</p><formula xml:id="formula_6">Sw i = λ i w i<label>(6)</label></formula><p>For symmetric tensors the eigenvalues are always real and the eigenvectors mutually orthogonal. The transformation of the basis to the eigenvectors basis is given by the orthogonal matrix</p><formula xml:id="formula_7">U = (w 1 , w 2 , w 3 ).<label>(7)</label></formula><p>If U T defines the transposed matrix of U, then</p><formula xml:id="formula_8">U • S •U T =    λ 1 0 0 0 λ 2 0 0 0 λ 3    = diag(λ 1 , λ 2 , λ 3 )<label>(8)</label></formula><p>4 THE METHOD</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Basic Idea</head><p>Because the physical interpretation of mathematical features of tensor fields strongly depends on the application, we want to restrict ourselves to a class of related tensor fields. These are stress and strain tensor fields and the symmetrical part of the gradient tensor field of a vector field. To motivate our approach we start with an exemplary analysis of the symmetrical part of a gradient tensor S, given by:</p><formula xml:id="formula_9">s i j = 1 2 v i, j + v j,i ,<label>(9)</label></formula><p>where</p><formula xml:id="formula_10">v = (v 1 , v 2 , v 3 )</formula><p>is the basic flow field. The variable v i, j denotes the partial derivative of the ith component of v with respect to the coordinate x j . The tensor S describes the separation of neighboring particles in the flow field. This behavior is expressed by the following equation:</p><formula xml:id="formula_11">d dt (ds 2 ) = 3 ∑ i,k=1 s ik dx i dx k = 3 ∑ j=1 λ j du 2 j .<label>(10)</label></formula><p>Here, ds = (dx 1 ,dx 2 ,dx 3 ) and ds 2 is the quadratic distance of two neighboring points. λ j , j = 1, 2, 3 are the eigenvalues of T, and du j are the components of dx corresponding to the eigenvector basis {w j , j = 1, 2, 3}. If we reduce the observation to one eigendirection w i the change of ds 2 is defined by the corresponding eigenvalue λ i . We must consider these cases:</p><formula xml:id="formula_12">λ i &gt; 0 −→ d dt ds 2 &gt; 0, λ i = 0 −→ d dt ds 2 = 0, and λ i &lt; 0 −→ d dt ds 2 &lt; 0.<label>(11)</label></formula><p>A similar behavior can be observed for the deformation of a probe in a stress field (see <ref type="figure">Fig. 1</ref>).</p><p>To summarize we observe that for a gradient field as well as for stress and strain tensors positive eigenvalues lead to a separation of particles or expansion of a probe. Eigenvalues equal to zero imply no change in distances and negative eigenvalues indicate a convergence of the particles or compression of the probe.</p><p>Considering a time-independent vector field, the integration of the separation Equation (10) results in the following expression for ds <ref type="bibr" target="#b1">2</ref> :</p><formula xml:id="formula_13">ds 2 (t) = ds 2 (0) + ∑ ik (s ik • t) dx i dx k .<label>(12)</label></formula><p>Using</p><formula xml:id="formula_14">ds 2 (0) = a • ∑ i dx i dx i<label>(13)</label></formula><p>we obtain:</p><formula xml:id="formula_15">ds 2 (t) = ∑ ik (aδ ik + s ik • t =: g ik ) dx i dx k<label>(14)</label></formula><p>Where δ ik is the Kronecker-delta. The tensor g with components g ik = aδ ik + s ik • t can be interpreted as metric of the underlying parameter space D. The constant a plays the role of a unit length, and t is a time variable that can be used as a scaling factor. This metric definition is the basis of our tensor field visualization method. The transformation of the tensor field into a metric is described in the next section and the visualization of the resulting metric is discussed in Section 4.3.</p><formula xml:id="formula_16">λ &lt; 0 i w i i λ &gt; 0 i λ = 0</formula><p>Figure 1: Deformation of a unit probe under influence of a stress tensor in direction of eigenvector w i . Eigenvalues larger than zero correspond to a tensile, and eigenvalues smaller than zero to a compressive force in the direction of the eigenvector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The Transformation</head><p>Based on the observations made in Section (4.1), we define a transformation of the tensor field into a metric. We do not exactly follow the motivating Equation <ref type="formula" target="#formula_15">14</ref>but use a more flexible approach.</p><p>Let T be a tensor field defined on a domain D. The tensor in a point P ∈ D is given by T(P). For each point P the tensor T(P) is mapped to a metric tensor g(P) describing the metric in P. In the most general form, the assignment is achieved by the following three steps:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Diagonalization of the tensor field:</head><p>Switching from the original coordinate basis to the eigenvector basis {w 1 , w 2 , w 3 }, we obtain a diagonal tensor T with the eigenvalues of T on its diagonal:</p><formula xml:id="formula_17">T → T = U • T •U T = diag (λ 1 , λ 2 , λ 3 ) .<label>(15)</label></formula><p>U is the diagonalization matrix defined in Equation <ref type="formula" target="#formula_7">7</ref>.</p><p>2. Transformation and scaling of the eigenvalue, to define the metric g according to the eigenvector basis:</p><formula xml:id="formula_18">T → g = diag (F(λ 1 ), F(λ 2 ), F(λ 3 )) ,<label>(16)</label></formula><p>where F : [−λ max , λ max ] → IR + is a positive monotone function, where λ max = max{|λ i (P)|; P ∈ D, i = 1, 2, 3}</p><p>is the largest eigenvalue according to absolute value.</p><p>3. We obtain the metric g in the original coordinate system by inverting the diagonalization defined in Equation <ref type="formula" target="#formula_17">15</ref>:</p><formula xml:id="formula_20">g = U T • g •U.<label>(18)</label></formula><p>If the mapping F is linear, the three steps can be combined into one step and F can be applied to the tensor components, independently of the chosen basis.</p><p>We now consider the function F, which defines the metric. To underline the motivation defined by <ref type="bibr" target="#b14">(14)</ref>, we can rewrite Equation <ref type="bibr" target="#b16">(16)</ref> in the following way:</p><formula xml:id="formula_21">g = a • I + σ • diag ( f (λ 1 ), f (λ 2 ), f (λ 3 )) .<label>(19)</label></formula><p>Here I is the unit matrix, a = F(0) defines the unit length, and σ = 0 is an appropriate scaling factor, that guarantees that the resulting metric is positive definite. The function f : IR → IR is a monotone function with f (0) = 0. The resulting metric g has the following properties: • It is positive definite and symmetric.</p><p>• Its eigenvector field is the same as the eigenvector field of the original tensor field T, which means the tensor field topology in the sense of Delmarcelle et al. <ref type="bibr" target="#b3">[4]</ref> is preserved.  • The zero tensor is mapped to a multiple of the unit matrix a • I.</p><p>Its eigenvalues γ j are given by F(λ j ). Positive eigenvalues are mapped to eigenvalues greater than a, negative eigenvalues are mapped to eigenvalues smaller than a but larger then zero. • Since the transformation is invertible, a one-to-one correspondence of the metric and the tensor field is given.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Examples for the transformation function F:</head><p>We can define the function F by using the scalars a, σ , and the function f as given in Equation <ref type="bibr" target="#b19">(19)</ref>: F(λ ) = a + σ f (λ ).</p><p>• Identity: f = id , f (λ ) = λ</p><p>Since f is linear, the metric g is defined as:</p><formula xml:id="formula_22">g i j = F(t i j ) = a + σ • t i j .<label>(20)</label></formula><p>This equation corresponds exactly to our motivating Equation <ref type="bibr" target="#b14">(14)</ref>, where σ plays the role of the time variable t. With σ &lt; a/λ max we can guarantee that the metric is positive definite. The value λ max is defined by <ref type="bibr" target="#b17">(17)</ref>.</p><p>• Anti-symmetric functions f : f (−λ ) = − f (λ ):</p><p>To empathize regions where the eigenvalues change sign it makes sense to choose a function f with a larger slope in the neighborhood of zero. From the large class of functions satisfying this condition we have considered two examples: The first example is an anti-symmetric logarithmic function,</p><formula xml:id="formula_23">f (λ ; c) = log(c • λ + 1) for λ ≥ 0 − log(1 − c • λ ) for λ &lt; 0 .<label>(21)</label></formula><p>If we require σ &lt; a/ log(c • λ max + 1) the resulting metric is positive definite. The second example is an asymptotic function f :</p><formula xml:id="formula_24">f (λ ; c) = arctan(c • λ ).<label>(22)</label></formula><p>Here, the limitation of σ &lt; 2a/π is independent of λ max . For both functions, the constant c controls the "sharpness" at the zero crossing. For hight values of c the function becomes steeper, see <ref type="figure">Figure 2</ref>.</p><p>As the visual perception of texture attributes is nonlinear, this anti-symmetric approach is not always a good choice. An alternative that takes care of this aspect is defined by the class of functions</p><formula xml:id="formula_25">F[−λ max , λ max ] → [ a M , a • M], with F(−λ ) = a 2 F(λ ) .<label>(23)</label></formula><p>The constant a defines again the unit, aṀ the maximum, and a M the minimum value for F satisfying M &gt; 1. Functions with this property can be obtained using anti-symmetric functions f as exponent:</p><formula xml:id="formula_26">F(λ ) = a • exp(σ • f (λ )) where f (−λ ) = − f (λ ).<label>(24)</label></formula><p>An example for such a function with a = 1 is F(λ ; c, σ ) = exp(σ arctan(c • λ )). c determines the slope of the function in the origin, see <ref type="figure">Figure 3</ref>. The resulting metric is always positive definite. Therefore, the scaling factor σ is not limited.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Visualization</head><p>The problem of visualizing a tensor field has become a problem of visualizing an abstract metric. One way to solve this problem is an isometric embedding of the metric <ref type="bibr" target="#b8">[9]</ref>. The disadvantage of this approach is that it is restricted to two dimensions, and its existence is only guaranteed locally. In general, several patches are needed to cover the entire domain. Because we want to provide a global representation of a field we decided to follow a different approach: Our basic idea is to use a texture that resembles a piece of fabric to express the characteristic properties of the metric. The texture is stretched or compressed and bended according to the metric. Large values of the metric, which indicate large distances, are illustrated by a texture with low density or a stretched piece of fabric. We use a dense texture for small values of the metric. One can also think of a texture as probe inserted into the tensor field. We generate the texture using LIC, a very popular method for vector field visualization. LIC blurs a noise image along the vector field or integral curves. Blurring results in a high correlation of the pixel along field lines, whereas perpendicular to them almost no correlation appears. The resulting image leads to a very effective depiction or flow direction everywhere, even in a dense vector field. LIC was introduced in 1993 by Cabral and Leedom <ref type="bibr" target="#b1">[2]</ref>. Since the method was introduced there have been many publications proposing extensions and improvements to make it faster <ref type="bibr" target="#b12">[13]</ref> and more flexible.</p><p>We compute a LIC-image for every eigenvector field to illustrate the eigendirections of the tensor field. For the integration of the integral curves we use Runge-Kutta of 4th order, the LIC image is computed using Fast-LIC as proposed in <ref type="bibr" target="#b12">[13]</ref>. In each LIC image the eigenvalues of every eigenvector field are integrated using the free parameters of the underlaying noise image and the convolution. At the end we overlay all resulting LIC images to get the fabric-like texture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Input Noise Image</head><p>For each LIC image we need besides the direction field a specific noise image input. We use the free parameters of this input image to encode properties of the metric. Three basic parameters are changed according to the eigenvalues. They are: density, spot size, and color intensity of the spots. Considering these parameters, the standard white noise image is the noise image with maximum density, minimal spot size and constant color intensity. It allows one to obtain a very good overall impression of the field; its resolution is only limited by the pixel size. But it is not flexible enough to integrate the eigenvalues which represent fundamental field properties besides the directions. For this reason we use sparse input images, (a) (b) <ref type="figure">Figure 4</ref>: Overlay of two LIC images to illustrate to direction fields, without integrating the eigenvalues, constant input image and constant convolution length (a) white noise image (b) sparse noise image with lower density and larger spot size even if we obtain a lower resolution. Some examples for different input images with changing density and spot size are provided in <ref type="figure">Figure 5</ref>. The connection of these parameters to the eigenvalues are explained in more detail in the next sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Density</head><p>To define the density depending on the eigenvalues we consider the change of the density of a fiber texture under the influence of a stress tensor field. Only the change of density orthogonal to the fiber structure is directly visible. A compression orthogonal to the fibers leads to an increasing density, an expansion to a decreasing density. For each direction field w i we define a specific density d i depending on the orthogonal eigenvalues. For two dimensional textures this leads to the following definition of a one-dimensional density d i [spots/cm]:</p><formula xml:id="formula_27">d i (λ ) = d 0 • 1 F(λ j ) , with j = 2 if i = 1 1 if i = 2 .<label>(25)</label></formula><p>F is defined by <ref type="bibr" target="#b16">(16)</ref>. d 0 defines the "unit-density", d(0) = d 0 /F(0). If we use F defined in Equation (23) we obtain as minimum density value d 0 aM and as maximum value d 0 M a . An example for a density function is shown in <ref type="figure">Figure 6</ref>.</p><p>When we switch to three dimensions we have two orthogonal eigenvalues and thus a direction-dependent density:</p><formula xml:id="formula_28">d i, j (λ ) = d 0 • 1 F(λ j ) , in direction of w j , d i,k (λ ) = d 0 • 1 F(λ k ) , in direction of w k ,<label>(26)</label></formula><p>where j = 2, k = 3 if i = 1; j = 3, k = 1 if i = 2: and j = 1, k = 2 if i = 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Spot Size</head><p>The spot size of the noise image affects the width of the fiber. Increasing the radius of the underlying noise image leads to thicker, decreasing the radius leads to thinner fibers. Similar to the definition of the density this value is controlled by the orthogonal eigenvalues. The radius of the spots changes proportionally to the eigenvalues. Because a change of the spot size in direction of the integral lines does not affect the resulting image much, we define for twodimensional textures circular spots specified by a radius r i . For three dimensions, we define ellipsoids with three different diameters according to the three eigenvalues:</p><formula xml:id="formula_29">r i, j = r 0 d i, j .<label>(27)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Convolution Length</head><p>The defined noise image only uses the eigenvalues orthogonal to the actual eigendirection field. A stretching or compressing in the direction of the integral lines changes the length of the fibers. Fiber length is correlated directly with the length of the convolution filter l i . This insight leads to the following definition of a filter length proportional to the eigenvalues of the metric:</p><formula xml:id="formula_30">l i = l 0 • F(λ i ).<label>(28)</label></formula><p>Color and Color Intensity</p><p>Since the influence of the density and the spot radius on the total brightness is the same (quadratic for two and cubic for three dimensions), the total brightness of the fibers is constant for this spot size and density definition. If we want to enforce the impression of stretching and compressing along the fibers, we can in addition change their color intensity I i :</p><formula xml:id="formula_31">I i = I 0 • 1 λ i<label>(29)</label></formula><p>Another way to identify the regions of compression and expansion is to use a color code. Engineers are used to red for compression and green for tension. Therefore we use this color definition. We apply a continuous color mapping from red for the smallest negative eigenvalues, white for zero eigenvalues and green for positive eigenvalues. The definition of the different parameters for two dimensional field are summarized in <ref type="table" target="#tab_0">Table 1</ref>, for three dimensions in 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Animation</head><p>According to Equation 14 we use the time variable t or the scaling factor σ defined by Equation 19 or 24 to generate an animation   of the compression or expansion process. We start with an image where only the eigendirections and no eigenvalues are illustrated (pure LIC image with constant density, spot size, color intensity and convolution length). We can then scale the factor σ slowly to intensify the impression of expansion or compression, which are the most important features to capture the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head><p>We have evaluated our method using synthetic and real data sets. We started with a simple tensor field where the eigenvector fields are aligned to the coordinate axes. These examples allow us to validate the effect of the change of the texture parameters depending on the eigenvalues. In a second step, we used a datasets where we changed the eigenvector fields by rotating them by 90 degrees. <ref type="figure" target="#fig_3">Figure 7</ref> shows some results for one eigenvector field for these datasets using different texture parameters. In the first three images (a) -(c) only the input texture is changed. In images (d) and (e) only the convolution length is changed. The last image (f) shows a result of changing all three texture parameters. Images for the same datasets showing both eigendirections are shown in <ref type="figure" target="#fig_4">Figure 8</ref>. Again, different input textures and parameter mappings were applied. The next examples are results from numerical finite element simulations of the stress field applying different load combinations on a solid block. These datasets are well-studied and therefore appropriate to evaluate our method. For the simulation, a 10x10x10 gird, each cell consisting of 3 3 = 27 Gauss-points had been used. The tensor field resulting from the simulation is continuous inside each cell, but not on cell boundaries. This fact can also be observed in our images. <ref type="figure" target="#fig_5">Figure 9</ref> and <ref type="figure">Figure 10</ref> show different slices of the three-dimensional dataset from a single point load. <ref type="figure">Figure 11</ref>, 12 and 13 represent a block with a couple of forces with opposite sign applied to the block. These images make possible a good visual segmentation of regions of compression and expansion. Red indicates compression, white reflects for no change, and green means expansion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS AND FUTURE WORK</head><p>We have discussed an intuitive method to visualize symmetric second order tensor fields with similar behavior as stress and strain fields. The interpretation of a tensor field as distortion of a flat metric results in a visualization based on the real physical effect of the tensor field. The distortion of the texture according to the metric supports a flexible representation of the tensor field, which is easy to understand. We evaluated our method for two-dimensional data sets and two-dimensional slices of three-dimensional tensor fields. The foundation for an extension to three dimensions now exists.   eigenvector field free parameters The transformation to a metric and the definition of the texture parameters has already been discussed in this paper. For visualization purpose we plan to use volume rendering methods, where we have opacity as an additional parameter. It will be used to enhance regions of interest like for example, regions of compression.</p><formula xml:id="formula_32">i = 1 i = 2 density value d i 1 λ 2 1 λ 1 color intensity I i 1 λ 1 1 λ 2 convolution length l i λ 1 λ 2 spot size r i λ 2 λ 1</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">ACKNOWLEDGMENTS</head><p>This work was supported by the National Science Foundation under contracts ACI 9624034 (CAREER Award) and ACI 0222909, through the Large Scientific and Software Data Set Visualization (LSSDSV) program under contract ACI 9982251, through the National Partnership for Advanced Computational Infrastructure (NPACI), and a large Information Technology Research (ITR) eigenvector field free parameters i = 1 i = 2 i = 3 density value </p><formula xml:id="formula_33">d i, j 1 λ 2 1 λ 1 1 λ 1 d i,k 1 λ 2 1 λ 1 1 λ 1 color intensity I i 1 λ 1 1 λ 2 1 λ 3 convolution length l i λ 1 λ 2 λ 3 spot diameter r i, j λ 2 λ 3 λ 1 r i,k λ 3 λ 1 λ 2</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>Two examples for a anti-symmetric transformation function f . Left: Logarithmic function; right: arc-tangent for two different slopes for λ = 0. Example for a non-symmetric transformation function F for two different slopes in the origin.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :Figure 6 :</head><label>56</label><figDesc>Example for different input images. (a) white noise image with maximum resolution, (b) spot noise image with changing density, (c) spot noise image with changing spot size Example of a density function used to encode a metric</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 7 :</head><label>7</label><figDesc>These images illustrate the effect of the change of different combinations of the image parameters on the LIC image of one eigenvector field for a simple synthetic tensor field. In (a)-(c) only the input image is changed corresponding to the eigenvalues of the orthogonal eigenvector field; (a) change of density; (b) change of spot size; (c) change of density and spot size. In images (d)-(f) we illustrate the effect of changing the convolution length. In images (d) and (e) the parameters of the input noise image are constant; (d) uses a white noise; (e) shows a sparse noise image. Image (f) shows a combination of the three parameters density, spot size, and convolution length.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 :</head><label>8</label><figDesc>The images show the combination of two eigenvector field, each representing both eigenvalues; (a) is based on a white noise input image varying the convolution length. The other three images use sparse noise. In (b) and (c) density and spot size are changed. (d) shows a combination of the three parameters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>These images are the result of a single top-load data set, where the force is applied in z-direction. A yz-plane slice is shown; (a) and (b) illustrate the two eigenvector fields separately, in (c) they are overlaid. In all images, spot size and density are changed according to eigenvalues.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 10 :Figure 11 :</head><label>1011</label><figDesc>This figure again shows a single-top-load. Spot size and density of the input images are adapted to the corresponding eigenvectors. Red shows regions of compression, green expansion according the respective eigenvector field: (a) shows a yz-plane slice parallel to the applied force; (b) shows a xy-plane slice orthogonal to the force. This image shows a yz-plane slice of a two-force data set: (a) shows the minor eigenvector field; (b) both eigenvector fields.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 12 :</head><label>12</label><figDesc>The image represents a yz-plane slice of a two-force dataset. In the lower-left corner we see a region of compression, a result mainly of the left pushing force; in the upper-right corner expansion dominates as a result of the right pulling force.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 13 :</head><label>13</label><figDesc>The image represents a xz-plane slice of a two-force dataset. The left circle corresponds to the pushing and the right to the pulling force. The fluctuation of the color is a result of the low resolution of the simulation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Assignment of eigenvalues to free parameters for a twodimensional texture.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Assignment of eigenvalues to free parameters for three dimensions.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>grant. We thank the members of the Visualization and Graphics Research Group at the Center for Image Processing and Integrated Computing (CIPIC) at the University of California, Davis. Further we thank the members of the Department of Civil and Environmental Engineering, University of California, Davis who provided us with the data sets.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Interactive deformations from tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><surname>Boring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;98</title>
		<editor>David Ebert, Hans Hagen, and Holly Rushmeier</editor>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="297" to="304" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Imaging vector fields using line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leith (casey)</forename><surname>Leedom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;93 Proceedings)</title>
		<editor>James T. Kajiya</editor>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="263" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A probe for local flow field visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>De Leeuw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Visualization &apos;93 Conference</title>
		<editor>Gregory M. Nielson and Dan Bergeron</editor>
		<meeting>the Visualization &apos;93 Conference<address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993-10" />
			<biblScope unit="page" from="39" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The topology of second-order tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Visualization</title>
		<editor>R. Daniel Bergeron and Arie E. Kaufman</editor>
		<meeting>the Conference on Visualization<address><addrLine>CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="140" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Visualizing secondorder tensor fields with hyperstream lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thierry</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lambertus</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="25" to="33" />
			<date type="published" when="1993-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualization techiques for engineering mechanics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Systems in Engineering</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="37" to="50" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Topology of second-order tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lambertus</forename><surname>Hesselink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thierry</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><forename type="middle">L</forename><surname>Helman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers in Physics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="304" to="311" />
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The topology of symmetric, second-order 3D tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lambertus</forename><surname>Hesselink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuval</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yingmei</forename><surname>Lavin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="1997-03" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Isometric embedding by surface reconstruction from distances</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingrid</forename><surname>Hotz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th IEEE Visualization 2002 Conference (VIS-02)</title>
		<editor>Robert Moorhead, Markus Gross, and Kenneth I. Joy</editor>
		<meeting>the 13th IEEE Visualization 2002 Conference (VIS-02)<address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002-11-01" />
			<biblScope unit="page" from="251" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Geometrische Algorithmen zur Visualisierung diskreter und kontinuierlicher Tensorfelder</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingrid</forename><surname>Hotz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003-01" />
			<pubPlace>Germany</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Kaiserslautern</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Tensor visualization in computational geomechanics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jeremic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhaohui</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal for Numerical and Analytical Methods in Geomechanics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="925" to="944" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visualization blackboard: Visualizing gradients in composite design and fabrication</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ron</forename><forename type="middle">D</forename><surname>Kriz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><forename type="middle">H</forename><surname>Glaessgen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Macrae</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="10" to="13" />
			<date type="published" when="1995-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Fast and resolution independent line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Detlev</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Christian</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 95 Conference Proceedings, Annual Conference Series</title>
		<editor>Robert Cook</editor>
		<imprint>
			<biblScope unit="page" from="249" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Acm</forename><surname>Siggraph</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Addison</forename><surname>Wesley</surname></persName>
		</author>
		<title level="m">Los Angeles</title>
		<meeting><address><addrLine>California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="6" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Tensor topology tracking: A visualization method for time-dependent 2D symmetric tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EG 2001 Proceedings</title>
		<editor>A. Chalmers and T.-M. Rhyne</editor>
		<imprint>
			<publisher>Blackwell Publishing</publisher>
			<date type="published" when="2001" />
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="461" to="470" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Tensorlines: Advection-diffusion based propagation through diffusion tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">M</forename><surname>Weinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gordon</forename><forename type="middle">L</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><forename type="middle">C</forename><surname>Lundberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;99</title>
		<editor>David Ebert, Markus Gross, and Bernd Hamann</editor>
		<meeting><address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="249" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Volume deformation for tensor visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th IEEE Visualization 2002 Conference (VIS-02)</title>
		<editor>Robert Moorhead, Markus Gross, and Kenneth I. Joy</editor>
		<meeting>the 13th IEEE Visualization 2002 Conference (VIS-02)<address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002-11-01" />
			<biblScope unit="page" from="379" to="386" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hyperlic</surname></persName>
		</author>
		<title level="m">IEEE Visualization &apos;03 (Vis &apos;03)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Interaction of light and tensor field</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VISSYM &apos;03</title>
		<meeting>VISSYM &apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="157" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Oriented tensor reconstruction: Tracing neural pathways from diffusion tensor MRI</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leonid</forename><surname>Zhukov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th IEEE Visualization 2002 Conference (VIS-02)</title>
		<editor>Robert Moorhead, Markus Gross, and Kenneth I. Joy</editor>
		<meeting>the 13th IEEE Visualization 2002 Conference (VIS-02)<address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-11-01" />
			<biblScope unit="page" from="387" to="394" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
