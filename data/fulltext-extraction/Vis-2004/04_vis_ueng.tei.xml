<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">LoD Volume Rendering of FEA Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shyh-Kuang</forename><surname>Ueng</surname></persName>
							<email>skueng@mail.ntou.edu.tw</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Taiwan Ocean University No</orgName>
								<address>
									<addrLine>2, Pei-Ning Road</addrLine>
									<postCode>202</postCode>
									<settlement>Keelung</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan-Jen</forename><surname>Su</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Taiwan Ocean University No</orgName>
								<address>
									<addrLine>2, Pei-Ning Road</addrLine>
									<postCode>202</postCode>
									<settlement>Keelung</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chi-Tang</forename><surname>Chang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">National Taiwan Ocean University No</orgName>
								<address>
									<addrLine>2, Pei-Ning Road</addrLine>
									<postCode>202</postCode>
									<settlement>Keelung</settlement>
									<country key="TW">Taiwan</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">LoD Volume Rendering of FEA Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:34+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation-Display Algorithms; Volume rendering</term>
					<term>splatting method</term>
					<term>level-of-detail</term>
					<term>unstructured data</term>
					<term>scientific visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this article, a new multiple resolution volume rendering method for Finite Element Analysis (FEA) data is presented. Our method is composed of three stages: At the first stage, the Gauss points of the FEA cells are calculated. The function values, gradients, diffusions, and influence scopes of the Gauss points are computed. By representing the Gauss points as graph vertices and connecting adjacent Gauss points with edges, an adjacency graph is created. The adjacency graph is used to represent the FEA data in the subsequent computation. At the second stage, a hierarchical structure is established upon the adjacency graph. Any two neighboring vertices with similar function values are merged into a new vertex. The similarity is measured by using a user-defined threshold. Consequently a new adjacency graph is constructed. Then the threshold is increased, and the graph reduction is triggered again to generate another adjacency graph. By repeating the processing, multiple adjacency graphs are computed, and a Level of Detail(LoD) representation of the FEA data is established. At the third stage, the LoD structure is rendered by using a splatting method. At first, a level of adjacency graph is selected by users. The graph vertices are sorted based on their visibility orders and projected onto the image plane in back-to-front order. Billboards are used to render the vertices in the projection. The function values, gradients, and influence scopes of the vertices are utilized to decide the colors, opacities, orientations, and shapes of the billboards. The billboards are then modulated with texture maps to generate the footprints of the vertices. Finally, these footprints are composited to produce the volume rendering image.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Finite Element Analysis(FEA) is a powerful technique used in scientific computing <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b31">32]</ref>. Volume rendering is a popular method for visualizing FEA data. By generating semi-transparent cloud images, volume rendering can reveal the blending and distribution of a function inside a 3D domain. Therefore the global behavior of the function is depicted. This functionality is difficult to obtain by using other skills, like cross-section and iso-surface visualization. Volume rendering methods can be categorized into two types, the ray-casting methods and the projection methods. In a ray-casting method, rays are casted from the eye position through the pixels on the image plane toward the FEA data. For each ray casted, function values are sampled along the ray and converted into colors and opacities. The colors are composited to produce the value of the pixel penetrated by the ray <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b9">10]</ref>. In the projection methods, the cells, the vertices, or other selected points of the FEA data are projected onto the image plane in front-to-back or back-to-front order. The effects of the projections are accumulated to form the final image <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b28">29]</ref>. Some hybrid methods have also been developed to reduce computing costs and to increase image quality <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b30">31</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Related Work</head><p>Nonetheless, volume rendering is still a slow process, especially when the data size is large. Many techniques have been developed to speed up the computation. In <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b12">13]</ref>, parallel volume rendering algorithms are proposed to speed up the processing. In <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b18">19]</ref>, the projections of FEA cells are approximated by using polygons. Scanline algorithms for polygon filling are employed to compute the values of the pixels covered by the projections. Other researchers design advanced splatting methods by using texture maps and graphics hardware to reduce computing time. These algorithms are presented in <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b32">33]</ref>. Ueng et al. developed an out-of-core algorithm for visualizing large vector field data <ref type="bibr" target="#b25">[26]</ref>. The FEA data is divided into sub-regions based on an octree structure. Only the sub-regions required in the computing are brought into the main memory. Therefore the required memory capacity is reduced, and large data sets can be interactively processed in a desktop machine. Another out-of-core method is proposed in <ref type="bibr" target="#b30">[31]</ref>. The data are compressed in a preprocessing stage. During the rendering process, the data are uncompressed and rendered on the fly by using hybrid volume rendering skills.</p><p>Recently many multiresolution visualization techniques are proposed for rendering volume data. In these methods, the data are pre-processed to form level-of-detail(LoD) representations. In the visualization processing, data from one or several adjacent levels of the LoD structures are rendered to produce the final image. Therefore, the size of data involved in the processing is reduced, and the rendering speed is increased. In <ref type="bibr" target="#b11">[12]</ref>, Laur and Hanrahan resample volume data based on an octree structure, and hence the data are stored in hierarchical data structures. Lower resolution data are rendered for quick visualization while higher resolution data are rendered for exploring the details. A similar approach is adopted in <ref type="bibr" target="#b15">[16]</ref> for visualizing large irregular data. In <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b19">20]</ref>, new algorithms are presented to create LoD representations for tetrahedral meshes. In these methods, the LoD structures are built up by gradually simplifying and approximating the original meshes to support multiple resolution visualization. Another method is designed by LaMar et al. in <ref type="bibr" target="#b10">[11]</ref>. The FEA data is encoded based on an octree structure. Unlike other methods, the viewing direction and distance of the eye position are taken into consideration in the rendering processing. The regions closer to the viewer are rendered with higher accuracy while other regions are visualized in lower resolution.</p><p>October 10-15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Summary</head><p>A new LoD visualization method for FEA data is presented in this paper. At first, the FEA mesh is converted into an adjacency graph by generating and connecting the Gauss points of the FEA data. Then the adjacency graph vertices are merged to generate multiple adjacency graphs based on user-defined criteria. These adjacency graphs serve as the LoD representation of the FEA data. In order to achieve better rendering quality, each adjacency graph vertex is associated with several attributes. The basic attributes consist of the function value and coordinates of the vertex. Other significant attributes include: the influence scope which is a sphere representing the influence extents of the vertex, the gradient which shows the direction in which the function value varies most, and the diffusion which estimates the degree of the variation of the function value. In the rendering processing, a level of adjacency graph is selected by users. Then the vertices of the graph are projected onto the image plane in back-to-front order to produce the image. To speed up the computation, the vertices are rendered by using billboards. The colors, opacities, shapes, and orientation of the billboards are computed, based on the attributes of the vertices. The billboards are then modulated with texture maps and composited to generate the image. Compared with other methods, our method possesses the following advantages: First, our approach is meshless. No mesh generation, region-refinement, or cell coalescing is required for constructing the LoD structure. Therefore our approach is easier to implement. Furthermore our method can also be extended to cope with scattered data. Second, during the rendering computation, the targets to be rendered are the adjacency graph vertices. The geometrical objects passed into the graphics pipeline are a set of points. Therefore the costs of culling, clipping, and rendering are reduced. Third, once the LoD structure is created, the FEA mesh is no longer needed. Only the adjacency graph vertices are stored. Therefore less memory space is needed for keeping the hierarchical structure.</p><p>This paper is organized as follows: In Section 2, the methodology of creating the LoD representation is presented. Then in Section 3, our splatting rendering method is described. The usage of the vertex attributes are explained there. Test results and analysis are shown in Section 4. Conclusion and future work are provided in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">CONSTRUCTION OF THE LOD REPRESENTATION</head><p>The LoD representation of the FEA data consists of multiple layers of adjacency graphs. The bottom layer graph is comprised with the Gauss points of the FEA cells. This graph is gradually reduced to create other layers of adjacency graphs to form the multiple resolution representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Gauss Points and Function Reconstruction</head><p>In splatting rendering, projecting an FEA cell can be regarded as carrying out integration inside the cell along the projection direction. Gauss quadrature method is a popular technique for calculating integration in FEA computing <ref type="bibr" target="#b31">[32]</ref>. To evaluate the integration of a function in an element, the element is transformed into a template cell, the canonical cell. Then function values are sampled at n specially selected points, the Gauss points. Each Gauss point is associated with a weight. The summation of the products of the function values and the weights are calculated. Finally, the summation is multiplied with the volume of the element to compute the integration:  Gauss points  where f (x) is the function to be integrated, V is the volume of the element, and x i and w i are the coordinates and weights of the Gauss points. The precision of this method depends on the number of the Gauss points used in the integration. A quadratic order accuracy is achieved, if 4 Gauss points are employed. Detail description of Gauss quadrature method can be found in <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b31">32]</ref>. In <ref type="figure" target="#fig_1">Figure 1</ref>, a tetrahedral cell and the canonical cell are shown. The locations and weights of the 4 Gauss points of the canonical cell are described in <ref type="figure" target="#fig_2">Figure 2</ref>.</p><formula xml:id="formula_0">e f (x) dx ≈ V n ∑ i=1 w i f (x i ),</formula><formula xml:id="formula_1">a b c d α, β, β β, α, β β, β, α β, β, β</formula><p>In our splatting method, the Gauss points of an FEA cell are used as the sampling points in the function reconstruction. The original function, in the cell, is reconstructed by using the following equation:</p><formula xml:id="formula_2">f (x) ≈ n ∑ i=1 w i f (x i )φ i (x),</formula><p>where x i and w i are the positions and weights of the Gauss points, and φ i (x) are the reconstruction kernels. Since the projection of a 3D Gauss function is a 2D Gauss function, for convenience, 3D Gauss functions are served as the kernels in the function reconstruction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Adjacency Graph of Gauss Points</head><p>Adjacency graphs are utilized to represent the connectivities of FEA cells <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b29">30]</ref>. The adjacency graph of an FEA data set is defined by representing each cell by using a graph vertex. If two cells are neighbors, the corresponding graph vertices are connected by an edge. An example of FEA data adjacency graph is depicted in <ref type="figure" target="#fig_4">Figure 3</ref>. Adjacency graphs can be computed in linear time complexity by using the methods proposed in <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b23">24]</ref>.</p><p>Since the adjacency graph is the dual graph of the FEA mesh, it is a good approximation of the mesh topologically. The adjacency graph is modified in this work to obtain better accuracy. Instead of using one vertex, four Gauss points are used to represent a tetrahedral cell. The 4 Gauss points of the cell are connected to form a subgraph with 4 vertices and 6 edges. Then each Gauss point of this subgraph is connected to the nearest Gauss points of the neighboring cells, and the Gauss point adjacency graph is created. A 2D example of Gauss point adjacency graph is displayed in <ref type="figure" target="#fig_5">Figure 4</ref>. The mesh is comprised with 4 triangle cells, and three Gauss points   are calculated in each cell. The FEA mesh is depicted with dash lines while the adjacency graph is drawn by using solid lines.</p><p>During the creation of the adjacency graph, the attributes of the Gauss points are computed and stored along with the graph. The function value and coordinates of the Gauss points are calculated by interpolating the function values and coordinates of the cell nodes. The gradient is obtained by evaluating the partial derivatives of the interpolation function of of the function value. The influence scope is a sphere centered at the Gauss point. Its radius is equal to 4 times of the distance between the Gauss point and the nearest cell node. This method of computing the influence scope radius is based on our experiments. By using larger influence scopes, the final image would be too opaque and too fuzzy to display the details, while using smaller influence scopes may produce holes in the image. A 2D example of influence scope is illustrated in <ref type="figure" target="#fig_6">Figure 5</ref>. The Gauss point is displayed by using a rectangle while the cell nodes are represented by using circles.</p><p>To compute the diffusion, the difference between the function value of the point and the average function value of the neighboring points is calculated first. Then the difference is divided by the influence scope volume of the point to obtain the diffusion:</p><formula xml:id="formula_3">f avg = ∑ k 1 f j V j ∑ k 1 V j , D f (x i ) = f i − f avg V i ,</formula><p>where f avg is the average function value of the neighboring points, f j and V j are the function values and influence scope volumes of the neighboring points, f i , V i , and x i denote the function value, influence scope volume, and coordinates of this Gauss point, and D f represents the diffusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">LoD Representation of FEA Data</head><p>Once the adjacency graph is completed, a breadth-first-search is triggered to merge the graph vertices. If the function value difference between a vertex and one of its neighboring vertices is within a predefined threshold, the two vertices are merged to generate these attributes of the two vertices. The influence scope volumes of the two vertices serve as the weights in the computation:</p><formula xml:id="formula_4">g new = g 1 V 1 + g 2 V 2 V 1 +V 2 ,</formula><p>where g 1 and g 2 represent the attributes of the two vertices, g new denotes the attributes of the new vertex, and V 1 and V 2 represent the influence scope volumes of the two vertices. The influence scope volume of the new vertex is calculated by:</p><formula xml:id="formula_5">V new = V 1 +V 2 −V 1∩2 ,</formula><p>where V new is the influence scope volume of the new vertex, and V 1∩2 is the volume of the intersection of the influence scopes of the two vertices. Since the new influence scope is a sphere, its radius can be determined once its volume is known.</p><p>Based on our experiments, the image quality may be too fuzzy if vertices with large influence scopes are created. To avoid this problem, if the the influence scope diameter of the new vertex exceeds a predefined limited, the two vertices will not be merged. The limit of influence scope diameter is defined by:</p><formula xml:id="formula_6">k * L d 3 √ N ,</formula><p>where k is a constant decided by users, L d is the length of the diagonal of the bounding box of the data set, and N is the number of cells. The other skill to improve image quality is to merge vertices whose influence scopes overlapping most. If more than one neighboring vertices satisfying the criteria, the neighboring vertex whose influence scope overlapping with that of the current vertex most is selected in the vertex merging. This skill helps us to avoid losing contrast in the final image.</p><p>The breadth-first-search stops when the function value difference between any two neighboring vertices exceeds the threshold. The remaining vertices and the newly created vertices form a new adjacency graph. This new graph is comprised with less vertices and serves as a coarser approximation of the FEA data. Then the threshold is increased, and this new adjacency graph is reduced to construct another adjacency graph. As this graph reduction repeats, multiple adjacency graphs are constructed. The LoD representation is generated. An example of LoD adjacency graph is depicted in <ref type="figure">Figure 6</ref>. The original adjacency graph with 160 vertices is shown in the left part of the figure while the next level of adjacency graph containing 66 vertices is illustrated in the right part.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">LOD ADJACENCY GRAPH RENDERING</head><p>To visualize the FEA data, users are asked to select a level of adjacency graph. The selected adjacency graph is rendered by using a splatting method. At first, all graph vertices are sorted according to their visibility orders. Then they are projected onto the image plane </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Footprint Function and Texture Maps</head><p>The splatting methods proposed in <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b32">33]</ref> are used in our work. Since 3D Gauss functions are served as the reconstruction kernels and the parallel projection of a 3D Gauss function is a 2D Gauss function, 2D Gauss functions are used as the footprint functions in blending the effects of the vertices. A 2D Gaussian function is defined by:</p><formula xml:id="formula_7">G(x, y) = S f * e −(x 2 +y 2 ) 2σ 2 ,<label>(1)</label></formula><p>where S f is the scaling factor, and σ is the variance. Evaluating the footprint function on the grid points of a 2D rectangular table and regarding the footprint function values as opacities, a texture map is constructed. The texture map is used to modulate billboards to produce the footprints of vertices. By using different variances and scaling factors, different texture maps are produced. A small variance results in a texture map with greater variation of opacity. This phenomena is illustrated in <ref type="figure">Figure 7</ref>. The variance of the footprint function in the left image is twice larger than that of the footprint function in the right image. Therefore, the variation of opacity in the right image is more significant. The scaling factor is another factor which influences the texture map. If the scaling factor is increased, the footprint function values are enlarged and the texture map is more saturated. In this work, the initial value of the scaling factor is equal to the weight of the Gauss point. However, its value will be modified according to the size of the influence scope. The method of modifying the scaling factor is presented in the following subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Diffusion and Influence Scopes</head><p>The diffusion of a vertex is an estimate of the variation of the function value. If the diffusion is large, the function value varies significantly near the vertex. To reflect the quick change of function value, the billboard of the vertex is modulated with a texture map of greater variation. On the other hand, if the diffusion is low, the function value varies smoothly. The billboard should be modulated with a texture map of low contrast. A heuristic method is adopted for calculating the variance of the footprint function. At first, a standard variance, σ avg , is selected as the basis. Given a diffusion value, D f , the variance, σ , is computed by:</p><formula xml:id="formula_8">σ 2 = min( ln D avg ln D f , c)σ 2 avg ,</formula><p>where D avg is the average value of the diffusions of all vertices, and c is a constant defined by users to avoid producing infinite variance when D f is small. Beside the diffusion, the volume of influence scope also affects the variance and the scaling factor. The projection of a large influence scope is wider and more opaque. The intensity in the projection also varies more quickly. Therefore the billboard should be modulated with a texture map with more saturated opacity and greater variation. The methods proposed in <ref type="bibr" target="#b11">[12]</ref> are modified to adjust the footprint function to generate the desired texture map. First the average diameter of influence scope is calculated and treated as the standard diameter. If the diameter of a influence scope is m times larger than the standard diameter, then the scaling factor and the variance are modified by:</p><formula xml:id="formula_9">S new = 1 − (1 − S old ) m , σ 2 new = σ 2 old m ,</formula><p>where S new and σ new are the new scaling factor and variance, and S old and σ old are the original scaling factor and variance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Billboard Orientation and Shapes</head><p>In the splatting method, the projection of a vertex is rendered by using a semi-transparent billboard. Theoretically, the billboard is a patch in the iso-surface passing through the vertex, and the gradient is the normal vector of the patch. When the gradient is nearly orthogonal to the view direction, the patch should appear narrow to the viewer. Therefore, the billboard has to be rotated and reshaped. At first, the gradient is projected onto the image plane to generate a 2D vector. Then the billboard is rotated until one of its axes, the y-axis, coincides with the 2D vector. Then the billboard is scaled down in its y-axis. The scaling coefficient,C f , is computed by:</p><formula xml:id="formula_10">C f = max( g g • v v , 0.2),</formula><p>where g is the gradient, and v is the view direction. The scalar value, 0.2, is treated as a threshold to avoid creating a slim billboard. An example of rotating and reshaping the billboard by using the gradient is demonstrated in <ref type="figure" target="#fig_9">Figure 8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">IMPLEMENTATION AND TEST RESULTS</head><p>The whole system is implemented on a desk-top machine equipped with a 2.0 GHz cpu and 768M bytes main memory. The operating system is RedHat Linux 7.0. The splatting rendering procedure is implemented by using OpenGL under the Linux system. The image resolution is 700x700.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Implementation Issues</head><p>In the construction of the LoD structure, the threshold is linearly increased between every two iterations of the graph reduction. Therefore, in the i-th iteration of graph reduction, the criterion of merging  </p><formula xml:id="formula_11">f 1 − f 2 f max − f min ≤ i * ε,<label>(2)</label></formula><p>where f 1 and f 2 are the function values of the vertices, f max and f min are the maximum and the minimum function values of the data set, and ε is a constant. The value, i * ε, is called the reduction error, and ε is the incremental value of the reduction error. The reduction error represents the relative error introduced in the graph reduction. Given a fixed reduction error, there are two ways of creating an adjacency graph. The first one is to create the adjacency graph by starting with a small reduction error. Then the reduction error is gradually increased and the reduction process is repeated until the reduction error equal to the limit. The second way is to construct the adjacency graph by using the given reduction error directly and performing the graph reduction just once. The reduction errors of the two adjacency graphs are the same. However, based on our experiments, the adjacency graph generated by using the first method results in better image quality than that produced by using the second method.</p><p>To speed up the splatting, some approximating techniques are adopted in the implementation. Sixteen texture maps are generated by using different variances at a preprocessing stage. When splatting a vertex, the diffusion and the influence scope diameter are used to compute the variance of the footprint function. The texture map with the nearest variance is selected for the splatting. The influence scope diameter is also used in computing the scaling factor of the footprint function. However, the scaling factor is not directly used to modify the texture map. Instead it is utilized to increase or decrease the opacity of the billboard. Based on the function value of the vertex, the color and opacity of the billboard are retrieved from a look-up table. The billboard size is set to the diameter of the influence scope. The billboard is shaded by using Phong Illumination Model. The gradient is served as the normal vector in the shading computation.</p><p>Three data sets are utilized in the experiments. To create the first data set, we split a unit cube into a tetrahedral mesh. The function value of each node is set to the distance from the cube center to the node. This data set is called the Standard Data Set. The second test data set contains a wind-tunnel simulation of the M6-wing. The energy values of the data set are rendered in the tests. The third data set is created by releasing particles in a turbulence flow field around a spherical obstacle inside a round tube. The density of particle inside the domain is visualized in the tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Costs of Constructing LoD Representation</head><p>For each data set, three adjacency graphs are constructed. The graph reduction is carried out many times to build an adjacency graph. The incremental values of reduction error, ε, for the standard data, the M6 wing data, and the turbulence flow data are 0.000134, 0.00177, and 0.000058 respectively. The reduction errors and the  <ref type="table" target="#tab_1">Table 1</ref>. The numbers of points in the adjacency graphs are shown in the second column. The reduction errors are displayed in the third column. The last column contains the numbers of iterations of the graph reduction performed. For the standard data, the first adjacency graph and the adjacency graphs produced in the 19th and the 36th iteration are selected. For the M6 wing data, the original adjacency graph and the adjacency graphs produced in the 11th and the 85th iteration are kept for the rendering processing. For the turbulence data, the first adjacency graph and the adjacency graphs generated in the 6th and the 42nd iteration are stored. The costs of constructing the adjacency graphs are depicted in <ref type="table" target="#tab_2">Table 2</ref>. The third column contains the reduction ratios. A reduction ratio is computed by dividing the number of points in the first level of adjacency graph by the number of points in the current level of adjacency graph. The last column displays the costs to build each level of the adjacency graph from the first level adjacency graph. The costs are measured in seconds. To build a new adjacency graph, several iterations of graph reduction have to be carried out. For example, the 2nd and the 3rd adjacency graphs of the M6 wing data are created by performing 11 and 85 iterations of graph reduction. Dividing the cost by the number of iteration, the average cost of performing one iteration of the graph reduction is computed. The average graph reduction costs of the standard data, the M6 wing data, and the turbulence flow data are 3.98, 1.16, and 10.24 seconds respectively. These costs are influenced by the sizes of the data sets. The average graph reduction cost of a larger data set is always bigger. The topology of mesh is also a key factor. The topological structures of the standard data and the M6 wing data are simpler. Therefore, their average graph reduction costs are lower. The main memory capacity is another important issue. In our implementation, the whole LoD structure is kept in the main memory when performing the graph reduction. The required memory space of the turbulence flow data exceeds the memory capacity of the computer. Page-swapping is triggered by the OS to transfer data between the disk and the main memory. Therefore the average reduction cost is increased.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Costs of Splatting Rendering</head><p>The costs of rendering the LoD structures of the test data are collected and displayed in <ref type="table" target="#tab_3">Table 3</ref>. The costs, measured in seconds, are displayed in the third column. The speed-up rates, contained in the last column, are obtained by dividing the rendering cost of each level of the adjacency graph with the rendering cost of the first level adjacency graph. The standard test data reveals an obvious speedup in the rendering computation as the number of points decreased. However, the speed-up for the other two test data sets is lower than our expectation. The reason is that the view point is put inside the domains, and many vertices are outside the view volume and culled  by the graphics pipeline. Therefore, only a portion of the vertices are involved in the rendering, and the speed-up is not linear.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Visualization Results</head><p>The images shown in <ref type="figure" target="#fig_1">Figures 9,10</ref>, and 11 are the visualization results of the first test data. The original adjacency graph contains more than 1.7 million of points. The volume rendering image of this graph is shown in <ref type="figure">Figure 9</ref>. The other two adjacency graphs contain about 442 and 96 thousand points respectively. The volume rendering images of these graphs are shown in <ref type="figure" target="#fig_1">Figures 10 and  11</ref>. Comparing these two images with <ref type="figure">Figure 9</ref>, the quality of image is still clear enough to reveal the distribution of function value, even though the data size is reduced by more than 17 times. The next series of pictures displays the visualization results of the M6wing data. The distribution of energy around the wind is displayed. The original adjacency graph is composed of about 1.15 million of points. The other two coarser adjacency graphs are comprised with 493 and 199 thousand points. The volume rendering images of these adjacency graphs are shown in <ref type="figure" target="#fig_1">Figures 12, 13</ref>, and 14. As the data size is reduced by more than 82%, the image of the adjacency graph with lowest resolution still sustains an accurate approximation of the volume rendering image of the original adjacency graph.</p><p>The third series of pictures shows the volume rendering images of the turbulence flow data. The colors are used to show the density of particles traveling in the flow field. In <ref type="figure" target="#fig_1">Figure 15</ref>, the original adjacency graph of 3.3 million points is rendered. The second level of adjacency graph consists of 997 thousand points. The volume rendering image of the graph is displayed in <ref type="figure" target="#fig_1">Figure 16</ref>. The adjacency graph of the third level contains only 599 thousand vertices. The image of <ref type="figure" target="#fig_1">Figure 17</ref> is the visualization result of the adjacency graph. Comparing the three pictures, it is obvious that the image produced by rendering the simplified adjacency graph still reveals the key features of the flow field, though the number of vertices is reduced to about one sixth of the original data. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSION AND FUTURE WORK</head><p>In this article, an LoD volume visualization method for FEA data is presented. It constructs hierarchical representations of FEA data, and allow users to render the data with different precisions. Furthermore, our method is a meshless method. It can be extended to cope with scattered scientific data and the data generated by using meshless FEA computational methods. Some FEA computation may last for a long time before the final solution is generated. It is useful to visualize the partial results while the computation is carrying on such that ill-modeled computing can be terminated before wasting too much resources. Our method can be modified to combined with FEA solvers to generate volume rendering images during the computing. Therefore, the progression of the computing can be monitored interactively. Data compression is another important issue for FEA computing <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b30">31]</ref>. The adjacency graph structure offers an alternative choice for compressing FEA data. Our LoD representation can be utilized to replace the mesh of FEA data to save memory space.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>The Canonical Cell of Tetrahedral Element</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Quadratic Order Gauss Points</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>(b) The Adjacency Graph (a) An FEA Data Set of 20 Cells</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Example of FEA Data Adjacency Graph</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>2D Example of Gauss Point Adjacency Graph</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>a new vertex. The coordinates, function value, gradient, and diffusion of the new vertex are obtained by computing the weighted average of 2D Example of Influence Scope of Gauss Point</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Example of LoD Adjacency Graph Footprint Function of Different Variancesin back-to-front order. To speed up the projection, the vertices are rendered by using billboards. The billboards are modulated with textures to generate the footprints of the vertices. The footprints are composited to form the final image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 :</head><label>8</label><figDesc>Rotating and Reshaping of Billboard two vertices is determined by:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 :Figure 10 :Figure 11 :Figure 12 :Figure 13 :Figure 14 :Figure 15 :Figure 16 :Figure 17 :</head><label>91011121314151617</label><figDesc>Standard Data Set of 1.7 M Points Standard Data Set of 442K Points Standard Data Set of 96K Points M6 Wing Data Set of 1.15 M Points M6 Wing Data Set of 493K Points M6 Wing Data Set of 199K Points Turbulence Flow Data Set of 3.3 M Points Turbulence Flow Data Set of 982K Points Turbulence Flow Data Set of 596K Points</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Errors of Adjacency Graph Reduction</figDesc><table><row><cell>Data Set Standard M6 Wing Turbulence 3,343,008 #Point 1,703,580 442,297 0.00255 Error #iteration 0.0 0 19 96,361 0.00482 36 1,151,848 0.0 0 493,003 0.01947 11 199,480 0.09945 85 0.0 0 982,753 0.00035 6 596,866 0.00243 42</cell></row><row><cell>number of iterations of the graph reduction performed to generate the adjacency graphs are displayed in</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Costs of Constructing LoD Representation</figDesc><table><row><cell>Data Set Standard M6 Wing Turbulence 3,343,008 #Point Reduction Ratio Costs(sec.) 1,703,580 1:1 0.0 442,297 3.85:1 61.76 96,361 17.68:1 111.05 1,151,848 1:1 0.0 493,003 2.34:1 25.49 199,480 5.77:1 98.22 1:1 0.0 982,753 3.40:1 254.05 596,866 5.60:1 430.12</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 :</head><label>3</label><figDesc>Costs of Volume Rendering</figDesc><table><row><cell>Data Set Standard M6 Wing Turbulence</cell><cell>Num. of Point Costs(sec.) Speed-up 1,703,580 30.87 1.0 442,297 8.08 3.82 96,361 2.44 12.65 1,151,848 35.70 1.0 493,003 22.23 1.61 199,480 16.16 2.21 3,343,008 37.17 1.0 982,753 25.50 1.46 596,866 15.84 2.38</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Burnett</surname></persName>
		</author>
		<title level="m">Finite Element Analysis</title>
		<imprint>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">TetFusion: An Algorithm for Rapid Tetrahedral Mesh Simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Prashant</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joerg</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization&apos;2002</title>
		<meeting>the IEEE Visualization&apos;2002</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="133" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Simplification of Tetrahedral Meshes with Accurate Error Evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Costanza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mantani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rocchini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization&apos;2000 Conference</title>
		<meeting>IEEE Visualization&apos;2000 Conference</meeting>
		<imprint>
			<date type="published" when="2000-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Multiresolution Representation and Visualization of Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paolo</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enrico</forename><surname>Puppa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberts</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="352" to="369" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Texture Splats for 3D Scalar and Vector Field Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization&apos;93</title>
		<meeting>the IEEE Visualization&apos;93</meeting>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An Efficient 3D Visualization Techniques for Finite Element and Other Coarse Volume</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gallagher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="185" to="193" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Raytracing Irregular Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">P</forename><surname>Garrity</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="35" to="40" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Parallel Volume Rendering on a Network of Workstations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Giertsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Petersen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="16" to="23" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Feature Preserved Volume Simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arie</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th ACM Symposium on Solid Modeling and Applications</title>
		<meeting>the 8th ACM Symposium on Solid Modeling and Applications</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="334" to="339" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Ray Tracing Volume Densities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Kajiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIG-GRAPH&apos;84 Conference</title>
		<meeting>SIG-GRAPH&apos;84 Conference</meeting>
		<imprint>
			<date type="published" when="1984" />
			<biblScope unit="page" from="165" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Multiresolution Techniques for Interactive Texture-Based Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Lamar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hamann</forename><surname>Bernd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization&apos;1999 Conference</title>
		<meeting>IEEE Visualization&apos;1999 Conference</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="355" to="362" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Hierarchical Splatting: A Progressive Refinement Algorithm for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Laur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pat</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIG-GRAPH&apos;91 Conference</title>
		<meeting>SIG-GRAPH&apos;91 Conference</meeting>
		<imprint>
			<date type="published" when="1991-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Data Distributed Parallel Algorithm for Ray-tracing Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Painter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krogh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Parallel Rendering Symposium&apos;93</title>
		<meeting>Parallel Rendering Symposium&apos;93</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="15" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Optical Models for Direct Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="99" to="108" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Area and Volume Coherence for Efficient Visualization of 3D Scalar Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Multiresolution View-Dependent Splat Based Volume Rendering of Large Irregular Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeremy</forename><surname>Meredith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of IEEE Visualization&apos;2001 Conference</title>
		<meeting>eeding of IEEE Visualization&apos;2001 Conference</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="93" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Eliminating Popping Artifacts in Sheet Buffer Based Splatting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization &apos;98</title>
		<meeting>the IEEE Visualization &apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="239" to="245" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Splatting without the Blur</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization &apos;99</title>
		<meeting>the IEEE Visualization &apos;99</meeting>
		<imprint>
			<date type="published" when="1999-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A Polygonal Approximation to Direct Scalar Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allan</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 1990 Workshop on Volume Visualization</title>
		<meeting>1990 Workshop on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1990-12" />
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Simplification of Tetrahedral Meshes with Error Bounds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Issac</forename><forename type="middle">J</forename><surname>Trotts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="99" to="108" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Parallel Visualization of 3D Finite Element Analysis Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kris</forename><surname>Shyh-Kuang Ueng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sikorski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th SIAM Conference on Parallel Processing for Scientific Computing</title>
		<meeting>the 7th SIAM Conference on Parallel Processing for Scientific Computing</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="808" to="813" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A Note on a Linear Time Algorithm for Constructing Adjacency Graphs of 3D FEA Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kris</forename><surname>Shyh-Kuang Ueng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sikorski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="445" to="450" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A Data Compression Method for Tetrahedral Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kris</forename><surname>Shyh-Kuang Ueng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sikorski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SPIE Visualization and Data Analysis</title>
		<meeting>SPIE Visualization and Data Analysis<address><addrLine>San Jose, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">4665</biblScope>
			<biblScope unit="page" from="134" to="141" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An Out-Of-Core Method for Computing Connectivities of Large Unstructured Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kris</forename><surname>Shyh-Kuang Ueng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sikorski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 4th Eurographics Workshop on Parallel Graphics and Visualization</title>
		<meeting>the 4th Eurographics Workshop on Parallel Graphics and Visualization<address><addrLine>Blaubeuren, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-09" />
			<biblScope unit="page" from="97" to="103" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Fast Algorithms for Visualizing Fluid Motion in Steady Flow on Unstructured Grid</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kris</forename><surname>Shyh-Kuang Ueng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Sikorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization&apos;1996 Conference</title>
		<meeting>IEEE Visualization&apos;1996 Conference</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="313" to="319" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Out-Of-Core Streamline Visualization on Large Unstructured Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kris</forename><surname>Shyh-Kuang Ueng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Sikorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="100" to="108" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Interactive Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Chapel Hill Workshop on Volume Visualization</title>
		<meeting>the Chapel Hill Workshop on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1989-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Footprint Evaluation for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;90 Conference</title>
		<meeting>SIGGRAPH&apos;90 Conference</meeting>
		<imprint>
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Interactive Splatting of Nonrectilinear Volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization&apos;1992 Conference</title>
		<meeting>IEEE Visualization&apos;1992 Conference</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="37" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Visibility Ordering Meshed Polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="126" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">On-the-Fly Rendering Of Losslessly Compressed Irregular Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chuan-Kai</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tulika</forename><surname>Mitra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tzi-Cker</forename><surname>Chiueh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization&apos;00</title>
		<meeting>the IEEE Visualization&apos;00</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="101" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">C</forename><surname>Zienkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Taylor</surname></persName>
		</author>
		<title level="m">The Finite Element Method</title>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanspeter</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeroen</forename><surname>Van Baar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><forename type="middle">Gross</forename><surname>Ewa Volume</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Splatting</surname></persName>
		</author>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="29" to="36" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
