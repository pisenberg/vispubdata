<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Surface Reconstruction of Noisy and Defective Data Sets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hui</forename><surname>Xie</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">State University of New York at Stony Brook</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><forename type="middle">T</forename><surname>Mcdonnell</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">State University of New York at Stony Brook</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename><surname>Qin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">State University of New York at Stony Brook</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Surface Reconstruction of Noisy and Defective Data Sets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry-Geometric Algorithms and Object Representations Computer Graphics</term>
					<term>Surface Reconstruction</term>
					<term>Surface Representation</term>
					<term>MPU implicits</term>
					<term>Modified Shepard&apos;s Method</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a novel surface reconstruction algorithm that can recover high-quality surfaces from noisy and defective data sets without any normal or orientation information. A set of new techniques are introduced to afford extra noise tolerability, robust orientation alignment, reliable outlier removal, and satisfactory feature recovery. In our algorithm, sample points are first organized by an octree. The points are then clustered into a set of monolithically singlyoriented groups. The inside/outside orientation of each group is determined through a robust voting algorithm. We locally fit an implicit quadric surface in each octree cell. The locally fitted implicit surfaces are then blended to produce a signed distance field using the modified Shepard&apos;s method. We develop sophisticated iterative fitting algorithms to afford improved noise tolerance both in topology recognition and geometry accuracy. Furthermore, this iterative fitting algorithm, coupled with a local model selection scheme, provides a reliable sharp feature recovery mechanism even in the presence of bad input.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Surface reconstruction of a scanned real-world object is a critical step of the reverse engineering pipeline. The surface of an object is first digitized into a set of sample points. Once these points have been collected, a surface reconstruction technique is invoked to build a surface representation that is faithful to the collected points. Many surface digitizing devices, such as laser range image scanners, can produce rather dense and accurate data samples. Some optical devices can also provide inside/outside information or even accurate surface normals. Most conventional surface reconstruction techniques are highly (strongly) device-oriented, in the sense that they rely on specific information such as surface normals or viewpoint (e.g. volume carving), or that they pose excessive demand on data accuracy or density. General devices, according to the digitizing techniques used, often produce defective data samples that are subject to noise, local absence of data (e.g., due to occlusion), outliers, etc. A set of desirable properties for a general-purpose surface reconstruction technique includes:</p><p>• Time and space efficiency, * email:{xhui|ktm|qin}@cs.sunysb.edu</p><p>• Robustness for defective data sets,</p><p>• No restriction on topological type,</p><p>• Ability to fill holes and adapt to varying sampling density, • (Abrupt) noise and outlier removal,</p><p>• Sharp feature preservation. In this paper, we propose a novel surface reconstruction technique which poses very little restriction on the data set. Our system takes as input a set of (noisy) sample points without any normal or orientation information and outputs a piecewise smooth surface. Sharp edges and corners can be well identified and recovered. The main ideas behind our technique are that (1) we never use local unreliable information to determine global properties, and (2) we iteratively detect false local results and recompute the local fitting when such bad input is detected.</p><p>We employ the recently introduced Multi-level Partition of Unity implicits (MPU implicits) by <ref type="bibr">Ohtake et al. [2003a]</ref> as the underlying surface representation. In general, implicit surfaces can provide better topological flexibility and automatic hole filling than can piecewise parametric models. MPU implicits can also offer the desirable properties of local support and local feature representation. <ref type="bibr" target="#b25">Xie et al. [2003]</ref> also developed a similar implicit surface representation scheme based on the modified Shepard's method for noisy data fitting. Ohtake et al's surface reconstruction algorithm builds an MPU implicit surface from an unorganized point cloud with prescribed normals. Their system exhibits extraordinary capability in sharp feature preservation, hole filling, and topological adaptability. However, their method requires accurate data sets with precise normals associated with each point. We note that the normal information plays a key role in determining the topology of the surface. Our goal is to augment the MPU implicit reconstruction system to general data sets while preserving all its desirable properties such October 10-15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE as sharp feature recovery.</p><p>We term such noisy and incomplete data sets with possible outliers and abrupt bursts of high noise as "noisy" and "defective" data sets. In our system, the sample points are arranged over an octree. We first cluster the points into monolithically oriented groups through an active contour method. These groups will be used to determine the orientation of each locally fitted implicit surface. Instead of using <ref type="bibr">Hoppe et al.'s [1992]</ref> orientation propagation method, the inside/outside test is conducted through a voting algorithm. This algorithm utilizes not neighboring cells but global information to decide the orientation of each implicit surface patch; thus, it provides improved robustness. We also propose an iterative surface fitting algorithm to correct erroneous fitting results that exhibit high error or undecidable orientations. Later fitting iterations use the normal vectors produced by previous iterations for feature detection and model selection. In a nutshell, our system exploits a series of mechanisms to deal with noisy and corrupted data sets with extra robustness and efficiency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Our work seamlessly integrates ideas from several research areas in the literature of computer modelling and surface reconstruction. In this section, we discuss related work in areas of implicit surfaces (signed distance fields), deformable models (active contour methods), and spatial partition-based surface reconstruction algorithms.</p><p>Compared to explicit models, implicit models can very efficaciously deal with objects of arbitrary topology, blend surface primitives, tolerate noise, and fill holes automatically. The traditional approaches are based mostly on Blinn's idea of blending globally or locally fitted implicit primitives <ref type="bibr">[1982]</ref>. Following this line, Muraki <ref type="bibr">[1991]</ref> uses a linear combination of Gaussian blobs as the surface fitting model. <ref type="bibr" target="#b4">Carr et al. [2001]</ref>, <ref type="bibr">Turk and O'Brien [1999]</ref> use globally supported radial basis functions(RBFs) to fit data points by solving a large dense linear system. <ref type="bibr" target="#b16">Morse et al. [2001]</ref> and <ref type="bibr">Ohtake et al. [2003b]</ref> reduce the computational cost to a sparse linear system by using locally supported RBFs. Another approach in this direction defines the distance field as the distance to a locally fitted surface. <ref type="bibr" target="#b11">Hoppe, DeRose, et al. [1994]</ref> define the signed distance field as the distance to a locally fitted tangent plane. <ref type="bibr" target="#b5">Curless and Levoy [1996]</ref> build the signed distance function on a volumetric grid using a set of depth images. <ref type="bibr" target="#b1">Bajaj, Bernardini et al. [1995]</ref> combine piecewise algebraic surfaces with α-shapes. Although algebraic patches are more flexible for local shape fitting, they need a cumbersome procedure to maintain the single-sheeted nature and the continuity between adjacent implicit patches. Recently, <ref type="bibr">Ohtake et al. [2003a]</ref> proposed Multi-level Partition of Unity implicits (MPU implicits). This method can be seen as the combination of algebraic patches and radial basis functions. <ref type="bibr" target="#b25">Xie et al. [2003]</ref> also proposed a similar method to build the distance field using the modified Shepard's blending of implicit patches. One common requirement for the local implicit fitting methods is to determine the orientation of each patch. A frequently used technique proposed by <ref type="bibr" target="#b11">Hoppe et al.[1994]</ref> is by orientation propagation along a minimum spanning tree. This method can suffer in the presence of sparse and incomplete data sets, noise, and sharp corners <ref type="bibr" target="#b25">[Xie et al. 2003</ref>]. Recently, <ref type="bibr" target="#b15">Mello et al. [2003]</ref> proposed an orientation alignment algorithm by minimizing a cost function. However, this method may be costly due to the globally defined cost function and the simulated annealing solver. Many algorithms determine the orientation by using some additional information such as normals or view direction in data sets acquired from some particular devices.</p><p>Another category of surface reconstruction algorithms widely exploited in computer vision are deformable models or active contour methods. <ref type="bibr" target="#b12">Kass, Witkin and Terzopoulos[1987]</ref> posed the image segmentation problem as an energy minimization of a deforming surface. <ref type="bibr" target="#b6">DeCarlo and Metaxas[1995]</ref>, <ref type="bibr">McInerney and Ter-zopoulos[1995]</ref> proposed a technique that allows changes in topology. Recent extensions of the deformable models to implicit surfaces (also known as the level-set method) have been developed that employ simpler data structures and support a wider range of topologies <ref type="bibr" target="#b22">[Sethian 1999;</ref><ref type="bibr" target="#b20">Osher and Fedkiw 2002;</ref><ref type="bibr" target="#b24">Whitaker 1998;</ref><ref type="bibr" target="#b26">Zhao et al. 2001]</ref>. Deformable models are very robust in dealing with noisy data sets. Their main drawback is their low performance due to their reliance on partial differential equations.</p><p>The third group of approaches are through Delaunay triangulation <ref type="bibr" target="#b3">[Boissonnat 1984;</ref><ref type="bibr" target="#b7">Edelsbrunner and Mcke 1994;</ref><ref type="bibr" target="#b0">Amenta et al. 2001]</ref>. The surface is a subset of the faces of the Delaunay triangulation upon the data points. <ref type="bibr">Nina Amenta, et al.[2001]</ref> present the Power Crust algorithm, which employs the medial axis transformation.</p><p>In essence, explicit deformable models and level-set methods can be formulated as a volume sweeping method. The volumetric regions swept by the active contour are distinguished from the rest of the volume. Delaunay triangulation-based algorithms follow a space partition and selection manner. In this paper, we design a pseudo-medial axis transformation algorithm using a simple deformable model. This novel algorithm features improved robustness and efficiency for inside/outside determination.</p><p>3 The Modified Shepard's Blending Method The modified Shepard's blending method was originally designed for building a global function from a set of locally defined functions. The resulting global function resembles the behavior of each locally defined function within their respective domains of influence. In <ref type="figure" target="#fig_1">Fig. 2</ref>, three real functions f 1 (x), f 2 (x) and f 3 (x) are defined locally in the vicinities of c 1 , c 2 and c 3 respectively. The domain of influence of each local function is designated by assigning to it a nonnegative weight function w i (x). Accordingly, the local functions f i (x) can be considered basis functions. The result blended function by the modified Shepard's method can be formulated as:</p><formula xml:id="formula_0">) ( 1 1 c x w − ) ( x f x 1 c 2 c 3 c ) ( 2 2 c x w − ) ( 3 3 c x w − ) ( 1 x f ) ( 2 x f ) ( 3 x f</formula><formula xml:id="formula_1">f (x) = ∑ n i=1 f i (x)w i (x − c i ) ∑ n i=1 w i (x − c i ) ,<label>(1)</label></formula><p>where n = 3 for this specific example. Usually, a weight function takes the form of a nonnegative real-valued radial basis function</p><formula xml:id="formula_2">w(x) = φ (r), r = x − c i .</formula><p>Typical choices of the radial basis functions include the inverse distance functions <ref type="bibr" target="#b8">Franke and Nielsen 1980]</ref>, the Gaussian distribution function φ (r) = exp(−c r 2 ) and the inverse multiquadric</p><formula xml:id="formula_3">φ (r) = ( Max(R−r, 0) R r ) 2 [</formula><formula xml:id="formula_4">φ (r) = (r 2 + c 2 ) −1/2 .</formula><p>To achieve computational efficiency, the weight functions φ i (r) are often compactly defined, that is, there exist a set of R i , r &gt; R i ⇒ φ i (r) = 0. Interpolation at f i (c i ) can be achieved by letting lim r→0 φ i (r) → +∞. We use a B-spline-based form as <ref type="bibr">Ohtake et al. [2003a]</ref> suggested.    The resulting function f (x) will be of C n continuity if both w i and f i are C n continuous. Blending the implicit functions naturally blends the implicit surfaces generated from these implicit functions. We refer readers to <ref type="bibr" target="#b23">[Shepard 1968;</ref><ref type="bibr" target="#b8">Franke and Nielsen 1980;</ref><ref type="bibr" target="#b21">Renka 1988</ref>] for a background of the origin of this method, and some nice properties accompanying it. In comparison to other blending methods such as splines or NURBS, the modified Shepard's method poses no requirements on the local connectivity and no limitations to the valence (number) of nearby basis functions, and thus can be easily adapted to a variety of applications.</p><formula xml:id="formula_5">+ + + + + - - -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -- ----------------------- - --- ----</formula><formula xml:id="formula_6">+ + + + + - - - -- - -- - - - - - ------------ - - - - - - ------------- - -- -- - - - - ------ + + (1) (2) (3-4) (5)<label>(6)</label></formula><formula xml:id="formula_7">(1) (2) (3) (4) (5)<label>(6)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Algorithm Overview</head><p>The algorithmic flow of our novel surface reconstruction algorithm is illustrated in <ref type="figure" target="#fig_4">Fig. 3</ref>. <ref type="formula" target="#formula_1">1</ref>We first divide all sample points by a volumetric grid and insert them into an octree. All samples are inserted into the deepest level of the tree. Only empty cells can be leaf nodes (except for nonempty cells at the deepest level). The depth of the octree is determined comprehensively by the noise rate and the feature size of the modelled surface. Adaptively subdividing the octree in the fitting stage is possible but not preferable because</p><p>Step 2 is not currently a locally adaptive algorithm. For level-ofdetail fitting, the fitting is allowed to occur at non-leaf cells. <ref type="formula" target="#formula_8">2</ref>At each level, the grid points are clustered into a set of so-called "mono-oriented" groups using an active contour method. These groups are "mono-oriented" in the sense that all the grid points in the same group have the same orientation, ether inside or outside, but which side is not determined at this point. <ref type="formula" target="#formula_9">3</ref>We locally fit in each cell an implicit quadric surface to its nearby sample points. <ref type="formula">4</ref>The mono-oriented groups at the opposite side of each local implicit surface are expected to have opposite orientations. Each nonempty cell casts a vote for the orientation of its neighboring groups. The orientation of the grid point groups will in turn be used to decide the orientation of each locally fitted surface patch. Thus, the orientation can be aligned globally but efficiently using as much information as possible to avoid erroneous results. (5) We calculate the normal of each sample point as well as the fitting error and normal variation in each cell. Cells with normal changes or fitting error bigger than a threshold will undergo an additional fitting process (detected sharp edges indicated by circles). (6) The last step of our algorithm is to blend all the locally fitted implicit surfaces to produce a (pseudo-)signed distance field using the modified Shepard's method. In the figure, yellow indicates positive regions and blue, negative regions. The resulting signed distance field can be visualized by ray tracing, volume rendering techniques or be transformed to a polygon mesh using the Marching Cubes algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Mono-oriented Region Partition</head><p>In order to make our surface reconstruction algorithm as general as possible, we assume as input an unorganized point set without normal or orientation information. For data sets equipped with normal or interior/exterior direction, the step of the algorithm described in this section can also be necessary for noisy and untrustworthy normals -which are often the case. To blend signed distance fields correctly with the modified Shepard's method, the normal direction of each implicit surface patch must be correctly aligned; that is, the gradient of all implicit functions must point outward with respect to the surface. The traditional normal alignment method exploits a Minimum Spanning Tree (MST)-based orientation diffusion approach <ref type="bibr" target="#b11">[Hoppe et al. 1994]</ref>. A basic assumption in their method is that the normals n i , n j of a pair of sufficiently close surface point p i , p j should point toward nearly the same direction, that is − → n i • − → n j ≈ +1. But Hoppe et al.'s method cannot easily accommodate sharp edges even if the propagation follows an optimal route along the MST. Consider a regular tetrahedron with accurate normals pointing outward at each surface point. The dot product of two normals across an edge is always negative. Hence, for this example, normal orientation can never be correctly aligned beyond a facet. Another problem with Hoppe et al.'s method is that, in the presence of noise, the locally estimated normals may not always be trustworthy. Moreover, normal alignment of distant islands in an incomplete data set may even be impossible. Essentially, the effect of orientation alignment of a manifold surface is equivalent to dividing the volume space into two groups of regions: the inside regions and the outside regions. A commonly used approach to find the inside or outside of a surface is the active contour method. To avoid leakage through holes, most deformable models resort to the minimization of some complicated and expensive strain energies. In this paper, we follow a different idea to avoid leaking. We launch two active contours growing at both sides of the hole. If every point on these two active contours travels at the same speed and keeps the same distance to the surface, these two active contours will finally collide at the center of the hole. This leads to the following space partition algorithm, as shown in <ref type="figure" target="#fig_5">Fig. 4</ref>. We begin by launching an active contour within each cave and recess of the surface as well as in the outer bounding space. These active contours grow or shrink toward the surface and try their best to keep the same distance to the surface. At the end of this process the whole surface is sandwiched between active contours.</p><p>The subspace swept by a specific active contour lies as a whole inside or outside of the surface. We name these subspaces "monooriented regions." After the orientation of each mono-oriented region is decided, each patch of the surface can be easily oriented. At the start of the algorithm, we have no idea which regions are inside the surface and which are outside, let alone where to put the active contour seeds in each cave and recess. The idea of using medial axis transformation <ref type="bibr" target="#b0">[Amenta et al. 2001]</ref> for surface reconstruction indicates that for any spatial region visually bounded by a set of surface samples, there exists at least a space point inside the surface such that all its neighboring space points are not further to the set of samples. That means this point is a local maximum of the unsigned distance field associated with this set of surface samples. We call such a point a (local) peak point (of the unsigned distance field). Hence, it is sufficient to launch an active contour seed at each peak point besides the one in the bounding space.</p><p>In practice, we discretize the above continuous approach onto a volumetric grid. We first build a discrete, unsigned distance field on the grid points. The distance value of a grid point is defined as its distance to the nearest nonempty cell (see <ref type="figure" target="#fig_6">Fig. 5 (a)</ref>). Every peak point on the grid initiates an active contour (the double-circled red point in <ref type="figure" target="#fig_6">Fig. 5(a)</ref>). Due to discretization, the double-circled blue point is falsely identified as an active contour seed. Since this seed will not be able to grow (try the algorithm in <ref type="figure">Fig. 7)</ref>, it poses no harm. The true seed (the red double-circled point) can grow to its neighboring points and lead to a new mono-oriented region. If several peak points are consecutively connected, they share a single mono-oriented group ID.</p><p>All points on the active contours are sorted with a heap by their distances to the surface. The point on top of the heap (the furthest point, as double-circled in <ref type="figure" target="#fig_6">Fig. 5 (b)</ref>) grows first. Hence, all parts of the active contour grow with nearly the same distance to the surface. The grid points swept by the same active contour are clustered into a mono-oriented group. <ref type="figure" target="#fig_6">Fig. 5 (a)</ref> and <ref type="figure">Fig. 7</ref> show the details of the algorithm. means q belongs to no group * <ref type="figure">Figure 7</ref>: The mono-oriented group growing algorithm. Heap H is sorted in descending order by the distance to the nearest nonempty cell.</p><p>The above discussion leads to an O(n 3 ) algorithm, where n is the diameter of the volumetric grid. We can improve the performance by introducing a hierarchical version of this algorithm. As shown in <ref type="figure">Fig. 8</ref>, we first perform the mono-oriented region partition algorithm at a coarse level, than we transform the active contour to a finer level and redo the region growing method on the finer level. Typically, it is a loop of the following four steps.</p><p>(1) Find new active contour seeds;</p><p>(2) Grow the mono-oriented regions;</p><p>(3) Transform the active contour to the next level of grid;</p><p>(4) Grow the mono-oriented regions; The purpose of step (4) is to decrease the space available for new seeds, thus reducing the number of mono-oriented groups. We note that the active contours transformed to the next level shrink back a little. This is done intentionally in order to avoid penetration of the blue contour through holes. Left unchecked, such penetrations become larger in finer levels of the octree. As the algorithm descends the octree hierarchy, more and more topological and geometrical details are exposed. Big cells break into smaller ones, cavities come out and thus new peak points appear. At each level of the algorithm we add new peak points to the lists of the active contour.</p><p>In <ref type="figure">Fig. 6</ref>, we show the hierarchical growing process of the monooriented regions. The first three figures show the mono-oriented regions initiated by peak points inside the surface at level 5, 6 and 8 respectively. <ref type="figure">Figure (d)</ref> shows the boundary of the mono-oriented group initiated by the bounding box. (e) is the shaded model reconstructed with our system.</p><p>Since only the state of the grid points near the surface needs to be stored, we can use a hash table to store the status of all grid points. This allows us to obtain a roughly O(n 2 ) algorithm assuming the Hausdorff dimension of the sample points is 2. The space complexity is also reduced to O(n 2 ). Another even more significant aspect to the speedup of our algorithm is that, in our hierarchical approach, the distance field evaluation is conducted only between nearby grid points and cells (except near big holes). Efficient distance calculation of points far from the surface is never a trivial task. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Orientation Determination</head><p>By this stage of the surface reconstruction process we have partitioned the volumetric grid into mono-oriented regions. However, the orientation of each region (insideness/outsideness) is yet to be determined. For each locally fitted implicit surface patch, its neighboring grid points are divided into two oppositely oriented groups. We can make a local sign map of the implicit function at those grid points within a specific range of distance to the surface. A typical choice of the range is 1 to 3 times the grid size. In <ref type="figure" target="#fig_9">Fig. 9 (a)</ref>, as an example, we mark the sign on those grid points with '+' or '-' and all others undetermined('U'). In <ref type="figure" target="#fig_4">Fig. 3 (steps 3-4)</ref>, we show the orientation determination of the mono-oriented regions by voting. Each local implicit sign map matches to its nearby oriented mono-oriented groups and gives an orientation vote. The outermost mono-oriented region is obviously outside. Then, the orientations of inner regions are determined to maximize the number of matches to their boundary local sign maps. This voting process needs to be conducted several times till the innermost regions be properly oriented. After the orientations of all mono-oriented groups being determined, they will be subsequently exploited to determined the orientation of each local implicit patch using local sign maps. Very often not all surface patches can be aligned with their nearby monooriented regions (this may due to the existence of too small a cavity to hold a mono-oriented region). The orientation alignment algorithm of adjacent surface patches can then be applied. Two adjacent maps are called a positive match if there is no conflict of signs at their common grid points; that is, no + and -meet at the same grid point. A negative match requires that one sign must be flipped in order to give a positive match. In <ref type="figure" target="#fig_9">Fig. 9(b)</ref>, the two adjacent implicit surfaces have a positive match.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Outlier Detection</head><p>Outliers, which do not truly belong to the surface, may exist in defective data sets. There are two types of outliers. The first type lies not too far away from the valid samples ( <ref type="figure" target="#fig_0">Fig. 10(a)</ref>). The octree  cells containing these outliers have sufficient valid samples nearby when doing local surface fitting. Thus, the outliers can be detected and removed by measuring the distance to the fitted surfaces. Another type of outlier clusters with others at a distant place from the surface. These outliers can erroneously produce a surface patch if not properly removed. Our mono-oriented groups can help identify this type of outlier. As shown in <ref type="figure" target="#fig_0">Fig. 10(b)</ref>, two mono-oriented groups envelop the outliers in the center. But the orientations of groups 1 and 2 are both marked inside after the voting step because we assume outliers are rare. Hence, the local implicit surface fitting these outliers can not be oriented, and outliers are identified.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">(Abrupt) Noise Removal</head><p>A critical aspect of our surface reconstruction algorithm is a new iterative noise removal method we describe in this section. In the first iteration of the surface fitting process, we fit an implicit quadric surface to the sample points in the cell and all its neighboring cells with a weight function of compact support R <ref type="figure" target="#fig_0">(Fig. 12(a)</ref>). Then, we project all the sample points in this cell to the fitted implicit surface and term them the "projected points" <ref type="figure" target="#fig_0">(Fig. 12(b)</ref>). Normal vectors associated with each projected point are also computed for feature detection. In the subsequent fitting iterations, we use  the original sampling points within the sphere of radius R i , while use the projected points in a spherical shell with a larger support R o <ref type="figure" target="#fig_0">(Fig. 12(c)</ref>). The projected points should be assigned heavier weights. A typical selection is:</p><formula xml:id="formula_8">W orig (p) = φ ( p − c , R o ) if p − c ≤ R i 0 if p − c &gt; R i ,<label>(2)</label></formula><formula xml:id="formula_9">W pro j (p) = s * φ ( p − c , R o ) if R i &lt; p − c &lt; R o 0 otherwise ,<label>(3)</label></formula><p>where</p><formula xml:id="formula_10">φ (•, R o )</formula><p>is a radial basis function of compact support R o , c is the center of the inner cell and s is a constant which we name the stress factor. Bigger   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Feature Detection and Local Model Selection</head><p>In order to recover sharp edges and corners, we propose a new feature detection scheme for noisy data sets following the spirit of Ohtake et al.'s algorithm <ref type="bibr">[Ohtake et al. 2003a]</ref>. Generally, we choose one of the three candidate local fitting models according to the local normal distribution. For flatter surface areas, we use bivariate parametric quadrics defined in the local tangent plane; for areas where there are two sheets of surfaces, we use general quadrics; and for sharp edges and sharp corners, we exploit piecewise quadric surface models.  In the first iteration, the system uses bivariate parametric quadrics as the fitting model for all cells. This results in larger fitting error in cells with sharp features (see <ref type="figure" target="#fig_0">Fig. 13(a)</ref>). Also, the normals evaluated from the first iteration are very noisy. Thus, for the second iteration, we may falsely detect or miss features using <ref type="bibr">Kobbelt et al.'s criteria [2001]</ref>. In this paper, we propose an iterative feature detection algorithm that is naturally integrated with our iterative noise removal method. The basic idea is to assign various weight stress factors to the projected points in neighboring cells based on their fitting error or estimated curvature. For the example in <ref type="figure" target="#fig_0">Fig. 13</ref>, the fitting of a sharp edge using a parametric bivariate quadric results in flattened surfaces. The feature detection fails to identify the feature. However, for the fittings in the next iteration, the points near the feature will have less impact on the implicit fitting in its neighboring cells. Thus, the overall distribution of normals will gradually form a feature <ref type="figure" target="#fig_0">(Fig. 13(c)</ref>). After this, a feature is detected with Kobbelt et al.'s criteria. The fitting model for this cell in the the next iteration will be replaced by piecewise quadrics as discussed by <ref type="bibr">Ohtake et al[2003a]</ref>. To fit a piecewise quadric model, we first group the projected points by their normal directions similar to <ref type="bibr">Ohtake et al.'s[2003a]</ref> approach. For the original sample points in the inner cell (whose normal vectors are not used), we group them by measuring their distances to the locally fitted plane of each group of previously projected points. (That is, we locally fit each group of projected points to a plane that interpolates the averaged center of the projected points and that has as its normal vector the averaged normal of the group of projected points.) The weight function typically takes the form: w = φ (r, R)φ (e, ε)φ (v, η), where, r is the distance to the center, R is the local support, e is the average fitting error of the cell containing that point, ε is a user-specified expected error, u is local normal change (maximum span angle), and η is a user specified expected normal change, we usually take the value of 30 degrees. <ref type="figure" target="#fig_0">Fig.11</ref> presents some results of applying our feature recovery algorithm to noisy data set. <ref type="figure" target="#fig_0">Fig.11 (a)</ref> is the reconstructed surface from noise-free data without normals. <ref type="figure" target="#fig_0">Fig.11(b)</ref> and (c) are the results of applying our algorithms 1 and 5 iterations respectively, to data set with 5% of noise. <ref type="figure" target="#fig_0">Fig.11(d)</ref> and (e) are the normal maps of (a) and (c) respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Experimental Results</head><p>Due to the space limitations, we only show several representative experimental results for the four main functionalities of our algorithm: automatic hole filling, abrupt noise removal, dealing with nonuniform samples in absence of normal information, and feature recovery from noisy data sets. In <ref type="figure" target="#fig_0">Fig.14, a</ref> surface with complex topology is reconstructed. <ref type="figure" target="#fig_0">Fig.14 (a)</ref> shows two of the monooriented regions where the inner core is successfully determined as an outside mono-oriented region. In <ref type="figure" target="#fig_0">Fig.15</ref>, the noise in the data set with complex topology is iteratively removed. <ref type="figure" target="#fig_0">Fig.16</ref> shows a close-up view of the fandisk model from <ref type="figure" target="#fig_0">Fig.11</ref>. We can see that the sharp features are well captured and recovered. <ref type="figure" target="#fig_0">Fig.16(a)</ref> clearly shows the effect of the feature detection threshold. <ref type="figure" target="#fig_0">Fig.16</ref>(c) and <ref type="figure" target="#fig_0">Fig.16(d)</ref> are models recovered from the fandisk data set with noise added. <ref type="figure" target="#fig_0">Fig.17</ref> is an example of sharp feature detection and recovery of noise-free data sets without normals. Our algorithm can also process non-uniformly sampled data sets as shown in <ref type="figure" target="#fig_0">Fig.19</ref>. Using different levels of the octree, we can obtain multiresolution surface recovery. At a finer level of the octree, details can be well recovered as shown by the dinosaur skin in <ref type="figure" target="#fig_0">Fig.18</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11">Conclusion and Future Work</head><p>We have presented a novel, noise-tolerable surface reconstruction method with partition of unity implicits. Compared to other surface reconstruction methods that handle noisy point clouds, our method possesses both efficiency and robustness. Our system can accept data sets subject to noise, bursts of noise, missing data, and varying sampling density without normal or orientation information. The basic idea behind this work is (1) to avoid using local unreliable information to determine global properties (e.g. orientation); (2) to detect false results iteratively and to redo the local fitting as necessary. The techniques we develop for space partition, iterative fitting, feature detection, and normal alignment can be adapted to a large variety of applications in computer graphics, vision, medical image segmentation, etc. Our method significantly improves the previous MPU implicit method to accommodate general data sets. We designed a robust hierarchical volumetric partition algorithm to distinguish the interior and exterior of the modelled surface and employed a divide-and-conquer approach to surface fitting. Each locally fitted surface patch is blended to produce a smooth (pseudo-)signed distance field using the modified Shepard's method. It avoids the expensive process of global implicit function fitting, while preserving the desirable nature of the implicit approaches -namely, automatic hole filling. Our iterative local fitting algorithm also features topology recognition and geometry recovery in the presence of noise.</p><p>Some future work includes: (1) design a locally adaptable monooriented region growing algorithm. This algorithm makes possible the locally adaptive level-of-details fitting; (2) automatic level-ofdetail checking and recovery from noisy data; (3) automatic determination of the optimal support radius of the weight function as well as other user specified parameters-the expected error and the expected normal change.     </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Our noise-tolerant surface reconstruction system. The noise rate is 0.7% of the object size. The side view of the gargoyle shows the fitting error map. Red color indicates larger fitting error.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>The modified Shepard's blending of a set of locally defined functions. The resulting function (red solid curve) is constructed from three local functions (thick dashed curves) with their associated weight functions (dashed double-dotted curves).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>The algorithmic flow of our surface reconstruction system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Mono-oriented region partition. Within each cave and recess of the surface as well as the outer bounding space an active contour is launched. The active contours can not penetrate the hole (on top of the club) when growing.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>The mono-oriented region growing method. (a) The discrete unsigned distance field (actually, squared distances are marked in the figures) and initialization of active contour seeds. (b) Two active contours grow down the discrete distance field and collide in the middle of a hole.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :Figure 8 :</head><label>68</label><figDesc>Mono-oriented groups growing method. The first three figures show mono-oriented regions inside the surface, while (d) is the active contour initiated by the outer bounding box. Hierarchical volumetric mono-oriented region partition. The result of the coarse level is transformed to a finer level.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>(a) Local implicit function sign map. (b) Matching of two sign maps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :</head><label>9</label><figDesc>The local orientation map associated with the center cell and the orientation alignment of two adjacent implicit surfaces. 'U' stands for uncertain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 10 :</head><label>10</label><figDesc>Two types of outlier removal methods.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 11 :</head><label>11</label><figDesc>Feature recovery of noisy point cloud without prescribed normals.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>R o result in relatively smoother fitting. A typical R i can be one half of R o . The selection of s depends on the type of radial basis function φ . Too big a s may result in non-convergency or bumpy results. We use s = 2 and the spline weight function φ (x, R) = b(3x/2R) in our implementation, where b is a B-spline basis function. The optimal choice of s and its role in convergency is still an open issue. The original samples in the spherical shell between radii R i and R o can also be used for the fitting. In this case, W orig (p) = φ ( p − c , R o ) for all p − c &lt; R o . This often gives better convergency.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 12 :</head><label>12</label><figDesc>Iterative noise removal using projected points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 13 :</head><label>13</label><figDesc>Iterative feature recovery using projected points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figure 14 :</head><label>14</label><figDesc>Reconstructed model featuring complex topology.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Figure 15 :Figure 16 :</head><label>1516</label><figDesc>A noisy model smoothed after 1, 2 and 5 iterations, respectively, of the noise removal algorithm. Detail of reconstructed fan disk. (a-b) Original data-set. (c-d) Model recovered after adding 0.5% noise. (c) 1 iteration. (d) 30 iterations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>Figure 17 :Figure 18 :</head><label>1718</label><figDesc>Sharp features can be recovered very accurately. Our algorithm reconstructs details very effectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Figure 19 :Figure 20 :</head><label>1920</label><figDesc>Our algorithm can process non-uniformlysampled data sets without difficulty. Surface reconstruction at varying levels of detail. (a) Octree level 6. (b) Octree level 8.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Push active contour seeds (peak points and bounding box) to heap H. Give each seed a proper group ID (gid).Build the discrete unsigned distance field distFieldLet point p = top of H (farthest point)</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">distField (p) &gt; 0 ?</cell><cell>No</cell><cell>Stop</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Yes</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>pop p out of H</cell></row><row><cell cols="5">q.gid ∃ Collision Detect</cell><cell>neighbor q of p, s.t. and q.gid p.gid ? φ ≠ ≠</cell><cell>Yes</cell></row><row><cell cols="4">Closer Ungrouped</cell><cell></cell></row><row><cell cols="2">Neighbor</cell><cell>∃</cell><cell cols="3">neighbor q of p, s.t. q.gid =</cell><cell>φ</cell><cell>No</cell></row><row><cell></cell><cell></cell><cell cols="4">distField (q) &lt; distField (p) ?</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Yes</cell></row><row><cell></cell><cell></cell><cell cols="4">For all such q, Set q.gid = p.gid</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="3">and push q into heap H</cell></row><row><cell>q.</cell><cell cols="2">gid</cell><cell>=</cell><cell>φ</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The power crust</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Kolluri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth ACM Symposium on Solid Modeling and Applications</title>
		<meeting>the Sixth ACM Symposium on Solid Modeling and Applications</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="249" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automatic reconstruction of surfaces and scalar fields from 3D scans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd Annual Conference on Computer Graphics and Interactive Techniques</title>
		<meeting>the 22nd Annual Conference on Computer Graphics and Interactive Techniques</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A generalization of algebraic surface drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="235" to="256" />
			<date type="published" when="1982-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Geometric structures for three-dimensional shape representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-D</forename><surname>Boissonnat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="266" to="286" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Reconstruction and representation of 3d objects with radial basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Beatson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Cherrie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">R</forename><surname>Fright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Evans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Annual Conference Series</title>
		<imprint>
			<biblScope unit="page" from="67" to="76" />
			<date type="published" when="2001-08" />
		</imprint>
	</monogr>
	<note>Computer Graphics Proceedings</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A volumetric method for building complex models from range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Proceedings, ACM SIGGRAPH Annual Conference Series</title>
		<imprint>
			<biblScope unit="page" from="303" to="312" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Adaptive shape evolution using blending</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Decarlo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Metaxas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Fifth International Conference on Computer Vision</title>
		<meeting>Fifth International Conference on Computer Vision<address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="834" to="839" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Three-dimensional alpha shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Mcke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="43" to="72" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Smooth interpolation for large sets of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. Journal for Numerical Methods in Engineering</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1691" to="1704" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Variational implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Greg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Brien</surname></persName>
		</author>
		<idno>GIT- GVU-99-15</idno>
		<imprint>
			<date type="published" when="1999-05" />
			<biblScope unit="volume">9</biblScope>
		</imprint>
		<respStmt>
			<orgName>Georgia Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Surface reconstruction from unorganized points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="71" to="77" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Piecewise smooth surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Halstead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schweitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Annual Conference Series</title>
		<imprint>
			<biblScope unit="page" from="295" to="302" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
	<note>Computer Graphics Proceedings</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Snakes: active contour models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computer Vision</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="321" to="331" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Feature-sensitive surface extraction from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">P</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Schwanecke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 2001, Computer Graphics Proceedings</title>
		<editor>E. Fiume</editor>
		<imprint>
			<publisher>ACM Press / ACM SIGGRAPH</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="57" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mcinerney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
		<title level="m">Topologically adaptable snakes. ICCV</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="840" to="845" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Estimating the in/out function of a surface represented by points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Mello</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Velho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Symposium on Solid Modeling and Applications</title>
		<imprint>
			<biblScope unit="page" from="108" to="114" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Interpolating implicit surfaces from scattered surface data using compactly supported radial basis functions. Shape Modeling International</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">S</forename><surname>Morse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Yoo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rheingans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">R</forename><surname>Subramanian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="89" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Volumetric shape description of range data using Blobby Model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Muraki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="227" to="235" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Multi-level partition of unity implicits</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ohtake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Belyaev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="463" to="470" />
			<date type="published" when="2003-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">A multi-scale approach to 3d scattered data interpolation with compactly supported basis function. Shape Modeling International</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ohtake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Belyaev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003-05" />
			<biblScope unit="page" from="153" to="164" />
			<pubPlace>Seoul, Korea</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">The Level Set Method and Dynamic Implicit Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Multivariate interpolation of large sets of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Renka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Mathematical Software (TOMS)</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="139" to="148" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<title level="m">Level Set Methods and Fast Marching Methods : Evolving Interfaces in Computational Geometry, Fluid Mechanics, Computer Vision, and Materials Science</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A two-dimensional interpolation function for irregularly-spaced data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shepard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1968 23rd ACM national conference</title>
		<meeting>the 1968 23rd ACM national conference</meeting>
		<imprint>
			<date type="published" when="1968" />
			<biblScope unit="page" from="517" to="524" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A level-set approach to 3d reconstruction from range data. Int&apos;l</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computer Vision</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="203" to="231" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Piecewise C 1 continuous surface reconstruction of noisy point clouds via local implicit quadric regression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">14th IEEE Visualization Conference</title>
		<imprint>
			<date type="published" when="2003-10" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Fast surface reconstruction using the level set method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-K</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1st IEEE Workshop on Variational and Level Set Methods, 8th ICCV</title>
		<meeting><address><addrLine>Vancouver</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="194" to="202" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
