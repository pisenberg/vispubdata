<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Volume Refinement Fairing Isosurfaces</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Bertram</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">U</forename><surname>Kaiserslautern</surname></persName>
						</author>
						<title level="a" type="main">Volume Refinement Fairing Isosurfaces</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>G.1.2 [Numerical Analysis]: Approximation-Approximation of Surfaces and Contours</term>
					<term>G.1.6 [Numerical Analysis]: Optimization-Constrained Optimization</term>
					<term>I.4.3 [Image Processing and Computer Vision]: Enhancement-Smoothing adaptive mesh refinement, isosurfaces, subdivision, variational modeling, volume fairing</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We propose an interpolating refinement method for two-and three-dimensional scalar fields defined on hexahedral grids. Iterative fairing of the underlying contours (isosurfaces) provides the function values of new grid points. Our method can be considered as a non-linear variational subdivision scheme for volumes. It can be applied locally for adaptive mesh refinement in regions of high geometric complexity. We use our scheme to increase the quality of low-resolution data sets and to reduce interpolation artifacts in texture-based volume rendering.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Volume rendering of scalar fields defined on regular hexahedral grids is mostly based on trilinear interpolation. In regions of high geometric complexity where the sampling rate is close to the Nyquist frequency, visualization often suffers from interpolation artifacts. These artifacts are particularly visible in isosurfaces, since the representation of the underlying scalar field with locally supported basis functions is not optimized for the representation of smooth contours. Isosurfaces can be emphasized in volume renderings by a proper transfer function <ref type="bibr" target="#b7">[8]</ref> or they can be extracted by Marching Cubes <ref type="bibr" target="#b9">[10]</ref>.</p><p>Figures 1a) and b) illustrate the lacking smoothness of isolines based on bilinear and bicubic interpolation, despite of the fact that bicubic spline surfaces minimize thin-plate energy. All linear filtering and subdivision methods we have tested so far exhibit more or less the same problem. Hence, the interpolation artifacts of contours (isolines and -surfaces) may only be reduced effectively by a non-linear optimization method. In a previous work <ref type="bibr" target="#b0">[1]</ref>, we have presented an iterative variational fairing approach for 2D scalar fields based on bicubic splines, see <ref type="figure">figure 1c</ref>). The method increases the resolution by knot insertion and iteratively smoothes all isolines based on variational principles. The results of this method are promising, at the expense of extremely high computational cost (about 20 seconds for a 7 × 7 data set).</p><p>In the present work, we discretize the variational fairing method for smoothing piecewise linear scalar fields. Since * e-mail: bertram@informatik.uni-kl.de the considered contours are piecewise linear, fairing is only necessary on the edges of the triangulated domain. In a further step, we adapt our method to the refinement of bilinear surfaces and trilinear volumes. The refined volumes interpolate the original data, deferring the most significant interpolation artifacts to finer scales where they can be eliminated by recursion. Our method can be globally applied, for example in combination with texture-based volume rendering <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b4">5]</ref>, or it can be used for local refinement.</p><p>These are the contents of our work: In section 2, we review related work. Our algorithm for the bivariate case (linear and bilinear scalar fields) is described in section 3, including numerical examples. The extension to trivariate scalar fields and its use for volume rendering is discussed in section 4. In section 5, we conclude our work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Visualization of three-dimensional scalar fields is either done by extraction of isosurfaces or by volume rendering, see for example <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b7">8]</ref>. In both cases, isosurface quality has a significant impact. Not only geometric smoothness, but also isosurface topology depends on the representation of the underlying scalar fields. In the case of trilinear scalar fields, isosurface topology is quite complicated. A variant of Marching Cubes <ref type="bibr" target="#b9">[10]</ref>, extracting topologically correct isosurfaces was recently devised <ref type="bibr" target="#b10">[11]</ref>.</p><p>For trilinear fields, critical points where isosurface topology changes are efficiently detected <ref type="bibr" target="#b13">[14]</ref>. Unfortunately, the topology of a trilinear interpolant is often different from the topology of an original scalar field prior to discretization. The task is to find the best reconstruction of the original shape consistent with the discrete data.</p><p>Image processing techniques like anisotropic diffusion <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b3">4]</ref> are capable of recognizing local features, but they often modify the data. Diffusion and filtering methods are mostly useful for smoothing noisy data. Diffusion-based fairing techniques are also applicable to the fairing of geometric shapes <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b1">2]</ref>.</p><p>Variational modeling <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b6">7]</ref> is often used for fairing parametric surfaces. Using smooth basis functions, like B-splines or quadratic splines on tetrahedra <ref type="bibr" target="#b12">[13]</ref>, interpolation and fairness constraints can be specified for the scalar field. Only few approaches are capable of fairing implicit surfaces. Nielson et al. <ref type="bibr" target="#b11">[12]</ref> propose a fairing method for single isosurfaces by constrained fairing of curves. The problem of fairing all isolines in a two-dimensional scalar field has been solved at the expense of high computational cost <ref type="bibr" target="#b0">[1]</ref>. In the present work, we discretize the underlying representation providing a more efficient approach applicable to volume fairing.   In a previous work <ref type="bibr" target="#b0">[1]</ref>, we considered the problem of minimizing the second derivative of an isoline g(s) with arc-length parametrization,</p><formula xml:id="formula_0">Z g (s) 2 ds −→ min.<label>(1)</label></formula><p>This is equivalent to</p><formula xml:id="formula_1">Z n × ∇n 2 ds −→ min,<label>(2)</label></formula><p>where n(s) is the contour's normal corresponding to the scalar field's gradient, see figure 2.</p><p>This integral minimizes the normal's deviation along g. When fairing all contours of a scalar field, the arc-length parameter s can be eliminated by substituting the scalar field's domain parameters for s. The resulting optimization process is non-linear and requires expensive convolutions of smooth bivariate basis functions, like bicubic splines. (These convolutions do not have a simple algebraic solution due to a gradient-based weighting function.) To accelerate this approach, we consider piecewise linear scalar fields and redefine the optimization for discrete gradients.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Fairing Piecewise Linear Isolines</head><p>Consider a triangulated domain defined by a set of points P and a set of triangles T. Every point pi ∈ P has an associated scalar value fi. We propose the following optimization:</p><formula xml:id="formula_2">r := X a,b: α ab w ab (na − n b ) 2 −→ min, w ab = " 1 2 (na + n b ) • e ab « 2<label>(3)</label></formula><p>where e ab is the vector along the common edge, and na, n b denote the scalar field's gradient in the triangles a and b, respectively. The gradient of a piecewise linear function is piecewise constant, see <ref type="figure" target="#fig_2">figure 3</ref>. Hence, the normal vectors of isolines vary only across the triangle boundaries. We note that we do not normalize the gradients na and n b in our residual, emphasizing regions of great slope in the optimization.</p><p>The residual r in equation <ref type="formula" target="#formula_2">3</ref>is a function of the DOF's, i.e. of all scalar values fi : pi ∈ Q. Their optimal values can be found by satisfying the necessary constraints</p><formula xml:id="formula_3">∂r ∂fi = 0 ∀i : pi ∈ Q<label>(4)</label></formula><p>The weighting terms w ab make this optimization non-linear, since for constant w ab , above constraints would form a linear system of equations. The weights are quadratic proportional to the amount of isolines intersecting the edge e ab . If the normals na and n b are (more or less) orthogonal to the edge, the weight is small, since the isolines are (nearly) parallel to e ab . The weight w ab is maximal, if the average normal is parallel to e ab . We take the square of the weighting term rather than its absolute value to make the residual a polynomial.</p><p>We propose the following algorithm:</p><p>1 initialize the DOF's, for example by linear interpolation of the given data fi : pi ∈ P\Q.</p><p>2 For every i : pi ∈ Q compute the coefficients of ∂r/∂fi, which is a cubic polynomial in fi. Among the zero points of this partial derivative is the minimum for r = f (fi). Replace fi by the zero point where the minimum is obtained.</p><p>3 Repeat step 2 either for a fixed number of iterations, or until the maximal correction of r is below a certain threshold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Rectilinear Grid Refinement</head><p>In the case of a rectilinear grid with associated function values, a refinement step doubles the resolution in both directions. The function values at the new points representing the DOF's are initialized by bilinear interpolation. In a first approach, we triangulate the quadrilaterals of the refined grid by inserting consistently oriented diagonals. for this triangulation, we apply the algorithm described above. In the following, we provide all relevant implementation details for step 2 of the algorithm updating a variable value fij. Relevant for the residual r as a function of fij are only the terms of equation <ref type="formula" target="#formula_2">3</ref>corresponding to the twelve edges of incident triangles, as illustrated in figure 4. All twelve terms are non-negative quartic polynomials of fij. To compute the coefficients of the local residual r(fij), we need to compute every term with its four partial derivatives with respect to fij. As an example, we provide these derivatives for the edges a = ep i,j+1 ,p ij and b = ep i+1,j+1 ,p ij , according to figure 4.</p><formula xml:id="formula_4">a f i,j+1 b f i+1,j f i,j</formula><p>For the term associated with edge a, we get</p><formula xml:id="formula_5">ra = w d, w = " 1 2 (n1 + n2) • (0, 1) T « 2 , d = (n1 − n2) 2 , n1 = (fi,j − fi−1,j, fi,j+1 − fi,j) T , n2 = (fi+1,j+1 − fi,j+1, fi,j+1 − fi,j) T .<label>(5)</label></formula><p>Inserting the gradients n1 and n2 provides w, d and their derivatives with respect to fij:</p><formula xml:id="formula_6">w = (fi,j+1 − fi,j) 2 , w = −2(fi,j+1 − fi,j), w = 2, d = (fi,j − fi−1,j − fi+1,j+1 + fi,j+1) 2 , d = −2(fi,j − fi−1,j − fi+1,j+1 + fi,j+1), d = 2.<label>(6)</label></formula><p>Since ra is a quartic polynomial in fij, its coefficients may be determined from its value and four derivatives with respect to fij:</p><formula xml:id="formula_7">r a = w d + d w, r a = w d + 2w d + wd , r (3) a = 3(w d + w d ), r (4) a = 6w d .<label>(7)</label></formula><p>In analogy to the term for edge a, all other terms of the local residual associated with horizontal and vertical edges are computed. As an example for a diagonal edge, we provide the term for edge b in figure 4:  Again, inserting the gradients n1 and n2 provides w and d:</p><formula xml:id="formula_8">r b = w d, w = " 1 2 (n1 + n2) • (1, 1) T « 2 , d = (n1 − n2) 2 , n1 = (fi+1,j+1 − fi,j+1, fi,j+1 − fi,j) T , n2 = (fi+1,j − fi,j, fi+1,j+1 − fi+1,j) T .<label>(8)</label></formula><formula xml:id="formula_9">w = 1 4 (fi+1,j+1 − fi,j+1 + fi+1,j − fi,j) 2 + 1 4 (fi,j+1 − fi,j + fi+1,j+1 − fi+1,j) 2 , d = (fi+1,j+1 − fi,j+1 − fi+1,j + fi,j) 2 + (fi,j+1 − fi,j − fi+1,j+1 + fi+1,j) 2 .<label>(9)</label></formula><p>The coefficients for r b are obtained in analogy to equation <ref type="bibr" target="#b6">(7)</ref>. The sum of the terms of all twelve edges of triangles incident with pij provide the coefficients for the local residual r(fij). These are all terms depending on fij.</p><p>Now, we need to modify fij, such that the local residual is minimized. Since r(fij) is a quartic non-negative polynomial, it can have at most two minima. The global minimum is among the roots of ∂r ∂fij = 0.</p><p>These can be found by solving a cubic equation. In our implementation, we used Newton iteration with the two starting points min{fi±1,j±1} and max{fi±1,j±1}, providing an accurate estimate for both minima after five iterations on average.</p><p>When implementing and testing our algorithm, we found that the triangulation has a significant impact, see <ref type="figure" target="#fig_4">figure  5</ref>. When orienting all edges from lower left to upper right, features in the opposite direction can not be represented properly, and vice versa. To ensure that our algorithm provides a symmetric solution, we compute two local residuals, r lef t (fij) and r right (fij) where all edges have left and right orientation, respectively. We compute the minimum for both residuals and update fij with the value computed for the minimum of both.</p><p>By minimizing the smallest residual, the algorithm imposes the best orientation of edges for local optimization, see figure 6. We do not store and optimize the triangulation, since for adjacent points opposing orientations might be optimal, which would result in alternating edge flips during the iteration.</p><p>Our combined optimization algorithm for rectilinear grid refinement is summarized as follows:</p><p>1 subdivide the grid in both directions and initialize the new grid points using bilinear interpolation. These new values represent the DOF's for optimization, where the data located at the old grid points is fixed.</p><p>2 For every new grid point pij, compute the coefficients for both local residuals r lef t (fij) and r right (fij). Compute the minimum for both and replace fij by the corresponding value for the smaller residual.</p><p>3 Repeat step 2 for a fixed number of iterations.</p><p>For adaptive refinement on a rectilinear grid, this algorithm may be applied recursively. In the subsequent optimization steps less iterations are necessary, since the data becomes smoother after refinement. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Numerical Examples</head><p>We have implemented and tested our method for different data sets, see figures 7 and 8. Since bilinear interpolation is used for rendering, the interpolation artifacts are shifted to a finer scale where they can be removed by additional refinement steps.</p><p>The algorithm converges quickly, such that ten iterations for all DOF's are more than enough.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Volume Refinement</head><p>In the following, we extend our method to the fairing of isosurfaces in trivariate scalar fields. We provide numerical examples using texture-based volume rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Fairing Isosurfaces</head><p>One way of generalizing the algorithm to hexahedral grids would be a decomposition into tetrahedra. In this case, the edge terms for triangles would simply become face terms. However, there are many choices decomposing hexahedra. First, every voxel could be subdivided into six tetrahedra, leaving a great number of possible triangulations for which residuals had to be computed resulting in prohibitive computational cost.</p><p>Second, every voxel could be subdivided into five tetrahedra, one located in the middle and four at certain corners. There exist two such decompositions, which had to be used alternately on the grid, to avoid cracking. In analogy to the planar case, two possible triangulations would be constructed (depending on the choice for the first voxel). However, the drawback of this decomposition is that every other vertex has 32 incident tetrahedra, and the remaining vertices have only eight. The two competing residuals would be based on a different number of faces, such that this choice of a grid would cause severe artifacts.</p><p>Facing this problem, we decided to apply the bivariate approach to the three sets of slices orthogonal to the canonical directions. This approach was already used for the fairing of single isosurfaces by smoothing three sets of isolines <ref type="bibr" target="#b11">[12]</ref>.</p><p>In our work, we use this approach for volume fairing, rather than considering one particular contour.</p><p>In iteration, we compute one iteration of the planar method for each slice orthogonal to the x-, y-, and z-axis, respectively. When processing these slices, every other slice does not contain data, i.e. all grid values are flexible. To avoid a diffusion of geometric detail, we keep those values fixed that are located between two data points, see figure 9. These are initially determined by trilinear interpolation and are alterated by the passes for the two other directions. Every volume iteration is now composed of three passes, such that every DOF is updated two or three times, depending on its location on the grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Numerical Examples</head><p>We have applied our algorithm to the fairing of a 64 3 down-sampled computer tomography of a human skull and to the 41 3 Marschner/Lobb data set (see http://www.volvis.org/), which is interesting due to its high-frequency details. <ref type="figure" target="#fig_1">Figures 10-12</ref> show volume rendered results obtained by transparent textures <ref type="bibr" target="#b8">[9]</ref>. For rendering, we do not resample the data, however, to avoid additional artifacts. Rearranging the texture planes is only necessary, when the volume is rotated by more than 45 degrees, such that the viewer is facing a different side of the cube. The colors in figures 10-12d) are slightly different, since these images were rendered at twice the resolution of texture planes.</p><p>Figures 10a-c) were rendered by 127 planes, each with a transparent 128 × 128 texture. The color and opacity of the texture (RGBA) is generated by a color-coded transfer function. We did not use gradient mapping, which would also be possible. For higher efficiency, the texture generation is independent of the viewpoint. We use different display lists for the front, side, and top views of the data set. On a consumer-grade PC, we obtained frame rates up to four frames per second.</p><p>The effect of our volume fairing method on a single isosurface is illustrated in <ref type="figure" target="#fig_2">figure 13</ref>. The Marschner/Lobb data set shows impressively that details above the Nyquist frequency cannot be reconstructed properly. For all other features, we obtain visually pleasing results. Computation times for one volume iteration (on the three sets of slices) are summarized in <ref type="table">table 2.</ref> data set resolution no. dof's time [sec] "mlobb" 81 3 462520 22.9 "skull" 127 3 1786293 85.3 "mlobb" 161 3 3641840 178.3 "skull" 253 3 14145894 676.0 <ref type="table">Table 2</ref>: Computation times in seconds for one volume iteration obtained on a PC with a 2GHz processor. The resolutions after subdivision are listed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>We presented an iterative refinement algorithm fairing contours (isolines and isosurfaces) of scalar fields defined on regular grids. Our method significantly reduces the interpolation artifacts and reconstructs features in regions where the sampling distance is close to the Nyquist limit.</p><p>Numerical examples show that the quality of gridded data is significantly improved in regions of high geometric complexity. Coarse features traversing the grid diagonally appear also smoother. The algorithm can be used for adaptive refinement, for example also when zooming into smaller regions of large-scale data sets. We apply our method for texture-based volume rendering exploiting graphics hardware to obtain nearly interactive frame rates.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>October 10 -Figure 1 :</head><label>101</label><figDesc>15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE Isolines of 2D scalar field with diagonal features, defined by samples on a rectilinear grid. a) bilinear interpolation; b) bicubic thin-plate minimization; c) non-linear optimization with bicubic splines; d) proposed refinement method with bilinear interpolation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Variation of g and n are equal in absolute value.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>For a subset Q ⊂ P the corresponding scalar values are degrees of freedom (DOF's) used for optimization. The remaining function values are fixed and represent the interpolated data. Let α ab be the adjacency relation for a, b ∈ T, i.e., α ab is true iff a and b are adjacent triangles. Isolines have constant normal vectors for every triangle.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>The residual at f ij depends on all twelve edges of the six incident triangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>The triangulation has a significant impact on the solution, since features across triangle edges often cannot be properly represented.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :Figure 7 :Figure 8 :</head><label>678</label><figDesc>The combined minimization of both residuals overcomes the problem shown in figure 5. The results were obtained after ten iterations. Results for 8 × 8 dataset. a) bilinear refinement; b) first iteration; c) ten iterations; d) additional refinement of c) after five iterations. Results for 10 × 10 dataset, as in figure 7</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :Figure 10 :Figure 11 :</head><label>91011</label><figDesc>The intermediate slice does not contain data. To avoid diffusion of detail, we keep the scalar values located on the fat lines fixed and use all other values as DOF's. Texture-based volume rendering of skull data. a) trilinear interpolation; b) result after one iteration of the volume method; c) five volume iterations; d) additional refinement with two more iterations. Skull volume from the front (same as figure 10).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 12 :Figure 13 :</head><label>1213</label><figDesc>contrast to updating every flexible grid value once per Marschner/Lobb volume rendering (same refinement as in figure 10). Effect of the algorithm on an isosurface extracted after two steps of refinement. For rendering, we use flat shading. a) skull with trilinear subdivision; b) optimized result (using 5 iterations before and 2 iterations after refinement); c) Marschner/Lobb with trilinear subdivision; d) optimized.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc></figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>provides computa-</cell></row><row><cell cols="4">tion times for ten iterations obtained on a PC with a 2GHz</cell></row><row><cell>processor.</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">data set resolution no. dof's time [sec]</cell></row><row><cell>"X"</cell><cell>13 × 13</cell><cell>120</cell><cell>0.035</cell></row><row><cell>"A"</cell><cell>15 × 15</cell><cell>161</cell><cell>0.041</cell></row><row><cell>"O"</cell><cell>19 × 19</cell><cell>261</cell><cell>0.060</cell></row><row><cell>"X"</cell><cell>25 × 25</cell><cell>456</cell><cell>0.097</cell></row><row><cell>"A"</cell><cell>29 × 29</cell><cell>616</cell><cell>0.125</cell></row><row><cell>"O"</cell><cell>37 × 37</cell><cell>1008</cell><cell>0.200</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Computation times in seconds for ten iterations on small data sets. The resolutions are obtained after subdivision.</figDesc><table /><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Fairing scalar fields by variational modeling of contours</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;03</title>
		<meeting>Visualization&apos;03</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="387" to="392" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Nonlinear anisotropic diffusion in surface processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Clarenz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Diewald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;00</title>
		<meeting>Visualization&apos;00</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="volume">580</biblScope>
			<biblScope unit="page" from="397" to="405" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Implicit fairing of irregular meshes using diffusion and curvature flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Siggraph&apos;99</title>
		<meeting>Siggraph&apos;99</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="317" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Anisotropic diffusion in vector field visualization on euclidean domains and surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Diewald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Preusser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="139" to="149" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">High-quality pre-integrated volume rendering using hardware-accelerated pixel shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics / Siggraph Workshop on Graphics Hardware&apos;01</title>
		<meeting>Eurographics / Siggraph Workshop on Graphics Hardware&apos;01</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fast multiresolution extraction of multiple transparent isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, Data Visualisation</title>
		<meeting>VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, Data Visualisation</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Variational principles in curve and surface design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Brunnett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Santarelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Surveys on Mathematics for Industry</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1" to="27" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Curvature-based transfer functions for direct volume rendering: methods and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tasdizen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;03</title>
		<meeting>Visualization&apos;03</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="513" to="520" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Multiresolution techniques for interactive texture-based rendering of arbitrarily oriented cutting planes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">C</forename><surname>Lamar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;02, Joint Eurographics and IEEE TCVG Symposium on Visualization, Data Visualisation</title>
		<meeting>VisSym&apos;02, Joint Eurographics and IEEE TCVG Symposium on Visualization, Data Visualisation</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="105" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Marching cubes: a high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Siggraph&apos;87</title>
		<meeting>Siggraph&apos;87</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="283" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Shrouds: optimal separating surfaces for enumerated volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Graf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Holmes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Phielipp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, Data Visualisation</title>
		<meeting>VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, Data Visualisation</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="75" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Visualization of volume data with quadratic super splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Roessl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nuernberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;03</title>
		<meeting>Visualization&apos;03</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="393" to="400" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Detecting critical regions in scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization</title>
		<meeting>VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="85" to="94" />
		</imprint>
	</monogr>
	<note>Data Visualisation</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weickert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Anisotropic diffusion in image processing</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Variational surface modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Siggraph&apos;92</title>
		<meeting>Siggraph&apos;92</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="157" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Real-time exploration of regular volume data by adaptive reconstruction of isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="100" to="111" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
