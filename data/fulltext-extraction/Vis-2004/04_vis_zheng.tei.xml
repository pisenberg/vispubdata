<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Topological Lines in 3D Tensor Fields</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
							<email>zhengxq@cse.ucsc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95064</postCode>
									<settlement>Santa Cruz</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
							<email>pang@cse.ucsc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95064</postCode>
									<settlement>Santa Cruz</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Topological Lines in 3D Tensor Fields</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.6 [Computer Graphics]: Methodology and Techniques-Interaction Techniques; hyperstreamlines</term>
					<term>real symmetric tensors</term>
					<term>degenerate tensors</term>
					<term>tensor topology</term>
					<term>topological lines</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Visualization of 3D tensor fields continues to be a major challenge in terms of providing intuitive and uncluttered images that allow the users to better understand their data. The primary focus of this paper is on finding a formulation that lends itself to a stable numerical algorithm for extracting stable and persistent topological features from 2nd order real symmetric 3D tensors. While features in 2D tensors can be identified as either wedge or trisector points, in 3D, the corresponding stable features are lines, not just points. These topological feature lines provide a compact representation of the 3D tensor field and are essential in helping scientists and engineers understand their complex nature. Existing techniques work by finding degenerate points and are not numerically stable, and worse, produce both false positive and false negative feature points. This paper seeks to address this problem with a robust algorithm that can extract these features in a numerically stable, accurate, and complete manner.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The main motivation and goal of this paper is to develop a simple yet powerful representation of 3D real symmetric tensor fields. Topology-based methods prove to yield simplified yet effective representation in many visualization fields. The topological structures are simple for users to understand the underlying data fields yet sensitive enough to capture important features. In most cases, trained users can even reconstruct the data fields by looking at the topological structures. Early work on using topology-based method to visualize tensor fields by <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">7]</ref> lays an important background for this research project. It defines the tensor topology based on degenerate features and discusses its nature in 2D cases in great details, and provides useful knowledge in 3D cases. But we find this early work insufficient in studying 3D tensor topology. Not only is the dimension of the features unknown, but how to numerically extract the topological structures is also obscure. In their previous work, Hesselink mentioned that the dimension of the degenerate features can be points, lines, surfaces or subvolumes. This claim itself is essentially true, but it does not point out the dimension of features in 3D topology in general, i.e., in a typical non-degenerate data. By analogy, although the critical features in 3D vector fields can be lines, surfaces or even subvolumes, we know they are mostly points in typical non-degenerate data. This knowledge is the foundation of the study of topological structure in vector visualization. All the subsequent study on separatrices and other topological features are based on the extraction of the critical points. On the other hand, no topological results on 3D real symmetric tensor fields been published to date indicating that topological tensor features form lines.</p><p>During our research on 3D tensor topology, we confirmed that the topological structures in 3D real symmetric tensor fields form feature lines. This can be verified by an early theorem pointed out by Wigner and von Neumann that the real symmetric degenerate matrices form a variety of codimension two <ref type="bibr" target="#b14">[14]</ref>. This discovery is important in that it tells us that future studies on topology-based method for 3D non-degenerate real symmetric tensor fields should be based on feature lines. We can capture important features, study the underlying tensor fields and even reconstruct the data fields by looking at these extracted topological structural lines with their separatrix surfaces.</p><p>Traditionally, the degenerate features in 3D tensor fields are defined as tensors whose cubic discriminant is equal to zero. Finding roots of discriminants in a stable manner proves to be a challenging task because of their high-orderedness and singularity. In this paper, we find an alternative formulation that decomposes the cubic discriminant into the sum of the squares of seven cubic polynomials referred to as discriminant constraint functions. Through this decomposition, the tensors whose discriminant equals zero are equivalent to the tensor whose individual tensor constraint functions all equal zero at the same time. This formulation eliminates the high-orderedness and singularity problems encountered in existing practice, and thus makes developing stable numerical algorithm to extract degenerate feature lines possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">TENSOR ANALYSIS</head><p>Tensor fields, especially second-order tensor fields, are useful in many medical, mechanical and physical applications such as: fluid dynamics, meteorology, molecular dynamics, biology, astrophysics, mechanics, material science and earth science. Effective tensor visualization methods can enhance research in a wide variety of fields. However, developing an effective algorithm can be difficult because of the large amount of information contained in 3D tensor fields: there are nine independent components in each tensor and six for a symmetric tensor. Users in many research fields are especially interested in real symmetric tensors. In some applications, the data themselves are inherently symmetric. In other cases, symmetric tensor data can be obtained through various decomposition techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Degenerate Tensors and Discriminants</head><p>Each real symmetric tensor can be decomposed into three orthogonal eigenvectors, each of which has an eigenvalue associated with it. They are labeled as major, medium and minor eigenvectors according to the relative magnitudes of their eigenvalues. In nondegenerate cases, these eigenvectors do not cross each other. The degenerate features are then defined as those where the eigenvectors could cross each other. <ref type="bibr">Hesselink et al.</ref> show that the only degenerate features are those having at least two equal eigenvalues <ref type="bibr" target="#b7">[7]</ref>. Fortunately, we do not need to conduct the eigen decomposition to October 10-15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE find the degenerate points. A tensor has two (or three) equal eigenvalues if and only if its discriminant equals zero. The discriminant D3 of a tensor T with eigenvalues λ1, λ2 and λ3 is defined as, <ref type="table">T00 T01 T02  T01 T11 T12  T02 T12 T22      </ref> (1)</p><formula xml:id="formula_0">T =  </formula><formula xml:id="formula_1">D3(T ) = (λ1 − λ2) 2 (λ2 − λ3) 2 (λ3 − λ1) 2<label>(2)</label></formula><p>This can be reformulated into a form that does not require eigen decomposition to explicitly determine eigenvalues as follows:</p><formula xml:id="formula_2">P = T00 + T11 + T22 (3) Q = T00 T01 T01 T11 + T11 T12 T12 T22 + T22 T02 T02 T00 (4) R = T00 T01 T02 T01 T11 T12 T02 T12 T22 (5) D3(T ) = Q 2 P 2 − 4RP 3 − 4Q 3 + 18P QR − 27R 2 (6)</formula><p>From Equation 2, we can easily find that a discriminant is (a) always non-negative; (b) equal to zero if and only if at least two of the eigenvalues are equal. And it is always perfect for computation and numerical purposes because although it is defined on eigenvalues, we do not really need to carry out an expensive eigen decomposition. Instead, we only need to compute Equation 6 which is a polynomial of order six to get the discriminant.</p><p>The justification to define tensors with two or more equal eigenvalues as the degenerate features is simple. In a vector field, the streamline integration is ambiguous at a point with zero velocity. In a tensor field, the hyperstreamline integration is also ambiguous at a point with two equal eigenvalues, because any linear combination of the two eigenvectors is another eigenvector. Since the degenerate tensors are the only places where hyperstreamlines can cross each other, they play an important role in 3D tensor field topological analysis, which divides the space into smaller subspaces such that local hyperstreamlines exhibit similar patterns. In general, the degenerate tensors can be interpreted in a similar fashion as the critical points in vector field visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Dimensional Analysis</head><p>A feature set F is a subset of space S with degree of freedom s and is defined on a domain with dimension D. A point P belongs to F if and only if a set of constraints C are satisfied i.e., C(P ) = 0, where there are c independent equations in C. And if when C(P ) = 0, R degrees of freedom in P become indistinguishable, where we define that there are R degrees of redundancy in the constraints C. Then in a non-degenerate case, the dimension of the feature F on domain with dimension D is H and is defined as:</p><formula xml:id="formula_3">H = D − C − R<label>(7)</label></formula><p>If we already know that the feature set F forms a space with a dimension of G, then the dimension is:</p><formula xml:id="formula_4">H = D + G − S<label>(8)</label></formula><p>That a type of feature is of dimension H ≥ 0 means it stays mostly stable in a form of dimension H for non-degenerate data sets. Although they can also be in forms of other dimensions, such as in cases of unstable features, their existence can be disturbed by small errors introduced by computational or even interpolation methods. Therefore, we define a feature to be stable only if the existence of the feature is not affected by the presence of a small noise -even if the introduction of noise alters the location and properties of the feature. For example, if the intersection point of two lines on a plane is defined as a feature, then the intersection point of two straight lines is simply stable. For the case where the two straight lines lie right on top of each other, the feature turns into a line. However, this case is not stable because although all the points on these overlapping lines are feature points, a small disturbance in the positions or orientations of these two lines will reduce the feature line back to a single feature point. We use this type of dimensional analysis to get our first idea of the dimension of stable features in degenerate and non-degenerate 3D tensors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PREVIOUS WORK</head><p>Early tensor visualization techniques relied on the tensor ellipsoid which deformed a spherical glyph according to the eigenvalues of the tensors. Variations of the basic tensor ellipsoid include drawing eigenvalue scaled axes for the eigenvectors, Haber's disk and rod glyphs <ref type="bibr" target="#b5">[6]</ref>, flow probe <ref type="bibr" target="#b2">[3]</ref>, Laidlaw et al. glyphs using brush strokes <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b11">11]</ref>. More recently, Gordon Kindlmann proposed new glyphs that uses superquadric tensor glyphs to visualize tensors as a combination of spherical, planar and linear tensors <ref type="bibr" target="#b9">[9]</ref>. With few exceptions, particularly for the case of 3D tensor fields, glyphs are used in a sparing manner because of the clutter and occlusion they produce. Hence, they provide a discrete, rather than a continuous view of the tensor field. To address this problem, tensor splats were introduced by [1] to provide a global continuous view of the tensor field. Using a barycentric mapping of linear, planar, and spherical tensors, different parts of the tensor volume can be highlighted.</p><p>A hyperstreamline is basically a streamline defined over an eigenvector field <ref type="bibr" target="#b3">[4]</ref>. Typically, the major eigenvector field is used for integrating the hyperstreamline, while the two other eigenvector fields provide local information along the length of the major hyperstreamline and are mapped to its cross section. One of the weakness of hyperstreamlines is ambiguity in places where the tensors are isotropic or even planar, i.e. the eigenvalues are nearly equal. In these areas, a sudden change in direction of the hyperstreamline may arise. To address this problem, tensorlines were introduced by <ref type="bibr" target="#b18">[18]</ref>. Ambiguities are resolved by taking the anisotropy of the local tensor into account as well as information about orientation of nearby features. This allows the tensorlines to proceed in a relatively smooth path, even in the face of isotropic regions or noise in the data set.</p><p>Topology-based tensor visualization techniques represent the tensor fields in a simple yet powerful way. The critical features are extracted as a simplified version of the underlying data field. Experienced users can understand and even reconstruct the tensor data by looking at their properties and patterns. The critical feature is defined as degenerate tensors where the eigenvalues are identical, and are the only places that the two associated hyperstreamlines can intersect themselves. In 2D tensor fields, there is only one way to obtain a degenerate point: the two eigenvalues must be equal. Hesselink and Delmarcelle used this concept in 2D and discussed the nature of the degenerate points (wedges and trisectors) in great detail. However, it is less successful in 3D, in part because there are two types of degenerate points in 3D: double and triple degenerate points, where two of the three eigenvalues are equal, and all three eigenvalues are identical, respectively. This early work does not fully explore the properties of the double degenerate features and instead focuses on the triple degenerate tensors, whose properties are closer to their counterparts in 2D. In <ref type="bibr" target="#b7">[7]</ref>, they hint that the triple degenerate points (for the double point load data) are connected by a locus of double degenerate points. The paper fails to point out that the dimension of the stable double degenerate features are in fact lines in most of the typical non-degenerate tensor fields. And hence, it did not talk about finding a stable numerical method to extract these feature lines in 3D.</p><p>Although triple degenerate features are useful, they are extremely rare and unstable. Using the dimensional analysis technique, we know the dimensions of triple degenerate features in 3D is of dimension H = D + G − S = 3 + 1 − 6 = −2. G = 1 is due to the fact that the triple degenerate tensors are only an identity tensor times a constant, so that they have only one degree of freedom. S = 6 is because a real symmetric tensor has six independent components, hence it has six degrees of freedoms. A dimensionality that is less than zero means the feature is unstable. In other words, not only is it extremely rare in real data, but its very existence will also be easily dissolved by small errors introduced by numerical and interpolation methods. This property dramatically limits the usefulness of triple degenerate tensors in practical contexts. Even in time-varying data, which has a dimension of four, the dimensions of the feature of H = 4 + 1 − 6 = −1, is still unstable. Actually, in our experiments with many real time-varying stress datasets, we have not found any triple degenerate points. The only data set that contains triple degenerate points is from a synthetic data set known as the Boussinesq double point load stress tensor.</p><p>In complex 2D tensor fields, the extracted topology may also be very complex. <ref type="bibr" target="#b17">[17]</ref> proposed algorithms to simplify 2D tensor topology as well as track them in time-varying 2D tensor fields <ref type="bibr" target="#b16">[16]</ref>.</p><p>Anisotropy in tensor fields are important features in some fields such as diffusion tensor MRI. In 3D, tensors are classified as being linear or anisotropic where there is a predominant eigenvalue and two other smaller eigenvalues, planar where there are two roughly equal eigenvalues and one smaller one, and spherical or isotropic where there are three roughly identical eigenvalues. <ref type="bibr" target="#b10">[10]</ref> uses barycentric coordinates to map these properties to color and opacity in volume rendering tensor fields. An alternative approach, called HyperLIC, was proposed by <ref type="bibr" target="#b20">[20]</ref> to highlight anisotropy using textures. Linear tensors are represented by highly correlated, high contrast textures, while isotropic tensors end up as blurry textures with no preferred orientation.</p><p>Using the physical analogy of bending steel beams under load, <ref type="bibr" target="#b1">[2]</ref> used deformation to visualize the effects of tensor fields. Idealized objects such as lines, surfaces and subvolumes are deformed under tensor transformations. This was further improved by <ref type="bibr" target="#b19">[19]</ref> to provide a globally consistent deformation based on a collection of local deformations. Calculations were carried using a system of springs.</p><p>Extending the idea of deformation to optics, <ref type="bibr" target="#b21">[21]</ref> added three alternative ways of visualizing tensors: (a) First, light rays were traced through a tensor volume and bent according to the local tensor properties that they encounter. The bent rays show divergent or convergent regions in the tensor field. (b) Second, the exit points of the rays are collected, as in caustic ray tracing. Different wavelengths are simulated and color separation on the resulting caustic image provides a dense visualization of divergence and convergence from a given viewpoint. (c) Third, the tensor field is treated as a lens that distorts an image. Studying the distortion of a known image, e.g. checkerboard pattern, reveals compressive and tensile regions in the tensor field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">METHODS</head><p>In this section, we first show that the features are indeed lines in non-degenerate data set. Then we discuss the details of our numeri-cal methods to extract the degenerate features in 3D real symmetric tensor fields.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Dimensionality of Tensor Features</head><p>Before we can extract the critical features from 3D tensor fields, we need to know what kind of features we are looking for. Algorithms to locate points, lines, surfaces and volumes employ very different strategies. As mentioned earlier, we found that for most non-degenerate 3D tensors, the dimensionality of the critical feature is one and hence they form feature lines. This can be shown using dimensional analysis described earlier, or with the theorem by von Neumann and Wigner which states that the real symmetric degenerate matrices form a variety of codimension two <ref type="bibr" target="#b14">[14]</ref>. Codimension is defined as the difference of the dimensions between a subspace and the space where it is defined. An interpretation of this theorem is that one of the two codimensions is introduced by the constraint that at least two eigenvalues must be equal. The other codimension is introduced implicitly by the fact that when two eigenvalues are equal, the associated eigenvectors are undetermined up to one degree of freedom, since any orthogonal linear combinations of the eigenvectors yield another valid pair. For real symmetric 3D tensors, we have six degrees of freedom. Hence, it also follows from this theorem that these tensors form a variety of dimension four. An approach to parameterize the 3D degenerate tensors using four parameters is introduced in <ref type="bibr" target="#b22">[22]</ref>.</p><p>For a tensor field with a spatial dimension of D = 3, the constraint that two eigenvalues are equal is a constraint with a dimension of C = 1. In the meantime, the eigenvectors have R = 1 degree of redundancy as shown above. Thus the dimension of the features is:</p><formula xml:id="formula_5">H = D − C − R = 3 − 1 − 1 = 1.</formula><p>That means, for a non-degenerate tensor field, the degenerate features are lines. Using the theorem by von Neumann and Wigner, we see that dimension D = 3 and codimension is 2, so the features in the data form a subspace of dimension 3 − 2 = 1, i.e. lines. While the main features are lines, it is still possible to have features that are points, surfaces or subvolumes, but those types of features would be considered unstable and do not persist. Those types of unstable features are also less common in most 3D tensor fields. As such, we focus our tensor feature extraction to extract feature lines rather than surfaces or subvolumes. We still need to extract points as these form the basis for the feature lines. Because of this design criterion, features that are surfaces (e.g. in the single point load data) or subvolumes may not be detected as readily as feature lines. This limitation is not insurmountable, but is rather based on the effective use of limited resources in finding features that are not as common nor stable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Constraint Functions</head><p>To find the critical degenerate tensors, we need to locate those tensors whose discriminants are zero. Although Equation 6 provides an elegant representation for evaluating the discriminant without having to perform eigen decomposition, it is not very suitable for finding roots. In Equation 6, the discriminant of a real symmetric tensor is a polynomial of order six. Since it is always non-negative, the degenerate tensor also happens to be its minimum. A good method widely used to find the root of an equation is to detect the change of signs and then to recursively bisect the domain of interest. But because the degenerate feature is itself a minimum, there is no change of sign at all. Relying on the gradients is also dangerous, because the gradients are notoriously unstable unless they are very close to the feature. Due to this high-orderedness and singularity, directly finding the root of a cubic discriminant stably is very difficult. Instead, we look for another representation of the discriminant.</p><p>In our investigation so far, we found that while <ref type="bibr" target="#b8">[8]</ref> pointed out that not all non-negative polynomials can be broken down into the sum of squares of polynomials, the cubic discriminant can be written as the sum of the squares of seven polynomials. We also learned that not only can the discriminant of a second-order tensor of any dimension be expressed as the sum of squares <ref type="bibr" target="#b13">[13]</ref>, but our solution to the 3D case of seven equations is optimal <ref type="bibr" target="#b15">[15]</ref>. Therefore, the definition of degenerate tensors can also be expressed as the tensors where the seven discriminant constraint functions are all zero at the same time. We use these seven cubic equations to extract the feature lines from 3D tensor fields. The seven discriminant constraints are:</p><formula xml:id="formula_6">fx(T ) = T00(T 2 11 − T 2 22 ) + T00(T 2 01 − T 2 02 ) + T11(T 2 22 − T 2 00 ) + T11(T 2 12 − T 2 01 ) + T22(T 2 00 − T 2 11 ) + T22(T 2 02 − T 2 12 ) fy1(T ) = T12(2(T 2 12 − T 2 00 ) − (T 2 02 + T 2 01 ) + 2(T11T00 + T22T00 −T11T22)) + T01T02(2T00 − T22 − T11) fy2(T ) = T02(2(T 2 02 − T 2 11 ) − (T 2 01 + T 2 12 ) + 2(T22T11 + T00T11 −T22T00)) + T12T01(2T11 − T00 − T22) fy3(T ) = T01(2(T 2 01 − T 2 22 ) − (T 2 12 + T 2 02 ) + 2(T00T22 + T11T22 −T00T11)) + T02T12(2T22 − T11 − T00) fz1(T ) = T12(T 2 02 − T 2 01 ) + T01T02(T11 − T22) fz2(T ) = T02(T 2 01 − T 2 12 ) + T12T01(T22 − T00) fz3(T ) = T01(T 2 12 − T 2 02 ) + T02T12(T00 − T11) D3(T ) = fx(T ) 2 + fy1(T ) 2 + fy2(T ) 2 + fy3(T ) 2 + 15fz1(T ) 2 + 15fz2(T ) 2 + 15fz3(T ) 2<label>(9)</label></formula><p>A tensor is degenerate if and only if all of its seven discriminant constraint functions are zero. This is the condition that we employ to extract the critical features in 3D tensor fields. Its first advantage is that the constraint functions are only cubic polynomials, instead of a polynomial of order of six which tend to oscillate more. This property leads to a more stable and accurate numerical algorithm. In addition, the requirement that all seven constraint functions be zero at the same time depends on the tensor value only and not on the gradient calculated from adjacent tensors. Hence, the algorithm yields a more accurate result than the algorithms that rely on finding critical points where the gradients of the discriminants are zeros. Its second advantage is that the constraint functions can be both positive or negative, as opposed to always being non-negative. This property allows us to perform a fast and inexpensive check for the existence of features. And finally, the reformulation also does not require eigen decomposition.</p><p>Although degenerate features require that all seven discriminant constraint functions be zero at the same time, pseudo-features with less than seven constraints satisfying this criterion are also very interesting (See <ref type="figure" target="#fig_1">Figure 1)</ref>. In our experiments, some of these pseudofeature points have three to five constraints as zeros. Our study into them reveals some other interesting properties of tensor fields. More research into these pseudo-features is also necessary to study their significance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Root Finding</head><p>In order to extract smooth and continuous feature lines in 3D tensor fields, we look at each of the 6 faces of every hexahedral cell. For each face, we extract the intersection point(s) of the feature lines. These points are then connected to generate a continuous feature line.</p><p>We know that the degenerate 3D tensors on a 2D slice are mostly points. The only exception is if the feature line lies exactly on the face. But even for that case, that feature line will intersect an adjacent non-coplanar face on the edge, or possibly corner vertex. To  find these feature (intersection) points that satisfies all seven constraints simultaneously, we employ a modified version of Newton-Raphson algorithm to solve such a over-specified system of equations.</p><p>Assume the tensor field is T (X). For the feature points X * , we have −→ CF (X * ) = CFi(X * ) = 0, for i = 1, ..., 7, where −→ CF (X) is an assembly of the seven constraint functions into one vector function. Using the modified Newton-Rhapson method and an initial guess of Xn, we have the following updating formula,</p><formula xml:id="formula_7">Xn+1 = Xn − ∂ −→ CF ∂X T • ∂ −→ CF ∂X −1 ∂ −→ CF ∂X T • −→ CF X=Xn (10) ∂ −→ CF ∂X = ∂ −→ CF ∂T • ∂T ∂X<label>(11)</label></formula><p>Note that we calculate the ∂ −→ CF ∂X from the chain rule using ∂ −→ CF ∂T and ∂T ∂X rather than from the interpolated values of −→ CF on the grid using finite difference methods for higher precision. ∂ −→ CF ∂T is calculated from the formula of the tensor constraints, and ∂T ∂X is from the interpolated tensor values. We used both the bilinear and bicubic natural spline interpolations.</p><p>Using the center of each cell as the initial guess for an intersection point, we find that this method converges to the actual intersection point within five iterations in most non-degenerate cases with a precision up to 10 −9 , and it almost never misses a feature point if it exists. Additional points are obtained by subdividing the cell face. This modified Newton-Rhapson method on constraint functions is superior in speed, accuracy and precision compared to other methods developed directly based on the cubic discriminants. For example, we also implemented a comparison algorithm based on cubic discriminant that searched for its minimum using conjugate gradient methods. Not only is it about 50 times slower, using any precision less than 10 −6 will yield a false negative rate of over 50%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Connecting Feature Points</head><p>Some cells may have more than one pair of intersection points and hence more than one feature line. We use a multi-pass approach to connect these intersection points. We only examine candidate cells that contain intersection points on at least one of their six faces. In the first pass, all candidate cells containing exactly two intersection points are processed by: (a) simply connecting those two points, (b) recording the orientation of the line segment as tangents at the end points, and (c) marking the cell as processed. In the subsequent passes, their unprocessed neighboring candidate cells are processed by connecting a line segment between each pair of intersection points in such a way as to minimize the angle deviation between the tangent recorded at the end point and the line towards other intersection points within the cell. Each neighboring candidate cell is marked as processed, and the procedure continues until there are no more candidate cells.</p><p>In our current implementation, we use this iterative method to generate the tangent lines on feature points and ultimately resolve the line connections between multiple points. In the future, we plan to calculate the tangent of the degenerate tensor line at a specific feature point analytically instead of from the post-processing method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Categorization of Degenerate Lines</head><p>There are two cases where hyperstreamlines cross each other in double degenerate tensors. The first case (type P for planar) is when the major and medium eigenvalues are identical, and the second case (type L for linear) is when the medium and minor eigenvalues are identical. We define a quantity K, that measures the eigen difference, of a tensor T with eigenvalues λ1 ≤ λ2 ≤ λ3:</p><formula xml:id="formula_8">K = 2λ2 − (λ1 + λ3)<label>(12)</label></formula><p>The eigen difference K measures whether the tensor at a point is closer to type P or type L. It is easy to show that K returns a positive value for a type P degenerate tensor, and returns a negative value for a type L degenerate tensor. When K equals zero, the three eigenvalues are the same, and the tensor is triple degenerate. We color code the feature lines with their associated eigen differences: warm colors for type P and cool colors for type L. The closer the color is to pure green, the closer the tensor is to triple degeneracy (See <ref type="figure" target="#fig_5">Figures 2 -4</ref>). Since triple degenerate points are the only locations where a type P and type L feature line can cross, coupled with the color mapping for K, the combined presentation provides a strong visual clue for finding triple degenerate points even though these are not explicitly calculated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Higher Order Degeneracy</head><p>Previous researchers have pointed out that tensor features may have higher order degeneracy than just points, and may include lines, surfaces and subvolumes. It can be proven that not only is the discriminant zero at the degenerate tensors, but also the first order gradient of the discriminant is also equal to zero. We hypothesize that the higher order degeneracy happens only where the second or higher order of discriminant gradients are zeros. One can find this kind of phenomenon only under very special conditions. For example, we can show that for the single point load data, there are two types of degenerate features: one is a feature line directly below the point load direction; the other is a surface spreading symmetrically down from the point load. The higher order surface degeneracy happens in this particular dataset because of a delicate equilibrium achievable only in a purely synthetic data. This equilibrium can be easily disturbed by noise or other forces, and the feature will fall back to the more stable form of lines. This is confirmed in the double point load data. In this data, although the discriminants on the degenerate surface are still very small, as indicated by the weak transparent surface in <ref type="figure" target="#fig_5">Figure 4</ref>, the stable tensor features are lines.</p><p>In the same figure, we notice that near the apex of these two weak surfaces, the feature lines seem to break apart. We think that in the vicinity of those two points, the appropriate tensor feature is a small feature surface. Since our current algorithm is not designed for finding such features, it appears as an artifact. This is an area that we plan on addressing as well -even though such features are generally unstable.</p><p>Another generally unstable higher order feature is feature subvolumes. We think that in some type of tensor data sets, such as diffusion tensor data sets, it may be more likely to find such features. The locations of such features can be found in purely isotropic regions, and while they may not be of too much interest, we also plan to investigate this aspect, just for completeness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION ISSUES</head><p>In this section, we discuss two implementation issues affecting the speed and accuracy of the results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Pre-filtering</head><p>Methods based on constraint functions are superior over those directly based on discriminants because their signs could either be positive or negative around the features. This property allows us to detect sign changes in the vicinity of the tensor features without referring to the unpredictable gradients of tensors. This property also allows us to quickly eliminate those cells without sign changes from further consideration when finding tensor features within them, thereby speeding up the whole feature extraction process. The pre-filtering procedure proceeds by successively evaluating the seven constraint functions for each cell. If a cell shows that there is no sign changes from any single one of the seven constraint functions, and their values are significantly away from zero, then subsequent evaluations are skipped since the cell can be eliminated as a candidate cell.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Interpolation Methods</head><p>Usually the features lines are stable in non-degenerate data set. But in rare cases, such as when the features are higher order e.g. surface or subvolume features, the feature lines become unstable in that a small amount of noise could dramatically change the features. In our experiments, this occurs in one area of a synthetic data -the bifurcating branch below the loads in the double point load stress tensor. More details about this data set will be discussed in Section 6.</p><p>In this area, not only are the discriminants and their first order gradients zero, but the second order gradients are also very small. This higher order degeneracy makes degenerate tensor features extremely sensitive even to the small noise introduced by interpolation. <ref type="figure">Figure 3</ref> shows the effects of varying the interpolation method. In both images, we first compute the tensor values on a 32 3 grid and apply our numerical method to extract the degenerate tensors with a specified interpolation method. To confirm the correctness of the results, we also resampled the tensor values from the original grid to a higher resolution grid of 128 3 using the same interpolation method and volume rendered it. The colors are mapped to the discriminant, where less transparent blue colors are closer to zero, and more transparent red colors have higher values. The features should be located in the blue regions. Since the implementation of the resampling and the volume rendering is straightforward, it also serves as a visual verifier for our numerical algorithm. <ref type="figure">Figure 3</ref> <ref type="bibr">(a)</ref> uses linear interpolation, and the degenerate features lines appear broken and disorganized. In contrast, the result from tricubic natural spline interpolation is shown in <ref type="figure">Figure 3</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>We experimented with four data sets to test out our degenerate tensor extraction algorithm. The first is a 2D rectangular patch with symmetric 3D tensors at the four corners that have been set randomly (see <ref type="figure" target="#fig_1">Figure 1)</ref>. The tensor values within the patch are obtained through linear interpolation. This synthetic data corresponds to tensors on a face of a 3D cell. The second is a 3D cell with symmetric 3D tensors on its eight corners which are also set randomly (see <ref type="figure">Figure 2</ref>). It is sampled into a higher resolution for smoother features lines. The third is the stress tensor data in a semi-infinite volume with two point loads (see <ref type="figure" target="#fig_5">Figure 4</ref>). The fourth is the deformation tensors in the computed flow past a cylinder with hemispherical cap (see <ref type="figure">Figure  5</ref>). For <ref type="figure" target="#fig_5">Figures 2 to 4</ref>, the colors of the volumes are mapped to the tensor discriminant (Equation 6) with more transparent cooler colors mapped to lower values and more opaque warmer colors mapped to higher values. Degenerate tensors can be found in the cool blue regions. Digital images can be accessed online at: www.cse.ucsc.edu/research/avis/tensortopo.html. <ref type="figure">Figure 2</ref> shows degenerate tensors in a 3D cell form feature lines (rendered as tubes). Note that the feature lines are not hyperstreamlines, rather they are where the major and medium, or the medium and minor, or all three hyperstreamlines intersect each other. The color of the tubes are mapped to the eigen difference, where the type P lines are mapped to warmer colors and the type L lines are mapped to cooler colors. Only the faint green is visible in the vicinity of the tubes because the tubes are in the blue regions. We see that complex feature lines can form even from a simple linearly interpolated random tensor field. In (a), the type P and L lines swirl around each other, while in (b), the two types of lines form a complicated structure. <ref type="figure" target="#fig_5">Figure 4</ref> shows the double point load stress tensors. The yellow arrows indicate the two point loads, and the two magenta spheres are the triple degenerate points. We can see the line of double degeneracy connecting these two stress-free points as alluded to in <ref type="bibr" target="#b7">[7]</ref>. Other very interesting feature lines are also extracted. The first is a vertical loop that lies directly under the double degenerate feature line connecting the two triple degenerate points. This feature is not present in the single point load data. This loop feature is also stable in the sense that it persists even as the magnitudes of the two point loads are varied. The second is how the blue feature line below each of the point load bifurcate and then reconnect. These two structures and the vertical loop are connected together by a type P feature line running between the two point loads. Looking from the top view in (b), we see another interesting feature which is the circular feature line that connects the two point loads and the two triple degenerate points. We need to further investigate the physical significance of these features that have not been seen in previous visualizations of the data. It is worth noting that the stress tensor is dominated by only one single load in the vicinity of the load point, so it is locally similar to the single point load stress tensor where the degenerate  tensor form a surface symmetrically spreading away from the load point. Since our algorithm is designed for extracting features lines, it produces artifacts when the features form a surface or subvolume. <ref type="figure">Figure 5</ref> shows degenerate lines in the deformation tensors of the computed flow past a cylinder with a hemispherical cap. Only a portion of the data close to the cap is shown because most of the interesting features are found there. First, we see a curved line on the cap shown by the black arrow. It matches some of the patterns of the velocity topology from the same data set. There are more features at the upper half of the data because the flow there is more turbulent. <ref type="figure" target="#fig_0">Figure 5(a)</ref> is from a oblique view. Most of the features are close to the geometry of the object except a complicated branch structure which extends away from the geometry. It contains a small cyan horn shape indicated by the pink arrow, two green ring shapes, and a bifurcating structure. <ref type="figure">Figure 5</ref>(b) is from a top view. Again, we see that most of the interesting features are very close to the geometry of the object. We also see a strong type L (blue) bulb shape structure that extends to the end of the cylinder. Near the cap, it intertwines with a strong type P (red) heart shape structure. This phenomenon is interesting in that although these two structures are very close, they do not cross each other, because there is no green color at their visual cross points. It also means the tensors are quite turbulent in this area, because large variations are happening in very close proximity. There are many other interesting features shown in these two images. In the near future, we will investigate the significance of these features and finish a formal analysis on the role of the degenerate tensor lines in 3D tensor field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>We pointed out that the degenerate tensors form lines in 3D real symmetric tensor field. This knowledge lays a foundation for future research on topology based methods to visualize 3D tensor fields. Furthermore, we presented an algorithm to extract degenerate tensor lines. This algorithm uses a new formula that decomposes cubic discriminant into a sum of squares of seven polynomials. Feature points are first extracted on each face of a candidate hexahedral cell, and the points connected in an iterative fashion to generate feature lines. We applied this algorithm on several data sets including randomly generated tensor fields which allowed us to stress test our algorithm, several analytical data set e.g. single and double point load data sets to validate our results, and several computational data set e.g. flow past cylinder with hemispherical cap, to test its practical use. The results point to new knowledge, for the case of the double point load data set, as well as additional areas of investigation such as studying the correlation between the interesting patterns we saw in the real data sets and the underlying physics. These new insights will be useful in seeding hyperstreamlines, topology simplification, and tracking topology in time-varying data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">ACKNOWLEDGMENT</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>( a )</head><label>a</label><figDesc>Two degenerate points (b) Three degenerate points</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>White dots are degenerate points indicating places where all seven constraint functions are zero. Each colored curve corresponds to a constraint function being equal to zero. Places where multiple curves intersect are where multiple constraint functions are satisfied simultaneously. The background is pseudo-colored by the discriminant functions. The data is a 2D slice of a randomly generated 3D tensor field.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(b). We can see it fixed (a) First set (b) Second set</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>Randomly generated 3D tensors. Warmer line colors are closer to type P degenerate points where major and medium hyperstreamlines intersect, while cooler line colors are closer to type L degenerate points where medium and minor hyperstreamlines intersect. The rest of the volume is pseudo-colored by the discriminant using cool colors for low discriminant values (closer to feature lines) and warm transparent colors for distant values.the problem almost perfectly. Actually, we also tried other higherorder interpolation methods such as: tricubic, triquartic, triquintic and Hermite interpolation. They all have improved results over the trilinear interpolation, but do not address the problem as satisfactorily as the tricubic natural spline interpolation. Closeup of the bifurcating feature lines below the point loads in the double point load data set. Feature lines are colored by the eigen difference while the volume is colored by the discriminant using cool colors for low discriminant values (closer to feature lines) and warm transparent colors for distant values. (a) Trilinear interpolation, (b) Tricubic natural spline interpolation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Double point load data. Yellow arrows indicate point load, while the 2 magenta spheres show the location of the triple degenerate points. Feature lines are colored by the eigen difference while the volume is colored by the discriminant.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This work is supported by NSF ACI-9908881. The flow data is courtesy of NASA. We would also like to thank Peter Lax, Beresford Parlett, and Xavier Tricoche for their correspondence and suggestions. The comments by the reviewers also helped to improve this paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Tensor splats: Visualising tensor fields by texture mapped volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bhalerao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-F</forename><surname>Westin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Sixth International Conference on Medical Image Computing and Computer-Assisted Intervention (MICCAI&apos;03)</title>
		<meeting><address><addrLine>Montreal, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-11" />
			<biblScope unit="page" from="294" to="901" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interactive deformations from tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Boring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;98</title>
		<editor>D. Ebert, H. Hagen, and H. Rushmeier</editor>
		<meeting>IEEE Visualization &apos;98</meeting>
		<imprint>
			<publisher>Tensor / Flow</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="297" to="304" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A probe for local flow field visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>De Leeuw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;93</title>
		<editor>G.M Nielson and D. Bergeron</editor>
		<meeting>IEEE Visualization &apos;93</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="39" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Visualizing second-order tensor fields with hyperstreamlines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="25" to="33" />
			<date type="published" when="1993-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The topology of second-order tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;94</title>
		<editor>R.D. Bergeron and A.E. Kaufman</editor>
		<meeting>IEEE Visualization &apos;94</meeting>
		<imprint>
			<publisher>Flow Features and Topology</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="140" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualization techniques for engineering mechanics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Systems in Engineering</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="50" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Oblique View (b) Top View Figure 5: Degenerate lines in deformation tensors of flow past a cylinder with a hemispherical cap</title>
		<imprint/>
	</monogr>
	<note>Feature lines are colored by the eigen difference</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The topology of symmetric, second-order 3D tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lavin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="1997-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Ȗber die darstellung definiter formen als summen von quadraten</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hilbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Annalen</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="342" to="350" />
			<date type="published" when="1888" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Superquadric tensor glyph</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gordon</forename><surname>Kindlmann</surname></persName>
		</author>
		<ptr target="http://www.cs.utah.edu/˜gk/papers/vissym04/" />
	</analytic>
	<monogr>
		<title level="m">Vissym&apos;04</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Hue-balls and littensors for direct volume rendering of diffusion tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">M</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="183" to="189" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visualizing multivalued data from 2D incompressible flows using concepts from painting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Kirby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Marmanis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Laidlaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 99</title>
		<editor>David Ebert, Markus Gross, and Bernd Hamann</editor>
		<meeting>Visualization 99<address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="333" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Visualizing diffusion tensor images of the mouse spinal cord</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Kremers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Avalos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Russell</forename><surname>Jacobs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carol</forename><surname>Readhead</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 98</title>
		<meeting>Visualization 98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="127" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">On the discriminant of real symmetric matrices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">D</forename><surname>Lax</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications on Pure and Applied Mathematics</title>
		<imprint>
			<biblScope unit="page" from="1387" to="1396" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Linear Algebra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lax</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Wiley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The (matrix) discriminant as a determinant</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">N</forename><surname>Parlett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Linear Algebra and its Applications</title>
		<imprint>
			<biblScope unit="volume">355</biblScope>
			<biblScope unit="page" from="85" to="101" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Tensor topology tracking: A visualization method for time-dependent 2D symmetric tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Topology simplification of symmetric, second order 2D tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xavier</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermannn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="275" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Tensorlines: Advection-diffusion based propagation through diffusion tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Weinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">C</forename><surname>Lundberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;99</title>
		<editor>D. Ebert, M. Gross, and B. Hamann</editor>
		<meeting>IEEE Visualization &apos;99</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="249" to="254" />
		</imprint>
	</monogr>
	<note>Vector and Tensor Visualization</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Volume deformation for tensor visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 02</title>
		<meeting>Visualization 02<address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="379" to="386" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hyperlic</surname></persName>
		</author>
		<title level="m">Proceedings of Visualization 03</title>
		<meeting>Visualization 03<address><addrLine>Seattle</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="249" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Interaction of light and tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
		<ptr target="www.cse.ucsc.edu/research/avis/tensorray.html" />
	</analytic>
	<monogr>
		<title level="m">VisSym&apos;03</title>
		<imprint>
			<date type="published" when="2003-05" />
			<biblScope unit="volume">295</biblScope>
			<biblScope unit="page" from="157" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Degenerate 3D tensors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xavier</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
		<idno>UCSC-CRL-04-09</idno>
		<imprint>
			<date type="published" when="2004" />
			<pubPlace>Santa Cruz</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
