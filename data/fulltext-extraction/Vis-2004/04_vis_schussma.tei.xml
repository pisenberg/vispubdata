<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Anisotropic Volume Rendering for Extremely Dense, Thin Line Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Schussman</surname></persName>
							<email>schussman@slac.stanford.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of California at Davis</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stanford</forename><surname>Linear</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of California at Davis</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Accelerator</forename><surname>Center</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of California at Davis</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
							<email>ma@cs.ucdavis.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of California at Davis</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Anisotropic Volume Rendering for Extremely Dense, Thin Line Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:34+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation</term>
					<term>I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism</term>
					<term>I.4.10 [Image Processing]: Image Representation-Volumetric anisotropic lighting, line data, scientific visualization, vector field, volume rendering</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Many large scale physics-based simulations which take place on PC clusters or supercomputers produce huge amounts of data including vector fields. While these vector data such as electromagnetic fields, fluid flow fields, or particle paths can be represented by lines, the sheer number of the lines overwhelms the memory and computation capability of a high-end PC used for visualization. Further, very dense or intertwined lines, rendered with traditional visualization techniques, can produce unintelligible results with unclear depth relationships between the lines and no sense of global structure. Our approach is to apply a lighting model to the lines and sample them into an anisotropic voxel representation based on spherical harmonics as a preprocessing step. Then we evaluate and render these voxels for a given view using traditional volume rendering. For extremely large line based datasets, conversion to anisotropic voxels reduces the overall storage and rendering for O(n) lines to O(1) with a large constant that is still small enough to allow meaningful visualization of the entire dataset at nearly interactive rates on a single commodity PC.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Many scientific investigations require the study of complex 3D or 4D vector fields such as fluid flow field, electric field, and magnetic field. Displaying the field lines directly is popular. However, when the field consists of a large number of dense, intertwined lines, it becomes very difficult to depict the spatial relationships between the lines and their intrinsic global and local structures. For example, one problem, known as the dark current problem, under study by the scientists at the Stanford Linear Accelerator Center (SLAC) for the design of National Linear Collider (NLC) requires visualization of very dense particle paths from the simulation of particle accelerator structures. Even in the 2D case, the paths become a tangled mess long before global patterns emerge. Another source of line data results from integrating a very large number of streamlines through CFD data to capture intricate structural details in velocity and vorticity fields.</p><p>The visualization challenge is to convey, clearly and interactively, the global structure of the dark current particle paths, or to show their relationship with electric and magnetic fields. This is a more difficult problem than simple vector field visualization because each point in a vector field maps to exactly one vector, but for path data, a point may map to any number of paths. For vector field visualization using streamlines, the line density can be adjusted by changing the number and placement of seed points. However, for measured or simulated path data, all paths are potentially significant so no path can be automatically discarded to reduce path density.</p><p>This paper presents Anisotropic Volume Rendering (AVR), a new technique making possible the depiction of extremely dense, fine field lines. Our basic approach is to subdivide the region of interest into cubes, which have their line data sampled and converted into voxels with anisotropic radiance and opacity. Voxels are represented efficiently by non-linear approximation where only significant spherical harmonics coefficients from a truncated Laplace series are stored. Direct volume rendering is then performed on traditional voxels computed from the anisotropic voxels, each evaluated according to a given viewing direction. Interactive scaling of line thickness is possible. The resulting voxel data size has a fixed upper bound, thereby enabling an overview of extremely large data on a commodity PC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Previous Work</head><p>Spherical harmonics were first introduced into computer graphics in 1987 for representing bidirectional reflection functions from surface bump maps <ref type="bibr" target="#b2">[Cabral et al. 1987]</ref>. In general, they are useful for sampling and reconstructing a scalar function on a sphere <ref type="bibr" target="#b4">[Glassner 1995]</ref>. In particular, they have been used for representing BRDFs for material surfaces and directional intensity distributions for surfaces <ref type="bibr" target="#b12">[Sillion et al. 1991]</ref> and, more recently, for real-time rendering using complex environment maps converted into the frequency domain <ref type="bibr" target="#b10">[Ramamoorthi and Hanrahan 2001]</ref>. One approach to anisotropic function representation uses a nonlinear (discarding insignificant coefficients) wavelet lighting approximation <ref type="bibr" target="#b8">[Ng et al. 2003</ref>] to be faster than linear spherical harmonics. However, one can obtain speed increases by discarding insignificant spherical harmonic coefficients in a similar way, which is what we do. So in the same sense, our approach would be classified as using a non-linear Laplace Series approximation. The use of spherical harmonics for capturing anisotropy has so far been limited to one-sided surfaces <ref type="bibr" target="#b10">[Ramamoorthi and Hanrahan 2001;</ref><ref type="bibr" target="#b13">Sloan et al. 2002;</ref><ref type="bibr" target="#b8">Ng et al. 2003</ref>].</p><p>The illuminated line work most closely related to ours is that by <ref type="bibr" target="#b14">[Stalling et al. 1997]</ref>. Their work uses 2D textures of precomputed illumination based on the work of <ref type="bibr" target="#b1">[Banks 1994</ref>], which treats lines as 1-manifolds in 3-space. A consequence October 10-15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 Â©2004 IEEE of this is that, for any point on the curve, there is no clear surface and therefore no clear surface normal vector (rather, there are an infinite number of surface normals which are constrained to a plane). The diffuse term for the shading equation suffers from "excess brightness" which can be alleviated by exponentiating that term. Although values for this exponent are presented, we have found that some manual adjustment is needed in practice. Line primitives have some additional drawbacks. They do not provide the perspective depth cue. For extremely dense sets of lines, transparency is needed to prevent the rendering of an opaque mass. But transparency introduces its own set of difficulties. Limited precision in graphics hardware can cause severe quantization error for very transparent lines. Transparency also calls for back-to-front compositing of the line fragments, but this sorting can be prohibitively expensive for extremely large datasets. It is pointed out by <ref type="bibr" target="#b14">[Stalling et al. 1997</ref>] that back-to-front compositing of approximately sorted segments (by an individual axis) yields only about 1% pixels with somewhat incorrect color, and that display lists of pre-sorted lines (along the major axes) speeds rendering. However line datasets too large to fit in memory preclude storing multiple sorted copies and the use of display lists. Furthermore, for very dense lines, approximate sorting can result in significant visual artifacts. Our approach is more closely related to what Banks refers to as promoting the manifold dimension; that is, we treat curves as tubes, so that normal vectors are cleanly defined, and there is a real surface with a visible side over which to integrate a shading equation. However our goal is to handle tubes projecting to have sub-pixel widths (consistent with averaging down a supersampling of shaded geometric tubes), so these integrated values are accumulated into floating point spherical harmonics coefficients for anisotropic voxels. This provides sub-pixel illumination consistent with multi-pixel illumination, correct depth ordering (except within an individual voxel), a fixed upper bound on memory requirements regardless of the line data size, and provides the perspective depth cue if the volume renderer renders in perspective. This also accumulates all line contributions to a voxel prior to entering graphics hardware, so that an individual voxel is not subject to accumulated quantization error in hardware. Volume haloing <ref type="bibr" target="#b5">[Interrante and Grosch 1998</ref>], which requires more than one pixel of projected tube thickness, is not appropriate for what we intend to accomplish.</p><p>The work most closely related to the volumetric aspect of ours uses three dimensional textures to render fur <ref type="bibr" target="#b6">[Kajiya and Kay July 1989]</ref>, and mentions the desirability of the Painter's Illusion in which far more detail is suggested than is actually present on very close examination of a region of an image. Toward this end, they model teddy bear fur as a dense block, and tile this over the surface of the bear. The diffuse component of their lighting model is essentially the same as ours, but their specular model assumes uniformly dense fur and diffraction, which is not appropriate for the highly non-uniform density datasets which motivated AVR. They mention that the specular contribution can be derived using an approach similar to the diffuse contribution, but they admit that doing so is difficult and results in a model which is "quite complex". A contribution of this paper is an efficiently computable, nearly analytical solution to this specular problem. Their representation is based on storing a density, a frame, and a reflectance function, where the reflectance function is common to the whole dataset. In contrast, the AVR representation uses Laplace Series coefficients to store anisotropic density and radiance, with the frame assumed to be common to the whole dataset. Their approach makes numerous assumptions about the teddy bear fur, but these do not hold for scientific datasets. The AVR approach only assumes that the fiber thickness is smaller than the voxel dimensions. Finally, they use ray tracing to producing nice shadowing effects during rendering. If global illumination were to be used with AVR, it would occur during pre-processing, but could then be rendered as quickly as other lighting models.</p><p>Light transport and illumination of micro geometry has also been an area of graphics research. In the work of <ref type="bibr" target="#b3">[Daubert et al. 2003</ref>] visibility and illumination are precomputed for tiled repetitive micro-geometry by raycasting a tile. This allows efficient rendering with global illumination, but the preprocessing method is prohibitively expensive because our datasets are much larger and do not contain tiled repetitive patterns. By restricting our micro-geometry to tubes and using a nearly analytical function for precomputation of local illumination and occlusion for tubes, we are able to preprocess very large datasets in a fraction of the time that they take to generate. The work of <ref type="bibr" target="#b12">[Sillion et al. 1991]</ref> also considers micro-geometry, but assumes the overall reflection properties do not vary over a surface. Recent research has also been done on light scattering from human hair <ref type="bibr" target="#b7">[Marschner et al. 2003</ref>] where the hair is not opaque and light undergoes multiple scattering within a fiber. Their goal is match the visual qualities of real hair. In contrast, our goal is to match opaque supersampled tube geometry illuminated with a given shading model. We want a visual match for tubes so thin that supersampling is intractable (e.g., for sets of fibers which are orders of magnitude thinner and denser than human hair).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Anisotropic Volume Rendering</head><p>The AVR process, illustrated in <ref type="figure" target="#fig_0">Figure 1</ref>, consists of two phases, one for preprocessing, and the other for rendering. A traditional voxel has only an opacity and color, which are isotropic (independent of viewing direction). An AVR voxel has opacity and color intensity, but these are anisotropic. The input for AVR consists of line data, where these lines or curves are represented as line segments. Each segment has a beginning and an ending point in 3D, and an associated radius and material properties. The first step in preprocessing is to partition the (presumably gigantic) line dataset into blocks which are of manageable size. Because the input data is too large to fit in memory, and the number of blocks to be saved can exceed the maximum allowable number of open files, we buffer the line segments in memory, and only open and append to a file when more than a certain number of segments have accumulated for the corresponding block. This allows all line data to be partitioned in a single streaming pass without incurring significant penalty for opening and closing files.</p><p>Once the data has been partitioned into blocks, the blocks can be voxelized in an embarrassingly parallel fashion. Voxelization consists of clipping line segments to voxel boundaries and accumulating spherical harmonic coefficients. Clipping is straightforward; each block corresponds to an n 3 volume of voxels, so every line segment is clipped to the cubical boundaries of any voxel region through which it passes. The Laplace Series coefficients are then computed for the lighting contribution of the clipped subsegment, and accumulated in the corresponding AVR voxel. Lighting can be from multiple light sources, which can be any mixture of ambient and directional light sources, and the directional light sources can be either fixed in world space (e.g., the sun) or fixed in eye space (e.g., a headlight). Once all segments have been processed, insignificant coefficients are discarded. The details of these calculations are presented in Section 4.</p><p>The final output of the preprocessed data is blocks of AVR voxels. In our implementation, each block is a 3D array of pointers which are null for empty (completely transparent) voxels, or point to an instance of an AVR voxel class. Each block stores the indices for its location within the entire volume, and thereby can "know" where it is located in 3D. An AVR voxel consists of a list of quantum numbers and an associated list of coefficients. Because these coefficients are accumulated in software, no quantization error is introduced prior to hardware rendering. If the addition were done in limited precision graphics hardware, a dense bundle of fine lines could have each individual line quantized to 0, even though collectively the bundle should be visible.</p><p>The rendering phase takes as input blocks of AVR voxels, the eye position and viewing direction of an observer, and other viewing parameters such as transfer functions. These are used to evaluate a block of AVR voxels. When an AVR voxel is evaluated, the input is a viewing direction, and the output is an rgb color intensity and an opacity value. In effect, evaluating a block of AVR voxels produces a block of traditional voxels corresponding to the current view. Traditional volume rendering can then be performed in parallel to produce sub images which are composited to produce a final image.</p><p>The opacity of AVR voxels is directly proportional to the corresponding segment radii, so the equivalent of interactively scaling the radii can be accomplished by scaling the opacity of an evaluated AVR voxel. If there are more than one input line type (for example electric field lines and magnetic field lines), these can be preprocessed independently, and can have their evaluated results scaled and combined interactively, also without further preprocessing. Opacity transfer functions can also be manipulated once the AVR voxel opacity has been evaluated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Averaged Lighting Derivations</head><p>This section provides the mathematical details for implementation. There are two steps in execution. The first is to compute the averaged lighting for a single line segment from a single view with a single light source. This is repeated for any additional segments lying within the current voxel. This would also be repeated for additional light sources. For this specific view, the color and opacity are accumulated via a weighted average. The organization for this section is as follows. First we state</p><formula xml:id="formula_0">r l T L V T (a) (b)</formula><p>Figure 2: Each segment has a radius r, length l, and unit tangent vector T (a). Input unit vectors consist of T , the light source L, and view V (b).</p><p>our assumptions and conventions, and describe our notation. Then we provide a starting point for deriving expressions for averaged lighting contribution of a generic light source which can be any shading function. This starting point is an integral for which an efficiently computable analytical or numerical solution is needed to make preprocessing of large datasets tractable. Next, special limits of integration for the specific case of a directional light source are given, followed by the weighted averaging equations for color and opacity. This section concludes with the solution of the averaged lighting integrals for the specific case of OpenGL's Phong style lighting model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Conventions and Notation</head><p>First, we make some simplifying assumptions. The mathematical formulation of intensity (as a function of view direction, curve tangent, and light direction) assumes orthographic projection during sampling. However, during visualization, the overall view uses perspective projection, and permits up-close viewing. The derivations in this section assume that the radius of any cylinder is less than the width of the surrounding voxel. The relative depth relationship of two line segments is not preserved within the same voxel but is preserved between separate voxels.</p><p>Lighting parameters consist of a light vector, L, a view vector, V , and light properties. Lines (curves) are composed of line segments which are modeled as cylinders. Each cylinder has radius r, and length l. A cylinder has material properties: ambient, diffuse, and specular coefficients for red, green, and blue color channels, and a shininess exponent. A unit vector T , which lies along the axis of the cylinder, can be thought of as a normalized version of the average tangent vector for this cylinder's portion of the curve. <ref type="figure">Figure 2a</ref> shows these cylinder parameters in relation to one another. The unit vectors V and L points toward the eye and a distant light source, respectively, and are depicted in <ref type="figure">Figure 2b</ref> in relation to T .</p><p>We construct a 3D orthogonal basis from T and V . Disregarding the special case where a cylinder is viewed "end on" (because there would be no visual contribution), T and V are linearly independent, and the orthogonal projection of V into the plane perpendicular to T is the unique vector Vp where 0 &lt;Ë VpËâ¤ 1. The three basis vectors are T , N , and B where the latter two are computed according to</p><formula xml:id="formula_1">N = N " Vp " , B = T Ã N , Vp = V â " V â¢ T "</formula><p>T , where N denotes vector normalization. The N B plane is perpendicular to the T axis, effectively forming a cross-sectional slice of the cylinder from <ref type="figure">Figure 2b</ref>. Note that N is the cylinder surface normal which most closely points toward the eye. We define any other unit surface normal in terms of the angle Î¸, which is the rotation in the N B plane, going clockwise about the T axis, so n(Î¸) = N cos Î¸ + B sin Î¸.</p><p>(1)</p><p>The projected visible side of the cylinder corresponds to</p><formula xml:id="formula_2">â Ï 2 â¤ Î¸ â¤ Ï 2 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Generic Initial Derivation</head><p>The initial portion of derivations for averaged lighting over a cylinder surface have a common starting point independent of the expression for the light source. Using F as a generic placeholder for a light contribution from any shading model, the generic averaged intensity,ÄªF , is the shading intensity integrated over the projected visible cylinder surface divided by the projected area of the cylinder surface:</p><formula xml:id="formula_3">IF = Z S V L F cos Ï dSV L . Areavis,<label>(2)</label></formula><p>Here, SV L denotes the projected area that is both visible and illuminated. Note that SV L depends on F, and that SV L â S, because S denotes all projected visible area, regardless of whether that area is illuminated. The limits of integration for Î¸ (corresponding to SV L) are not necessarily âÏ 2 and Ï 2 , and depend on what F is. The projected visible area of a cylinder surface is</p><formula xml:id="formula_4">Areavis = 2 rl " V â¢ N " .<label>(3)</label></formula><p>Equation 2 can be partially evaluated, taking Equation 3 into account and using dS = r dÎ¸ dz from cylindrical coordinates. The simplified resulting expression concludes the initial derivation, and is now ready to accept F:</p><formula xml:id="formula_5">IF = 1 2 Z Î¸ 1 Î¸ 0 F cos Î¸ dÎ¸.<label>(4)</label></formula><p>The limits of integration for Î¸ for the cylinder surface which is both visible to the eye and illuminated by a directional light source are illustrated in <ref type="figure">Figure 3</ref>, in which Vp denotes the projection of V into the N B plane, Lp denotes the projection of L into the N B plane, and Î± is the angle between the projected view and projected light vectors. From this figure, the limits of integration for a directional light source are</p><formula xml:id="formula_6">Î¸0 = max`â Ï 2 , Î± â Ï 2Â´, Î¸1 = min`Ï 2 , Î± + Ï 2Â´. (5) B N Vp Ï 2 0 â Ï 2 B N Î± Lp Î±+ Ï 2 Î±â Ï 2 B N Î¸ 1 Î¸ 0</formula><p>Figure 3: The portion of the cylinder surface visible to the eye (left) may not be the same as the portion of the surface illuminated (middle). Integrating only over the intersection of these two regions (right) simplifies the sampling equations for directional light sources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Weighted Average within a Voxel</head><p>Averaged lighting expressions from Section 4.2 provide the lighting contribution of a single cylinder for a given view. This paper targets extremely dense line datasets where many line segments can lie within a single AVR voxel. We use a weighted average to combine the contributions of multiple segments for this view. For n cylinders numbered i â {0, 1, . . . , n â 1}, we denote the rgb color triplet by Ci, the projected visible area (as computed in Equation 3) by Ai, and the final color and opacity for a voxel by C and O, respectively. The weighted averages are</p><formula xml:id="formula_7">C = nâ1 X i=0 (Ci)(Ai) , nâ1 X i=0 Ai,<label>(6)</label></formula><formula xml:id="formula_8">O = 1 â nâ1 Y i=0 " 1 â Ai . Sc 4 Â« .<label>(7)</label></formula><p>where Sc is the surface area of the cube, and Sc/4 is the average visible surface area of a cube <ref type="bibr" target="#b0">[Arvo and Kirk 1989]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Application to OpenGL Lighting</head><p>The mathematics of OpenGL's lighting are given in Chapter 5 of the OpenGL Programming Guide (the "Red Book") <ref type="bibr" target="#b16">[Woo et al. 1999]</ref>. To summarize briefly, OpenGL uses the following (in slightly different notation) to produce the color I = Ia + I d + Is where I is the total intensity rgbÎ± vector, and the a, d, and s subscripts correspond to ambient, diffuse, and specular, respectively. Denoting componentwise vector multiplication by * ,</p><formula xml:id="formula_9">Ia = (Am * A l ),<label>(8)</label></formula><formula xml:id="formula_10">I d = (Dm * D l ) max " L â¢ n, 0 " ,<label>(9)</label></formula><formula xml:id="formula_11">Is = (Sm * S l ) max " H â¢ n, 0 " k ,<label>(10)</label></formula><p>where n is the surface normal vector, A, D, and S correspond to ambient, diffuse, and specular, respectively. The subscripts m and l correspond to material and light, respectively. The "halfway" unit vector is H = N</p><formula xml:id="formula_12">" L + V " .</formula><p>In this case, the average intensityÄª =Äªa +Äª d +Äªs. The individual sub-expressions come from substituting Equations 8, 9, and 10 in place of F in Equation 4. The ambient term is simplyÄªa = AmA l , and the easily obtained simplified diffuse term is</p><formula xml:id="formula_13">I d = DmD l 8 Â» " L â¢ N "" sin 2Î¸1 â sin 2Î¸0 + 2(Î¸1 â Î¸0) " â " L â¢ B "" cos 2Î¸1 â cos 2Î¸0 " - .<label>(11)</label></formula><p>Space constraints preclude showing the complete derivations here, but they are available in <ref type="bibr" target="#b11">[Schussman 2003</ref>]. The specular expression is more challenging, so we provide a summarized derivation here. The main difficulty surrounding integration of the specular expression is the k exponent, which causes analytical solutions (for known k) to expand out to so many trigonometric terms as to be computationally impractical (even for preprocessing large datasets).</p><p>Starting with Equation 4, and using F = Is from Equa-tion 10 gives</p><formula xml:id="formula_14">Is = 1 2 Z Î¸ 1 Î¸ 0 SmS l " H â¢ n(Î¸) " k cos Î¸ dÎ¸.<label>(12)</label></formula><p>Substituting Equation 1 into Equation 12, and distributing the dot product yields</p><formula xml:id="formula_15">Is = SmS l 2 Z Î¸ 1 Î¸ 0 h" H â¢ N " cos Î¸+ " H â¢ B " sin Î¸ i k cos Î¸ dÎ¸. (13)</formula><p>We now rearrange and split up this expression so that the part which does not have an analytical solution will at least lend itself to a precomputed numerical solution. Toward this end, we introduce Hp and Î²; similar to L and Lp in <ref type="figure">Figure 3</ref>, Hp is the projection of H into the N B plane, so</p><formula xml:id="formula_16">Hp = " H â¢ N " N + " H â¢ B " B,<label>(14)</label></formula><p>and Î² is the angle between Hp and the N axis, which can be computed as: </p><formula xml:id="formula_17">Î² = atan2 " N ( Hp) â¢ B, N ( Hp) â¢ N " ,</formula><formula xml:id="formula_18">H â¢ N =Ë HpËcos Î², H â¢ B =Ë HpËsin Î².<label>(15)</label></formula><p>Substituting these into Equation 13, then substituting in a trigonometric angle addition identity, and using a change of variables where u = Î¸ â Î², and using another angle addition identity gives</p><formula xml:id="formula_19">Is = SmS l 2Ë HpËk â1 " ( H â¢ N ) Z Î¸ 1 +Î² Î¸ 0 +Î² cos k+1 u du â( H â¢ B) Z Î¸ 1 +Î² Î¸ 0 +Î² cos k u sin u du " .<label>(16)</label></formula><p>The second integral in Equation 16 has a clean, closed-form solution, but the first integral does not. The integral of cos k+1 u is an order k multivariate polynomial in cos u and sin u with k + 2 terms for even k, or k + 1 terms for odd k.</p><p>If u is bounded below and above, (which we denote by umin and umax, respectively), the integral can be precomputed numerically and stored in a lookup table. From our change of variable and we obtain bounds for Î², and then substitute back to get umin = âÏ â¤ u = (Î¸ â Î²) â¤ Ï = umax. Because these bounds exist, a function F (u0, u1), implemented in terms of the lookup table, can be used to replace the problematic integral, providing our final expression for the averaged specular contribution:</p><formula xml:id="formula_20">Is = 1 2 SmS lË HpËk â1 Â» " H â¢ N " F (Î¸0 + Î², Î¸1 + Î²)+ " H â¢ B " " cos k+1 (Î¸1 â Î²) â cos k+1 (Î¸0 â Î²) k + 1 Â«- ,<label>(17)</label></formula><p>where Î¸0 and Î¸1 are given by Equations 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Voxelization</head><p>The previous section was about obtaining the averaged lighting color, C, and opacity, O, for a single view of multiple line segments located within a voxel. These results are functions of a viewing direction. This section is about sampling (evaluating) those functions for many different views, and converting those samples into a set of Laplace Series coefficients, which compactly represent an approximation of the functions for all viewing directions. Compactness is necessary for fitting a large amount of AVR voxel data in memory. This representation also allows C and O to be reconstructed for any specific viewing direction in a computationally efficient manor, to allow faster rendering. In the convention of <ref type="bibr" target="#b9">[Porter and Duff 1984]</ref>, C and O are non-premultiplied color and opacity.</p><p>The sampling function only takes a view, a cylinder and a light source. It can be called multiple times, once for each light source, and the results can be combined. Light sources can have any direction, either held fixed in world space, or held fixed in eye space, or defined as some other function of viewing direction. Samples from different cylinders within the same voxel are combined as well. Once the compact representation is obtained, sampling need not be repeated unless the combined lighting functions are changed (examples include light sources being added or removed, a world space light being moved in world space, or a light direction being redefined as a different function of viewing direction).</p><p>Spherical harmonic functions form the basis for the Laplace series in a way that is directly analogous to sine and cosine harmonics forming the basis for Fourier series. We adopt the spherical coordinates convention most commonly used in physics, as follows. The azimuthal angle, Ï, lies in the XY plane, is measured from the X axis, is confined to the interval <ref type="bibr">[0, 2Ï]</ref>, and corresponds to longitude. The polar angle, Î¸, is measured from the Z axis, is confined to the interval [0, Ï], and corresponds to colatitude (where colatitude is 90 â¢ âlatitude). Cartesian coordinates are obtained from spherical coordinates as (x, y, z) = (sin Î¸ cos Ï, sin Î¸ sin Ï, cos Î¸). The normalized spherical harmonics are typically denoted by Y l,m and defined in real form by</p><formula xml:id="formula_21">Y l,m (Î¸, Ï) = 8 &lt; : N l,m P l,m cos Î¸ , cos mÏ, m &gt; 0 N l,0 P l,0 (cos Î¸) / â 2, m = 0 N l,m P l,|m| (cos Î¸) sin |m| Ï , m &lt; 0 , (18)</formula><p>where l denotes order, m denotes degree, and l and m are quantum numbers subject to 0 â¤ l &lt; â and âl â¤ m â¤ l. The normalizing constants are by</p><formula xml:id="formula_22">N l,m = p ((2l + 1)/2Ï) (l â |m|)!/ (l + |m|)!.<label>(19)</label></formula><p>where P l,m are the associated Legendre polynomials which can be evaluated efficiently using the recurrence relations</p><formula xml:id="formula_23">P0,0(x) = 1,<label>(20)</label></formula><formula xml:id="formula_24">Pm,m(x) = (1 â 2m) p 1 â x 2 Pmâ1,mâ1(x),<label>(21)</label></formula><p>Pm+1,m(x) = x(2m + 1)Pm,m(x),</p><formula xml:id="formula_25">P l,m (x) = x 2lâ1 lâm P lâ1,m (x)â l+mâ1 lâm P lâ2,m (x). (23)<label>(22)</label></formula><p>The Laplace series has some useful properties that stem from spherical harmonics. A function on a sphere is uniformly represented in the azimuthal and polar directions when all m coefficients are obtained for a given l. Also, if the intensity and opacity functions have bilateral and radial symmetry (which they do for Phong style shading illuminated by a headlight), all coefficients with odd l are zero and need not be computed, regardless of how these functions are oriented with respect to the sphere. The Laplace series coefficients, C l,m , can be computed via the orthogonal projection of f (Î¸, Ï) onto the spherical harmonics basis functions. The coefficients can be approximated for discrete samples by approximating the projection surface integral via a summation over the surface weighted by the area corresponding to each sample. For n samples numbered i â {0, 1, . . . , n â 1} with corresponding coordinates (Î¸i, Ïi) on the unit sphere, and with corresponding area Ai, the Laplace series coefficients are</p><formula xml:id="formula_26">C l,m = nâ1 X i=0 f (Î¸i, Ïi) Y l,m (Î¸i, Ïi) Ai.<label>(24)</label></formula><p>We distribute the samples over the sphere in a fairly uniform manner. An octahedron is placed with its center at the origin in spherical coordinates, and the radial component of its vertices are scaled to unity. Each triangular face is then subdivided into four sub-triangles by introducing vertices at the midpoint of each edge, and scaling the radial component of each new vertex back up to unity. For k subdivision iterations on a polyhedron with p initial triangular faces, n triangles are produced according to n = 4 k p. In selecting an appropriate n, we considered the trade-off between quality and sampling speed. Each triangle center provides a sample location (Î¸i, Ïi) and associated spherical triangle area Ai. The images in this paper used an octahedron, subdivided two or three times for a total of 128 or 512 sample points on the sphere. We discard any coefficient which does not significantly contribute to the accuracy of the approximated f (Î¸, Ï). The RMS error contribution of a coefficient C l,m , which is |C l,m | 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Rendering</head><p>In traditional 3D textured volume rendering, there is one rgbÎ± value per voxel. A voxel is isotropic; it has the same rgbÎ± value regardless of viewing direction. An AVR voxel, however, is anisotropic. Rendering consists of two stages. First, AVR voxels are evaluated according to the current view, results in traditional voxels. The second stage is to render the traditional voxels using any preferred renderer.</p><p>For the most accurate image, the spherical harmonics basis functions should be evaluated per voxel, according to the viewing direction for that voxel. However, to reduce rendering time, the basis functions are evaluated only once per block of voxels, where the blocks are small enough that all view vectors from within the block are, to a good approximation, equal. Once the basis functions have been evaluated for the current view, the coefficients from each AVR voxel are used to scale them to produce a corresponding single rgbÎ± value.</p><p>When voxel boundaries are filtered for rendering, opacity weighted interpolation <ref type="bibr" target="#b15">[Wittenbrink et al. 1998</ref>] is more important for preventing visual artifacts than when rendering solids, because the artifact happens on both sides of the thin projected line. This is particularly significant for volume line data because the effect happens at the border of all empty voxels surrounding a line.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results</head><p>This section begins with a few images to demonstrate correctness and quality relative to an unscalable (but correct) approach. This is followed by images demonstrating the capabilities of AVR on several large datasets from computational fluid dynamics and electromagnetic and particle tracking simulations.</p><p>In verifying correctness of AVR's operation, we compare identical views of a small (100k segments), artificially constructed dataset consisting of red vortex spirals. The benchmark image that we compare against is these spirals rendered as polygonal tubes at 10 times the screen resolution (accomplished by repeatedly rendering the polygonal scene one tile at a time to produce a 10Ã10 mosaic of tiles, and then averaging the results back down to the normal image size). This supersampling of the polygonal model was necessary because the small triangles composing it aliased badly at a comparable resolution. Both AVR and the supersampled polygonal approach used identical material properties, light properties, and light orientation. The left column of <ref type="figure" target="#fig_1">Figure 4</ref> compares the AVR image (at 256 3 voxel resolution) with the benchmark image.</p><p>When the number of segments is increased tenfold, even the supersampling approach breaks down, and artifacts appear. The middle and right columns of <ref type="figure" target="#fig_1">Figure 4</ref> compares AVR with the supersampled approach for the larger (1M segments) spiral dataset, and shows that AVR does not suffer from this sort of aliasing problem. The reason that supersampling does not scale is that when the polygonal tube radius is reduced by a factor of n, the needed number of tiles increases by a factor of n 2 . The second simulation dataset consists of 10 million segments representing dark current paths of two categories of particles within a 5-cell linear accelerator structure. Red primary particles are emitted from the interior surface of the structure in response to strong local electric fields. Green secondary particles are emitted according to a stochastic distribution as the result of a particle collision with the surface. Secondaries greatly outnumber primaries. <ref type="figure" target="#fig_3">Figure 6</ref> shows how the primaries can be seen alone or in the context of the secondaries by reducing the radius of the secondary paths and increasing the radius of the primary paths. Adjusting the radius can occur during the visualization run and does not require re-sampling the line data, although it does in-  The right image shows them in the context of secondaries whose paths have been deemphasized by reducing their radius. These were produced from 1024 3 voxel samples.</p><p>cur a performance penalty because the two sets of spherical harmonics coefficients would have to be merged at run time. The primaries image took 51 seconds to render, and the precombined image took 3 minutes. Preprocessing times are difficult to report meaningfully because preprocessing was done on a heterogeneous compute farm with CPUs having different speeds. The overall preprocessing CPU time was roughly 10% of overall simulation CPU time.</p><p>Another possibility with AVR is to sample at different resolutions so that once a user has seen an overview of the whole dataset and has identified an area of interest, a higher resolution sub-region can be swapped in and examined for fine detail. Interactively adjusting opacity can help discern local vs. global structure. This process is illustrated in <ref type="figure" target="#fig_4">Figure 7</ref>.</p><p>For a fixed AVR sampling resolution, there is a fixed upper bound on the storage requirements for the AVR data. This can convert O(n) line segments to O(1) storage. Although the constant is large, <ref type="figure">Figure 8</ref> shows that the crossover can occur before some of the more dense datasets used in this paper. In other words, for suitably dense line data, AVR can provide useful data compression. As datasets grow in size and detail, this compression will become even more significant.</p><p>Similar to the case for storage, AVR also converts rendering time from O(n) line segments to O(1), again with a large Figure 8: Disk storage requirements for segment data grow more quickly than for AVR as the number of segments increases.</p><p>constant. <ref type="figure">Figure 9</ref> shows the crossover where AVR outperforms geometry for tubes in two ways. Tubes in a display list are clearly fast, but quickly run out of memory. Even ignoring memory and extrapolating the results for the display list, AVR still wins for the 100 million segment dataset. Tubes rendered in immediate mode avoid the memory problem, but are significantly slower than the display list. Although plain lines would be faster, doing so is still O(n).  <ref type="figure">Figure 9</ref>: The large constant on the O(1) rendering performance of AVR is still small enough to outperform the O(n) geometry based methods for datasets we tried. els, lighting details such as specular highlight help provide visual cues to convey the structure of the data. A specific solution for Phong style lighting as used by OpenGL is presented as an example, but the framework presented applies to more general lighting models. The AVR representation, based on a Laplace Series, is compact and efficient enough to compress very large and dense line datasets sufficiently to fit in memory and reduce rendering time over other line drawing methods. Because preprocessing is done entirely in software no quantization error occurs prior to rendering.</p><p>Future work consists of several things. Further optimization will be pursued. Because AVR has a large amount of available parallelism, it is a good candidate for running on a cluster for producing interactive visualization at very high resolution. Other lighting models will be investigated, including those which are anisotropic and/or non-photorealistic. Further perceptual enhancements should be possible. Additionally, the AVR voxel is a very general representation which could convey geometric primitives other than lines. The coming generation of graphics hardware may allow enough flexibility to evaluate the AVR voxels directly in hardware in spite of our nonlinear approach of discarding small Laplace Series coefficients to reduce storage.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Flowchart of AVR preprocessing (left) and rendering (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>AVR images (top row) compare favorably to 10Ã10 supersampled geometry (bottom row), and avoid aliasing artifacts. less time to render.The first simulation dataset, obtained from a dense streamline seeding of CFD simulation of air flow behind the tail of an aircraft, has over 1.3 million segments. The blue and orange lines represent velocity and vorticity, respectively. Figure 5 compares headlight illumination with a light held fixed in world space for different views. Each of these images consists of 256 3 AVR voxels and took 3 seconds to render.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>These images compare illumination with a white light for a headlight (left) and a fixed light shining straight down (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>The left image shows primary particle paths only.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>Once a global overview is presented (upper left), higher resolution blocks of AVR voxels can be loaded to show finer structure (upper right). Interactively adjusting opacity (bottom row) helps emphasize global or local detail.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">This paper presents Anisotropic Volume Rendering as an efficient and effective way to show global and local detail in extremely dense line-based datasets. By using anisotropic vox-</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Acknowledgments</head><p>This work has been sponsored in part by the U.S. National Science Foundation under contracts ACI 9983641 (PECASE award), ACI 0325934 (ITR), and ACI 00222991; and the U.S. Department of Energy under Memorandum Agreements No. DE-FC02-01ER41202 (SciDAC) and No. B523578 (ASCI VIEWS).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A survey of ray tracing acceleration techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Arvo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kirk</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Academic Press</publisher>
			<pubPlace>San Diego, CA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Illumination in diverse codimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<idno>327-334. ISBN 0-89791- 667-0</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 94</title>
		<meeting>SIGGRAPH 94<address><addrLine>Orlando, Florida</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Bidirectional reflection functions from surface bump maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Springmeyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 87)</title>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="273" to="281" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Efficient light transport using precomputed visibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Daubert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kautz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Heidrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-M</forename><surname>Dischler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="28" to="37" />
			<date type="published" when="2003-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Principles of Digital Image Synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Glassner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Morgan Kaufmann</publisher>
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualizing 3D flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Interrante</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Grosch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="49" to="53" />
			<date type="published" when="1998-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Rendering fur with three dimensional textures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Kajiya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Kay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 89)</title>
		<meeting><address><addrLine>Boston, Massachusetts</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989-07" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="271" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Light scattering from human hair fibers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marschner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">W</forename><surname>Jensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cammarano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Worley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH 2003</title>
		<meeting>ACM SIGGRAPH 2003</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>Annual Conference Series.. to appear</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">All-frequency shadows using non-linear wavelet lighting approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramamoorthi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="376" to="381" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Compositing digital images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th annual conference on Computer graphics and interactive techniques</title>
		<meeting>the 11th annual conference on Computer graphics and interactive techniques</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1984" />
			<biblScope unit="page" from="253" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An efficient representation for irradiance environment maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramamoorthi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="497" to="500" />
		</imprint>
	</monogr>
	<note>Annual Conference Series</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Interactive and Perceptually Enhanced Visualization of Large, Complex Line-Based Datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename><surname>Schussman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
		<respStmt>
			<orgName>University of California Davis</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A global illumination solution for general reflectance distributions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">X</forename><surname>Sillion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Arvo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">H</forename><surname>Westin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 91)</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="187" to="196" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Precomputed radiance transfer for real-time rendering in dynamic, low-frequency lighting environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-P</forename><surname>Sloan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kautz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snyder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 29th annual conference on Computer graphics and interactive techniques</title>
		<meeting>the 29th annual conference on Computer graphics and interactive techniques</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="527" to="536" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fast Display of Illuminated Field Lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>ZÃ¶ckler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="118" to="128" />
			<date type="published" when="1997-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Opacity-weighted color interpolation, for volume sampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">M</forename><surname>Wittenbrink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Malzbender</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Goss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1998 IEEE symposium on Volume visualization</title>
		<meeting>the 1998 IEEE symposium on Volume visualization</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">OpenGL programming guide: the official guide to learning OpenGL</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Woo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA, USA</pubPlace>
		</imprint>
	</monogr>
	<note>version 1.2, third ed</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
