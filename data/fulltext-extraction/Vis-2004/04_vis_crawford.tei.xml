<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualizing Gyrokinetic Simulations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Crawford</surname></persName>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
							<email>ma@cs.ucdavis.edu</email>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of California at Davis</orgName>
								<address>
									<addrLine>One Shields Avenue</addrLine>
									<postCode>95616</postCode>
									<settlement>Davis</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Min-Yu</forename><surname>Huang</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Klasky</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephane</forename><surname>Ethier</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of California at Davis</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">Princeton Plasma Physics Laboratory</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Visualizing Gyrokinetic Simulations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>graphics hardware</term>
					<term>non-rectilinear mesh</term>
					<term>plasma physics</term>
					<term>scientific visualization</term>
					<term>texture methods</term>
					<term>volume visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Interactive volume visualization for gyrokinetic simulations presents some unique challenges to existing commercial software packages due to the mesh structure, size, and complexity of the data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Fusion energy research gives promise to environmental attractive, commercially viable, sustainable energy source for the next century. A large part of the worldwide fusion research effort goes into the development of numerical codes to simulate real experiments. By effectively utilizing the full power of modern supercomputers, fusion codes can simulate the movement of billions of particles over thousands of time steps in complex geometry. Advanced visualization is necessary for extracting the key physics from the large amounts of data generated by these simulations.</p><p>To numerically study magnetic confinement and transport physics in the fusion process, the gyrokinetic model <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref> has been shown to be effective in modeling turbulent transport and highly efficient on many massively parallel computing platforms. However, existing visualization systems do not provide adequate capability to support the analysis of advanced gyrokinetic simulations of plasma turbulence. These simulations produce enormous amounts of data along a mesh which follows the magnetic field lines. Scientists need to be able to freely vary the visualized parameters and interactively browse the data. Local and global details must be captured at the highest available resolution. Rendering the particle paths is needed in addition to displaying the parameter values in order to gain understanding and new scientific insights from the data.</p><p>This paper discusses the visualization challenges presented by gyrokinetic simulations and introduces a new volume rendering strategy leveraging the programmable features of PC graphics hardware to enable interactive visualization of plasma flow in toroidal systems. The interactive 3D visualization technique gives the scientists at the Princeton Plasma Physics Laboratory (PPPL) new ability to examine the structure and evolution of the volumetric, tubular features in their turbulence simulation data. The resulting visualizations also allow scientists to more effectively communicate their findings to others.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">GYROKINETIC SIMULATIONS</head><p>Scientists at PPPL have been developing microturbulence codes in fusion to gain an improved understanding of the turbulent transport in magnetically confined toroidal plasmas. Turbulence is believed to be the mechanism primarily responsible for cross-field transport in such systems. Energy transport from the hot and dense core of the plasma to the cold walls of the device greatly exceeded the level predicted by the earlier theory of Coulomb collisions. It is now believed that plasma microturbulence driven by temperature and density gradients are responsible for these enhanced cross-field transport rates. The ability to suppress microturbulence-driven transport may well be the key to a practical magnetic confinement device. Therefore, the size and cost of a fusion reactor is determined in large part by the balance between particle and energy confinement time and fusion self-heating. Plasma turbulence is also a very com-October 10-15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE plex nonlinear phenomenon with associated large time and spatial scale separations, similar in many ways to general fluid turbulence.</p><p>The gyrokinetic particle-in-cell (PIC) simulation is based on the gyrophase-averaged Vlasov-Maxwell system of equations for magnetically confined plasmas <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>. Since its inception, major progress has been made in carrying out full-torus (global) microturbulence simulations using PPPL's gyrokinetic Global Toroidal Code (GTC) on massively parallel computers <ref type="bibr" target="#b5">[6]</ref>. The PIC method solves the nonlinear partial differential equations through simple linear local operations and is accordingly amenable to multidimensional domain decompositions. The computing time in a PIC code is usually linearly proportional to the number of particles residing in each processor, while the inter-processor communication time is usually less than a few percent of the total computing time. Consequently, GTC has shown excellent scaling up to 1024 processors with a parallel efficiency of up to 98% <ref type="bibr" target="#b0">[1]</ref>, and has been effectively applied to study the size scaling of reactor-size tokamak plasmas <ref type="bibr" target="#b4">[5]</ref>.</p><p>Understanding the behavior of turbulent plasma transport is not only a grand challenge problem, but it is also a key to enabling a reliable assessment of the requirements for an attractive fusion reactor in the future. Important additional physics could also be incorporated into the code, including an electron model with nonadiabatic dynamics and the vector potential parallel to the magnetic field. This would enable GTC to analyze electromagnetic shear-Alfven physics in tokamaks and stellarators. These improvements would enable exciting new capabilities for running realistic simulations on advanced parallel architectures of turbulence and neoclassical transport in reactor grade plasmas; however, the storage requirements will increase by an order of magnitude. Visualization plays an increasingly important role.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Characteristics of GTC Data</head><p>The mesh used in GTC is unstructured in the poloidal cross section, as shown in <ref type="figure" target="#fig_0">Figure 2</ref>. The mesh maintains a constant arc distance, r∆θ , so the number of mesh points increases as we move out in the radial direction. For example, a typical mesh has 360 radial × 2560 poloidal × 64 toroidal points, a total of 59 million points. The mesh twists around the torus, and the twist is different for each radial tube as you go around the torus. A 3D view of the mesh along with two cross sections are shown in <ref type="figure">Figure 1</ref> Several parameters, such as density and temperature, are computed at each mesh point for each time step. The largest run of the simulations with 125 million mesh points and one billion particles that has been performed thus far produced 4 TB of data. If all of the particle data were stored, the requirements would increase to over 115 TB. Consequently, intelligent analysis routines are urgently needed to store the most relevant portion of the data from regions of interest. Furthermore, data compression and advanced visualization methods are required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Visualization Requirements</head><p>A unique diagnostic for tokamak transport would be the visualization of the actual particle trajectories in addition to the 3D rendering of density, velocity, temperature and potential fluctuations generated by the microinstabilities. The particles should be visualized in the presence of the external toroidal magnetic field as well as in the self-consistent perturbed electric and magnetic fields of a torus. When the electromagnetic dynamics are implemented in these global simulations, a formidable visualization challenge will be to track the path of the charged particles as they move through these perturbed trajectories and stochastic regions, and consequently enhance electron transport. In addition, the perturbed magnetic fields can introduce a tearing of the equilibrium flux surfaces in local regions. Particle simulation is uniquely equipped for addressing these highly complex problems because it models the behavior of individual particles in toroidal systems. Developing advanced particle visualization software will give scientists the tools to extract key physics insights for these important investigations:</p><p>• By following the time evolution of these particles we can gain a better understanding of the physics of particle and energy transport and an answer to the outstanding question of whether the turbulent transport is convective or diffusive in nature.</p><p>• The enhanced visualization capabilities may also help unravel the mystery of the experimentally-observed inward pinch of the impurity particles coming from the plasma edge.</p><p>• New visualization tools are needed to address the outstanding question of what actually causes the anomalously-high levels of electron transport always observed in tokamak plasmas.</p><p>To address these visualization needs, the techniques that we and others have developed for visualizing 3D field lines <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b11">12]</ref>, particle data <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b8">9]</ref>, and time-varying data <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b9">10]</ref> are applicable. In this paper, we focus on the need to visualize the scalar Maxwell potential data. In the past, scientists at PPPL were mainly using AVS/Express for making cross-section and isosurface visualization of the potential data. As shown in <ref type="figure" target="#fig_1">Figure 3</ref>, one example highlights the positive and negative potential, and the other reveals the tubular structures. However, the commercial software tool AVS/Express currently lacks support for volume rendering irregular-grid data and does not take advantage of the advanced features of current graphics hardware, making the process of creating visualization rather tedious and time consuming. The rest of this  paper presents a new hardware-accelerated rendering technique designed specifically for interactive volume visualization of the 3D potential data on the twisted mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">A HARDWARE-ACCELERATED VOLUME VISUALIZATION TECHNIQUE</head><p>The 3D texture hardware support of commodity graphics hardware makes possible real time volume rendering. Rendering is performed by drawing a set of view-aligned polygon slices that sample a 3D texture containing the volume data. These slices are composited using hardware alpha blending to derive the final image. However, the graphics hardware is designed around linear interpolation of planar data. The GTC volume data is not stored in such a manner so it cannot be rendered directly. To maintain interactive visualization, we have developed a rendering technique that makes use of mixed-coordinate system textures and vertex and fragment shaders. We have studied various quality and speed tradeoffs, including using a data-space versus color-space texture and mapping time-critical aspects of the fragment shader to textures. <ref type="figure" target="#fig_2">Figure 4</ref> shows the main steps taken to generate an image of the GTC volume data. : Cartesian point C generated by first doing arclength-wise linear interpolation between A0-A1, and B0-B1, to find the interpolated data values at C0 and C1. The ρ location of C is then used to linearly interpolate between C0-C1 to find the data value at the desired texture coordinate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Toroidal Data Storage</head><p>The toroidal data to be visualized is structured into poloidal planes using the minor radial (ρ) and minor angular (θ ) coordinates. These planes are arrayed evenly along the major angular coordinate (ζ ). The mesh structure of the disks is made to approach even spacing in the plane. This is accomplished by ordering the plane into rings of increasing number of points to maintain arclength density (see <ref type="figure" target="#fig_0">Figure 2</ref>); the starting θ of a ring and number of points per ring are also stored. The data values associated with a location are thus stored in a 2D array of dimension D × p where D is the number of disks and p is the number of points per disk.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Preprocessing</head><p>A primary capability of current graphics hardware for volume visualization is doing linear interpolation of textures. Thus, an optimal coordinate system would be one that closely matched the data storage and facilitated the use of the texture interpolator. This is approached here by using an unwrapped square-toroid, which is a rectangular prism, with its two equal sides corresponding to diskaligned Cartesian planes (s, t) and its third coordinate (u) mapping directly to ζ . The object texture is generated by taking Cartesian samples of each poloidal plane created by polar interpolation of the nearest normalized data points (see <ref type="figure" target="#fig_3">Figure 5</ref>). As the interpolation is bilinear in the original coordinate system, linear error propagation is maintained. Duplicates of the first and last disks are stored as the borders of the opposite ends of the texture to allow for continuity in the interpolation.</p><p>One important consideration is that of resampling density versus memory usage. If the data is sampled sparsely, then interpolation error will increase. If the samples are too dense, then memory is wasted on samples that do not contribute to adding more information. In the case of linear error propagation, the optimum density should occur when the number density of new sample points per unit area is equal to the number density of the original data points per unit area. A regularly sampled grid containing about twice as many points results in a 3D texture that can be rendered very efficiently. In the case of data containing 91 rings per poloidal plane and 32499 points per plane, a 205×205 regularly sampled grid will result in an average area per sample point similar to that of the original data. Thus, a more memory aligned 256×256 grid can also faithfully cover 30,000-50,000 points on the original structure grid with similar sample density. A 512×512 grid can cover a case containing approximately 200,000 original points per plane. Note that the ζ to u mapping works because the angular ζ distortion is linear with respect to the major radial coordinate and independent of the t ('height') coordinate. Therefore, angular distortion is conserved across the linear interpolation of the texture system, and finally undone when a given texture coordinate is remapped to world space. <ref type="figure" target="#fig_4">Figure 6</ref> compares the original point data and the resampled data on a poloidal plane. The 256×256 resampled points capture the fine features in the original data. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Rendering</head><p>For rendering, view-aligned slices are passed to the graphics pipe, which then proceed to be processed by the vertex and fragment programs, which were were written in nVidia's Cg (C for graphics) language. The primary functionality of the rendering stage is a coordinate transformation from the rectangular object coordinate system to the mixed coordinate system of the texture data object. This can be described as (x, y, z) → ( x 2 + y <ref type="bibr" target="#b1">2</ref> , atan(y, x), z) ≡ (r, ζ , z) (see <ref type="figure" target="#fig_5">Figure 7)</ref>, where (r, ζ , z) is then normalized to the final texture coordinates T stu . At various points, checks are made to verify that the sample point is within the data; otherwise the sample is discarded. This transformation is necessary because when samples are taken along view-aligned slice planes they do not vary linearly across the texture (see <ref type="figure" target="#fig_6">Figure 8)</ref>. The data value is then retrieved from the 3D texture using the calculated normalized coordinates. Finally, this data value is passed as the coordinate to the colormap to give the final output color.</p><p>Rendering can be done in either data space or color space. In data space, resampling is done by interpolating the data texture, and then the color and opacity values are looked up using the resampled data value. In color space, we render classified volume directly by interpolating the RGBA texture. Data space rendering usually generates more accurate visualization while color space rendering is  faster. However, color space visualization often suffers from the blurriness introduced by color interpolation. <ref type="figure" target="#fig_7">Figure 9</ref> compares data-space rendering with color-space rendering. Data space rendering displays clearer tubular structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">OPTIMIZATIONS</head><p>The fragment shader is neither at its fastest nor at its highest quality. Various optional optimizations are possible and applied in different combinations to meet different performance requirements. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Quality Improvements</head><p>Aligning the texture samples to the data disks removes some artifacts. However, it requires two accesses each of the data and colormap textures: pre-alpha multiplying each temporary color by its alpha value, and linear interpolation between the colors; followed by the final alpha to obtain the output color.</p><p>Using more view-aligned slices can increase image quality but opacity must be appropriately corrected. Adding in the opacity correction formula allows for consistency across sampling densities at a slight performance loss.</p><p>In the texture coordinate function, adding a check against the minimum and maximum minor radii before normalizing T st allows for clipping the object by varying the input parameters for those radii. This comes at the cost of an if-statement branch in the fragment program.</p><p>Lighting can help illustrate the shape of 3D structures and their spatial relationships. To including lighting, normalized gradient direction of each voxel must be either precomputed and stored or calculated on the fly, which requires additional texture lookup. Our current implementation does not include lighting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Speed Improvements</head><p>A color-space interpretation of the data can be a speed increase of mixed blessings. On the positive side, it allows the premultiplication stage to be moved into the texture object creation phase and it removes the need for accessing an additional colormap. However, since it has to update the texture object whenever the RGB or alpha maps change, it adds a delay when trying to modify the transfer functions. Additionally, it can add sometimes enlightening, but counter-intuitive artifacts to the image. As an example, consider a two-color transfer function. In data-space, all output will be, for example, red or blue. In color-space however, if there are two paths of data near to each other, one red and one blue, then the region between them will be interpolated to be purple. A similar problem occurs with transparency functions that are non-monotonic.</p><p>Because color-space does not require a colortable lookup, another optimization is available in this mode. When the data values are first interpolated into the s-t-u coordinate system, the borders can be set to a value that is outside of the [0, 1] range required for data-space. Then when the color object is generated, the alpha value of the borders can then be forced to zero, disregarding the colormap entirely. Then the texture border clamping capabilities can be taken advantage of, allowing the check of whether or not the fragment is inside the toroid to be removed. Because the branching capability of current hardware is such that the program takes as long as if sections of code were not skipped, it can currently be faster to just process a fragment with a zero alpha than to test if the point is outside of the object.</p><p>An additional increase in framerate can come from changing the arctangent function call to a two-dimensional texture. This texture can be quickly procedurally generated at run-time for a one-time cost and then used in place of the "atan2" Cg function call. This performance increase is primarily because the arctangent function is not native to the current generation of graphics cards and instead is expanded to around an additional 30 lines of GPU assembly code. The quality trade-off comes from a blockiness that is visible at close viewpoints when the texture lookup-function is used. Tests indicate that this is only minimally dependent upon the texture size itself.</p><p>One speed improvement that can allow even higher sampling densities while maintaining a faster framerate is cropping the viewing area to a subset of the bounding box. This is done at zero cost by changing the parameters for the borders in the creation of the view-aligned slices instead of putting bounds checking in as an additional geometry step in the shaders.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">TEST RESULTS</head><p>We have tested our hardware accelerated rendering technique on an Intel Xeon 3.06 GHz machine with 4GB of RAM and an nVidia GeForce 5900 Ultra graphics card. Recorded framerates in <ref type="table">Table 1</ref> were achieved using a 500×500-pixel display window. The test data set consists of 64 disks and 32,449 points per disk so a 256×256×64 regular grid is sufficient. The largest increases of framerate came from activating the texture-based arctangent. In addition, removing disk-aligned sampling can increase framerate by another 30-40%, which is not revealed in this table.</p><p>Other saving can be obtained by processing fewer fragments. The default mode (G) uses geometry clipping and branching. Additional optimization (Gd) is possible by restructuring function returns to remove an if-statement in the texture coordinate generation code. As if-statement overhead is reduced in new cards, such an optimization will become obsolete. Further saving can be achieved by avoiding branching. This is done with texture boarder extension, making the space outside the toroidal region transparent rather than performing geometry clipping. We call it alpha clipping (Ga). <ref type="table">Table 1</ref>: Performance: frames per second (relative speedup). Far: 500×500 window, but entire torus does not fill the screen. Close: window filled primarily by one segment of the torus. Top: a default view looking at the ring of the torus where the torus fills the window. C: color space D: data space A: assembly arctan At: texture-based arctan G: geometry clipping Gd: early-discard geometry Ga: alpha clipping <ref type="figure" target="#fig_8">Figure 10</ref> shows images generated with data-space rendering The image on the left was made with direct computing of atan values while on the right with table lookup. <ref type="figure" target="#fig_9">Figure 11</ref> shows images generated with color-space rendering. The image on the left was made with disk-aligned sampling while on the right with full hardware sampling. Note that using table lookup can lead to 50-75% speedup in rendering time but the image results, as shown, are comparable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Gfx Options</head><p>The value of volume rendering is that it can show scientists all of the tubular structure which is inside of the dataset. <ref type="figure" target="#fig_0">Figure 12</ref> shows direct volume rendering of the tubular structure in color space as a result of interactive cutting away and enhancement by editing transfer function. This timeslice was after the zonal flow, which means that the tubular structure generated in the "middle" timeslices, as shown in <ref type="figure" target="#fig_1">Figure 3</ref>, gets torn apart into these threads. <ref type="figure" target="#fig_1">Figure 13</ref> displays similar feature enhancement for three selected timeslices which are rendered in data space instead. When such a feature extraction and exploration can be made interactively and conveniently, the scientists' opportunity for discovery is greatly enhanced.</p><p>Finally, <ref type="figure" target="#fig_2">Figure 14</ref> shows four selected timeslices, in which we see the onset of turbulence, where eventually the eddy structure is formed in the later time steps. These images are generated in color space. It is very difficult to look at this using isosurfaces, compared to using volume rendering, because the time required to do nested isosurfaces for large GTC datasets is prohibitive. It can take over minutes per timeslice on a comparable PC.     </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DISCUSSION</head><p>The gyrokinetic data has been previously analyzed using isosurfaces, but not with volume visualization techniques. With isosurface visualization, only a selection of data values would be seen, possibly leaving out critical and or surprising information that could have been available with a volume visualization. This program was brought forward as an option for a different style of analysis. Both techniques have pros and cons, leading to different but complementary uses. Direct volume rendering gives holistic viewing of the data to see all of the tubular structure in ways impractical for isosurface techniques. The time required for isosurface creation can become prohibitively expensive as datasets increase in size and detail but isosurface visualization scales between display sizes with little penalty.</p><p>Volume visualization has different aspects affecting visualization time, including texture creation time and the pixel count of the viewing window. Texture creation time is linear with respect to not dataset size, but texture size, which can be adjusted as detail requires. And with current graphics hardware, high quality textures can be held on-card, at which point texture size is nearly decoupled from rendering speed. As this program is shader-limited, render time is proportional to the number of pixels and the sample plane density. Thus for a given image, the current implementation would not work well for large displays or powerwalls. However, it does have application as a possible monitoring tool for viewing datasets as time slices of the simulation are generated.</p><p>While interactive volume visualization is attractive, the current hardware accelerated approach suffers from two types of artifacts. The first type of artifacts is due to insufficient sampling rate in the the front and back of the volume; depending on how the viewaligned slices intersect with the poloidal data slices, different level of blurriness may appear in those regions. The second type is mainly transfer-function dependent, but has also to do with the crude hardware interpolation employed. The former can be slightly alleviated by employing more view-aligned slices but not be completely removed. The latter would require accurate interpolation following the tubular structure which is not currently practical to do in hardware due to the increased complexity of the shader program. Nevertheless, the interactivity possible still makes the hardware rendering approach attractive since scientists can freely vary transfer functions and view to tell what are artifacts and what are physical features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>The GTC particle-in-cell nonlinear microturbulence code has utilized the full computing power of the modern supercomputers to produce outstanding scientific results. Our ultimate goal is to address the major visualization challenges associated with the increasingly large data sets from GTC. In this paper we present our experience in making use of commodity graphics hardware to address the irregular grid problem. We show interactive volume visualization of the data on a single PC. This new capability offers scientists the power to examine the volumetric, tubular structures in the turbulence data.</p><p>For large meshes, like the largest one consisting of 59 million points, a much larger texture would be needed to retain accuracy. Our hardware accelerated technique can be implemented on a PC cluster to render texture of that size at interactive rates. We envision a multiresolution approach to the large data problem. That is, the scientist will switch between interactive browsing in the temporal, spatial and variable domains of the data and a close-up view of some region of interest by resampling on the fly the corresponding subset of the highest resolution data. Furthermore, these visualization techniques are valuable for most of the datasets produced in fusion simulations, since they work in toroidal coordinates.</p><p>Future work includes temporal-space animation and the incorporation of particle visualization along with volume visualization. A parallel data streaming approach has been developed to efficiently transfer terabytes of time-varying data generated by the Gyrokinetic code for data analysis and visualization <ref type="bibr" target="#b1">[2]</ref>. We will set up a parallel rendering pipeline coupled with the data streaming method for simultaneous visualization of volume and particle data.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Top: Representation of the field-line following mesh on a flux (magnetic) surface of the system (constant radius). The twist in the filed lines depends on the magnetic equilibrium of the device under study. Bottom: mesh of a poloidal plane (perpendicular section) showing the constant density of points. This mesh rotates as one goes around the torus due to the twisting of the magnetic field lines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>GTC data visualization made using AVS/Express. Left: The scalar potential. Right: Isosurface of the tubular structures.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Steps taken to generate an image of the GTC volume data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5</head><label>5</label><figDesc>Figure 5: Cartesian point C generated by first doing arclength-wise linear interpolation between A0-A1, and B0-B1, to find the interpolated data values at C0 and C1. The ρ location of C is then used to linearly interpolate between C0-C1 to find the data value at the desired texture coordinate.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Left: Original point samples. Right: 256×256 resampled points. The two planes match quite closely.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>The mixed-coordinate system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Left: Mapping between object slice planes. Right: Corresponding locations in the texture object.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Left: Data-space visualization of positive (blue/green) and negative (red/yellow) potential values. Right: Color-space visualization. Color space rendering is faster but it adds some blurriness to the picture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 :</head><label>10</label><figDesc>Data-space visualization of potential plasma flows. Left: Using the hardware-assembly expanded atan function. Right: Using a 2D lookup texture for atan.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 :</head><label>11</label><figDesc>Color-space view using hardware atan. Left: Disk-aligned sampling. Right: Full hardware sampling.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 12 :</head><label>12</label><figDesc>Volume rendering of the tubular structure with enhancement. Positive potential in blue and negative potential in pink. The volume is largely cut away to reveal a middle section.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 13 :</head><label>13</label><figDesc>Visualization of the tubular structure for three selected time steps. Positive potential in blue and green and negative potential in red and yellow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 14 :</head><label>14</label><figDesc>Four selected time steps from top to bottom. We see the onset of turbulence, where eventually the eddy structure is formed in the later time steps. Positive potential values are mapped to blue and green and negative values to red.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0" />
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Gyrokinetic toroidal code: A 3d parallel particle-in-cell code to study microturbulence in magnetized plasmas</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ethier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lewanowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hahm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">M</forename><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the CCP02 meeting of</title>
		<meeting>the CCP02 meeting of</meeting>
		<imprint>
			<publisher>APS/DCOMP</publisher>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Grid-based parallel data streaming implemented for the gyrokinetic toridal code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Klasky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ethier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Martins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mccune</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samtaney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Supercomputing 2003 Conference</title>
		<meeting>Supercomputing 2003 Conference</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Gyrokinetic approach in particle simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physics of Fluids</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="556" to="562" />
			<date type="published" when="1983-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Gyrokinetic particle simulation model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page" from="243" to="269" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Size scaling of turbulent transport in magnetically confined plasmas</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ethier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hahm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">M</forename><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phyica. Review Letters</title>
		<imprint>
			<biblScope unit="volume">88</biblScope>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Turbulent transport reduction by zonal flows: Massively parallel simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hahm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">M</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>White</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">281</biblScope>
			<biblScope unit="page" from="1835" to="1837" />
			<date type="published" when="1998-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Texture hardware assisted rendering of time-varying volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Clyne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 2001 Conference</title>
		<meeting>Visualization 2001 Conference</meeting>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">High performance visualization of timevarying volume data over a wide-area network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Camp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Supercomputing 2000 Conference</title>
		<meeting>Supercomputing 2000 Conference</meeting>
		<imprint>
			<date type="published" when="2000-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Advanced visualization technology for terascale particle accelerator simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Qiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ryne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Supercomputing 2002 Conference</title>
		<meeting>Supercomputing 2002 Conference</meeting>
		<imprint>
			<date type="published" when="2002-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Compression domain volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization 2003 Conference</title>
		<meeting>IEEE Visualization 2003 Conference</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Visualizing tokamak magnetic field line data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization 2000 Conference</title>
		<meeting>IEEE Visualization 2000 Conference</meeting>
		<imprint>
			<date type="published" when="2000-10" />
			<biblScope unit="page" from="501" to="504" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Scalable self-orienting surfaces: A compact, texture-enhanced representation for interactive visualization of 3d vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Pacific Graphics 2002 Conference</title>
		<meeting>the Pacific Graphics 2002 Conference</meeting>
		<imprint>
			<date type="published" when="2002-10" />
			<biblScope unit="page" from="356" to="365" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Fast display of illuminated field lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zockler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="118" to="128" />
			<date type="published" when="1997-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A hardware-assisted hybrid rendering technique for interactive volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mccormick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 2002 Volume Visualization and Graphics Symposium</title>
		<meeting>2002 Volume Visualization and Graphics Symposium</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="123" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">High dimensional direct rendering of time-varying volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Woodring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization 2003 Conference</title>
		<meeting>IEEE Visualization 2003 Conference</meeting>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
