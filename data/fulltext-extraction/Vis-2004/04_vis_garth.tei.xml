<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Tracking of Vector Field Singularities in Unstructured 3D Time-Dependent Datasets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christoph</forename><surname>Garth</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Computer Science</orgName>
								<orgName type="institution">University of Kaiserslautern Xavier Tricoche Scientific Computing and Imaging Institute University of Utah</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Inst. of Computer Science</orgName>
								<orgName type="institution">University of Leipzig</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Tracking of Vector Field Singularities in Unstructured 3D Time-Dependent Datasets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.4.7 [Image Processing and Computer Vision]: Feature Measurement-[I.6.6]: Simulation And Modeling-Simulation Output Analysis J.2 [Physical Sciences and Engineering]: Engineering- flow visualization</term>
					<term>topology tracking</term>
					<term>time-dependent datasets</term>
					<term>vortex breakdown</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Illustration of complex vortex breakdown in a single timestep of the delta wing dataset. Transparently rendered separation surfaces originating at stagnation (saddle) points related to vortex breakdown on the delta wing (red and yellow). The blue stream surface originates at the tip of the wing and wraps the vortex core up to the breakdown point. The stream surfaces are computed using the approach described in [3]. This timestep was singled out by looking for interesting configurations of the complex vortex breakdown on the left side of the delta wing (cf. Section 6 and Figure 6 right).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In the design of modern aircraft, computer simulations are an important tool in the development of new prototypes. While the basic principles of aerodynamics are well established, they are applicable to large scale problems only and do not describe the increasingly important details on small scales. The quality of numerical models has risen to a point where simulations can fill this gap. As the demand for faster aircraft and improved security is high, they have proven an extremely valuable tool in comparison to physical experiments. Aside from the validation of prototypes, simulations can help to increase our understanding of the dynamics of some of the more complex flow patterns that keep appearing in aviationrelated problems. They facilitate complicated flow experiments and provide accurate measurements not only at points of interest (that might not even be known a priori) but over the whole domain considered, and it is possible to evaluate quantities that cannot be measured physically. However, the advantage of complete data for a given problem is also a hindrance in its analysis. Since detailed models require fine resolutions, the amount of generated data is enormous. This is especially true for time-dependent problems. Resulting datasets are usually multi-gigabyte sized. Thus the problem of interpretation of a dataset often encompasses finding points of interest first.</p><p>Concerning the design of delta wing type aircraft, for both civil and military use, the vortex breakdown phenomenon has stood in the way of a wide application of these designs. The greater part of the lift a delta wing experiences is created by a system of vortices above the wing. This results in generally very good maneuverability and the possibility of high airspeeds. However, it can be observed that in certain situations (low speed and high angle of attack) these vortices tend to break down in the sense that the flow pattern becomes unstable and the vortical structure disappears, resulting in a loss of lift that can have fatal consequences regarding controllability of the aircraft. Furthermore, the pressure differences inherent in the breakdown can severely damage the structure of the aircraft. Therefore, there is a need to understand the origins of this phenomenon such that it can be avoided in future designs. While understanding is still incomplete, it is known that vortex breakdown is characterized by the appearance of stagnation points on the axis of the primary vortices <ref type="bibr" target="#b9">[10]</ref>. Here, numerical simulations can show their full power by providing insight that will help the development of theories as to why and when vortex breakdown will occur. Although the phenomenon can be reproduced in stationary simulations, the full dynamics are only available from time-dependent To obtain insight from resulting datasets we have developed an algorithm to track the detected stagnation points (which are essentially zeros of the velocity field) over time and discover the relations between them (i.e. the structural evolution of the vector field) and characteristics of related quantities such as acceleration and signed helicity. The algorithm was developed to work on threedimensional unstructured tetrahedral grids since the unstructured grids provided by numerical simulations can be easily converted to this form. A visualization of the results (four dimensional in nature and thus hard to represent) is then given by reducing the problem to two dimensions. To keep the algorithm simple and efficient, we have drawn on the theory of dynamical systems, namely the theory of the Poincaré index. The main statement here is that vector field singularities in piecewise linear fields obey a set of rules that simplify their tracking through time. The work shown here is related to the usual notion of flow topology; however, we are not concerned with extracting all topological elements but rather a suitable small subset of its temporal evolution.</p><p>The paper is structured as follows: Section 2 gives an overview over previous and related work. In Section 3, we detail some theoretical results related to the Poincaré index, with a special emphasis on three-dimensional problems. We develop the tracking algorithm in Section 4, before we write about some issues related to preprocessing of the datasets and post-processing of the results in Section 5. The results we obtained from applying our algorithm to actual datasets are given in Section 6 before we conclude on the work shown here in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The appearance of vortex breakdown (some authors call it vortex burst) has concerned many authors in the fluid mechanics community due to its relevance for a number of applications (see e.g. <ref type="bibr" target="#b9">[10]</ref>). In the field of visualization, Kenwright and Haimes <ref type="bibr" target="#b6">[7]</ref> were among few to write about the detection and visualization of vortex breakdown. They already emphasize its importance in aeronautics. Their interpretation of vortex breakdown is a significant change in the direction of the vortex core. From today's point of view, this explanation is slightly misleading, since the role of flow singularities and their effect on vortex core detection methods was not understood.</p><p>Concerning the temporal variation of features, there are approaches that detect features in several timesteps and perform a matching procedure to extract their evolution (e.g. Silver and Wang <ref type="bibr" target="#b11">[12]</ref> and Samtaney et al. <ref type="bibr" target="#b10">[11]</ref>). Making explicit use of the temporal interpolation, Weigle and Banks <ref type="bibr" target="#b15">[16]</ref> extract features in the form of four-dimensional isosurfaces. A similar course is followed by Bauer and Peikert <ref type="bibr" target="#b0">[1]</ref>. They incorporate a scale-space approach into their method for the tracking of vortex cores. As to the interrelations among multiple features over time, Silver et. al <ref type="bibr" target="#b1">[2]</ref> have developed the feature tree that is remotely related to the much simpler structural graph we establish in Section 5.</p><p>The importance of singularities and separatrices in flow fields was recognized quite early by Helman and Hesselink <ref type="bibr" target="#b5">[6]</ref> and resulted in two-dimensional topology visualization. Complete threedimensional topology has not been attempted yet, however there are authors that examine suitable subsets, such as Globus <ref type="bibr" target="#b3">[4]</ref> and Theisel et. al <ref type="bibr" target="#b13">[14]</ref>. In their paper, they compute saddle connectors as a basis for a topological skeleton. Relaxing the meaning of separation surfaces, Mahrous et al. <ref type="bibr" target="#b7">[8]</ref> recently published a method for topological segmentation of steady vector fields surfaces that separate flow regions with different properties.</p><p>Tricoche et al. <ref type="bibr" target="#b14">[15]</ref> describe how the time-tracking of singularities and the corresponding topological variations can be investigated for instationary 2D vector fields. This paper essentially ex-tends their method to three spatial dimensions, however, we concentrate on the critical points and do not treat topological connectivity. Theisel and Seidel <ref type="bibr" target="#b12">[13]</ref> have also given a method for the tracking of critical points in more general settings by integrating streamlines of the derived feature flow field. In Section 7 we will briefly discuss the relative merits of their approach in comparison to ours.</p><p>As to the concept of the Poincaré Index in three dimensions, Mann and Rockwood <ref type="bibr" target="#b8">[9]</ref> have published a very well-written paper in which they explain its basic premise and show how it can be applied to the study of critical points and other types of singularities. Their work is however limited to the study of analytical vector fields and is not directly applicable in the setting of this paper. For the basic theory, they use the notations of Geometric Algebra. Although the formalism is very elegant, it has not been widely used in the Visualization community. We therefore give a very brief overview the basic theory in the next section using a more conventional notation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE POINCARÉ INDEX IN 3D</head><p>Remark: In the following, when we speak of singularity, we will mean isolated zeros of a vector field.</p><p>In two dimensions, the index concept is well understood and has been explained by several authors (see e.g. <ref type="bibr" target="#b14">[15]</ref>). We immediately start in a three-dimensional setting: let v(x) be a three-dimensional smooth vector field. We employ the notion of closed surfaces, i.e. surfaces that are topologically equivalent to a sphere. The basic idea of the index is the answer to the question of how many times a vector field "rotates" in the neighborhood of a point. Rotations in 3D are not easily measured and compared (we would need to employ quaternions), therefore, we take a slightly different and more geometric approach. The winding number # x (S) of a closed surface S with respect to a point x is given by</p><formula xml:id="formula_0"># x (S) := 1 4π S y − x |y − x| 3 dS(y).</formula><p>It can be proven to be integer and is interpreted as the number of times S wraps around x. For example, the x-centered sphere S ε (x) of radius ε &gt; 0 has the canonical winding number 1. Now, to define the index of a closed surface S, we apply a simple notion: first, we introduce the Gauss map</p><formula xml:id="formula_1">γ : IR 3 \{0} → S 2 , x → x ||x|| ,</formula><p>that maps any non-zero vector to its direction. The index k of a closed surface S is then defined as the number of times the vector field directions on S cover the origin as we move around all of S. In other words, it is the winding number of the Gauss map of v restricted to S with respect to the origin. Mathematically speaking, we have</p><formula xml:id="formula_2">4πk = # 0 (γ(v| S )) = S γ(v(x))dS(γ(v(x))).<label>(1)</label></formula><p>Note that the winding number can be read as an oriented area integral of γ(v| S ). Hence, the sign of k depends on the orientation of S relative to IR 3 . We are able to define ind z (v) of a singularity z via</p><formula xml:id="formula_3">ind z (v) := lim ε→0 # 0 (γ(v| S ε (z) )).<label>(2)</label></formula><p>Furthermore, a very useful result is easily obtained: let S be a closed surface that encloses the vector field singularities z i . Then</p><formula xml:id="formula_4">∑ i ind z i (v) = # 0 (γ(v| S )).</formula><p>As a consequence of the last equation, it is possible to calculate the index of a singularity by enclosing it with a surface small enough not to contain any other singularities. Furthermore, the shape of the surface does not matter as long as orientation is fixed relative to IR 3 for all such surfaces. As in the two-dimensional case (where one usually considers positively oriented paths), positive orientation is assumed for all closed surfaces henceforth. As a special case of this last equation, S does not enclose any singularity in its interior if its index vanishes. Although this definition is appealing in the mathematical sense, its application for computing indices in e.g. piecewise linear vector fields as often presented by applications is tedious. We therefore proceed by looking for an easier means to determine a singularity's index in these cases.</p><formula xml:id="formula_5">− −− → γ − −− → γ</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Linear vector fields</head><p>Consider a linear vector field of the form</p><formula xml:id="formula_6">v(x) = Jx + c.</formula><p>If J has full rank, v has exactly one isolated singularity at z = −J −1 c. Then, the index of v at z is given by the sign of J, i.e. ind z (v) = sign(det J).</p><p>(</p><p>It is quite easy to see how this simple formula works: since J is one-to-one, we easily find that | ind z (v)| = 1 (all directions on the unit sphere are reached exactly once). Hence, the sign of the index only depends on the relative orientations of S and γ(v| S ) for any S that wraps z. If J is orientation-preserving (i.e. det(J) &gt; 0), the index is +1, otherwise it is −1. Hence <ref type="formula" target="#formula_7">3</ref>holds. There is a simple connection between the usual classification of linear singularity types (e.g. saddle, node, etc.) and the index. The index is essentially the sign of the product of the eigenvalues of the Jacobian matrix at the singularity. Since in three-space, the Jacobian has three eigenvalues, this allows for a wider range of possibilities than in two dimensions. For example, in 2D a saddle point has always index −1, whereas in 3D it can have both +1 or −1. This shows that the geometry of the defining space has a strong influence on the geometry of vector fields and the nature of apparent vector field singularities. The exact classification of the singularities does not play a role in the remainder of this paper, hence we do not go into detail here.</p><p>While it seems that (3) is easily applied to piecewise linear vector fields, special care has to be taken in order to guarantee stable numerical evaluation of the determinant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Time-dependent vector fields</head><p>Let v(x,t) be a smooth time-dependent vector field, and let S(t) be a closed surface that changes position and shape smoothly with time. Then, if</p><formula xml:id="formula_8">v(x,t) = 0 ∀t, x ∈ S(t),<label>(4)</label></formula><p>the index of S(t) is constant in t. Condition (4) essentially ensures that no singularity is passing through S(t) as time increases. Hence, the z i enclosed by S(t) will remain enclosed, and no other singularity can join them. The argument then proceeds along the same lines as earlier. The right hand side of (2) varies continuously with time, and at the same time, it is integer; hence it must remain constant.</p><p>The significance of this statement is large: it basically states that the index of a closed surface S(t) is conserved over time, which allows us to impose certain restrictions on the temporal evolution of singularities enclosed in S(t). The most important one for our purposes is that singularities must appear or disappear in groups such that the sum of their indices vanish. For example, if a pair of singularities is created, they must have indices of +k and −k respectively. Such a change of the structure of a vector field with a parameter (in our case the parameter is time) is called a structural bifurcation. A more extensive treatment of the theory of bifurcations of vector fields can be found in the book by Guckenheimer and Holmes <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">TRACKING OF SINGULARITIES</head><p>In the following we will be concerned with developing an algorithm to the purpose of determining the paths of isolated singularities of a time-dependent piecewise-linear vector field, given on a tetrahedral grid.</p><p>Let p i ∈ IR 3 be a set of points and v j i the vector values associated with the p i at discrete times t j ∈ IR. Let T k be a set of tetrahedra defined on the points p i . Then every tetrahedron T k gives rise to a vector field v(x,t) that is linear in both space and time: if x ∈ T k and t</p><formula xml:id="formula_9">∈ [t j ,t j+1 ], then set v(x,t) = 3 ∑ l=0 β l (x) t − t j t j+1 − t j v j+1 l + t j+1 − t t j+1 − t j v j l ,</formula><p>where β l are the barycentric coordinates w.r.t. T k and l refers to the vertices of T k . We will next examine the paths of singularities in a single tetrahedron T k .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Bifurcations</head><p>Considering structural changes, we have determined that a tetrahedron can include at most one isolated singularity, because the field is linear. This has one major implication: structural bifurcations cannot occur in linear vector fields. For the case of piecewise linear fields this implies that bifurcations must be located in places where two linear pieces are adjacent. For tetrahedral grids with per-tetrahedron linear interpolation, we find that bifurcations must happen in places where the field is not linear, i.e. on the boundaries between different tetrahedra. There are three possibilities: vertices, edges and faces of the grid. We will consider faces first. Assume we have two tetrahedra T 1 and T 2 that share a common face on which we find a bifurcation at some time t. Since the field is linear in both tetrahedra, only two singularities can be involved and one must be located in T 1 and the other in T 2 . Moreover, due to conservation of the index, the overall index must remain zero, hence the indices of the singularities must be +1 and −1. Hence, bifurcations on faces are of a relatively simple nature.</p><p>It would now be in order to discuss bifurcations on edges or vertices. However, these cases are quite intricate. Since more than two tetrahedra are involved, the list of possible bifurcation types is long, and non-linear singularities are involved. (cf. <ref type="bibr" target="#b4">[5]</ref>). The occurrence of a bifurcation on an edge or on a vertex of the grid is extremely unlikely at best due to numerical issues (the situation is similar to the problem of identifying higher order roots of polynomials). For the noise-afflicted CFD datasets we are interested in this issue is aggravated. Therefore, we can limit ourselves to the case of face bifurcations for all practical purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Paths in a Tetrahedron</head><p>We first consider a single tetrahedron T and determine what possibilities exist for the path of a singularity z. To simplify the notation, we assume that the vector field in T is given in the form</p><formula xml:id="formula_10">v(x) = 3 ∑ i=0 β l (x) (1 − t)u i + tv i ) , x ∈ T,t ∈ [0, 1]</formula><p>and that v is non-degenerate, i.e. it contains exactly one isolated zero at all times. For fixed t we can solve for the position of the singularity of this field in barycentric coordinates. For example, with w i (t) = (1 − t)u i + tv i we write (omitting the parameters)</p><formula xml:id="formula_11">v = w 0 + β 1 (w 1 − w 0 ) + β 2 (w 2 − w 0 ) + β 3 (w 3 − w 0 )</formula><p>and apply Cramer's rule to find</p><formula xml:id="formula_12">β 1 (t) = det(−w 0 , w 2 − w 0 , w 3 − w 0 ) det(w1 − w0, w2 − w0, w3 − w0) =: b 1 (t) q(t) .</formula><p>The same can be done for all β i . Brief computation shows that the resulting b i (t) and q(t) are polynomials of degree 3 in t. We required that v be non-degenerate, this reflects in q(t) = 0 for all t ∈ [0, 1]. Naturally, if β i (t) &lt; 0 for some i, the singularity of v is outside the tetrahedron for this specific t. In other words, we have found an explicit representation for the location of z. Taking a closer look at b i , we find that the zeros of these polynomials allow us to determine when z crosses one of T 's faces. If fort ∈ [0, 1] we find β i (t) = 0 and β j (t) &gt;= 0 for j = i, then the singularity is located on the face of T opposite the vertex p i (its barycentric coordinate is zero). For this case, by evaluating the sign of the derivative</p><formula xml:id="formula_13">β i (t) = b i q (t) = b i (t) q(t) (since b i (t) = 0)</formula><p>we can tell if the singularity enters or leaves the tetrahedron att. We will say that T has an entrance/exit on face F att. This information is important to determine in which neighboring tetrahedron (if one exists for F) the singularity path continues. For fixed t ∈ [0, 1] there can be at most one singularity inside T (since the field in T is linear), hence we can conclude that if there is a singularity in T at some t ∈ (0, 1), it must either have entered T at an earlier time 0 &lt;t &lt; t or remained in T since t = 0 (in this case we will say that z enters at t = 0). In complete analogy, it must either exit T at t &lt;t &lt; 1 or remain in T until t = 1 (read z exits at t = 1). In other words, a singularity path always connects an entrance to an exit, and exits and entrances always come in pairs. Since there cannot be more than one singularity in T at a given time, an entrance is always connected to the closest exit (w.r.t. t).</p><p>When z passes from T to a neighbor T through the face F at t, in both T and T there is a singularity on F att. There are two possibilities: either we find an exit/entrance combination in T and T , in which case the path continues in T , or we find an exit/exit or entrance/entrance combination. In the last case, the vector field has a structural bifurcation on F att (i.e. creation or annihilation of a pair of singularities), and the paths of both singularities involved start or end on F.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Tracking algorithm</head><p>Having simplified matters so far, we now give a simple scheme for tracking a singularity path between two timesteps t = 0 and t = 1 that works by simply connecting entrance/exit path segments over tetrahedron boundaries.</p><p>Assume that a singularity z is present in T at t ∈ (0, 1). Then, to compute the path forward in time 1. compute the b i and q for T , and determine entrances and exits 2. if there is no exit later than t, z exits T at t = 1; the path is complete 3. if there are exits in T , then z leaves T at the earliest exit later than t; determine the neighbor tetrahedron T corresponding to the exit face F and compute b i , q for T 4. if T has an exit on F corresponding to the exit on T (→ bifurcation), the path of z ends on F 5. otherwise, T has an entrance on F corresponding to the exit on T ; z is now in T . Set T = T and restart at 1.</p><p>Following the path of z backwards in time can be achieved in a completely analogous manner. Both directions are completely equivalent. We use this procedure as a building block for computing the paths of all singularities present in two given timesteps between t = 0 and t = 1:</p><p>1. find the sets of tetrahedra S 0 and S 1 that contain a singularity at t = 0 and t = 1 respectively. Let B = {} be the set of bifurcations encountered in between t = 0 and t = 1.</p><p>2. for every T ∈ S 0 : follow the path of z forward in time (a) if it ends in T at t = 1, eliminate T from S 1 .</p><p>(b) if it ends at a bifurcation, add it to B.</p><p>3. for every T ∈ S 1 (singularities not reached by paths from t = 0): follow the path of z backward in time (a) it must end at a bifurcation; add it to B 4. for all bifurcations in B: check if B has two paths connecting to it; if it does not, there must be another singularity involved. Follow its path forward or backward in time depending on whether the bifurcation is a creation of singularities or an annihilation.</p><p>(a) the path must end at a bifurcation; add it to B; goto 4.</p><p>The algorithm essentially avoids multiple tracing of the same path by making use of the equivalence between forward and backward tracing (i.e. if a path extends from t = 0 to t = 1, we only need to trace it forward). The extra effort in step 4 is required because non-intuitive situations can occur (see <ref type="figure">Figure 4)</ref>. The end result is a set of paths that completely describe the continuous structural variation of the vector field between the two timesteps. Going to several timesteps from here is easy as it only involves connecting the paths from different timesteps according to which singularity they start/end at.  Remark: some cases are not covered by the given algorithm. For example: if the two bifurcations that create and annihilate a pair of singularities lie between two timesteps, neither of the singularities will show up in either timestep, and hence their paths will not be discovered by the algorithm (see <ref type="figure">Figure 4</ref>). However, since they do not interact with other singularities, they do not play an important role in understanding the structural changes in between the timesteps. Moreover, it is often desirable to ignore small-scale local behavior (see also Section 5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">APPLICATION TO DATASETS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Pre-and post-processing</head><p>To obtain a complete picture of the structural evolution of a given dataset, the interaction of the various singularities form a structural graph with bifurcations as vertices and paths as edges (see <ref type="figure" target="#fig_5">Fig. 5</ref> for an example). We will shortly describe how this graph can be used in post-processing of results.</p><p>The method shown in Section 4 is limited to tetrahedra and the given dataset must be tetrahedrized before application. Although the tracking algorithm could be enhanced to deal with nontetrahedral grid cells, a generalization would result in a number of special cases that complicate the relatively simple structure of the algorithm. In the form presented above, implementation is straightforward and fast. However, a small price has to be paid: tetrahedrization of arbitrary grids can result in the creation of singularities that are not in the original dataset. It is possible that a cell of index 0 is split up in such a way that the resulting tetrahedra have non-vanishing index. These "artificial" singularities do not pose a  <ref type="figure">Figure 4</ref>: Left: Tracking only paths originating on timesteps does not completely explain the structural evolution (the blue path would not be discovered). Making sure that every bifurcation has two paths connecting to it solves this problem. Right: Paths that are not discovered since they have no entrance or exit on a timestep.</p><formula xml:id="formula_14">T 1 T 2 t j+1 t j t j t j+1</formula><p>problem, since they are always created in pairs and usually only last for a short period of time.</p><p>Numerical datasets are often subject to noise, especially if the computations involve some kind of differentiation. It is common practice to apply smoothing operators to datasets in order to undo some of the damage done by previous computations. Numerical noise usually reflects in short-lived pairs of artificial singularities that exist in isolation and are not part of the dataset's structural evolution over time. It can also occur that a path is "interrupted" by a pair of artificial bifurcations that enclose a path segment of very short duration <ref type="figure">(Fig. 4 (left)</ref> gives an example).</p><p>What seems a drawback at first can be turned into an advantage: instead of smoothing the dataset we filter the resulting set of singularity paths by removing paths that last less than e.g. one timestep. Filtering can be applied on the structural graph directly and can be implemented in an efficient way by first removing edges that represent paths with short duration and successively removing all isolated vertices. In our experiments, we found this method to be very effective in treating noisy datasets. It turns out that conventional smoothing does not significantly reduce the number of artificial singularities. It however affects the structure of the dataset in such a way that the structural evolution is obscured or changed (this is especially true for minimum/maximum tracking as described in the next paragraph).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Tracking of minima and maxima</head><p>The presented algorithm is concerned with tracking singularities in vector fields. By applying the above approach to gradient fields of scalar quantities, we are able to track the evolution of minima and maxima throughout time by following the paths of the associated singularities in the gradient fields. The algorithm can be directly applied to this modified problem. The resulting structural graph can then be filtered to only include paths of single singularities, i.e. attracting and repelling nodes. Note that while minima and maxima do not necessarily appear in pairs, they are still created and destroyed at bifurcations in the structural evolution. Although e.g. saddle points in the gradient field might have some physical meaning as well, we did not consider them in our examples (see Section 6).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Visualization</head><p>The structural evolution of a vector field is basically a graph whose vertices have a total of four coordinates (3D space + 1D time). Representing the paths of singularities in three-space directly turns out to be non-intuitive, and adding temporal information to the presented locations via color-coding or animation does not help. Therefore, we approach the problem by first reducing the dimension from four to two by a change of coordinates.</p><p>In one of our examples (cf. Section 6), the dataset is highly rotation symmetric and singularities appear and move on the symmetry axis only. Their complete evolution is then easily represented in a 2d diagram. However, the other example is much more intricate, and there is no canonical axis to represent the movement of the singularities. If the positions of all singularities at all times are taken into account, then we are able to determine the principal spatial direction and the common center of their movement by evaluating the zeroth and first order terms of the corresponding principal component analysis. This provides a single spatial coordinate along which to describe the location of singularities. For more complicated datasets, higher order terms of the PCA and interpolation can be drawn upon to generate a curved coordinate. The resulting twodimensional diagrams quickly enable the viewer to discover key points in the structural evolution that can then be analyzed in detail with other methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>We have applied our algorithm to two different time-dependent datasets of CFD simulations performed by the German Aerospace Center (DLR)/Göttingen using their TAU code. Both take the form of a velocity field provided on the vertices of an unstructured grid consisting of tetrahedra, pyramids and prisms. Although the simulations are based on problems that show some degree of symmetry, the computation was performed on the full domain. While the can dataset retains the symmetry of the original problem, the delta wing dataset shows increasingly different behavior on both sides of the wing as time passes.</p><p>It is already known that vortex breakdown is associated with the occurrence of (pairwise) stagnation points, therefore we have applied the tracking algorithm to the velocity fields first. Furthermore, there are speculations that both acceleration and signed helicity play an important role in this context. We have computed these fields for those datasets and applied tracking to them as well, in the case of signed helicity (which is a scalar quantity defined as the normalized scalar product of velocity and vorticity)) minimum tracking was performed (as described in Section 5). Since these computations involved taking derivatives of the original velocity fields, we observed strong numerical noise in both helicity and acceleration yielding many artificial singularities. Using the structural graph filtering method described in Section 5 we were still able to obtain meaningful results.</p><p>The tracking algorithm itself is of linear complexity in both the number of singularities and the number of timesteps. The most time-intensive part is the pre-computation of all singularities in a timestep, for which each cell has to be considered individually. This is not a drawback of our algorithm but rather a limitation inherent in this class of tracking algorithms (cf. <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b12">13]</ref>). If this information is assumed given, the running times for our examples are on the order of very few seconds. Since the algorithm only needs two successive timesteps to do its work, it is possible to integrate it directly into the CFD simulation. The structural graph for all timesteps can then be completed in post-processing. This would also allow for online supervision of simulations that are still in progress. We will next detail the results for both datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Can dataset</head><p>The simulation describes a can filled with a highly viscous fluid that is accelerated by rotation of the lower lid. The rotational speed varies over time, leading to breakdown of the central vortex that covers the symmetry axis of the can. Due to the high viscosity of the fluid and the high degree of symmetry the velocity field is of very good numerical quality. This dataset is very close to being a standard model of vortex breakdown and consists of about 5000 timesteps on a grid with approx. 4.4 million tetrahedra after decomposition.</p><p>The results are of almost analytical quality (see <ref type="figure" target="#fig_5">Figure 5</ref>). The simulation actually shows two occurrences of vortex breakdown (and two corresponding pairs of stagnation points) and it is interesting to observe how primary and secondary vortex breakdown successively merge and re-split. Acceleration zeros and helicity minima show a strong correlation with the onset of the breakdown process and the bifurcation that creates the two stagnation points. Before our analysis of the dataset, this correlation was not known. It is also obvious that the structural graph serves as a kind of "directory" for the different timesteps by indicating interesting phenomena. Through this, relevant timesteps can be identified quickly and reliably.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Delta Wing dataset</head><p>In order to study vortex breakdown in aviation, an unsteady simulation of a delta wing configuration was performed. The angle of attack is increased over time, and the primary vortices eventually exhibit breakdown. The simulation totals 1000 time steps that describe the formation and breakdown of the primary vortices over time. The grid consists of about 18 million tetrahedra after decomposition. The dataset is somewhat noisy in a numerical sense since the resolution is still too low in some of the more interesting parts of the dataset (this is especially true for the vortex breakdown regions). <ref type="figure" target="#fig_6">Figure 6</ref> provides an overview showing stream surfaces that wrap around the primary vortices above the wing (red and blue). Asymmetric breakdown is clearly visible.</p><p>We have used our method on two regions in the dataset that correspond to breakdown on both sides of the wing. After the coordinate transformation (see also Section 5), the structural graph of the right region (cf. <ref type="figure" target="#fig_7">Figure 7)</ref> clearly shows the evolution of the stagnation points as they move towards the wing. Again, acceleration zeros and a helicity minimum seem to play a role in formation of breakdown, although the correlation is not as obvious as in the can dataset. This is, in part, to be blamed upon the lack in resolution and the resulting numerical instability of differentiation. Filtering of the structural graph for the helicity gradient field (whose computation involves a second spatial derivative) reduced the number of meaningful paths from roughly 1.000 to 4, effectively eliminating all artificial singularities. The left region is even more complex, and it is clearly visible how the stagnation points begin to oscillate and disappear around timestep 730, to be followed by what appears to be a sequence of short-lasting vortex breakdowns in different places. In this case, the structure graph helps in grouping the velocity field singularities that would otherwise just be isolated singularities in the field without any context. Using the structural graph as a guide to find interesting timesteps in the evolution, we produced <ref type="figure">Figure 1</ref> from timestep 760 where the graph indicates the presence of three successive breakdown bubbles. The stream surfaces shown are separation surfaces originating in the separation planes of the (saddle) stagnation points. Although this picture conveys the basic structure of the breakdown bubbles, for an accurate interpretation the structural graph is needed. <ref type="figure" target="#fig_6">Figure 6</ref> gives a direct comparison between the evolution of stagnation points on the left and right sides and the corresponding flow structures (displayed by stream surfaces). While the behavior is almost similar in the beginning, the left side quickly deteriorates. Again, the structure graph can provide for a direct qualitative comparison that is very hard to achieve by other means (e.g. streamlines or surfaces).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>The objective of the work presented in this paper was to determine the structural evolution of certain types of complex time-dependent CFD datasets. First, we have presented a number of theoretical results about the Poincaré index in three spatial dimensions. It is an extremely powerful yet intuitively geometric concept of describing singularities of 3D vector fields and the laws they must obey under time-varying circumstances. Considering the restrictions imposed by tetrahedral grids with piecewise linear interpolation in space and time, we were able to give a robust and straightforward algorithm to the intended purpose. By providing a temporal overview of the dataset using the structural graph that is built from singularity paths, it is possible to quickly determine points of interest in large datasets with many timesteps. Furthermore, the method has already proven useful in the analysis of two datasets where the flow exhibits vortex breakdown. Since understanding of this phenomenon is still incomplete from a fluid mechanical point of view, we believe that the uncovered interrelations of various quantities can be an important step towards a complete explanation. Here, visualization can show its strength by giving new impulses in fluid mechanics.</p><p>Concerning the tracking algorithm, we wish to briefly compare our approach to the more general one of Theisel and Seidel <ref type="bibr" target="#b12">[13]</ref>. They approach feature tracking in 2D by defining a threedimensional feature flow field, and the singularity paths are obtained by integrating streamlines in this vector field. The method is agnostic of the data representation and could be generalized to 3D. However, a number of difficulties arise in implementation: first, the feature flow field is constructed by use of derivatives, which can be painful to generate with good quality on unstructured grids. Furthermore, it mandates very high integration accuracy especially for the quite noisy application datasets under consideration here. We feel that, for the type of grid considered here and the resulting constraints on the behavior of critical points, using a set of simple logical rules to deduce the evolution of singularities (cf. Section 4) has clear advantages in both speed, relevant especially for very large datasets, and accuracy. We have, however, not attempted a direct comparison of the two approaches due to the high implementation overhead inherent in <ref type="bibr" target="#b12">[13]</ref>.</p><p>There is some space for improvement on the presented material. The tracking algorithm could be extended to deal with trilinear interpolation to make possible the treatment of CFD grids directly without the need for prior tetrahedrization. So far, singularities have not played a significant role in the analysis of vortex breakdown datasets; this has changed with the advent of simulations that are able to resolve the very complex flow patterns. If a more complete picture of a given flow can be obtained via the structural graph, the detection of certain types of flow behavior could be automated based on the graph. With efforts underway to automatically optimize the geometries of e.g. aircraft to exclude undesired effects, the structural graph could provide a robust criterion to indicate their presence. Vortex breakdown serves as a prime example.</p><p>As to the visualization of the structural graph it should be examined in how far this reduction in dimensionality can be applied to more general problems. For genuinely one-dimensional phenomena such as vortex breakdown (the stagnation points basically travel along the vortex core line) our method is certainly appropriate. To obtain a temporal overview of the dataset structure and isolate regions of interest, the exact spatial location of the singularities is not critical. Therefore, the PCA we employed will lead to a good separation of the individual singularities and thereby guarantee a good depiction of the structural graph. Timestep 1700 shows both breakdowns, whereas the second breakdown has already vanished in timestep 4000 and the first breakdown shows the typical "mushroom" structure.   <ref type="figure">Figure 1</ref>).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>October 10 -</head><label>10</label><figDesc>15, Austin, Texas, USA IEEE Visualization 2004 0-7803-8788-0/04/$20.00 ©2004 IEEE calculations. Figure 1 depicts a staggered vortex breakdowns from such a simulation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Vector field directions on a closed surface S. Upper row: the directions do not cover S 2 , hence the winding number of γ(v| S ) is zero. Lower row: S 2 is covered once, |# 0 (γ(v| S ))| = 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Structural evolution of singularities. Three spatial dimensions are represented on the vertical axis.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Left: Structural graph of the can dataset. The green paths represent the stagnation points in the velocity field. Primary and secondary breakdown each create a pair of stagnation points. Around timestep 1888, the two phenomena join, only to re-split at timestep 2458 and successively decay. The blue and orange paths belong to helicity minima and acceleration zeros. Note the strong interrelation between the three quantities. Middle and right: Two snapshots from the can dataset. Separation stream surfaces are started at the singularity positions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Left: Overview of the delta wing dataset with its two primary vortices above the wings. Stream surfaces wrap around the vortices and are eventually distorted by vortex breakdown. Note the asymmetrical breakdown structure. Middle and right: Structural graphs for right and left breakdown. Again a connection between various quantities involved in vortex breakdown can be observed for the right breakdown. In the left breakdown, several oscillating breakdown structures are visible in the later timesteps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>structural evolution left vs. right timestep 730 (right vortex breakdown) timestep 730 (left vortex breakdown) Comparison of right and left breakdown structures. Left image: The combined structural graphs make an intuitive comparison possible. Middle and right: transparent stream surfaces show the distortion of the flow and the intricate flow patterns that make analysis difficult. The left breakdown does not show the usual breakdown structure and consists of several smaller and independent breakdowns (see also</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>Foremost, the authors would like to thank Markus Rütten from DLR Göttingen for close collaboration and insightful remarks. He kindly provided the datasets considered here. We also wish to thank the reviewers for their suggestions and some interesting questions. Our gratitude also extends to all members of the FAnToM project at the University of Kaiserslautern for their implementation efforts. This work was partly supported by DFG grants HA 1491/15-4 and HA 1491/15-5.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Vortex tracking in scale-space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization 2002. Proc. VisSym &apos;02</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The feature tree: Visualizing feature tracking in distributed amr datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Jiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Parallel and Large-Data Visualization and Graphics</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Surface techniques for vortex visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Salzbrunn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Eurographics -IEEE TCVG Symposium on Visualization</title>
		<meeting>Eurographics -IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A tool for visualizing the topology of three-dimensional vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Globus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Levit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lasinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization Proceedings</title>
		<imprint>
			<date type="published" when="1991-10" />
			<biblScope unit="page" from="33" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Nonlinear Oscillations, Dynamical Systems, and Bifurcations of Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Guckenheimer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Holmes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualizing Vector Field Topology in Fluid Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="36" to="46" />
			<date type="published" when="1991-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Vortex Identification -Applications in Aerodynamics: A Case Study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">N</forename><surname>Kenwright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haimes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<editor>R. Yagel and H. Hagen</editor>
		<meeting><address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="413" to="416" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Topological segmentation in three-dimensional vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mahrous</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bennet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="198" to="205" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Computing singularities of 3d vector fields with geometric algebra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rockwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization Proceedings &apos;03</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On the creation of stagnation points near straight and sloped walls</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mullin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Kobine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Tavener</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Cliffe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physics of Fluids</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Visualizing features and tracking their evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samtaney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="20" to="27" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Tracking and visualizing turbulent 3d features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Feature flow fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Joint Eurographics-IEEE TVCG Symposium on Visualization</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Saddle connectors -an approach to visualizing the topological skeleton of complex 3d vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;03</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Topology tracking for the visualization of time-dependent two-dimensional flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wischgoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="249" to="257" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Extracting iso-valued features in 4-dimensional scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Weigle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Symposium on Volume Visualization</title>
		<meeting>Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
