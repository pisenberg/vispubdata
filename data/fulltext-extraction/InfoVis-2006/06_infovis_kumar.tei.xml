<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visual Exploration of Complex Time-Varying Graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gautam</forename><surname>Kumar</surname></persName>
							<email>gvkumar@uiuc.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
							<email>mjgarland@acm.org</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Visual Exploration of Complex Time-Varying Graphs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2006; accepted 1 August 2006; posted online 6 November 2006.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Graph and network visualization</term>
					<term>financial data visualization</term>
					<term>hierarchy visualization</term>
					<term>time series data</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Many graph drawing and visualization algorithms, such as force-directed layout and line-dot rendering, work very well on relatively small and sparse graphs. However, they often produce extremely tangled results and exhibit impractical running times for highly non-planar graphs with large edge density. And very few graph layout algorithms support dynamic time-varying graphs; applying them independently to each frame produces distracting temporally incoherent visualizations. We have developed a new visualization technique based on a novel approach to hierarchically structuring dense graphs via stratification. Using this structure, we formulate a hierarchical force-directed layout algorithm that is both efficient and produces quality graph layouts. The stratification of the graph also allows us to present views of the data that abstract away many small details of its structure. Rather than displaying all edges and nodes at once, resulting in a convoluted rendering, we present an interactive tool that filters edges and nodes using the graph hierarchy and allows users to drill down into the graph for details. Our layout algorithm also accommodates time-varying graphs in a natural way, producing a temporally coherent animation that can be used to analyze and extract trends from dynamic graph data. For example, we demonstrate the use of our method to explore financial correlation data for the U.S. stock market in the period from 1990 to 2005. The user can easily analyze the time-varying correlation graph of the market, uncovering information such as market sector trends, representative stocks for portfolio construction, and the interrelationship of stocks over time.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Effectively visualizing large sets of relationships is a growing need in many fields. In contexts such as social networks, telecommunications, Internet networks, homeland security, and financial research, graph visualization is a standard form of extracting and conveying information. In all of these contexts, graphs are becoming increasingly complex, and in many cases, the graph structure changes over time. Forcedirected layout algorithms, which attempt to find a minimal energy configuration, work well for visualizing relatively sparse static graphs. However, when applied to complex highly non-planar datasets, these spring-based methods are slow to converge and frequently produce extremely tangled results. When rendered with the conventional line-dot technique, the resulting graph is often so cluttered that the user is unable to recognize many important patterns within the complex data. Moreover, many graph visualization tools often overlook the handling of time-varying graphs and don't preserve temporal coherence. The resulting animation from laying out frames in dynamic graphs independently exhibits spurious movements from frame to frame, masking motion due to actual structural changes. As graphs become progressively more complex and dynamic, solving this problem will become vital to graph analysis.</p><p>We have developed an interactive visualization technique in which users explore a hierarchical representation of a complex graph, enabling rapid discovery of meaningful structure among the nodes. We construct a graph hierarchy by stratifying nodes into different levels so that central and representative nodes in the graph are emphasized. Nodes are then organized into interconnected groupings in a tree, enabling tree families to be placed close to each other in our layout algorithm. In contrast to prior work where graph hierarchies are built by repeated coarsening, we construct our hierarchy based on edge distribution. In many cases, complex non-planar graphs have vertex degrees distributed according to a power law, and our stratified hierarchy exposes the underlying structure of such graphs.</p><p>Based on the graph hierarchy, we also propose a new global/local layout scheme that recursively traverses the hierarchy and rapidly con-verges to an aesthetically pleasing end result. Our novel local layout algorithm uses a force-directed algorithm so that neighboring nodes are close to each other, while also using Lloyd relaxation to ensure the layout is well spaced. When extended to time-varying graphs, our layout produces clear animations of dynamic graphs that preserve coherence across frames and ensures that any motion reflects actual data changes. Users are thus able to easily perceive interesting structural trends over time.</p><p>Our rendering scheme takes advantage of modern graphics hardware by integrating user interaction with stylistic visual representations to abstract and explore graphs. Rather than displaying all edges and nodes at once, which can produce a convoluted image, we filter edges and nodes using the graph hierarchy and allow users to drill down into the graph for details. Our visualization emphasizes related clusters of nodes by clearly depicting cliques and families in the hierarchy. We improve on past methods by simplifying highly interconnected networks, enhancing the visual clarity of graph rendering, and incorporating time-varying systems.</p><p>As an example application, we utilize our tool to visualize price return correlations between stocks in the S&amp;P 500. We construct a graph where two stocks are connected by an edge when their returns correlations are above a selected threshold. Such graphs are known to have power law degree distributions <ref type="bibr" target="#b2">[3]</ref>. Analyzing the correlations amongst securities is central to Modern Portfolio Theory <ref type="bibr" target="#b19">[18]</ref> where risk is managed through diversification of investments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Initially applied to relatively small and sparse graphs, early successful graph layout algorithms were typically force-directed. This approach was pioneered by Eades <ref type="bibr" target="#b8">[8]</ref>. Kamada and Kawai <ref type="bibr" target="#b17">[16]</ref> modeled a graph as a complete system of linear springs, and Fruchterman and Reingold <ref type="bibr" target="#b10">[10]</ref> refined and simplified their force calculations. These methods are flexible and easily implemented, but their initial focus was on graphs of only up to 100 vertices. On larger, denser graphs (e.g., with power law edge distribution) they converge slowly, if at all <ref type="bibr" target="#b16">[15]</ref>, and the results were often cluttered and disorganized.</p><p>More recently, many interesting approaches to visualizing complex highly non-planar graphs have been developed. Harel and Koren <ref type="bibr" target="#b16">[15]</ref> developed a multi-scale algorithm that can improve the running time of any force-directed method. Hachul and Junger <ref type="bibr" target="#b15">[14]</ref> proposed a multi-level algorithm using potential fields that can achieve the same asymptotic running time as single-level methods. Andersen et al. <ref type="bibr" target="#b0">[1]</ref> partitioned edges into local and global sets and used a force-directed method emphasizing local edges. Chan et al. <ref type="bibr" target="#b3">[4]</ref>, <ref type="figure">Fig. 1</ref>. Our visualization tool builds a stratified hierarchy from dense and non-planar graphs. In visualizing price correlations in the S&amp;P 500 dataset, our tool automatically extracts the most highly correlated stocks and clusters related stocks together in the layout. similar to our method, stratified the graph based on degree and used the Fruchterman-Reingold method on each layer. Rather than using a stratified hierarchy to accelerate layout, Gansner et al. <ref type="bibr" target="#b11">[11]</ref> use a coarsening-based hierarchy to provide a topological fisheye view at multiple levels of detail. Similarly, van Ham and van Wijk <ref type="bibr" target="#b25">[24]</ref> used an interactive fisheye scheme and spherical clustering to decompose the graph and smoothly interpolate between various levels of detail. Voronoi diagrams have also been integrated into graph drawing by recursively decomposing screen space <ref type="bibr" target="#b23">[22]</ref> and as a post-processing step in laying out labeled or non-point nodes <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b13">12]</ref>.</p><p>Our stratification scheme makes use of prior work on node ranking in order to find the most central or hub nodes. Kleinberg <ref type="bibr" target="#b18">[17]</ref> developed the HITS system of ranking by an authority measure. Newman <ref type="bibr" target="#b20">[19]</ref> developed the Betweenness-Centrality measure which counts the number of shortest paths that pass through each node. Wu et al. <ref type="bibr" target="#b26">[25]</ref> tested both of these measures, in addition to random sampling and degree ranking, when developing a data mining approach to simplify and cluster power law graphs using geodesic clustering. We develop our own method for ranking nodes using weights between every pair of vertices.</p><p>In contrast to static graphs, little research has been done on visualization of time-varying graphs. Most work on dynamic graph drawing is related to the online problem-only information about previous graphs is used for computing a layout. A prominent example for hierarchical directed acyclic graphs by North <ref type="bibr" target="#b21">[20]</ref> incrementally updates a layout preserving the user's mental map. Gorg et al. <ref type="bibr" target="#b14">[13]</ref> presented an offline approach (all graph changes are known beforehand) which also used mental map metrics.</p><p>Although these approaches to drawing complex graphs offer significant improvements particularly in running time, most still offer little interactivity, don't sufficiently abstract the complexity of the graph, and generally ignore integration with dynamic graphs. Our method extends very naturally to time-varying data by applying the same static force-directed algorithm on the differences between frames. We are also capable of rendering graphs using a structured hierarchy and intuitive visual symbols. User interaction is organized around an abstracted overview with zooming and filtering capabilities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">CONSTRUCTING A HIERARCHY</head><p>We use a graph hierarchy to achieve both faster convergence and better global positioning of nodes in our layout algorithm. The hierarchy also allows us to filter edges and nodes during rendering so that the user is not overwhelmed by too much complexity (see <ref type="figure" target="#fig_0">Figure 2</ref>, for example).</p><p>Several other graph visualization tools <ref type="bibr" target="#b16">[15,</ref><ref type="bibr" target="#b11">11]</ref>, build hierarchies based on graph coarsening with the goal of preserving the structure of the complex graph. However, since force-directed methods do not work well on highly non-planar graphs, our goal is to break the complex structure and achieve much more planar graphs when viewing level by level. Therefore, our hierarchy is instead based on edge distribution and is built to reflect the underlying structure of complex graphs. These graphs, often with power law degree distributions, lend themselves well to a hierarchy since select nodes are highly connected while the majority of nodes are not. For example, in an airport network numerous regional airports can be grouped under the single major hub airport of the region. On the other hand, graphs with uniform edge distribution like meshes do not have an inherent hierarchy, and thus can be sufficiently positioned using early spring-based layout methods. Since our focus is on dense non-planar graphs, we stratify the nodes into separate layers and construct a hierarchical tree to group interconnected nodes together. Stratification into layers based on degree has been investigated by Chan et al. <ref type="bibr" target="#b3">[4]</ref>; however, this method does not model the graph as a hierarchical tree and simply uses a constant number of levels, namely 3, for all graphs. A tree allows our layout algorithm to achieve better time complexity by applying the force-directed method on each individual tree family rather than the whole level. Also, our more sophisticated stratification emphasizes the authority of a node more than just degree and better supports the edge distributions of various data sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Sorting the Nodes by Authority</head><p>We assume that we are given a graph G = (V, E) with a weight w i j assigned to each edge (i, j). The authority or centrality should reflect how representative it is of a group of nodes. We rank nodes by authority using the sorting factor</p><formula xml:id="formula_0">s i = ∑ j∈V w 2 i j w j (1)</formula><p>where w j is the mean weight of node j. This formulation is inspired by the HITS ranking system <ref type="bibr" target="#b18">[17]</ref>. We use squared weights to give preference to nodes that are very representative of some nodes over those that are moderately representative of all nodes. The mean weight term ensures that the most central nodes are also representative of other less central nodes. By ranking the graph in this manner and visualizing the graph level-by-level, nodes are isolated with peer nodes of similar authority and the most authoritative nodes are immediately visible to the user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Stratifying the Graph</head><p>To stratify the nodes into levels, we must first specify the desired depth of the tree. The user could provide this directly. However, it is typically more useful to automatically estimate an appropriate number of levels.</p><p>There is no truly optimal depth. Instead, we aim to find a depth that prevents levels with too many edges (which would yield visual clutter) while keeping the total number of levels low. Since many complex graphs have power law vertex degree distributions, we use this as the basis for our estimate.</p><p>We assume that the number of nodes of degree k is Ck −β for some constant C and β &gt; 1. We can find C for a given graph by realizing that the total number of nodes n is proportional to the Riemann-Zeta function.</p><formula xml:id="formula_1">n = C ∞ ∑ k=1 k −β = Cζ (β ) =⇒ C = n ζ (β )<label>(2)</label></formula><p>Given the degree histogram of the graph, we can find the value of β that best fits the histogram, as shown in <ref type="figure" target="#fig_1">Figure 3</ref>. Note that the useful range of β end where ζ (β ) is very close to 1. Our system defaults to the range 1 &lt; β ≤ 14 since ζ (14) ≈ 1.000061, but the user can optionally tighten this range to achieve a desirable number of nodes in the top level. Since higher values of β represent steeper power law curves, fewer levels are needed since fewer nodes are authoritative.</p><p>Given β , the depth of the tree will be log β n. To construct the tree, we iterate through nodes in order of authority s i and place nodes in levels so that each level has an equal total degree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Computing Families</head><p>Having sorted all nodes into levels, we must now pick the right parent for each node. We iterate through nodes in sorted order and for each node in level l &gt; 1 we attempt to find the best parent from level l − 1. In picking parents, we would like to avoid extremely imbalanced trees with large branching factors, as this will lead to clutter and poor performance during layout. This imbalance typically arises in power law graphs because the most central nodes are closely related to a majority of the graph, and thus appear to be good parents for most nodes. Enforcing the restriction that parents are in the immediately preceding level avoids this imbalance.</p><p>For a node p to be a good parent for node i, the node should have a high weight with both p and the neighbors of p. By neighbors of p we mean both graph neighbors (nodes sharing an edge with p) and tree neighbors (siblings and ancestors of p in the hierarchy). The number of common graph neighbors that a pair of nodes share is an important factor to consider <ref type="bibr" target="#b9">[9]</ref>. Weight with tree neighbors is equally important to ensure that i is grouped with the correct family of nodes. Thus, we define the parent factor of child i with parent p to be an equally weighted sum of the weight between i and p, mean weight between i and p's graph neighbors, and mean weight between i and p's tree neighbors. We chose the parent that maximizes this measure.</p><p>This method is a fairly simple greedy algorithm and only takes into account the tree from the root to the current level. To produce better hierarchies, we apply an additional bottom-up relaxation phase that augments the parenting factor with the mean weight between p and i's children. The quality of this parent-child relationship will prove important since siblings will be positioned nearby during layout.</p><p>In the financial context, it has been noticed that building a hierarchy from price correlations tends to group stocks into industries <ref type="bibr" target="#b22">[21]</ref>. Our hierarchy construction preserves this property. Using the S&amp;P 500 price correlation dataset in 2005, 77% of the average stock's tree siblings were in the same industry (see <ref type="figure" target="#fig_2">Figure 4</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">LAYING OUT THE GRAPH</head><p>Having constructed our graph hierarchy, we compute a planar layout of the graph using a hierarchical algorithm. Our goal is to quickly converge to a layout where related nodes are positioned close together. The hierarchy allows us to globally position entire subtrees and then locally beautify each group until convergence. Our algorithm combines a force-directed component to move connected nodes closer together and Lloyd relaxation to fairly utilize all the available screen space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Allocating Screen Space</head><p>We want to ensure that all available screen space is used in layout, avoiding unnecessary congestion and graph shrinkage. To do this, we assign a desired area to each node before iterative layout. The total screen space is divided between top level nodes in proportion to the number of nodes in their subtrees. We then recursively divide each node's allotted space amongst its children in the same manner. From this fair hierarchical division of space, we can create weighted Voronoi diagrams, decompositions of space determined by distances to nodes, for each family in the tree.  In addition to improving space utilization, this also brings stability to potentially unstable force-directed algorithms and encourages faster convergence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Iterative Layout</head><p>We combine Lloyd relaxation with a force-directed method in our iterative layout algorithm. Using force-directed algorithms on multi-level graphs is common in visualizing large graphs <ref type="bibr" target="#b16">[15,</ref><ref type="bibr" target="#b15">14,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b3">4</ref>] since they are easy to implement and can be quickly computed in a hierarchical tree.</p><p>Our method involves recursively traversing the hierarchy and computing layouts for each family as we move down the tree. The initial position for each top level node is a random position in the screen space. Since the most central nodes have the greatest effect on the layout, we perform our iterative local layout algorithm on the top level nodes alone until no node moves more than a small distance. With nodes initially placed in a random position in the parent's Voronoi cell, we repeat this iterative process for each subtree. Thus, we are able to achieve a fast and easily-implemented global/local layout scheme. <ref type="figure" target="#fig_5">Figure 5</ref> compares the results of our method using force-directed minimization alone and hierarchical relaxation without Lloyd relaxation. Our hierarchy provides clear benefits in speed and aesthetics. Although the Voronoi computation takes time, Lloyd relaxation results in a better organization of the graph.</p><p>Our iterative relaxation scheme uses a scheduled weighting of force-directed and Lloyd terms where early iterations consist primarily of force-directed layout, smoothly transitioning to emphasize fair allocation in later iterations. For a node i with a set of siblings S i , we compute the force vector acting on node i during iteration k as</p><formula xml:id="formula_2">f k i = (1 − α k )v i + α k ∑ j∈S i f i j (3)</formula><p>where v i is the vector to the Voronoi centroid of node i, f i j is the force exerted by node j on i. The transition constant α can be determined by the user, but our experience shows that a value of α = 0.95 works well for all datasets we have tried. We calculate forces between nodes using the Fruchterman-Reingold model <ref type="bibr" target="#b10">[10]</ref> modified to account for edge weights. This model has the advantages of both speed and ease of implementation. However, this choice is not central to our method and other force-directed methods could be chosen instead.</p><p>Attractive forces along an edge serve to avoid long edges and edge intersections, and repulsive forces keep nodes from being too close together. If A p is the area of the Voronoi cell for a node p with n p children, the ideal distance between two children of p is</p><formula xml:id="formula_3">k = A p /n p<label>(4)</label></formula><p>The magnitudes of the attractive and repulsive forces between nodes at a distance d i j will be</p><formula xml:id="formula_4">f a i j = d 2 i j /k f r i j = −k 2 /d i j<label>(5)</label></formula><p>The force vector between two nodes is thus</p><formula xml:id="formula_5">f i j = u i j (1 − w i j ) f r i j + u i j w i j f a i j if (i, j) is an edge, u i j (1 − w i j ) f r i j otherwise.<label>(6)</label></formula><p>where u i j is the unit vector from i to j. Finally, we also enforce a maximum displacement limit on each node based on its parent's allocated space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Extending the Layout for Time-Varying Graphs</head><p>Our iterative layout algorithm easily extends to create animations for time-varying graphs. In many applications, graph analysis does not occur only once, but several times over a time period. Studying changes in a network is equally, if not more, important than analyzing the structure of a static network. A central feature of our visualization tool is the ability to use our rich graph exploration capabilities at any point in time. Inputting a series of graphs into our program, the user can simply slide to different time periods to explore the graph or play an animation to discover trends.</p><p>In the static layout case, a good layout is able to position related nodes together, maintain an aesthetically pleasing and uncomplicated layout, and converge to a final layout quickly. In the dynamic case, we must add another metric: preserve temporal coherence across frames to avoid unnecessary motion caused by little or no change in the graph relationships. To do this, we choose an offline approach in our layout algorithm where all graph changes are known beforehand. This allows us to emphasize trends that persist over time and de-emphasize those that are due to minute momentary data changes.</p><p>Our financial dataset demonstrates a perfect application for visualizing a graph over time. In this context, we store a separate stock correlation array for each month in the past several years. We then use each of these arrays as a "keyframe" in an animation. We statically draw a graph for the first array in the time series using the iterative static layout algorithm described in the previous section. For subsequent frames, the initial layout is derived from the final layout of the preceding frame.</p><p>We must also modify our hierarchy construction algorithm so as to avoid drastic (and misleading) changes in layout due to small changes in correlation. When computing the sorting factor, we average the weights w i j over a 3 frame window. Similarly, we average parent factors used in hierarchy creation.</p><p>Finally, we modify the weights used in our local layout algorithm to reduce meaningless movements. The static layout algorithm scales the force between two nodes by the weight w i j . In the dynamic case, we instead scale by the change in weight w i j from the previous frame. This very simple change drastically reduces spurious interframe movement, and allows the user to identify interesting changes in data much more reliably. <ref type="figure" target="#fig_6">Figure 7</ref> compares the results of simple per-frame static layout (top) with our temporally coherent layout (bottom). As expected, laying out every frame separately results in large amounts of spurious movement even though the weights are changing relatively little. Though we smooth the layout, we also do not want to hide movement caused by significant weight changes. We have found that our gradual smoothing approach preserves these "shocks", such as the market crash of 2001 where dramatic movement occurs from frame to frame. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ABSTRACTED RENDERING</head><p>In addition to supporting efficient layout, we also use the graph hierarchy to abstract away detail during rendering. And while most visualization tools use very simple rendering models, we are able to achieve dramatically clearer results by using modern graphics capabilities like 3D rendering, shading, and alpha-compositing.</p><p>Visualizing every edge in a large graph overwhelms the user. Most successful visualizations simplify the graph, say by contracting or filtering edges. We propose hierarchy-based filtering of edges, which users click through to explore. Level-by-level views allow users to view relationships between nodes of comparable authority while avoiding edge overload as demonstrated in <ref type="figure" target="#fig_5">Figure 15</ref>.</p><p>Color-coded circles surrounding a group of nodes represent sibling sets so that clusters become immediately evident to the user. Because the layout is well-spaced, these circles will also be distributed well and the regions of overlap are minimal. The hierarchical position of nodes within these overlapping regions is still clear through color-coding. Sibling nodes with the same parent and the circles surrounding the sibling set are colored alike to clearly segment the graph using color. The user may also color nodes by industry, making industry clusters visible. An edge is only shown if the user clicks in the sibling circle of one of the nodes of the edge. Using alpha-compositing of these circles based on level, the user also has the perception of focusing on different levels as in a microscope and may even zoom in to explore a family of nodes.</p><p>Drawing the hierarchical Voronoi diagram is also a viable alternative, although it adds considerable expense to the frame rendering time. More importantly, the Voronoi cells change much more significantly between frames than the circles we use, leading to disturbing visual "popping" artifacts during animation. In addition to filtering, we attempt to minimize the number of edges drawn in two ways: clique simplification and forked edges. Cliques are a major source of entanglement in graph drawings. Therefore, we simplify cliques, as illustrated in <ref type="figure" target="#fig_7">Figure 8</ref>, by using star edge glyphs. This avoids clutter while still allowing users to pinpoint clusters of highly connected nodes. Inspired by confluent diagrams <ref type="bibr" target="#b5">[5]</ref>, we use forked edges that combine all edges from a single source node to several targets that are part of another sibling set. This can dramatically simplify the display, as seen in <ref type="figure">Figure 9</ref>. <ref type="figure">Fig. 9</ref>. Selecting a node highlights its neighbors in a subgraph. Clicking a sibling set displays edges within that set, and edges to other sibling sets are forked.</p><p>Our visualization tool also includes several interactive features to extract important aspects of the graph. As mentioned above, users may zoom in to investigate particular families in the graph tree and zoom out to examine relationships between families. A subgraph, highlighted in <ref type="figure">Figure 9</ref> is used to visualize details of selected nodes. When users interactively select nodes, the subgraph shows all neighbors of the selected nodes organized into levels through concentric circles. When extended to dynamic graphs, an animation slider allows users to easily play the entire animation or explore particular frames in as rich a manner as a static graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>Using our visualization tool, we were able to quickly extract valuable information from the financial data we looked at. For example, we were able to automatically organize securities by industry and discover price relationships between industries simply by noticing the coordinate placements of industries and the edges between them. For portfolio management, we can quickly determine which stocks and industries would best diversify our portfolio by looking at which areas of the graph we have few assets in. We are able to view stocks that are the most highly correlated to others and notice that these are the largecap and financial services stocks since they are more likely to follow general market trends. We can immediately identify very highly correlated clusters of stocks using clique symbols.</p><p>We are even able to easily discover interesting changes in the graph over time, a largely overlooked feature in current visualization tools. For example, we produced a temporally-coherent animation of the S&amp;P 500 from January 1990 to June 2005 using every month as a keyframe. We noticed dramatic movements in the graph from 1999 to 2002. This corresponded to the internet bubble, a very dynamic period in the stock market. A sustained bull market followed by a recession caused many changes in correlations. A large part of this movement was due to the rise of financial firms to the top levels of the graph, which was immediately evident in our animation. Financial services companies, who are most affected by market changes, started to gain correlation with many companies during this time, boosting them to the top level. As seen in <ref type="figure" target="#fig_9">Figure 11</ref>, in December 1998, Merrill Lynch (MER) and AIG (AIG) were the only financial nodes in the top level, but by April 2002, General Electric (GE) was the only non-financial top level node. Along with financial services, the most highly affected industry during the bubble was obviously information technology. By November 2001, IT nodes fell under the umbrella of Janus Capital Group. Janus, which had amazing growth in 1999 due to its holdings in tech companies like Amazon and Priceline, suffered a drastic melt down in the March 2000 crash. Thus, the price correlation between Janus and the IT nodes becomes evident.</p><p>We were also able to discover other interesting market events. For example, the rise and fall of Lucent Technologies (LU) is one major change seen through our animation. Lucent, a major player in the 1999 technology market, grew almost 1000% in the late 90s, however in early 2000, its stock dropped even more incredibly, greatly outpacing the average drop of the crash. In the animation, Lucent was just a leaf node in October 1997, but by November 1998, it was a top level node and soon became the parent of the IT sector, as seen in <ref type="figure" target="#fig_0">Figure 12</ref>. By June 2000, Lucent was a leaf node again. After the recession, another central node emerged: Prudential (PRU). Since late 2002, Prudential stocks saw steady growth, representative of the rest of the market. By January 2003, it was part of the top level and remained the parent of many nodes. Another interesting example is American International Group (AIG), who was a central node in the graph since 1993. However, in early 2005, AIG was charged with using reinsurance strategies to hide poor performance on the balance sheet. This cost the CEO his job and caused the stock to tumble to a two-year low. Because of this hammering, AIG, whose parent was the consistently growing Prudential, became more correlated with the stagnating GE. <ref type="figure" target="#fig_1">Figure 13</ref> shows the graph at the end of January 2005.</p><p>In <ref type="figure" target="#fig_8">Figure 10</ref> we see our visualization tool applied to the funds of the Fidelity mutual fund family. Among other interesting observations, we notice that the conservative allocation fund, Fidelity Asset Manager Income (FASIX), was highly correlated with the municipal and government bonds because of its similar holdings. We also note that Fidelity Global Balanced (FGBLX), which holds investments throughout the world, is the parent, and thus representative of, funds for Asian, European, and emerging market equities.</p><p>Although we have focused on financial applications, our visualization tool is general enough to produce quick layouts for any application requiring the analysis of complex and dynamic relationships. For example, we produced a visualization of a protein-protein interaction graph shown in <ref type="figure" target="#fig_0">Figure 14 (1846 nodes, 2203 edges)</ref> with a layout time of 29 seconds. We also visualized a high energy physics publication network shown in <ref type="figure" target="#fig_5">Figure 15</ref> (4841 nodes, 24587 edges), in which our layout algorithm finished in 31 seconds. By comparison, our S&amp;P 500 animation converged to a final layout in a median time of 13 seconds per keyframe. All running times were computed on a 1.86 GHz Pentium M processor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION AND FUTURE WORK</head><p>Although we believe our visualization tool to be very useful for most data, the quality of the hierarchy created is still very data-dependent. The hierarchy imposed on the graph may not be as meaningful for graphs not matching a power law distribution of edges. Also, cases where two nodes are equally qualified to be the parent of another node can cause dramatic movements in an animation due to small changes in weight. Although we tried to minimize spurious movement by taking an offline approach to maintain temporal coherence and by incorporating several metrics in choosing parents, we realize that a standard tree hierarchy may not be appropriate for some data. Stratifying or building the hierarchy in a more flexible manner (perhaps using a tree where nodes can have more than one parent) may be promising future work. Additionally, since the current space complexity of our tool is O(n 2 ), we believe that we can improve on this to support very large sparse graphs in the future. Finally, a different hierarchical visualization technique may also improve the system. Although we tried to limit regions in which sibling circles occlude each other, a quasi-Voronoi cell approach with good temporal coherence could address this issue.</p><p>Despite these limitations, our case studies on financial data show that our system is still very useful in analyzing graphs and extracting trends from complex data. We believe a major advantage of our method is the ability to analyze dynamic graphs, an often-overlooked aspect of graph layout research. Our method of structuring complex graph data and our interactive approach to graph layout allows us to efficiently express key data trends while still allowing an endless amount of information to be explored and analyzed.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Our system (right) produces an S&amp;P 500 layout lacking the clutter typical of standard energy-based methods such as GraphViz.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>A power law with exponent β = 2 (in red) provides the best fit for the degree histogram of the S&amp;P 500 graph for August 1998.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>The 2005 S&amp;P 500 hierarchy with nodes colored by industry. Most siblings are in the same industry. Financials (light blue) dominate the top level due to high correlations with many other firms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 6 .</head><label>6</label><figDesc>Bottom levels of the Fidelity 2005 hierarchy. Each parent's weighted Voronoi cell (left) is divided among its children (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6</head><label>6</label><figDesc>shows how a parent's Voronoi cell is divided among its children based on the number of descendants. These Voronoi diagrams are then used to integrate a kind of Lloyd relaxation<ref type="bibr" target="#b7">[7]</ref>-nodes are moved to the center of their Voronoi cells-into the layout algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>The July 1995 S&amp;P 500 graph laid out with force-directed minimization (left), plus stratification (center), and plus Lloyd-based screen allocation (right). Running times are 416, 3, and 16 seconds, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Frames from animation of S&amp;P 500 during 2005 both with (bottom) and without (top) temporal coherence.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Drawing cliques with simple visual symbols greatly reduces visual complexity, while zooming makes local structure apparent.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 10 .</head><label>10</label><figDesc>Correlation graph for Fidelity fund family (2005). Subtrees for FASIX and FGBLX are highlighted.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 11 .</head><label>11</label><figDesc>The rise of financials (light blue) is seen in Dec. 1998 and Aug. 2002. Janus Capital forms the root of the IT (yellow) subtree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .</head><label>12</label><figDesc>At the peak of the boom in March 1999, Lucent Technologies (LU) is the parent of the IT sector.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Drawing power law graphs using a local/global decomposition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Andersen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Chung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">On structural properties of the market graph</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Boginski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Butenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Pardalos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Innovations in Financial and Economic Networks</title>
		<imprint>
			<biblScope unit="page" from="29" to="45" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Statistical analysis of financial networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Boginski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Butenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Pardalos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Statistics and Data Analysis</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="431" to="443" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Visualisation of powerlaw network topologies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">S</forename><surname>Chua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Leckie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Parhar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 11th IEEE Intl. Conf. on Networks</title>
		<meeting>of the 11th IEEE Intl. Conf. on Networks</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="69" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The first (top) and second levels of the S&amp;P 500 at the end of</title>
		<idno>Fig. 13</idno>
	</analytic>
	<monogr>
		<title level="m">AIG becomes a child of the stagnating General Electric</title>
		<imprint>
			<date type="published" when="2005-01" />
		</imprint>
	</monogr>
	<note>After a significant decline</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Confluent drawings: Visualizing non-planar diagrams in a planar way</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dickerson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">T</forename><surname>Goodrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Meng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 11th Int&apos;l Symp. on Graph Drawing</title>
		<meeting>11th Int&apos;l Symp. on Graph Drawing</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Uncluttering force-directed graph layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Dobkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hausner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 15th Symp. on Computational Geometry</title>
		<meeting>of the 15th Symp. on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="425" to="426" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Centroidal voronoi tessellations: Applications and algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Faber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gunzburger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Review</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="637" to="676" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A heuristic for graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Congressus Numerantium</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="149" to="160" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visualizing social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">C</forename><surname>Freeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Social Structure</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Graph drawing by forcedirected placement. Software: Practice and Experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M J</forename><surname>Fruchterman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Reingold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1129" to="1164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Topological fisheye views for visualizing large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Symp. on Information Visual-Fig. 14. Biological graph with edges between interacting proteins</title>
		<meeting>of the IEEE Symp. on Information Visual-Fig. 14. Biological graph with edges between interacting proteins</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m">Graph of physics research papers with edges representing citations. Viewed all at once (top), the graph is inscrutable whereas our filtering techniques (bottom) reveal identifiable structure. ization</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="175" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Improved force-directed layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Int&apos;l Symp. on Graph Drawing</title>
		<meeting>6th Int&apos;l Symp. on Graph Drawing</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="364" to="373" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Dynamic graph drawing of sequences of orthogonal and hierarchical graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gorg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Birke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pohl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Diehl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th Int&apos;l Symp. on Graph Drawing</title>
		<meeting>12th Int&apos;l Symp. on Graph Drawing</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="228" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Drawing large graphs with a potential-fieldbased multilevel algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hachul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Junger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 12th Intl. Symp. on Graph Drawing</title>
		<meeting>of the 12th Intl. Symp. on Graph Drawing</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="285" to="295" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A fast multi-scale method for drawing large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Harel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 8th Int&apos;l Symp. on Graph Drawing</title>
		<meeting>8th Int&apos;l Symp. on Graph Drawing</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="183" to="196" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">An algorithm for drawing general undirected graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kamada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kawai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="7" to="15" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Authoritative sources in a hyperlinked environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Kleinberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="604" to="632" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Portfolio selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Markowitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. of Finance</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="77" to="91" />
			<date type="published" when="1952" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Fast algorithm for detecting community structure in networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E J</forename><surname>Newman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">69</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">66133</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Incremental layout in dynadag</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Graph Drawing &apos;95</title>
		<meeting>of Graph Drawing &apos;95</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">1027</biblScope>
			<biblScope unit="page" from="409" to="418" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Dynamics of market correlations: Taxonomy and portfolio analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J-P</forename><surname>Onnela</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Chakraborti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kaski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kertesz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kanto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review E</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page">56110</biblScope>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Recursive space decompositions in force-directed graph drawing algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>Pulo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Australian Symp. on Information Visualisation</title>
		<meeting>of Australian Symp. on Information Visualisation</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="95" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">The eyes have it: A task by data type taxonomy for information visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. for IEEE Symp. on Visual Languages</title>
		<meeting>for IEEE Symp. on Visual Languages</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="336" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Interactive visualization of small world graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Symp. on Information Visualization</title>
		<meeting>of the IEEE Symp. on Information Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="199" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Mining scale-free networks using geodesic clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 10th Intl. Conf. on Knowledge Discovery and Data Mining</title>
		<meeting>of the 10th Intl. Conf. on Knowledge Discovery and Data Mining</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="719" to="724" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
