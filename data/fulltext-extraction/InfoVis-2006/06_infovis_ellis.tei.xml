<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Enabling Automatic Clutter Reduction in Parallel Coordinate Plots</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><surname>Ellis</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Dix</surname></persName>
						</author>
						<title level="a" type="main">Enabling Automatic Clutter Reduction in Parallel Coordinate Plots</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Sampling</term>
					<term>random sampling</term>
					<term>lens</term>
					<term>clutter</term>
					<term>occlusion</term>
					<term>density reduction</term>
					<term>overplotting</term>
					<term>information visualisation</term>
					<term>parallel coordinates</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We have previously shown that random sampling is an effective clutter reduction technique and that a sampling lens can facilitate focus+context viewing of particular regions. This demands an efficient method of estimating the overlap or occlusion of large numbers of intersecting lines in order to automatically adjust the sampling rate within the lens. This paper proposes several ways for measuring occlusion in parallel coordinate plots. An empirical study into the accuracy and efficiency of the occlusion measures show that a probabilistic approach combined with a binning technique is very fast and yet approaches the accuracy of the more expensive true complete measurement.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In previous work <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5]</ref> we proposed that random sampling can be used as an effective technique for density reduction in overcrowded displays. We argue that if there is too much data to fit on the screen, then taking a random sample of the data that will fit, not only removes overlapping data items and clutter but it also tends to preserve any trends or patterns that exist in the data. Unlike other clutter reduction techniques, such as filtering based on chosen attributes, random sampling does not require the user to decide on the criterion for which data to remove or keep and the view remains spatially undistorted.</p><p>Recent work <ref type="bibr" target="#b5">[6]</ref> demonstrated the Sampling Lens, a focus+context technique that allows sub-sampling and consequently clutter reduction in high density areas whilst retaining a highersampling rate over the visualisation as a whole. This technique has been applied to both simple point plots and parallel coordinate plots. In practice, the sub-sampling rate of the lens needs to be changed as one moves from high density regions to less heavily plotted regions of the visualisation. This can be done manually using a slider, but to facilitate this process, an autosampling system was proposed which attempts to obtain a constant level of 'density' as the lens is moved over the visualisation.</p><p>To implement autosampling we need (i) an effective measure of 'clutter' or 'density' that can be set by the user and maintained by the system, and <ref type="bibr">(ii)</ref> an efficient way of calculating the measure during interactive movement of the lens. We addressed the former issue in a previous paper <ref type="bibr" target="#b6">[7]</ref>, by considering several potential metrics to estimate the occlusion or overlap of lines in parallel coordinate plots. In this paper, we will address the latter issue by developing several ways of calculating occlusion that range from very direct methods based on the data, to more model-based methods using theoretical approximations. Interestingly, we find that the most simplistic model yields surprisingly good results and is also very cheap to calculate. Section 2 presents the background to this work by looking at the concept of sampling and the Sampling Lens tool. Section 3 gives an overview of the related literature on clutter reduction techniques, focussing primarily on those techniques used in parallel coordinates. In Section 4, we describe our experimental platform and the dataset used for the empirical study. Section 5 provides the theory behind our occlusion measures. We discuss the results of the empirical study into the accuracy and efficiency of the measures in Section 6 and choose the 'best' algorithm. In Section 7 we investigate some of the limits of this algorithm and show how a simple modification in its application copes with extreme cases and finally in Section 8 we present our conclusions and suggestions for future work.</p><p>Please note that when we use the term sampling in this paper, we are referring to a random sample of the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND: SAMPLING AND THE SAMPLING LENS</head><p>We have found sampling to be a powerful technique in several kinds of visualisations that require individual data items or attributes to be represented on the display. By interactively adjusting the level of sampling, the data density of a visualisation can be reduced to reveal features that are otherwise hidden in the mass of points or lines in dense regions. This is particularly useful for tasks where the user is exploring large datasets. Often, visualisations are not uniformly dense, consequently the low sampling rate required to investigate denser regions can make the data in less dense regions 'vanish'; this is often the case with outliers. A potential solution is to adjust the sampling rate for different areas of the screen <ref type="bibr" target="#b1">[2]</ref> just like adjusting the contrast levels on a photograph.</p><p>We have proposed an alternative technique namely the Sampling Lens <ref type="bibr" target="#b5">[6]</ref> a moveable region with its own sampling control. This follows a tradition of visualisation 'lenses' <ref type="bibr" target="#b2">[3]</ref> that apply transformations or add information to the area under focus, similar to passing an x-ray glass over the display. The Sampling Lens simply sub-samples the points within the region under the lens (see <ref type="figure" target="#fig_0">Figure 1</ref> in Section 4). The user can therefore investigate dense regions of a plot by reducing the lens sampling rate to an appropriate level. This can potentially uncover interesting patterns and trends whilst still retaining the context of the lens region within the overall plot. In addition to its sampling control, which incidentally is relative to the overall sampling rate, the user can alter the size of the lens, choose its shape (circle, square or rectangle) and drag it around the display with the mouse. In addition, the user can easily request new random samples within the lens, thus 'real' patterns will persist whilst sampling induced artefacts will disappear. This also means that outliers will be shown at some stage. A more detailed description of Sampling Lens can be found in <ref type="bibr" target="#b5">[6]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Auto-sampling</head><p>Manually adjusting the sampling rate of the lens was found to be particularly tiring for the user. A more desirable option was for the system to set the lens sampling rate automatically, based on a measurement of the density of the points or lines within the lens. This was fairly straightforward for scatterplots 1 as only the number of data items at each display point had to be counted in order to estimate the density. However for parallel coordinate plots, the <ref type="bibr" target="#b0">1</ref> Although it becomes more difficult if the data points are larger than a pixel and hence partial occlusion of points has to be taken into account. density estimation was more challenging, especially as little information was found in the literature on this topic. It should be noted that the user can set the 'desired density' if they wish and thus have some control on what they consider to be cluttered.</p><p>Our first attempt at estimating density in a parallel coordinate plot was based on a statistical approach, which was fed with data on the calculated overlap of lines in the lens. This is later referred to as the lines algorithm (see <ref type="bibr">Section 4)</ref>. While this method was reasonably good in some regions of the plots, in others, the behaviour of autosampling was not satisfactory and therefore we felt it was necessary to come up with a better method that provides both an effective measure of 'clutter' and an efficient way of calculating it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RELATED WORK</head><p>Techniques for clutter reduction include filtering, distortion, clustering, aggregation, reordering, space filling, constant density and random sampling and these are well documented in the research literature. However, the majority of these techniques do not attempt to measure clutter, but they rely on the user to adjust some controls in order to reduce the clutter. Exceptions are Woodruff's constant information density application <ref type="bibr" target="#b13">[14]</ref> that does attempt to measure data density, albeit very simply, and Bertini &amp; Santucci <ref type="bibr" target="#b1">[2]</ref> who measure overplotting in sub-regions of scatterplots as part of their quality metric and subsequent clutter reduction using non-uniform sampling.</p><p>Previous work on reducing clutter in parallel coordinates has applied methods such as reordering, clustering, attribute combination and transparency. Peng et al <ref type="bibr" target="#b9">[10]</ref> utilise dimensional reordering to minimise the impact from outliers, which they argue obscure any inherent structure from clustered lines. They define the clutter measure in terms of closeness of lines, so a line without a neighbour within a certain threshold is treated as an outlier.</p><p>Another technique is hierarchical clustering <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b14">15]</ref> which constructs a tree of nested clusters of lines, also based on proximity information. The user can decide on the level of detail displayed and with appropriate use of transparency, the mean and extent of each cluster can be readily seen. This helps to differentiate between clusters; in addition, proximity-based colouring aids the separation. As with all aggregate functions, this technique tends to remove the detail, but one can see trends in an otherwise saturated display. Wegman and Luo <ref type="bibr" target="#b12">[13]</ref> also use transparency to identify regions of high overplotting through their dense colour. Artero et al <ref type="bibr" target="#b0">[1]</ref> use clustering to reduce visual clutter. Their algorithm uses frequency data, based on counting coincident lines and then smoothes the data to produce a 'density map', which has the effect of grouping lines that are fairly close to each other as well as those that are coincident. The lines are shaded to visually identify those that are in higher density regions. Note that, no attempt is made to measure the occlusion of the lines. VizCluster <ref type="bibr" target="#b15">[16]</ref> approaches the clutter issue of high dimensional data by combining adjacent dimensions, thus reducing the complexity of the display.</p><p>As far as we are aware, Anisotropic Volume Rendering <ref type="bibr" target="#b11">[12]</ref> has not been applied to parallel coordinate plots. However, this novel approach from the world of scientific visualisation and computer graphics reduces the clutter of 3D visualisations consisting of a huge number of lines by converting shaded lines into anisotropic voxels. The authors claim significant speed enhancement, reduction in storage space and good level of detail; a promising approach to try on parallel coordinate plots perhaps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DATASET AND EXPERIMENTAL PLATFORM</head><p>The implementation of the Sampling Lens application in Java is based on the InfoVis Toolkit <ref type="bibr" target="#b7">[8]</ref>, which has been augmented with additional code to provide the sampling lens functionality in both parallel coordinate plots and scatterplots. The experiments used an instrumented version of the Sampling Lens that collects statistics about the measures being investigated. It is also capable of producing a real-time variable cell-width raster grid showing the overplotting for each pixel. The application can be automated so it steps through a range of lens sampling rates and raster cell-widths and saves the results in a useful file format for further analysis.</p><p>The data used in most of the experiments is from the Portland cars dataset [31/3/05 http://www.cars.com]. The 5850 records contain details of cars for sale within 40 miles of Portland, Oregon. The attributes on the parallel coordinates plots shown in <ref type="figure" target="#fig_0">Figure 1</ref> are, from left to right: year of manufacture, price, mileage, and vehicle type (given as an integer code). The highest values are at the top of the axes.  <ref type="figure" target="#fig_0">Figure 1</ref> shows a screen shot of the parallel coordinate visualisation based on 1000 records of the cars dataset. The majority of our experiments used this randomly produced subset because details in this dataset are only visible at sampling rates that are less than 15%. So, we are pre-sampling to stretch this data range for illustration purposes. However, further experiments were conducted on the full dataset (and other datasets up to 10000 records) to verify that the results scale up. Note that, we have made no attempt here to re-organise the attributes in order to minimise occlusion. exp1 exp2 exp3 The lens positions for the main experiments (exp1, exp2, exp3) referenced in this paper are shown in <ref type="figure" target="#fig_0">Figure 1</ref>. These positions were chosen to exemplify different patterns of lines crossing the lens, as illustrated in <ref type="figure" target="#fig_1">Figure 2</ref>. exp1 has a large proportion of the lines crossing each other at large angles, exp2 has many of the lines ending at a single point, while exp3 has many lines crossing at narrow angles.</p><p>Note that, further experiments have been conducted with the lens at many positions and on additional real and simulated data sets to verify the generality of observations, but we only describe selected experiments that cover critical issues in detail here. Furthermore, we have experimented with other lens shapes, but users are more comfortable with the 'spy glass' circular lens.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">METHODS FOR CALCULATING OCCLUSION</head><p>In order to implement autosampling, we need both a measure of 'clutter' and an efficient way of calculating this measure. But to have a computationally tractable measure, we decided to use fairly simple measures based on hidden or occluded data items, as it is important that the user is aware of the proportion of data that is not visible. If we can measure the occlusion, then we can iteratively adjust the lens sampling rate to give a desired density. Even better, if we can predict the occlusion for any given sampling rate, we can choose the sampling rate directly without the expense of an iterative procedure.</p><p>In a previous paper <ref type="bibr" target="#b6">[7]</ref>, we looked at several potential metrics to measure occlusion in different ways. From empirical studies and through developing a mathematical model, we found that the metrics were in fact functionally related and can thus be used interchangeably. Hence in this study, the simplest metric is chosen, which we have called overplotted% the percentage of plotted pixels with more than one point plotted on them. Note, a plotted point means a point on a line from a single record in the data se. Because of overplotting, the number of pixels with one or more plotted points is less than the total number of plotted points.</p><p>In this section we define overplotted% precisely and describe three different ways in which we have calculated overplotted%, from a very direct data-driven pixel counting method to a more modelbased approach embodying simplifying assumptions about the data. In brief, the methods are: raster algorithm -This rasterises the lines on a grid of a given cellwidth (in pixels) and counts the number of plotted points on each grid cell to get an estimate of overplotted%. In the case when the cell-width is 1 pixel, this corresponds exactly to the desired value. It is thus the 'gold standard' as it is based on the actual overlap of the lines being displayed. random algorithm -This treats every plotted point as if it were randomly placed in the viewable pixels and calculates the overplotted% using probability. Here, only the number of plotted points comes from the data; everything else is based on the theoretical model. lines algorithm -This estimates the intersection volumes of all the lines crossing the lens. This is partly data-driven in that it uses actual lines, but is partially model-based in the way the line overlaps are combined to give an overall overplotted% value. Later in this section we will look at each of these algorithms in more detail then in Section 6, we will see how they compare using actual data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Some definitions</head><p>In order to be precise about our occlusion metric and algorithms we need some basic definitions.</p><p>For a given screen region (in particular the interior of the sampling lens) we write S for the total number of available pixels and M for the number of plotted data points. In general, M is not the number of actual pixels with points plotted on them as some points will be overplotted on the same pixel, so the number of plotted pixels is usually less than the number of plotted points. We then define the following raw values: M 1 -number of plotted points on their own pixel M n -number of plotted points sharing a pixel S 0 -number of empty pixels S 1 -number of pixels with 1 plotted point (same as M 1 ) S n -number of pixels with more than 1 plotted point Note that M = M 1 + M n and S = S 0 + S 1 + S n and always M 1 = S 1 , but M n 2*S n as each overplotted pixel contains two or more overplotted points. <ref type="figure">Figure 3</ref> shows an example of these values for a simple 3x3 plot. Note too in this example there are 2 records, giving rise to 2 lines with 3 plotted points per line, so there are 6 plotted points in total (M), but only 5 pixels containing plotted points (S 1 + S n ).</p><p>An example of a 3x3 pixel section of the screen with a horizontal and a vertical line crossing at the centre. M = 6, S = 9 M 1 = 4, M n = 2 S 0 = 4, S 1 = 4 and S n = 1 <ref type="figure">Figure 3</ref>. Example of overplotting</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Occlusion metric -overplotted% defined</head><p>We can then define our occlusion metric as: overplotted% = 100 * S n / (S 1 + S n ) In other words, overplotted% is the percentage of plotted pixels with more than 1 plotted point. The range is 0% (all plotted points on their own) to 100% (no single plotted points). In the example in <ref type="figure">Figure 3</ref> this is: overplotted% = 100 * 1 / (4 + 1) = 20 We will now look at the three different algorithms we have developed to calculate overplotted% in more details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Raster algorithm</head><p>This is clearly the simplest method and the only one that corresponds directly to the desired measurement. In effect this amounts to emulating the action of the graphics processing in drawing the lines across the area of the lens. This could be achieved by using the graphics processor's own line drawing, but is itself often slow for very high line densities. Single pixel counting is even slower; hence we have looked at using raster grids greater than 1 pixel wide in order to reduce the calculation time. Now, a given line will cross a greater proportion of the grid cells when the cells are larger -the proportion of cells crossed being on average proportional to the grid size. Therefore, in order to maintain the correct proportions, we can sub-sample the lines when using coarser grids. This together with fewer grid cells 'plotted' per line results in a roughly N 2 speed increase with larger cell sizes.  <ref type="figure" target="#fig_2">Figure 4</ref> shows how these approximations match up with different grid sizes. Note that the 'adjusted' number of plotted points refers to those plotted on a 1-pixel grid. The actual number of grid cells 'plotted' is lower because of both the sub-sampling of lines and the larger grid size. In terms of accuracy, only the coarsest grid size of 16 pixels (leading to around 35 grid cells on a 100 pixel diameter lens) shows any deviation from the 'true' 1 pixel grid. The unevenness of the lines for cell width 8 and 16 is due to greater random variation with smaller numbers of 'plotted' grid cells. Graphs for other lens areas show similar behaviour. The resulting significant increase in calculation speed is discussed in Section 6.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Random algorithm</head><p>For our second algorithm we simply assume that all the points on all the lines ar a a e individually randomly scattered over the availab a le pixels. Given this very simplistic model, the number of points plotted in each pixel fo f f llows the binomial distr t t ibution where p, the probab a ility of a single point being plotted in a par a a ticular pixel is 1/S. Hence, we can calculate expected values fo f f r the diff f f e f f rent raw values as fo f f llows:</p><formula xml:id="formula_0">E( M 1 ) = M (1-p) M-1 E( M n ) = M -E(M 1 ) = M (1 -(1-p) M-1 ) E( S 0 ) = S (1-p) M E( S 1 ) = S *M (p) (1-p) M-1 = M (1-p) M-1 E( S n ) = S -(E(S 0 ) + E(S 1 )) (M 1, M n etc.</formula><p>have been defi f f ned in Section 5.1) A value fo f f r the overp r r lotted% can be obtained fr f f om: overp r r lotted% = 100 * (1-</p><formula xml:id="formula_1">((1-p) M + M/S (1-p) M-1 ))/(1-(1-p) M )</formula><p>This algorithm is very cheap a a to calculate, as it only requires an estimate of the total number of points to be plotted. However, it is the least realistic, basically tr t t eating each line as a collection of points to be randomly distr t t ibuted over the availab a le pixels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Line algorithm</head><p>Here the lines crossing the lens (or a sample of the lines, in the case of a denser region) are tak a a en and the overlap a a between each pair of lines is estimated by fi f f rst checking the end points of the pair to verify f f whether the lines cross and if they do, the overlap a a on one of the lines is calculated as:</p><p>line overlap a a proportion = max( 1.0, wid / ( len * sin( ) ) ) where wid and len are the width and length of the chosen line in pixels and is the angle between the two lines (see <ref type="figure" target="#fig_3">Figure 5</ref>). Note that if the crossing lines are near a a ly parallel, they have a higher overlap a a than if they cross at 90 degrees. An average overlap a a , p 1 , is computed by combining the line overlap a a proportion fo f f r all intersecting lines and weighting by the total length of the lines (non-intersecting lines ar a a e not included). Although there ar a a e many pairs of lines (almost L 2 possible pairs; a line is not compar a a ed to itself) f f only an estimate is required, so it is suff f f i f f cient to use a small sample in order to calculate this overlap a a proportion. p 1 eff f f e f f ctively tells us how a point plotted on a line is likely to be overp r r lotted by one other line. To estimate p fr f f ee, , the likelihood that a pixel will not be overp r r lotted by any line, we can use: p fr f f ee = (1-p 1 ) L-L L 1 Using the defi f f nitions fr f f om 5.1 we see that:</p><p>p fr f f ee = E(M 1 ) / M where M is the total of the line lengths in pixels. We then use fo f f rmulae similar a a to the random algorithm, but tak a a ing into account that the lines do not cover all pixels with equal probab a ility. Inverting the equation fo f f r E(M 1 ), we get an 'eff f f e f f ctive' number of pixels S' (which would be expected to be smaller than S).</p><p>S' = 1/q where q = 1 -p fr f f ee</p><formula xml:id="formula_2">1/(M-1)</formula><p>Note that this algorithm uses some of the same assumptions as the random algorithm, but bases it on some more direct measures of the lines as they actually fa f f ll. We would therefo f f re expect that in terms of accuracy, this would lie somewhere between the raster and the random algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">COMPARING OCCLUSION ALGORITHMS</head><p>We compar a a ed the ab a ove three algorithms using a 1000 record subsample of the Portland cars dataset as described previously in Section 4. We will fi f f rst consider the accuracy of the methods and then discuss how computationally eff f f i f f cient they are.  We have plotted similar grap a a hs fo f f r exp2 and exp3, but to compar a a e all three experiments, we have normalised the lines using the 'gold standar a a d' raster value (see <ref type="figure" target="#fig_6">Figure 7</ref>). Note that these results have been chosen to show a range of behaviours typical of other lens positions and datasets.  <ref type="figure" target="#fig_6">Figure 7</ref> shows that the random and lines plots fo f f r exp1 fo f f llow a path close to the diagonal (i.e. the raster values), refl f f ecting once again the close agreement between the three algorithms fo f f r the data generated by this par a a ticular a a lens position. The light coloured yellow pair of lines near a a the diagonal are fo f f r exp3, a lens region that has almost parallel lines and areas of varying density (as in <ref type="figure" target="#fig_1">Figure 2</ref>). The lines show that estimates from the lines and random algorithms differ more from the true raster value (up to 10% in places) than for exp1. We believe that this discrepancy is due to the range of densities within the lens region having a disproportionate effect on the calculations, something we investigate further in section 7.</p><p>The two lines that deviate most are for exp2. Recall that this area includes one of the parallel coordinate attribute axes and the points on the axes have large numbers of lines converging on them (see <ref type="figure" target="#fig_1">Figure 2</ref>). It appears that the lines algorithm for exp2 substantially overestimates the overplotted% values for the whole range of sampling rates, whereas the random algorithm underestimates overplotted% at the lower sampling rates.</p><p>We have been looking at ways of dealing with extreme 2 cases where many lines converge to a single point on an attribute axis within the lens. We currently allow expert users to specify a dead zone around the attribute axes and we believe there are 'fixes' for the lines algorithm to improve the robustness of its estimates (basically the parallelogram in <ref type="figure" target="#fig_3">Figure 5</ref> needs to be modified at line ends). However, it is notable that even in this particularly extreme case, the random estimate does track the general trend of the 'gold standard' raster curve remarkably well.</p><p>To summarise, all three algorithms yield comparable results except in extreme situations. This is particularly noteworthy for the random algorithm as it embodies a fairly rudimentary model of the data! The random algorithm also performs passably in the difficult case when the lens overlaps an attribute axis, a case where even the direct measurement is problematic.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Efficiency: which is fast enough?</head><p>So far, whilst the lines algorithm has some problems in 'difficult' cases, all the algorithms are potential contenders as estimates of the overplotted% occlusion measure. Recall that the lines algorithm uses the intersection volumes of all the lines crossing the lens, so in terms of efficiency, is L 2 in the number of lines. The raster algorithm rasterises the lines to a grid of given cell-width in pixels (say C pixels), thus the time taken is proportional to the number of lines and the number of cells crossed by the lines. However, bear in mind that for larger cell sizes we should undersample the lines to obtain a proper measure, so the actual time is proportionate to: L ppl / C 2 , where ppl is points per line. In contrast, the random calculation depends only on a count of the number of points to be plotted. This often comes almost 'for free' as a side effect of other calculations, but in the case of very large numbers of lines, it can be easily estimated. Typically, line lengths have a standard deviation of less than 3% of their average, so sampling the lengths of even 1000 lines would give an error of less than 0.1%.</p><p>Finally, we should note that there is a difference between the modes of use of the two model-based algorithms compared with the data-driven raster algorithm. Given initial data for a lens position (average crossing area for lines and number of pixels for random) the overplotted% can be calculated for any sampling rate. Thus the appropriate sampling rate can be chosen directly to give the desired occlusion measurement, overplotted%. However, the raster calculation is based on the actual lines plotted at a given sampling rate. The raster calculation therefore has to be used in an iterative cycle adjusting the sampling rate and recalculating the measure at each iteration. The actual time taken to use the raster algorithm is perhaps 5-10 times the 'headline' figure for a single iteration. <ref type="figure" target="#fig_7">Figure 8</ref> shows times (in ms) to perform the raster algorithm at a number of different cell-widths and also the times to perform the lines algorithm (labelled LOT). The time for the random algorithm is too small to measure. The times were taken from our Java implementation running on a 867MHz G4 PowerBook. The x-axis shows calculations at different sampling rates (different numbers of lines) and the quadratic growth time for the lines algorithm is evident. The other three plots, for the raster algorithm with cellwidths of 1, 2 and 4 pixels, are roughly linear in the number of lines (as expected) and the decrease in the slope with increasing cellwidths is also clear. Note that the 280 ms time for the lens calculation is slow for interactive feedback (200ms max), but given the need for iterations with the raster algorithm, the lines algorithm was in fact more responsive in our initial implementations. However, the 280ms is based on 742 lines, that is over half a million line pairs. Using a sample of these lines within the lens would reduce the lines calculation times by several orders of magnitude whilst not substantially altering its accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">The winner …</head><p>Combining efficiency with our accuracy measurements from Section 6.1, we can see that raster algorithms with cell sizes up to 4 pixels has little noticeable effect on accuracy and leads to a significant decrease in processing time of at least 90% compared with the single pixel raster. The lines algorithm is at first sight slower, but being model-based, it can use sampled data and does not require an iterative process. However, it is the least robust method in extreme situations. So the clear winner is the random algorithm as it is not only very accurate in normal cases and reasonably stable in difficult situations, but it is also almost instantaneous compared with both other algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">LIMITS AND GENERALISATION</head><p>So far we have seen how the random algorithm is surprisingly accurate and also very efficient to calculate. However, it is based on a very rudimentary model of the plotted points, so we would expect to find cases where it breaks down. We have already seen one example in exp2 near the axis where many lines converge. In this case the systematic property of parallel coordinates led to an underestimation of overlap% by the random algorithm.</p><p>The main simplification of the random algorithm is to assume that the points are randomly and uniformly scattered over the available area. The fact that the points are on lines of course means that the points are not randomly scattered; but when using real data, this lack of randomness is clearly not an overriding problem, albeit a surprising result. However, the lines themselves do not always lie uniformly over the lens area and this creates a different class of extreme cases. We will now consider empirical results for parallel coordinates, near such areas and show how this relates to a theoretical analysis of the performance of random algorithm on scatter plots. The result is used to suggest a modification to the random algorithm, which we can test empirically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Extreme cases -non-uniform density</head><p>As noted, we expect problems in ar a a eas where there is a mark r r ed diff f f e f f rence in density across the lens. <ref type="figure" target="#fig_10">Figure 9</ref> shows a series of lens positions at just such a boundar a a y, tak a a en fr f f om exp30 to exp34. These lens positions move fr f f om being in an area of fairly unifo f f rm line coverage (exp30) to one where only ab a out 20-25% of the ar a a ea is covered (exp34). <ref type="figure" target="#fig_0">Figure 11</ref> shows plots at three of these positions (exp30, exp32 and exp34). Each fi f f gure has plots fo f f r the lines, raster and random algorithm (reading each grap a a h fr f f om top to bottom) at diff f f e f f rent sampling rates. In relation to the 'golden standar a a d' raster calculation, the lines algorithm overestimates overp r r lotted% and the random algorithm slightly underestimates this occlusion measure. However, as the lens gets less unifo f f rmly covered there is a noticeab a le widening and by exp34 the random measure is underestimating by near a a ly 50%. Whilst in most areas the random algorithm is surp r r risingly good, in this extreme case it is no longer accurate.</p><p>There ar a a e a number of eff f f e f f cts at the edge of a dense area, fo f f r example the lines tend to be lying in the same direction, hence less likely to cross, but when they do cross the overlap a a is greater due to the shallow angle. Also, by defi f f nition such ar a a eas ar a a e at the edges as fa f f r as the data set is concerned and may have unusual properties. However, we can more easily model scatter plots in such circumstances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Scatter plots -theoretical analysis</head><p>Imagine a scatter plot of M totally random points spread over a lens of area S pixels. This is exactly the model of our random calculation, hence the tr t t u r r e (raster) overp r r lotted% (using Poisson ap a a proximation) is: overp r r lotted% = 100 * (1 -(1+ )e -) / (1 -e -) where = M/S is the density of points. Now imagine spreading M/2 points over half the area, i.e. the eff f f e f f ct of having a lens partly over an area with density and half with no points. The average density is now / 2, but the actu t al overp r r lotted% is exactly the same as ab a ove. So the raster algorithm would give the value ab a ove, but random algorithm would give the value with / 2: raster overp r r lotted% = 100 * (1 -(1+ )e -) / (1 -e -) random overp r r lotted% = 100 * (1 -(1+ / 2)e -/2 ) / (1 -e -/2 ) <ref type="figure" target="#fig_0">Figure 10</ref> shows these values plotted against one another. Notice that fo f f r low densities (lower sampling rate), the random algorithm would show values that are half those of the raster algorithm (this can also be shown analytically) and fo f f r higher densities, the values ar a a e still substantially lower.</p><p>While the theoretical scatter plot data is diff f f e f f rent in many ways fr f f om par a a allel coordinate lines, it does shed some light on the pattern of diff f f e f f rence between the results of the random algorithm and the tr t t u r r e overp r r lotted%. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Using multiple bins</head><p>Given the fi f f ndings of the scatter plot analysis, an obvious way to improve the random algorithm is to split the lens area into a number of smaller areas or bins, calculate the random overp r r lotted% fo f f r each bin and then perfo f f rm a weighted average (weighted by the number of plotted pixels per bin). <ref type="figure" target="#fig_0">Figure 12</ref> shows a bin-based corr r r ection on the same area as exp34 in <ref type="figure" target="#fig_10">Figure 9</ref>. The data has been plotted fo f f r diff f f e f f rent bin widths on a 100 pixel diameter circular a a lens. The plot is normalised (as in <ref type="figure" target="#fig_6">Figure 7)</ref> where the binned random ap a a proximations ar a a e plotted against the tr t t u r r e raster calculation fo f f r diff f f e f f rent sampling rates. We can see that whilst the original random algorithm underap a a proximates the tr t t u r r e value, the binned estimates lie remark r r ab a ly close to the perfe f f ct 45-degree line (shown as a dotted line). Even the plot fo f f r a bin width of 50 pixels (4 bin, i.e. lens divided into quar a a ters) lies very close to the tr t t u r r e line.   The binned calculation time is proportional to the number of bins (time 1/(lensdiameter/binwidth) 2 ). However, given that the random calculations are very fast, the time is negligible for small numbers of bins. Even with 64 bins, the time is still too small to measure against the other calculation methods (see <ref type="figure" target="#fig_7">Figure 8</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION AND FUTURE WORK</head><p>We have come quite a long way to obtain such a simple result the best way to calculate a measure of occlusion for parallel coordinate plots. However, the end point was quite unexpected. From the beginning of our work with sampling, we have often used binomial approximations to obtain an order of magnitude estimate of behaviour. However, the level of simplification embodied in the random algorithm seems just too coarse to use in actual calculations. The degree of fit we have seen in both Sections 6 and 7 is truly remarkable. Even if the lines were randomly scattered, the points on them would not be; they would be lines! Strangely this seems to be irrelevant to the bulk behaviour and it appears that such a simple (even simplistic) model is surprisingly good! Areas of rapidly varying density are approximated least well by the random algorithm, but we have seen that we only need to split the lens into a small number of bins to improve this to acceptable levels, even for the worst areas.</p><p>Our empirical investigations have focussed on parallel coordinate plots. We would not like to speculate that the random algorithm would work for other visualisations, but it may be worth looking into applying this to other line based techniques. For example, Rafiei &amp; Curial <ref type="bibr" target="#b10">[11]</ref> use sampling to reduce the clutter of very large graphs. Our technique can be used to choose appropriate sampling rates based on the occlusion within the graph. Furthermore, autosampling based on the whole plot could be useful in an application which compares multiple plots (either side by side or in rapid succession), where the 'density' of the whole plot could be normalized to some extent.</p><p>Random sampling as a clutter reduction technique is most useful for exploratory tasks. If the user has specific questions or is very knowledgeable about the particular data set, then other more appropriate techniques can be applied. However, a user faced with a cluttered display due to excess data, can choose between applying a technique that distorts the view in some way or one that adopts a fairly natural process of taking a sample of the data. We believe the sampling approach is worth considering; in fact many data sets are a sample of an even larger data set (e.g. population of country) or of continuous data (e.g. atmospheric data readings).</p><p>We have yet to verify that similar methods will work on point plot data, where instead of overlapping lines there are full or partially overlapping data points of finite size, but we deem this feasible. We also plan to undertake studies to ascertain the practical use of the Sampling Lens to users who are actively using parallel coordinate plots.</p><p>Implementation details of all algorithms are at this paper's web page: http://www.hcibook.com/alan/papers/InfoVis06-NoClutter/</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENT</head><p>The initial development of the Sampling Lens was shared by Enrico Bertini, following a DELOS European Network of Excellence funded visit to the UK.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Parallel coordinate plot using 1K car dataset (labels and lens positions for exp2 &amp; exp3 are superimposed)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Lines within the lens at a 10% lens sampling rate</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 .</head><label>4</label><figDesc>Accuracy of different raster cell-widths</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 .</head><label>5</label><figDesc>Line overlap proportion</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>6. 1 Figure 6</head><label>16</label><figDesc>Accuracy: which is good enough? shows the results fo f f r exp1. It demonstrates very good agreement between the 'gold standar a a d' raster plot, based on actual screen pixels, and the random plot [+1%, sd=1.3]. This is somewhat surp r r rising as the latter is based on a standar a a d distribution of a given number of plotted points and availab a le pixels. The lines calculation is still fairly close, overestimating the overp r r lotted% by ab a out 6% [sd=3].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 .</head><label>6</label><figDesc>Three different occlusion algorithms (exp1)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 .</head><label>7</label><figDesc>Exp1, 2 and 3 normalised against raster values</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 .</head><label>8</label><figDesc>Calculation times for raster and lines algorithms</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 .</head><label>10</label><figDesc>Theoretical values of random algorithm for an uneven scatterplot</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 .</head><label>11</label><figDesc>Lines, raster and random values at different sampling rates for lens positions exp30, exp32 and exp34</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 .</head><label>9</label><figDesc>Lens at 10% sampling rate, exp30 is on the left.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 .</head><label>12</label><figDesc>Binned-random algorithm</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Although this is a fairly common occurrence, in terms of the algorithms, the fact that so many points meet at a point is an extreme state.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Uncovering Clusters in Crowded Parallel Coordinates Visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">O</forename><surname>Artero</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Ferreira De Oliveira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Levkowitz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="131" to="136" />
		</imprint>
	</monogr>
	<note>Infovis</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Improving 2D scatterplots effectiveness through sampling, displacement and user perception</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bertini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Santucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Information Visualisation</title>
		<meeting>Information Visualisation<address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005-07" />
			<biblScope unit="page" from="826" to="834" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Toolglass and magic lenses: the see-through interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Bier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Stone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Buxton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>De Rose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Computer Graphics and Interactive Techniques</title>
		<meeting>Computer Graphics and Interactive Techniques</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="73" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">by chance: enhancing interaction with large data sets through statistical sampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dix</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Ellis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Advanced Visual Interfaces</title>
		<meeting>Advanced Visual Interfaces<address><addrLine>L&apos;Aquila, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2002-05" />
			<biblScope unit="page" from="167" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Density control through random sampling : an architectural perspective</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dix</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Information Visualisation &apos;02</title>
		<meeting>Information Visualisation &apos;02<address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002-07" />
			<biblScope unit="page" from="82" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The Sampling Lens:Making Sense of Saturated Visualisations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bertini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dix</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHI &apos;05 Extended Abstracts on Human Factors in Computing Systems</title>
		<meeting><address><addrLine>Portland, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="1351" to="1354" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">the plot, the clutter, the sampling and its lens: occlusion measures for automatic clutter reduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dix</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Advanced Visual Interfaces (AVI&apos;06)</title>
		<meeting>Advanced Visual Interfaces (AVI&apos;06)<address><addrLine>Italy</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2006-05" />
			<biblScope unit="page" from="266" to="269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J-D</forename><surname>Fekete</surname></persName>
		</author>
		<title level="m">The InfoVis Toolkit&quot;. Infovis</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="167" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Hierarchical Parallel Coordinates for Exploration of Large Datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y-H</forename><surname>Fua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization &apos;99</title>
		<meeting><address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Clutter Reduction in Multi-Dimensional Data Visualization Using Dimension Reordering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004-10" />
			<publisher>IEEE</publisher>
			<biblScope unit="page" from="89" to="96" />
		</imprint>
	</monogr>
	<note>Infovis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rafiei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
		<title level="m">Effectively Visualizing Large Networks Through Sampling&quot;. Visualization &apos;05</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="48" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Anisotropic Volume Rendering for Extremely Dense, Thin Line Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schussman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>IEEE</publisher>
			<biblScope unit="page" from="107" to="114" />
		</imprint>
	</monogr>
	<note>Visualization &apos;04</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">High Dimensional Clustering Using Parallel Coordinates and the Grand Tour</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Wegman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Luo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Science and Statistics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="352" to="360" />
			<date type="published" when="1996-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Constant Density Visualizations of Non-Uniform Distributions of Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Woodruff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Landay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stonebraker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. UIST&apos;98</title>
		<meeting>UIST&apos;98<address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="19" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Interactive hierarchical displays: a general framework for visualization and exploration of large multivariate data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="265" to="283" />
			<date type="published" when="2003-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">VizCluster and Its Application on Clustering Gene Expression Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ramanathan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Distributed and Parallel Databases</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="73" to="97" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
