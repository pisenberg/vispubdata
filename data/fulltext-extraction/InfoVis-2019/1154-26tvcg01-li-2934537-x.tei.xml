<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">P5: Portable Progressive Parallel Processing Pipelines for Interactive Data Analysis and Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianping</forename><forename type="middle">Kelvin</forename><surname>Li</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
						</author>
						<title level="a" type="main">P5: Portable Progressive Parallel Processing Pipelines for Interactive Data Analysis and Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2019.2934537</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Information visualization</term>
					<term>progressive analytics</term>
					<term>visualization software</term>
					<term>GPU computing</term>
					<term>data exploration</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present P5, a web-based visualization toolkit that combines declarative visualization grammar and GPU computing for progressive data analysis and visualization. To interactively analyze and explore big data, progressive analytics and visualization methods have recently emerged. Progressive visualizations of incrementally refining results have the advantages of allowing users to steer the analysis process and make early decisions. P5 leverages declarative grammar for specifying visualization designs and exploits GPU computing to accelerate progressive data processing and rendering. The declarative specifications can be modified during progressive processing to create different visualizations for analyzing the intermediate results. To enable user interactions for progressive data analysis, P5 utilizes the GPU to automatically aggregate and index data based on declarative interaction specifications to facilitate effective interactive visualization. We demonstrate the effectiveness and usefulness of P5 through a variety of example applications and several performance benchmark tests.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Visualization is useful for understanding, analyzing, and exploring complex data. Many visualization systems have been developed to help users perform reasoning, analysis, and exploration tasks by combining automated statistical computations and interactive visualizations. For supporting effective visual analysis, systems must provide interactive performance to ensure users can remain focused and maintain their attention <ref type="bibr" target="#b8">[8,</ref><ref type="bibr" target="#b9">9,</ref><ref type="bibr" target="#b38">38]</ref>. As data continues to grow in volume and complexity, visualization systems need to leverage high-performance computing to accelerate data processing and rendering. Most existing visualization libraries and toolkits <ref type="bibr" target="#b7">[7,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b36">36,</ref><ref type="bibr" target="#b44">44]</ref>, however, only use sequential computation for performing data transformations and visualizations; therefore, they are not capable of handling large data and the associated processing. Some of these toolkits support crafting visualizations through the use of declarative grammars <ref type="bibr" target="#b20">[20,</ref><ref type="bibr" target="#b45">45]</ref>, but they do not support constructing a high-performance visualization system. As multicore CPUs and manycore GPUs have become commonly available in mainstream computers, a few toolkits <ref type="bibr" target="#b23">[23,</ref><ref type="bibr" target="#b33">33,</ref><ref type="bibr" target="#b34">34]</ref> have been made to exploit parallel computing to improve the performance of visualization rendering. Despite these advances, effective visualization of big data requires not only decreasing the rendering latency but also increasing the data transformation speed. Moreover, it is difficult to provide interactive performance for visual analysis when the scale of the data size exceeds the processing capacity of the underlying visualization system.</p><p>To support interactive analysis of big data, progressive analytics has recently emerged as a popular approach for (1) delivering incremental results to maintain an acceptable level of responsiveness, and (2) allowing users to interact with the intermediate results and better control the exploration process. Several visualization systems <ref type="bibr" target="#b6">[6,</ref><ref type="bibr" target="#b31">31,</ref><ref type="bibr" target="#b40">40]</ref>, user studies <ref type="bibr" target="#b17">[17,</ref><ref type="bibr" target="#b46">46]</ref>, and frameworks <ref type="bibr" target="#b30">[30,</ref><ref type="bibr" target="#b37">37,</ref><ref type="bibr" target="#b42">42]</ref> have provided design guidelines for developing progressive data analytics. However, we lack visualization toolkits that leverage these design guidelines for building progressive visualization systems. Moreover, progressive analytics and GPU-based parallel computing can be combined to provide a better solution for interactive anlaysis of big data. A declarative visualization toolkit incorporating the capabilities of parallel computing and progressive analytics can make building high-performance and scalable visualization systems a much easier job.</p><p>In our prior work, we developed P4: Portable Parallel Processing Pipelines <ref type="bibr" target="#b24">[24]</ref>, a web-based visualization toolkit that offers GPU computing with declarative grammar for application programmers to build high-performance visualization systems. P4 leverages runtime code generation to create WebGL programs that effectively utilize the GPU to accelerate both data transformation and visualization rendering, providing performance that is an order of magnitude faster than the current state of the art. In this paper, we present P5, a visualization toolkit that combines declarative visualization and GPU computing for progressive data analysis and visualization. The design of P5 is motivated by three major goals.</p><p>Progressive Parallel Processing. Parallel computing and progressive processing are two promising approaches for supporting big data analysis and visualization, and they can also be combined to complement each other. By exploiting parallel computing for progressive processing, visualization systems can deliver faster results at each progression, accelerating the overall analysis and exploration process. Additionally, enabling progressive processing for GPU computing allows handling data that is larger than the GPU memory capacity. A framework is needed to effectively combine progressive processing with GPU computing.</p><p>Declarative Progressive Visualization. Implementing either parallel processing or progressive analytics alone for data visualization is already a nontrivial task. Coupling these two methods for building a visualization system requires significant programming and software engineering effort. Hence, a visualization toolkit with an easy-to-use application programming interface (API) can be helpful for implementing progressive and parallel data transformations and visualizations in analytics systems. This relieves the huge technical burden on the designers and programmers for implementing both parallel processing and progressive visualization from scratch.</p><p>Interactive Progressive Analysis. Enabling interactive visualization for progressive analytics is important for allowing users to analyze the intermediate results. For using statistical computations to progressively analyze big data, individual data records are discarded after each progression; as a result, direct data filtering cannot be used for supporting interactive visualizations. To address this issue, visualization toolkits should provide functionality for indexing and saving the data structures required by the user-specified interactions.</p><p>To meet these goals, we first contribute a visualization framework that seamlessly integrates GPU computing with progressive processing. As a web-based visualization toolkit, P5 leverages and extends P4's GPU-based data transformation and visualization capabilities. This allows P5 to effectively facilitate progressive parallel processing. Second, we contribute an intuitive API with declarative grammar for specifying progressive data transformations and visualization operations, both of which effectively run on the GPU. Moreover, P5 automatically generates indexed data structures for supporting interactive visualization, so users can interact with the visualization of the intermediate results in the progressive analysis workflow. We demonstrate the usefulness and advantages of P5 through a variety of example applications. In addition, we run performance benchmarks to show that P5 can drastically improve the speed of progressive visualization and provide interactive performance for analyzing intermediate results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>P5 is related to research work in progressive analytics, visualization toolkits, and interactive visualization systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Progressive Analytics</head><p>In the field of computer science, progressive methods are commonly used for trading off computation latency against quality of results, where the results can be incrementally refined or improved over time. Progressive refinement methods <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b43">43]</ref> were introduced in the area of computer graphics for supporting interactive rendering, where similar approaches have been adapted for scientific visualization <ref type="bibr" target="#b18">[18,</ref><ref type="bibr" target="#b22">22]</ref>. In the area of databases, a long-running thread of research in approximated query processing <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b21">21]</ref> has provided a basis for progressive data analysis. With databases supporting approximated query processing, progressive data analysis systems can trade off accuracy for response time by returning partial results that are progressively improving. Running confidence intervals are usually computed and provided with the results. Fisher et al. <ref type="bibr" target="#b17">[17]</ref> showed that incremental visualization of progressive aggregation results with confidence intervals can allow users to effectively make early decisions when exploring large datasets. Schulz et al. <ref type="bibr" target="#b37">[37]</ref> presented an enhanced incremental visualization model for generalizing the progressive process of using partitioned data and visualization operators to facilitate intermediate visualization updates. Zgraggen et al. <ref type="bibr" target="#b46">[46]</ref> studied the effect of progressive visualization compared to a blocking condition with significant delays and an ideal condition with almost no delay. They showed that users performed equally well with progressive visualizations and ideal condition with almost no delay in discovering insights, but the blocking condition with significant delay adversely impacts the analysis process.</p><p>By extending the concept of progressive data analysis for visual analytics <ref type="bibr" target="#b13">[13]</ref>, progressive visual analytics (PVA) provides visualization of the intermediate results and allows analysts to interact with the intermediate results for steering the analysis process. Steering typically includes changing the parameters of the analysis methods and visual encoding of the visualization, as well as stopping or restarting the analysis. Recently, researchers have developed several PVA systems for different analysis tasks and studies. Stolper et al. <ref type="bibr" target="#b40">[40]</ref> adapted the SPAM <ref type="bibr" target="#b5">[5]</ref> algorithm in a PVA system for exploring the correlations in electronic medical records. Badam et al. <ref type="bibr" target="#b6">[6]</ref> presented InsightFeed, a PVA system for exploring social network feeds, and conducted user studies to investigate the tradeoffs in user interface design for supporting progressive visual analytics. Pezzotti et al. <ref type="bibr" target="#b31">[31]</ref> developed DeepEyes, a PVA system that provides visualizations for supporting the design of neural networks during the training process. Most of these systems followed the design guidelines provided by Stolper et al <ref type="bibr" target="#b40">[40]</ref>, which are useful for designing the analytics and visualization components in PVA systems. Based on these guidelines, the analytics component should provide incrementally refining partial results and allow users to focus on subspaces of interest as well as to ignore irrelevant subspaces. On the other hand, the visualization component should indicate new results, support on-demand updates, minimize distractions due to updating results, and provide interfaces to specify problem subspace. These design guidelines also provided a basis for designing P5's API with the goals of supporting progressive data processing and visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Visualization Libraries and Toolkits</head><p>Many visualization libraries and toolkits have been developed for designing visualization applications and building visual analytics systems.</p><p>High-level libraries, such as ggplot2 <ref type="bibr" target="#b44">[44]</ref>, D3 <ref type="bibr" target="#b7">[7]</ref>, and Vega/Vega-Lite <ref type="bibr" target="#b35">[35,</ref><ref type="bibr" target="#b36">36]</ref> provide declarative grammars to reduce the technical burdens for crafting visualizations. Declarative grammars can decouple visualization design from execution details and defer control flow concerns to the runtime, which allow programmers to focus on applicationspecific design decisions <ref type="bibr" target="#b20">[20]</ref>. However, these libraries focus on providing an easy-to-use programming interface, but do not offer support for processing and visualizing large data. Application developers need to incorporate high-performance computing techniques for handling large datasets, which undo the benefits of declarative visualization specification. On the other hand, low-level graphics libraries, such as OpenGL and VTK, provide fine-grained control and performance, but are tedious for building advanced visualization systems and data analytics applications. Besides system performance, these libraries do not provide support for progressive data processing and visualization. This makes building visualization systems that incorporate both high-performance computing and progressive analytics workflows challenging.</p><p>Only a few researchers have contributed to research and development of high-performance toolkits for information visualization. McDonnel et al. <ref type="bibr" target="#b29">[29]</ref> presented a visual programming environment with graphical user interfaces for composing GPU shaders to create data visualizations. However, the flexibility for creating customized visualizations is limited. Ren et al. <ref type="bibr" target="#b34">[34]</ref> developed Stardust for providing a programming interface similar to D3 which uses WebGL to render large data. While Stardust only focuses on improving rendering performance, it does not provide support for accelerating data transformations. Fekete et al. <ref type="bibr" target="#b16">[16]</ref> presented ProgressiVis, a Python toolkit for providing a progressive computation paradigm for implementing exploratory data analysis applications. However, ProgressiVis only uses sequential computations and provides no direct support for interactive visualizations. To provide high performance for progressive data analysis and visualization, we combine GPU computing and progressive processing in P5. In addition, we design an easy-to-use API with declarative grammar for specifying progressive analysis workflows. P5 provides common data transformations and visualizations for streamlining the implementation of progressive visualization systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Interactive Visualization Systems</head><p>Supporting interactive analysis is important for visualization systems. Many visualization systems use a server-client architecture for processing queries using server-side databases and send the results to the client for visualization. For example, commercial products such as Spotfire <ref type="bibr" target="#b1">[2]</ref> and Tableau <ref type="bibr" target="#b0">[1]</ref> use database systems in cloud computing infrastructures to process queries for supporting interactive visualizations. In this approach, every user interaction requires a round trip to get the results from the database, where the associated queries need to be evaluated on the entire dataset. To reduce system latency for interactive visualization, data indexing techniques, such as data cubes <ref type="bibr" target="#b19">[19]</ref>, can be used to compute data aggregates based on the visualized data dimensions. The interactive scalability is not limited by data size but by the chosen resolution of the visualizations. Multi-scale data cubes <ref type="bibr" target="#b41">[41]</ref> can be used to support interactive visualizations of multiple resolutions. Specialized data cubes can be designed for specific data types. Nanocubes <ref type="bibr" target="#b26">[26]</ref> use hierarchical structures and compact indexes for interactive visualizations of spatiotemporal data. Methods based on data cubes typically create precomputed data aggregates stored in system memory to support real-time interactive visualizations. However, the storage size of data cubes increases exponentially with the number of data dimensions and polynomially with the resolutions of the dimensions. When the size of the data cubes is large, processing the data cubes can incur high system latency. In addition, the required storage size for the data cubes can be larger than the capacity of the system memory. To address these issues, Liu et al.'s imMens <ref type="bibr" target="#b28">[28]</ref> create precomputed aggregates as dense data cubes based on the linked data dimensions in the visualizations, which decompose a full data cube into several smaller data tiles to reduce storage size. The precomputed data tiles are then stored in GPU memory to leverage GPU computing for parallel processing, allowing imMens to support interactive visualizations of larger datasets with low latency. Beside storage size and processing speed, methods based on data cubes require preprocessing, which can take a long time before users can start exploring the data. In our approach, P5 leverages GPU computing to automatically generate small data cubes based on the interactions defined by the declarative grammar. P5 also automatically updates the data cubes during progressive data processing. This enables cold-start exploration of large datasets without precomputation and leverages GPU computing to accelerate data processing for supporting interactive visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DESIGN</head><p>In this section, we first present P5's progressive visualization model and system framework that enable progressive processing with GPU-based parallel data transformations and visualizations. Second, we introduce P5's API and declarative grammar for designing and specifying progressive processing pipelines. We also describe our methods for facilitating interactive visualization during progressive data processing. Last, we provide the details for our implementation of P5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Progressive Visualization Model</head><p>P5's progressive visualization model extends the information visualization Reference Model <ref type="bibr" target="#b8">[8]</ref>. A conventional visualization pipeline based on the Reference Model is shown in <ref type="figure" target="#fig_0">Fig. 1(a)</ref>, where analytical processing includes data transformations and statistical analysis methods, and visualization rendering includes visual mapping and view transformation. With such conventional pipeline, users need to wait for the processing and rendering of the whole dataset to be completed before they can see and analyze the results. For large datasets, the wait time can be very long which may hinder effective visual analysis process <ref type="bibr" target="#b9">[9]</ref>. To provide a progressive analysis workflow, P5 extends the visualization pipeline based on the Reference Model to adopt the progressive analytics paradigm as shown in <ref type="figure" target="#fig_0">Fig. 1(b)</ref>. . Conventional pipeline (a) versus progressive pipeline (b) for data visualization. The convention pipeline requires users to wait for analysis and visualization operations to be completed on the whole dataset before interaction, while the progressive pipeline processes data in chunks and provides incrementally refining visualization of results at interactive speed.</p><p>In our model of progressive pipeline, a partitioning operation is first performed to obtain data chunks from the data source (e.g., files in local hard disks or server). Analytical processing is then performed on the data partitions to produce partial analysis results, which can be visualized and incrementally refined. To support different types of progressive analytics applications, P5 allows the progressive pipeline to operate with three different modes: automatic, manual, semi-automatic. In automatic mode, the pipeline automatically processes the next data partition after the visualization of the current result is completed. In semi-automatic mode, analytical processing is progressing automatically, but visualization rendering is performed manually. An explicit signal is needed to be received by the pipeline to visualize the accumulated partial results. In manual mode, a explicit signal is needed to perform both analytical processing and visualization rendering. The operations for partitioning, analytical processing, and visualization are parallelized via GPU computing and can be adjusted or changed during progressive processing. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">System Framework</head><p>Based on our progressive visualization model, P5 extends P4's framework to facilitate progressive parallel processing. <ref type="figure" target="#fig_1">Fig. 2</ref> shows the system framework of P5. P5 extends the declarative grammar of P4 for specifying data transformations and visualizations, and it uses P4's GPU code generator to create and update GPU shader programs at runtime for progressive processing. The execution controller in P5 executes all the operations listed in the declarative specification based on the pipeline mode (automatic, manual, or semi-automatic). For data partitioning, P5 provides a set of data loading methods (HTTP, file system, Web Socket, and database connectors) for progressively loading data from external sources. These methods obtain data partitions from the data sources and store them in the GPU memory. At runtime, P5 creates GPU programs to perform all the specified data transformations and visualizations on the GPU. P5 then uses the GPU to merge the new results with the accumulated values. After accumulation is completed, P5's execution controller loads the next data partition for progressive parallel processing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Application Programming Interface</head><p>P5 provides an intuitive API for specifying and controlling the progressive workflow. The syntax and high-level operations of P5's API are shown in the left of <ref type="figure" target="#fig_1">Fig. 2</ref>. Following the convention used in P4's syntax, progressive operations are specified as a pipeline in P5. The input data need to be first specified for obtaining data partitions by progressively loading from a data source. The batch operation is used for specifying statistical computations and data transformations to process each data partition, and the results of the batch operation are automatically accumulated to generate the intermediate results. The progress operation is used for specifying data transformations and visualizations to analyze the intermediate results during progressive processing. User interactions to the visualizations can also be specified for selecting, linking, and correlating results in different visualization views. The specified pipeline can be executed in automatic, semi-automatic, or manual mode. At each iteration, the progress operations can be changed to visualize and analyze different aspects in the intermediate results.</p><p>However, the pipeline needs to be restarted if any changes were made to the batch operations. This is because P5 does not keep the previous data items in memory, and thus it needs to redo all the computations from the beginning for making sure the accumulated results are correct. <ref type="figure" target="#fig_2">Fig. 3</ref> shows an example of a P5 pipeline for progressive analysis of a dataset that contains information about newborn babies and their parents. This pipeline progressively loads data partitions from a local file. The batch size is for controlling the size of data partitions in each progressive loading. When the input data is from a database or server, a number of data rows or items can be specified for progressive loading instead of the batch size. In the batch operation, data filtering and aggregation are performed on the data partitions to obtain the counts of newborn babies for each combination of the ages of the parents. The results are then accumulated for visualizing as a 2D heatmap based on the progress operation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Signals and Controls</head><p>To control the progressive processing workflow, P5's API provides signals and control operations for managing the states and execution of the pipelines. A P5 pipeline can be started to process and visualize data by calling the execute function, for which the execution mode (automatic, semi-automatic, or manual) can be specified. A new batch size or time bounds for progressive processing and visualization can be provided for controlling the frequency of the updates. With automatic mode, the execute function starts to progressively perform the specified operations until all data are processed. Pipelines with automatic mode can be controlled by the pause and resume functions. A next function is provided for updating the visualization views for semi-automatic and updating both processing results and visualization views for manual mode. In addition, event signals, onEach and onComplete, are triggered at end of the each progression cycle and when all the data partitions are processed, respectively. Event handler functions can be defined to perform custom operations or other application specific tasks based on these event signals. For the onEach event, the number of processed data records and the status of progressive processing are passed to the event handler.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Data Transformation</head><p>Common data transformations supported in P4, such as deriving new values, filtering, binning, and aggregating, can be specified in P5's pipeline for both the batch and progress operations. Since the progressive process needs to be restarted if any changes were made to the batch operations, we have extended P4's declarative grammar for aggregation to provide more flexibility and better support for progressive data analysis. <ref type="figure" target="#fig_3">Fig. 4</ref> shows P5's extended grammar for specifying binning and aggregation operations. Using P4's declarative grammar, users need to explicitly specify which data attributes and what metrics (e.g., count, sum, or mean) to be collected for the aggregation operation. With P5's extended syntax, the include and exclude clauses can be used to select or skip any data attributes, and the calculate clause can be used to calculate all the metrics using the selected attributes. This can avoid restarts of the progressive process caused by changes to the aggregation specification for the batch operation, because users can select all the attributes and metrics of interest. The process of progressive data analysis only needs to be restarted when users significantly changed their ways to analyze the data by using a different set of attributes for filtering and aggregation. The latency overhead to the parallel aggregation due to supporting this extension is small, because calculating additional metrics via GPU computing is trivial.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Visualization</head><p>P5's API adopts and extends P4's declarative visualization grammar for supporting progressive data visualization. Data processing results can be easily mapped to visual encoding channels, such as color, opacity, width, height, and position, for generating various visualizations. As not all analytic methods can be used for progressive data analysis <ref type="bibr" target="#b40">[40]</ref>, not all visualization types are suitable for progressive or incremental visualization. Therefore, P5 only uses a subset of the supported visualizations in P4. <ref type="figure" target="#fig_4">Fig. 5</ref> lists all the visualizations supported in P5 that can be used for plotting numeric, categorical, temporal, and geographical data. In addition, P5 extends P4's visualization grammar for specifying multiple visualizations as faceted views. <ref type="figure" target="#fig_5">Fig. 6</ref> shows an example of faceted views as rows for visualizing the aggregation results of a multivariate time-series dataset. In the facet specifications, variables can be defined for generating rows or columns of visualizations based on the layout parameter. The faceted views can be sorted based on calculating different measures for the visualized items, such as average values and variances. In this case, three values are defined for the metrics variable for plotting three area charts ordered by their variances. During progressive processing, the sort orders are updated at each iteration to inform the most important view.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.7">Interaction</head><p>Interactive visualizations and multiple coordinated views are useful for visual analysis of multidimensional data. Users can gain insights by making a selection in one view to filter data and show correlations in the other views. However, data filtering cannot be used directly with progressive processing because individual data items are discarded after the statistical computations are completed. To support interactive visualization for progressive processing, P5 automatically generates data cubes based on the visualized data dimensions for effective data filtering. P5's API supports specification of user interactions for linking visualizations and highlighting selections. <ref type="figure">Fig. 7</ref> shows an example for specifying a brushing-and-linking interaction for selecting a range in the area chart to highlight the corresponding data in the two bar charts. Because the visualizations are linked at the data level, selection in one view is associated with the visualized data in all the views. In the interaction specification, users can just specify the changes in visual channels for updating the targeted views (view1 and view2) based on the event (brush) from the source view (view3). During progressive processing, P5 automatically generates the required data cubes based on the user specifications for interactive visualization. The generation of the data cubes is accelerated by GPU computing. To reduce the memory footprint, P5 creates small data cubes for only the data dimensions associated with the specified interaction, instead of creating a large data cube with all the visualized dimensions. For the example shown in <ref type="figure">Fig. 7</ref>, two 2D data cubes, instead of a 3D data cube, are created for the interaction that updates the two bar charts based on the selection on the are chart. This reduces the size of the data cube from x 3 to 2x 2 , with x representing the resolutions of the data dimensions. As the number of data dimensions associated with the interaction increases, this technique can help saving more memory space.</p><p>By default, P5's execution controller pauses the batch operations during user interactions. Because both the batch operations and the processing of data cubes run on the GPU, concurrent execution results in high latency for interactive visualization. To run batch operations and support interactions at the same time, P5 can be configured to extract the data cubes from GPU memory to system memory and uses the CPU for processing the data cubes. However, this increases the time for batch operations in each progression due to the overhead of data transfers. To allow faster processing of the data cubes on the CPU, we convert the data cubes from a dense format to a sparse format when extracting them from the GPU memory. This reduces both the memory footprint and the time needed for processing. To support interaction with higher resolutions, summed-area tables <ref type="bibr" target="#b14">[14]</ref> can also be computed from the data cubes to ensure interactive speeds. In a summed-area table, each value at each location is the inclusive sum of all the values in the data cube up to that location, as shown in <ref type="figure">Fig. 7 (c) and (d)</ref>. The summed-area table can then be used to quickly return the values for rectangular selections by subtracting the beginning indices from ending indices, reducing the computation complexity from O(x 2 ) to O(x) in this example. This method can be used for supporting interactions with <ref type="figure">Fig. 7</ref>. Interaction specification (a) for connecting the visualization views (b) based on the selection of the user. P5 automatically generates the data cubes (c) for supporting interactive visualization during progressive processing. Summed-Area <ref type="table">Table (</ref>d) can also be computed from the data cubes to support interactive performance for higher resolutions. more visualized data dimensions as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.8">Outputs and Exports</head><p>To allow P5 to be used with other visualization libraries and toolkits, our API supports exporting the immediate results of progressive processing. P5 can output the results in JSON and TypedArray formats, as it supports these two formats for data inputs. In addition, P5's API allows callback functions to be defined with the interaction specification for exporting the results on demand. As shown in <ref type="figure">Fig. 8</ref>, an interaction can be specified with a callback function that exports the results of the progressive aggregation. For interactions that are not linked to other views, we can define the brush within the visualization, and we can just define one interaction for the faceted views since the selections on their x-axes are the same. In the callback function, the result exported from the pipeline is provided as the input. In this example, P5 exports the progressive aggregation result according to the selection on the timeline charts. The result is then used as the input for D3 to generate the customized circular visualization on the right panel. This allows developers and programs to use P5 with other visualization libraries and web technologies for building custom visualization systems. In addition, multiple outputs can be computed and tagged in the batch operation for creating different progressive visualization views. <ref type="figure" target="#fig_6">Fig. 9</ref> shows an example for generating multiple outputs in the batch operation for creating different views with progressive visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.9">Implementation</head><p>As a web-based toolkit that leverages GPU computing, the implementation of P5 is based on JavaScript and WebGL 1.0. P5 leverages P4's capabilities for performing data transformation and visualization operations on the GPU, as well as for managing data in the GPU memory, including progressively loading data chunks and storing the accumulated results. By storing data in WebGL floating-point textures, P5 can support 24-bit precision with values ranging from 2 −127 to 2 127 . Categorical attributes are managed as integers for processing efficiently with GPU computing. For progressive processing and visualization, we implement a new WebGL shader program for P5 to efficiently accumulate the data processing results in each progression. For partitioning and loading data, P5 provides various methods for progressively retrieving data via various protocols, including FileAPI, HTTP, WebSocket, and MySQL database. For the remote methods that require a web server, P5 provides server-side modules written in NodeJS for programmers to use in their server-side programs, which can be used with the progressive pipelines created by P5 in web applications. Alternatively, programmers can use P5's protocol for progressive data loading in other server programs that are not based on NodeJS, such as Python and C++. <ref type="figure">Fig. 8</ref>. A progressive analytic application implemented by P5 for analyzing large multivariate time-series data using faceted views and interactive visualizations. P5 allows custom callback functions to be defined in the user interaction for exporting the results of progressive processing to create customized visualizations, such as the circular chart on the right.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">EXAMPLE APPLICATIONS</head><p>We have built several progressive visualization applications using P5 over the course of its development. Here we present three of these applications to demonstrate P5's applicability and usefulness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Multivariate Time-Series Analysis</head><p>Parallel discrete-event simulation (PDES) is a cost-effective and useful tool for modeling and researching in many areas, ranging from studies of complex physical phenomena to the designs of supercomputers. Therefore, it's important to ensure the efficiency of PDES to minimize time and energy. Optimizing the performance of PDES typically requires post-hoc analysis on large multivariate time-series data collected from simulations. Due to the large size of data generated by PDES, interactive analysis of the whole dataset is difficult. By collaborating with PDES researchers, we have designed and built a progressive visual analytics system using P5 for analyzing the PDES data collected from the the ROSS simulator <ref type="bibr" target="#b10">[10]</ref>. ROSS uses Message Passing Interface (MPI) for distributed computing, in which each processor entity (PE) is assigned to a MPI job. Each PE contains a fixed number of kernel processes (KP) with each KP managing a group of logical processors for simulating different items in a simulation model. For each entity, 16 performance metrics are collected over the simulation time.</p><p>The user interface of our system and the visualizations with their declarative specification are shown in <ref type="figure">Fig. 8</ref>. The line charts on the left panel shows the top 3 of the 16 metrics ordered by the overall variances over time. As ROSS uses the last global virtual time (LastGVT) to keep track of the time in the simulations, we use LastGVT as the x-axis for all the line charts. By modifying the $group parameter in the aggregation specification, the granularity of the line chart can be changed to show each line as either a PE, KP, or LP based on the selected level of detail. In addition to showing the temporal behaviors of the top three metrics, our system shows the communication patterns between PEs using hierarchical circular visualization methods <ref type="bibr" target="#b25">[25]</ref> in the right panel of our user interface. While all the data processing and visualization of the line charts are implemented using P5, the hierarchical circular visualization is implemented using D3. Our system leverages P5 to progressively process the large time series data and export the results based on user selections. The specification of the user interaction is highlighted in green in <ref type="figure">Fig. 8</ref>. According to the operations in the callback function defined in the interaction specifications, once the user makes a selection of the line charts, the results corresponding to the selected time range are exported from P5 to D3 to create or update the circular visualization in the right panel. In the hierarchical circular visualization, the top three performance metrics with the highest variances over time are stacked on the circular visualizations from the inner to outer layers, which is arranged by the order of the associated PE and KP to show the distributions and correlations of the communication patterns.</p><p>In addition to progressively analyzing PDES data, our system can also receive data streaming from running simulations via WebSocket. This allows PDES developers and users to monitor simulations and detect performance problems, so they can stop problematic simulations and restart the simulation with better configurations to avoid performance bottlenecks. This example application shows the usefulness of P5's declarative grammar for specifying aggregation and creating visualizations in faceted views. It also shows that the user-defined interactions with callback functions are helpful for building advanced visualization systems for progressive analysis of large time-series data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Progressive and Interactive Visual Analysis</head><p>Coordinated and linked views of histograms and summaries are useful for exploring multidimensional data. To demonstrate P5's capability for building this type of application, we use P5 to reproduce the interactive visualizations used in the imMens system by Liu et al. <ref type="bibr" target="#b28">[28]</ref>. The imMens system provides linking-and-brushing interactions for visual querying of big data in binned scatter plots and histograms. To generate scalable visualizations and to support user interactions, imMens uses database systems to generate precomputed data tiles based on the visualized data dimensions in all of the views. However, the disadvantage of this approach is that the visualizations cannot be changed to analyze other data dimensions, because it relies on data preprocessing.</p><p>With P5, the capabilities of progressive and GPU-based data processing can be leveraged to incrementally perform parallel aggregation and visualize different data dimensions without relying on database systems or data preprocessing. To compare with imMens, we use the same dataset (Brightkite user check-in <ref type="bibr" target="#b11">[11]</ref>) used in imMens, and we generate the same set of views with the same visual resolutions, which are a binned geographic map and three bar charts. <ref type="figure" target="#fig_6">Fig. 9</ref> shows the declarative specifications and the visualization views. The input data source, data schema, and view dimensions are specified in (a). The batch operations are specified in (b) that progressively derives new attributes (months, days, and hours) and performs aggregation and binning based on these new attributes. The results of progressive processing are visualized according to the specifications in (c), which generate the views in (d). In addition, the interaction is specified in (e): highlighting the corresponding data selected by brushing the map in the three bar charts. All the data transformation and visualization operations are accelerated by the GPU and are progressively updated.</p><p>As this example application shows, P5 can be used to implement an advanced visualization system to interactively explore big data with approximately 100 lines of code of declarative grammar. Compared to imMens, which is hard-coded in WebGL, P5 provides flexibility to explore big data through declarative specifications and automatic generation of GPU programs and data structures. With the progressive analysis provided, analysts can easily adjust or change the specifications of the data transformations and visualizations after inspecting the initial results. For example, the analysts can change the visualization specification to show the number of check-ins based on the day of the week for exploring the weekly check-in patterns of the Brightkite users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Cold-Start Data Exploration</head><p>In parallel to the development of P5, we have created P5 Play, a web application to progressively analyze and explore big data using P5's declarative grammar. The user interface of P5 Play is shown in <ref type="figure" target="#fig_0">Fig. 10</ref>, which is composed of a data panel (a), a control panel (b), an editor (c), and a visualization dashboard (d). P5 Play leverages the HTML5 File API <ref type="bibr" target="#b2">[3]</ref> for loading data from files in local hard disks, which does not require data uploads via the Internet. Currently, P5 Play can support JSON and CSV file formats. The data panel allows users to select a data file and lists all the data attributes in the selected file. The editor is used to provide the declarative specifications to progressively process the data and display the visualizations of the incrementally refining results in the dashboard. The control panel manages the progressive workflow, where users can reset, pause, or proceed to the next progression. One of the three modes for configuring P5 (automatic, manual, or semiautomatic) can be selected. The two progress bars show the percentage of the data processed (blue) and visualized (green). This control panel is implemented using P5's signal and control functions as described in Sect. 3.4. Once the data file is loaded and the declarative specifications are inputted, users can use the control panel to start exploring the data. P5 Play allows a cold-start exploration of big data without the need of data preprocessing or reformatting the data into a database system. By providing progressive data analysis, users do not need to wait until data processing and rendering are completed for the entire dataset. Instead, users can analyze the intermediate results, adjust or change the visualization specifications, and restart the progressive analysis process with new analytical methods, if needed. With exploratory visual analysis, this allow users to create and verify hypotheses at a much faster rate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">PERFORMANCE BENCHMARKS</head><p>Here we provide the performance benchmarks to evaluate P5. All our benchmarks were performed in Google Chrome 73.0.3683.75 (64-bit) on a desktop computer with a quad-core 3.6 GHz Intel i7-4790 CPU and a Nvidia GTX Titan graphic card connected by PCI Express. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Progressive Analysis Performance</head><p>To measure P5's performance for progressive data processing and visualization, we generate a dataset with 100 millions of data records with random samples drawn from normal distributions. Each data record contains 3 integer attributes, 4 float attributes, and 4 categorical attributes. For loading the data, we use a server-client setting, where the generated dataset is stored in the server and the client progressively loads the data chunks from the server via HTTP request. In this benchmark, we use the data transformation and visualization operations in <ref type="figure" target="#fig_2">Fig. 3</ref>. To show P5's advantage over existing visualization libraries for progressive visualization, we compare P5 to D3 <ref type="bibr" target="#b7">[7]</ref> and Stardust <ref type="bibr" target="#b34">[34]</ref>. While D3 provides a flexible API with declarative grammar for rendering visualizations on SVG, Stardust leverages WebGL for rendering with a similar API to D3. To implement progressive visualization using D3 and Stardust for our benchmark tests, JavaScript's Array functions are used to implement the data transformation operations, and the APIs of D3 and Stardust are used to visualize and upate the results. Since P5 uses TypedArray as the default data type for the input while D3 and Stardust cannot work with TypedArray, the benchmark tests for D3 and Stardust use JSON as the data type of the input, and both JSON and TypedArray are used for P5. <ref type="figure" target="#fig_0">Fig. 11</ref> shows the benchmark results of D3, Stardust, and P5 for progressive processing and visualization of 100 million data records.</p><p>As shown in the results, D3 and Stardust have similar completion times. Since Stardust only utilizes the GPU for rendering but not data processing, it performs data transformations on the CPU and transfers the results to the GPU for visualization rendering. Although Stardust is faster than D3 for rendering, the overhead due to the data transfers between the GPU and CPU makes Stardust have a similar completion time comparing to D3. With P5, data transfers between the GPU and CPU are also required, but both data transformations and visualization renderings are performed on the GPU, which drastically improve the overall performance. Comparing to D3 and Stardust, P5 with JSON is about 3.5 X faster, and P5 with TypedArray is 10 X faster. Using TypedArray as the data type can make data transfers between GPU and CPU more efficient, allowing P5 to achieve better performance comparing to JSON. Besides performance, both D3 and Stardust require significant programming efforts to implement the operations for data partitioning, progressive data loading, and visualization updates. In contrast, P5's API allows application programmers to easily specify these operations, providing both high productivity and performance.</p><p>In addition to the overall completion time, we run a performance test to measure the time needed by each progression with different batch sizes (100K, 500K, 1M, and 2M). Each test runs for 10 progressions for each batch size and measures the average time needed to complete all the operations. The results are shown in <ref type="figure" target="#fig_0">Fig. 12</ref>, where we can see that P5 can provide a better response time for progressive processing. The results also indicate that P5 can not only provide a better performance for progressive data analysis but also can better support streaming data visualizations with a larger data and at a faster rate. As we can see from this benchmark test, P5 can support a streaming rate of one million data items per second, with each data item containing 10 data dimensions. <ref type="figure" target="#fig_0">Fig. 12</ref>. Average time (ms) for D3, Stardust, and P5 to progressively process and visualize data with different batch sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Interactive Performance</head><p>For evaluating the interactive performance, we compare the interaction latency of P5 with imMens <ref type="bibr" target="#b28">[28]</ref>. As shown in Sect. 4.2, to explore the Brightkite dataset, P5 can be used to implement the same visualization views with user interactions as imMens. Here we compare the brushing-and-linking interaction for P5 and imMens. With the brushing-and-linking interaction, the user makes a rectangular selection on the geographic map, and then the corresponding statistical values are highlighted in the three bar charts. We add instrumentation in P5 to measure the interactive performance for each user interaction, and we use the Frame Rate Meter in Google Chrome to obtain the average frame rate for imMens. For both P5 and imMens, we perform 20 brush selections with 20 random rectangular areas and obtain the average frame rate. For P5, we measure the performance for the techniques using dense and sparse data cubes as described in Sect. 3.7. The benchmark results are shown in <ref type="figure" target="#fig_0">Fig. 13</ref>. As the results show, imMens achieved 38 frames per second while P5 achieved 9 and 36 frames per second with dense and sparse data cubes, respectively. It is expected that imMens has a better performance since it uses precomputed data cubes with the processing function hard coded in WebGL. For P5 with dense data cubes, because we use different WebGL textures for storing the progressive processing results and the data cubes for supporting the interactions, progressive processing needs to pause. This causes overheads to the system response time. When using sparse indexing, P5 computes the sparse data cubes from the dense data cubes and uses CPU for processing. This avoids pausing the progressive processing due to user interactions. As shown in the benchmark results, using sparse data cubes allows P5 to achieve better performance and is close to imMens' performance. As noted, the dataset used for this benchmark test has many zero values on the binned geographic map. This is the primary reason why P5 with sparse data cubes has a better interactive performance. For data that the sparse data cubes cannot take advantage of, we expect the performance difference between the sparse and dense data cubes to be small. In our current implementation of P5, Summed-Area Table cannot be used to support more two data dimensions with 2 or more views. Therefore, we did not test the interactive performance of P5 with the method based on Summed-Area <ref type="table">Table.</ref> We expect it to have better performance than sparse data cubes, and we plan to improve our implementation in the future. Nonetheless, P5 with dense data cubes can achieve 9 frames per second, with the interactive latency being around 110 ms. According to the studies on the effect of interaction latency on visual analysis <ref type="bibr" target="#b8">[8,</ref><ref type="bibr" target="#b27">27]</ref>, this level of interactive latency is still considered to be effective for supporting interactive analysis with visualizations. Moreover, the latency is not affected by larger data sizes since it is only affected by higher resolution, specified for user interactions. In addition, P5 provides more flexibility with declarative grammar and progressive visualization. Users can change the specifications to visualize and interactively explore different data dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DISCUSSION AND FUTURE WORK</head><p>The current implementation of P5 is an initial effort to develop a declarative visualization toolkit that is easy to use and high performance for building progressive visual analytics systems. There remain many features that can be added to better support progressive data analysis and visualization. Here we discuss several possible extensions for enhancing P5 as well as the limitations that currently exist.</p><p>The statistical analysis and visualization methods provided by P5 can already support a large set of common visual analysis tasks for data exploration applications. However, exploratory data analysis often requires clustering and dimensionality reduction methods, such as K-Means and PCA, for exploring high-dimensional datasets. Many of these machine learning methods have high computational complexity, which causes long completion time for large datasets. Enabling user involvement in such methods with intermediate feedback and control can better facilitate interactive data exploration <ref type="bibr" target="#b30">[30]</ref>. Recently, researchers from different domains, including visualization, data management, and machine learning, have begun to collaborate on addressing the challenges in progressive visual analytics <ref type="bibr" target="#b15">[15]</ref>. It is expected that intermediate feedback and user involvement will be supported in more data analytics and machine learning methods, which can be used with progressive visualization. As P5 only supports common data transformations and statistical analysis methods, we plan to make P5 to be easily interfaced with other data analytics and machine learning libraries. When the results of incremental analytics methods can be fitted into GPU memory, P5 can retrieve the intermediate results from other libraries and incrementally render the visualizations. For example, the optimized t-SNE method <ref type="bibr" target="#b32">[32]</ref> in the TensorFlow.js <ref type="bibr" target="#b39">[39]</ref> library can be used for exploring high-dimensional data in 2D embeddings, and the intermediate results can be transferred to P5 for progressive visualization, which allows users to monitor the progress and adjust the parameters for steering the exploration process. When the size of the dataset or analysis results is large than the GPU memory capacity, P5 can still support data analytics methods that incrementally append results to visualizations. The visualizations of the intermediate results from these methods can be stored as images, and image scaling can be used to adjust the extents and size of the visualization according to the updates in the domains (e.g., maximum and minimum values) of the results. This method allows common visualizations with overlapping marks, such as a scatterplot, to be used for progressive visualization. However, this method cannot be used with some visualization types. For example, parallel coordinates plots are difficult to use for progressive visualization, because the change of maximum and minimum values on each of the parallel axes makes it difficult to scale the image to properly represent both the new and previously processed data. Unless the extents and domains of all the data are known in advance, such visualization types are difficult to use with progressive data analysis. In addition, we plan to make P5 work more efficiently with web-based data analytics libraries that use WebGL for GPU computing, such as TensorFlow.js. These libraries typically store their data and analytic results in WebGL textures. We can allow plugins in P5 for specifying the procedures to retrieve data from WebGL textures to P5's shader programs for visualization rendering. This can avoid the performance bottleneck due to the data transfer between the CPU and GPU when passing the analysis results from a WebGL-based data analytics library to P5.</p><p>While progressive visualization allows users to make early decisions and steer the analysis process, showing the uncertainty in the intermediate results is important. P5 currently lacks support for assessing and visualizing uncertainty. P5 only provides several metrics, such as sample means and variances, to programmers, and they need to implement their own mechanisms for showing uncertainty information in their applications. In addition, the current version of P5 only supports sequential sampling and partitioning for exploratory data analysis, which users typically do not know the structures and characteristics of the dataset for choosing a sampling method. For structured data files and database systems, random sampling method can be used, and the programmers can implement other sampling methods based on the needs of their applications. In our future work, we plan to provide more support in assessing uncertainty, such as calculating confidence intervals, as well as developing methods to visualize the uncertainty for better facilitating progressive data analysis.</p><p>Besides assessing uncertainty, P5 also has limitations on specifying interactions on multiple visualizations. P5's API can be used to specify interactions that link one view to many views (e.g., the example applications in Sect. 4.2). However, interactions that link many views to many views (e.g., linked scatter plot matrices) cannot be defined via P5's API in one specification. Specifications of such interactions require multiple expressions. In addition, the generation of data cubes for supporting user interactions could create large overhead to progressive processing. Because P5 stores the results of progressive processing and the data cubes in different textures for processing with two different We-bGL shader programs, the time needed for each progression is at least doubled. For the two WebGL shader programs, a large subset of the computations might be the same since the data cubes include all the visualized data dimensions. Merging these operations properly can avoid duplicated computations, which can remove the overhead to progressive processing due to the computations for generating the data cubes. We plan to address these issues by extending our API and improving our framework for progressive parallel processing in future work. In addition, we plan to extend P5 to include high-level interactions for programmatic selection of features (e.g, hot spots and outliers) from the visualizations of aggregation, clustering, or dimensionality reduction results. Most existing declarative visualization toolkits <ref type="bibr" target="#b7">[7,</ref><ref type="bibr" target="#b35">35,</ref><ref type="bibr" target="#b36">36]</ref> only provide low-level interaction specification for defining how to make selections by the users. This approach cannot effectively support common visual analysis tasks that make use of machine learning algorithms. For example, selecting all the major clusters to compare their statistics in faceted visualization views requires the users to manually make multiple selections. To address this, high-level interaction specification for describing what to select, instead of how to select, is needed. As we are adding several progressive clustering and dimensionality reduction methods to P5, we also plan to provide declarative grammar with highlevel interaction specification for programmatic selection of insights from the results of these data analytics methods. P5 with programmatic selection (P6) will be an even more attractive and powerful toolkit for creating data analysis and visualization solutions.</p><p>P5 should be easily adopted by application developers and data analysts given its simplicity and performance advantage. Public deployment and collecting user feedback can help us improve and extend P5. We have set up a work plan for pursuing these.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>Visualization has become an essential tool in the fast growing areas of data driven discovery, problem solving, storytelling, and learning. The accessibility of existing information visualization software tools helps promote the widespread use of visualization. In many real-world applications, however, the dynamic nature of the data and complex analysis needs demand high performance, progressive processing capabilities that are not generally offered by current toolkits. P5 has been created to meet this demand. We leverage declarative grammars to make progressive visualization and GPU computing more accessible and flexible, allowing more people to use them for building interactive visualization systems. The current implementation of P5, as demonstrated, and the planned extensions promise to support a wide-range of emerging big data applications as well as further increase the impact of visualization as an enabling technology. The source code, documentations, and examples of P5 can be found at https://github.com/jpkli/pv.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1</head><label>1</label><figDesc>Fig. 1. Conventional pipeline (a) versus progressive pipeline (b) for data visualization. The convention pipeline requires users to wait for analysis and visualization operations to be completed on the whole dataset before interaction, while the progressive pipeline processes data in chunks and provides incrementally refining visualization of results at interactive speed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>System architecture and components of P5 for enabling progressive parallel processing.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Declarative specifications in P5 for progressively processing the baby birth dataset, in which data filtering and aggregation are performed to visualize the results in a 2D heatmap.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>P5's extended syntax of data aggregation for allowing multiple attributes and measures to be included in the results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>P5's visualizations for supporting progressive data analysis and visualization with different types of data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Declarative specification for visualizing multivariate time-series data in faceted views showing the top 3 user-defined variables ordered by their variances.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>We use P5 to reproduce the dashboard used by imMens for visual exploration of the Brightkite dataset. The specifications of the data and view (a), batch operations (b), visualization of the results (c) in P5's declarative grammar are used to generate a set of coordinated and linked views (d) with the brushing-and-linking interaction specified in (e).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>P5 Play allows users to progressively analyze multidimensional data using declarative visualization grammars. P5 Play's user interface consists of a side panel (a) for selecting data files and listing the data attributes, a control panel (b) for starting and pausing progressive operations, a text editor (c) for editing declarative specifications, and a dashboard (d) for displaying the output visualizations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 11 .</head><label>11</label><figDesc>Completion time for D3, Stardust, and P5 to progressively process and visualize a dataset with 100 million data records.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 13 .</head><label>13</label><figDesc>Average frame rate for interactive visual querying of the Brightkite dataset with P5 and imMens.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This research is supported in part by the National Science Foundation via grant IIS-1528203 and the Department of Energy via grant DE-SC0014917.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="https://www.tableau.com/" />
		<title level="m">Tableau Software. Business Intelligence and Analytics</title>
		<imprint>
			<biblScope unit="page" from="2019" to="2025" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tibco Spotfire</surname></persName>
		</author>
		<ptr target="https://www.tibco.com/products/tibco-spotfire" />
		<title level="m">Data Visualization and Analytics Software</title>
		<imprint>
			<biblScope unit="page" from="2019" to="2025" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W3c</forename><surname>File</surname></persName>
		</author>
		<ptr target="https://www.w3.org/TR/file-upload/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Accessed</forename></persName>
		</author>
		<imprint>
			<biblScope unit="page" from="2019" to="2025" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Blinkdb: queries with bounded errors and bounded response times on very large data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mozafari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Panda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Milner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th ACM European Conference on Computer Systems</title>
		<meeting>the 8th ACM European Conference on Computer Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="29" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Sequential pattern mining using a bitmap representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ayres</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Flannick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gehrke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Yiu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting>the eighth ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="429" to="435" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Steering the craft: Ui elements and visualizations for supporting progressive visual analytics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Badam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Elmqvist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-D</forename><surname>Fekete</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2017" />
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="491" to="502" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">D 3 : Data-Driven Documents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ogievetsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2301" to="2309" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Readings in information visualization: using vision to think</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Card</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">The psychology of humancomputer interaction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Newell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">P</forename><surname>Moran</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Ross: A high-performance, lowmemory, modular time warp system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Carothers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pearce</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Parallel and Distributed Computing</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1648" to="1669" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Friendship and mobility: user movement in location-based social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th ACM SIGKDD international conference on Knowledge discovery and data mining</title>
		<meeting>the 17th ACM SIGKDD international conference on Knowledge discovery and data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1082" to="1090" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A progressive refinement approach to fast radiosity image generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH computer graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="75" to="84" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Illuminating the path: The research and development agenda for visual analytics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Thomas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<pubPlace>Pacific Northwest National Laboratory (PNNL), Richland, WA (US</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Summed-area tables for texture mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">C</forename><surname>Crow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SIGGRAPH computer graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="207" to="212" />
			<date type="published" when="1984" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Progressive Data Analysis and Visualization (Dagstuhl Seminar 18411)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-D</forename><surname>Fekete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nandi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sedlmair</surname></persName>
		</author>
		<idno type="DOI">10.4230/DagRep.8.10.1</idno>
	</analytic>
	<monogr>
		<title level="j">Dagstuhl Reports</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1" to="40" />
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Progressive analytics: A computation paradigm for exploratory data analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-D</forename><surname>Fekete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Primet</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1607.05162</idno>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Trust me, i&apos;m partially right: incremental visualization lets analysts explore large datasets faster</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Popov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Drucker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems</meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Interactive progressive visualization with space-time error control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sadlo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2397" to="2406" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Data cube: A relational aggregation operator generalizing group-by, cross-tab, and sub-totals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chaudhuri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bosworth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Layman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Reichart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Venkatrao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Pellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pirahesh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data mining and knowledge discovery</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="53" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Declarative language design for interactive visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1149" to="1156" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Online aggregation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Haas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">J</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Acm Sigmod Record</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1997" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="171" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Hierarchical splatting: A progressive refinement algorithm for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="285" to="288" />
			<date type="published" when="1991" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Echarts: a declarative framework for rapid construction of web-based visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visual Informatics</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="136" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">P4: Portable parallel processing pipelines for interactive information visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<ptr target="https://ieeexplore.ieee.org/document/8468065" />
	</analytic>
	<monogr>
		<title level="m">IEEE transactions on visualization and computer graphics</title>
		<imprint/>
	</monogr>
	<note>accepted in 2018. (preprint</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Visual analytics techniques for exploring the design space of large-scale highradix networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mubarak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Ross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Carothers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Cluster Computing</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="193" to="203" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Nanocubes for real-time exploration of spatiotemporal datasets. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Klosowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Scheidegger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2456" to="2465" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The effects of interactive latency on exploratory visual analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2122" to="2131" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">immens: Real-time visual querying of big data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2013" />
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="421" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Towards utilizing gpus in information visualization: A model and implementation of image-space operations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mcdonnel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Elmqvist</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1105" to="1112" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Opening the black box: Strategies for increased user involvement in existing algorithm implementations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mühlbacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Piringer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gratzl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sedlmair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Streit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1643" to="1652" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Deepeyes: Progressive visual analytics for designing deep neural networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Pezzotti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Höllt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Gemert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Lelieveldt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Eisemann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vilanova</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="98" to="108" />
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Linear tsne optimization for the web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Pezzotti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mordvintsev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hollt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Lelieveldt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Eisemann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vilanova</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1805.10817</idno>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A multi-threading architecture to support interactive visual exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Piringer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Tominski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Muigg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Berger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1113" to="1120" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Stardust: Accessible and transparent gpu support for information visualization rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Höllerer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2017" />
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="179" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Vega-lite: A grammar of interactive graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="341" to="350" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Reactive vega: A streaming dataflow architecture for declarative interactive visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Russell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hoffswell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="659" to="668" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An enhanced visualization process model for incremental visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-J</forename><surname>Schulz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Angelini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Santucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Schumann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1830" to="1842" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Response time and display rate in human performance with computers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys (CSUR)</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="265" to="285" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Smilkov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Thorat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Assogba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kreeger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nielsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Soergel</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1901.05350</idno>
		<title level="m">Machine learning for the web and beyond</title>
		<imprint>
			<date type="published" when="2019" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Progressive visual analytics: Userdriven visual exploration of in-progress analytics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Stolper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Perer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gotz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1653" to="1662" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Multiscale visualization using data cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="176" to="187" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Designing progressive and interactive analytics processes for high-dimensional data analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Turkay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kaya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Balcisoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="131" to="140" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">A ray tracing algorithm for progressive radiosity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Elmquist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Haines</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="315" to="324" />
			<date type="published" when="1989" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<title level="m" type="main">ggplot2: elegant graphics for data analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wickham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">The Grammar of Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Springer-Verlag, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">How progressive visualizations affect exploratory analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zgraggen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Galakatos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Crotty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-D</forename><surname>Fekete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kraska</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1977" to="1987" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
