<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Supercubes: A High-Level Primitive for Diamond Hierarchies</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Student Member, IEEE</roleName><forename type="first">Kenneth</forename><surname>Weiss</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Leila</forename><forename type="middle">De</forename><surname>Floriani</surname></persName>
						</author>
						<title level="a" type="main">Supercubes: A High-Level Primitive for Diamond Hierarchies</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:54+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Longest edge bisection</term>
					<term>diamonds</term>
					<term>hierarchy of diamonds</term>
					<term>multiresolution models</term>
					<term>selective refinement</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Volumetric datasets are often modeled using a multiresolution approach based on a nested decomposition of the domain into a polyhedral mesh. Nested tetrahedral meshes generated through the longest edge bisection rule are commonly used to decompose regular volumetric datasets since they produce highly adaptive crack-free representations. Efficient representations for such models have been achieved by clustering the set of tetrahedra sharing a common longest edge into a structure called a diamond. The alignment and orientation of the longest edge can be used to implicitly determine the geometry of a diamond and its relations to the other diamonds within the hierarchy. We introduce the supercube as a high-level primitive within such meshes that encompasses all unique types of diamonds. A supercube is a coherent set of edges corresponding to three consecutive levels of subdivision. Diamonds are uniquely characterized by the longest edge of the tetrahedra forming them and are clustered in supercubes through the association of the longest edge of a diamond with a unique edge in a supercube. Supercubes are thus a compact and highly efficient means of associating information with a subset of the vertices, edges and tetrahedra of the meshes generated through longest edge bisection. We demonstrate the effectiveness of the supercube representation when encoding multiresolution diamond hierarchies built on a subset of the points of a regular grid. We also show how supercubes can be used to efficiently extract meshes from diamond hierarchies and to reduce the storage requirements of such variable-resolution meshes.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Discrete volumetric datasets are often modeled as polyhedral meshes where scalar values are associated with the vertices of the mesh. Due to the increasing sizes of volumetric datasets, a multiresolution model is often used, thus creating a hierarchical spatial decomposition on the vertices of the mesh. Decompositions based on nested cubes, known as octrees, are popular for modeling 3D scalar fields as they allow one to focus resources on regions of interest within the dataset, while aggregating the less relevant regions into larger blocks. However, an octree partitioning may introduce cracks into the scalar field representation. Additionally, variable-resolution representations extracted from octrees have limited adaptability in that each cubic block is replaced with eight new cubes. Longest edge bisection (LEB) hierarchies were introduced as a multiresolution modeling scheme over regular grids to increase adaptability while enforcing crack-free, or conforming, modifications to the model. However, this adaptability increases the number of modeling primitives at full resolution where each cube is replaced by six tetrahedra. This problem is mitigated by aggregating the set of tetrahedra involved in each modification to the mesh into a modeling primitive called a diamond. The regularity of the decomposition and the structure of the mesh enables implicit encodings for both the hierarchical and geometric relationships among the diamonds in the hierarchy.</p><p>Here, we propose the supercube, a high-level primitive for the edges of an LEB hierarchy. A supercube is a structured set of edges within an LEB hierarchy that captures the intrinsic symmetry of the model. Whereas previous representations contain several congruence classes of tetrahedra or diamonds, each with different geometric alignments, supercubes are all identical (up to scale). Diamonds and supercubes are related by a one-to-one correspondence from the longest edge of a diamond to a supercube edge. Thus, the set of edges in a supercube corresponds to all distinct types of diamonds within the hierarchy.</p><p>â€¢ K. <ref type="bibr">Weiss</ref>  Many operations on LEB hierarchies apply to only a sparse subset of the tetrahedra within the hierarchy. For example, in isosurfacing applications, we are only interested in the subset of tetrahedra that intersect the isosurface. Similarly, large regions of a domain are often oversampled due to the use of a regularly sampled representation. However, implementations of these LEB hierarchies have mostly focused on efficient representations for the entire hierarchy, where the tetrahedra are implicitly indexed. We propose the use of supercubes as containers for data associated with coherent subsets of the elements within an LEB hierarchy. Since this clustering incurs overhead related to the storage of explicit spatial indexes, we consider the number of encoded diamonds with respect to an encoding of the full hierarchy, as well as the number of elements associated with each cluster. We demonstrate the effectiveness of supercubes as a multiresolution model for complete, or sparse volume datasets.</p><p>The remainder of this paper is organized as follows. We review related work and the longest edge bisection model in Sections 2 and 3, respectively. In Section 4, we introduce the supercube primitive, while, in Section 5, we discuss efficient encodings for supercubes. In Section 6, we discuss an application of supercubes to the encoding of multiresolution models of 3D scalar fields, while in Section 7 we discuss an efficient encoding of the mesh extracted though selective refinement. We present experimental results in Section 8. Finally, we draw some concluding remarks in Section 9.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Multiresolution tetrahedral models for 3D scalar fields based on longest edge bisection (LEB) were introduced for domain decomposition in finite element analysis <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b21">22]</ref>, and have been applied in several contexts, including scientific visualization <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b24">25]</ref>, surface reconstruction <ref type="bibr" target="#b17">[18]</ref> and volume segmentation <ref type="bibr" target="#b11">[12]</ref>.</p><p>The containment hierarchy among the tetrahedra in an LEB mesh induces a natural tree representation, in which the nodes are tetrahedra and the two children of a tetrahedron t are the tetrahedra generated by bisecting t. If the tree is encoded using an array, the parents and children of a tetrahedron can be implicitly determined by their array indices. This representation is used in <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b15">16]</ref>.</p><p>LEB meshes can be non-conforming and, thus, can generate isosurfaces with cracks. This problem can be avoided by simultaneously subdividing all tetrahedra sharing that edge. This can be performed through neighbor finding algorithms <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b12">13]</ref> or through a precomputed saturated error which implicitly forces all longest edge neighbors to split <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b5">6]</ref>.</p><p>An alternative approach is to directly encode the cluster of tetrahedra sharing a longest edge <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b27">28]</ref>. Gregorski et al. <ref type="bibr" target="#b7">[8]</ref> denote such a primitive as a diamond, and propose an implicit representation for the spatial and hierarchical relationships of a diamond based on its level, orientation and position. In our implicit diamond representation, the level and orientation can also be derived from the position of the diamond. The diamond paradigm has been generalized to higher dimensions in connection with adaptive mesh generation <ref type="bibr" target="#b18">[19]</ref>. A decomposition of an arbitrary dimensional diamond into a pair of axis-aligned hypercubes is introduced in <ref type="bibr" target="#b27">[28]</ref> to yield an implicit representation for diamond-based LEB hierarchies over regular grids.</p><p>All the above methods exploit the regularity of the data distribution by encoding the multiresolution model as a regular grid where all vertices are present. They are thus only efficient for representing a complete LEB hierarchy of dimensions (2 N + 1) <ref type="bibr" target="#b2">3</ref> . However, many operations on LEB hierarchies pertain to only a subset of the tetrahedra. To the best of our knowledge, methods to encode an incomplete LEB hierarchy have only been proposed in 2D for terrain modeling <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b26">27]</ref>. The former representation <ref type="bibr" target="#b4">[5]</ref> uses variable-length pointers to encode the number of containment hierarchy nodes that are skipped when a node is not refined. The latter representation <ref type="bibr" target="#b26">[27]</ref> uses a similar clustering strategy to the one presented in this paper for encoding an incomplete hierarchy of 2D diamonds at multiple resolutions.</p><p>There have been many proposed optimizations to enable interactive visualization of LEB hierarchies including frame-to-frame coherence <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b7">8]</ref>, parallel rendering <ref type="bibr" target="#b6">[7]</ref>, front-to-back sorting, viewdependent rendering <ref type="bibr" target="#b15">[16]</ref>, tetrahedral stripping <ref type="bibr" target="#b19">[20]</ref>, and chunked updates <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b0">1]</ref>. Since our model is based on the same hierarchies, these optimizations can be easily incorporated into our pipeline.</p><p>Octrees are another popular family of spatial data structures used in visualization <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b23">24]</ref>. The subdivision rule for an octree node n with side length is to replace n by its 8 children, each with side length /2. Since LEB hierarchies extract conforming meshes, they are more closely related to restricted octrees <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b23">24]</ref> where neighboring nodes can differ by at most one level of resolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">LONGEST EDGE BISECTION AND DIAMOND HIERARCHIES</head><p>In this Section, we review hierarchical spatial decompositions of the domain of a 3D scalar field based on the longest edge bisection operation applied to a tetrahedral mesh partitioning the domain.</p><p>A mesh in which all cells are defined by the uniform subdivision of a cell into scaled copies is called a nested mesh. A special class of nested meshes are those generated by bisecting tetrahedra along their longest edge, which we denote as Longest Edge Bisection (LEB) meshes. The bisection rule for a tetrahedron t in such a mesh consists of replacing t with the two tetrahedra obtained by splitting t along the plane defined by the middle point of its longest edge e and the two vertices of t not adjacent to e. When this rule is applied recursively to an initial decomposition of a cubic domain â„¦ into six tetrahedra sharing a diagonal of â„¦, it generates three congruent classes of tetrahedra, each with a single longest edge. We denote the tetrahedra congruent to those sharing a diagonal of the base cube as 0-tetrahedra. Tetrahedra congruent to those obtained by splitting a 0-tetrahedron are denoted as 1-tetrahedra and have a longest edge aligned with a face diagonal of the base cube. Finally, 2-tetrahedra have a longest edge aligned with an edge of the base cube and are congruent to those obtained by splitting a 1-tetrahedron. Tetrahedra obtained by splitting a 2-tetrahedron are congruent to 0-tetrahedra.</p><p>Applying the longest edge bisection rule to tetrahedra does not generate conforming meshes. Thus, we consider a clustering of the tetrahedra that need to be subdivided concurrently. Given an LEB mesh Î£, the set of tetrahedra sharing a common longest edge forms a diamond, which we denote as Î´ . The longest edge of Î´ is called its spine. Since all tetrahedra within a diamond share their spine, they all belong to the same class of tetrahedra. As a consequence, there are three congruence classes of diamonds: those with spines aligned with diagonals of an axis-aligned cube (0-diamonds), with face diagonals of such a cube (1-diamonds) or with edges of such a cube (2-diamonds). An i-diamond, for i âˆˆ {0, 1, 2} is formed by {6, 4, 8} tetrahedra, and con-tains {8, 6, 10} vertices, respectively. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates the three diamond classes and highlights their spines (black edges), parents (hollow gray vertices) and children (red vertices). A diamond Î´ is subdivided by bisecting all of its tetrahedra according to the longest edge bisection rule, thus doubling the number of tetrahedra within Î´ . We note that all changes to the LEB mesh Î£ due to the subdivision of a diamond Î´ occur within the interior of the domain of Î´ and, thus, the vertices, edges and faces on the boundary of Î´ are unaffected by its subdivision. The local effect of such a subdivision is to remove its spine, to add a vertex at the midpoint of its spine, which we denote as the central vertex of the diamond, and to add edges from the central vertex to all other vertices of Î´ .</p><p>Let us consider the collection âˆ† of all the diamonds associated with the longest edges of the tetrahedra T arising from longest edge bisection to a cubic domain â„¦. The containment relation between the tetrahedra in T induces a parent-child dependency relation over the diamonds in âˆ†. A diamond Î´ p is a parent of another diamond Î´ c if and only if some tetrahedra in Î´ c are created by the splitting of at least one tetrahedron in Î´ p . If Î´ p is a parent of Î´ c , then Î´ c is called a child of Î´ p .</p><p>The set âˆ† with the parent-child dependency relation defined over âˆ† can be easily shown to define a partial order relation and thus it can be described as a Directed Acyclic Graph (DAG) (see <ref type="bibr" target="#b1">[2]</ref> for a proof), whose nodes correspond to diamonds, and whose arcs are defined by the parent-child dependency relation between diamonds. We call the resulting model a Hierarchy of Diamonds (HD). Due to the regularity of the vertex distribution and the subdivision rule, the DAG associated with âˆ† has a fixed structure. Thus, with the exception of diamonds whose spines lie on the domain boundary, {0, 1, 2} diamonds always have {3, 2, 4} parents and {6, 4, 8} children, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SUPERCUBES</head><p>Since we employ longest edge bisection as the subdivision operation, and diamonds are defined by their spine, it is useful to consider the spatial and hierarchical relationships among the edges of an LEB hierarchy. An analysis of this structure reveals a higher level of symmetry within the hierarchy than that which is apparent at the level of diamonds (see <ref type="figure">Figure 3)</ref>. Specifically, each level of resolution is tiled by a repeating pattern of edges arranged in a cubic domain, which we call a supercube.</p><p>Supercubes can be defined constructively by their set of edges. If we consider an empty cubic domain, the edges of a supercube Ïƒ are formed by</p><p>â€¢ the edges joining the center of the cube to its eight corners (see <ref type="figure" target="#fig_1">Figure 2a</ref>),</p><p>â€¢ the edges joining the center of each of the six faces of the cube to each of the four face corners and to the center of the cube (adding thirty additional edges, see <ref type="figure" target="#fig_1">Figure 2b</ref>), and</p><p>â€¢ the edges joining the midpoint of each of the twelve edges of the cube to the two closest cube corners, the two closest face centers and to the cube's center (adding 60 additional edges, see <ref type="figure" target="#fig_1">Figure 2c</ref>). To ensure that each edge in an LEB hierarchy is only associated with a single supercube, we adopt the common convention used for octrees <ref type="bibr" target="#b23">[24]</ref> that a supercube uses half-open intervals, i.e. it contains all internal edges as well as the edges on its lower boundaries but not the edges on its upper boundaries. Thus, we consider any edge of a supercube Ïƒ whose endpoints are both on an upper boundary of Ïƒ to belong to a neighboring supercube. Of the 98 edges introduced above, a supercube only contains the 56 edges that satisfy the halfopen criteria and consists of: 8 cube diagonals, 24 face diagonals and 24 cube edges. This is illustrated (in 2D) in  The one-to-one correspondence between edges of an LEB hierarchy and the spines of diamonds provides a unique association from each diamond to a single supercube. This correspondence enables the use of supercubes to associate information with a coherent subset of the diamonds while minimizing the geometric overhead required to access this information. This is facilitated by an efficient encoding for supercubes, as described in the following Section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ENCODING SUPERCUBES</head><p>In this Section, we discuss an encoding for supercubes within a hierarchy of diamonds âˆ† built on a grid with (2 N + 1) 3 points. We assume that all vertices of the diamonds in âˆ† have integer coordinates in the range of [0..2 N ].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Encoding diamonds</head><p>Due to the one-to-one correspondence between diamonds and grid points, a diamond Î´ âˆˆ âˆ† can be uniquely indexed by its central vertex. We consider the binary representation of the coordinates</p><formula xml:id="formula_0">v x , v y and v z of central vertex v c as v c = ï£® ï£¯ ï£¯ ï£¯ ï£° v x = x 1 x 2 . . . x m d x 1 d x 2 00 . . . 0 v y = y 1 y 2 . . . y m d y 1 d y 2 00 . . . 0 v z = z 1 z 2 . . . z m Ïƒ d z 1 d z 2 Ï„ 00 . . . 0 Î³ ï£¹ ï£º ï£º ï£º ï£» (1)</formula><p>The scale Î³ of a diamond Î´ is the minimum of the number of trailing zeros among its three coordinates. Thus, in any diamond Î´ at scale Î³, the rightmost Î³ bits in each of v x , v y and v z are zero, but at least one of the bits at position Î³ + 1 (i.e. <ref type="formula">1</ref>) is nonzero. The level of a diamond Î´ at scale Î³ is = N âˆ’ Î³, and equals the number of i-diamond ancestors of Î´ in the DAG, i.e. its depth in the DAG modulo 3.</p><formula xml:id="formula_1">d x 2 , d y 2 or d z 2 in Equation</formula><p>The two bits at positions Î³ + 1 and Î³ + 2 in each coordinate of v c encode the diamond type Ï„. Since the type Ï„ is encoded using 2 bits in each dimension, there are 4 3 = 64 possible values for Ï„. However, the definition of Î³ precludes the eight cases where d The final m = N âˆ’ (Î³ + 2) bits in each of the coordinates encode the origin of the supercube Ïƒ containing Î´ , i.e., its lower-left corner. Since there are no restrictions on the values of these bits, the origins of supercubes at a fixed level of resolution = m + 2 are points on a regular 3D grid that have been scaled by a factor of 2 Î³+2 . Note that scale, type and supercube origin can be efficiently extracted from the binary representation of the central vertex of a diamond through bit shifting operations. Supercubes contain all unique types of diamonds within an LEB hierarchy, since the type Ï„ of a diamond Î´ is determined by the supercube edge with which its spine coincides. Thus, a diamond's type Ï„ encodes the scaled offset of its central vertex from the supercube origin. i.e. v c = Ïƒ + (Ï„ Î³), where ' ' indicates a component-wise bit shift operation (see <ref type="figure" target="#fig_6">Figure 4</ref>).  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Internal map of a supercube</head><p>Since supercubes are intended to efficiently encode information with a subset of the diamonds of an LEB hierarchy, they require some form of bookkeeping to index the encoded diamonds. A simple approach would be to encode this data as an array with one entry for each of the 56 possible diamonds in the supercube. The data associated with each diamond is then indexed by its type Ï„, and unencoded diamonds are marked in place as missing. However, this can waste a considerable amount of storage for supercubes with many unencoded diamonds.</p><p>A more efficient approach for static representations is to index the encoded diamonds using a bitflag of 56 bits (i.e. 7 bytes) along with a corresponding array with storage only for the encoded diamonds. The data associated with a diamond of type Ï„ is indexed in the array by the prefix sum of Ï„ in the bitflag. Since prefix sum computations can be performed efficiently in hardware, the processing overhead of this representation compared to that of the simpler encoding above is negligible. Each supercube in this representation incurs a fixed storage overhead, regardless of the number of diamonds encoded. Thus, the overhead of this representation is reduced as the average concentration of encoded diamonds per supercube increases.</p><p>Since this bitflag representation requires a reorganization of the array data every time a diamond is added or removed, we use the array representation during the initial generation of the data, and convert to the bitflag representation immediately thereafter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Encoding collections of supercubes</head><p>We observe that within a given level of resolution , supercubes can be uniquely indexed by their origin. However, supercubes from different levels can map to the same origin (see <ref type="figure">Figure 3)</ref>.</p><p>We propose a two step access structure, where supercubes are first indexed by their level of resolution, and then by their origin. This also enables the level of a supercube to be implicitly encoded within the access structure.</p><p>The encoded supercubes at a given level of resolution belong to a uniform grid that has been scaled by a factor of 2 Î³+2 . Thus, depending on the data distribution, we have several options for access structures to the supercubes. When the majority of the data within a given level is present, the supercubes can be indexed using a full array. However, most of the time, this will not be the case. An MX-Octree <ref type="bibr" target="#b23">[24]</ref> is a hierarchical spatial access structure defined on grids where data is only associated with the leaf nodes of the complete tree, and adjacent unencoded elements can be aggregated to reduce the wasted space. The advantage of such a structure for supercubes is that the higher levels of resolution contain fewer elements, and enable quicker access. A third option is to organize the supercubes in a hash table to provide O(1) access.</p><p>Thus, the data associated with a diamond Î´ with supercube origin Ïƒ , type Ï„ and scale Î³ can be accessed in three steps. First, the set of supercubes at level = N âˆ’ (Î³ + 2) is located. Next, the supercube Ïƒ within this set is found. Finally, the data at location Ï„ within Ïƒ is found using the internal map of Ïƒ .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Extension to higher dimensions</head><p>A closer inspection of Equation (1) reveals that supercubes can be defined in a dimension-independent manner. Thus, the binary representation of the central vertex provides all information for retrieving geometric and hierarchical information as in the 3D case. </p><formula xml:id="formula_2">(4 d âˆ’ 2 d ) valid d-dimensional diamond types.</formula><p>Similarly, since the class of a diamond is encoded within the diamond type Ï„ by the number of zeros in the lower bit of each component, we can determine the number of distinct diamond types in each class in d dimensions. Since there are d i combinations of i zeros in the d lower bits, and 2 d arrangements in the upper bits of Ï„, there are</p><formula xml:id="formula_3">2 d d i distinct types of i-diamonds in dimension d, for 0 â‰¤ i &lt; d.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DIAMOND-BASED MULTIRESOLUTION VOLUMES</head><p>One of the primary visualization applications of diamond hierarchies has been as a multiresolution model for a volume dataset defined at the vertices of a regularly sampled scalar field, F. We call this model a Diamond-based Multiresolution Volume (DMV). A multiresolution model [2, 15] is a static structure that consists of a coarse base mesh, a set of atomic modifications and a dependency relation on the modifications defining a partial order. In the case of a DMV, the base mesh is a coarse LEB mesh and the modifications correspond to the diamonds. Since each diamond corresponds to its central vertex, the vertices are ordered according to the dependency relation of a hierarchy of diamonds âˆ†. Thus, the spatial decomposition and dependency relation of a DMV are obtained from the implicit relationships among the diamonds in âˆ†, and only the modifications need to be explicitly encoded.</p><p>The minimal information encoded in a diamond Î´ is given by the scalar value F(v c ), associated with the central vertex v c of Î´ . In addition to encoding F(v c ), each diamond usually encodes aggregate information about the field values within the domain of Î´ , which can be used to accelerate mesh extraction. The error Îµ(Î´ ) associated with diamond Î´ encodes the maximum approximation error for any point within the domain of Î´ , i.e.,</p><formula xml:id="formula_4">Îµ(Î´ ) = Max pâˆˆÎ´ (Îµ(p)),<label>(2)</label></formula><p>where Îµ(p) = F(p) âˆ’F(p) is the absolute difference between the field value at point p and the approximated value obtained through barycentric interpolation of the field values at the vertices of Î´ . The range of values within the domain of Î´ is also usually maintained. This is used to cull irrelevant regions during field-based queries <ref type="bibr" target="#b29">[30]</ref>.</p><p>A full DMV, which we denote as âˆ† f , contains diamonds corresponding to all vertices of a scalar field of dimensions (2 N + 1) <ref type="bibr" target="#b2">3</ref> . The base mesh of âˆ† f is a single 0-diamond Î´ covering the entire cubic domain â„¦. The eight corner points of â„¦ (i.e. the vertices of Î´ ) are the only points within âˆ† f that do not correspond to diamonds.</p><p>A full DMV âˆ† f can be encoded as a three-dimensional array whose entries represent the information associated with each diamond and can be indexed using a C-style row major ordering, or a more complicated indexing scheme such as a hierarchical space-filling curve <ref type="bibr" target="#b7">[8]</ref>.</p><p>However, when some of the vertices of a full DMV âˆ† f are unavailable or irrelevant for an intended application, a partial DMV, which we denote as âˆ† p , can be much more efficient to encode than âˆ† f . The base mesh of a partial DMV âˆ† p is a coarse LEB mesh consisting of diamonds from a corresponding hierarchy of diamonds âˆ†, whose vertices are tagged with values from the scalar field F. The diamonds in âˆ† p are a subset of the diamonds of âˆ† subject to the transitive closure constraint that if a diamond Î´ belongs to âˆ† p then all ancestors of Î´ belong to âˆ† p as well. Finally, the dependency relation of âˆ† p is the dependency relation of âˆ† restricted to the diamonds in âˆ† p .</p><p>A straightforward representation for âˆ† p is a diamond-based one, where each encoded diamond must explicitly maintain the coordinates of its central vertex in addition to its encoded data. However, due to the transitive closure constraint of the partial DMV model, the encoded diamonds exhibit both a spatial and a hierarchical coherence which can be exploited by clustering the diamonds into supercubes. Since âˆ† p is static, and typically sparse with respect to a corresponding full DMV we represent the internal map within supercubes using the bitflags encoding of Section 5.2. The supercubes at each level are indexed by the coordinates of their origin.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">ENCODING AN ACTIVE FRONT</head><p>Selective refinement is the general operation of extracting a variableresolution mesh from a multiresolution model <ref type="bibr" target="#b14">[15]</ref>. It is defined by an application-dependent predicate called the Level of Detail (LOD) criterion, which determines the minimum set of modifications necessary to generate a mesh of the required resolution. The LOD criterion can be based on many factors, including approximation error, field-values (e.g. isosurface extraction), location (e.g. view-dependent and region of interest queries) and perception (e.g. screen-space error). Selective refinement is performed by traversing the DAG describing the multiresolution model either in a top-down manner starting from the base mesh or incrementally from an already extracted mesh. The status of the refinement process is described by a cut of the DAG, called the active front, which separates the set of modifications that have been applied from those that have not.</p><p>When selective refinement is performed on a DMV, the active front describes a conforming tetrahedral mesh Î£, that we call the current mesh, which can be used to visualize an approximation of the dataset, e.g. to extract an isosurface or for direct volume rendering. In general, a diamond in a current mesh Î£ will not contain all of its tetrahedra, and thus diamonds need to track which of their tetrahedra are present in Î£ (see <ref type="figure" target="#fig_8">Figure 5a</ref> for an example in 2D, where, e.g., the blue diamonds contain only one of their two triangles). A diamond in the active front cannot be subdivided until all of its parents have been subdivided and, thus, all of its tetrahedra are present in Î£. We have observed <ref type="bibr" target="#b25">[26]</ref> that in a hierarchy of diamonds, a diamond with k parents has 2k tetrahedra, and that, upon subdivision, each parent of a diamond Î´ contributes a pair of tetrahedra to Î´ . Thus, since 0-diamonds have three parents, 1-diamonds have two parents and 2diamonds have four parents, bitflags with three, two and four bits, respectively, are sufficient to track the subdivided parents of diamonds as well as their tetrahedra in Î£. Since a diamond cannot be subdivided until all of its parents have been subdivided, the former property can be used to accelerate the extraction process, while the latter property can be used to visualize the extracted mesh Î£.</p><p>A straightforward representation for encoding an active front utilizes a hash table of diamonds. Each diamond Î´ is indexed by its central vertex v c , and contains a set of bitflags tracking its subdivided parents as well as any additional information that must be encoded for the diamond. This representation requires 7 bytes of overhead for each encoded diamond: 6 bytes for the coordinates of its central vertex and one additional byte of bookkeeping.</p><p>However, there is a considerable amount of coherence among the tetrahedra in Î£ that a diamond-based representation of an active front cannot exploit. Due to the LEB subdivision rule, neighboring tetrahedra in Î£ can differ by at most one level of refinement, so the presence in Î£ of a tetrahedron from diamond Î´ often indicates the presence of tetrahedra from neighboring diamonds in the hierarchy. We therefore propose a supercube-based representation for active fronts extracted from a DMV. Recall that a supercube indexes 56 diamonds, of which Thus, each supercube indexes up to 336 tetrahedra. Note, however, that these tetrahedra overlap (see <ref type="figure" target="#fig_8">Figure 5c</ref>), but tetrahedra in a conforming mesh cannot overlap. Due to the containment relation among the tetrahedra in the hierarchy, the presence of a tetrahedron t in Î£ precludes the presence of its parent tetrahedron and both of its children tetrahedra from Î£. Thus, in practice, a supercube in Î£ contains significantly fewer than the 336 possible tetrahedra (see <ref type="figure" target="#fig_8">Figure 5b)</ref>.</p><p>Since tetrahedra contribute to diamonds of Î£ in pairs, we can track the tetrahedra due to a single supercube in the active front Î£ using (336/2) bits = 21 bytes. Our proposed supercube-based representation for an active front therefore requires 27 bytes of overhead per supercube: 6 bytes to index its origin and 21 bytes of bookkeeping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">RESULTS</head><p>In this Section, we evaluate the effectiveness of supercubes as a partial DMV representation and as an active front representation across a testbed of volume datasets of resolution up to 512 <ref type="bibr" target="#b2">3</ref> . All experiments were run on a 2 GHz Intel Core 2 Duo laptop with 4 GB of RAM.</p><p>We first consider when it is appropriate to represent a dataset using a partial diamond hierarchy. This is measured in terms of the density of the dataset, i.e. the percentage of samples from a full hierarchy that are retained in the partial representation. Next, we analyze when supercube-based representations of a partial hierarchy are appropriate. For this, we consider the concentration of the clustering, that is, the average number of diamonds encoded per supercube. A supercubebased representation for a partial hierarchy of diamonds provides the maximum benefit when the desired dataset is sparse with respect to the full dataset and concentrated with respect to the supercube clustering.</p><p>Clustered representations typically incur some computational overhead related to the extra level of indirection required to index the data. We thus compare the runtime performance of the DMV representations during selective refinement queries. Since the efficiency of a selective refinement query depends on the representation of its associated active front, we conclude by comparing the supercube-based and diamond-based active front representations of Section 7 in terms of performance and storage costs.</p><p>We begin by introducing some notation. Let âˆ† f denote the full DMV, containing n f = (2 N + 1) 3 diamonds and let âˆ† p denote the desired partial DMV, containing n p diamonds. âˆ† p can be encoded using a diamond-based partial DMV âˆ† d or a supercube-based representation âˆ† s , whose n p diamonds are clustered into n s supercubes. Finally, let b Î´ denote the number of bytes required to encode the data associated with each diamond, b v the number of bytes required to encode the coordinates of the central vertex of each diamond and b Ïƒ the number of bytes required to encode the indexing and bookkeeping information associated with each supercube.</p><p>We compare the costs of these representations in <ref type="table" target="#tab_1">Table 1</ref> with respect to an ideal representation âˆ† p , which only represents the n p diamonds. This representation is not practical since it has no way of indexing the encoded diamonds, but we use it to compare the remaining representations. âˆ† f must encode all n f samples but the indexing of its elements is implicit. However, it encodes n f âˆ’ n p extraneous diamonds. In contrast, âˆ† d encodes only the n p diamonds but must also explicitly encode the spatial coordinates of each diamond. Finally, the overhead in âˆ† s can be attributed entirely to the n s supercubes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Representation</head><p>Cost Overhead Using this notation, we define the density D = n p /n f of the dataset as the ratio of retained diamonds in âˆ† p compared to âˆ† f . Also, we define the concentration C = n p /n s of the dataset as the average number of diamonds per supercube. We note that C âˆˆ [1, 56] since we only encode supercubes that contain at least one diamond.</p><formula xml:id="formula_5">âˆ† p n p * b Î´ 0 âˆ† f n f * b Î´ (n f âˆ’ n p ) * b Î´ âˆ† d n p * b Î´ + n p * b v n p * b v âˆ† s n p * b Î´ + n s * b Ïƒ n s * b Ïƒ</formula><p>By rearranging the equations in <ref type="table" target="#tab_1">Table 1</ref> and substituting terms for D and C , we can compare the representations. âˆ† s is more compact than âˆ† f when</p><formula xml:id="formula_6">D &lt; b Î´ b Î´ + (b Ïƒ /C ) , âˆ† d is more compact than âˆ† f when D &lt; b Î´ b Î´ + b v</formula><p>and âˆ† s is more compact than âˆ† d when C &gt; b Ïƒ /b v . However, since all representations must encode the n p diamonds, a more relevant measure of the effectiveness of each representation is related to its overhead with respect to âˆ† p (third column of <ref type="table" target="#tab_1">Table 1</ref>). While âˆ† d has a constant overhead of b v bytes per diamond, the overhead in âˆ† s is related to C as (b Ïƒ /C ) bytes per diamond.</p><p>As a concrete example, let the size of each refinement be b Î´ = 4 bytes as in <ref type="bibr" target="#b7">[8]</ref>. Further, assume vertices are encoded in 6 bytes as three unsigned shorts, then b v = 6 bytes. Finally, let b Ïƒ = 17 bytes consisting of: the origin of the supercube (6 bytes), bitflags to indicate the encoded diamonds (7 bytes) and a pointer to an array containing the data (4 bytes). Then, in terms of density and concentration, âˆ† s is more compact than âˆ† f and âˆ† d , respectively, when D &lt; 4 (4+17/C ) , and when C &gt; 17/6. The gray curves in <ref type="figure" target="#fig_10">Figures 6 and 7</ref> separate the half-spaces in which âˆ† s is more compact than âˆ† f by the constant to its right. For example, when C = 17 and D = .2, âˆ† f requires four times as much space to encode as âˆ† s .  <ref type="table">Table 2</ref> extracted from a complete DMV with uniform error greater than 0% (red) and 1% (orange). Gray curves indicate the factor by which a supercubebased partial DMV âˆ† s is more compact than a full DMV âˆ† f .</p><p>As a first application, consider a partial DMV âˆ† p generated from a full DMV âˆ† f by retaining all diamonds whose error is greater than a given threshold Îµ. Since âˆ† p corresponds to a partial hierarchy of diamonds, it must also retain all ancestors of the retained diamonds. This ensures the transitive closure of the diamond dependency relation (as described in Section 6). When Îµ = 0, this generates a lossless encoding of âˆ† f , i.e. âˆ† f can be reconstructed from âˆ† p without any error. <ref type="table">Table 2</ref> lists the number of elements, and storage costs in a zeroerror partial DMV âˆ† p for various datasets as well as their density D and concentration C . These datasets are plotted on <ref type="figure" target="#fig_10">Figure 6</ref> for Îµ = 0% and Îµ = 1%. We observe that some datasets, such as Fuel and Aneurism are extremely sparse, and achieve a 12.2 times and 17.3 times reduction in storage requirements, respectively, compared to âˆ† f . In contrast, other datasets such as Plasma and Buckyball are quite dense, and thus, a partial representation does not yield a significant savings compared to âˆ† f . However, even for these datasets, the size of âˆ† s is close to that of âˆ† f (requiring 4% more and 19% less space, respectively), whereas âˆ† d is much larger (requiring 2.4 times and 1.9 times more space, respectively). Most of the remaining datasets achieve around three times savings for âˆ† s compared to âˆ† f (see last column in <ref type="table">Table 2</ref>).</p><p>Since b v (6 bytes) is 1.5 times as large as b Î´ (4 bytes), the overhead associated with âˆ† d compared to the ideal representation âˆ† p is 150%. In contrast, the overhead of âˆ† s is related to the concentration of the supercube clustering, and averages around 12% across all datasets. Thus, the 2.25 times savings achieved by âˆ† s compared to âˆ† d is entirely due to the difference in storage overhead.</p><p>Partial hierarchies can also be used to reduce the storage requirements and mesh extraction times required for isosurface extraction when the (set of) isovalue(s) can be determined in advance. In isosurfacing applications, the active cells, i.e. those that intersect the isosurface, typically occupy a sparse but spatially widespread subset of  <ref type="figure" target="#fig_10">Figure 6</ref> (red circles).</p><p>the domain. Since isosurfaces are continuous, there is a great deal of spatial and hierarchical coherence among the active cells. We can thus generate an isovalue-based partial DMV âˆ† p from âˆ† f , where all diamonds whose range intersects the predetermined isovalue(s) are retained, while those not intersecting the isovalue(s) are only retained if they are ancestors of the required diamonds. âˆ† p can then be queried using selective refinement to extract adaptive tetrahedral meshes and isosurfaces. This model thus trades fidelity in regions away from the desired isosurface for storage and extraction efficiency of the desired isosurface(s). <ref type="table" target="#tab_4">Table 3</ref> lists the number of elements and the storage requirements for the three DMV representations for each isovalue-based dataset (the values of N and n f can be found in <ref type="table">Table 2</ref>). The density and concentration of these datasets are plotted in <ref type="figure" target="#fig_11">Figure 7</ref>. We observe that these extracted partial DMVs are indeed sparse with respect to âˆ† f , averaging around 5% of the samples and often much less. They are also quite concentrated with respect to the supercube clustering, with an average concentration of 26 out of a possible 56 diamonds per supercube. Thus, supercube-based partial DMVs of these datasets require an average of 25 times less storage than their corresponding full DMVs. In fact, the largest dataset Xmas {868} (orange square in <ref type="figure" target="#fig_11">Figure 7</ref>) requires only 1.3% of the samples of âˆ† f and is over 65 times more compact.</p><p>As in the error-based partial DMVs, the supercube-based encodings are approximately 2.3 times smaller than a corresponding diamondbased DMV, and have very low overhead (around 13%) compared to the ideal representation âˆ† p .</p><p>We note that, when more than one isovalue is desired (as in the set of Engine datasets on the bottom of <ref type="table" target="#tab_4">Table 3</ref>, and the corresponding colored rhombuses in <ref type="figure" target="#fig_11">Figure 7</ref>), there is also a significant amount of coherence among the active cells of distant isovalues (e.g. 58 and 170). Thus, the supercube-based representation for Engine {58,100} requires only 15% more storage space than either of the individual datasets Engine {58} or Engine {100} , and has a higher concentration than either of them. This advantage is increased in Engine {58,100,170} as the samples from a third isovalue are added, where the density only increases by 3% and the supercube concentration increases by .8.  <ref type="table" target="#tab_4">Table 3</ref> containing all diamonds intersected by the specified isovalue(s).</p><p>We now compare the runtime performance of the three DMV representations, âˆ† f , âˆ† d and âˆ† s , by comparing the rates at which they can process diamonds during selective refinement queries. Since an active front facilitates selective refinement, we evaluate the performance of   the two active front representations introduced in Section 7. Recall that the active front of a selective refinement query on a diamond hierarchy corresponds to a tetrahedral mesh called the current mesh Î£. This mesh can be represented using a diamond-based representation, which we denote as Î£ d , or through a supercube-based representation which we denote as Î£ s .</p><p>Since selective refinement queries depend on the specific LOD criterion used, we evaluate the performance of each structure in terms of the number of diamonds visited by the selective refinement query per second. In <ref type="table">Table 4</ref>, we present the aggregate results over our testbed of datasets for an error-based isosurface extraction query and note that we observed the same trends when using different queries, such as region of interest and approximation error queries. The LOD criterion for this query selects all diamonds with approximation error greater than some threshold Îµ and containing a particular isovalue Îº. As a partial DMV for this query, we use the datasets generated in <ref type="table" target="#tab_4">Table 3</ref>.</p><p>For these experiments, we implemented âˆ† d using a hash table from the central vertex of each diamond in âˆ† d to the data associated with it. This incurs a storage overhead inversely proportional to the load factor of the hash table, i.e., the ratio of diamonds in âˆ† d to buckets in the hash table. Across all datasets tested, we found the load factor to average 73.5% (with a standard deviation of 16%). Thus, the hashindexed âˆ† d requires an average memory overhead of 36% compared to the values listed in <ref type="table" target="#tab_4">Table 3</ref>. Similarly, for âˆ† s , we used a separate hash table for each level of supercubes, and indexed the data associated with each supercube by its origin (as described in Section 5.3). We found the load factor to average 75% (with a standard devaiation of 11%) across the datasets, thus, requiring an average memory overhead of 33% compared to the values listed in <ref type="table" target="#tab_4">Table 3</ref>.</p><p>We evaluate the performance of the DMV representations (i.e. the rows of <ref type="table">Table 4</ref>) by comparing the average number of diamonds processed per second. Recall that due to the query type and the transitive closure of âˆ† d and âˆ† s , all three representations process the same set of diamonds and yield the same result. We first observe that all three representations yield similar performance results of about 300,000 diamonds per second. âˆ† f is the fastest DMV representation, since it can directly access its diamonds using the array location of their central vertices. âˆ† d is approximately 5-6% slower than âˆ† f , due to its use of indirect hashing, while âˆ† s is around 7.5% slower than âˆ† f . Thus, despite its required extra processing, such as extracting the supercube origin and diamond type and the prefix sum calculation, supercubebased âˆ† s 's performance is within 2% that of diamond-based âˆ† d .</p><p>Next, we evaluate the relative performance of the two active front representations Î£ s and Î£ d by comparing columns 4 and 7 (AVERAGE) of <ref type="table">Table 4</ref>. Thus, the supercube-based active front representation Î£ s is, on average, 1-2% more efficient than the diamond-based active front representation Î£ d . Although this is not a significant difference, we note that the addition (removal) of any diamond to (from) Î£ d incurs a memory allocation (deallocation), whereas, due to the supercube clustering, such allocations (deallocations) are rarer for Î£ s .</p><p>Finally, we evaluate the sizes of the two active front representations. Recall that the supercube-based active front representation Î£ s requires 27 bytes overhead per supercube. Over the entire test, Î£ s averaged 26.5 tetrahedra per supercube (with a standard deviation of 3.1). Thus, the supercube-based active front Î£ s incurs an overhead of around 1 byte per tetrahedron in the active front. In contrast, the diamond-based active front representation Î£ d requires 7 bytes overhead per diamond. Over the entire test, Î£ d averaged 3.3 tetrahedra per diamond (with a standard deviation of .55). Thus, the diamond-based active front incurs an overhead of around 2.16 bytes per tetrahedron in the active front.</p><p>We implemented both Î£ s and Î£ d using hash tables, (analogously to our indexing of the partial DMVs above). Across all datasets, we achieved an average load factor of 74% for Î£ d (with a standard deviation of 15%), and thus the hash-indexed Î£ d incured a memory overhead of around 36%. The average load factor for Î£ s was 72% (with a standard deviation of 11%), requiring an average overhead of 39%. Thus, a supercube-based active front representation Î£ s can be used to extract an equivalent mesh from a DMV as a diamond-based representation Î£ d in slightly less time and using less than half the storage. <ref type="figure" target="#fig_9">Figure 8</ref> illustrates the clustering of tetrahedra in a supercube-based active front by the color of their isosurface triangles.</p><p>(a) Tooth, Îµ &gt; 10% (b) Fuel, Îµ &gt; .03% </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUDING REMARKS</head><p>We have proposed the supercube as a high-level primitive for compactly encoding nested tetrahedral meshes generated through longest edge bisection. Supercubes represent the basic unit of symmetry within the hierarchy of diamonds model, and encode all distinct types of diamonds within the hierarchy (up to scaling factors). Supercube clustering provides an efficient means of associating information with a subset of the diamonds within an LEB hierarchy by exploiting the spatial and hierarchical coherence within the dataset. We have demonstrated that several visualization datasets are oversampled by a factor of three or more while at the same time the retained elements have a high degree of coherence with respect to supercube clustering. Thus, a supercube-based partial DMV is an effective multiresolution representation that efficiently supports selective refinement queries with very little geometric or computational overhead. We have also demonstrated that a supercube-based active front representation can accelerate selective refinement while requiring less than half the storage of a diamond-based active front data structure.</p><p>Here, we have focused on the implementation of the internal map between supercubes and their associated data. However, since our indexing structure for the supercubes at each level utilizes a hash table (see the end of Section 8), our partial DMV representations can be inflated by as much as 40%. This can reduce the benefits of a supercubebased DMV âˆ† s to a full DMV âˆ† f , when their relative differences are less pronounced. However, when the relatives sizes are more significant, a hash-indexed âˆ† s still provides a significant advantage over âˆ† f . Additionally, we have demonstrated that hash-indexed DMVs and active front representations based on diamonds suffer from similar or worse overhead than their supercube-based counterparts.</p><p>In future work, we intend to focus on the indexing structure for diamonds and supercubes in a partial hierarchy. As mentioned in Section 5.3, since the set of supercubes at a given level of resolution tile the plane, an MX-octree is a promising representation for the spatial access structure. Specifically, a pointerless MX-octree <ref type="bibr" target="#b23">[24]</ref> should achieve the storage goals of <ref type="table" target="#tab_4">Tables 2 and 3</ref>. Alternatively, since âˆ† d and âˆ† s contain static spatial data, a perfect spatial hash <ref type="bibr" target="#b13">[14]</ref> can be generated to yield significantly lower overhead than a standard hash table.</p><p>We are also currently looking into modifications of the supercube representation for higher dimensional datasets such as time-varying volume data where the internal map of each supercube must reflect the increased number of diamonds.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>The three classes of diamonds, distinguished by the alignment of their spines (black edges). Central vertices of children coincide with the midpoint of a subset of the diamond's edges (red vertices), while those of parents coincide with a subset of its vertices (hollow gray vertices).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>The edges of a supercube Ïƒ . (a) Eight edges originating from the center of Ïƒ (b) Six groups of five edges originating from face centers of Ïƒ (c) Twelve groups of five edges originating from the side centers of Ïƒ . The black edges in (a) and (b) are shown only for context.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Figure 3at three consecutive levels of resolution, where the solid lines are supercube edges, while the dashed lines on the upper boundaries indicate edges belonging to neighboring supercubes due to the half-open interval rule.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>+ 2 Fig. 3 .</head><label>23</label><figDesc>Supercubes (in 2D) are structured sets of edges tiling each level of resolution within an LEB hierarchy. Three consecutive levels of resolution covering the same domain are shown, containing 1, 4 and 16 supercubes, respectively. Dashed edges are excluded due to the halfopen interval rule.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>x 2 , d y 2 and d z 2 are all zero. Thus, there are 56 valid diamond types, each corresponding to a distinct supercube edge. Finally, the number i of zeros at position Î³ + 1 of v c encodes the congruence class of Î´ .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 4 .</head><label>4</label><figDesc>(a) A diamond's spine coincides with an edge (solid lines) of a single supercube. (b) Alternatively, a diamond's central vertex lies at the midpoint of a supercube edge.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>Consider a regular grid in a d-dimensional cubic domain with (2 N + 1) d vertices. With the exception of the 2 d vertices at the domain corners, each vertex corresponds to the central vertex of a d-dimensional diamond. The type Ï„ of a diamond Î´ at scale Î³ is thus encoded by the two bits at positions Î³ + 1 and Î³ + 2 in the binary representation of the central vertex of Î´ . There are four possible values for each of the d components of Ï„, and thus, 4 d possibilities for Ï„. The values at position Î³ + 2 are unrestricted, but the definition of diamond scale invalidates any case where all the bits at position Î³ + 1 are zero. Since there are 2 d such cases, there are</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 5 .</head><label>5</label><figDesc>(a) A portion of a current mesh Î£ (in 2D). (b) Highlighted triangles from Î£ map to triangles in the supercube Ïƒ . Gray triangles map to other supercubes. Diamonds in Î£ rarely contain all their triangles. (c) The set of all triangles (tetrahedra in 3D) in a supercube overlap.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>â€¢ 8</head><label>8</label><figDesc>are 0-diamonds, each with 6 tetrahedra, â€¢ 24 are 1-diamonds, each with 4 tetrahedra and â€¢ 24 are 2-diamonds, each with 8 tetrahedra.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 6 .</head><label>6</label><figDesc>Density and concentration of partial DMV datasets of</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 7 .</head><label>7</label><figDesc>Density and concentration of partial DMV datasets of</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Table 4 .</head><label>4</label><figDesc>Selective refinement performance of the three DMV representations using a diamond-based active front representation Î£ d and a supercube-based active front representation Î£ s , in terms of the minimum, maximum and average number of diamonds visited per second.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 8 .</head><label>8</label><figDesc>Isosurfaces extracted from DMV models. Triangles are colored by their embedding supercube. (a) Tooth dataset with uniform error Îµ &gt; 10%. A supercube-based active front representation Î£ s has an average of 26.9 tetrahedra per supercube yielding an average overhead of 1 byte per tetrahedron. The diamond-based active front Î£ d has an average of 2.9 tetrahedra per diamond yielding an overhead of 2.4 bytes per tetrahedron. (b) Fuel dataset with uniform error Îµ &gt; .03%. Î£ s has an average of 25.6 tetrahedra per supercube yielding an average overhead of 1.05 bytes per tetrahedron. Î£ d has an average of 3.3 tetrahedra per diamond yielding an overhead of 2.12 bytes per tetrahedron.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>is with the Department of Computer Science, University of Maryland, College Park, 4406 A.V. Williams Building, College Park, MD 20742. E-mail: kweiss@cs.umd.edu.</figDesc><table /><note>â€¢ L. De Floriani is with the Dipartimento di Informatica e Scienze dellÂ´Informazione, UniversitÃ  di Genova, Via Dodecaneso, 35, 16146 Genova, Italy. E-mail: deflo@disi.unige.it. Manuscript received 31 March 2009; accepted 27 July 2009; posted online 11 October 2009; mailed on 5 October 2009. For information on obtaining reprints of this article, please send email to: tvcg@computer.org .</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Storage requirements and overhead, in bytes, for the various DMV representations. Overhead is relative to âˆ† p .</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>Table 2. DMVs generated based on uniform field error with Îµ = 0. File sizes for âˆ† f , âˆ† d and âˆ† s are listed in MB (1 MB = 1024 2 B). All datasets are plotted on</figDesc><table><row><cell>Dataset</cell><cell>N</cell><cell>n f</cell><cell>np</cell><cell>ns</cell><cell>D</cell><cell>C</cell><cell>âˆ† f</cell><cell>âˆ† d</cell><cell>âˆ†s</cell><cell>âˆ† f /âˆ†s</cell></row><row><cell>Fuel</cell><cell>6</cell><cell>275 K</cell><cell>19.9 K</cell><cell>620</cell><cell cols="2">.07 32.2</cell><cell>1.05</cell><cell>.19</cell><cell>.09</cell><cell>12.2 x</cell></row><row><cell>Neghip</cell><cell>6</cell><cell>275 K</cell><cell>129 K</cell><cell>3.46 K</cell><cell cols="2">.47 37.2</cell><cell cols="2">1.05 1.23</cell><cell>.55</cell><cell>1.91 x</cell></row><row><cell>Plasma</cell><cell>6</cell><cell>275 K</cell><cell>265 K</cell><cell>4.98 K</cell><cell cols="2">.97 53.2</cell><cell cols="3">1.05 2.53 1.09</cell><cell>.96 x</cell></row><row><cell>Hydrogen</cell><cell cols="2">7 2.15 M</cell><cell>545 K</cell><cell>16.0 K</cell><cell cols="2">.25 34.0</cell><cell cols="3">8.19 5.19 2.34</cell><cell>3.50 x</cell></row><row><cell cols="5">Buckyball 7 2.15 M 1.65 M 38.3 K</cell><cell cols="2">.77 43.0</cell><cell cols="3">8.19 15.7 6.90</cell><cell>1.19 x</cell></row><row><cell>Aneurism</cell><cell cols="2">8 17.0 M</cell><cell>791 K</cell><cell>44.6 K</cell><cell cols="2">.05 17.7</cell><cell cols="3">64.8 7.54 3.74</cell><cell>17.3 x</cell></row><row><cell>Tooth</cell><cell cols="4">8 17.0 M 5.23 M 104 K</cell><cell cols="2">.31 50.1</cell><cell cols="3">64.8 49.9 21.7</cell><cell>2.99 x</cell></row><row><cell>Engine</cell><cell cols="4">8 17.0 M 5.34 M 112 K</cell><cell cols="2">.31 47.6</cell><cell cols="3">64.8 50.9 22.2</cell><cell>2.92 x</cell></row><row><cell>Head</cell><cell cols="4">8 17.0 M 5.47 M 139 K</cell><cell cols="2">.32 39.4</cell><cell cols="3">64.8 52.1 23,1</cell><cell>2.80 x</cell></row><row><cell>Bonsai</cell><cell cols="4">8 17.0 M 5.00 M 147 K</cell><cell cols="2">.29 34.1</cell><cell cols="3">64.8 47.7 21.5</cell><cell>3.02 x</cell></row><row><cell>Foot</cell><cell cols="4">8 17.0 M 5.90 M 151 K</cell><cell cols="2">.35 39.2</cell><cell cols="3">64.8 56.3 25.0</cell><cell>2.59 x</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 3 .</head><label>3</label><figDesc>DMVs generated based on specific isovalue(s). File sizes are listed in MB (1 MB = 1024 2 B). All datasets are plotted onFigure 7.</figDesc><table><row><cell></cell><cell cols="3">Diamond-Based (Î£ d )</cell><cell cols="3">Supercube-Based (Î£ s )</cell></row><row><cell></cell><cell>Min</cell><cell>Max</cell><cell>Average</cell><cell>Min</cell><cell>Max</cell><cell>Average</cell></row><row><cell>âˆ† f</cell><cell cols="6">252 K/s 343 K/s 317 K/s 298 K/s 354 K/s 324 K/s</cell></row><row><cell cols="7">âˆ† d 223 K/s 333 K/s 301 K/s 263 K/s 340 K/s 306 K/s</cell></row><row><cell cols="7">âˆ† s 237 K/s 327 K/s 296 K/s 276 K/s 331 K/s 300 K/s</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We would like to thank the anonymous reviewers for their many helpful suggestions. This work has been partially supported by the National Science Foundation under grant CCF-0541032 and by the MIUR-FIRB project SHALOM under contract number RBIN-04HWR8. The Buckyball model is courtesy of AVS Inc. The Plasma model is courtesy of Visual Computing Group, National Research Council, Pisa, Italy. All other datasets are courtesy of volvis.org.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Adaptive tetrapuzzles: efficient out-of-core construction and visualization of gigantic multiresolution polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ganovelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gobbetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Marton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ponchio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="796" to="803" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Multi-resolution mesh representation: models and data structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Magillo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Mathematics</title>
		<editor>M. Floater, A. Iske, and E. Quak,</editor>
		<imprint>
			<biblScope unit="page" from="364" to="418" />
			<date type="published" when="2002" />
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
	<note>editors, Principles of Multi-resolution Geometric Modeling</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">ROAMing terrain: real-time optimally adapting meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Sigeti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Aldrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Mineev-Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<editor>R. Yagel and H. Hagen</editor>
		<meeting>IEEE Visualization<address><addrLine>Phoenix, AZ</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Adaptively sampled distance fields: a general representation of shape for computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Frisken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">N</forename><surname>Perry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Rockwood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH&apos;00 Conference</title>
		<meeting>SIGGRAPH&apos;00 Conference<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="249" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Multi-resolution visualization and compression of global topographic data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">GeoInformatica</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="7" to="32" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Topology-preserving and controlled topology simplifying multi-resolution isosurface extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pajarola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="259" to="266" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Multiresolutional parallel isosurface extraction based on tetrahedral bisection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Symposium on Volume Visualization</title>
		<meeting>Symposium on Volume Visualization</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="267" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Interactive view-dependent rendering of large isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Gregorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>DC, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="475" to="484" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Adaptive extraction of time-varying isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Gregorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Senecal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="683" to="694" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Symbolic local refinement of tetrahedral grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Hebert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Symbolic Computation</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="457" to="472" />
			<date type="published" when="1994-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Dual contouring of hermite data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Losasso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Schaefer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="339" to="346" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Parallel volume segmentation with tetrahedral adaptive grid</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kimura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yamazoe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Tanaka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Tanaka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Pattern Recognition</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="281" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Constant-time neighbor finding in hierarchical tetrahedral meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">De</forename><surname>Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings International Conference on Shape Modeling</title>
		<meeting>International Conference on Shape Modeling<address><addrLine>Genova, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2001-05" />
			<biblScope unit="page" from="286" to="295" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Perfect spatial hashing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lefebvre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="579" to="588" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Level of Detail for 3D Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Huebner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Morgan-Kaufmann</publisher>
			<pubPlace>San Francisco</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marchesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dischler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mongenet</surname></persName>
		</author>
		<title level="m">IEEE Symposium on Volume Visualization and Graphics</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
	<note>3D ROAM for scalable</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Local bisection refinement for n-simplicial grids generated by reflection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Maubach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific Computing</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="210" to="227" />
			<date type="published" when="1995-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Estimating the in/out function of a surface represented by points. Symposium on Solid Modeling and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Mello</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Velho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="108" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Slow Growing Subdivisions (SGS) in any dimension: towards removing the curse of dimensionality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="451" to="460" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Isosurface computation made simple: Hardware acceleration, adaptive refinement and tetrahedral stripping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics/IEEE TVCG Symposium on Visualization (VisSym)</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="293" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Kizamu: A system for sculpting digital characters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">N</forename><surname>Perry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Frisken</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics, (Proc. SIGGRAPH 2001)</title>
		<meeting><address><addrLine>Los Angeles, CA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001-08" />
			<biblScope unit="page" from="47" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A 3D refinement algorithm for adaptive and multigrid techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rivara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications in Applied Numerical Methods</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="281" to="290" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Tetrahedron-based, least-squares, progressive volume models with application to freehand ultrasound data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Roxborough</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2000-10" />
			<biblScope unit="page" from="93" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Foundations of Multidimensional and Metric Data Structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Elsevier</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Topological volume skeletonization using adaptive tetrahedralization. Geometric Modeling and Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings</title>
		<imprint>
			<biblScope unit="page" from="227" to="236" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Multiresolution Interval Volume Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/ EG Symposium on Volume and Point-Based Graphics</title>
		<editor>H.-C. Hege, D. Laidlaw, R. Pajarola, and O. Staadt</editor>
		<meeting><address><addrLine>Los Angeles, California, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Eurographics Association</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="65" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Sparse Terrain Pyramids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 16th ACM SIGSPATIAL Int. Conference on Advances in Geographic Information Systems</title>
		<meeting>of the 16th ACM SIGSPATIAL Int. Conference on Advances in Geographic Information Systems<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="115" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Diamond Hierarchies of Arbitrary Dimension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1289" to="1300" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Real-time exploration of regular volume data by adaptive reconstruction of isosurfaces. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="100" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Topological considerations in isosurface generation extended abstract</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1990 workshop on Volume visualization</title>
		<meeting>the 1990 workshop on Volume visualization</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Multi-resolution tetrahedral framework for visualizing regular volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;97</title>
		<editor>R. Yagel and H. Hagen</editor>
		<meeting>IEEE Visualization &apos;97<address><addrLine>Phoenix, AZ</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
