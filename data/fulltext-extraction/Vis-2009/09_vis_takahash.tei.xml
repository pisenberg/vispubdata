<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Applying Manifold Learning to Plotting Approximate Contour Trees</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Shigeo</forename><surname>Takahashi</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Issei</forename><surname>Fujishiro</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Masato</forename><surname>Okada</surname></persName>
						</author>
						<title level="a" type="main">Applying Manifold Learning to Plotting Approximate Contour Trees</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:54+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Fig. 1. A variant of an manifold learning technique allows us to extract contour trees: (a) The 3D distribution of the Swiss roll dataset (left) is elongated onto the 2D plane (right) through conventional nonlinear dimensionality reduction. (b) 3D scattered samples of a surface with two peaks and one pit (left) can be transformed into an approximate contour tree (right) using our approach. Different colors are assigned to the samples where the color of each axis represents the associated correspondence with their coordinates.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Extracting meaningful features from volumes and their temporal behaviors has been a key problem in scientific visualization, due to its ability to provide appropriate visualization parameters for a clear understanding of the input data. Among several representations of such features, contour trees have played an important role because they allow us to transform an input data into a skeleton-like tree, which delineates the topological evolution of isosurfaces according to the scalar field value. Several sophisticated algorithms have been proposed for constructing such contour trees together with application to several specific research topics in physics and biochemistry.</p><p>Formally speaking, existing algorithms can handle datasets of any dimension, while the input dataset is assumed to be samples of a single-valued function s = s(p) = s(x 1 , . . . , x n ), where s represents a scalar field value and p = (x 1 , . . . , x n ) indicates the coordinates of a n-dimensional data point. This function represents typical datasets such as terrain samples (n = 2), volume samples (n = 3), and its timevarying version (n = 4). These algorithms, however, generally complicate the associated software implementation especially when handling high-dimensional cases (n ≥ 4). In addition, extracting contour trees from far higher-dimensional datasets has not been sufficiently tackled.</p><p>• Shigeo <ref type="bibr">Takahashi</ref>  This paper presents a simple yet effective approach to extracting contour trees even from higher-dimensional datasets, by taking advantage of manifold learning. The manifold learning is a well-known dimensionality reduction scheme based on nonlinear transformations, which allows us to elongate the curvy distribution of the sample points and project it into a low-dimensional space, as shown in <ref type="figure">Fig. 1a</ref>. In our framework, the contour tree can be extracted just as a projection of point clouds into 3D space, without any complicated implementation except for introducing an available eigensolver. Thus, this is an approximate representation of the contour tree, while it is still expected to serve as an effective interface for exploring hyper-isosurfaces in the given high-dimensional dataset. For brevity, <ref type="figure">Fig. 1b</ref> shows a 2D result obtained through the use of our prototype system, where the corresponding portion of a 2D scalar (height) field (with two peaks and one pit) is highlighted by manually picking a point on the computed contour tree.</p><p>The overall process of the proposed approach consists of three primary computational steps <ref type="figure" target="#fig_0">(Fig. 2)</ref>. First, we introduce a kernel-like neighborhood to each sample to seek the manifold proximity over the whole dataset. We then derive a dissimilarity matrix from the distance between every pair of sample points along the corresponding shortest path, in order to retrieve the underlying global structure of the manifold. Finally, we embed the manifold into the 3D space while respecting the calculated mutual distances among the samples. This is achieved by introducing a simple modification to an existing manifold learning technique while the associated results demonstrate that our approach is effective enough to explore the inner structures in multidimensional volumes. See Section 4 for details.</p><p>Since our framework relies on a numerical eigensolver, the size of the associated dissimilarity matrix should remain moderate. To make our framework scalable in terms of cardinality and dimensionality, we introduce hierarchical representations of the given samples. Starting from the original samples at the bottom level, we construct an intermediate level by adaptively merging two samples (or clusters) into a new cluster according to the closeness with respect to our new proximity metric. This amounts to adaptively redistributing a specific number of samples in the data domain using a minimum spanning tree strategy, while retaining the associated local proximity of the sample points. We then select a small number of landmark samples as the top level so that they are uniformly distributed according to the geodesic distance metric, which is also newly introduced to our framework for capturing the global structure of the underlying contour tree representation. In this respect, the present work allows us to extract the meaningful features at a visually-plausible resolution level even from the largescale dataset. Moreover, interactive segmentation of the input data through the approximate contour tree can provide users with closeup shots of its minor topological structures. This capability is beneficial especially for analyzing high-dimensional cases because our approach eventually provides an interface for directly manipulating such invisible structures of the given datasets through the constructed approximate contour tree in an abstract low-dimensional space.</p><p>The remainder of this paper is organized as follows: Section 2 provides a brief survey on related research topics. Section 3 shows the overview of our approach, which is followed by the description of a basic algorithm for plotting approximate contour trees using a manifold learning technique in Section 4, and hierarchical representations for handling large-scale datasets with a currently available eigensolver in Section 5. Section 6 shows enhancements of the present approach for increasing its usability in a visualization environment. Section 7 presents several results generated by our prototype system, together with a discussion of features and limitations of the approach. Section 8 concludes this paper and refers to possible future extensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Our work has been inspired by recent advancements in contour tree representation and manifold learning techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Contour Trees</head><p>A contour tree is a special case of a Reeb graph <ref type="bibr" target="#b21">[22]</ref>, which represents a topological skeleton of a scalar function. Shinagawa et al. <ref type="bibr" target="#b24">[25]</ref> originally introduced the concept of Reeb graph into the CG community for shape description purposes. Formally, a Reeb graph of a scalar function s = s(x) is defined as a quotient space obtained by identifying different sample points if they belong to the same connected component of level sets s −1 (C) where C is some scalar value. A contour tree is defined to be a Reeb graph that is free of cycles, and effectively captures the transitions of level sets when s(x) is single-valued.</p><p>Contour trees <ref type="bibr" target="#b2">[3]</ref> were initially invented for the analysis of terrain shapes in GIS applications to extract the topological transitions of the cross-sectional contours according to the height, and several algorithms for this computation have been presented <ref type="bibr" target="#b27">[28]</ref> while their use was still limited. Bajaj et al. <ref type="bibr" target="#b0">[1]</ref> introduced the contour trees to the scientific visualization community, as a truly attractive tool to visually explore the topological transitions of isosurfaces. The contour trees were further applied to several related problems including isosurface tracking <ref type="bibr" target="#b3">[4]</ref>, transfer function design <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b35">36]</ref>, LoD control <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b6">7]</ref>, and spatial embedding analysis <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b37">38]</ref>.</p><p>For an algorithmic viewpoint, van Kreveld et al. <ref type="bibr" target="#b32">[33]</ref> developed an optimal algorithm for 2D cases and a practical algorithm for 3D cases. Carr et al. <ref type="bibr" target="#b5">[6]</ref> presented in his excellent algorithm, the state of the art in the contour tree construction for datasets of any dimension. Such algorithms had been limited to the extraction of the change in the number of connected components of level sets, until Pascucci et al. <ref type="bibr" target="#b18">[19]</ref> presented an effective algorithm for detecting the change in their topological types such as the isosurface genus. High-order interpolants <ref type="bibr" target="#b4">[5]</ref> have been tackled also for this purpose.</p><p>On the other hand, extracting a Reeb graph poses more complicated problems since it may contain cycles in itself. Shinagawa et al. <ref type="bibr" target="#b25">[26]</ref> presented an initial algorithm for constructing a Reeb graph by identifying the correspondence between cross-sectional contours along the height axis. Cole-McLaughlin et al. <ref type="bibr" target="#b7">[8]</ref> first presented an optimal algorithm for this purpose while the input data is limited to 2D manifold shapes. Recently, Pascucci et al. <ref type="bibr" target="#b20">[21]</ref> presented the most sophisticated on-line algorithm for extracting the Reeb graph from a set of nonmanifold simplicial decompositions.</p><p>Although existing algorithms are theoretically proven to extract contour trees (or Reeb graphs) from sample points of any dimension, the associated data structures are likely to become complicated especially for handling high-dimensional cases including time-varying volumes, due to severe limitations caused by the curse of dimensionality. Actually, existing methods <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b12">13]</ref> tackle the timevarying volumes by extracting a sequence of contour trees from their temporal snapshots and then tracking the transitions of the contour trees, since they rely on the premise that the sequence of isosurfaces at time steps is more informative than the hyper-isosurface of the original time-varying data. Note that Edelsbrunner et al. <ref type="bibr" target="#b10">[11]</ref> presented a theoretical analysis of time-varying data by taking account of the coherence in Betti numbers.</p><p>However, computing contour trees directly from multi-dimensional volumes can still allow us to effectively identify their global structures at first glance. Our approach solves this problem by first analyzing a manifold structure induced by the distribution of sample points, and then elongating its curvy embedding in the data domain to find its projection into a low-dimensional space. In this aspect, our approach is similar to Weber et al.'s work <ref type="bibr" target="#b34">[35]</ref> on finding a metaphor of volume topology as a topographic configuration. However, our approach differs in that it has high potential to overcome the curse of dimensionality through an effective coarse-to-fine analysis, while its associated implementation remains to be fairly simple even when handling highdimensional datasets. Our approach can also be applied to the extraction of Reeb graphs, while our focus in this paper is basically on the contour tree extraction for the analysis of volumes and their temporal behaviors. Simple examples of higher-dimensional data analysis and Reeb graph construction will be exhibited in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Manifold Learning</head><p>Manifold learning is a nonlinear dimensionality reduction scheme and has been intensively studied in recent years. The technique extracts manifold proximity inherited from the arrangement of the sample points embedded in a high-dimensional space, by constructing a proximity matrix among the samples in order to flatten the possible twisted embedding of the manifold in a low-dimensional space. Basically, manifold learning techniques are classified into two groups: local methods and global methods. The local methods first construct a similarity matrix by evaluating the closeness between each pair of samples, and then find their embeddings into a low-dimensional space by calculating the few smaller eigenvalues and their corresponding eigenvectors of the Laplacian matrix derived from the similarity matrix. This class of methods includes Laplacian eigenmaps <ref type="bibr" target="#b1">[2]</ref> and local linear embedding <ref type="bibr" target="#b22">[23]</ref>. On the other hand, the global methods employ a dissimilarity matrix instead, by estimating the distance between a pair of samples. Isomap <ref type="bibr" target="#b31">[32]</ref> employs the geodesic distance along the shortest path between the samples in this context and retrieves the induced manifold proximity using multidimensional scaling (MDS) <ref type="bibr" target="#b8">[9]</ref>.</p><p>For calculating an approximate contour tree from the given samples, our approach employs the dissimilarity-based global scheme. This is because the contour tree is a quotient space obtained by identifying points in the same connected component on each level-set, and thus we have to plot different sample points at the same position on the contour tree in the projected space. However, the similarity-based scheme cannot represent such identity appropriately since we have to set some entries of the similarity matrix to be infinity in that case, which incurs severe problems in actual numerical computations. Indeed, our approach is a sophisticated variant of Isomap where the metrics for evaluating local proximity and global geodesic distances are replaced, in order to effectively represent a quotient space such as a contour tree.</p><p>Primary:</p><formula xml:id="formula_0">⇒ ⇒ (pi,s(pi)) (pj,s(pj)) ⇒ O pi pj u v s (a) Initial state (c) After</formula><p>Step 2 (e) After Step 4 (g) After Step 6</p><p>Optional:</p><formula xml:id="formula_1">⇑ ⇑ ⇑ (pi,s(pi)) (pj,s(pj)) (b) After Step 1 (d) After</formula><p>Step 3 (f) After Step 5 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">OVERVIEW</head><p>Suppose that we try to extract an approximate contour tree from a given set of sample points ( <ref type="figure" target="#fig_0">Fig. 2a</ref>). Our process for plotting the contour trees consists of six steps, which can be summarized as follows:</p><p>1. (Optional) Downsample the given set of sample points with respect to the data domain ( Note that Steps 2, 4, and 6 in the above process correspond to the primary three steps in the original Isomap framework, while Steps 1, 3, and 5 are optional ones that we newly introduced to construct the hierarchical representation of data samples for efficient computation.</p><p>In what follows, without loss of generality, we explain our algorithm with an example of a height field in <ref type="figure" target="#fig_0">Fig. 2</ref>, and describe the primary steps in Section 4 and optional steps in Section 5, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">PLOTTING APPROXIMATE CONTOUR TREES</head><p>For plotting a given set of data samples to delineate the underlying contour tree in the Isomap framework, we have to evaluate the distance between each pair of samples by tracing the intermediate shortest path over the contour tree to be constructed. In our approach, we accomplish this by dividing the shortest path at intervening samples and accumulate the difference in scalar field value along the path, as shown in <ref type="figure" target="#fig_0">Fig. 2e</ref>. This is reasonable because we can locate any sample on the contour tree by referring to its relative position with respect to the other samples. This means that we can implement the above idea just by modifying the metric for evaluating geodesic distance between every pair of samples in the Isomap algorithm. Indeed, this is the core idea of this paper that faithfully follows the definition of the contour trees (Section 2.1). Furthermore, we also introduce a new metric for constructing the overall manifold proximity over the samples that allows us to contract the distribution of data samples effectively to a skeleton-like structure in the context of contour tree construction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Constructing Proximity of Sample Points</head><p>Our first task is to retrieve the local proximity of the underlying lowdimensional manifold induced by the distribution of given sample points. Here, a manifold is thought of as a topological space which is locally flat. However, the overall shape of the manifold induced by the given samples is often curved intricately in the higher-dimensional data domain, and thus must be globally flattened out by tracking its local proximity over the sample points. Suppose we have a set of m points {p 1 , . . . , p m }, where p i ∈ R n (i = 1, . . . , m) and its corresponding value of the scalar function s(p i ) ∈ R (i = 1, . . . , m). This means that we take (n + 1)-dimensional vectors (p i , s(p i )) ∈ R n+1 (i = 1, . . . , m) as the input samples. For finding the local proximity, we introduce a kernel-like neighborhood to each sample point <ref type="figure" target="#fig_0">(Fig. 2c)</ref>, and then construct a graph structure where its vertices represent the samples and an edge corresponds to the extracted proximity between some pair of the samples. The extracted proximity plays an important role in the next steps where we calculate the distance between sample points over the induced manifold. Note that we have no need to limit ourselves to the proximity derived from simplicial decomposition in this case; we can rather employ arbitrary proximity as shown in <ref type="figure" target="#fig_0">Fig. 2c</ref>.</p><p>For seeking adjacent points for each sample, we collect its first kclosest samples as adjacent points. However, for evaluating the closeness between a pair of samples, we do not use the ordinary Euclidean metric but employ the following new distance metric:</p><formula xml:id="formula_2">a|p i − p j | α + b|s(p i ) − s(p j )| β .<label>(1)</label></formula><p>Here, we have decided to set α = 1 and β = 2 while a = b(= 1) empirically, after having tried several combinations of parameters. This is reasonable in the sense that we can easily discriminate between sample points if they have different scalar field values since the above metric is more sensitive to the difference in the scalar field value. In our computational scheme, this new metric effectively contracts sample points having similar scalar values to a single point on the approximate contour tree. Searching for the first k-closest samples is also appropriate because we can still construct the local proximity robustly over the sample points even when their distribution is not uniform within the data domain. Note that we can choose the number k arbitrarily, while we explore a relatively small number for k that expands the proximity graph over all the given samples with the help of our prototype system. Especially for grid samples, we can use k = 8, 26, and 80 for samples on 2D, 3D, and 4D data domains as its upper limit, respectively, as described by the work on contour tree extraction from digital images <ref type="bibr" target="#b17">[18]</ref>. Basically, k should be larger as the corresponding distribution of samples become more irregular. The choice of these parameters for constructing local proximity will be further discussed in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Calculating Differences Between Sample Points</head><p>Having obtained a proximity graph over the sample points, we evaluate the difference between every pair of samples as their distance. For successfully elongating the manifold induced by the local proximity, we should calculate the geodesic distance along the corresponding shortest path passing over the induced manifold, rather than the simple Euclidean distance between the samples in the data domain.</p><p>Recall that we employ Isomap <ref type="bibr" target="#b31">[32]</ref> for this purpose, so that we can calculate the geodesic distance by accumulating the local interpoint distances along the corresponding shortest path. As described earlier, our distance metric for this purpose is just an accumulated difference in scalar field value along the shortest path. For example, suppose that the sequence of (k + 1) sample points</p><formula xml:id="formula_3">p i , p σ (1) , . . . , p σ (k−1)</formula><p>, p j constitutes the shortest path between p i and p j , where σ represents some mapping to the IDs of sample points. The resultant geodesic distance between p i and p j can be obtained as the summation of the absolute interpoint differences in scalar field value:</p><formula xml:id="formula_4">|s(p i ) − s(p σ (1) )| + • • • + |s(p σ (k−1) ) − s(p j )|.<label>(2)</label></formula><p>Note that the shortest path between every pair of samples can be easily identified by applying Dijkstra's shortest path finding algorithm to the proximity graph obtained in Step 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Embedding Samples into 3D Space</head><p>The above definition of the distance metric enables us to evaluate the relative positions of any pair of samples on a contour tree to be constructed. This means that we can embed the contour tree into a 2D plane while respecting such relative positions of every pair of samples, because the contour tree is a tree that can be embedded in a 2D plane without any self-intersections in nature. In the Isomap framework, we achieved this transformation using multidimensional scaling (MDS) <ref type="bibr" target="#b8">[9]</ref> algorithm that fits the distribution of high-dimensional data samples into a low-dimensional space by optimizing the associated distortion in a least-square sense. The MDS algorithm begins with constructing an m × m matrix D called a squared-distance (i.e., dissimilarity) matrix, where its (i, j)entry D i j represents the square of the geodesic distance from p i to p j (1 ≤ i, j ≤ m). The projection of the samples can be preformed by transforming D to its normalized version called an inner product matrix B through the double-centering formula:</p><formula xml:id="formula_5">B = − 1 2 CDC ⊤ , C = I m − 1 m 1 m 1 m ⊤ ,<label>(3)</label></formula><p>where I m is an m × m identity matrix and 1 m is an m × 1 column vector of m 1's. The projected coordinates of each sample are obtained by solving the eigenvalue problem of the normalized matrix B while we only need the first and second largest eigenvalues λ 1 and λ 2 and their corresponding eigenvectors e 1 and e 2 . Actually, we can transform the sample p i to its 2D coordinates:</p><formula xml:id="formula_6">(u i , v i ) = ( λ 1 e 1i , λ 2 e 2i )</formula><p>, where e ji represents the i-th entry of the j-th largest eigenvector e j . While this is sufficient to find the projected coordinates of the sample p i (i = 1, . . . , m), we also associate the scalar field value s(p i ) with the projected coordinates (u i , v i ) as its third coordinate in our approach as shown in <ref type="figure" target="#fig_0">Fig. 2g</ref>. This makes it possible to intuitively identify the topological transitions of hyper-isosurfaces according to the scalar field value. In this way, our sophisticated version of Isomap can successfully contract the distribution of the sample points in order to delineate the skeleton-like structure of the contour tree in the 3D space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">HIERARCHICAL REPRESENTATIONS</head><p>Since we have to solve the eigenvalue problem of the squared-distance matrix in the last primary step as described in the previous section, we like to keep the number of samples for calculating the matrix to be moderate without sacrificing too much accuracy. This idea is also justified by the fact that we cannot visually identify too detailed information obtained from a large number of samples. For the efficient computation even from a large number of samples, we introduce three optional hierarchical representations over the given samples, to enable adaptive sampling of the underlying contour tree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Downsampling the Data Domain</head><p>Data samples for a time-varying volume often exceed the available capacity of memory space on a standard PC. Since every detail of the large dataset cannot be visually revealed on an ordinary computer display, we first reduce, as Step 1, the original number of timevarying samples with respect to the data domain (i.e., R n ) if necessary <ref type="figure" target="#fig_0">(Fig. 2b)</ref>. This can be easily realized using iterative pyramid-like downsampling of data domain by a factor of 2 along each axis for grid samples, and random downsampling for scattered samples. This works well together with interactive segmentation of data samples to be equipped with in our system (cf. Section 6.2), since we can automatically restore the original density of samples through the coarseto-fine analysis. In our implementation, we progressively reduce the number of samples until it becomes smaller than the predefined threshold, where we judged the threshold 160, 000 is a good trade-off between the computation time and accuracy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Hierarchical Clustering of Samples</head><p>After having obtained the underling manifold proximity of data samples as a graph structure, we can introduce, as Step 3, different reduction of data sizes that adaptively samples over the underlying contour tree as the second hierarchical representation. In our approach, we implemented this hierarchy by referring to the progressive mesh scheme <ref type="bibr" target="#b14">[15]</ref>, where the edges of the mesh are iteratively contracted according to their weight values.</p><p>In our implementation, the weight for an edge should be defined to be the distance between the pair of two samples over the contour tree. Thus we employ the same metric as that for evaluating the geodesic distance, i.e., the difference in scalar field value (cf. Eq. (2)). Due to the definition of contour trees in Section 2.1, the metric will help us effectively contract sample points to a single point if they have almost the same scalar field values and stay spatially close to each other.</p><p>For the actual clustering of sample points, we first sort the list of edges in the proximity graph according to their weights in ascending order and fetch the edge at the top of the list. We then merge the corresponding two endpoints to create a new sample point as their cluster, and calculate its position as the barycenter of the contracted sample points <ref type="figure" target="#fig_0">(Fig. 2d</ref>). Successive application of these merging operations will provide a hierarchical clustering of sample points based on a minimum spanning tree strategy. In our implementation, the reduced number of clusters can be arbitrarily given by users, while it has been set to be 32, 768(= 2 <ref type="bibr" target="#b14">15</ref> ) by default, which appears to be again an optimal trade-off between speed and loss of detail in our experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Selecting Landmark Samples</head><p>As described in Section 4.3, we have to solve an eigenvalue problem to obtain the projection of contour tree in Step 6 of our process. This suggests that we can further reduce the computation time by restricting the size of the matrix to be as small as possible even when we utilize an available numerical solver for this problem. In our framework, this has been implemented as Step 5 by introducing the third hierarchical representation to the samples. In practice, we introduce a new hierarchical representation to select a specific number of sample points as the landmarks of the overall distribution of the given samples. Nonetheless, for better approximation of the underlying contour tree, the landmark samples should be arranged uniformly by referring to the relative geodesic distances obtained in Step 4.</p><p>Suppose that we have 8 samples together with the table of geodesic distances as shown in <ref type="figure" target="#fig_2">Fig. 3a</ref>, for example. Let us select #1 as the first landmark sample, while this can be arbitrarily chosen in this process. Geodesic distances from #1 to the other samples can be obtained just by referring to the first row of the above table, as shown in the top  <ref type="figure" target="#fig_2">(Fig. 3b</ref>). According to this result, we select #3 as the second landmark sample because it is the most distant sample from the previous landmark sample #1. We then seek the list of distances from #3 by referring to the third row of the table in <ref type="figure" target="#fig_2">Fig. 3a</ref>, and compose the list d 2 in such a way that each of its entry represents the distance from the closest landmark sample(s). This can be obtained by comparing the corresponding entries of d 1 and d 2 , and choosing the smaller distance for each sample <ref type="figure" target="#fig_2">(Fig. 3b</ref>). In the same way, we can obtain #5 as the next landmark sample. Repeating this process allows us to collect a specific number of landmarks, while the number can be specified again by users and has been set 256(= 2 8 ) empirically by default in our implementation. Note that we have no need to update the distances once the corresponding samples have been elected as the landmarks <ref type="figure" target="#fig_2">(Fig. 3b)</ref>. When we employ Step 5 to select the landmark samples, our process of projecting samples into 2D plane becomes two-fold: we first project the landmark samples into 2D plane, and then calculate the 2D positions of the remaining samples by referring to the 2D distribution of the projected landmarks. This is accomplished by employing the landmark MDS <ref type="bibr" target="#b9">[10]</ref>, which is computationally more efficient than the original MDS algorithm. Readers may refer to <ref type="bibr" target="#b9">[10]</ref> for more details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">USABILITY ENHANCEMENT</head><p>This section focuses on several enhancements of the present approach especially for increasing its usability in a visualization environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Direct Volume Rendering</head><p>A given set of samples is appropriately projected into the 3D space (u, v, s) in the sense that two samples are geometrically close to each other in that space if they are topologically close also on the corresponding contour tree. This leads us to an idea that we assign optical attributes such as color and opacity to the samples according to their geometric positions in that space, so that we can visually recognize how different the given two samples are by referring to their resultant colors. This naturally results in the accentuation of the topological structure of the given dataset for better analysis of its content, and allows us to equip our framework with a simple yet effective way of designing transfer functions in the phase of direct volume rendering, when compared with the existing sophisticated design schemes <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b35">36]</ref>. In our implementation, we employ the RGYB color geometry <ref type="bibr" target="#b33">[34]</ref> to the horizontal uv-square region where the red-green and yellow-blue color axes are aligned along the two diagonals. We further assign the opacity channel to the vertical axis s to make sample points of larger scalar field values more visible in the rendered images. <ref type="figure">Fig. 4</ref> shows a visualization result of the "neghip" dataset, where the spatial probability distribution of the electrons in a high potential protein molecule is simulated. We employed point splatting for our rendering scheme where each point is rendered as a Gaussian texture, and assigned different colors to the samples according to the above setting of optical attributes. Note that, in the figure, the color legend of the cubical frame on the right indicates the correspondence between the position of a plot in the cube and the color to be assigned.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Interactive Segmentation</head><p>The adaptive sampling efficiently limits the size of the eigenvalue problem to be moderate while we cannot extract local details of the contour tree since MDS is likely to identify the global structure of the given data in nature. This implies that closeup analysis of the contour tree will be helpful in finding its local branching structures at an appropriate level of detail (LoD). For this purpose, our prototype system makes it possible to segment the given set of sample points by interactively specifying the region of the contour tree. <ref type="figure">Fig. 5</ref> shows how we can carry out such segmentation of volume data in our system. First we specify a partial region of the contour tree we are interested in as shown in <ref type="figure">Fig. 5a</ref>, and then conduct the segmentation. The sample points involved in the segmented region can be further analyzed to find the local details of the contour tree as shown in <ref type="figure">Fig. 5b</ref>. Note that this segmentation is still possible even with the aforementioned hierarchical representations since our system retains the mapping from a representative plot on the contour tree to the original sample points. This closeup operation compensates for the loss of the local details in our approximate representation of contour trees, and further provides an effective LoD capability especially for the analysis of large-scale datasets. Global analysis with a contour tree, (b) the segmented time-varying volume, and (c) its temporal behavior. The interaction between the proton and hydrogen-atom has been successfully identified.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS AND DISCUSSIONS</head><p>This section provides several experimental results in order to demonstrate the capability of our approach. Our prototype system has been implemented on a laptop PC with Intel Core2Duo T9500 CPUs running at 2.60GHz and 4GB RAM. All the experiments presented here were conducted on this computational environment. Note that in our implementation we employed Boost Graph Library for representing proximity graphs and a numerical library SLEPc <ref type="bibr" target="#b13">[14]</ref> to solve the eigenvalue problems. To search for the nearest neighbors, we employed a kD-tree data structure in our implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Results</head><p>We tested our approach with two time-varying volume datasets. <ref type="figure" target="#fig_4">Fig. 6</ref> shows the result of a time-varying volume dataset where the proton and hydrogen-atom collision is simulated <ref type="bibr" target="#b29">[30]</ref>. Since a time-varying dataset usually contains a large number of samples, our system subsampled the original resolution 80 3 × 16 to 20 3 × 16 in Step 1 (cf. Section 5.1) while the system automatically increases the resolution up to the original once feature subvolumes have been specified in the analysis. <ref type="figure" target="#fig_4">Fig. 6a</ref> shows a snapshot where the global analysis of the timevarying volume was conducted with an approximate contour tree. By segmenting the branch of the tree, we can further examine the details of the segmented volume that corresponds to the interaction between the proton and hydrogen-atom as shown in <ref type="figure" target="#fig_4">Fig. 6b</ref>. Tracking the temporal behavior of this subvolume provides us with significant features of this time-varying dataset as shown in <ref type="figure" target="#fig_4">Fig. 6c</ref>, where the positive charge of the proton significantly influences the behavior of an electron around the hydrogen-atom. <ref type="figure" target="#fig_5">Fig. 7</ref> exhibits the other example where the implosion in laser fusion is simulated <ref type="bibr" target="#b23">[24]</ref>. Here, the corresponding time-varying data contains 64 3 × 16 voxels. Again, in this example, the system reduced its size to 16 3 × 16 in Step 1 while it automatically retrieves the original resolution again when the user goes into the analysis of local details. In this example, it is important to track the temporal behavior of the contact surface between the inner fuel ball and outer pusher during the stagnation phase. In the global analysis of the given volume <ref type="figure" target="#fig_5">(Fig. 7a)</ref>, we can locate the contact surface at a top branch in the constructed approximate contour tree. By extracting a subvolume corresponding to the branch <ref type="figure" target="#fig_5">(Fig. 7b)</ref>, we can identify the timing of implosion between the third and fourth snapshots through the temporal transition <ref type="figure" target="#fig_5">(Fig. 7c)</ref>.</p><p>We also analyzed the scattered samples of the 7D blobby function f : R 7 → R, which consists of a weighted sum of Gaussian functions and has two maxima and two minima in the target 7D data domain as shown in <ref type="figure" target="#fig_6">Fig. 8a 1</ref> . Even from this high-dimensional samples, we can successfully extract the approximate contour tree as shown in <ref type="figure" target="#fig_6">Fig. 8b</ref>, which reveals the potential of the present approach. <ref type="table" target="#tab_1">Table 1</ref> tabulates the computation times required for the analysis of the datasets used in our experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Discussions</head><p>Correctness of approximate contour trees: Our approach to contour tree construction is simple to implement as compared with any other existing approaches, and yet powerful enough to analyze highdimensional cases including time-varying datasets. Indeed, in <ref type="figure">Fig. 9</ref>, the "neghip" <ref type="figure">(Fig. 9a)</ref> and "nucleon" <ref type="figure">(Fig. 9b)</ref> datasets were chosen to demonstrate that our manifold learning-based approach can extract the approximate contour trees, which are substantially identical to those extracted by Carr's graph-based approach <ref type="bibr" target="#b5">[6]</ref> except for a small number of minor details. Note that the graph-based representations were obtained in a fine-to-coarse fashion in that all the local features were extracted first, and then the global skeleton was obtained through graph simplification process <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b28">29]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Dataset</head><p>Dim. # of samples k</p><p>Step 1</p><p>Step 2</p><p>Step 3</p><p>Step 4</p><p>Step  Coarse-to-fine vs. Fine-to-Coarse: The contour trees obtained using our framework are only approximate representations while users can freely select specific parts of the trees to investigate local subvolumes at finer levels. This coarse-to-fine analysis can successfully cut out significant features even from high-dimensional data and bring out its visual appearance in 3D space. The present approach employs an eigensolver for locating the representative samples on the approximate contour tree, and thus the size of the samples should be kept moderate. Nonetheless, the eigenanalysis-based scheme can extract the macroscopic structure of the representative samples only from their mutual positional relationships over the underlying manifold, without regard to minor local details. This is also justified by the fact that our visual ability to recognize features at a glance has its own limit in terms of spatial frequency. Therefore, the information drill-down approach to zooming up specific microscopic features on demands would be more effective in our context <ref type="figure">(Fig. 5</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Distribution of input samples and neighborhood definition:</head><p>The input data is assumed to be uniformly distributed over the underlying manifold in our approach, while irregular samples can also be handled since we introduced Eq. (1) as the new metric to evaluate the local proximity. If we use the ordinary Euclidean metric instead, we cannot fully contract the distribution of samples to a contour tree around its branching parts as shown in <ref type="figure">Fig. 10a</ref>. This is because, with the ordinary Euclidean metric, different connected components at the same scalar level are likely to be merged by way of such branching parts during the search for the k-closest neighbors. The coordinates of the samples with respect to each axis are normalized in the above results while we may have to use different normalization to spatial and temporal dimensions. The results are also influenced by the number k of the nearest neighbors. Basically, as shown in <ref type="figure">Figs. 10b and 10c</ref>, the approximate contour tree becomes fat as k decreases while some branches or cycles may also be excessively contracted if k becomes large. See also <ref type="figure">Fig. 1b (k = 14)</ref> for comparison. Our system optionally provides us with a means of semi-automatically finding an appropriate number for k, since we can reduce the computation time for the adaptive clustering when k is relatively small as shown in <ref type="table" target="#tab_1">Table 1</ref>. Ability to extract Reeb graphs: In addition, as described in Section 2, our method can extract Reeb graphs from surfaces with nonzero genus as well. <ref type="figure">Fig. 11</ref> shows an example of the extracted Reeb graph obtained from a teapot-like object using our prototype system. Highlighting the corresponding portion in red helps us visually confirm that (a) (b) <ref type="figure">Fig. 9</ref>. Comparison with a graph-based approach <ref type="bibr" target="#b5">[6]</ref>: (a) "Neghip" (65 3 samples) and (b) "Nucleon" (41 3 samples). The left images show approximate contour trees extracted with our approach while the right show those obtained by the graph-based approach <ref type="bibr" target="#b5">[6]</ref>. The labels indicate the correspondence between the critical points while numerical values (in blue) represent the normalized scalar field values.</p><p>the complicated topological transition of cross-sectional contours according to the height was correctly captured in our system. This example shows that our framework is applicable to surfaces with nonzero genus while the cycle-induced unmatured layout and colorization of projected samples could still be improved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>This paper has presented an approach to plotting approximate contour trees by embedding a set of sample points into a low-dimensional space using a variant of Isomap. Our process for the contour tree construction consists of extracting local manifold proximity among the sample points, flattening the curvy embedding of the manifold in the high-dimensional space, and projecting it into the low-dimensional space for our visual analysis. Our contribution lies in the sophistication of the ordinary distance metric of Isomap, which actually provides us with an effective means of contracting sample points to the contour tree.</p><p>Step-by-step hierarchical representations enable us to shift our reference space from the data domain to contour tree when adaptively resampling the original distribution of samples, which keep the size of the problem to be moderate for reducing the computational cost. Our future extension includes finding more attractive embeddings of contour trees into 3D space. Extracting the explicit graph structure from the approximate contour tree representation is beneficial for further quantitative analysis of extracted topological features. If we come up with other distance metrics to contract high-dimensional scientific datasets, it will provide more effective ways to understand the contents of the given datasets. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Process for plotting approximate contour trees. (a) Initial samples. (b) A downsampled version (optional). (c) Manifold proximity constructed over the samples. (d) Hierarchical clusters of sample points (optional). (e) Accumulated difference in scalar field value along the shortest path. (f) Selection of landmark samples (optional). (g) An approximate contour tree embedded in 3D space. The upper row represents the primary flow of our approach while the bottom row depicts the optional steps for introducing hierarchical representation of data samples.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Fig. 2b); 2. (Primary) Construct local manifold proximity of input sample points(Fig. 2c); 3. (Optional) Adaptively merge sample points to find a specific number of representative clusters of sample points(Fig. 2d); 4. (Primary) Calculate the distance (i.e. dissimilarity) between every pair of the sample points along the corresponding interpoint shortest path(Fig. 2e); 5. (Optional) Select a small number of landmark samples that are spaced uniformly over the underlying contour tree(Fig. 2f); 6. (Primary) Project the landmark samples into 3D space first and then locate the remaining samples by referring to the arrangements of projected landmark samples(Fig. 2g).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Selecting landmark samples that are uniformly distributed over the contour tree. (a) The table of relative geodesic distances between 8 samples. (b) The updates of the distance of each sample from its closest landmark sample. row of Fig. 3b. Let d i denote the list of geodesic distances of each sample from its closest landmark sample after the i-th landmark selection. This means that d 1 is equivalent to the list of geodesic distances from #1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .Fig. 5 .</head><label>45</label><figDesc>Direct volume rendering of the "neghip" dataset (65 3 samples) with point splatting (left) and its corresponding approximate contour tree (right). Interactive segmentation with an approximate contour tree for LoD analysis: (a) Specifying a subvolume with the contour tree, and (b) a more detailed analysis of the segmented subvolume in red in (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Proton and hydrogen-atom collision (80 3 × 16 samples): (a)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Implosion in laser fusion (64 3 × 16 samples): (a) Global analysis with a contour tree, (b) the segmented time-varying volume, and (c) its temporal behavior. Complicated temporal behavior of the contact surface between the inner fuel and outer pusher has been detected.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 8 .</head><label>8</label><figDesc>Analyzing scattered samples of a 7D function (32,768 samples): (a) Rendered image of the samples in the space spanned by the first three coordinates, and (b) its corresponding approximate contour tree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .Fig. 11 .</head><label>1011</label><figDesc>Choice of parameters for proximity metric: Approximate contour trees obtained using (a) the Euclidean distance metric for local proximity, (b) an insufficient number of k-neighbors (k = 6), and (c) an excessive number of k-neighbors (k = 80). SeeFig. 1b (k = 14)for comparison. Analyzing surfaces with non-zero genus: (a) A teapot-like object (5,600 samples) and (b) its approximate Reeb graph.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>and Masato Okada are with the University of Tokyo, E-mail: takahashis@acm.org, okada@k.u-tokyo.ac.jp. • Issei Fujishiro is with Keio University, E-mail: fuji@ics.keio.ac.jp. Manuscript received 31 March 2009; accepted 27 July 2009; posted online 11 October 2009; mailed on 5 October 2009. For information on obtaining reprints of this article, please send email to: tvcg@computer.org .</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Computation times. (in seconds)</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">The formula of this function appears as a supplemental material.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We thank Reiji Suda for his guidance in exploring numerical eigensolvers. Haruhisa Ishida and Jun Kobayashi helped us implement an early version of the prototype system. We also thank anonymous reviewers for their valuable comments. This work has been partially supported by Japan </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The contour spectrum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis.&apos;97</title>
		<meeting>IEEE Vis.&apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="167" to="173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Laplacian eigenmaps for spectral embedding and clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Belkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Niyogi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computations</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1373" to="1396" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Hybrid techniques for real-time radar simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Boyell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Ruston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Proc. Fall Joint Computer Conf</title>
		<imprint>
			<date type="published" when="1963" />
			<biblScope unit="page" from="445" to="458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Path seeds and flexible isosurfaces using topology for exploratory visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Joint Eurographics-IEEE TCVG Symp. Visualization</title>
		<meeting>Joint Eurographics-IEEE TCVG Symp. Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">285</biblScope>
			<biblScope unit="page" from="49" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Representing interpolant topology for contour tree computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Topology-Based Methods in Visualization II</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="59" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Computing contour trees in all dimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Axen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry: Theory and Applications</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="75" to="94" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Simplifying flexible isosurfaces using local geometric measures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Van De Panne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis</title>
		<meeting>IEEE Vis</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="497" to="504" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Loops in Reeb graph of 2-manifolds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Cole-Mclaughlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Harer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Natarajan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 19th ACM Symp</title>
		<meeting>19th ACM Symp</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="344" to="350" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Multidimensional Scaling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cox</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Chapman &amp; Hall</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Global versus local method in nonlinear dimensionality reduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Tanenbaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Neural Information Processing Systems Conf</title>
		<meeting>Neural Information essing Systems Conf</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="705" to="712" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Timevarying Reeb graphs for continuous space-time data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Harer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mascarenhas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 20th ACM Symp</title>
		<meeting>20th ACM Symp</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="366" to="372" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Volume data mining using 3D field topology analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Azuma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE CG&amp;A</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="46" to="51" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">T-map: A topological approach to visual exploration of time-varying volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Otsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Int&apos;l Symp. High Performance Computing</title>
		<meeting>6th Int&apos;l Symp. High Performance Computing</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="volume">4759</biblScope>
			<biblScope unit="page" from="176" to="190" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">SLEPc users manual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Hernandez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Roman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tomas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vidal</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<pubPlace>Valencia, Spain</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Univ</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH96</title>
		<meeting>SIGGRAPH96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Modeling and visualization of time-varying topology transitions guided by hyper Reeb graph structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertram</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Computer Graphics and Imaging (CGIM)</title>
		<meeting>Computer Graphics and Imaging (CGIM)</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="15" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Implementing time-varying contour trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mascarenhas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 21st ACM Symp. Computational Geometry</title>
		<meeting>21st ACM Symp. Computational Geometry</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="370" to="371" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Description of digital images by region-based contour trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mizuta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Matsuda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int&apos;l Conf. Image Analysis and Recognition</title>
		<meeting>Int&apos;l Conf. Image Analysis and Recognition</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">3656</biblScope>
			<biblScope unit="page" from="549" to="558" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Efficient computation of the topology of level sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Cole-Mclaughlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis</title>
		<meeting>IEEE Vis</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="187" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Multi-resolution computation and presentation of contour trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Cole-Mclaughlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scorzelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IASTED Conf. Visualization, Imaging, and Image Processing</title>
		<meeting>IASTED Conf. Visualization, Imaging, and Image essing</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="452" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Robust on-line computation of Reeb graphs: Simplicity and speed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scorzelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mascarenhas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<publisher>ACM TOG</publisher>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page">58</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Sur les points singuliers d&apos;une forme de pfaff completement integrable ou d&apos;une fonction numerique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reeb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comptes Rendus Acad. Sciences Paris</title>
		<imprint>
			<biblScope unit="volume">222</biblScope>
			<biblScope unit="page" from="847" to="849" />
			<date type="published" when="1946" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Nonlinear dimensionality reduction by locally linear embedding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roweis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Saul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">290</biblScope>
			<biblScope unit="issue">5500</biblScope>
			<biblScope unit="page" from="2323" to="2326" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">9 tflops threedimensional fluid simulation for fusion science with HPF on the earth simulator</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sakagami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Murai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yokokawa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM/IEEE SC2002</title>
		<meeting>ACM/IEEE SC2002</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">14</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Surface coding based on Morse theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shinagawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">L</forename><surname>Kergosien</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Kunii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE CG&amp;A</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="66" to="78" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Constructing a Reeb graph automatically from cross sections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shinagawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Kunii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE CG&amp;A</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="44" to="51" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Time-varying contour topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B.-S</forename><surname>Sohn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TVCG</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="14" to="25" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Algorithms for extracting correct critical points and constructing topological graphs from discrete geographical elevation data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ikeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shinagawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Kunii</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ueda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="181" to="192" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Topological volume skeletonization using adaptive tetrahedralization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Geometric Modeling and Processing</title>
		<meeting>Geometric Modeling and essing</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="227" to="236" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Topological volume skeletonization and its application to transfer function design. Graphical Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">66</biblScope>
			<biblScope unit="page" from="22" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Introducing topological attributes for objective-based visualization of simulated datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Volume Graphics</title>
		<meeting>Volume Graphics</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">236</biblScope>
			<biblScope unit="page" from="137" to="145" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">A global geometric framework for nonlinear dimensionality reduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Langford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">290</biblScope>
			<biblScope unit="issue">5500</biblScope>
			<biblScope unit="page" from="2319" to="2323" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Contour trees and small seed sets for isosurface traversal</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Van Kreveld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Oostrum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th ACM Symp</title>
		<meeting>13th ACM Symp</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="212" to="220" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">The RGYB color geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ware</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cowan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM TOG</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="226" to="232" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Topological landscapes: A terrain metaphor for scientific data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TVCG</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1416" to="1423" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Topology-controlled volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Dillard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TVCG</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="330" to="341" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Exploring scalar fields using critical isovalues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis</title>
		<meeting>IEEE Vis</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Extraction, visualization and quantification of protein pockets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Annual Int&apos;l Conf. Computational System Bioinformatics (CSB2007)</title>
		<meeting>6th Annual Int&apos;l Conf. Computational System Bioinformatics (CSB2007)</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="275" to="286" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
