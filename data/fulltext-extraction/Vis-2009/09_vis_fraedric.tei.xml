<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Exploring the Millennium Run -Scalable Rendering of Large-Scale Cosmological Datasets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roland</forename><surname>Fraedrich</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Schneider</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rüdiger</forename><surname>Westermann</surname></persName>
						</author>
						<title level="a" type="main">Exploring the Millennium Run -Scalable Rendering of Large-Scale Cosmological Datasets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Particle Visualization</term>
					<term>Scalability</term>
					<term>Cosmology</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Visualizations of the Millennium Simulation with more than 10 billion particles at different scales and a screen space error below one pixel. On a 1200x800 viewport the average frame rate is 11 fps.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Particle-based cosmological simulations play an eminent role in reproducing the large-scale structure of the Universe. Today, numerical simulations of the dark-matter distribution using as much as billions of particles have been carried out, and the results of these simulations have to be analyzed for a better understanding of the structure formation process in the Universe.</p><p>One of the most popular simulations is the Millennium Run, where more than 10 billion particles have been used to trace the evolution of the matter distribution in a cubic region of the Universe with over 2 billion light-years on a side, resulting in terabytes of stored output. The simulation itself ran 28 machine days at 0.2 Tflops using 1 Tbyte RAM. By comparing the simulation results to large observational surveys, the physical processes underlying the buildup of real galaxies and black holes can be clarified. Especially by analyzing the substructure in simulated halos and subhalos, the hope is to prove or contradict recent claims and hypotheses on the matter distribution in the Universe.</p><p>• Roland Fraedrich (E-mail: fraedrich@tum.de), Jens Schneider (E-mail:</p><p>jens.schneider@tum.de), and Rüdiger Westermann (E-mail: westermann@tum.de) are with the Computer Graphics and Visualization Group, Technische Universität at München. By today, for the largest available cosmological simulations an interactive visual analysis is not feasible, and the exploration is mainly performed via database queries, data mining techniques, and visualizations of vastly reduced subsets of the full dataset. On the other hand, it can be perceived that an even stronger awareness of the importance of interactive visualization techniques for data exploration is growing in the community. One important reason is that especially in cosmological data it is not yet completely understood what the relevant scientific information in the vast amount of stored output is. This makes it difficult to apply fully automatic analysis techniques, which typically need a precise specification of the structures to search for. As a consequence, the community increasingly tries to put experts and their capabilities into the center of the exploration process, to support them by visualization tools that can effectively exploit the humans' perceptual and cognitive abilities, and to let them interactively guide the search process.</p><p>To achieve interactive visualizations of cosmological particle simulations as large as the Millennium Run, we have to consider scalability with respect to the size of the data in the whole visualization process. From the massive amount of particles to be visualized it becomes clear that the challenge in cosmological visualizations today is to maintain interactive frame rates for datasets that vastly exceed the available main memory. Since the number of primitives to be sent to the GPU for rendering is significantly increasing, too, the visualization performance is strongly limited by bandwidth restrictions. In addition, even on recent high-end graphics accelerators (GPU) geometry throughput and rasterization load induced by particle rendering considerably limit the performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">CONTRIBUTION</head><p>The primary focus of this paper is to address scalability limitations in the visualization of very large cosmological particle simulations and to investigate how far one can reach on recent PC architectures by reducing these limitations. The methods we propose are based on a hierarchical encoding of particle positions and attributes into a tree data structure. This data structure stores partitions of the underlying domain at ever finer resolution, with the sub-domains in each partition being quantized uniformly using 8 bit per coordinate component. The partitions are recursively refined until the spatial resolution of the simulation is reached.</p><p>To reduce the number of particles at each resolution level, particles falling into the same quantization bin are merged if the rendering of the resulting particle at this level does not introduce a visible error. By this means, we build a level-of-detail representation that allows reducing aliasing artifacts as well as the number of rendered primitives. In combination with a page-tree that stores a number of adjacent subdomains in one contiguous memory block, memory bandwidth and the number of disk seek operations can be reduced considerably.</p><p>Besides their coordinate, particles of cosmological simulations carry floating point attributes such as mass density, velocity dispersion, and radius, which significantly increase the data to be stored and transferred. To address this problem, we employ a vector quantization scheme after the attributes have been scaled logarithmically. Since the quantized data can be decoded efficiently on the GPU, we can trade CPU-GPU data transfer for GPU processing, resulting in three times faster streaming of large particle sets from disk into GPU memory.</p><p>Regardless of these efforts, geometry throughput and rasterization of particle splats on the GPU still remain critical bottlenecks for interactive visualizations. To further reduce this problem we propose techniques to discard particles from the rendering process as early as possible by fine-grain view-frustum culling and presence acceleration. The latter approach takes advantage of the fact that it is not necessary to render many particles in regions with small contributions to the integrals over physical quantities. These problems as well as ideas for further optimizations will also be addressed in the discussion at the end of this paper.</p><p>The remainder of this paper is organized as follows: In the next section we review previous work that is related to ours. An overview of the Millennium Simulation and the visualization technique we employ are given in Sections 4 and 5. Subsequently, we present the components of the proposed scalable rendering pipeline and discuss our strategies for data representation (Section 6), memory management (Section 7), and rendering <ref type="bibr">(Section 8)</ref>. In Section 9 we analyze the different components of our method and the framework as a whole. We conclude the paper with an outline of future research in this field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RELATED WORK</head><p>Today, interactive data visualization is established as a key technology for the exploration of large and complex-structured datasets as they arise in almost all areas of science and engineering. There is a vast body of literature related to visual data analysis that we will not attempt to overview here, however <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b15">16]</ref> discuss many related issues and provide useful references on these subjects.</p><p>Recent work on the visualization of astronomical data include the development of infrastructures for high-performance computing environments <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b18">19]</ref>, volume rendering techniques for the visualization of star formation and planetary nebulae <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b16">17]</ref>, methods for visualizing uncertainty in large-scale astrophysical environments <ref type="bibr" target="#b11">[12]</ref>, and the comparison of different simulations by comparative visualization <ref type="bibr" target="#b0">[1]</ref>.</p><p>Other approaches underline the importance of user-tailored visualization and interaction techniques in the field of astrophysics, like the development of scalable WIM (world-in-miniature) user interfaces that facilitate travel and wayfinding at large spatial scales <ref type="bibr" target="#b12">[13]</ref>, or user-controlled interaction that supports multiple abstraction views of galaxy clusters and the selection of structures in spatial sub-domains <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b20">21]</ref>.</p><p>For particle data from cosmological simulations, software rendering <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b6">7]</ref> is still most commonly used for visual data analysis. Efficient multi-resolution point splatting techniques based on spatial subdivision schemes have been proposed in <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b25">26]</ref>, but the size of today's simulations demands scalable out-of-core rendering approaches, which support these visualization techniques by efficient data management and transfer <ref type="bibr" target="#b3">[4]</ref>. To cope with this ever increasing amount of data to be visualized, parallel visualization systems <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b10">11]</ref> and infrastructures for visual data mining in distributed data sources <ref type="bibr" target="#b2">[3]</ref> have been proposed so far, including mechanisms for data handling, querying, and interaction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">THE MILLENNIUM RUN</head><p>The goal of the Millennium Simulation Project 1 is to investigate the evolution of the Universe based on a Lambda-Cold Dark Matter (ΛCDM) model of the accelerating expansion of the universe. For this purpose, the growth of dark matter structure was traced from redshift z = 127 to the present by using a N-body/SPH-simulation in which the collisionless dark matter fluid was represented by a set of discrete point particles. With a total number of 2160 3 ≈ 10 10 particles, distributed in a periodic box of 2.23 billion lightyears, this is one of the largest particle-based simulations ever performed. For a detailed description of the numerical code used to compute the Millennium N-body simulation as well as the scientific results of the Millennium Project let us refer to the work by Springel et al. <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b24">25]</ref>.</p><p>In order to investigate the time-dependent dark matter distribution, the intermediate results of the simulation have been stored in 64 snapshots. Besides its own 3D floating point coordinate, each particle in a single snapshot carries additional physical quantities such as an adaptive smoothing radius, density, and velocity dispersion, each of which is encoded in one floating point value. For a single snapshot this results in a total amount of memory of 225 GB.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">COSMOLOGICAL VISUALIZATION</head><p>The visualization technique we propose aims at showing the dark matter distribution in 3D space. It follows a visualization approach for cosmological particle data that is commonly used for offline visualizations of the Millennium Simulation <ref type="bibr" target="#b23">[24]</ref>. In this approach, the squared dark matter density is integrated along the lines of sight and scaled logarithmically to increase the contrast in pixel brightness. The dark matter velocity dispersion, i.e., the spread of velocities of stars or galaxies in a cluster, is weighted by the squared dark matter density and averaged along the lines of sight. It is encoded into the color hue using a particular transfer function to emphasize regions of high dispersion.</p><p>It is clear that due to the nature of the SPH-model underlying the Millennium Simulation, along the lines of sight the physical quantities have to be reconstructed locally at the sampling points using an SPH kernel interpolation scheme. Such a scheme, however, requires access to all particles within the kernel support, meaning that extensive search operations supported by acceleration structures like kD-tress have to be performed. Unfortunately, such a resampling scheme can by no means be fast enough to be used in an interactive application.</p><p>The common approximation is thus to splat each particle separately onto the image plane, and to accumulate the quantities on a per-pixel basis before they are scaled appropriately. <ref type="figure">Figure 1</ref> shows some images of the Millennium Simulation at different scales, which have been generated by this approach. Even though this approach is not physically correct, it has been shown to produce visualizations that are very similar to those generated by the SPH-based approach and allow for an equally good analysis of the data. In this approach, in analogy to the behavior of light, the total density of a single particle falls off as the square of its distance to the viewer. An additional fall-off is usually applied to fade-out the density field beyond some depth of interest.</p><p>The major requirement on a cosmological visualization technique capable of dealing with data as large as the Millennium Simulation is scalability throughout the entire visualization pipeline, including the streaming of the data from the hard disk to the graphics processor. The major constraints in this pipeline are memory and bandwidth limitations, disk access latency, and the geometry and rasterization throughput on current graphics hardware. According to these constraints, an efficient cosmological visualization technique has to be built on the following components:</p><p>• A data representation that minimizes the amount of data to be transferred and rendered while preserving visual quality.</p><p>• An efficient out-of-core and in-core data management to quickly select and access the data.</p><p>• A rendering scheme that can effectively exploit the capabilities of current graphics accelerators to enable interactive visual data exploration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DATA REPRESENTATION</head><p>Our visualization technique builds on a multi-resolution representation of large particle sets in combination with a data-specific compression scheme. The multi-resolution representation is stored in an adaptive octree data structure. Thus, accessing the data that is stored in this structure exhibits O(log 2 (N)) complexity (with N being the grid size corresponding to the maximum refinement level). In the current application we refine up to the spatial resolution of the simulation, i.e., to an effective grid size of 128K <ref type="bibr" target="#b2">3</ref> . The sub-spaces represented by each octree node are discretized into regular grids of size 8 3 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Multi-Resolution Hierarchy</head><p>The multi-resolution hierarchy is constructed bottom-up in a preprocess, i.e., the original particle data is stored in the nodes at the finest level of the tree. At the coarser hierarchy levels, particles from the next finer level are either merged, copied, or omitted depending on their radius of influence and their density. The particular LOD-construction method we employ is described in Section 6.3. <ref type="figure" target="#fig_1">Figure 2</ref> shows three nodes of the multi-resolution hierarchy, each of which represents a part of the region encoded in the previous node at increasing resolution. As the entire dataset has a size of 225 GB, we split the spatial domain into 8 3 blocks to fit the corresponding data into main memory. For each block we compute the respective subtree of the octree in parallel. Upon completion of this process all subtrees are merged into one octree, which is then re-organized into a page tree to accommodate faster data access. The construction of this page tree is discussed in Section 7.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">LOD-Selection</head><p>Given the size q of the quantization cells at a particular LOD, the maximum world space error that is introduced by quantizing particle coordinates to cell centers is δ = √ 3 • q/2. During rendering a strategy is required to select those octree nodes that result in a sub-pixel error on the screen, and, thus, yield a visually continuous LOD rendering that is lossless wrt. the current image resolution.</p><p>Given the world space error δ , the vertical screen resolution res y , and the vertical field of view f ovy, we can determine the minimum distance d min to the viewer as of which a node can be rendered before it has to be refined:</p><formula xml:id="formula_0">d min = δ • res y 2 • tan ( f ovy/2) • τ.</formula><p>Here, τ &lt; 1 is the maximum allowed screen-space error in pixels. To maintain this error during rendering, each node that is closer to the viewer than d min has to be replaced by its 8 children.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Particle Thinning</head><p>The LOD-selection strategy tries to always render octree nodes whose projection is approximately equal or less than one pixel. Taking this into account, particles can be classified with respect to the number of pixels they would cover if they were rendered at a particular level: points cover at most one pixel and sprites cover more than one pixel. Since all points in the same quantization bin will fall into the same pixel on the screen, they can be merged to one single point (see <ref type="figure" target="#fig_2">Figure  3</ref>). To determine the dark matter density and velocity dispersion of this point wrt. to the individual contributions, an density-weighted filtering is computed in a pre-process.</p><p>Sprites in one cell, on the other hand, can only be merged without visual loss if the differences of their radii h i and h j is not perceivable during rendering (see <ref type="figure" target="#fig_2">Figure 3</ref>). For this purpose, we use the fusion criterion |h i − h j |/q &lt; ε, where ε is a sufficiently small number. If this condition is not fulfilled, the particles are stored separately at the respective level. Note that due to the local coherence of smoothing lengths in a SPH simulation, almost identical radii within one cell are very likely to occur, particularly at finer resolution levels. In order to further decrease the number of particles per node, we introduce a rule for discarding particles depending on their density contribution. Based on d min and the quadratic density fall-off, the projected squared dark-matter density ρ 2</p><p>i of a particle on the screen can be computed. Together with the minimum density for color coding ρ min , we discard a particle if ρ 2 i &lt; ρ 2 min /n. Here, n can be interpreted as the maximum number of discarded particles whose sum of squared densities is still smaller than ρ min . These particles do not have any influence on the final image.</p><p>The easiest way to find a reasonable value for n is to simulate the criterion on the GPU and to experiment with different values. As an objective criterion, the scene can be rendered with and without the threshold in order to compute the image difference. This procedure can be repeated for a certain number of different views or while flying through the dataset until a good threshold is found.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Attribute Compression</head><p>Besides their coordinates, the particles stored in the multi-resolution representation carry floating point attributes such as mass density, velocity dispersion, and radius. Due to the nature of the simulation these properties are stochastically dependent. Therefore, to reduce the memory required to store these attributes we employ a vector quantization scheme after the attributes have been scaled non-linearly.</p><p>As can be seen in the histogram in <ref type="figure" target="#fig_3">Figure 4</ref>, all three parameters have a high dynamic range. A standard vector quantizer, however, is designed to minimize the sum of squared errors. This is problematic because the same absolute distance between each data point and its respective quantization point is thus deemed acceptable by the vector quantizer. Especially with regard to the logarithmic color coding of squared dark matter density and velocitiy dispersion during rendering, it is a much better choice for the quantizer design to minimize the relative error, because large absolute errors are not acceptable for small values. From the histogram it is apparent that quantizing logarithms of values will drastically decrease relative errors, albeit at the cost of increasing the sum of squared errors. By logarithmizing (base 2) each component of the 3D data points prior to quantization we can reduce the maximum relative error from 3.63 • 10 39 % to about 540% (average relative error from 3.63 • 10 39 % to 13%) for an 8 Bit per 3D vector quantization. Note that this does not affect the coding efficiency, since it is sufficient to exponentiate the codebook entries prior to decoding. Also note that changing the base of the logarithm allows a further trade-off between minimization of squared errors and relative errors. <ref type="figure" target="#fig_4">Figure 5</ref> presents the resulting distortion induced by vector quantization using codebooks of varying size. As will be shown in the results, by using an 8 bit index with an average relative error of 13% we can already generate images which can hardly be distinguished from those that have been generated using the original data. By increasing the bit depth to 12 or 16 bit, the error can be reduced to 5% or 2% respectively. Since the quantized data can be decoded efficiently on the GPU by means of texture lookups, we can trade CPU-GPU data transfer for GPU processing, resulting in three times faster streaming. For details of the vector quantization we refer to Schneider et al. <ref type="bibr" target="#b21">[22]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">MEMORY MANAGEMENT</head><p>In every frame, the octree is traversed in a top-down fashion on the CPU to determine the nodes that have to be rendered. Of these, those nodes that are not residing in main memory have to be read from disk. During tree traversal, the minimum distance criterion (see Section 6.2) is used to determine the LOD for the current view, and once a node has been determined the traversal in the current sub-tree can be stopped. In addition, view frustum culling is applied to discard those subtrees that are not visible.</p><p>Even though frame-to-frame coherence significantly reduces the amount of data to be read from disk, for very large datasets and highresolution display systems there is still a vast amount of data that has to be streamed from disk to CPU memory in an interactive visual exploration session. In the following we describe a number of mechanisms to keep the impact of data streaming on the frame rate as minimal as possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Disk Transfer</head><p>To reduce the number of disk seek operations and thus to increase the data throughput from disk to main memory, in each octree level the nodes having the same parent are packed together and stored as a single data block on disk. We refer to these collections as pages and treat them as one entity in terms of storage and transfer. If a page size is below a given minimum size, additional nodes below those stored in the page are added in a breadth-first manner. Since a page typically contains more data than is required in a particular view, the minimum page size has to be chosen such as to yield a good balance between performance and main memory usage. In our experiments, a page size of 3 MB turned out to be a good trade-off. <ref type="figure">Figure 6</ref> illustrates the relation between a tree data structure and pages in this data structure. As can be seen, the pages itself represent a tree data structure, which we refer to as page tree. <ref type="figure">Fig. 6</ref>. Illustration of the relation between a tree data structure (left) and a page tree (right), which stores a number of nodes belonging to the same parent node.</p><p>The page tree is stored on disk and dynamically loaded into main memory during runtime. To determine whether the data of a page is required for rendering, it is sufficient to check the distance criterion for the parent of the page as it has a smaller d min than all of its descendants. According to the movements of the viewer, the page tree is dynamically built top-down and destroyed bottom-up within main memory, such that a maximum amount of data can be re-used in every frame. Simultaneously, the octree is built and destroyed by adding and removing the nodes contained in these pages. Note that nodes only store pointer to the respective data blocks in the page tree, so that the data is not stored twice in main memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Pre-Fetching and Caching</head><p>For hiding disk access latency, we use asynchronous I/O combined with a pre-fetching scheme to load pages that might be required in upcoming frames. We load all nodes having a distance to the camera d cam ≤ d min + d prefetch , resulting in a sphere-shaped pre-fetching region that supports arbitrary rotations. As has been shown by Ng et al. <ref type="bibr" target="#b17">[18]</ref>, although the use of a sphere-shaped region increases the overall memory requirement, when moving along the line of sight the amount of data to be read from disk is only marginally increased.</p><p>The pre-fetching scheme loads every page that might be required after a camera translation of length d prefetch . In order to hide disk access latency, this distance is chosen such that the time for loading the largest page is less than the time for moving the camera to the position where the node is required for rendering.</p><p>When flying through the dataset, there will eventually be pages, which are not required in main memory anymore because the corresponding pages have fallen outside the pre-fetching region. However, as long as enough main memory is available we do not remove the data but move it into a LRU cache. Hence, a page can be reused without any additional cost until the memory is required by another page.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">RENDERING</head><p>To render the particles stored in the set of selected octree nodes, they are copied into vertex array buffers on the GPU. These buffers are then rendered as described below. To optimize the resource management on the GPU, we avoid time-consuming creation and deletion of resources per node by using buddy memory allocation. This means that a set of vertex buffers of a size that it is sufficient for every node is allocated, and these buffers are split recursively into equally sized pieces if less memory is needed. If the data in refined blocks is not used anymore, the blocks are merged again to be available for larger vertex arrays. Like the LRU caching scheme used on the CPU, the data corresponding to nodes that are not required anymore are kept in graphics memory until they have to be paged out due to resource shortage.</p><p>The rendering approach is realized in two passes. In the first pass, the particles are projected onto the screen in order to accumulate the squared dark matter density and the weighted velocity dispersion along the lines of sight. The result is stored in a render target that is bound as a texture resource in the second pass. In this pass, the pixels final colors are computed by using the accumulated values as texture coordinates into a pre-computed 2D color transfer function.</p><p>Due to our multi-resolution representation, the particle coordinates of a node are encoded according to their discretization within the corresponding sub-domain. By using the size of the node as scale factor and its position as translation vector, we can decode them into spatial coordinates. The particle attributes are looked up from the quantization codebook.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Particle Projection</head><p>The particle projection onto the screen is performed by splatting. Particles that are classified as points are simply rendered as point primitives. For sprites, we use a geometry shader to expand each particle to a screen aligned face that has to be large enough to cover the projected area of the particle's smoothing kernel. The respective size is computed as r = h/ 1 − h 2 /d 2 , where h is the smoothing radius and d the distance to the camera (see <ref type="figure" target="#fig_5">Figure 7)</ref>. Via texture coordinates the relative distance of each vertex of the face to the particle center is stored as vertex attribute, which is interpolated on a per-fragment basis during rasterization. In a pixel shader, we have to perspectively correct the interpolated distance r in order to retrieve the minimal distance s = r / 1 + r 2 /d 2 of the respective line of sight to the particle center (see <ref type="figure" target="#fig_5">Figure 7)</ref>. Now, s can be either used for computing the line integral through the smoothing kernel on the fly or to look-up the pre-computed integral value from a one-dimensional texture map.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Performance Issues on the GPU</head><p>Regardless of our efforts to minimize the number of rendered particles, geometry throughput and rasterization of particle splats on the GPU still remain critical bottlenecks for interactive visualizations. We further reduce these problem by discarding particles from the rendering process as early as possible in order to forgo the unnecessary expanding of splats and to reduce the number of primitives that are further processed and rasterized. For this purpose we employ fine-grain view-frustum culling and in addition, we reapply presence acceleration that has been introduced in Section 6.3 on a per-particle basis. The impact of the latter technique is especially profitable, since we fade-out the densities at the end of our viewing distance. Thus, there is usually a significant number of particles that drop below the density threshold and can therefore be discarded.</p><p>Besides the number of particles, the choice of the proxy geometry for rendering point sprites has a considerable impact on the rendering performance as well. Using equilateral triangles instead of quads cuts the number of primitives into halves and significantly increases the geometry throughput, even though the area for rasterization is enlarged by a factor of 3 √ 3/4. Finally, rendering multiple fragments to the same screen location in a rapid succession leads to a considerable lack of performance. To minimize this effect, the particle data should be shuffled to create a random order for rendering the particles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">RESULTS AND ANALYSIS</head><p>We have implemented our visualization framework in C++ using Di-rectX 10 and HLSL for rendering. Our experiments have been carried out on a standard PC equipped with an Intel Core 2 Quad Q9450 2.66 GHz processor, 4 GB of RAM, and a NVIDIA GeForce GTX 280 with 1024 MB video memory and PCI Express 2.0 x16. The data was stored on a striped RAID 0 consisting of two ATA Hitachi HDS72101 hard disks. In all of our experiments we have quantized the particle attributes using 8 bit per component, and we have selected a maximum allowed screen space error of 0.8 pixels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.1">Data Representation</head><p>The original dataset has a total size of 225 GB, including particle density, radius of influence, and velocity dispersion. The generation of the multi-resolution hierarchy, the quantization of particle attributes, and the creation of the page tree took roughly 5:20 hours. In comparison to the simulation itself, which took 28 machine days on a supercomputer, and the fact that rendering movies of the dataset in software takes several hours as well, this duration is rather small.</p><p>The final octree has 10 LODs, with the coordinates of the particles in one node being quantized uniformly using 8 bits per component. Thus, at the finest LOD an uniform spatial resolution of 128K <ref type="bibr" target="#b2">3</ref> is achieved, which is even slightly higher than the resolution <ref type="bibr">(10 5</ref> ) at which the simulation has been performed.</p><p>To validate our visualization approach with respect to speed and quality we have created two datasets, the first one using 8 bits to quantize particle quantities and the other one using 16 bits. This results in an overall compression rate of 6 : 1 and 4.8 : 1, respectively, for the particle data. The respective page-trees are 159 GB and 198 GB in size. <ref type="table">Table 1</ref> shows detailed statistics for the multi-resolution particle hierarchy. Level 0 represents the finest LOD and contains all particles of the simulation. With increasing level, the number of particles are successively reduced due to particle thinning as proposed in Section 6.3. At finer LODs the effect is rather minor, which is not surprising due to the conservative approach we use. With increasing LOD, however, the reduction between two consecutive levels increases up to 91%. <ref type="table">Table 1</ref>. Statistics for each level of the particle multi-resolution hierarchy. Merged shows the number of merged particles from level n − 1 to level n. Skipped gives the number of particles which have been skipped at level n due to presence acceleration, but which may contribute to a merged particle at level n + 1. Sprites and Points show the number of sprites and points, respectively, with their sum being listed in Particles. Average gives the average number of particles per node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Level</head><p>Merged <ref type="table">Skipped  Sprites  Points  Particles  Average  9  1 149 203 319  196 713 663  0  5 443 448  5 443 448 5 443 448  8  1 389 651 438 1 335 618 568  0 15 741</ref>   In comparison to the total number of particles, the fraction that is represented as points is marginal up to level 7. In fact, this number is considerably larger, but since the points are typically part of very dense regions their number is reduced significantly by the proposed particle thinning strategy. While the total number of particles decreases for ever coarser LODs, the average number of particles per node is steadily increasing due to the decreasing number of nodes. In addition, on larger scales the data is distributed more uniformly across the nodes, resulting in a higher fill rate of the quantization bins. According to the increasing average number of particles per node, on levels 4 and higher the amount of memory required to store the particles exceeds the selected page size. Therefore, the collection of several nodes into one page does only occur on the four finest LODs.</p><p>In <ref type="figure" target="#fig_6">Figure 8</ref> we compare the quality that can be achieved by vector quantization of particle attributes using 8 bits and 16 bits per component. In both cases the differences to the original data can hardly be seen, and they are only noticeable by investigating a magnified area in the data. To give an objective measure of the difference, we compute the Euclidean distance of all pixels in the RGB color space for multiple views. The histogram of the difference between the 8 bits compressed data and the original data backs up the visual impression by an average error of 2.0 in color space, where 255 corresponds to full intensity. With regard to the compression rate of 12 : 1, a high fidelity can be achieved. Comparing the 16 bit dataset with the uncompressed version, the difference is not even visible in the zoomed area so that the images can be regarded as visually equivalent. The analysis of the histogram proves that the images are not identical, but with an average error of 0.2 these differences are negligible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9.2">Performance Measurements</head><p>To analyze the impact of the various parts of our visualization approach on its performance, we have measured memory consumption, data transfer rates, geometry throughput, and rendering performance during a straight flight at constant velocity through the Millennium Simulation. The velocity was 12.76 million lightyears per second, at a side length of the cubic simulation domain of 2.23 billion lightyears. The results are shown in <ref type="figure">Figure 9</ref>. By using a straight path, the amount of data in the spherical pre-fetching region that can be re-used in every frame is minimized. The particle data was rendered onto a 1200×800 viewport.</p><p>As can be seen in the uppermost plot, the main memory consumption is more or less constant around 1.5 GB. This is due to the prefetching scheme, which effectively hides variations in bandwidth requirements that are imposed by spatial variations of the particle densities. In the hard disk transfer rate in the second plot these variations are much more apparent, which is in particular caused by a large number of parallel I/O requests. However, with a maximum of about 105 MB/s we are still far away from the maximum data throughput of the striped RAID 0, which is above 200 MB/s. Most of the time, the transfer rate is below 60 MB/s. Hence, the sustained transfer rate of today's standard hard disks is sufficient for data streaming. Even if the used disk system would not be able to achieve the required peak rate, this would probably not result in a loss of detail since the measured transfer is only caused by data pre-fetching.</p><p>The third plot in <ref type="figure">Figure 9</ref> shows the amount of graphics memory that is required for rendering. With an average size of 202 MB and a Time in Seconds fps <ref type="figure">Fig. 9</ref>. Performance measurements and memory statistics for a flight through the Millennium dataset. Memory and bandwidth requirements are not at the system limits. Geometry throughput on the GPU effectively limits the performance when rendering onto a 1200×800 viewport.</p><p>maximum size of 246 MB, the memory requirements are remarkably low. In addition, with a CPU-GPU transfer rate of at most 35 MB/s we are far below the bandwidth that is available on current graphics hardware. In combination with the proposed pre-fetching scheme, the data to be rendered is resident in main memory when it is needed and can directly be streamed to the GPU. The lower three plots of <ref type="figure">Figure 9</ref> show the performance measurements for rendering. Overall, an average frame rate of 10.5 fps is achieved, with a minimum and maximum of 7.7 and 15.0 fps, respectively. To analyze the effectiveness of the proposed data reduction strategies, we have tried to render the same flight without applying particle thinning and presence acceleration, yielding an average frame rate of 1.63 fps.</p><p>Regarding geometry throughput, we achieve a peak performance of 394 million particles per second, with 280 million particles per second in average. This is interesting, because the theoretical maximum of our target architecture is at roughly 300 million triangles per second. Due to fine-grain view frustum culling and presence acceleration, however, the number of effectively rendered sprites is significantly below the number given in the diagram. Based on benchmarks we can state that the maximal throughput of our rendering approach is in fact about 220 million sprites per second, where the loss in performance is introduced by the geometry shader. This throughput is further reduced when rendering very dense regions. Despite our multi-resolution strategy, an overdraw of more than 2000 is not unusual in the current application, clearly indicating that rasterization will become the rendering bottleneck. <ref type="figure" target="#fig_8">Figure 10</ref> illustrates this problem and the effect of the density based culling strategy proposed in Section 8.2. The bottom pictures give information about the fragment overdraw for rendering with both culling techniques enabled (left) and without these techniques (right), leading to the same visual output (top image). The color coding ranges from an overdraw of 0 (black), 500 (magenta) to 3000 (red) with a linear interpolation of the color's hue for the values between 500 and 3000. Obviously, the number of pixels with a high overdraw as well as the maximum overdraw of fragments is much lower in the left image. Combined with GPU view frustum culling this results in a performance gain of 236%, yielding 10.4 fps instead of 4.4 fps. The culling techniques for themselves achieve frame rates of 9.2 (view frustum culling) and 4.7 fps (density-based culling). <ref type="figure">Figure 11</ref> illustrates the scalability of our system with regard to the viewport resolution. We attribute this scalability to the presence acceleration scheme, as it effectively prevents the geometry load from scaling linearly with screen resolution. Consequently, the drop in performance is mainly due to the increased fragment load, which -due to the use of a geometry shader -scales more gracefully. Average frame rates for different screen resolutions <ref type="figure">Fig. 11</ref>. Average frame rate and standard deviation for rendering the Millennium Simulation data at different viewport resolutions.</p><p>The results presented in the previous section have proven the capability of our proposed techniques to render datasets with billions of particles at interactive frame rates on common PC hardware. By quantizing particle coordinates into a regular spatial grid and by using vector quantization to compress particle attributes, compression rates of up to 6 : 1 are achieved at very high fidelity. By employing an octreebased multi-resolution hierarchy, the amount of data to be transferred and rendered is considerably reduced. Based on an efficient memory management the streaming of data from hard disk to the video memory is completely hidden from the user for continuous camera movements. The measurements in <ref type="figure">Figure 9</ref> clearly demonstrate the scalability of the framework, allowing for the interactive rendering of much larger datasets than the Millennium Run. The bottleneck in the rendering of large particle data turns out to be the geometry throughput on recent GPUs. Despite their highly parallel streaming architecture, the massive geometry load induced by the rendered particles lets the GPU become the limiting performance factor. To overcome this limitation, one possible solution is to reduce the number of rendered particles by using alternative rendering primitives. For instance, recent findings in the context of GPU-based terrain rendering <ref type="bibr" target="#b4">[5]</ref> show significant advantages of ray-casting over rasterization for the rendering of high-resolution polygonal terrains, where the polygons are approximately one pixel in size. The reason is that ray-casting can effectively exploit the regular grid structure underlying such fields and avoids pixel overdraw, while the performance of rasterization is limited by the polygon throughput on the GPU. Similar to this approach, it might be promising to resample regions exhibiting a high particle density into volumetric textures, and to render the dataset by means of a hybrid scheme using volume ray-casting and particle rasterization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11">CONCLUSION AND FUTURE WORK</head><p>In this paper, we have presented a scalable approach for the interactive visualization of large cosmological particle data on recent PC architectures. By quantizing particles into a multi-resolution octree structure and introducing rules for particle merging and deletion when no visual error is implied, we can significantly reduce the amount of data while maintaining a user-defined screen space error. Combined with an outof-core and in-core data management to efficiently access the data and optimized particle splatting we are able to visualize one time-step of the Millennium Run exceeding 10 billion particles at interactive frame rates. To our best knowledge, this is the first approach that is able to interactively visualize particle data of this size.</p><p>As the massive geometry and rasterization load is the limiting performance factor of current particle rendering, our primary focus in the future will be to investigate alternative visualization techniques that have a better scalability with regard to the number of particles, such as volume ray-casting. By employing those techniques for overdense regions, we hope that a hybrid approach will lead to a considerable better rendering performance and scalability.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Manuscript received 31</head><label>31</label><figDesc>March 2009; accepted 27 July 2009; posted online 11 October 2009; mailed on 5 October 2009. For information on obtaining reprints of this article, please send email to: tvcg@computer.org .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Three nodes in the multi-resolution particle hierarchy with increasing resolution from from left to right.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Resolution dependent particle merging: (a) Particles with a radius less than the cell size are merged into one single point primitive. (b) Particles covering more than one pixel can only be merged if their radii are equal. (c) Otherwise, they can not be combined in a meaningful way.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Histogram of the three particle quantities. For each quantity, we split the range of values in 1024 equal intervals and count the number of occurences of a parameter value in each interval. Full ranges are [6.73 • 10 −47 , 2.11] (smoothing radius), [8.80 • 10 −2 , 4.84 • 10 8 ] (dark matter density) and [2.26, 1.46 • 10 7 ] (velocity dispersion).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Average relative error introduced by vector quantization of particle quantities with varying bit depth.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Perspective correction for line of sight integration through a spherical particle. (a) Instead of using the smoothing length h as splat extend, the projective extent r at the distance d of the particle center is computed first. (b) During fragment shading the closest distance s from r and d (given as fragment attributes) to the line of sight is computed. s is then used to determine the line integral through the particle.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 8 .</head><label>8</label><figDesc>The quality of vector quantization using 8 bit (left) and 16 bit (middle) for the compression of particle attributes is compared. On the right, the data was visualized using the original floating point attribute values. Close-up views are used to emphasize the quality of vector quantization. For the compressed data, the histogram of the color differences to the original image are shown below the close-up views.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 10 .</head><label>10</label><figDesc>Top: Comparison of image quality with (left, 10.4 fps) and without (right, 4.4 fps) presence acceleration. Bottom: Pixel overdraw in the respective upper image. Hue encodes the overdraw from black (0 fragments) over magenta (500 fragments) to red (3000 fragments).</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">http://www.mpa-garching.mpg.de/galform/virgo/millennium/</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We would like to thank Volker Springel from the Max-Planck Society in Garching for giving us insight into the scientific needs and his visualization approach, and his colleague Gerard Lemson for his support with the dataset. Additionally, we would like to thank our colleague Christian Dick for his helpful discussions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Quantitative and Comparative Visualization Applied to Cosmological Simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Heitmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Habib</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ankeny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mccormick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Inman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Armstrong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Liu Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Physics Conference Series</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visualization in Grid Computing Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Brodlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Duce</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Gallop</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Sagar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Walton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="155" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A Contract Based System For Large Data Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">R</forename><surname>Childs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Brugger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">S</forename><surname>Bonnell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Meredith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Whitlock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Application-controlled Demand Paging for Out-of-core Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ellsworth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="235" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">GPU Ray-Casting for Scalable Terrain Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Dick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics 2009 -Areas Papers</title>
		<meeting>Eurographics 2009 -Areas Papers</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Dolag</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Reinecke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gheller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Imboden</surname></persName>
		</author>
		<title level="m">Splotch: Visualizing Cosmological Simulations</title>
		<imprint>
			<date type="published" when="2008-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">ParaView Guide, A Parallel Visualization Application</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Henderson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Kitware Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Hierarchical splatting of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="433" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Hierarchical Splatting of Scattered 4D Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Luttenberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="64" to="72" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Visualization Handbook</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Academic Press, Inc</publisher>
			<pubPlace>Orlando, FL, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Rendering The First Star in The Universe -A Case Study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kähler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Patterson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Abel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<editor>R. J. Moorhead, M. Gross, and K. I. Joy</editor>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2002-11" />
			<biblScope unit="page" from="537" to="540" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visualizing Large-Scale Uncertainty in Astrophysical Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-W</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1640" to="1647" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Scalable WIM: Effective Exploration in Large-scale Astrophysical Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-W</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1005" to="1012" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">3D Reconstruction of Reflection Nebulae from a Single Image</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lintu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hoffman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Magnor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">P A</forename><surname>Lensch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VMV</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Interactive Visualization of Intercluster Galaxy Structures in the Horologium-Reticulum Supercluster</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Quammen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fleenor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1149" to="1156" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">NIH-NSF Visualization Research Challenges Report Summary</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Moorhead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rheingans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Yoo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="20" to="24" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Visualization of Cosmological Particle-Based Datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Navrátil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Bromm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics (Proc. IEEE Visualization</title>
		<imprint>
			<date type="published" when="2007-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Analyzing Pre-fetching in Large-scale Visual Simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-M</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-T</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D.-N</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-S</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-W</forename><surname>Yeow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics International Conference</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">0</biblScope>
			<biblScope unit="page" from="100" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Cosmology of the Early Universe Viewed Through the New Infrastructure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Ostriker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Norman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="84" to="94" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">SPLASH: An Interactive Visualisation Tool for Smoothed Particle Hydrodynamics simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Price</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Flexible Interaction with Large Point-Based Datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rosiuta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theory and Practice of Computer Graphics &apos;06</title>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Compression Domain Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The Cosmological Simulation Code GADGET-2</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Springel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monthly Notices of the Royal Astronomical Society</title>
		<imprint>
			<biblScope unit="volume">364</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1105" to="1134" />
			<date type="published" when="2005-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The Aquarius Project: The Subhalos of Galactic Halos</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Springel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vogelsberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ludlow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jenkins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Helmi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Navarro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">S</forename><surname>Frenk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D M</forename><surname>White</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monthly Notices of the Royal Astronomical Society</title>
		<imprint>
			<biblScope unit="volume">391</biblScope>
			<biblScope unit="page" from="1685" to="1711" />
			<date type="published" when="2008-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Simulating the Joint Evolution of Quasars, Galaxies and their Large-scale Distribution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Springel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D M</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jenkins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">S</forename><surname>Frenk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Yoshida</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Navarro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Thacker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Croton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Peacock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cole</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Couchman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Evrard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Colberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Pearce</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">435</biblScope>
			<biblScope unit="page" from="629" to="636" />
			<date type="published" when="2005-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">GPU-Based Interactive Visualization of Billion Point Cosmological Simulations. CoRR</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Szalay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Springel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Lemson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008-11" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
