<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><surname>Donghao</surname></persName>
							<email>donghaoren@cs.ucsb.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tobias</forename><surname>Höllerer</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">Xiaoru</forename><surname>Yuan</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Santa Barbara</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of EECS</orgName>
								<address>
									<settlement>Peking University</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Santa Barbara</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="laboratory">Key Laboratory of Machine Perception (Ministry of Education) and School of EECS, Peking University</orgName>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2014.2346291</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:10+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Data Enumeration/ Decomposition Mapping Mapping Reference/Linking Aggregation</term>
					<term>Layout</term>
					<term>etc Graphics User Manipulation Objects (Circle</term>
					<term>Axis</term>
					<term>Scatter</term>
					<term>etc) Data Selector Modify Data by Inverse Mapping Data Representation</term>
				</keywords>
			</textClass>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>1077-2626 © 2014 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.</p><p>See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.  Abstract-We present the design, implementation and evaluation of iVisDesigner, a web-based system that enables users to design information visualizations for complex datasets interactively, without the need for textual programming. Our system achieves high interactive expressiveness through conceptual modularity, covering a broad information visualization design space. iVisDesigner supports the interactive design of interactive visualizations, such as provisioning for responsive graph layouts and different types of brushing and linking interactions. We present the system design and implementation, exemplify it through a variety of illustrative visualization designs and discuss its limitations. A performance analysis and an informal user study are presented to evaluate the system. Index Terms-Visualization design, Interactive Design, Interaction, Expressiveness, Web-based visualization</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Programming frameworks for information visualization such as Processing <ref type="bibr" target="#b0">[2]</ref>, Prefuse <ref type="bibr" target="#b19">[21]</ref>, ProtoVis <ref type="bibr" target="#b18">[20]</ref> or D3.js <ref type="bibr" target="#b5">[7]</ref> provide very useful abstractions for visualization designs that make programming easier and more elegant. Frameworks can utilize existing programming languages, such as Javascript in the case of D3.js, or new programming languages, as in the case of Processing. However, they all require tex-tual programming, which limits use to a population of coders, or otherwise imposes a fairly steep learning curve. Most of these frameworks require iterating back and forth between programming and execution stage, and thus adjustment of parameters can be cumbersome.</p><p>On the other hand, some information visualization toolkits support interactive ways of creating visual designs <ref type="bibr" target="#b15">[17]</ref>, from early pipelinebased systems <ref type="bibr" target="#b30">[32]</ref> to more unified approaches <ref type="bibr" target="#b8">[10,</ref><ref type="bibr" target="#b16">18,</ref><ref type="bibr" target="#b26">28]</ref>. These systems are easy to use, and generally offer a What You See Is What You Get editing experience, which greatly assists parameter tuning. However, compared to textual programming, they are generally less expressive. For example, the Flexible Linked Axes toolkit <ref type="bibr" target="#b8">[10]</ref>, which inspired parts of our visualization functionality, only covers axis-based designs for multidimensional data visualization, arguably a small portion of the whole design space. There is a need for highly flexible toolkits that support a wide spectrum of visualization designs.</p><p>In this paper, we present iVisDesigner, a web-based system that enables users to design information visualizations for heterogeneous datasets interactively, without the need for textual programming. Compared with other approaches such as Flexible Linked Axes <ref type="bibr" target="#b8">[10]</ref> and Gold <ref type="bibr" target="#b23">[25]</ref>, and commercial software such as Microsoft Excel and Tableau, iVisDesigner focuses on expressiveness and modular visual- ization design flexibility, covering a wider range of the information visualization design space.</p><p>Expressiveness in iVisDesigner is supported by its underlying framework and user interaction provisions. The framework utilizes a flexible internal representation of visualization designs, which is carefully exposed in a unified user interface. Users specify designs via a mouse or pen-based user interface in a web browser, utilizing drag and drop, sketching, and context menu elements. The system supports visual analytics tasks, such as brushing and linking, and visualization customizations, both during visualization design and interactive exploration of data in completed designs. Users can embed the designed visualizations into existing websites or web-based applications by inserting a piece of Javascript provided by iVisDesigner.</p><p>The main contribution of this work is an expressive framework to represent visualization designs for different types of data, allowing users to interactively arrange visual elements in different ways, combining and linking different types of visualizations. We discuss our design decisions, implementation choices, as well as system limitations, and demonstrate the expressiveness of our system by presenting a variety of example applications on different types of datasets. We provide evaluation of our system in form of a performance analysis and an informal user study. Our prototype system exhibits high expressiveness compared with existing systems, while maintaining good performance and usability.</p><p>The paper is organized as follows: After discussing related work, we present the design of the framework and user interaction, followed by notable implementation details. Next we discuss example applications to exemplify coverage of the information visualization design space. We then present system evaluation in the form of performance measurements and an informal user study. Finally, we discuss overall results and limitations and conclude the paper with an outlook on future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Our work builds on top of a rich research landscape for information visualization toolkits and systems. We structure our overview of related work by separating discussion of influential theoretical background, programming frameworks, toolkits, and systems that are related to our work.</p><p>Theory: Any expressive system facilitating flexible mappings of data to visual variables owes a lot to the semiological research of Bertin <ref type="bibr" target="#b2">[4,</ref><ref type="bibr" target="#b3">5]</ref>. Mackinlay <ref type="bibr" target="#b22">[24]</ref> provided further foundation and presented automated tools for powerful modular visualization design. Shneiderman <ref type="bibr" target="#b28">[30]</ref> analyzed the data types and tasks in information visualization, and presented a taxonomy for them. Card et al. <ref type="bibr" target="#b6">[8]</ref> organized previous visualization designs, and presented categorization of data types and visual mappings. In our demonstrations and evaluations of iVisDesigner, we will highlight its coverage of the information visualization design space.</p><p>Data Flow Systems such as ConMan <ref type="bibr" target="#b17">[19]</ref>, AVS <ref type="bibr" target="#b30">[32]</ref>, IRIS Explorer <ref type="bibr" target="#b13">[15]</ref> and VisTrails <ref type="bibr" target="#b1">[3]</ref> use a pipelined approach and flow diagrams to represent the progress from data to visualization. These systems are particularly good at defining data transformations, but not very flexible for defining interlinked mappings from data to graphical elements. In addition, pipeline-based systems focus on representing the pipeline itself, there is little screen estate left for displaying and editing the visualizations. Our work provides an integrated representation and manipulation of graphical mappings, with all graphical elements created, presented and edited in the same canvas which dominates the user interface, allowing for better understanding of the overall visualization design.</p><p>Programming Frameworks and Languages: Drawing APIs and toolkits such as OpenGL, Java2D, HTML5 Canvas, and Processing <ref type="bibr" target="#b0">[2]</ref> define programming interfaces to draw low-level elements. Even for experienced programmers, creating visualizations with these APIs directly is not straightforward. Thus visualization frameworks have been created for better abstraction. The InfoVis Toolkit <ref type="bibr" target="#b11">[13]</ref> and Improvise <ref type="bibr" target="#b34">[36]</ref> provide a set of basic widgets. Chi et al. <ref type="bibr" target="#b7">[9]</ref> proposed a spreadsheet approach. "behaviorism" <ref type="bibr" target="#b12">[14]</ref> uses three graphs to rep-resent dynamic visualizations. To create novel designs, users need to create new widgets or inherit existing ones. Heer et al. proposed Prefuse <ref type="bibr" target="#b19">[21,</ref><ref type="bibr">1]</ref>, a toolkit for interactive visualization. It first transforms abstract data into visualizable form by a filtering process, and renders the visualizable form by using a view process. It allows for advanced integration of existing operators to create novel techniques, but typically users will need to define new operators in the process.</p><p>Declarative models and languages for information visualization have been presented <ref type="bibr" target="#b36">[38,</ref><ref type="bibr" target="#b35">37]</ref>. Protovis <ref type="bibr" target="#b18">[20,</ref><ref type="bibr" target="#b4">6]</ref> provides a declarative language for information visualization, designed and implemented in Java and Javascript. Bostock et al. designed D3.js <ref type="bibr" target="#b5">[7]</ref>, a Javascript library for creating web-based visualization designs. It facilitates the manipulation of DOM elements with data. All of these programming frameworks require users to write programs to combine visualization components. The framework of our system is similar to D3. Both operate by defining and parameterizing mappings from data items to graphical elements. D3 takes a programming-oriented approach, while our system takes an interactive design approach: users create visualization designs, and provision for end-user interaction via the webbased user interface.</p><p>Interactive Toolkits: Vector-based drawing software, such as Adobe Illustrator, is widely used for graphical design, and we drew some inspiration for our user interface from such products. While it is possible to create visualizations with such design tools, there is no support for parameterizable mapping from data to graphics. Graphical items have to be created individually. On the other hand, a lot of commercial software has the functionality to create visualization designs for data interactively, for example the chart feature in Microsoft Excel and similar spreadsheet software. Web-based systems such as ManyEyes <ref type="bibr" target="#b32">[34]</ref>, Sense.us <ref type="bibr" target="#b20">[22]</ref>, or CommentSpace <ref type="bibr" target="#b37">[39]</ref> focus on collaborative visual analysis. Most of these systems are focused on using and customizing several predefined templates.</p><p>Tableau is a highly sophisticated state-of-the-art commercial visualization system, providing good flexibility for visualization designs. However, it is still predominately template-based, which increases ease of use for beginners but limits free-style design explorations. In contrast, we focus on more fine-grained control and flexible combination of graphical elements in the pursuit of novel design combinations.</p><p>For multivariate data, Claessen et al. <ref type="bibr" target="#b8">[10]</ref> allow users to position axes and put scatterplots and links between them interactively. However, it only supports multivariate data and axis-based visualization designs. Sketch-based interactions, like in SketchStory <ref type="bibr" target="#b21">[23]</ref> and SketchInsight <ref type="bibr" target="#b33">[35]</ref> have been explored. While sketch-based interactions are very intuitive, these systems currently only support a very limited set of designs. Bret Victor presented a tool <ref type="bibr" target="#b31">[33]</ref> that allows users to define drawing procedures with geometrical constraints, which are parametrized in an interactive canvas. It requires procedural thinking, where users define loops to draw simple visualizations such as a scatterplot. In our system, we use a declarative approach, where loops are defined implicitly by data selectors. SageBrush <ref type="bibr" target="#b25">[27]</ref> uses "partial prototypes" to define spatial properties for "graphemes", and supports editing of primitive properties. Our system expands on this theme by enabling data transformation and generation, and supporting interaction with designed visualizations. Lyra <ref type="bibr" target="#b26">[28]</ref> is a very recent addition to the interactive visualization design landscape. Based on the JSON-based declarative visualization grammar Vega <ref type="bibr" target="#b29">[31]</ref>, it allows users to define visualizations interactively by constructing scales, guides and marks. Sophisticated layouts and transformations are enabled via transformation pipelines. Lyra and Vega only operate on tabular datasets, while our work also supports hierarchical datasets with a fixed schema and references between data items. Lyra is more oriented towards designing a single piece of visualization, while our system focuses on canvases that allow users to draw and link different designs. Furthermore, our system supports designing interactions such as brushing and linking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DESIGN PHILOSOPHY</head><p>The framework of iVisDesigner is designed to represent visualizations that support interactive user manipulation, all within a web-based in-   <ref type="formula">7</ref>The canvas to draw the visualization. In this example, a visualization of Beijing Air Pollution data is presented. There are two linked views, the left view shows the timeline plots of PM2.5 indexes for each measurement station on top of a map, the right plots shows the trends of the PM2.5 indexes, wind strength, temperature and humidity. This visualization is designed solely through user interaction with iVisDesigner, without textual programming.</p><p>terface and canvas. The high-level design choices of iVisDesigner are based on the following idea: Allowing for interactive visualization creation, editing and interaction in an unified interface, where the space is dominated by a canvas showing the emerging visualization. We focus on enabling users to freely place graphical elements and links between them, instead of simply designing a chart or template visualization.</p><p>Our overall approach can be characterized as introducing support for data influx and manipulation to the common usage paradigm of interactive vector-based drawing software. By allowing users to define mappings from data to graphical elements, we enable them to directly create and manipulate groups of elements simultaneously, which tremendously reduces the amount of work to create visualizations. Transformed, aggregated, or otherwise generated data can be attached to the dataset, providing more capabilities, such as histograms and graph layouts. Graphical elements can be manipulated via dragging and brushing, which affects the underlying data attributes, enabling the design of interactive visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DESIGN</head><p>In this section, we present the workflow and design details of iVisDesigner. We first give an overview of our framework, which is designed to represent visualizations, render them, and allow users to manipulate them interactively. We then discuss our user interface design, explaining how users can create and edit the different components.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Framework</head><p>The framework of our system is illustrated in <ref type="figure">Figure 3</ref>. Data is loaded from the Data Source, transformed into an internal representation, and then enumerated or decomposed into individual elements by various Data Selectors. The decomposed elements are then passed into Objects for visual mapping or data generation. For visual mapping, the resulting graphical elements are simply rendered on the canvas. For data generation, the results are additional data attributes (e.g., a histogram) that can be attached back to the data representation. In addition, users can create and attach new data from scratch, for example, creating a range of integers from 1 to 100 for numbering purposes. Multiple mappings and transformations can co-exist in the same visualization, and can refer to each other.</p><p>Our data representation is based on a hierarchical model similar to JSON, but allows for references among objects. Data items are a set of <ref type="figure">Fig. 3</ref>. The framework of iVisDesigner. Data is first being enumerated by user-defined data selectors, and then passed to different mapping objects. These objects may refer to each other, and finally generate the graphics or attach generated data back to the data representation. Users can also manipulate the graphics, and modify the underlying data if permitted.</p><p>key-value pairs. Each value can be a single data item, an array of data items, a primitive value (number or string), or a reference to another data item. The structure of the dataset is defined by a fixed Schema, which stores a definition of the data structure. This requires the items in a single array to be homogeneous, i.e. they must be of the same type and structure. This ensures that we can perform mappings from each array of objects to graphical elements in a unified way. Given that the arrays in a given dataset are homogeneous, it is easy to construct a schema for a dataset automatically.</p><p>This dataset definition is relatively more expressive than tabular structures. For example, in <ref type="figure" target="#fig_3">Figure 2</ref>, the depicted dataset contains a set of air-probing stations, each with a set of measurements, which are visualized individually on the map, and collectively on the timeline plot. Users can place small visualization designs for inner-level data within a larger plot.</p><p>Users can create attached data by creating special objects in the system. These can, for example, compute basic statistics or run a force-directed layout algorithm.</p><p>Data Selectors, which are automatically created from user interac- tion, are used to select a set of data items or values from the dataset. While Data Selectors are created via the UI (e.g. by clicking on an entry of the Schema panel or selecting from a dropdown menu in the Property panel), they also do have a syntax (string representation), where [array] means an enumeration of all the elements in the array, and field means a particular field from the current object. The Data Selectors can be specified in a path-like manner, joined by ":". For example, [cars]:acceleration means an enumeration of all (say n) cars in the dataset, taking the value of the acceleration field for each, resulting in an array of n numbers. Reference fields can also be selected in the Data Selectors, for example, [edges]:&amp;source will select the source nodes for the edges in a graph (nodes are stored in a separate array), and [edges]:&amp;source:value will select the value attributes of the source nodes.</p><p>A visualization consists of a set of Objects, which define mappings from data to graphical elements, or generate new data attributes and attach them back to the data representation (as shown in <ref type="figure">Figure 3</ref>, Mapping and Generators). Objects in our system can be of various types, specifically, they encompass Graphical objects, Guide objects, and Generator objects as discussed below.</p><p>A Graphical object represents a mapping from a set of data items to a set of graphical elements. Examples are Circles, Lines, Polylines, Arcs, and LineThroughs. Each Graphical object has a Data Selector associated that specifies the set of data items to map from, and each item in this set is rendered as a graphical element.</p><p>The properties of a Graphical object, such as the location and radius for the Circles or end points for the Lines, are provided by Guide objects. These objects transform data values to various properties such as location, width and color. Examples are Axes, Scatters, and Maps.</p><p>Generator objects attach derived data to the dataset. For example, they can calculate the average value for a group of data attributes (Statistics object), group them into bins (Aggregator object), compute an expression on a set of data items (Expression object), or perform a force-directed layout algorithm on a graph and give each node a position (ForceLayout object). Generator objects mainly perform data transformations, they attach generated values to the dataset. Guide objects are displayed and edited on the canvas, and mainly deals with visual properties. There is no exclusive separation between the two categories, and one object might be of both kinds at the same time.</p><p>Generators can also accept user interaction. A BrushingValue object accepts brushing actions on a given visualization, and attaches corresponding data attributes to a data item that got brushed. These generated or derived values are attached to the dataset, which can then The properties and styles of the objects can be defined in the corresponding panels. Styles are drawing actions, such as Fill and Stroke; properties define the shape of the object, such as Center and Radius. Both, properties and styles can be defined as plain values or mapped from data via the UI.</p><p>further be used in other parts of the visualization. For example, they can be used to construct brushing and linking functionality for a visualization, enabling basic visual analytics.</p><p>Objects can be nested into a Component object, which is bound to one Data Selector and which provides local coordinates for the objects inside it. Since our data representation allows for a hierarchical structure, users can design sub-visualizations and scatter them around. For example, one can create a component to design a small glyph for representing different data items. In section 6, we show an example that uses components to create small timeline plots for each item (cf. <ref type="figure" target="#fig_3">Figure 2</ref>), and <ref type="figure">Figure 7</ref> showcases some custom glyphs.</p><p>Note that object types are not mutually exclusive. One object might have several types simultaneously. E.g. an Axis is at the same time a Guide object and a Graphical object showing tick markers. Forcedirected layout is classified as a generator object, because it generates coordinates, but it can also be a guide object at the same time (users indicate a rectangle for the layout region).</p><p>Our framework can be extended via programming by defining additional custom objects, ranging from primitive graphical elements to complex visual designs (e.g. a special type of glyph).</p><p>A comprehensive list of currently supported objects and their properties, as well as the interactions to create each of them, can be found in the supplementary material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Interface and Interaction</head><p>We now discuss the user interactions in iVisDesigner. The overall user interface is shown in <ref type="figure" target="#fig_3">Figure 2</ref>, together with an example design (detailed in subsection 6.2). It consists of a menu bar, a set of panels, a status bar, and a drawing canvas. There are five flexible panels that users can freely move around, resize, minimize or hide: The Tools panel presents a set of tools, including select/move, drag, brushing, pan/zoom, and object creating tools. The Schema panel shows the schema (hierarchical structure) of the dataset; users can select arrays or fields in the dataset. The Object panel shows a list of all graphical objects in the visualization and allows users to select, reorder or remove them. The Style panel is used to define graphical styles (series of drawing actions) for graphical objects. The Property panel lets users edit properties of selected objects. In addition, a data inspector panel is available, it can be shown when users need to examine the actual data values.</p><p>After an object is selected in the object panel or directly from the canvas, the property and style panels let the user edit the properties and drawing actions.</p><p>We aimed for a uniform interface, flexible for different tasks, and intended to maximize the space for the drawing canvas, resulting in the five panels above. The tools panel helps switch between different mouse tasks (select, interact, create). The schema panel and object panel are for selecting data elements and visualization objects, while the style panel and property panel allow users to edit the selected objects in an uniform way. In the following sections, we will discuss typical steps to use our system, including actions to create a visualization, edit an existing design, and interact with them. Since the system is flexible, users could go back and forth among these steps at will.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Creating Visualizations</head><p>A visualization is created by adding graphical objects to the canvas. Typical steps to create a graphical object include: (1) Selecting a desired set of data items from the schema panel. (2) Selecting the desired type of object from the tools panel. (3) Providing initial positioning. Other properties of the newly created object will be set to default values, for later adjustment.</p><p>While in other systems, such as SageBrush, Tableau or Lyra, one directly assigns data properties to marker properties, and the system will automatically determine scales and their positioning (that might be changed later), we require users to create guide objects (such as Axes, Scatters) explicitly. Since our canvas is virtually infinite, and there might be multiple existing visualization parts on it, automatically creating axes is not as straightforward. Therefore, to create a visualization, users first need to create guide objects as a frame, then add graphical elements. For example, to create a scatterplot, users need to first create two orthogonal axes, add a scatter between them, and then put, e.g., circles on the scatter.</p><p>References in the dataset can be utilized. For example, in a nodelink graph visualization, the edges are defined as two references to nodes, source and target. Suppose we already visualized the nodes as a scatterplot. We now want to create lines for the edges to make a node-link visualization. The lines are bound to the [edges] array, so each edge is drawn as a line. To specify the two end points for each edge, we need to use the locations provided by the nodes' scatterplot. In this case, the user first highlights the "ref" button next to the source reference field, indicating she/he is going to use the node referenced by that field, and clicks on the scatterplot to specify the first end point. Then the user highlights the "ref" button beside the target reference field, and clicks on the scatterplot to specify the second end point and lines are created. In short, the scatterplot defines a mapping from nodes to locations, and the reference field tells the scatterplot which node to use for the mapping. This is perhaps the most difficult-to-understand interaction in our system. While users in our evaluations were able to easily follow our guidance to create node-link graphs, it proved challenging for some of them to create other forms, such as the matrix and arc-based graph visualizations in <ref type="figure">Figure 9</ref>, given just a short amount of learning time.</p><p>To reduce the burden of complex interactions to create common designs like a scatterplot, we defined a small set of templates (scatterplot, timeline plot, node-link graph), that allows users to create such visualizations simply by selecting the data attributes and dragging a rectangle on the canvas. The template will create the required graphical objects and guide objects for the user automatically, and the user can adjust the design later. This also allows novices to get started with the system more easily.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Editing Properties and Drawing Styles</head><p>After having created objects, users can further modify their properties. This is done via the property panel and the style panel. The property panel shows a grouped list of property-editing UI components. Most of the properties for an object can be set as mappings, such as linear mapping or categorical mapping, which are guide objects created implicitly by the property editor, allowing users to assign mappings from data attributes to actual properties of each graphical element represented by the object. For example, the "radius" property of the circles object can be assigned as a constant value, or as a linear mapping of some data attribute. The "center" property of the circles objects can be set by picking a guide object or a static point on the canvas. Properties can be copied and pasted among objects. Pasting can be done either by value or by reference. If pasted by reference, changing one of them will cause the others to change as well. For example, we might design a set of parallel coordinates and a scatterplot, and share the color mapping for the parallel coordinates and the scatterplot. Through copy and paste, one can reuse the properties. However, one drawback is that there is no easy way to indicate what objects share the same mapping in the interface. Currently, the user has to remember that. Another limitation is that our current version does not provide a straightforward way to visualize the scales of the mappings. In future versions, we would like to allow users to drag the mapping properties out onto the canvas and draw them as interactive scales. This would solve both of the above problems.</p><p>The style panel works similar to the property panel, showing a list of drawing actions for a graphical object. In the rendering process, each graphical object generates a graphical path, for example, lines, circles, Bezier curves or composites of these, and this path is rendered to the canvas by performing the drawing actions specified here. For example, the "Stroke" action will stroke the path, and it has four properties: width, color, line join and line cap. The "Fill" action will fill the path with a user-defined color. Users can add/remove actions, and reorder them in the style pane. The properties for drawing actions in the style panel can also be mappings, as in the property panel. The user can add or remove these actions in the style panel. Styles can be considered a special set of properties for a graphical object frequently used in visualization designs, and they commonly consists of multiple actions. This is the main reason we separated them from the property panel into an individual panel. Currently we only have stroke and fill actions, in the future, we would like to support more actions, including such that alter the path (e.g., distortion, outline, smoothing), similar to those in Adobe Illustrator.</p><p>Basically, we employ a property-editor based approach, which provides a set of uniform editing steps for each type of properties. The editing interfaces are automatically generated according to the properties declared in the object types, which is particularly useful for implementing new types of objects. From the users' perspective, a uniform editing experience helps them to learn the system effectively and speedily.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Interacting with Visualizations</head><p>In addition to creating and editing visualizations, our system allows a certain set of interactions to be designed. There are two specific tools for interactions on the visualization design.</p><p>Moving Elements: Users can move graphical elements in a designed visualization, and as a consequence, some corresponding data attributes might be changed. This should be performed very carefully, as one could easily produce fake findings, mislead others or get confused when changing the original data recklessly. As a default setting, we don't allow the original data attributes to be changed. However, certain properties can be changed without danger, such as the locations produced by a force-directed layout algorithm. Another example consists of users attaching a single attribute to the dataset, and using an axis and a circle to build a "slider" to control it. Such slider-controlled attributes could be used in different situations, such as, e.g., defining the range of a filter property, resulting in an adjustable filter. . The internal process of brushing. When the user brushes over a set of graphical elements with the lasso tool, they are collected and passed to the BrushingValue object (which can be created and activated by the user). The BrushingValue object then attaches data back to the data representation, and the attached data can be used by mapping objects, which affect the graphics. Users can define and combine multiple ways of brushing in our system.</p><p>Brushing: The lasso brushing tool is paired with the Brushing-Value object, which attaches a value to each data item, and once data items are brushed by selecting their graphical elements, their values will change. Users can then use the values to define graphical mappings. This implements brushing and linking functionalities. For example, one could set the fill color of a scatterplot as the brushed value, and use the lasso tool to color the points. Other examples are discussed in section 6.</p><p>Our goal is to enable the design of interactions, not just supporting a fixed set of interactions. This is achieved by allowing users to modify attached data attributes in two classical ways (moving and brushing), and we show that dragging, filtering, and brushing and linking can be supported from these atomic actions. There are possibilities to define more complex interactions beyond these, but as the complexity goes up, users have to create several related objects such as axes and expressions, which makes the process a little more complicated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Limitations</head><p>While the framework of our system is inherently modular and objectoriented, allowing new types of objects to be added easily, it still has several limitations in terms of expressiveness. The framework is based on designing and parameterizing graphical mappings from original, transformed, or user-generated data. This approach has two fundamental limitations. (1) Designing adaptive markers, such as automatically determining the width of bars in a barchart based on the number of bars and the chart width, requires writing specific mathematical expressions, because this involves dividing the chart width by the number of bars, which is not a property of any single data item. In general, our framework does not address the dependencies among graphical objects, but rather performs mappings individually, so in order to accommodate higher-level layout constraints such as overlap avoidance, special objects have to be designed in programming. (2) Our system cannot, without using specific custom layout objects, design recursive drawings such as tree maps, and as aforementioned, the system doesn't support recursively defined data structures directly. One might argue that tabular structure can represent graphs and trees as well, but our data selectors can only enumerate arrays of items in the data hierarchy. It cannot follow references (such as running a graph/tree traversal). This is also true for other declarative approaches (e.g., ProtoVis, D3, Vega and Lyra), which are also resolved to using specific modules for each kind of layout. Abstractions such as <ref type="bibr" target="#b27">[29]</ref> might be considered in the future. These limitations currently exclude a range of possible visualization designs.</p><p>There are also shortcomings that are more easily solvable within the current framework. (1) Our system currently is constrained in terms of the type of coordinate systems. Positional mappings are done via axes and scatters (the map with Mercator projection is the only exception). It does not currently accommodate circle-based visualizations, nor are polar coordinates currently supported. In the future, we will seek to support different coordinate systems. (2) Axes and their scales are currently intrinsically linked. For simple scatterplots and parallel coordinates this works fine, but it becomes tedious, although not impossible, to share the same scale for different data attributes. There is currently no way to use axes for numerical properties such as widths or radii (and this would be useful for designs such as error bars). This could be solved by additional property-editing interactions and better separation of axes and scales in the future. (3) There is currently no way to specify the order of data item enumeration, which would be useful if we want to stack data items or link through them in different manners. This could be solved by adding a sorting attribute to the data selectors. (4) The system currently lacks a way to specify more general graphical paths. The LineThrough object can draw paths through data points, which is somewhat restrictive: if we want to fill the area below a timeline plot, or between two of them, we need a more flexible way to define paths to connect static points and sequences of points together (similar to the "Pen" tool in Adobe Illustrator). The consequence is that our system is less expressive at defining shapes, and more oriented towards line-based visualizations. A general "pen" tool would be desirable.</p><p>Despite these limitations, our system can still support an extensive set of visualizations. In section 6, we showcase a variety of examples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION</head><p>The system is implemented in HTML5 using jQuery and other opensource libraries. A backend server written in Python Django is used to store the metadata for the datasets and saved visualizations. Here, we discuss some notable aspects of the implementation.</p><p>Input Format: The datasets are loaded as JSON objects, where the references are stored as the referenced items' ID (each data item having a unique ID). For our current system, we did not focus on supporting multiple data formats, but conversions from CSV or Excel-like data sources are trivial (without performing join operations). Dataset structure will influence how well certain designs will be supported. For example, if the dataset from subsection 6.2 had been stored as a flat table instead of a hierarchy, we would not be able to create that visualization, unless we added a special "Grouping" generator object, similar to Lyra's approach).</p><p>Rendering: We employ multiple layers of HTML5 Canvas. The renderer maintains the status of these canvases, and executes the visualizations on them. There are four layers in our current prototype. The Main layer contains the graphical elements, the Front layer shows selected elements, the Overlay layer shows temporary markers, such as alignment indicators during user interaction, and the Back layer displays the background color and grid. By using layers, we eliminated the need to redraw the entire visualization when the user selects a single element, achieving better responsiveness. In addition, the renderer also manages a viewport, allowing users to move or zoom the visualization, or to export the current view as PNG or SVG files.</p><p>Serialization: The visualization is stored as a set of Javascript objects internally; to save a visualization, we need to serialize them to a storable format. We implemented a general Javascript object serializer to support this task, which is capable of maintaining references between objects and retaining type information, which are critical for correctly restoring a visualization. To enable this, we assign a unique identifier (UUID) for each object, and store object references as UUIDs. Type information is preserved by recording an identifier for each registered object type, and restoring the "constructor" attribute for each object. The benefit is that we do not need to write a pair of serializing and deserializing functions for each object class, which reduces programming effort and the possibility of bugs.</p><p>Backend Server: The system operates mainly in the browser, but like every web application, it requires a backend server to provide data and store information. The backend server manages user accounts, datasets and visualization designs. It was implemented in Python Django and Twisted. The Django part is responsible for managing user credentials, storing the metadata of all datasets, and saving and loading of visualization designs. The metadata of datasets consists of the data description, data schema, and a URL for the data content. We used the WAMP protocol (based on WebSockets) in a Twisted server, which is connected to a Redis database. It provides real-time updates for changing datasets. Changes in the dataset can be posted to the web-based interface, and the system will update the visualization with the changed data. One can also write scripts that collect data from the web, and send it to iVisDesigner (either replacing original or providing incremental updates). For example, <ref type="figure" target="#fig_0">Figure 1</ref> (3) illustrates real-time monitoring of a server's CPU, RAM, and network usage.</p><p>Embedding: Users can export their designs and embed them into their own websites or web applications. The datasets and visualization designs could either be retrieved from a server, or embedded statically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXAMPLE APPLICATIONS</head><p>In this section, we present a set of visualization design examples on different datasets, with the goal of illustrating the flexibility and expressiveness of our system. Different types of datasets are chosen, including multidimensional data, time series data, and graph data. We also demonstrate a design for Sina Weibo (A Chinese microblog service similar to Twitter) user data, and even some artistic designs without an underlying dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Glyph Component</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Horsepower</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Displacement</head><p>Cylinders Acceleration Model Year <ref type="figure">Fig. 7</ref>. Glyph-embedded Multidimensional Data Visualization. This design is based on the SPPC design <ref type="bibr" target="#b38">[40]</ref>, connecting a scatterplot with parallel coordinates. The points in the scatterplot are replaced by a set of glyphs, showing four attributes for each item.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Multidimensional Data</head><p>iVisDesigner can flexibly arrange axes like Flexible Linked Axes <ref type="bibr" target="#b8">[10]</ref>, whose design space is subsumed by our system. <ref type="figure" target="#fig_4">Figure 4</ref> (2) is an example of linked-axes and scatter-plot-based visualization designs. The dataset used there is the 1983 ASA Data Exposition Cars dataset <ref type="bibr" target="#b9">[11]</ref>. iVisDesigner emphasizes expressiveness. For example, we can design mini-glyphs for Cars with the component object, draw the glyphs on a scatterplot, and link them to a set of parallel coordinates <ref type="figure">(Figure 7)</ref>. <ref type="figure">Fig. 8</ref>. Aggregator objects group values into numerical fields, which can be used to draw a histogram of a particular data attribute. In this example, we plotted the histograms of MPG and Displacement attributes in the Car Data, and also a 2D histogram to show their joint distribution.</p><p>Generator objects can be used to compute the statistics of a data attribute, including basic statistics such as min/max, mean, and more involved ones such as histogram. In <ref type="figure">Figure 8</ref>, we show an example using the histogram generator, an Aggregator object. This object generates an array of bins to form a histogram of the selected data attribute, which can be displayed in various ways.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Time Series Data</head><p>In <ref type="figure" target="#fig_3">Figure 2</ref>, we presented a visualization of the Beijing Air Pollution Dataset, crawled from two websites that update hourly. The dataset contains 36 stations, each of which has a name, a geographical location, and a time series of two weeks of measurements. The visualization consists of two different charts. The left chart is a set of timeline plots on a map, each representing a station's measurements. It shows the measurements for each station, allowing comparison between stations at different locations. The right chart is a single timeline plot, which contains the timelines for all of the stations. This chart shows the main trend of all the stations, while revealing some outliers. The left-hand visualization consists of a Map object for the geographical coordinates, two Axis objects, a Scatter object and a LineThrough object, connecting all the points in sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Graph Data</head><p>A graph visualization with both, node-link diagram and adjacency matrix representations, is presented in <ref type="figure">Figure 9</ref>. The graph is based on <ref type="figure">Fig. 9</ref>. Visualization design for the co-occurrence network graph from Les Misérables. Left: Node-link diagram with force directed layout. Right: adjacency matrix design. A brushing and linking mechanism for the graph edges is designed into this visualization. When the user selects a set of edges from either the left view or the right view, these edges will be highlighted in both views.</p><p>character co-occurrence in Hugo's Les Misérables 1 . The dataset contains a set of nodes and a set of edges, each edge referencing source and target nodes. The node-link diagram is constructed by first creating a ForceLayout object, which runs the Fruchterman-Reingold algorithm <ref type="bibr" target="#b14">[16]</ref> to compute the layout, and then attaching the resulting coordinates (x and y values) to the nodes. The nodes are then drawn as a scatterplot of the attached x and y values. The edges between nodes are drawn using references to the node scatterplot.</p><p>The matrix representation is created by first assigning an index for each node by the Expression object, then the edges are scattered as Circles with the source node's index as the x axis, and the target node's index as the y axis. Since the index attached by the Expression object can be changed, users can use the "MoveElement" tool to drag the labels on the left of the matrix to re-order the nodes.</p><p>This visualization design also supports brushing and linking. We added a BrushingValue object for the edges, so users can select a set of edges in the node-link diagram or in the matrix, and get them highlighted in both views. Since the BrushingValue object supports brushing both numbers and colors, we can color the edges or change their widths by brushing. What graphical attribute (color, width) to brush is up to the user. With our system, users are free to design their way of brushing and linking, and have end-users perform it interactively. <ref type="figure" target="#fig_0">Fig. 10</ref>. Weibo User Visualization. The datasets were crawled from Sina Weibo, including the metadata of the recent tweets of a selected user, their followers and friends. This visualization shows the user's trajectory in a map view, and links the map view with the time axis. Scatterplots of four joint distributions are shown. Due to privacy concerns, the data shown here is synthetic, roughly modeled on observed distributions only for illustrating the visualization design. Readers should not draw any conclusion about Weibo users from this visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Social Network Data</head><p>Next, we present an example with flexible linking between different views. We set up a data connection with WeiboEvents <ref type="bibr" target="#b24">[26]</ref>, which crawls data from Sina Weibo for iVisDesigner. The user can enter</p><formula xml:id="formula_0">P1 P2 P3 P4 Axis1 Axis2 Axis3 Axis1-2 Axis2-3 Axis1-2-3 Axis1 Axis2 Axis3 Axis1-2 Axis2-3 Axis1-2-3</formula><p>Bézier Curve <ref type="figure" target="#fig_0">Fig. 11</ref>. Interactive Bézier-curve illustration: users can drag the four control points to change the shape of the curve.</p><p>an account name in Weibo, then the crawler will crawl the account's tweets, friends and followers, and send the resulting dataset to iVisDesigner, where users can create visualization designs. <ref type="figure" target="#fig_0">Figure 10</ref> shows a visualization designed for such a dataset. It consists of a map showing the account's trajectory by connecting all of its geo-tagged tweets on the map. The map is linked with a time axis, revealing where the user was located during each time period. The right side contains several scatterplots, showing the statistics of the account's followers. Users could employ our system to create and connect various components, for example, they could move the time axis around, and see the connections more clearly, or link the map to the bottom timeline.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Generating Data from Scratch</head><p>In iVisDesigner, users can also create graphical designs without using an underlying dataset. This can be useful, e.g., to illustrate some mathematical concepts. In <ref type="figure" target="#fig_0">Figure 1 (6)</ref>, we plotted the Butterfly Curve <ref type="bibr" target="#b10">[12]</ref> on the canvas. This is done by first creating a Range generator object, which creates a range of numbers from 0 to 24π. Then, we created two Expression objects, each of which takes the generated numbers in the range, computes the parametric expressions for the x and y coordinates, and attaches the values to the Range's items. Finally, we created two Axis objects, a Scatter and a LineThrough object to visualize the function. The radii of the Circles are also bound to the function value in this case. After initial setup, users can interactively change the Range and the Expression as well, or define other mappings such as the color of the Circles.</p><p>In <ref type="figure" target="#fig_0">Figure 11</ref>, we created an interactive illustration of Bézier curves. We first created a Range of numbers from 0 to 1 as the t parameter in the curve, then created four Circles as the control points. Next we created three Axis objects connecting the four control points, then two Axis objects between the previous three, one Axis between the previous two, and finally the LineThrough that connects all the points in the Bézier curve. After the configuration, users can move the control points freely, the curve will change according to the user's interaction.</p><p>For these examples, we didn't employ any dataset. In our system, users can not only create data visualizations, but also create mathematical illustrations or even artistic designs, using a set of graphical objects and generator objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">EVALUATION</head><p>In this section, we first present a performance evaluation of our system and then show the results of an informal user study we conducted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Performance Evaluation</head><p>We analyzed the overhead added by iVisDesigner's mechanism for rendering visualizations. Our experiments were done on a MacBook Pro with 2.6GHz Intel Core i7 processor, 8GB RAM, running MacOS X 10.9.2. The browser used was Google Chrome 33.0.1750.146. We compared the rendering performance of our system with hard-coded Javascript and D3.js.</p><p>We created three visualization designs for the test: (1) Scatterplot with uniform size: a scatterplot for the Cars dataset (406 cars), showing MPG and Displacement, with circle size 5. (2) Scatterplot with mapped size: the same scatterplot, but the circle radius is mapped as the number of cylinders. (3) Timeline: A timeline plot showing minimum temperature in a particular place over 115 days. The times to render these visualizations are 7.3ms, 7.6ms, 0.3ms respectively. The hardcoded version runs 5 to 7 times faster (1.7ms, 1.5ms, 0.04ms) than our system. This is because we have an extra layer of data enumeration and mapping, which involves a lot of function calls in the code. D3.js is around 6 to 30 times slower (61.3ms, 52.2ms, 11.1ms) than our system. Since our system uses HTML5 Canvas as the rendering engine, it is not a fair comparison with D3.js, which renders graphical elements as SVG elements, but since D3.js is a successful programming-based visualization framework that is seen as reasonably efficient, we see this result as encouraging. We chose Canvas as the rendering engine because it is very fast, and we do not rely on the simplified mouse events provided by SVG, since our system itself is responsible for handling mouse events.</p><p>We also measured the amount of time to render the visualizations in our design examples. The Graph in <ref type="figure">Figure 9</ref> with 77 nodes and 254 edges, takes 43.54ms to render, the SPPC in <ref type="figure" target="#fig_4">Figure 4</ref> (2) with 406 cars takes 28.61ms, and the Beijing Air Pollution visualization in <ref type="figure" target="#fig_3">Figure 2</ref> with 3132 measurements for 36 stations takes 90.49ms to render.</p><p>The results of the performance evaluation shows that our prototype system is able to handle visualizations with hundreds or a few thousands of graphical items at real-time or at least interactive frame rates. The performance can be further improved by incorporating optimization techniques, such as reducing the number of function calls and auxiliary objects in the rendering process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Informal User Study</head><p>We conducted an informal user study for our system. The user study was designed to solicit feedback from real users of the system, after showing and teaching them the basic principles. We recruited 8 users, 4 male and 4 female, ranging in age from 24 to 32 years, with a median of 25, most of whom had Computer Science backgrounds and were familiar with computer-based visualization concepts. We also recruited one of them for a supervised study in the style of a thinking-out-loud cognitive walkthrough.</p><p>The informal user study was conducted on an online web interface, with participants performing various tasks, and optionally asking the supervisor questions. After a short introduction of the iVisDesigner tool and the goal of the study, users watched an 8-minute video tutorial (similar to the supplementary video) explaining basic steps in creating a scatterplot for the Cars dataset, a graph visualization of the character co-occurrence data, and some brushing and linking interactions on existing designs. Next, they were asked to try the system by following some steps from the video to get an initial sense of the logic and interactions of the system, and then to try and create their own designs from what they have learned. Finally, the users were asked to complete a survey with Likert-scale (2 = Strongly Agree, 1, 0, -1, -2 = Strongly Disagree) questions. All in all, users spent on the order of an hour on the user study. These are the average results for the questionnaires: "iVisDesigner is {expressive (1.75), easy to use (0.63), easy to understand (1.13), useful (1.88) }", "iVisDesigner is good for { basic visualizations (1.75), novel visualizations (1.25), multidimensional data (1.75), graph data (1.50), time-series data (1.63), visual analytics (1.00), overview (1.75), artistic designs (1.00) }". Most of the ratings are towards the top of the scale (2 or 1), with a few lower scores on "easy to use" and "easy to understand". Participants believed that our system is very expressive and useful, and good for designing visualizations for different types of data. One participant said that the system is very flexible, he could "make combinatory data/feature selection, for example, linking 2D and 1D elements together to create a polyline". From their textual comments, we observed that participants made use of templates very well; basic visualization designs could be created without difficulty. Ease of use and ease of understanding is more of a challenge for our system; as the participants pointed out, they had to carefully watch the video to learn the interactions. They also requested a more comprehensive user guide and tutorial. Usability could be improved by fine-tuning the user interactions. For example, one participant suggested we could enhance the highlighting when users select an element, making it more visible for better guidance. The tool-tip text in the status bar was also recommended to be moved upwards to attract more attention.</p><p>In addition, we recruited one participant, a researcher analyzing Twitter feeds for social feature extraction, for a supervised study. We presented three datasets for the participant to explore. The participant was asked to construct visualization designs and try to understand the datasets though these visualizations. During this process, the participant could ask for help on how to use the toolkit and he also commented on his mental processes and considerations.</p><p>The supervised study was informative and successful in the sense of user appreciation for the expressiveness, speed, and stability of the system. The participant experimented with the Weibo user dataset (discussed in subsection 6.4). Scatterplots were created to show the correlation of different attributes of a user's friends, and the participant made use of the brushing feature between two plots. Also, he tried to bind the radius of the points to the number of bidirectional followers. "I could easily discover bot / celebrity clusters. Also, by varying the radius of each circle proportional to the number of bidirectional followers, I was able to locate commercially used / institutional accounts. I was also able to locate individual / organizational accounts by looking at the logarithmic scatterplots by having different types of attributes of users. The labeling is more flexible than other visualization frameworks.". The participant also experimented with the Weibo geographical dataset, which contains a set of users, each having authored a series of geo-tagged tweets. Before the experiment, the locations in the dataset were clustered by a K-means algorithm, and the trajectories of users were grouped as edges between clusters. The user produced the visualization shown in <ref type="figure" target="#fig_0">Figure 12</ref>. "I'm able to identify usage of Weibo on each geographical area in the city. By applying timeline stamps on each edge between adjacent nodes (clusters), we can track the user movements between different locations over time. It is very interesting to see significant amount of communication and movement between adjacent nodes which can perhaps be the reflection of the physical proximity between the users." "I would have spent 1-2 hours to create this visualization by programming, it was done in a few minutes using iVisDesigner." The user also tried our system on one of his own Twitter datasets for a timeline plot, and identified some previously undiscovered date-time conversion problems in his data preprocessing. In summary, with some supervision, the user gradually understood the general process to create visualization designs in our system, and was able to apply his knowledge to create visualization designs and understand the datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">DISCUSSION</head><p>In this work, we have presented iVisDesigner, a novel expressive interactive information visualization construction toolkit. iVisDesigner is able to cover a wider spectrum of possible visualization designs than previous interactive (non-programming) toolkits. We already discussed its limitations in terms of expressiveness in section 4. Here we discuss usability concerns and possible future improvements.</p><p>As we increase expressiveness, the interactions to build a visualization design become more complex than required by more singlepurpose toolkits such as <ref type="bibr" target="#b8">[10]</ref>, because we need to allow specification of extra design parameters, which other toolkits predefine. Compared to, e.g. the Flexible Linked Axes work, we need to specify what data to map from and what types of graphical elements to use, in addition to the axes and scatterplots. There is clearly a tradeoff between expressiveness and complexity. A simple way to improve user accessibility is to add more templates for existing designs. Users could start with a common template, and then modify it to satisfy their own needs. During the design and evaluation of the system, we have observed that designing from scratch is much more involved than modifying an existing design; providing templates certainly helps lower the barrier to entry. Another possible direction is to automate some design decisions by trying to predict what the user may want to show, filling in suggested informed default values for more complex parameters.</p><p>The learning curve of our system is not low. One contributing factor is that we haven't yet optimized online help and error reporting, but we are steadily improving on that front. However, when users have to learn a whole set of new concepts, such as axes, references and components, it will inevitably take some time for them to embrace the possibilities and fully utilize their potential for creative designs.</p><p>In the framework of iVisDesigner, we did not yet fully consider the interaction among graphical elements. For example, when drawing a graph, there might be multiple edges between two nodes, depending on the dataset. In this case, users might want to define some rules other than just placing two lines in the same place, for example, double the thickness, or use a different color. These types of designs are not feasible in our current framework (also not in D3.js). We could insert a new step in the pipeline of our system, after the mapping stage. Once we have all the graphical elements, we can allow users to define interactions among graphical items before they get rendered.</p><p>Dynamic visualization design is another future direction. Up to now, we have dealt predominantly with static visualizations, with the exception that we are able to re-render the visualization when the dataset is changed. However, users cannot define how a graphical element appears or disappears when a corresponding data item is added or removed. This could be achieved by adding a property on graphical elements that would let users specify various types of transitions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION</head><p>We presented iVisDesigner, an expressive interactive web-based information visualization construction toolkit. Our system was designed to be a flexible tool for interactively creating information visualizations, inspired by interactive vector-based drawing tools and established information visualization principles. The system allows users to freely place graphical elements, and links between them, on a large central canvas. We chose a declarative approach to avoid reliance on familiarity with programming and for keeping the usage simple and straightforward. Our unified editing interface allows users to create and edit graphical, guide, and generator objects, enabling the interactive design of complex visualizations. We presented example applications to illustrate the breadth of design possibilities, discussed the limitations and future improvement possibilities of our approach, and reported the results of a performance evaluation and an informal user study. We hope that this work can inspire further contributions in the field of interactive information visualization design.</p><p>The source code of iVisDesigner is available on Github: https://github.com/donghaoren/iVisDesigner.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Example visualization designs created in iVisDesigner.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>For</head><label></label><figDesc>information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org. Manuscript received 31 Mar. 2014; accepted 1 Aug. 2014 ate of publication 2014; date of current version 2014. 11 Aug. 9 Nov. D . Digital Object Identifier 10.1109/TVCG.2014.2346291</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .</head><label>2</label><figDesc>The interface of iVisDesigner. (1) Menu Bar: Commands for loading or saving visualization designs, view settings, login and logout. (2) Tools Panel: Tools for moving objects around, creating new objects and changing the view. Grouped into different categories. (3) Schema Panel: Shows the structure of the dataset. Allows selection. (4) Objects Panel: Shows the objects currently in the visualization design. Allows selection. (5) Style Panel: Adjust graphical styles for currently selected objects. (6) Property Panel: Adjust properties of currently selected objects.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Two basic visualization designs: (1) Scatterplot (2) SPPC, as in<ref type="bibr" target="#b38">[40]</ref>. The scatterplot consists of two Axes, a Scatter and a Circles object, with Axes and Scatter objects providing location information for the Circles object, which maps cars to circles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Fig. 5. The properties and styles of the objects can be defined in the corresponding panels. Styles are drawing actions, such as Fill and Stroke; properties define the shape of the object, such as Center and Radius. Both, properties and styles can be defined as plain values or mapped from data via the UI.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6</head><label>6</label><figDesc>Fig. 6. The internal process of brushing. When the user brushes over a set of graphical elements with the lasso tool, they are collected and passed to the BrushingValue object (which can be created and activated by the user). The BrushingValue object then attaches data back to the data representation, and the attached data can be used by mapping objects, which affect the graphics. Users can define and combine multiple ways of brushing in our system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 12 .</head><label>12</label><figDesc>A visualization design by the participant from the supervised study. Each circle shows a cluster of tweets, dots between circles show the time-dependent movement pattern between clusters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>iVisDesigner: Expressive Interactive Design of Information Visualizations Donghao Ren, Tobias Höllerer and Xiaoru Yuan</figDesc><table><row><cell>(1) Beijing Air Pollution Dataset</cell><cell>(2) Friends of a Weibo User</cell><cell>(3) Server Monitoring Data</cell></row><row><cell>(4) Parallel Coordinates</cell><cell>(5) Geospatial Data from Tweets</cell><cell>(6) Parametric Plot</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Dataset compiled by Donald Knuth, retrieved from http://bl.ocks.org/mbostock/4062045</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors wish to thank the anonymous reviewers for their extremely helpful suggestions and criticisms. We acknowledge the participants in our user study for their valuable comments. This work was partially supported by the U.S. Army Research Office under MURI grant No. W911NF-09-1-0553 and the Office of Naval Research under contract N00014-14-1-0133.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://processing.org/" />
		<title level="m">Processing</title>
		<meeting>essing</meeting>
		<imprint>
			<date type="published" when="2014-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Vistrails: enabling interactive multiple-view visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bavoil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Callahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Crossno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Freire</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Scheidegger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Vo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization, 2005. VIS 05. IEEE</title>
		<imprint>
			<date type="published" when="2005-10" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">J. Bertin. Sémiologie Graphique. Editions Gauthier-Villars</title>
		<imprint>
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Semiology of graphics. W. Berg, transl., University of Wisconsin Press</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bertin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<pubPlace>Madison, Wisconsin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Protovis: A graphical toolkit for visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1121" to="1128" />
			<date type="published" when="2009-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">D3 data-driven documents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ogievetsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2301" to="2309" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The structure of the information visualization design space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Information Visualization</title>
		<meeting>IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="92" to="99" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A spreadsheet approach to information visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">H</forename><surname>Chi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Barry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Riedl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Konstan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Visualization, 1997. Proceedings., IEEE Symposium on</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="17" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Flexible linked axes for multivariate data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H T</forename><surname>Claessen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2310" to="2316" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Car data</title>
		<ptr target="http://lib.stat.cmu.edu/datasets/cars.data" />
		<imprint/>
		<respStmt>
			<orgName>CMU StatLib</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The butterfly curve</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">H</forename><surname>Fay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The American Mathematical Monthly</title>
		<imprint>
			<biblScope unit="volume">96</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="442" to="443" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The infovis toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fekete</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Visualization</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="167" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">behaviorism&quot;: a framework for dynamic data visualization. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Forbes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hollerer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Legrady</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1164" to="1171" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Iris explorer: A framework for investigation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Foulser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIG-GRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="13" to="16" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Graph drawing by forcedirected placement. Software-Practice and Experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M J</forename><surname>Fruchterman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Reingold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1129" to="1164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A survey of visualization construction user interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Grammel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bennett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tory</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-A</forename><surname>Storey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Eurographics Association</title>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="19" to="23" />
		</imprint>
	</monogr>
	<note>EuroVis-Short Papers</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Wysiwyg (what you see is what you get) volume visualization. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yuan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2106" to="2114" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Conman: a visual programming language for interactive graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">E</forename><surname>Haeberli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM SigGraph Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="103" to="111" />
			<date type="published" when="1988" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Declarative language design for interactive visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1149" to="1156" />
			<date type="published" when="2010-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Prefuse: a toolkit for interactive information visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Landay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI conference on Human factors in computing systems</title>
		<meeting>the SIGCHI conference on Human factors in computing systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="421" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Voyagers and voyeurs: supporting asynchronous collaborative information visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">B</forename><surname>Viégas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wattenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI conference on Human factors in computing systems, CHI &apos;07</title>
		<meeting>the SIGCHI conference on Human factors in computing systems, CHI &apos;07<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="1029" to="1038" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Sketchstory: Telling more engaging stories with data through freeform sketching. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kazi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2416" to="2425" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Automating the design of graphical presentations of relational information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="110" to="141" />
			<date type="published" when="1986-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Creating charts by demonstration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Goldberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;94</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;94<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="106" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Weiboevents: A crowd sourcing weibo visual analytic system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yuan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis)</title>
		<imprint>
			<date type="published" when="2014-03" />
			<biblScope unit="page" from="330" to="334" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Interactive graphic design using automatic presentation knowledge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI conference on Human factors in computing systems</title>
		<meeting>the SIGCHI conference on Human factors in computing systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="112" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Lyra: An interactive visualization design environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2014" />
			<biblScope unit="volume">33</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A generative layout approach for rooted tree drawings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-J</forename><surname>Schulz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Akbar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Maurer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization Symposium (PacificVis), 2013 IEEE Pacific</title>
		<imprint>
			<date type="published" when="2013-02" />
			<biblScope unit="page" from="225" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The eyes have it: A task by data type taxonomy for information visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1996 IEEE Symposium on Visual Languages</title>
		<meeting>the 1996 IEEE Symposium on Visual Languages</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="336" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">The vega visualization grammar</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Trifacta</surname></persName>
		</author>
		<ptr target="http://trifacta.github.io/vega/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">The application visualization system: A computational environment for scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Faulhaber</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kamins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vroom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gurwitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="30" to="42" />
			<date type="published" when="1989" />
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Drawing dynamic visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Victor</surname></persName>
		</author>
		<ptr target="http://vimeo.com/66085662" />
		<imprint>
			<date type="published" when="2013-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Manyeyes: a site for visualization at internet scale</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">B</forename><surname>Viegas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wattenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kriss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mckeon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1121" to="1128" />
			<date type="published" when="2007-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Understanding pen and touch interaction for data exploration on interactive whiteboards. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Walny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Johns</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Riche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2779" to="2788" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Building highly-coordinated visualizations in improvise</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Weaver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Visualization</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="159" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">ggplot2: Elegant Graphics for Data Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wickham</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Springer Publishing Company</publisher>
		</imprint>
	</monogr>
	<note>Incorporated. 2nd edition</note>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">The grammar of graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Commentspace: structured support for collaborative visual analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Willett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Agrawala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2011 annual conference on Human factors in computing systems, CHI &apos;11</title>
		<meeting>the 2011 annual conference on Human factors in computing systems, CHI &apos;11<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="3131" to="3140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Scattering points in parallel coordinates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1001" to="1008" />
			<date type="published" when="2009-11" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
