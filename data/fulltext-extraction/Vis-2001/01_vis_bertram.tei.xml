<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Wavelet Representation of Contour Sets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Bertram</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">E</forename><surname>Laney</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><forename type="middle">A</forename><surname>Duchaineau</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><forename type="middle">D</forename><surname>Hansen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Kenneth I. Joy</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">University of Utah</orgName>
								<orgName type="institution" key="instit2">SCI Institute</orgName>
								<address>
									<addrLine>50 S. Central Campus Drive, Room 3190, Salt Lake City</addrLine>
									<postCode>84112</postCode>
									<region>UT</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<postBox>P.O. Box 3049</postBox>
									<postCode>D-67653</postCode>
									<settlement>Kaiserslautern</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">Center for Applied Scientific Computing (CASC)</orgName>
								<orgName type="laboratory">Lawrence Livermore National Laboratory</orgName>
								<address>
									<addrLine>L-561, Livermore</addrLine>
									<postBox>P.O. Box 808</postBox>
									<postCode>94551</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing (CIPIC)</orgName>
								<orgName type="department" key="dep2">partment of Computer Science</orgName>
								<orgName type="department" key="dep3">Davis</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<addrLine>De</addrLine>
									<postCode>95616-8562</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<address>
									<addrLine>San Diego</addrLine>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Wavelet Representation of Contour Sets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>E.4 [Coding and Information Theory]: Data Compaction and Compression; G.1.2 [Numerical Analysis]: Approximation -Approximation of Surfaces and Contours Contours</term>
					<term>Geometry Compression</term>
					<term>Isosurfaces</term>
					<term>Level Sets</term>
					<term>Multiresolution Methods</term>
					<term>Wavelets</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a new wavelet compression and multiresolution modeling approach for sets of contours (level sets). In contrast to previous wavelet schemes, our algorithm creates a parametrization of a scalar field induced by its contours and compactly stores this parametrization rather than function values sampled on a regular grid. Our representation is based on hierarchical polygon meshes with subdivision connectivity whose vertices are transformed into wavelet coefficients. From this sparse set of coefficients, every set of contours can be efficiently reconstructed at multiple levels of resolution. When applying lossy compression, introducing high quantization errors, our method preserves contour topology, in contrast to compression methods applied to the corresponding field function. We provide numerical results for scalar fields defined on planar domains. Our approach generalizes to volumetric domains, time-varying contours, and level sets of vector fields.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Scientific visualization methods help us to explore and understand the nature of vast amounts of digital data produced by numerical simulations on supercomputers or by imaging technology like computer tomography. Visualizing scalar fields via exploration of their isosurface behavior is one of the most powerful ways to gain insight into a physical phenomenon. Our approach is driven by the need to explore very large scalar fields interactively by browsing through their continuous space of contours. In the past, multiresolution methods were developed for the modeling, rendering, and exploration of complicated two-manifold data, e.g., large-scale isosurfaces <ref type="bibr" target="#b0">[1]</ref>. In order to explore the entire contour space of a scalar field more powerful methods are required, as entire families of contours have to be extracted, represented, and rendered. The approach we are presenting here is driven by such considerations. We introduce a new framework for the multiresolution approximation of a multitude of contours defined by a single scalar field. This frame-work promises to have significant impact on state-of-the-art visualization and exploration of truly massive, tera-scale scalar field data.</p><p>Visualization methods often rely on continuous geometric models representing the relevant topological and geometric features of a data set. Multiresolution modeling techniques, like wavelet transforms <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b15">16]</ref>, provide efficient progressive access to local geometry. Wavelet transforms coupled with progressive coders for quantized coefficients are among the most efficient schemes for compression, error-driven querying, and progressive transmission of data defined on regularly gridded domains <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18]</ref>. When visualizing derived quantities or features, such as contours, these need to be extracted from a locally reconstructed geometric model. This extraction process can be very expensive, especially in the case of volume data, since an unknown surface topology needs to be recovered.</p><p>Standard wavelet compression algorithms <ref type="bibr" target="#b17">[18]</ref> transform a function into wavelet coefficients of expectedly small absolute values. These coefficients are quantized (rounded to integers) or thresholded (selected by magnitude of absolute values) and compressed by a progressive coding scheme like zero trees <ref type="bibr" target="#b14">[15]</ref>. When extracting contours from compressed data altered by quantization errors, there exists no guarantee of obtaining topologically correct contours. When reconstructing data from thresholded or quantized wavelet coefficients, for example, the resulting contours may even have additional components enclosing local extrema of the reconstruction error, see <ref type="bibr">Figures 1 (a)</ref> and <ref type="bibr">(d)</ref>.</p><p>The wavelet approach presented here overcomes this problem by compressing a parametrization of a field function that is induced by its contours, rather than compressing a field function directly. Our approach also simplifies the topology of represented contours. However, this simplification is performed in an initial step of our algorithm, where a finite set of selected contours, called base contours, is extracted. All other contours represented by our method have the topology of a corresponding base contour of the closest isovalue. Since the set of base contours can be chosen arbitrarily, our method introduces a predictable topological error reducing the quantity of topological changes that need to be stored. Compared to conventional compression methods for scalar fields, our method requires some additional space for storing contour topology. However, our method preserves the prescribed contour topology at every level of resolution and provides efficient access to the geometry, see Figures 1 (b+c) and (e+f).</p><p>Starting with the set of base contours, we construct a coarse mesh structure, the base mesh, covering the domain of the underlying field function. This base mesh is recursively subdivided, and its vertices are projected onto intermediate contours. The resulting adaptive mesh structure is equivalent to a subdivision surface/volume with displacement of vertices correcting the geometry at finer levels of detail. Our algorithm represents these displacements compactly in the form of sparse wavelet coefficients. The contours produced by our subdivision process are either linear or cubic polynomials.</p><p>We represent a scalar field by a continuous parametrization of its domain that is defined by a subdivision surface/volume. This parametrization is a function mapping a manifold into Euclidean space. In the case of planar contours, our manifold domain has one global parameter specifying the isovalue and one local parameter traversing the corresponding contour. (In the case of isosurfaces of ¦ § ¦© ¦ ¦ ¦ ¦ <ref type="figure">Figure 1</ref>: Contours of a slice taken from a volume data set (Rayleigh-Taylor instability simulation). (a) Contours extracted from full resolution slice ( samples); (b+c) contours represented by our method at different levels of resolution using a bilinear wavelet transform, based on 2631 and 656 coefficients, respectively; (d) contours extracted from a wavelet compression of the slice using a bicubic wavelet and 612 coefficients; (e+f) same as (b+c) using a bicubic wavelet. trivariate functions, our manifold has one parameter for the isovalue and two local parameters traversing an isosurface.) The coarsest level of resolution is defined by a base mesh providing both, the manifold topology and a coarse parametrization obtained by recursive subdivision. During the subdivision process, geometric detail can be expanded from wavelet coefficients resulting in representations at higher level of resolution.</p><p>Our representation of contour sets is equivalent to a representation of the underlying field function, but it provides rapid access to every contour at multiple levels of resolution. This is a highly desirable property for real-time visualization of contours, allowing for interactively changing isovalues and rendering multiple transparent isosurfaces at once. Our representation provides additional flexibility for algorithms processing contours with the goal of improving the underlying field function. For example, constrained fairing of all contours of a field function is a non-trivial operation that becomes fairly simple when using our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Multiresolution contouring schemes extract isosurfaces from hierarchical scalar field representations providing multiple levels of detail. Weber et al. <ref type="bibr" target="#b18">[19]</ref> present an efficient construction method for crack-free isosurfaces from adaptively refined hexahedral domains. A similar approach using a hierarchical octree structure for interac-tive view-dependent contouring is presented by Westermann et al. <ref type="bibr" target="#b19">[20]</ref>. A real-time rendering approach for multiple transparent isosurfaces reconstructed from a tetrahedral grid hierarchy is described by Gerstner <ref type="bibr" target="#b3">[4]</ref>.</p><p>Wood et al. <ref type="bibr" target="#b20">[21]</ref> use a surface wavefront propagation method for constructing a coarse base mesh approximating an isosurface with correct topology. Their approach provides a semi-regular triangular subdivision hierarchy of an isosurface that is useful for wavelet compression. In previous work, we have constructed quadrilateral base meshes with subdivision hierarchy that were used for wavelet compression of isosurfaces <ref type="bibr" target="#b0">[1]</ref>. Our wavelet construction for subdivision surfaces <ref type="bibr" target="#b1">[2]</ref> generalizes to higher dimensions, e.g., volumes of manifold topology, like level sets and time-varying surfaces. Wavelet constructions for subdivision surfaces were initially described by Lounsbery et al. <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b15">16]</ref>.</p><p>When using wavelet approaches for geometry compression <ref type="bibr" target="#b5">[6]</ref>, it becomes important to construct smooth surface parametrizations by improving the regularity of control meshes. For triangle meshes, such regular parametrizations are constructed by the MAPS algorithm described by Lee et al. <ref type="bibr" target="#b6">[7]</ref>. Similar algorithms need to be developed for pseudo-regular meshing of three-dimensional level sets. A multiresolution approach for matching contours defined on different cutting planes is presented by Meyers <ref type="bibr" target="#b9">[10]</ref>. Efficient meshing algorithms for level sets are described by Sethian <ref type="bibr" target="#b13">[14]</ref>.</p><p>To our knowledge, previous methods have not attempted to reparametrize sets of contours for the purpose of wavelet compres-sion. Hence, our general approach is innovative, combining individual ! techniques from different fields, such as contour extraction, mesh generation, and subdivision surface wavelets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Adaptively Representing Contour Sets</head><p>This section describes our novel multiresolution approach for sets of contours. We describe our algorithm in the context of bivariate scalar fields and provide extensions to volumetric domains, timevarying contours, and level sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Overview of the Algorithm</head><p>Our algorithm first constructs a coarse base mesh induced by certain base contours. This mesh is then regularly subdivided, and the new vertices are projected onto intermediate contours. Finally, we use a wavelet transform for compression and multiresolution modeling of this mesh structure, defining smooth sets of contours by recursive subdivision. Our algorithm consists of the following steps that are illustrated in Color Plates (a-f):</p><p>1. Extraction of a prescribed set of base contours, using, for example, uniformly distributed isolevels. This set of contours defines the topology of all intermediate contours represented by our scheme.</p><p>2. Sampling base vertices distributed uniformly with respect to arc lengths from the extracted base contours. These vertices will represent the coarsest level of detail for our parametrization. Hence, the set of base contours selected in step 1 should not be too dense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Constructing links between base vertices on adjacent base</head><p>contours and relaxing these links by moving the base points on their corresponding contours.</p><p>4. Filling the space between adjacent base contours and their links with convex polygons that have low numbers of edges. The resulting base mesh serves as coarsest level of detail, defining a smooth parametrization of contours when recursively subdivided (using, for example, Catmull-Clark subdivision <ref type="bibr" target="#b8">[9]</ref>).</p><p>5. Regular subdivision of the base mesh by inserting new vertices at the centroid of every polygon and in the middle of every edge. The vertices obtained by subdivision are connected to define a quadrilateral, recursively refined mesh structure. Every vertex is associated with a certain isovalue, such that certain edges of the mesh approximate contours of the scalar field. After every subdivision step, the vertices are projected onto associated contours. This subdivision process terminates at a resolution slightly finer than the grid resolution of the underlying field function.</p><p>6. Subdivision-surface wavelets <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref> are used to generate a hierarchy of continuous parametrizations. The differences between individual levels of detail are compactly represented by wavelet coefficients. Data compression can be achieved by thresholding or by encoding quantized coefficients <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b14">15]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Constructing Base Meshes</head><p>As a first step we extract a finite set of base contours using a standard approach. The corresponding isovalues can be uniformly distributed or they can be more densely sampled in certain regions of  <ref type="figure" target="#fig_0">Figure 2</ref>, that we will compute and on the finest sampling distance &amp; , which should be slightly smaller than the edge length of the regular grid defining the field function. Hence, we use</p><formula xml:id="formula_0">" ( ' 0 ) 1 3 2 ¢ &amp; 4 (3.1)</formula><p>All boundary points of contours need to be base vertices, such that the base contours can be completely generated by dyadic refinement. Additionally, we require every contour component to have at least three base vertices, to avoid degenerate base polygons. , with convex polygons. Therefore, it is desired to connect matching pairs of base vertices from both contours, which will improve the fairness of our final parametrization. We use Newton-iteration to propagate the base vertices of , see <ref type="figure" target="#fig_1">Figure 3</ref>. Base vertices located on the boundary of the data set are simply connected by traversing this boundary.</p><p>The length of the individual links between every pair of base vertices is minimized by an iterative procedure, allowing the base vertices to move a certain distance along their corresponding contours, see <ref type="figure" target="#fig_3">Figure 4</ref>. Here, we restrict the maximal displacement of a vertex to the value  nents, "islands", are connected by one additional link to the closest base vertex on its surrounding contour component.</p><p>The mesh structure resulting from this procedure already defines a set of closed polygons covering the scalar field domain. However, some polygons may still be very large and non-convex and need to be subdivided further. Additionally, we need to represent these polygons explicitly. For this purpose, we traverse every polygon in counter-clockwise orientation of edges and record the participating base vertices. We use every base vertex as a starting point for constructing a potential polygon. Every edge in the mesh has two associated flags for traversal in each direction, which are set when a polygon is constructed. These flags are tested for every traversal to avoid multiple constructions of the same polygon. The constructed polygons are then recursively split until they are convex and consist of no more than five edges. Splitting a polygon is performed by connecting a pair of close, non-adjacent vertices, avoiding selfintersections and augmentation of the enclosed region in case of a non-convex polygon, see <ref type="figure" target="#fig_4">Figure 5</ref>. The resulting set of polygons is a convex tessellation of the domain, the base mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Regular Mesh Refinement</head><p>Once we have generated our base mesh, we apply recursive subdivision using the refinement connectivity of Catmull-Clark subdivision inserting vertices at the centroids of polygons and on their edges. The first subdivision step generates quadrilaterals that are regularly refined in the subsequent steps, as illustrated in <ref type="figure">Figure 6</ref>. Instead of applying stationary subdivision rules to compute the coordinates for vertices on finer levels, we place them on intermediate contours. The subdivision process terminates at a resolution slightly finer than the resolution of the initial rectilinear grid defining the field function. This mesh hierarchy is then compressed using wavelets.</p><p>Before we can project the new vertices onto intermediate contours, we have to define an isovalue for every vertex. After the first subdivision step, the resulting vertices are either located on a base contour or placed in the space between two base contours. In the latter case, these vertices will be associated with the average of both corresponding isovalues. For the subsequent levels of regular, rectilinear refinement, we use the templates illustrated in <ref type="figure" target="#fig_5">Figure 7</ref>: vertices located on edges are assigned the average isovalue of both incident vertices. Vertices located inside a quadrilateral are assigned <ref type="figure">Figure 6</ref>: Regular mesh refinement near a saddle point located in the center of the five-sided patch. the average of the minimal and the maximal isovalues of the quadrilateral's four corner vertices.</p><formula xml:id="formula_1">Q R Q R Q S Q S</formula><p>Every vertex is projected onto a contour with the correct isovalue. For this purpose, we use a constrained Newton iteration coupled with Laplacian smoothing of the mesh (moving every vertex to the centroid of its neighbors). In every step of the Newton iteration, a vertex is propagated along the gradient of the field and subsequently relaxed orthogonal to the gradient by projecting the Laplacian displacement onto a vector/plane orthogonal to the gradient. Again, the maximal displacement is limited by the distance &amp; . Due to the topology simplification imposed by the choice of base contours, some vertices cannot be projected onto the correct contour, since a nearby component of this contour does not exist. In this case, the relaxation prevents the mesh from entangling. The iteration process must terminate after a finite number of steps. Besides critical points (points where contour topology changes, e.g., saddle points and local extrema), the worst-case scenario are long "headlands" in the scalar field, where the mesh is either collapsed or stretched along a ridge, see <ref type="figure" target="#fig_6">Figure 8</ref>. However, the geometric error of every mesh vertex is bounded by one half of the sampling distance for base isovalues. The behavior of our meshing algorithm is shown in <ref type="figure" target="#fig_7">Figure 9</ref> and Color Plates (a-f).</p><formula xml:id="formula_2">T U T V T V T U T V T V</formula><p>From the mesh structure we have constructed, every contour can be derived immediately by linear interpolation of its closest contours that are explicitly represented in the mesh. Alternatively, we can use a subdivision scheme, like Catmull-Clark, to refine the mesh smoothly. We do not need to store the isovalues associated with every vertex, since these can be recovered from the base mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>WX Y WỲ</head><p>Wa Y Wb Y </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Subdivision-surface Wavelets</head><p>Starting with our regularly refined mesh hierarchy composed of vertices located on certain contours, we can efficiently derive any set of contours using subdivision and linear interpolation. For compression purposes and level-of-detail rendering, we need a multiresolution representation of this mesh structure providing these operations: c Subdivision. This operation defines stationary subdivision rules providing a continuous limit surface when applied recursively. The mesh vertices correspond to control points of smooth basis functions.</p><p>d Expanding detail. At every level of refinement, geometric detail can be added to a subdivision surface. This detail is compactly stored in the form of wavelet coefficients and can be expanded from these. e</p><p>Fitting. This operation reverses a subdivision step. Based on all vertices on a fine level, the vertices on the next coarser level are predicted such that they provide a good approximation to the fine level when applying subdivision, again.</p><p>f Compacting detail. The difference between two levels of resolution, i.e., the displacement of mesh vertices when applying e followed by c , is compactly stored in form of wavelet coefficients that replace the vertices removed by e . The modeling paradigm of such a multiresolution representation is illustrated in <ref type="figure" target="#fig_8">Figure 10</ref>. These four operations define a wavelet transform for subdivision surfaces. We have constructed wavelets for bilinear and bicubic subdivision generalized to arbitrary meshes with regular refinement <ref type="bibr" target="#b1">[2]</ref> and used the bicubic wavelet transform for multiresolution modeling of large-scale isosurfaces <ref type="bibr" target="#b0">[1]</ref>. We summarize the details necessary to implement these transforms in the remainder of this section.    A wavelet transform is computed by repeated decomposition, starting with a fine resolution and terminating at the coarse resolution of a base polygon. We now describe the generalization of these lifting operations to polygon meshes with regular subdivision hierarchy. The refinement of a regular, rectilinear mesh is illustrated in <ref type="figure" target="#fig_1">Figure 13</ref>. The vertices corresponding to wavelet coefficients are located on edges and polygons (faces) of the coarse mesh and are denoted by , and , respectively. On a completely regular mesh, a lifting operation is performed by applying the corresponding one-dimensional operation to the rows and columns, see <ref type="figure" target="#fig_3">Figure 14</ref>. Instead of updating the vertices twice in an s-lift operation, we can change the order of computation such that every vertex is modified only once, as illustrated in <ref type="figure" target="#fig_4">Figure 15</ref>.  is the centroid of a polygon. Using this notation, the two-dimensional lifting operations are defined like this:</p><formula xml:id="formula_3">2D s-lifte g f i h k j ¢ l : n j w t { ) f n j f ¢ t v f q i 4 (3.4) 2D w-lifte g f i h y j z l : n p j | t { ) f n p j f t } f 4</formula><p>(3.5)</p><p>Using these index-free definitions, our lifting operations are well defined for extraordinary vertices (vertices that do not have four incident edges) and for arbitrary polygons in a base mesh. These two-dimensional lifting operations are used to transform the inner vertices of a mesh, according to the decomposition and reconstruction rules defined above. A two-dimensional scaling function and a wavelet are depicted in <ref type="figure" target="#fig_14">Figure 16</ref>. For a correct transformation of mesh boundaries, all boundary vertices are transformed by the one-dimensional lifting operations, equations (3.2) and (3.3). Starting with the finest-level mesh structure constructed in the previous section, we compute our wavelet decomposition repeatedly until we reach the base mesh. The base vertices then represent a coarse approximation that is obtained by subdivision without expansion ¡ of detail. All vertices that are not base vertices contain wavelet coefficients that can be used to reconstruct the subdivision level where these vertices were introduced. For compression purposes, we can quantize the wavelet coefficients and compress them using, for example, arithmetic coding. We note that all coefficients have two coordinates, since they represent points and vectors in the plane.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Extensions of our Algorithm</head><p>We outline some modifications to our algorithm that are necessary to represent time-varying contours and to represent threedimensional manifolds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Time-varying Contours and Level Sets</head><p>Time-varying contours and level sets, i.e., surfaces evolving over time like shock waves and material interfaces in fluid simulations, can be represented and compressed in the same way as contour sets. A major difference of time-varying curves/surfaces is that they can become self-intersecting over time, whereas contours propagate locally in only one direction when their isovalues are monotonically changed. Our algorithm for constructing base meshes cannot be used for curves/surfaces of this type, since it assumes that the set of base polygons provides a planar tessellation without selfintersections.</p><p>In general, it is possible to construct meshes with manifold topology approximating time-varying objects. For this purpose, we need to construct a mapping between objects from consecutive base time steps. For the case of one-dimensional contours, a multiresolution tiling algorithm is presented by Meyers <ref type="bibr" target="#b9">[10]</ref>. This algorithm constructs polygons connecting contours on different planes corresponding to different times steps. We could use this method for generating base meshes of manifold topology that could then be subdivided recursively and iteratively displaced onto contours at intermediate time steps. Level set and efficient marching methods for meshing time-dependent surfaces are described by Sethian <ref type="bibr" target="#b13">[14]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Wavelet Representation of Three-manifolds</head><p>In the case of time-varying surfaces or sets of static isosurfaces, lattices composed of polyhedral cells need to be constructed, connecting two surface components of consecutive base time steps or filling the space between two adjacent base isosurfaces. These lattices are recursively refined by placing new vertices inside each cell, on every face, and on every edge, see <ref type="figure" target="#fig_5">Figure 17</ref>. A generalization of Catmull-Clark surfaces to this type of volumetric subdivision is provided by MacCracken and Joy <ref type="bibr" target="#b8">[9]</ref>. Many types of polyhedra, like prisms and tetrahedra, produce hexahedra after the first subdivision step, allowing for regular refinement. Unfortunately, some polyhedra, like pyramids, produce so-called type-# cells composed of</p><formula xml:id="formula_4">) # ¦ t § )</formula><p>vertices and ) #</p><p>faces.</p><p>These reproduce two type-# cells when subdivided. To keep the mesh structure simple, it is desired to avoid type-# cells, except for the case # '</p><p>(hexahedra). Our wavelet transform generalizes nicely to volumetric (and higher-dimensional) subdivision, since the individual lifting operations can be computed by a sequence of vertex-manipulations for every type of vertex, analogously to the two-dimensional case. When applied to a regularly gridded domain, these lifting operations define tensor-product basis functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head><p>We have implemented and tested our algorithm for scalar fields defined on planar domains. As an example data set, we have used a slice of rich geometric detail taken from a three-dimensional numerical simulation of a Rayleigh-Taylor instability, courtesy of Lawrence Livermore National Laboratory. The initial slice is defined by © ª ª ' « 3 ¬</p><p>byte samples given on a regularly gridded domain. We extracted nine base contours at uniformly distributed isovalues, re-sampled at a resolution &amp; of half the length of a grid edge. We used # $ = 3 levels of subdivision for mesh generation. Our algorithm generated a base mesh composed of 656 vertices and 661 polygons, resulting in 40947 vertices (corresponding to wavelet coefficients) after three levels of subdivision, which corresponds to an over-sampling factor of about ten. For our wavelet representation, we need to store the coordinates of the 656 base vertices (their isovalues can be recorded by grouping vertices of same contours together into a list), the connectivity of the base mesh, and the wavelet coefficients, which can be quantized and encoded at high compression rates. Hence, our over-sampled representation of contours may use less storage space than the original data set. This becomes crucial when converting large-scale data sets into our representation. The computationally expensive part of our algorithm is the projection of vertices onto contours, which required less than ten seconds on an SGI ® workstation using a 180 MHz R5000 processor.  <ref type="table">Table 1</ref>: Geometric error of represented contours relative to increment of isovalue at finest subdivision level (index three).</p><p>We used our generalized bilinear and bicubic wavelet transforms to compute different levels of resolution, obtained by removing wavelet coefficients on the highest-resolution levels and reconstructing the mesh at the finest level of refinement, obtained after three subdivisions. The reconstructed meshes are depicted in Color Plates (g-l). The finest-resolution mesh is shown in Color Plate (f). We rendered these meshes by assigning the same color to all quadrilaterals located between each pair of adjacent contours at the finest level. The contours corresponding to levels 0 and 1 are also depicted in <ref type="figure">Figures 1</ref>.</p><p>The geometric errors of all contours that are explicitly represented in the mesh at finest level are shown in <ref type="table">Table 1</ref>. These errors represent the difference between the isovalue associated with a mesh vertex and the real function value of the underlying scalar field at the vertex location. All errors are relative to the difference of two adjacent contours represented in the finest mesh. An error larger than one means that adjacent contours may be intersecting and the°mesh no longer defines a unique parametrization of the domain. In the case of lossy compression, this can be avoided by appropriately choosing a threshold for quantization of wavelet coefficients. We note that this problem does not occur in the case of time-varying contours, where self-intersections over time are natural.</p><p>The geometric error at the finest-resolution mesh is caused by regions of incorrect topology where vertices could not be projected onto their corresponding contour. For the majority of vertices, the geometric error is zero, which explains why the¯ -error (the average of individual errors) is much smaller than the¯ -error (the square-root of the averaged squared errors).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>Our approach supports the exploration of scalar fields via their contours. A key issue of our approach is the construction of a base mesh of manifold topology that is induced by a set of originally extracted contours. This base mesh defines a subdivision surface/volume from which all intermediate contours can be reconstructed efficiently. During this subdivision process, geometric detail is expanded from wavelet coefficients increasing the level of detail. For efficiently representing very large data sets it will be crucial to select and construct a locally optimal set of base contours and to blend the resulting local base meshes to a global representation. A solution to this challenging problem might be the consideration of topological characteristics of a field function, like critical points and separatrices, which can be constructed explicitly for scalar and vector fields <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b12">13]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Dyadic refinement of a closed and an open contour component interest. Then we define base vertices by re-sampling the base contours at approximately equidistant intervals of arc length "</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Constructing links between contours lowing the gradient starting at base vertices. Some vertices cannot be linked due to field regions of zero gradient.The next task is to fill the space between every adjacent pair of base contours, say</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>.</head><label></label><figDesc>In each step of this iteration, the movement of a vertex is restricted to a maximal distance of &amp; , to avoid divergence due to shallow gradients. Some vertices will not converge to the contour A E D , since they may get stuck at local extrema or zerogradient areas, and the iteration must terminate after a prescribed number of steps. Those vertices that converge to contour A E D are linked to the closest base point on A E D and their initial position on contour A B is restored. To find all possible links, this step of the algorithm is repeated with the vertices of A E D , iterating towards contour A B</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FG,Figure 4 :</head><label>4</label><figDesc>to avoid coincidence of adjacent base vertices. This step is necessary to improve smoothness of the final parametrization and to avoid intersections of polygon strips defined by the base vertices of every contour component. Isolated compo-Relaxing a link between base vertices on contoursA Band A E D by displacing these vertices along their contours.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Splitting a non-convex polygon. Left: invalid split; right: correct split.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Mapping intermediate isovalues to vertices defined by subdivision. The first refinement step generates quadrilateral patches that have either one, two, or three vertices located on a base contour.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Topology . The topology of this intermediate contour (left) cannot be represented correctly (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Algorithm applied to a simple field with two critical points (a saddle point and a local minimum). (a) Base contours extracted from the field; (b) base mesh; (c) final mesh with base polygons shown in different colors; (d) final mesh with contours shown. Small regions of the mesh collapse near the critical points, due to topological error.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 :</head><label>10</label><figDesc>Modeling paradigm of a wavelet transform.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 : 3 )</head><label>113</label><figDesc>Vertex manipulation defined by an s-lift operation.Our wavelet transforms are computed by a few local vertex manipulations, called lifting operations<ref type="bibr" target="#b16">[17]</ref>, since they can be used to manipulate the shape of basis functions.Considering a polygon strip composed of vertices and its dyadic refinement with vertices located on the edges d , we define two lifting operations: An s-lift operation is illustrated in Figure 11. This operation manipulates coefficients associated with scaling functions representing the individual levels of resolution, and a w-lift operation manipulates coefficients associated with wavelets representing geometric detail, i.e., displacements between two levels. The operations c and d define the reconstruction or synthesis, which is one step of an inverse wavelet transform. The vertices represent initially a coarse level of resolution and the vertices r contain wavelet coefficients. After a reconstruction step, all vertices represent the next finer level of resolution. An inverse wavelet transform is computed by repeated reconstruction starting with a coarse base polygon. The reconstruction procedures for wavelet transforms based on dyadic refinement of linear and cubic B-splines are defined as follows:The basis functions of the transform corresponding to a wavelet coefficient are depicted inFigure 12.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 12 :</head><label>12</label><figDesc>Linear and cubic B-spline wavelets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 13 :</head><label>13</label><figDesc>Regularly refined mesh, composed of vertices of types (coarse resolution mesh), or analysis, which is the inverse of a reconstruction step. The decomposition formulae for our one-dimensional wavelet constructions are defined by the inverse of every individual lifting operation applied in reverse order. Decomposition is defined as follows:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 14 :</head><label>14</label><figDesc>A two-dimensional s-lift is computed by applying its one-dimensional equivalent to the rows and columns of a regularly refined grid.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 15 :</head><label>15</label><figDesc>Two-dimensional s-lift operation performed in different order of vertex updates. The corresponding two-dimensional lifting operations can be defined in a notation without indices, where denotes the average of the vertices of type that are adjacent to vertex (or that belong to the closest stencil around ). For example, m is the midpoint of an edge and</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 16 :</head><label>16</label><figDesc>Generalized bicubic scaling function and wavelet.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 17 :</head><label>17</label><figDesc>Regular subdivision of polyhedra. Subdividing a pyramid results in four hexahedra and one type-4 cell.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>and the North Atlantic Treaty Organization (NATO) under contract CRG.971628. We also acknowledge the support of ALSTOM Schilling Robotics and SGI.</p><p>In particular, we thank the members of the SCI Institute at the University of Utah, the Center for Applied Scientific Computing (CASC) at LLNL, the Computer Graphics and CAGD Research Group at Kaiserslautern, and the Center for Image Processing and Integrated Computing (CIPIC) at UC Davis for their support and many vivid research discussions.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Bicubic subdivisionsurface wavelets for large-scale isosurface representation and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="389" to="396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Generalized B-spline subdivision surface wavelets for geometry compression, submitted to Computer Aided Geometric Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Daubechies</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ten Lectures on Wavelets, Society for Industrial and Applied Mathematics</title>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fast Multiresolution Extraction of Multiple Transparent Isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym &apos;01</title>
		<meeting>VisSym &apos;01<address><addrLine>Ascona, Swizerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-05" />
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">An overview of wavelet based multiresolution analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jawerth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Society for Industrial and Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="377" to="412" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
	<note>SIAM) Rev.</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Progressive Geometry Compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Khodakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics, Proceedings of Siggraph</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">MAPS: multiresolution adaptive parameterization of surfaces, Computer Graphics, Proceedings of SIGGRAPH &apos;98</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W F</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cowsar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dobkin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>ACM</publisher>
			<biblScope unit="page" from="95" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Multiresolution analysis for surfaces of arbitrary topological type</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="34" to="73" />
			<date type="published" when="1997-01" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Free-form deformations with lattices of arbitrary topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Maccracken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;96</title>
		<meeting>SIGGRAPH &apos;96</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="181" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Multiresolution tiling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Meyers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="325" to="340" />
			<date type="published" when="1994-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Arithmetic coding revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Moffat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Neal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">H</forename><surname>Witten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Information Systems</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="256" to="294" />
			<date type="published" when="1998-07" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Topology-Based Visualization of Time-Dependent 2D Vector Fields, Proceedings of VisSym &apos;01, Ascona, Swizerland</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-05" />
			<biblScope unit="page" from="117" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Topology Simplification Method for 2D Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="359" to="366" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<title level="m">Level Set Methods and Fast Marching Methods Evolving Interfaces in Computational Geometry, Fluid Mechanics, Computer Vision, and Materials Science</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Embedded image coding using zerotrees of wavelet coefficients</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Shapiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Signal Processing</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="3445" to="3462" />
			<date type="published" when="1993-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Wavelets for Computer Graphics-Theory and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Stollnitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Salesin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Morgan Kaufmann Publishers, Inc</publisher>
			<pubPlace>San Francisco, California</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The lifting scheme: a custom-design construction of biorthogonal wavelets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied and Computational Harmonic Analysis</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="186" to="200" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Progressive transmission of scientific data using biorthogonal wavelet transform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Moorhead</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;94</title>
		<meeting>Visualization &apos;94</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="93" to="99" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Extraction of Crack-free Isosurfaces from Adaptive Mesh Refinement Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Ligocki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Shalf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym &apos;01</title>
		<meeting>VisSym &apos;01<address><addrLine>Ascona, Swizerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-05" />
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Real-time exploration of regular volume data by adaptive reconstruction of isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="100" to="111" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Semi-regular mesh extraction from volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">J</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Breen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="275" to="282" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
