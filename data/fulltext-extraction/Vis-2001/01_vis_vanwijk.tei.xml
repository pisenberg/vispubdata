<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Enridged Contour Maps</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarke</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
							<email>fvanwijk@win.tue.nl</email>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Mathematics and Com-puter Science</orgName>
								<orgName type="institution">Eindhoven University of Technology</orgName>
								<address>
									<postBox>P.O. Box 513</postBox>
									<postCode>5600 MB</postCode>
									<settlement>Eindhoven</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandru</forename><surname>Telea</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Mathematics and Com-puter Science</orgName>
								<orgName type="institution">Eindhoven University of Technology</orgName>
								<address>
									<postBox>P.O. Box 513</postBox>
									<postCode>5600 MB</postCode>
									<settlement>Eindhoven</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Eindhoven University of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<addrLine>San Diego</addrLine>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Enridged Contour Maps</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation-Display algorithms; Contours</term>
					<term>mapping</term>
					<term>height fields</term>
					<term>multivariate visualization</term>
					<term>flow visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The visualization of scalar functions of two variables is a classic and ubiquitous application. We present a new method to visualize such data. The method is based on a non-linear mapping of the function to a height field, followed by visualization as a shaded mountain landscape. The method is easy to implement and efficient, and leads to intriguing and insightful images: The visualization is enriched by adding ridges. Three types of applications are discussed: visualization of iso-levels, clusters (multivariate data visualization), and dense contours (flow visualization).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The display of scalar data defined over surfaces is possibly the most ubiquitous application of visualization. Typical examples are maps of temperature, height, and air pressure. Also, 3D volume data are often visualized by taking slices, thereby reducing the dimension of the data to be visualized.</p><p>Many techniques are available for the visualization of scalar functions f (x, y), each with its own strengths <ref type="bibr" target="#b11">[11]</ref>. A natural way to interpret such data is as a height field, and hence to display them as a mountain landscape. A perspective view can be used, but this leads to occlusion of data. A top view on a shaded surface is more effective ( <ref type="figure" target="#fig_0">fig. 1a</ref>). Structures can easily be discerned, as the human visual system is trained in the interpretation of shaded surfaces. Also, for the description of features typically 3D metaphors are used: ridges, peaks, valleys, and saddle-points. A drawback of such displays is that quantitative information is hard to extract: It is not easy to judge for instance which of the peaks is the highest. One solution is to map the scalar data to a grey shade or color ( <ref type="figure" target="#fig_0">fig. 1b)</ref>. Each color corresponds to a fixed level, the associated value can be read from a color map. Though popular, this method is not without problems and will not always lead to an improvement <ref type="bibr" target="#b4">[4]</ref>. The popular rainbow color map can lead to false interpretations, grey shade images look fuzzy and not attractive. Another solution to visualize quantitative infor-mation is to use contours or iso-lines (figure 1c). They enable the viewer to establish precise quantitative information locally, but do not show the structure as clearly as shaded surfaces. Furthermore, labels are required to retrieve the magnitude of the function at some arbitrary point at the contour. Each method has its own strengths and weaknesses, hence their combined use often gives the best results ( <ref type="figure" target="#fig_0">fig. 1d</ref>). The price to be paid is that this requires several graphical means simultaneously: lines, shading, and color, which cannot be used anymore for the visualization of other information in the same image. A method that shows both qualitative and quantitative information using only one graphical channel would be helpful in such circumstances.</p><p>In this paper we present such a method. We use shaded mountain landscapes as the basic visualization technique, and show how via non-linear transformations of the height quantitative information can be visualized more directly. We have used a similar concept before. In <ref type="bibr" target="#b10">[10]</ref> we have shown how treemaps can be enhanced with hierarchical shading, in <ref type="bibr" target="#b6">[6]</ref> we have used cushions to enhance various types of Voronoi diagrams. Here we show how a combination of shading and non-linear transformations aid in understanding scalar functions (section 2), 2D representations of clusters (section 3), and dense contour plots (section 4). Finally, we present some applications (section 5) , and summarize the results in section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">SCALAR DATA</head><p>Suppose we want to visualize a scalar function f (x), with x ∈ IR 2 . Extension to the more general case, where the domain is a surface embedded in three-dimensional space, is straightforward, for simplicity we limit ourselves to the base case. A standard mapping of this function to a height z(x) is via straightforward linear scaling where s is a suitably chosen scale factor. We aim at emphasizing various levels of the height, and to this end we use a non-linear mapping</p><formula xml:id="formula_0">z(x) = s f (x)</formula><formula xml:id="formula_1">z(x) = s f (x) + sh g f (x) mod h h with g(x) = ax(1 − x).</formula><p>In other words, for succeeding intervals of f with width h we add a parabola. The factor a determines the height of the parabolas. Negative values of a give concave ridges, positive values give convex ridges. For values of a ∈ [−1, 1] the mapping is monotonic. In figure 2 the graphs of g(x) and the graphs of the mapping of f to z are shown. The deviation from a linear mapping is small, especially for small values of a.</p><p>In <ref type="figure" target="#fig_3">figure 3</ref> results for various values of a for a shaded image are shown. The following observations can be made:</p><p>• The parameter a gives a good control over the strength of the banding effect. The user can easily tune this parameter to get just as much emphasis on the ridges as needed.</p><p>• The discontinuities provide quantitative information, and the smoothly varying bands between these discontinuities allow for easy tracking of in-band function value equivalence.</p><p>• Convex ridges are more pleasant and natural then concave ridges, the visual system is more used to convex than to concave shapes.</p><p>• The ridges show up very clearly, although the geometric deformation is fairly small. To illustrate the latter, figure 4 shows the value of z(x) directly mapped to grey shades, and here the bands are hardly discernable, the difference with the linear mapped version (figure 1b) is small. This effect can easily be explained. For the geometric version the intensity depends on the normal on the surface, i.e. the variation in the value of f (x), and not on the value of f (x) itself. Hence, the first order discontinuities of the height function show up much stronger than for direct mapping to grey shades.</p><p>• The method is somewhat similar to cyclic color maps, an option that has long been available in visualization packages. However, with such maps the order of the different bands is much harder to discern.</p><p>A subtle effect is that the different bands seem to have a different grey shade value: for positive a, the closer to the tops, the darker they seem, while for negative a the reverse holds. This is an optical illusion, known as the Cornsweet effect <ref type="bibr" target="#b11">[11]</ref>. The brain constructs the overall brightness of the bands based largely on edge contrast information. At a transition between two ridges the lower ridge is more horizontal for a positive a and hence brighter than the upper ridge, so the brain decides that the lower ridge must be  brighter. Also, the visual system seems to use transitivity: If ridge 1 is brighter than ridge 2, and ridge 2 is brighter than ridge 3, then ridge 1 must be much more bright than ridge 3, etc.. We can verify that this is an illusion by looking at figure 3 from a distance. If the sharp transitions can not be observed, the ridges all appear to have the same color. For the judgement of the absolute values this effect is very beneficial. Areas for which f (x) is within a certain interval can easily be discerned, for the comparison of heights one often does not have to count the number of contour lines. Also, the dynamic range of the output device is exploited very well. Each band can in principle use the full range, while the described visual effect produces yet another series of grey shade bands.</p><p>A straightforward generalization is to use hierarchical ridges. Instead of a single parabola, multiple parabolas can be added with differing widths and heights. In <ref type="figure">figure 5</ref> we used a = 0.5 for the major and a = 0.25 for the minor ridges.</p><p>We have experimented with different profiles for the ridges. We have even implemented a version where the user can define the function g(x) interactively by editing a spline. However, we found that always the best results were achieved with a simple convex parabola, with one parameter a to control the strength of the effect.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">CLUSTERS</head><p>Consider a large number of items (such as cities, persons, brands), where each item has a number of attributes (such as size, length, market-share). How can we visually get insight in such multivariate data? The use of scatterplots <ref type="bibr" target="#b2">[2]</ref> is a popular method. Items are shown as points or icons, and projected on a 2D area, where the axes correspond to two different attributes. Scatterplot matrices enable the user to view more than two attributes. Another approach is to use Multi-Dimensional Scaling (MDS) <ref type="bibr" target="#b1">[1]</ref>. The principle of MDS is to project a set of items with a number of attributes to a space of lower dimensionality (typically a plane), such that the mutual distances are preserved as well as possible. Many different techniques can be used to calculate optimal positions as well as many different measures for the distances between points in high-dimensional space.</p><p>In such plots two types of features are of particular interest. The first one is correlation. If the points fit more or less on a line or curve, this can indicate a linear or more complex relation between two variables. Second, we consider clusters. If the items fall apart into disjoint groups, the points in a scatterplot will cluster also into separate groups. Clusters often have a hierarchical character. Dependent on the threshold for the similarity measure used, small clusters merge into larger clusters.</p><p>A great example in this respect are the ThemeScapes of Wise et al. <ref type="bibr" target="#b12">[12]</ref>. MDS is used here to visualize news archives. From the positions of the points, each representing an article, a height field is derived, which is visualized via a cartographically inspired, very well designed combination of shading, color, and contours. As a result, large numbers of closely related articles give rise to mountains. Another large class of examples are software visualization tools that map software systems to graphs, where the distance between components is related to their interdependence.</p><p>Hence, the visualization of clusters in projected multivariate data can be transformed into the same problem as discussed in the preceding section: Visualization of a function f (x), where f represents a density. For this application however, it would be nice if we can aid the user in the interpretion of the projected multivariate data as a set of nested clusters. The test function used was defined by convolving a number of randomly positioned points, shown in red, with a Gaussian. For the visualization we used a variation on the method presented in the previous section. Instead of a parabola, we used a cubic mapping</p><formula xml:id="formula_2">g(x) = x(x − 1)(x − 2).</formula><p>As a result, at the lower side of a band a steep wall is visible, while at the upper side the surface is horizontal and has zero curvature. Our aim was to visualize clusters as stacked drops of fluid. We show that this can be realized without a complex physical model, but instead just by a simple non-linear mapping. The hierarchy in the levels can easily be observed, without using color. Another strong visual effect is that minima and maxima can easily be distinguished.</p><p>A delicate aspect of the use of contours in general and also of our method, is that they suggest more than is contained in the data. A small change in the settings can lead to drastically different shapes. Hence, such methods should be embedded in an interactive system, such that the user can experiment with different values for the contour spacing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DENSE CONTOURS</head><p>Each point on a contour provides precise information on the magnitude of the value of the visualized function, as well as on the local change in the value, i.e. the gradient. The magnitude of gradients is shown via the density of the contours, as anybody who has used a map with height contours will know. A disadvantage here is that in areas with a low magnitude of the gradient, i.e. more or less flat areas, large gaps lie between contours, and hence no information on local structure is shown.</p><p>Saito and Takahashi have introduced dense contours <ref type="bibr" target="#b5">[5]</ref>. Contours are generated such that the distance between contours is constant in the space of the domain of the function. A related topic is the generation of streamlines for 2D flow fields. How can we generate streamlines such that the area is uniformly covered? Turk and Banks <ref type="bibr" target="#b7">[7]</ref> use a complex optimization based method to realize this, a simpler method is given by Jobard and Lefer <ref type="bibr" target="#b3">[3]</ref>.</p><p>The generation of dense streamlines in general is inherently more complex than the generation of dense contours. However, when streamlines can be defined as contours, a simpler method can be used. For two-dimensional flows that are dominated by viscosity and where inertia can be ignored, the vector field can be modelled as v = [∂ /∂y, −∂ /∂x], where (x) is the stream function. Contourlines of (x) are streamlines. However, the method we propose here is not limited to just stream function based flow fields. The only requirement here is that the contours of some function are streamlines of a given flow field. In <ref type="bibr" target="#b9">[9]</ref> we have described how such functions can be calculated by prescribing a varying concentration at the boundaries, followed by a convection step.</p><p>We use an approach similar to Saito and Takahashi, and use shading and non-linear mapping again to improve the images. The calculation of dense contours proceeds as follows. We define a set of contour-lines with spacing h in the range of f as  Along this line will hold (by definition, using a first order approximation) that</p><formula xml:id="formula_3">L(h) = {x ∈ IR 2 | f (x) = kh, k ∈ I N}</formula><formula xml:id="formula_4">f / s ≈ ∇ f ,</formula><p>where f denotes the change in f when a small step s along the line is made. We determine first an optimal level p ∈ IR, such that for a given distance d between contours in the domain of f the corresponding change in f is of the form b p . In other words, we request contours at an equal distance d in the geometric space of the domain, and search for the corresponding level p of contour lines to be used. Substitution gives</p><formula xml:id="formula_5">b p /d = ∇ f , hence p = log( ∇ f d)/ log b.</formula><p>This value p cannot be used directly, because contours would then depend not only on f , but also on ∇ f . Instead, we use p to select two discrete levels L 0 and L 1 :  </p><formula xml:id="formula_6">L i = L(h i ),</formula><formula xml:id="formula_7">w 0 = p − p, w 1 = p − p .</formula><p>The graphical representation is constructed as a linear combination of graphical elements at the levels L 0 and L 1 , the weights denote the strength to be used per level. <ref type="figure">Figure 7</ref> shows a result. The function f is sampled pixel by pixel (similar to <ref type="bibr" target="#b5">[5,</ref><ref type="bibr" target="#b8">8]</ref>) and for each pixel is determined whether or not it lies on a contour. Here we used b = 2, i.e. between two diverging contours a single new contour starts. The width and the intensity of the contours are modulated by the weights, leading to tapered ends of contours. Note that the contours of L 1 are a subset of L 0 , hence the sum of the weights for the contours of L 1 equals 1, leading to thick, black lines.</p><p>The equally spaced lines lead to a vibrating image, larger structures are difficult to discern, tracking lines visually with the eye is hard. One partial solution is to use a hierarchy of contours, just like the ticks on a ruler. Instead of a single value for d, we use for instance also 4d, and use larger weights for the lines with a wide spacing. For a further improvement, we use non-linear mapping to height again. We insert parabola shaped bands again between contours and use the weights to blend the parabolas of succeeding levels. Specifically, we use January July <ref type="figure" target="#fig_0">Figure 11</ref>: Average temperature (color) and precipitation (height) in Europe</p><formula xml:id="formula_8">z(x) = 1 i=0 sw i h i g f (x) mod h i h i ,</formula><p>with g(x) = ax(1 − x) again. <ref type="figure">Figure 8</ref> shows that parabolas between diverging contour lines are split. The visual result, compared to figure 7, is improved, in the sense that the vibration is less. Saddle-points are rendered correctly, though in the shaded version they are harder to interpret. The strongest effect, however, is obtained when this method is used with parabolas at multiple levels (figure 9). This gives an image that enables the viewer to extract both global, structural information as well as local gradient information. The higher level ridges are shown apart in <ref type="figure" target="#fig_0">figure 10</ref>. They clearly show how the parabolic ridges smoothly join and split. These images visualize the different climates in Europe. Another application is the selection of a destination for a summer vacation, looking for a place where temperature is reasonable and precipitation low.</p><p>A similar effect could be achieved if only contours instead of ridges would have been used. However, local extrema can much easier be classified as maxima or minima here. Another useful application in the same spirit would be to represent air pressure via height and ridges. Not only low and high pressure areas would be easy to locate, but also the contours are directly meaningful, as they indicate the wind direction.</p><p>The resolution of the precipitation data is low, on a grid of 2.5 degrees squared. We also used data from the IPCC Data Distribution Centre (www.ipcc-ddc.cru.uea.ac.uk), which had a resolution of 0.5 degrees squared. A result is shown in <ref type="figure" target="#fig_0">figure 12</ref>. This image reveals much clearer the strong influence of mountains on precipitation. The use of ridges is less effective for such high-resolution data with high-frequency local features, the locally steep gradients lead to cluttered ridges. A confirmation is shown in <ref type="figure" target="#fig_0">figure 13</ref>, where we zoomed in on the Alpes, using the same data. Again, smooth structures are visible, well supported by the ridges.</p><p>These results show that the combined use of enridged contours and color can lead to a clear simultaneous visualization of two variables. It remains to be seen if the technique is also effective for more than two variables. Texture or contour lines could be used for a third variable, but chances are high that this will interfere strongly with the data already displayed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>We have considered a traditional topic in visualization: the visualization of scalar functions of two variables. We have shown that non-linear mapping of the function, followed by visualization as a shaded height field, can be an effective means to show different aspects of such functions. In other words, we have shown how a visualization of a scalar function of two variables can be enriched by adding ridges. Three types of applications were discussed: visualization of iso-levels, clusters, and dense contours. The method is easy to implement. Furthermore, it is efficient in terms of CPU-time as well as in terms of graphical resources. The images shown here took each at most a few seconds to generate, using non-optimized code on a R5K SGI workstation. Concerning the graphical resources, only grey shades are used, whereas color, texture, and lines can be used for other purposes. And, above all, it leads to intriguing and insightful images.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Visualization of scalar field</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Mapping for various values of a</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>a) a = 0. 6 b) a = 0. 3 c</head><label>63</label><figDesc>) a = −0.3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Non linear mapped scalar field</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 : 6 Figure 5 :</head><label>465</label><figDesc>Non-linear mapping to grey values, a = 0.Hierarchical ridges</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Nested clustersAn obvious way to realize this is via the use of contours, which by definition form hierarchically structured Venn-diagrams. A drawback here is that for complex contour sets the interior and exterior of contours can not be distinguished. An alternative is shown in figure 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>and a hierarchy of sets asL(b i ), i ∈ I N,where b ∈ I N is a multiplication factor for the spacing from level i to level i + 1. Dependent on the gradient ∇ f = [∂ f /∂ x, ∂ f /∂ y] we select an appropriate level. Consider a line q(s), perpendicular on a contour: q(s) = x 0 + s∇ f/ ∇ f , s ∈ IR.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :Figure 8 :</head><label>78</label><figDesc>Dense contours Shaded dense contours</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>with h 0 = b p and h 1 = b p .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :</head><label>9</label><figDesc>Hierarchical shaded dense contours Figure 10: Wide ridges Furthermore, we use two weights w 0 and w 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 12 :</head><label>12</label><figDesc>Average temperature (color) and precipitation (height) in Europe, July, high resolution precipitation data</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 13 :Figure 6</head><label>136</label><figDesc>Average temperature (color) and precipitation (height) Alpes, July</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 12 :Figure 9 :</head><label>129</label><figDesc>Average temperature (color) and precipitation (height) in Europe, July, high resolution precipitation data Hierarchical shaded dense contours July (color) and precipitation (height) in EuropeFigure 13: Average temperature (color) and precipitation (height) Alpes, July</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Weather maps are a typical example where the simultaneous display of multiple variables, such as temperature, air pressure, and precipitation, is useful. Examples are shown in figure 11. Data were obtained from the IRI/LDEO Climate Data Library (www.ldeo.columbia.edu). Here the average temperature and precipitation in January and July over the period 1960-1990 are shown. Both for the mapping of the temperature to hue and for the mapping of precipitation to</title>
		<imprint/>
	</monogr>
	<note>height a non-linear parabolic mapping was used</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Modern Multidimensional Scaling: Theory and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Borg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Groenen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Springer</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The Elements of Graphing Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NJ</title>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Murray Hill</publisher>
		</imprint>
	</monogr>
	<note>revised ed.</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Creating evenly-spaced streamlines of arbitrary density</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jobard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lefer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Scientific Computing &apos;97. Proceedings of the Eurographics Workshop in</title>
		<editor>W. Lefer and M. Grave</editor>
		<meeting><address><addrLine>Boulogne-sur-Mer, France; Wien, New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="43" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Color scales for image data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Levkowitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Herman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="72" to="80" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Comprehensible rendering of 3-d shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Saito</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Takahashi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="197" to="206" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualization of generalized voronoi diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Data Visualization</title>
		<meeting>Data Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Image-guided streamline placement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="453" to="459" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A raster graphics approach to flow visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Eurographics&apos;90</title>
		<meeting>Eurographics&apos;90<address><addrLine>North-Holland</addrLine></address></meeting>
		<imprint>
			<publisher>Amsterdam</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="251" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Implicit stream surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization&apos;93</title>
		<meeting>Visualization&apos;93<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="245" to="252" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Cushion treemaps: Visualization of hierarchical information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Van De Wetering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Information VIsualization &apos;99</title>
		<meeting>IEEE Information VIsualization &apos;99<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="73" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Information Visualization: Perception for Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ware</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Visualising the non-visual: Spatial analysis and interaction with information from text documents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Wise</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Thoma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pennock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lantrip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pottier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Crow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Information Visualization &apos;95</title>
		<meeting>IEEE Information Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="51" to="58" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
