<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Simple Algorithm for Surface Denoising</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianbo</forename><surname>Peng</surname></persName>
							<email>peng@mrl.nyu.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vasily</forename><surname>Strela</surname></persName>
							<email>strela@mrl.nyu.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denis</forename><surname>Zorin</surname></persName>
							<email>dzorin@mrl.nyu.edu</email>
							<affiliation key="aff1">
								<orgName type="department">NYU MRL</orgName>
								<address>
									<addrLine>719 Broadway, 12th floor</addrLine>
									<postCode>10003</postCode>
									<settlement>New York</settlement>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">New York University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<addrLine>San Diego</addrLine>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Simple Algorithm for Surface Denoising</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling -boundary representations, curve, surface, solid and object representations</term>
					<term>I.4.3 [Image Processing and Computer Vision]: Enhancement -filtering, smoothing</term>
					<term>I.4.4 Restoration -Wiener filtering Meshes, multiresolution surfaces, Gaussian scale mixture model, denoising</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a simple denoising technique for geometric data represented as a semiregular mesh, based on locally adaptive Wiener filtering. The degree of denoising is controlled by a single parameter (an estimate of the relative noise level) and the time required for denoising is independent of the magnitude of the estimate. The performance of the algorihm is sufficiently fast to allow interactive local denoising.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The complexity of the models used in computer graphics, visualization and geometric modeling applications constantly increases. It becomes more and more difficult to create such models by hand, and 3D scanning is emerging as an attractive alternative. However, the raw data produced by 3D scanners (range images or point clouds) are usually far from usable in any application. Considerable number of algorithms were developed for processing such data. A typical processing pipeline includes several stages:</p><p>• registration of raw data to create a single point cloud;</p><p>• conversion of the point cloud to an arbitrary fine polygonal mesh;</p><p>• decimation and reparameterization of the resulting mesh.</p><p>While the reparameterization step is not essential for every application, it is often desirable when a complex model has to be modified, stored and displayed interactively. As it was recently shown <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b8">9]</ref>, reparameterization combined with correctly chosen compression techniques results in substantial reduction in error (by factor of four) for compressed geometry compared to methods preserving fine mesh connectivity.</p><p>This result is not surprising if we consider the geometric data represented by a mesh from the informational point of view. In contrast to images, there are three distinct types of information associated with a mesh: connectivity (which vertices are connected by edges), geometry (vertex positions sampled from the original surface), and topology (topological structure of the surface represented implicitly by connectivity). It should be noted that only geometry and topology carry information about the original surface. Connectivity is not explicitly present in the original model and is introduced as an artifact of the algorithms used to convert the point cloud to a mesh.</p><p>If we adopt this point of view, there are three types of noise present in the mesh data:</p><p>• Connectivity noise, which is the pretty much all of the connectivity information for surfaces of low genus. As the only information about the original surface carried by connectivity is the topological information, connectivity can be changed arbitrarily as long as topology is preserved. All topological information we theoretically need for a surface of genus 0 can be represented by a tetrahedron.</p><p>• Topological noise (e.g. tunnels and handles), created by the algorithms used to extract a mesh from the point cloud.</p><p>• Geometric noise, due to the errors in measurement and resampling of the data at various processing stages.</p><p>Topology-preserving reparameterization can be thought of as removing connectivity noise; recent work <ref type="bibr" target="#b7">[8]</ref> addresses the problem of topological noise. We focus on geometric noise removal, assuming that the surface is already reparameterized. While our method can be potentially applied before reparameterization, it works best and is most natural for semiregular meshes.</p><p>Reparameterization greatly simplifies the problem, because the surface can be considered as a function, and simple and efficient signal processing approaches can be applied. If reparameterization is ultimately performed on geometric data we believe that denoising is best left to the last stage, because additional noise can be introduced by resampling. This is the case when our approach applies. If reparameterization will not be performed, more complex techniques for denoising on arbitrary meshes <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b5">6]</ref> are more appropriate.</p><p>The algorithm that we propose is based on recent work in image denoising which uses locally adaptive Wiener filtering <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b22">23]</ref>. The subbands of a multiscale representation are modeled as a product of a Gaussian random vector with a hidden multiplier variable. Estimation of the multiplier leads to the estimation of the local variance and allows standard Wiener denoising. The resulting algorithm is quite efficient, as it requires only a single pass over the surface at each resolution level. It is controlled by a single user-defined parameter, namely, an estimate of the noise magnitude. The performance does not depend on the magnitude of this estimate, i.e. strong noise reduction takes exactly as much time as moderate amount of denoising. Given an infrastructure for supporting semiregular meshes it takes very little time to implement (several hundred lines of code) and can be used for interactive local denoising of a model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Denoising</head><p>We start with formulating the problem more precisely. Given a surface corrupted by geometric noise, our goal is to produce a new surface which is as close as possible to the original one. This task requires implicit or explicit assumptions (model) about the noise and the surface.</p><p>It is useful to consider a simple 1D example to understand the problem more clearly. If nothing is known about a 1D signal, it cannot be denoised. However, if the signal contains no frequencies above ω and the source of noise produces only frequencies above ω, low-pass filtering is an ideal denoising procedure. This is a simple example of general pattern common for a wide class of denoising approaches: apply a transformation to represent the signal in a domain (in our case, frequency domain) where the noise is well separated from the signal, use assumptions on the structure of the transform coefficients of the signal and noise to remove the noise, and apply the inverse transform.</p><p>For real-world signals, the situation is more complex: these signals typically have spectra overlapping the spectrum of the noise, and low-pass filtering is likely to remove important parts of the signal together with noise. Surface smoothing does precisely that for surfaces <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b3">4]</ref>. The way to achieve better results is to use additional information about the properties of the signal. A classical example is wavelet thresholding methods for image processing <ref type="bibr" target="#b6">[7]</ref>. These methods take advantage of the fact that wavelet bases have good compression properties: in such bases, a typical non-noisy image will have mostly small coefficients, and only few large ones. Eliminating the small coefficients does not alter the reconstructed image much. One reason for this is that natural images often consist of large smooth areas (fine-level coefficients are small) separated by sharp boundaries (fine-level coefficients are large), with boundaries occupying only small area in images.</p><p>In contrast, the coefficient magnitude for noise is uniform and, as the signal energy is distributed over a large number of coefficients, each coefficient is likely to be small. This leads to the simple basic algorithm: apply a wavelet transform, threshold the coefficients and apply the inverse transform. For a restricted class of signals corrupted by white Gaussian noise a version of this procedure was proven to be optimal <ref type="bibr" target="#b6">[7]</ref>. Note that this procedure is likely to preserve sharp transitions in a signal (edges for images, creases for surfaces).</p><p>Nevertheless, it is clear that a part of the useful signal is still removed. One can do better, however, by using additional assumptions. It was shown that Gaussian scale mixture (GSM) model is uitable for the statistics of wavelet coefficients of natural images <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b22">23]</ref>. The combination of this model with Wiener filtering leads to better recovery of the original image. The resulting algorithm is not much more complex than the wavelet thresholding described above -the only additional step involved is local estimation of the signal variance. In the case of Gaussian noise the procedure is nearly optimal.</p><p>While there are some similarities, surface data differs in a number of aspects from image data. For example, surfaces are typically continuous, while discontinuities are common in images; sharp features on surfaces are discontinuities of the tangent plane and are highly visible, while discontinuties of the derivatives in images are less apparent. Surfaces do not change when a rigid transformation is applied to all vertices -no similar transformations are possible for images. Nevertheless, It turns out that GSM models also appear to reflect properly the statistics of multiscale representations of surfaces, and it is natural to apply the GSM-based denoising procedures to surfaces. Our algorithm for surface denoising is based on the general ideas of the image denoising algorithms but significantly differs from them in a number of aspects as detailed below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Previous Work</head><p>Our algorithm is based primarily on work in image processing; relatively little has been done on surface denoising. Recent results include Clarenz et al. <ref type="bibr" target="#b1">[2]</ref> on denoising of arbitrary meshes and Desbrun et al. <ref type="bibr" target="#b4">[5]</ref> on denoising hight fields. In both cases, anisotropic curvature diffusion techniques are used. Our method is fundamentally different and difficult to compare directly to the diffusionbased approaches. Diffusion-based denoising is best regarded as a combination of smoothing and edge enhancement. It is relatively difficult to predict the scale of the noise that will be removed, and the amount of denoising depends on the algorithm running time. At the same time, as demonstrated in <ref type="bibr" target="#b1">[2]</ref>, curvature flow-based meth-ods can be used on arbitrary meshes, while we assume reparameterization on semiregular meshes. For certain choices of parameters, our method produces results similar to anisotropic curvature diffusion. The methods are compared in greater detail in Section 7.</p><p>Recent developments in image denoising show that locally adaptive Wiener filtering is a very powerful technique. This approach was first developed in pixel domain <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b10">11]</ref> and then extended to the multiresolution domain <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18]</ref> which allowed further improvement of the results. Local Wiener filtering uses a local estimate of the variance in either the spatial or the multiresolution domain. Wainwright and Simoncelli proposed a model that allows easy estimation of local variance and captures well the local statistical properties of wavelet coefficients of natural images <ref type="bibr" target="#b24">[25]</ref>. This model is based on the class of random variables known as Gaussian scale mixtures (GSM). In the GSM model, groups of wavelet coefficients correspond to a product of a Gaussian random vector with a hidden multiplier variable. Similar models have been independently proposed in <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b2">3]</ref>. The GSM approach combined with Wiener filtering was successfully implemented for image denoising <ref type="bibr" target="#b22">[23]</ref>. We suggest a similar technique for noise removal on natural surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Overview of the algorithm</head><p>Our denoising procedure follows a common pattern described in Section 1.1. First, we apply a multiresolution transform described in Section 4 to a given noisy surface. We then use the GSM statistical model of the transform coefficients to distinguish the noise from the signal. The details of this step are given in Section 5. Finally, we reconstruct the surface from the denoised coefficients. See Section 6 for the complete description of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Multiresolution Surfaces</head><p>In this section, we describe in greater detail our assumptions about the parametric surface representation, and the specific representation we use.</p><p>It is generally sufficient to assume that the initial mesh was reparameterized on a mesh with semi-regular connectivity. The connectivity of such meshes can be obtained if we start with a relatively coarse mesh, and refine each face of such mesh regularly, in the simplest case, by recursive quadrisection of faces. The latter, however, not essential for our algorithm: any regular refinement can be used.</p><p>As a starting point, we use a Laplacian-pyramid multiresolution representation based on Loop subdivision. We refer the reader to <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b25">26]</ref> for the details of implementation. The surface is represented by the coarsest level and the details at each level of resolution. The process of converting the finest-resolution data to the sequence of detail sets and the coarsest level mesh is called analysis. The process of reconstructing a surface from the coarse mesh and details is called synthesis. The two processes are applied recursively, with analysis proceeding from finer to coarser levels, and synthesis from coarser to finer. A single step of both processes is illustrated in <ref type="figure" target="#fig_1">Figure 1</ref>.</p><p>For analysis, a smoothing filter is required in addition to subdivision rules. It is important to use a filter attenuating small scale variations, to avoid aliasing when the mesh is subsampled. We use a simple Laplacian filter for analysis.</p><p>Note that the details at a finer level of resolution are represented in local frames computed from the previous coarser level. This is a valuable feature for surface editing and a natural way to represent surfaces: details are separated into tangential and normal components and become invariant with respect to rigid transformations.</p><p>However, addition of the local frame makes analysis and synthesis nonlinear. Our comparison of denoising with and without local frame transformations was inconclusive: it is still unclear if there is a substantial advantage in using local frames other than having a geometrically invariant result.  We use an important modification to the pyramid based on the idea of steerable pyramids <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b19">20]</ref>: a single detail band is decomposed into multiple directional bands, using directional filters <ref type="figure" target="#fig_1">(Figure 1)</ref>. The number of directional bands m can be chosen arbitrarily by choosing the angular step θm. To reconstruct the signal the directional bands are simply added up to produce the detail. Introducing these directional bands is a crucial element of the algorithm. Clearly, the subbands are interdependent, and we need to store only two to be able to reconstruct the result of filtering in any direction. While it is desirable to minimize the number of subbands to decrease computational complexity and reduce correlation between coefficients in different subbands, one has to use a sufficient number to capture various edge directions (an edge is captured best if there is a directional subband aligned with it). We found that m = 6 works well. Note that this number is no directly related to the valence of most vertices in our meshes: we could use eight or more, but higher numbers of subbands did not appear to make a substantial difference.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">GSM Model for Denoising Multiscale Data</head><p>As in the case of natural images, marginal distributions of the multiresolution coefficients of natural surfaces turn out to be sharppeaked at zero and heavy-tailed (see <ref type="figure" target="#fig_3">Figure 3)</ref>. The peak at zero is produced by the smooth regions, while heavy tails correspond to the slow decay of the coefficients at the edges. We propose to model this distribution by a Gaussian scale mixture process. The GSM random variables include several well-known sharp peaked and heavy tailed distributions such as generalized Gaussians, the α-stable family, and the Student t-variables <ref type="bibr" target="#b24">[25]</ref>. One would expect a GSM model to be a good approximation in our case.</p><p>We now describe GSM in detail. A random vector X is said to be a Gaussian scale mixture if it is a product of two random variables:  X = √ zU , where z is a positive scalar random variable and U is a zero-mean Gaussian random vector with covariance Cu <ref type="bibr" target="#b0">[1]</ref>. U and z are assumed to be independent. The probability density of a GSM variable is:</p><formula xml:id="formula_0">1/m ... α 2 α 3 α k-1 α k α 1</formula><formula xml:id="formula_1">Px(X) = 1 (2π) N/2 |zCu| 1/2 exp −X T C −1 u X 2z Pz(z) dz,<label>(1)</label></formula><p>where N is the length of vectors U and X. Notice that normalized GSM variable X/ √ z is Gaussian distributed which allows easy estimation of the statistical properties of the data. In particular, the Wiener filtering of the noisy GSM data should be close to optimal.</p><p>We assume that the directional detail coefficients in a single-ring neighborhood of a vertex on each level of a multiresolution mesh follows the GSM model. We also assume independence of the multipliers z corresponding to different neighborhoods, even though the neighborhoods are overlapping. Moreover, in order to simplify the computations we treat both the coefficients of the noise w and the signal u in each neighborhood as uncorrelated (but not necessarily independent) and set their covariance matrices to be multiples of the identity Cu = σ 2 u I, Cw = σ 2 w I; we assume the variance of noise known (in practice, it is estimated by the user). While it is possible to use different estimates for σw for different places on the surface, we use a single value for the whole surface which is a reasonable assumption for most scanned models.</p><p>One can test how well the GSM model describes actual data. Let X be a vector corresponding to a single ring of pyramid coefficients around a vertex of a "clean" surface, with x the coefficient at the center of the ring. The size N of the neighborhood is just k + 1 where k is the valence of the central vertex. If the model is correct and there is a good estimate z(X) of z(X) then the distribution of the normalized coefficient x = x/ z(X) should be close to a Gaussian. We use the maximum likelihood estimator for the multiplier <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b22">23]</ref>:</p><formula xml:id="formula_2">z(X) = (X T C −1 u X)/N.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Within our assumptions Cu</head><formula xml:id="formula_3">= σ 2 u I and σ 2 u z(X) = X T X N</formula><p>is just a local estimate of the variance of x. <ref type="figure" target="#fig_3">Figure 3</ref> shows the marginal histograms and normal probability plots of x and x . Presented data comes from one component of the third level of the multiresolution decomposition of the denoised surface (the model of a dog); similar results were obtained for a number of other scanned models. The histogram of the normalized coefficients is nearly Gaussian, and its corresponding normal probability plot lies nearly along a line. Thus the GSM model does a reasonable job approximating the data.</p><p>Our main goal is to estimate the multiplier z in the presence of noise. This will allow us to compute the variance of each element and use the Wiener filter to remove the noise. Suppose that vector Y is obtained from X by adding Gaussian white noise with variance σ 2 w and mean 0, Y = X + σwW . If X is a GSM vector then each observed noisy coefficient can be represented as y = √ zu + σww, where σ <ref type="bibr" target="#b1">2</ref> w is the variance of the noise and w has Gaussian distribution with variance 1 and mean 0. If the value of z were known, then y would also be Gaussian distributed, and the optimal estimate of x would be the linear (Wiener) solution:</p><formula xml:id="formula_4">x = zσ 2 u zσ 2 u + σ 2 w y.<label>(2)</label></formula><p>The derivation can be found e.g. in <ref type="bibr" target="#b14">[15]</ref>. We use the maximum likelihood estimator in order to obtain</p><formula xml:id="formula_5">z(Y ), z(Y ) = 1/σ 2 u Y T Y /N − σ 2 w .</formula><p>The derivation of this result is given in <ref type="bibr" target="#b16">[17]</ref>. When applying this formula to the real data, one often gets a small negative value for z(Y ). This happens because the neighborhood is not large enough to capture the statistics of the data or the estimated noise level is too large. In this cases we set z(Y ) to zero. We estimate the variance of the center of a neighborhood Y as</p><formula xml:id="formula_6">zσ 2 u = max Y T Y /N − σ 2 w , 0 .<label>(3)</label></formula><p>Equations (2), (3) are used in our denoising algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Denoising Algorithm</head><p>We implemented the results of previous sections in the denoising procedure. It consists of three steps: 1) multiresolution decomposition (Section 4). 2) Noise removal using formulas (2), (3) on each level of the decomposition. 3) Reconstruction. To use formulas (2) and (3) one needs to know the variance of the noise σ <ref type="bibr" target="#b1">2</ref> w . This is the parameter supplied by the user. In Section 7, we show the results for various values of σw. It is also possible to choose different numbers m of directional components for the filters, but, not surprisingly, 6 is the best choice for semiregular triangular meshes. Denoising Algorithm 1. Perform analysis of the mesh as described in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head><p>For the details at each level of the decomposition a) Compute the aligned directional components of the neighborhood of each vertex in the detail mesh in m directions. b) Estimate the variance of each directional coefficient using formula (3). c) Replace each directional coefficient by its Wiener estimate (2). d) Replace the value of the center with the combination of the m denoised directional coefficients.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Reconstruct the surface mesh.</head><p>Unlike images, for which directional components can be chosen to be oriented consistently along global directions, for general surfaces this is not possible. However, as our algorithm is local, only local alignment is required. To choose the aligned directional components, we assume that the single-ring neighborhood of a vertex at a fixed refinement level is parameterized over a k-gon <ref type="figure" target="#fig_4">(Figure 4)</ref>. As shown in the figure, for an arbitrary edge fixed as the zero direction one can pick corresponding directions for the filters for surrounding vertices. The result of filtering in one of these directions is simply a linear combination of two directional details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results and Discussion</head><p>Results of applying our algorithm to data with a high level of artificial noise added for several settings of σw are shown in <ref type="figure">Figure 5</ref>.  <ref type="figure">Figures 6-7</ref>. The input parameter σw (estimate of the noise level) was chosen as a percentage of the average distance between the initial surface and the coarsest surface. Timings are provided for a relatively slow machine (200 MHz SGI Indigo2).</p><p>Comparison with anisotropic curvature diffusion. For comparison, we have implemented anisotropic curvature diffusion as described in <ref type="bibr" target="#b1">[2]</ref>. <ref type="figure">Figure 6</ref> demonstrates that for a certain choice of estimated noise value our algorithm produces results visually similar to anisotropic curvature diffusion <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6]</ref>. The image was chosen to be as similar as possible to the one shown in <ref type="bibr" target="#b1">[2]</ref>. The approaches based on statistical models (such as ours) and deterministic approaches (such as anisotropic curvature diffusion) are based on very different principles and, from mathematical point of view, solve different problems; hence it is difficult to compare the algorithms quantitatively.</p><p>The difference between the algorithms merits detailed discussion. The idea of anisotropic curvature diffusion can be summarized as follows: the denoised surface is obtained as the solution at some time τ of an anisotropic diffusion equation. The diffusion tensor is anisotropic near edges, with zero diffusion perpendicular to the edge and maximal along the edge. The edges are detected at each time step using a principal curvature threshold, applied to the curvature values obtained for a smoothed version of the surface. There are three parameters determining the result: the time τ , the constant controlling the amount of smoothing used before curvatures are computed and λ, the edge detection threshold; has less impact on the result, so we restrict our attention to τ and λ. Feature preservation. Both algorithms attempt to preserve important surface features. Anisotropic curvature diffusion detects and attempts to preserve and sharpen edges <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b5">6]</ref>. Our algorithm has implicit edge detection built in: if there is an edge passing through a point in a certain direction, in orthogonal direction the variance will be considerable and Wiener filtering will not reduce these coefficients by much if at all. The advantage of our approach is that there is no global threshold λ for curvature-controlling edge detection; this parameter is difficult to pick. This can be also regarded as disadvantage as there is no direct edge detection control. The best our algorithm can do is to preserve the noise perpendicular to the edge near the edge; anisotropic curvature diffusion can enhance edges. This is useful in the cases of man-made objects for which a collection of smooth surfaces with sharp edges is a good model. This is less useful and can be harmful for natural objects, which seldom have sharp edges. For such objects increasingly sharp edges tend to appear at random locations. Generality. Our algorithm relies on the multiresolution structure of the mesh, hence applies only to models that were reparameterized on semiregular meshes. In contrast, curvature diffusion works on an arbitrary mesh. While it might be possible to generalize our algorithm to hierarchies on irregular meshes, this would make it significantly more complex.</p><p>Running time. With anisotropic curvature diffusion, if a large amount of denoising is desired, large values of τ should be used and the algorithm takes longer, even if implicit integration and large time steps are used. Our algorithm takes exactly the same time no matter how much denoising is desired. For the specific example shown in <ref type="figure">Figure 6</ref>, our conjugate-gradient implementation of curvature diffusion is significantly slower than the GSM algorithm: (260 sec. vs. 16 sec.) However, an efficient multigrid solver is likely to make the times much closer. Our algorithm is fast enough to enable interactive applications. Locality. Our algorithm can be easily applied locally It is not clear how anisotropic diffusion will behave when applied locally. Ease of implementation. As we have mentioned, our algorithm takes very little effort to implement: it is a simple iteration over vertices with filters applied to the immediate neighbors. By comparison, curvature diffusion requires a good solver running on arbitrary meshes to be efficient, and even the basic algorithm requires more work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions</head><p>We have presented a new algorithm for denoising of natural surfaces. It is based on a multiresolution steerable decomposition and utilizes a GSM statistical model of the transform coefficients. The results of our experiments are quite encouraging and compare favorably with other techniques; our algorithm ensures noise removal while preserving essential geometrical features.</p><p>Our results are just a first step in applying the GSM model for the denoising of surfaces. One can employ different multiresolution decompositions and extend the denoising algorithm along the lines suggested in <ref type="bibr" target="#b22">[23]</ref>. In particular a non-trivial covariance structure of the coefficients within each neighborhood can be used.</p><p>Our algorithm is based on the GSM assumption on the statistics of the multiscale coefficients. We have observed that it is a reasonable assumption for several models, but clearly more extensive studies are necessary.</p><p>Many questions which have well-understood answers for images (e.g. measure of difference between images) are much more difficult for surfaces and require further study to make it possible to compare algorithms in a more quantitative manner.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Synthesis and analysis diagrams for multiresolution surfaces.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Directional decomposition of the details: filter mask for a directional filter, αi = cos( 2iπ k − θm), i = 0 . . . k − 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Histograms and normal probability plots of the pyramid coefficients before and after normalization of each coefficient by the estimate of hidden multiplier √ z.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Local alignment of directionsOther denoising results are shown in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :Figure 6 :Figure 7 :</head><label>567</label><figDesc>Denoising a simple mesh with artificial noise for different choices of estimated noise σw (98 thousand triangles). original noisy mesh σw = 2.8% Denoising a scanned and parameterized model of an ear (335 thousand triangles, 360 thousand after parameterization). original noisy mesh detail of noisy mesh σw = 2.5% σw = 7.8% Denoising a scanned and parameterized model of a dog for different choices of σw (264 thousand triangles, 391 thousand triangles after parameterization). Denoising time: 59 secs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>Denoising the reparameterized Stanford bunny mesh. (71 thousand triangles, 145 thousand after parameterization). From left to right: the reparameterized mesh; our denoising; by anisotropic geometric diffusion denoising. noisy mesh σw = 1.4% details Denoising a part of the model of Michalangelo's David. (The model was scanned at 0.29mm resolution; unstructured mesh 0.63 mln. triangles, 1,2 mln. triangles after parameterization). Denoising time: 167 secs. Original mesh courtesy of Marc Levoy, StanfordComputer Graphics Lab. From left to right: original mesh; denoised mesh; magnified views of two areas on the mesh before and after denoising. Note that chisle marks in the first area are preserved, while the small-scale noise is removed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 10 :</head><label>10</label><figDesc>Denoising a scanned and parameterized model of a Ascension Technologies transmitter. From left to right: original model; magnified view of an area before and after denoising. Note that in the flat areas all small scale features were removed, with almost no change at the creases.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements. We thank Henning Biermann and Clilly Castaglia for their help with this work. This research was supported in part by NSF award ACI-9978147, NSF CAREER award, AMS Centennial fellowship, and Sloan Foundation fellowship.</p><p>Note on <ref type="figure">Figure 7</ref>: We believe the small scale random texture visible on the surface is an artefact of the scanning and reconstruction process; it is similar in scale to the texture we have observed on other objects scanned using Cyberware scanners; according to Levoy et al. <ref type="bibr" target="#b12">[13]</ref> the scale of the details on the surface of polished marble is less than 30 nm, which is far less than the characteristic texture size. On the other hand, the texture is too random and too closely spaced (0.5-1 mm is the characteristic scale) to be chisel marks which are more likely to be at least 2 mm wide <ref type="bibr" target="#b13">[14]</ref>.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Scale mixtures of normal distributions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Andrews</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mallows</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Royal Stat. Soc</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page">99</biblScope>
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Anisotropic geometric diffusion in surface processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Clarenz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Diewald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization</title>
		<meeting>Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Wavelet-based statistical signal processing using hidden Markov models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Crouse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Nowak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Baraniuk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Signal Proc</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="page" from="886" to="902" />
			<date type="published" when="1998-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Implicit fairing of irregular meshes using diffusion and curvature flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Siggraph&apos;99</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Anisotropic feature-preserving denoising of height fields and bivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Mathieu Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">H</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphics Interface</title>
		<meeting>Graphics Interface</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Discrete differential-geometry operators in nd</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Mathieu Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">H</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Barr</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>submitted</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Denoising by soft-thresholding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Donoho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Info. Theory</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="613" to="627" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Topological noise removal</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Igor</forename><surname>Guskov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zoë</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphics Interface</title>
		<meeting>Graphics Interface</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Normal mesh compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><surname>Khodakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Igor</forename><surname>Guskov</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Progressive geometry compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><surname>Khodakovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wim</forename><surname>Sweldens</surname></persName>
		</author>
		<idno>1-58113-208-5</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Adaptive noise smoothing filter for images with signal-dependent noise</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T</forename><surname>Kuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Sawchuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename><surname>Strand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Chavel</surname></persName>
		</author>
		<idno>PAMI-7:165-177</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Pat. Anal. Mach. Intell</title>
		<imprint>
			<date type="published" when="1985-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Digital image enhancement and noise filtering by use of local statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Pat. Anal. Mach. Intell., PAMI</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="165" to="168" />
			<date type="published" when="1980-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Digital Michalangelo project Web site</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The digital michelangelo project: 3d scanning of large statues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kari</forename><surname>Pulli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Szymon</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lucas</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matt</forename><surname>Ginzton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sean</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeremy</forename><surname>Ginsberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Shade</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Duane</forename><surname>Fulk</surname></persName>
		</author>
		<idno>1-58113-208-5</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="131" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Two-dimensional Signal and Image Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Lim</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Wavelet image coding based on a new generalized gaussian mixture model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Lopresto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ramchandran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">T</forename><surname>Orchard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Compression Conf</title>
		<meeting><address><addrLine>Snowbird, Utah</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Low-complexity image denoising based on statistical modeling of wavelet coefficients</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">K</forename><surname>Mihçak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Kozintsev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ramchandran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Moulin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Signal Processing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="300" to="303" />
			<date type="published" when="1999-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Analysis of multiresolution image denoising schemes using a generalized Gaussian and complexity priors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Moulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Info. Theory</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="909" to="919" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Hierarchical editing and rendering of subdivision surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pulli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
		<idno>UW-CSE-97-04-07</idno>
		<imprint>
			<date type="published" when="1997" />
			<pubPlace>Seattle, WA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dept. of CS&amp;E, University of Washington</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The steerable pyramid: A flexible architecture for multi-scale derivative computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Simoncelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Freeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second Int&apos;l Conf on Image Proc</title>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-10" />
			<biblScope unit="volume">III</biblScope>
			<biblScope unit="page" from="444" to="447" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Shiftable multi-scale transforms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Simoncelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">H</forename><surname>Adelson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Heeger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans Information Theory</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="587" to="607" />
			<date type="published" when="1992-03" />
		</imprint>
	</monogr>
	<note>Special Issue on Wavelets</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Denoising via block Wiener filtering in wavelet domain</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Strela</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3rd European Congress of Mathematics</title>
		<meeting><address><addrLine>Barcelona</addrLine></address></meeting>
		<imprint>
			<publisher>Birkhäuser Verlag</publisher>
			<date type="published" when="2000-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Image denoising using a local gaussian scale mixture model in the wavelet domain</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Strela</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Portilla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Simoncelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc SPIE, 45th Annual Meeting</title>
		<meeting>SPIE, 45th Annual Meeting<address><addrLine>San Diego</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A signal processing approach to fair surface design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Siggraph&apos;95</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="351" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Scale mixtures of Gaussians and the statistics of natural images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Wainwright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Simoncelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Neural Information Processing Systems</title>
		<editor>S. A. Solla, T. K. Leen, and K.-R. Müller, editors</editor>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="855" to="861" />
			<date type="published" when="2000-05" />
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Interactive multiresolution mesh editing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denis</forename><surname>Zorin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wim</forename><surname>Sweldens</surname></persName>
		</author>
		<idno>ISBN 0-89791-896-7</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97<address><addrLine>Los Angeles, California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="259" to="268" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
