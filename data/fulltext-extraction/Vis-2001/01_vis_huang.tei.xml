<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Complete Distance Field Representation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Huang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yan</forename><surname>Li</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Electrical Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shao-Chiung</forename><surname>Lu</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">Visteon Inc</orgName>
								<address>
									<settlement>Dearborn</settlement>
									<region>MI</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuh-Yuan</forename><surname>Liou</surname></persName>
							<affiliation key="aff3">
								<orgName type="institution">Ford Motor Company</orgName>
								<address>
									<settlement>Dearborn</settlement>
									<region>MI</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Complete Distance Field Representation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.6 [Computer graphics]: Methodology and techniques -Graphics data structures; I.3.5 Computational Geometry and Object Modeling -Object modeling distance fields</term>
					<term>volume modeling</term>
					<term>polygonal surfaces</term>
					<term>point-based models</term>
					<term>graphics</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Distance fields are an important volume representation. A high quality distance field facilitates accurate surface characterization and gradient estimation. However, due to Nyquist&apos;s Law, no existing volumetric methods based on the linear sampling theory can fully capture surface details, such as corners and edges, in 3D space. We propose a novel complete distance field representation (CDFR) that does not rely on Nyquist&apos;s sampling theory. To accomplish this, we construct a volume where each voxel has a complete description of all portions of surface that affect the local distance field. For any desired distance, we are able to extract a surface contour in true Euclidean distance, at any level of accuracy, from the same CDFR representation. Such point-based iso-distance contours have faithful per-point gradients and can be interactively visualized using splatting, providing per-point shaded image quality. We also demonstrate applying CDFR to a cutting edge design for manufacturing application involving high-complexity parts at unprecedented accuracy using only commonly available computational resources.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>senting empty space, have been developed in <ref type="bibr" target="#b10">[11]</ref> <ref type="bibr" target="#b12">[13]</ref> <ref type="bibr" target="#b13">[14]</ref>. These methods are practical and commonly used nowadays. Surface shapes, however, are infinitely thin in space. To sample this thin shape, one needs infinitely high sampling rates. To avoid such a difficulty, Kaufman's algorithm <ref type="bibr" target="#b12">[13]</ref> <ref type="bibr" target="#b13">[14]</ref> increases the thickness of a surface, and therefore, to some extent, band limits the frequency spectrum before the sampling, or scan-conversion, process. Huang et. al <ref type="bibr" target="#b10">[11]</ref> discovered and proved the sufficient and necessary thickness of the surface shape that guarantees a correct discrete topology in the resulting volume representation. Unfortunately, all these methods are based on binary volume representations, which are highly susceptible to aliasing artifacts. To address this issue, Sramek and Kaufman initiated data representations in non-binary formats <ref type="bibr" target="#b20">[21]</ref>. In their paper, they show one has to use higher order smoothing functions to pre-filter and band limit the spectrum of the volume. Later, an incremental voxelization method for nonbinary volume is reported in <ref type="bibr" target="#b4">[5]</ref>.</p><p>Over the years, in addition to the search for optimal voxelization, the community has also been exploring other representations of surfaces. Distance fields are scalar fields, with each element in the 3D volume representing the minimal distance to a certain shape. It is common practice to use signed values to distinguish between interior and exterior of the shape. Compared to the surface shapes that correspond to impulses in 3D space, distance fields are much smoother. For shapes without sharp corners and edges, both the surface position and gradient can be reconstructed relatively accurately using a distance field <ref type="bibr" target="#b0">[1]</ref> <ref type="bibr" target="#b8">[9]</ref>. When corners and sharp edges are introduced, high frequency components are also brought into the spectrum. To preserve such details, supersampling with exceptionally high volume resolution, as well as low-pass filtering, is necessary to achieve an alias-free representation.</p><p>In this paper, we present a novel scheme for representing distance fields. We build our volumetric representation of distance fields based on a complete distance definition. Our approach is disparate from the theory of linear sampling. We name our distance field representation a "complete distance field representation (CDFR)", because once the distance volume is constructed, we can extract any distance contour to any requirement of accuracy. As a comparison, conventional approaches based on a single valued distance field can only achieve higher accuracy by re-building the whole distance volume at an increased resolution. However, in most cases building a high resolution distance volume is non-trivial both in computational time and storage space. A recent work <ref type="bibr" target="#b14">[15]</ref> stores the estimated local edge positions in x, y and z directions with each voxel and can extract triangle meshes from volume data at a much improved quality compared to conventional methods <ref type="bibr" target="#b1">[2]</ref> <ref type="bibr" target="#b9">[10]</ref>. However, their distance field representation is not complete and the surface extraction is still based on estimation. Our method only relies on exact computations, and, different from the approach in <ref type="bibr" target="#b1">[2]</ref> <ref type="bibr" target="#b9">[10]</ref> <ref type="bibr" target="#b14">[15]</ref>, uses a point-based approach to represent the extracted contour surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>A voxel-based volume, as a 3D raster, holds discrete sample points representing a certain multi-dimensional entity. In an aliasfree volume discretization, only frequency components below half the Nyquist sampling rate would be stored. As a natural description of solid physical entities, volume representations have found applications in a variety of areas, including medicine, mechanical engineering, scientific computing and simulations. In order to utilize volume technologies, it has been common to convert surface models, such as a polygonal mesh exported by a CAD package, to a volume representation. In this process, first, one needs to voxelize the surface model into a hollow volume representing the surface shape <ref type="bibr" target="#b10">[11]</ref>[13] <ref type="bibr" target="#b13">[14]</ref>. Second, a distance transform is computed to construct a solid volume that encompasses a distance or thickness field recording distances to the surface. Euclidean distance has not been commonly used due to both efficiency concerns and the fact that accuracy is already compromised in the binary surface volume model. Instead, most applications use less accurate distance heuristics such as Manhattan or chessboard distance, or a Chamfer distance <ref type="bibr" target="#b2">[3]</ref>.</p><p>Voxelization techniques that convert surface shapes into binary volumes, with 1's representing occupancy and 0's repre-Hierarchical data structures applied to represent distance fields efficiently have been reported in <ref type="bibr" target="#b6">[7]</ref>, where adaptively sampled distance fields (ADF) are introduced. ADFs help in reducing volume storage size when fewer details are locally present. The specific ADF implementation described in <ref type="bibr" target="#b6">[7]</ref> relies on a single valued distance representation, therefore that implementation still depends on a band-limited spectrum that discards all details beyond the cut-off bandwidth supported by the leaf level in the tree structure. Our CDFR algorithm can be embedded into the ADF structure for an exact distance field representation that is efficient both in terms of storage and processing time.</p><p>Conventionally, distance fields are most often rendered with ray-casting approaches <ref type="bibr" target="#b0">[1]</ref>[5][7] <ref type="bibr" target="#b8">[9]</ref>. High interactive rates are often not attainable. CDFR can also be rendered with a slightly modified ray-casting scheme. However, for efficient rendering of distance contours, we also discuss a method to reconstruct a point-based contour of any distance value from CDFR. Such sparse point-based models can be efficiently rendered with splatting <ref type="bibr" target="#b11">[12]</ref>.</p><p>The paper is organized in the following way. We give a brief introduction to single valued distance fields and the limitations of such representations in Section2. In Section3, we present a complete distance definition (CDD) and complete distance field representation (CDFR) based on CDD. We prove the correctness of our schemes in constructing CDFRs and extracting point-based contours from CDFRs in Section4. Results on a variety of data sets are shown in Section5. Finally, we conclude and discuss future work in Section6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Distance Fields</head><p>Traditionally, distance fields are defined as spatial fields of scalar distances to a surface geometry or shape. Each element in a distance field specifies its minimum distance to the shape. As long as the shape is represented by an oriented manifold, positive and negative distances can be used to distinguish outside and inside of the shape, for instance, using negative values on the outside and positive on the inside. Distance fields have a number of applications in constructive solid geometry <ref type="bibr" target="#b0">[1]</ref> <ref type="bibr" target="#b6">[7]</ref>, surface reconstruction and normal estimation <ref type="bibr" target="#b8">[9]</ref> and morphing <ref type="bibr" target="#b0">[1]</ref> <ref type="bibr" target="#b2">[3]</ref>. Distance fields are also applied to concurrent engineering <ref type="bibr" target="#b15">[16]</ref> where simulations and analysis involving the interior of geometries, such as die-casting simulation or thickness analysis of parts <ref type="bibr" target="#b21">[22]</ref>, are routine.</p><p>For an alias-free sampling of a signal, Nyquist's Law dictates that the sampling rate must be at least two times the highest frequency component in the signal. In spatial domain, geometry is infinitestismally thin, and has an infinitely wide frequency spectrum. The sharp details on the surface, such as corners and edges, also reside on the high ends in the spectrum. Even with an overwhelmingly large volume resolution, one still needs extensive lowpass filtering to limit the bandwidth of the geometric shape. These low-pass filtering operations, with either simple box filters <ref type="bibr" target="#b10">[11]</ref>[13] <ref type="bibr" target="#b13">[14]</ref> or specifically designed higher order filters <ref type="bibr" target="#b20">[21]</ref>, inevitably cause a loss of the exact surface details. Converting the surface shape to a distance field, which is smoother, provides a way to exactly locate the surface <ref type="bibr" target="#b8">[9]</ref> during reconstruction. But the underlying assumption of having a completely smooth surface that is free from sharp corners and edges is unrealistic for most scenarios.</p><p>Frisken et. al <ref type="bibr" target="#b6">[7]</ref> developed a well analyzed framework for adaptively sampled distance fields (ADF), by which one can build hierarchies of distance fields at different levels of detail and be able to cross over different levels of detail as needed. They also vary sampling rates according to the amount of details that are available locally. They used tri-linear interpolation to reconstruct distances, and were able to demonstrate a suite of applications with impressive rendering quality. However, ADF <ref type="bibr" target="#b6">[7]</ref> does not fundamentally solve the problem of losing surface details in discrete representations. After the leaf level of ADF is constructed, the loss in surface details is final and irreversible. When the primary goal of an application shifts from visual quality to accuracy, ADFs with trilinear interpolation may not satisfy the accuracy needs with a guarantee, simply because the true distance fields are not linear where corners or edges are present. What the hierarchies provide is an ability to save computational and storage resources when less details are encountered. For models with fine details everywhere, the ADF eventually resorts to an extremely large voxelization. For the applications where accuracy is highly sought after, current ADFs based on single valued distances incur overwhelming costs, because most practical geometrical models are rich in details at a wide range of scale.</p><p>A high quality distance field should be accurate, efficiently stored and can be efficiently processed. There are two fundamental issues involved in building a high quality distance field. First, we need an accurate way to represent the distance from an arbitrary point in 3D space to an arbitrary shape. Second, how should we optimally organize the distance representations in space?</p><p>This first question is our focus in this paper. We intend to show CDFR as a fundamental fix that preserves all geometic details in the true distance field. Only exact computations are used. ADF, as a systematic framework, addresses the second fundamental issue, by providing an adaptive and smooth transition between resolution levels, depending on the amount of surface details available.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Complete Distance Definition (CDD) &amp; Complete Distance Field Representation (CDFR)</head><p>In this paper, we propose a complete distance definition (CDD). Corresponding to different surface representations, such as parametric surfaces, implicit surfaces or subdivision/polygonal mesh surfaces, there could be different instantiations of CDDs. For this paper, we focus on a simple case where the surface is represented by polygonal meshes. When accuracy is paramount, Euclidean distances are preferred over other distance metrics, such as Chamfer distance or Manhattan distance. The CDD distances are true Euclidean distances. Before discussing CDD, we will discuss a few observations that motivated our research on CDFR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Some Observations</head><p>Distance fields are very smooth in some simple scenarios. For instance, suppose in a 1-dimensional space, we have an impulse. It's frequency components extend to infinity. There is no way to use a finite sampling frequency to sample the impulse without aliasing. But on the other hand, as illustrated in <ref type="figure" target="#fig_0">Fig. 1</ref>, the signed distance field of the impulse is a linear function which extends from negative infinity to positive infinity. Sampling this linear function can be accurate with a relatively low sampling rate.</p><p>Unfortunately, this feature does not hold in higher dimensions where corners are present. As presented in <ref type="bibr" target="#b10">[11]</ref>, when extended into 2D or 3D, the discrepancies and discontinuity on corners makes the distance field non-smooth. For instance, in the triangle in <ref type="figure">Fig. 2</ref>, we have a rather faithful sampling in the light grey grids on the edges, because the geometry is locally linear * . But the sam-pling is not sufficient in the dark grey grids that have corners. The non-linear distance fields within the dark grey grids make it impossible to accurately recover the correct distance distribution from the grid samples.</p><p>According to Nyquist's Law, to sample such complicated distance fields, one must low-pass filter the corners and smooth out the sharpness. Using ADF <ref type="bibr" target="#b6">[7]</ref>, for the grids on the corners, a higher resolution would be used, whereas in the light grey grids, a much lower resolution might suffice.</p><p>To capture the exact location of the impulse in <ref type="figure" target="#fig_0">Fig. 1</ref>, we do not have to use sampling. Alternatively, all one needs is to place an anchor point at some location, and record the signed distance from the anchor to the impulse. In this method, preserving the exact position of the impulse is made straight-forward. This observation motivated our research towards a new distance representation for distance fields.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Complete Distance Definition (CDD)</head><p>CDD is a set of parameters describing both the distance from a 3D point to a surface geometry primitive and the geometry primitive itself. Specifically, when the shape is represented as a mesh of triangles, CDD reduces to a tuple that consists of a scalar canonical distance value, and a description of the triangle with a vertex list and an edge list:</p><formula xml:id="formula_0">(1)</formula><p>The value distance is the true Euclidean distance from the voxel center to a finite triangle. This distance is defined in the pseudo code in <ref type="figure">Fig. 3</ref>.</p><p>While the return value is the CDD distance, the input parameters include a triangle, tri, and a 3D point, pnt. If pnt orthogonally projects into tri (case C 1 ), the return value is the orthogonal distance from pnt to the plane where tri lies. Otherwise, we check whether pnt orthogonally projects onto any of the three edges. If yes (case C 2 ), then the returned distance value is the shortest distance from pnt to an edge that pnt projects orthogonally onto. In case neither C 1 or C 2 applies (case C 3 ), the distance is the minimal distance from pnt to the three vertices. This definition of distance to a finite triangle is further illustrated in <ref type="figure">Fig. 4</ref>.</p><p>We can still use positive and negative distance to distinguish inside and outside. We term the triangle that is the closest to pnt as the base triangle of pnt. If pnt is closest to a triangle and the distance is of case C 1 , then this triangle is pnt's base triangle. If pnt's distance is not case C 1 , rather, it's case C 2 or C 3 , looking for pnt's base triangle is more complicated. For C 2 cases, let's label the projection point of pnt on that corresponding edge as, p', and we record the vector pointing from p' to pnt as V. Between the two triangles sharing that edge, the triangle with a normal direction closer to V's direction, i.e. larger absolute dot product value, , is pnt's base triangle. Very similarly, in C 3 cases, among the triangles sharing that closest vertex, we can easily find out the base triangle of pnt by comparing dot product values. We are interested in finding out pnt's base triangle, because by using the outward normal direction of the base triangle and the relative position of pnt, we can determine the sign of the distance at pnt without ambiguity.</p><p>To better illustrate the process in determining the distance sign, in <ref type="figure" target="#fig_2">Fig. 5a</ref>, we show several 3D examples, shown in 2D. p 1 through p 6 are 2D points. t 1 through t 6 are triangles that form the surface mesh. p 2, 3, 4 and 5 are all case C 1 . From the normal direction of t 2 , we can tell p 2 is outside, p 3 is inside. Similarly, using the normal of t 3 and t 5 , one can tell that p 4 is inside, and p 5 is outside, respectively. p 1 and p 6 are both C 2 . We show an enlarged view of these two cases in <ref type="figure" target="#fig_2">Fig. 5b</ref>. By comparing the dot products, we can tell p 1 's sign is determined by t 2 , and for p 6 , it is decided by t 1 .</p><p>Finally, to save space, we store the description of all triangles in a separate array and only keep a triangle index in a CDD tuple.  <ref type="figure">Figure 2</ref>: Corners in the triangle cause complexity in the distance field, resulting in an aliased spectrum after sampled.  </p><formula xml:id="formula_1">∞ ∞ ∞ ∞ - ∞ - ∞ - ∞ - 2 w 2 ------ ∞</formula><formula xml:id="formula_2">distance v 1 v 2 v</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">A Complete Distance Field Representation (CDFR)</head><p>In this section, we show the process that uses CDD to build a complete distance field representation (CDFR), allowing exact capture of all geometric details, e.g. sharp corners and edges, to any level of accuracy.</p><p>Given a surface mesh, in the voxelization step, we store CDD tuples with each surface voxel, rather than single valued distances.</p><p>For each triangle touching a surface voxel, a CDD tuple is stored with that voxel. The end result of the voxelization step leaves all surface voxels with a list of CDD tuples, sorted in ascending order by distance values. <ref type="figure" target="#fig_3">Fig. 6</ref> provides an example of voxelizing a single surface voxel, Vox. There are three triangles touching Vox. T 2 is case C 1 , with T 1 and T 3 being case C 2 or C 3 . The minimal distance of Vox, measured from the center of Vox is d 2 . As a result, Vox has a sorted list of 3 CDD tuples.</p><p>At the end of voxelization, we have a volume where each voxel which the surface intersects contains a list of polygons cutting through it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Distance Transform</head><p>For a distance transform, initially, we use an outside flooding algorithm to eliminate all outside voxels from our computation. For the remaining voxels, a contour by contour CDD propagation is performed from the surface voxels to the interior. During this process, a voxel looks for CDD tuples that have been newly propagated to anyone of its 26-neighbors <ref type="bibr" target="#b10">[11]</ref>. It inherits all new CDD tuples from its neighbors, and for each triangle, it computes the true Euclidean distance from its own position. An updated list of CDD tuples are then sorted into ascending order and the first CDD tuple in the list contains the current distance, cur_distance, of this voxel. All the CDD tuples that contain a distance value within the range:</p><p>[cur_distance, cur_distance + *voxel size] are stored with that voxel. This is a sufficient range to guarantee correctness in the distance transform, as we will prove in Section4. The CDD tuples out of this range are discarded. This process of distance transform iterates until no voxels find new CDD tuples from its 26-neighbors affecting its current CDD tuples list.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Reconstructing A Distance Contour</head><p>The most frequent way in which a distance field is used is by reconstructing or extracting an iso-distance contour. For instance, a user asks the following request, "show me the zero distance contour with an error tolerance of 0.5mm". The conventional way of reconstructing sub-voxel distance is to trilinearly interpolate inbetween voxels <ref type="bibr" target="#b6">[7]</ref>. Often times this reconstruction step is embedded in ray-casting procedures at rendering time. While this works for some applications, there is no guarantee on the level of accuracy. From CDFR, we extract a distance contour with a fulfillment of an arbitrarily high accuracy requirement. We store the extracted distance contours as point-based models <ref type="bibr" target="#b5">[6]</ref> <ref type="bibr" target="#b19">[20]</ref>, so that we can render the contours at high interactive rates with splatting <ref type="bibr" target="#b3">[4]</ref>[12] <ref type="bibr" target="#b17">[18]</ref>.</p><p>The extracting procedure works as following. Given a requested interior thickness, t (t&gt;0), we traverse these voxels with a distance value in the range:</p><p>(2)</p><p>The requested iso-contour will pass through the span of these voxels. Unlike marching cubes <ref type="bibr" target="#b9">[10]</ref>, We do not use conditions like and , because the underlying assumption of having a linear function is not true in our case. There could be cases where the 8 corner voxels are just surrounding the maximal thickness point in the model, and none of the 8 voxels exactly captures that maximum.</p><p>After identifying the relevant voxels, we then subdivide the voxels into sub-voxels, or points <ref type="bibr" target="#b1">[2]</ref>. We only extract the sub-voxels that are close to the desired surface into a point-based iso-distance contour represented the surface. In order to support the error tolerance, E, picked by users, the size of each sub-voxel must be:</p><p>(3)</p><p>For each sub-voxel, or point, we compute the signed true distance for all the CDD tuples resident on each of the 8 cornering voxels. The points that have the minimal positive distance value within the range [t -E/2, t + E/2] are extracted into the point-based iso-distance contour.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">High Quality Gradients</head><p>Besides using the distance contour for analysis, visualizations of the distance contours are also highly desired in applications. For point-based models, having high quality normal information on each point is essential for high image quality.</p><p>Our CDFR offers an additional advantage in this perspective. When extracting the distance contour from the base triangle of   each sub-voxel, the normal of this point is computed. If this point is of case C 1 to its base triangle, then the normal of the base triangle is this point's true gradient. If the point is one of the cases C 2 or C 3 , the gradient is the vector V in <ref type="figure" target="#fig_2">Fig. 5</ref>. For instance, in a C 2 case, the 3D point, P, first gets projected onto the closest edge. The gradient is the vector connecting P and its projection. In C 3 cases, the gradient direction is obtained by connecting P and the closest vertex. Therefore, the normal vectors computed for the whole pointbased model is continuous and accurate. High quality per point shading is thus supported.</p><formula xml:id="formula_3">V V N 1 N 2 N 1 N 6 &lt; VN 1 • VN 2 • T 2 is</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Proof of Sufficiency</head><p>To prove the correctness of CDFR, we need a proof of sufficiency. That is, when we need to reconstruct the local distance field in the span of any voxel, all the surface primitives affecting this local area are present on that voxel.</p><p>A surface primitive, such as a triangle, affects a local field in 3D space by being the closest surface triangle to at least one position in this local area. Based upon this observation, we devise our proof of sufficiency with a proof by contradiction:</p><p>Suppose in the CDFR, R, there exists a local voxel, V, in whose span there exists at least one point, P(x,y,z), whose base triangle, T, is not resident on the voxel, V.</p><p>Without loss of generality, we write the distance from P to T as D. All distance fields are continuous functions, although they may not have continuous derivatives. For a point, P'(x+dx,y+dy,z+dz), that is closely neighboring P, the minimal distance from P' to T is bounded by: <ref type="bibr" target="#b3">(4)</ref> Due to deduction, when P' incrementally moves from P towards V's center point, it logically follows that the distance from V's center point to T is bounded by: <ref type="bibr" target="#b4">(5)</ref> Equation (5) can be rewritten as: <ref type="bibr" target="#b5">(6)</ref> However, the minimum distance to P, which is D, must also be smaller than , with minD denoting the minimum distance of the surface to V. Therefore, the distance of T to V, must be within the following range:</p><formula xml:id="formula_4">(7)</formula><p>Since P is in the span of V, the maximum possible distance is voxel size, the range in (7) is actually a subset of:</p><p>Contradiction. Since during our distance propagation process, Equation (8) is exactly the range that we maintain on each voxel. Hence, triangle T must be resident on voxel V. The assumed case can not exist. Proof completed.</p><p>We do not claim our storage is minimal. We might have kept more CDD tuples on each voxel than necessary. However, enforcing that minimality would introduce more complexity. As long as we use a triangle index in CDD tuples instead of complete description of each triangle, the extra storage cost that we spend is low. We have traded for simplicity in implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Results and Analysis</head><p>The resolution of CDFR volumes do not affect the accuracy of the distance field. Also, the CDFR construction step is indepen-dent from the step that reconstructs iso-distance contours. Before we analyze the performance of our approach, we show images of distance contours on a few sample parts to demonstrate the accurate Euclidean distance fields obtained. All point-based models are rendered with splatting <ref type="bibr" target="#b11">[12]</ref>. All results are collected on a SGI Octane with a 300MHz processor and 512MB memory. <ref type="table" target="#tab_2">Table 1</ref> provides a full description of the models used for test and analysis of our algorithm. We have also applied our algorithm to a very complicated part, Engine Cylinder Head, for heavy section detection. The details of the Engine Cylinder Head model is described in Section5.5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Experimental Data Sets</head><p>We first look at some simple cases. Cubes and tetrahedral cells are the simplest. They are convex and symmetric. With a true Euclidean distance field, the thickness contours of different values are in the exact shape of the outer surfaces, including the sharp edges and corners <ref type="figure" target="#fig_4">(Fig. 7)</ref>.</p><p>Concavities cause additional complexity in distance fields. Two concave examples, a one-ended tooth and a six-pointed star are shown in <ref type="figure">Fig. 8</ref>. For the one-ended tooth, we choose a small thickness value to extract a contour close to the surface, while for the six-pointed star, a larger thickness is chosen. The evolving effects in Euclidean distance fields are interesting, with corners being smoothed out on the interior distance contours in both <ref type="figure">Fig.  8a</ref> and <ref type="figure">Fig. 8b</ref>. Small thickness contours closer to the surfaces retain more detail of the surface shape. The shape of the deeper contours manifest more global features of the shape <ref type="figure">(Fig. 8)</ref>.</p><p>All four models have a CDFR at a low resolution of . To reconstruct the thickness contours in <ref type="figure" target="#fig_4">Fig. 7 and  8</ref>, we set the accuracy to 1/500 of the longest dimension of the model. For all 4 models, there are less than 400K points in the point-based contour. We obtained 3 frames/second rendering rates of the accurate distance contours with per point shading.  3232 × 32 ×</p><formula xml:id="formula_6">Ddx 2 dy 2 dz 2 ++ - Ddx 2 dy 2 dz 2 ++ + [,] Ds d p v ∫ - Ds d p v ∫ + [,] DdistVP , () - DdistVP , () + [,] minDdistVP , () + minDminD 2distVP , () + [,]</formula><p>We note that, for conventional volumes, interactive rendering is still an overwhelming challenge on most computing platforms for a volume of size <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Real-World Models</head><p>Surface graphics based CAD/CAM systems often spend hours to perform jobs involving the interior of real world designs. Volume techniques have been considered. But due the overwhelming costs incurred in high resolution volumes, the affordable accuracy is very limited with current computing systems when applied to design for manufacturing purposes <ref type="bibr" target="#b15">[16]</ref>. The application of volume graphics to CAD is limited. We tested our approach on two industry production models, 'connector' and 'brevi', for which both accuracy and interactive frame rates are highly sought after.</p><p>All contours in <ref type="figure">Fig. 9</ref> and 10 are extracted to an accuracy of 1/ 1024 of the length of each part. In <ref type="figure">Fig. 9</ref>, the thickness contours within the 'connector' part show crisp edges and corners, while at the same time, retaining topological features in the surface geometry at different levels of scale.</p><p>In <ref type="figure" target="#fig_0">Fig. 10</ref>, we present the thickness contours within the 'brevi' part at thicknesses of 10 and 4 inches. <ref type="figure" target="#fig_0">Fig. 10a</ref> demonstrates that even at the core of a part, sharp corners in the distance fields still exist at a variety of scales. The hole on the lower right corner of <ref type="figure" target="#fig_0">Fig. 10b</ref> is a discontinuous point in the distance field, and is one of the causes of failures during manufacturing. We are pleased that our algorithm captures such artifacts. (See color plate for greater details).</p><p>The contours in <ref type="figure">Fig. 9b</ref> and <ref type="figure" target="#fig_0">Fig. 10a</ref> are small, with 400K and 120K points, respectively. Around 2 to 5 frames/second have been recorded. However, <ref type="figure">Fig. 9a</ref> and <ref type="figure" target="#fig_0">Fig. 10b</ref> both have relatively large contours, with 1.5 to 2 million points, and only about 0.5 frames/ second rates are obtained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">CDFR Size and Construction Time</head><p>The detailed storage structure on each voxel is shown in <ref type="figure" target="#fig_0">Fig.  11</ref>. Each voxel contains a 1-byte flag, vCnt. Empty voxels, i.e. outside voxels, have vCnt set to zero. Surface voxels have a vCnt value in the range between 1 and 127, denoting the number of triangles present on this voxel. Voxels entirely in the interior are distinguished by having a vCnt larger than 127. The value (vCnt -127) is the count of triangles present. For very complicated models at very low CDFR resolution, vCnt may overflow. In that case, a larger number is needed for vCnt, or an adaptive subdivision scheme is required. By subdividing each voxel into an even number of sub-voxels, we also break up areas having a central curvature point, such as a sphere. In total, bytes are needed per non-empty voxel, with n being the number of triangles present on that voxel.</p><p>To analyze storage costs of a CDFR, we constructed CDFR volumes for each model at different resolutions. Cube, Tetrahedron, 1-Tooth (one-ended tooth) and 6-Star (six-pointed star) are simple models, for which we built CDFR volumes at 32 and 64 resolutions and show the results in <ref type="table" target="#tab_4">Table 2 and Table 3</ref>, respectively. The 'Resolution' column shows the actual dimension of the CDFR volume. The construction time and final sizes of the CDFRs are shown under 'Timing' and 'Size'. 'In/Sur/Out' indicates the distribution of interior, surface and outside voxels in the CDFR. Finally, the average number of triangles on surface and interior voxels are presented in the last two columns.    We notice that, in <ref type="table" target="#tab_4">Table 2</ref>, the average number of triangles on surface voxels is mostly less than or around 2. On the interior, the average number of triangles per voxel is about two times that. Solid and compact models, such as a cube, take more space because it has more non-empty voxels. Overall, considering the 32K voxels in the volume, CDFR is fairly efficient in storage for all the models.</p><p>As we double the resolution <ref type="table">(Table 3)</ref>, the average number of triangles per voxel decreases and approaches the lower limit of the number of triangles affecting each voxel, which is 1 triangle/voxel. Doubling the resolution, the number of interior voxels increases faster than the number of surface voxels. Hence, both the size and construction time of CDFR increase by more than a factor of 8.</p><p>For the two industry parts, 'connector' and 'brevi', we use higher resolutions, since there are more surface details. We chose 128 and 256 resolutions. A 128 resolution seems high enough to limit the average number of triangles on each voxel for 'connector'. However, for 'brevi', a resolution of 256 is necessary to cut down the (number of triangles)/voxel. The increase in storage size and construction time by 8 to 10 times is still true, as the volume resolution is doubled.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Point-based Iso-Distance Contour Extraction Time</head><p>Using a higher resolution CDFR has no effect on the accuracy in the final representation. However, it causes an dramatic cubic increase in storage size and construction time. The main motivation in using higher CDFR resolutions is to have more efficient distance contour extraction, due to less CDD tuples in each voxel and more accurate localization of voxel spans that may contain the requested iso-contour. We tested all of the models on the time to extract iso-distance point-based contours from different CDFR resolutions. In <ref type="table">Table 5</ref>, we show these timings, in seconds, to extract a contour from both 32-res and 64-res CDFRs of the four simpler models. The 'Thickness' column shows the iso-distance value chosen. For each CDFR resolution, we collect timings for 3 levels of accuracy and organize the results in regard to which conventional volume resolution the extracted contours would correspond to in accuracy. We list the three corresponding conventional volume resolutions, 128, 192, 384, under both '32 Res CDFR' and '64 Res CDFR'.</p><p>It is obvious, that finer accuracy results in longer extraction time. Using a higher resolution CDFR, this extraction time significantly drops, as shown by the 32-res versus 64-res CDFRs in <ref type="table">Table  5</ref>. In <ref type="table" target="#tab_8">Table 6</ref>, we show the speedups by using higher resolution CDFR's. For any CDFR resolution, the number of points extracted for a certain distance contour stays roughly the same. Using a higher resolution CDFR, the average amount of time spent to extract a point on the contour is much less.</p><p>On the two industrial parts, we chose a thickness of 0.3 inches for 'connector', and 4 inches for 'brevi'. We used 128-res and 256 res CDFRs and the 3 levels of accuracy correspond to conventional volume resolutions of 512, 768 and 1024. The results in <ref type="table">Table 7</ref> confirm our findings from <ref type="table" target="#tab_8">Table 5 and Table 6</ref>. Using higher resolution CDFR effectively cuts down iso-contour extraction time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">A Cutting Edge Application</head><p>We also applied our algorithm to a challenging design part, an engine cylinder head with 135,429 surface triangles. It is modified from a real design model for our research purposes. When built, it weighs 40Kg's, and measures cm in size. Typically, the maximal thickness of engine cylinders is only about 9 to 10 mm. In engines blocks, heavy sections are an important source of physical failure. It is highly desired to be able to detect heavy sections at an accuracy higher than 0.15mm. Unfortunately, there has been no reliable and affordable way to perform such detection in the early design stages. Extensive resources have to be spent in the dreadfully long and cyclic design, prototyping and verification process. For conventional volume techniques to handle this task, one needs to build a volume having at least voxels in floating-point numbers, amounting to 24GB. Even so, there is still no guarantee of an accurate Euclidean distance field, due to the binary surface volumes in voxelization, inaccurate distance map and linear interpolations used in reconstruction. Further-    With the CDFR representation, at an CDFR resolution of , we are able to construct a CDFR of size 37MB in 30 minutes. From this CDFR, we extract the distance contour as a point-based representation with 0.137 mm accuracy, corresponding to a conventional volume resolution. For a thickness contour of 8.5mm, the extraction stage takes about 632 seconds, and the resulting point-based model has 450K points and is rendered interactively at 2 frames/sec, with the surface triangles being sorted and rendered semi-transparently at the same time (see <ref type="figure" target="#fig_0">Fig. 12</ref>). This whole process is done on our 512MB memory, 300MHz processor SGI Octane.</p><p>This result is strong, in that it brings an unprecedented accuracy to commonly available computing platforms. It is a tool that provides a guarantee of correctness as well as an interactive capability for visual investigation of highly complex models. This specific model is courtesy of Ford Motor Company.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Discussions and Future Work</head><p>In this paper we proposed CDFR as an accurate description of distance fields resulting from a surface shape. CDFR volumes are not band-limited and exactly capture surface details in the 3D volume. Specifically, we demonstrate the advantages offered by CDFR on triangle surface meshes. High accuracy and visual quality is achievable with a point-based iso-distance contour extraction. In addition to providing a proof of correctness and visualization results on real data sets, performance and storage issues have been discussed. With CDFR, the initial resolution of the volume does not affect the accuracy in subsequent iso-surface extraction. The initial resolution, however, provides a trade off between storage and speed. CDFR can be rendered directly with ray-casting using an adapted method of ray-object intersection check. However, we propose in this paper to use point-based approaches to rendering distance contours from CDFR with genuine per-point shading.</p><p>One future extension is to use hierarchical data structures, such as ADF, to organize CDFR. During extraction, it is the complexity on each voxel that affects the overall performance. Using ADF to spatially manage CDFR would expedite the reconstruction process and reduce CDFR storage costs. Furthermore, hierarchically organized CDFR provides a general framework to compute the Euclidean distance from a 3D point to polygonal mesh. While the applications discussed in this paper strictly deal with the interior of a shape, this framework can also be applied to the exterior of complex models and scenes. All distance values are computed exactly at a low constant time. No complicated approximation schemes <ref type="bibr" target="#b7">[8]</ref> based on progressive meshes etc. is necessary. Appli-cations that may benefit from this framework include path planning with a guaranteed accuracy in highly complicated scenes, such as assembly of airplanes, large scale machinery. General graphics applications such as hypertexture renderings can also make use of this novel distance field representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Acknowledgment</head><p>This project has been funded by Ford Motor Company, Visteon, Inc., and NSF CAREER Award #9876022. The connector, brevi and engine models are provided by Ford Motor. We would like to thank the reviewers of this paper for their insightful comments, too.  <ref type="figure" target="#fig_0">Figure 12</ref>. The thickness contour of a modified engine cylinder head model, at 8.5mm thickness and 0.137mm error tolerance.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Without low-pass filtering, it's impossible to sample the impulse (left), but we can sample its distance field (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>Definition of distance from a point to a finite triangle C1 If pnt projects into tri, it's case C 1 . Otherwise, pnt is either C 2 or C 3 , depending on whether it's closer to an edge or a vertex. This diagram is drawn in 2D for ease of illustration. pnt pnt pnt VNormal •</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>(a) 2D illustrations of the process to determine the sign of the distance of a point. The solid black arrows depict the outward normal direction of each triangle. Points p 2 through p 5 project into the triangles, i.e. case C 1 . The signs of the distances of p 2 through p 5 are determined by evaluating the normal direction of each point's base triangle. p 1 and p 6 are examples of C 2 cases. (b) Enlarged view of p 1 and p 6 . Both p 1 and p 6 are outside.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>A 2D illustration of building a CDD tuple list for a surface voxel, Vox. There are 3 triangles intersecting Vox. The CDD tuple list is organized in ascending distance order, with the minimal distance of Vox being d 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>A cube and tetrahedron, with the surface mesh shown in semi-transparency. The distance contours (shown in red, perpoint shaded) are of thickness (a) 0.6 inch and (b) 0.1 inch.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>Two concave examples, a 6-pointed star and a oneended tooth. (a) For small thickness values (0.2 inch), the distance field retains most corners and edges, with little smoothing. (b) As the thickness increases (0.35 inch), the distance field evolves into the model, showing more smoothing. Results of 'connector'. The surface mesh is shown in semi-transparency, and the per-point shaded distance contours are at thicknesses (a) 0.2 inch and (b) 0.35 inch.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 10 :Figure 11 :</head><label>1011</label><figDesc>Sample images of 'brevi'. With the per-point shaded contours at thicknesses (a) 10 inches and (b) 4 inches. vCnt; // in/suf/out, and counter of triangles float cur_distance; // current minimal distance on this voxel int triangles[triangle count]; // dynamic array of triangle indices } The storage on each voxel in a constructed CDFR.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 12 :Figure 7 .Figure 8 .Figure 9 .Figure 10 .</head><label>1278910</label><figDesc>The thickness contour of a cylinder model, at 8.5mm thickness and 0.137mm error tolerance. A cube and tetrahedron, with the surface mesh shown in semitransparency. The distance contours (shown in red, per-point shaded) are extracted with an error tolerance of 1/500 of the longest dimension of the models. The thickness in (a) is 0.6 inch and 0.1 inch in (b). Two concave examples, a 6-pointed star and a one-end tooth. (a) At small thickness (0.2 inch), the distance field retains most corners and edges, with little smoothing. (b) As thickness increases (0.35 inch), the distance field evolves into the core of the model, showing more smoothing and losing more surface details but still preserving the overall shape. Results of 'connector'. The surface mesh is shown in semi-transparency, and the per-point shaded distance contours are at thicknesses (a) 0.2 inch and (b) 0.35 inch. The sample images of 'brevi'. With the per-point shaded contours at thickness (a) 10 inches and (b) 4 inches.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>CDD (triangle tri, vec3 pnt) { float mindist = MAXIMUM; if (pnt projects orthogonally into tri's interior) // C 1 mindist = distance from pnt to tri's plane;</figDesc><table><row><cell>else</cell><cell></cell></row><row><cell>{</cell><cell></cell></row><row><cell>for each edge of tri, e i ,</cell><cell></cell></row><row><cell>if (pnt projects orthogonally onto e i )</cell><cell>// C 2</cell></row><row><cell cols="2">mindist = min(mindist, distance from pnt to e i );</cell></row><row><cell>for each vertex of tri, v i ,</cell><cell>// C3</cell></row><row><cell cols="2">mindist = min(mindist, distance from pnt to v i );</cell></row><row><cell>}</cell><cell></cell></row><row><cell>return mindist;</cell><cell></cell></row><row><cell>}</cell><cell></cell></row><row><cell>3 〈〉 e 1 e 2 e 3 ,, ,, 〈〉 ,, 〈〉</cell><cell></cell></row></table><note>float</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>TABLE 1 .</head><label>1</label><figDesc></figDesc><table><row><cell>3 () 2 ⁄</cell></row><row><cell>minDminD [,] 3voxelsize +</cell></row></table><note>Physical Information of Test Models.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>TABLE 2 .</head><label>2</label><figDesc></figDesc><table /><note>CDFR facts at 32 resolution.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>TABLE 3 .TABLE 4 .</head><label>34</label><figDesc>CDFR facts at 64 resolution. CDFR facts for 'connector' and 'brevi'.</figDesc><table><row><cell>Model</cell><cell cols="2">Resolution Timing</cell><cell>Size</cell><cell>In/Sur/Out</cell><cell>Avg</cell><cell>Avg</cell></row><row><cell></cell><cell></cell><cell>(sec)</cell><cell>(KB)</cell><cell>(K voxels)</cell><cell>Tri/Sur</cell><cell>Tri/In</cell></row><row><cell cols="2">Connector 128,43,58</cell><cell>8.05</cell><cell>970</cell><cell>26.4/20.8/272.0</cell><cell>1.95</cell><cell>2.91</cell></row><row><cell cols="3">Connector 256,81,112 82.72</cell><cell>7,548</cell><cell>30.7/91.5/1,924.0</cell><cell>1.43</cell><cell>2.53</cell></row><row><cell>Brevi</cell><cell>56,52,128</cell><cell>51.53</cell><cell>3,459</cell><cell>100.4/50.5/221.7</cell><cell>3.01</cell><cell>4.66</cell></row><row><cell>Brevi</cell><cell cols="5">106,98,256 448.2 25,260 1,075.4/205.2/1,379 1.96</cell><cell>3.69</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7"><head>TABLE 2 .TABLE 5 .</head><label>25</label><figDesc>CDFR facts at 32 resolution. Time to extract iso-distance contour from simple models. Two CDFR resolutions have been tested with 3 levels of accuracy.</figDesc><table><row><cell cols="2">Model Thickness</cell><cell cols="6">Timing (32-Res CDFR) (sec) Timing (64-Res CDFR) (sec)</cell></row><row><cell></cell><cell>(inch)</cell><cell cols="6">128 res 192 res 384 res 128 res 192 res 384 res</cell></row><row><cell>Cube</cell><cell>0.6</cell><cell>1.13</cell><cell>3.96</cell><cell>29.66</cell><cell>0.84</cell><cell>1.95</cell><cell>14.48</cell></row><row><cell>Tetra</cell><cell>0.1</cell><cell>0.22</cell><cell>0.55</cell><cell>4.02</cell><cell>0.15</cell><cell>0.29</cell><cell>1.61</cell></row><row><cell>1-Tooth</cell><cell>0.2</cell><cell>0.73</cell><cell>2.15</cell><cell>14.79</cell><cell>0.43</cell><cell>1.61</cell><cell>7.75</cell></row><row><cell>6-Star</cell><cell>0.35</cell><cell>0.54</cell><cell>1.53</cell><cell>12.23</cell><cell>0.22</cell><cell>0.61</cell><cell>4.30</cell></row><row><cell cols="2">Model Thickness</cell><cell cols="3">time/point ( /point)</cell><cell cols="3">time/point ( /point)</cell></row><row><cell></cell><cell>(inch)</cell><cell cols="2">32-Res CDFR</cell><cell></cell><cell></cell><cell>64-Res CDFR</cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="6">128 res 192 res 384 res 128 res 192 res 384 res</cell></row><row><cell>Cube</cell><cell>0.6</cell><cell>11.74</cell><cell>18.49</cell><cell>34.36</cell><cell>6.42</cell><cell>6.61</cell><cell>12.37</cell></row><row><cell>Tetra</cell><cell>0.1</cell><cell>11.98</cell><cell>12.91</cell><cell>19.63</cell><cell>4.72</cell><cell>4.99</cell><cell>6.92</cell></row><row><cell>1-Tooth</cell><cell>0.2</cell><cell>15.17</cell><cell>19.80</cell><cell>27.10</cell><cell>5.09</cell><cell>10.93</cell><cell>13.56</cell></row><row><cell>6-Star</cell><cell>0.35</cell><cell>34.03</cell><cell>43.83</cell><cell>78.36</cell><cell>10.37</cell><cell>12.80</cell><cell>20.41</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8"><head>TABLE 6 .</head><label>6</label><figDesc>Comparing per-point extraction time (/voxel) at different CDFR resolutions.</figDesc><table><row><cell></cell><cell></cell><cell>µs</cell><cell></cell><cell></cell><cell></cell><cell>µs</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>µs</cell><cell></cell></row><row><cell>Model</cell><cell cols="3">128-Res CDFR</cell><cell></cell><cell cols="3">256-Res CDFR</cell></row><row><cell></cell><cell cols="7">512 res 768 res 1024 res 512 res 768 res 1024 res</cell></row><row><cell>Connector Timing (sec)</cell><cell>2.43</cell><cell>7.12</cell><cell>16.92</cell><cell></cell><cell>1.03</cell><cell>2.69</cell><cell>5.67</cell></row><row><cell>Connector: time/point (/point) µs</cell><cell>24.08</cell><cell>30.92</cell><cell>41.45</cell><cell></cell><cell>9.88</cell><cell>11.00</cell><cell>13.38</cell></row><row><cell>Brevi Timing (sec)</cell><cell>23.66</cell><cell cols="2">74.65 174.79</cell><cell></cell><cell>9.25</cell><cell>28.29</cell><cell>64.46</cell></row><row><cell>Brevi: time/point (/point) µs</cell><cell>32.51</cell><cell>45.27</cell><cell>59.72</cell><cell></cell><cell>12.23</cell><cell>16.63</cell><cell>21.36</cell></row><row><cell cols="8">TABLE 7. Connector' and 'brevi' iso-contour extraction timing (sec) and</cell></row><row><cell cols="3">per-point extraction time (/point). µs</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="2">266480 ×</cell><cell>×</cell><cell>157</cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">17743200 ×</cell><cell>×</cell><cell>1046</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">3D scan conversion of CSG models into distance volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Breen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mauch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1998 IEEE Symposium on Volume Visualization</title>
		<meeting>1998 IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="7" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Two algorithms for the three-dimensional reconstruction of tomograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ludke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Crawford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Teeter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Medical Physics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="320" to="327" />
			<date type="published" when="1988-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Three-dimensional distance field metamorphosis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Solomovici</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="116" to="141" />
			<date type="published" when="1998-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Texture Splats for 3D Scalar and Vector Field Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization&apos;93 Proceedings</title>
		<imprint>
			<date type="published" when="1993-10" />
			<biblScope unit="page" from="261" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Incremental triangle voxelization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Dachille</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Graphics Interface</title>
		<meeting>of Graphics Interface</meeting>
		<imprint>
			<date type="published" when="2000-05" />
			<biblScope unit="page" from="205" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Surfel: surface elements as rendering primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Barr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Siggraph</title>
		<meeting>of Siggraph<address><addrLine>New Orleans</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Adaptively Sampled Distance Fields: A General Representation of Shape for Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Frisken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Perry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rockwood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH&apos;2000</title>
		<meeting>of SIGGRAPH&apos;2000<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Meshsweeper: dynamic point-to-polygonal mesh distance and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gueziec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="61" />
			<date type="published" when="2001-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Using Distance Maps for smooth surface representation in sampled volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gibson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1998 IEEE Volume Visualization Symposium</title>
		<meeting>1998 IEEE Volume Visualization Symposium</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="23" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Marching Cubes: a high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH 87 Proceedings)</title>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An Accurate Method to Voxelize Polygonal Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Fillipov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Kurzion</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE/ACM Symposium on Volume Visualization</title>
		<meeting>of IEEE/ACM Symposium on Volume Visualization<address><addrLine>Chapel Hill, NC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">FastSplats: optimized splatting on rectilinear grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shareef</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Conference on Visualization</title>
		<meeting>of IEEE Conference on Visualization<address><addrLine>Salt Lake City, Utah</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">An algorithm for 3D scan-conversion of polygons</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurographics&apos;87</title>
		<meeting>of Eurographics&apos;87</meeting>
		<imprint>
			<publisher>North Holland</publisher>
			<date type="published" when="1987-08" />
			<biblScope unit="page" from="197" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An algorithm for 3D scan-conversion of parametric curves, surfaces, and volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH&apos;87</title>
		<meeting>of SIGGRAPH&apos;87</meeting>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="page" from="171" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Feature sensitive surface extraction from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Schwanecke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH</title>
		<meeting>of SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A simple visualization tool to support concurrent engineering design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rebello</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kinzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="727" to="735" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A Practical Evaluation of Popular Volume Rendering Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meissner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Symposium of Volume Graphics</title>
		<meeting>of Symposium of Volume Graphics<address><addrLine>Salt Late City; Utah</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">High-Quality Splatting on Rectilinear Grids with Efficient Culling of Occluded Voxels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Muller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shareef</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transaction on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="116" to="135" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Interactive ray tracing for volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sloan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions On Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="238" to="250" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">QSplat: a multi-resolution point rendering system for large meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Siggraph</title>
		<meeting>of Siggraph<address><addrLine>New Orleans</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Alias-free voxelization of geometric objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sramek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions On Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="250" to="267" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Volume-based reasoning and visualization of dicastability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rubello</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;95</title>
		<meeting>IEEE Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="359" to="362" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
