<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PingTV: A Case Study in Visual Network Monitoring</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Gubin</surname></persName>
							<email>aggubin@lucent.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Yurcik</surname></persName>
							<email>wjyurci@ilstu.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Larry</forename><surname>Brumbaugh</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Lucent Technologies Network Systems Naperville</orgName>
								<address>
									<region>IL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Dept. of Applied Computer Science Normal</orgName>
								<orgName type="institution">Illinois State University</orgName>
								<address>
									<region>IL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Dept. of Applied Computer Science Normal</orgName>
								<orgName type="institution">Illinois State University</orgName>
								<address>
									<region>IL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">PingTV: A Case Study in Visual Network Monitoring</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>network visualization</term>
					<term>active network measurement</term>
					<term>real-time television monitoring system</term>
				</keywords>
			</textClass>
			<abstract>
				<p>PingTV generates a logical map of a network that is used as an overlay on a physical geographical image of the location from the user perspective (buildings, floors within buildings, etc.). PingTV is used at Illinois State University as a visualization tool to communicate real-time network conditions to the university community via a dedicated channel on the campus cable TV system. Colored symbols allow students and staff to discern highcongestion &quot;rush hours&quot; and understand why their specific Internet connectivity is &quot;broken&quot; from the wide range of potential causes. Lessons learned include the use of color to visually convey confidence intervals using color shading and the visualization of cyclical network traffic patterns. Our implementation is general and flexible with potential for application for other domains.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>There are many reasons for desiring an intuitive network map showing real-time conditions. First, there is the inherent complexity resulting from the large volume of data that is potentially available but not able to be processed by humans in real-time. Other secondary reasons include documentation, recording history, problem diagnosis, determining usage patterns, planning for growth, and setting the expectations of users to network conditions. <ref type="bibr" target="#b2">[3]</ref> This paper address both the first (processing volume) and last (user expectations) reasons.</p><p>PingTV uses a ping program to proactively gather network status information. First, PingTV generates a logical map (BMP image) of the network based on the hierarchical network structure gathered either from manual input or automatically discovered from prior scanning. Then this logical map is used as an overlay on a physical geographical image of the location from the user perspective (buildings, floors within buildings). Host status is represented by green, yellow, and red icons corresponding to available, congested, and unavailable hosts respectively.</p><p>Ultimately, PingTV is used as a tool to communicate real-time network traffic conditions and announce network outages to the university community via a dedicated channel on a ubiquitous campus cable TV system. Illinois State University (ISU) requested research into a network monitoring system for its campus network with three requirements: 1) independent of the network (would still operate if the entire network or parts of the network went down)</p><p>2) user friendly output such that anyone could understand network status without special training or knowledge</p><p>3) simple to maintain and configure</p><p>The first unique contribution of this work is the direct combining of active network management data and real-time television display. While there are Internet websites that successfully accomplish similar graphical display of network management information, to the best knowledge of the authors, there are no other real-time Internet-&gt;television implementations. It is, however, common practice in the television industry to indirectly broadcast information via a camera focusing on a real-time website (morning/evening rush hour traffic reports from local highways).</p><p>The second unique contribution of this work is use of precise geographical data to map network devices to intuitive graphical maps. Network devices can either be dynamically located via real-time GPS (geostationary positioning system via satellite) or statically assigned location data into a management information base. Working with standards bodies such as the IETF and WWW Consortium, OGC intends to develop mapping standards that would allow developers to download and manipulate multisourced geographical maps. Using PingTV along with geospatial data sets allows network managers to graphically depict the status of networks to users without providing lower level technical network data (device types, IP addresses, topology) that would confuse users and reveal sensitive information that could be used maliciously.</p><p>The remainder of the paper is organized as follows: Section 2 provides an architectural overview and implementation details of PingTV. Section 3 presents experience with using PingTV in its working environment and discussion of continuing challenges and limitations. We close with conclusions in Section 4. Lastly, we attach a page of colored PingTV video screen shots. <ref type="figure">Figure 1</ref> depicts the PingTV architecture (Targa Vision is video capturing software). PingTV is written in the Java programming language to achieve computing platform independence. Two systems interact through bit map images, the network management system and the geospatial data mapping system, to create a combined geographical .bmp file containing an image intuitive for users. Targa vision periodically polls the .bmp files and broadcasts over the campus cable television system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">ARCHITECTURAL OVERVIEW</head><p>We start at this high-level architecture but subsequent sections will go into more depth on important PingTV component systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1: PingTV Architecture</head><p>PingTV uses multiple concurrent threads to maximize efficiency of data collection -to reduce query time with each ping query in a separate thread since an individual ping may take up to 30 seconds to complete. <ref type="figure">Figure 2</ref> shows the three main classes: PingGUI, Pinger, and Painter. Hostinfo, Rootinfo, and myDialog are supplementary classes to hold information about ping parameters and nodes. Inputs include ping.exe (location data), ping parameters, and tree file (optional). Outputs include pingdata.txt (logfile), and data#.bmp (geographical painted image).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2: Java Class Map</head><p>The 1 "ping engine" is a thread that sleeps for a specified time and then wakes and launches pings. The graphical console to PingTV runs a separate thread so parameters can be changed while the system is running.</p><p>Image "painting" (geospatial mapping of symbols onto a geographical image) is done sequentially since it is resource intensive (CPU cycles and disk access time). Images are about 900 Kb and it takes up to 5 seconds to create. Logging of ping data is accumulated into an easily parsable log <ref type="figure" target="#fig_0">Figure 3</ref> shows the colored icons (corresponding to ping data) representing computing clusters that are superimposed onto a geographical image of campus. The use of color also allows PingTV to visually convey confidence intervals using color shading such that individual data values fall within predetermined shade ranges such that users do not need to be exposed to instantaneous data fluctuations. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Network Monitoring System</head><p>The Network Monitoring System (NMS) is implemented as a server program that contacts specific network hosts (edge and workgroup switches) at specified time intervals (see <ref type="figure">Figure 4)</ref>. A pinging application is used to determine host status and network workload. Collected information is analyzed and summarized into a network status table. The status table is converted into an image file and sent to the broadcasting server where it is captured and sent over the TV channel.</p><p>NMS is designed to monitor networks of hierarchical structure by pinging hosts in hierarchical order. Devices at the top level (nodes closest to the tree root) are pinged first, then their status determined. If the top-level host is down, neither of the children are pinged. If the upper-level devices are up, children are pinged at lower levels. This algorithm is repeated recursively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 4: Network Management System Framework</head><p>An image file is generated after each complete cycle of pings. Even though the system is developed for hierarchical structure, it is configurable to serve networks of different topologies, and hence can be used as a general-purpose network-monitoring tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 5: Hierarchical Pinging Structure</head><p>Along with the image, NMS generates a timestamped log file that contains unmodified ping echoes for each pinged host. This log file is created once a day with data of each subsequent run appended to the end of the log file. This log file has proved useful for data mining purposes such as reconstructing network events, tracking pathological and/or systemic network traffic.</p><p>A GUI allows the system operator to specify the exact hosts to monitor by their IP addresses or fully-qualified domain name (see <ref type="figure">Figure 6</ref>). New nodes will be added at the top-level (child-of-theroot). An "add" button allows the user to add children to a specific node. The result is a hierarchical tree structure that can be dynamically edited and saved as a unit while PingTV is operational. By default the tree is two levels deep but this can be changed by adjusting the value in "levels" field. <ref type="figure" target="#fig_1">Figure 7</ref> is the ping configuration GUI allowing a user to specify the monitoring interval between ping cycles (default 5 minutes), number of ping echo requests per node (default 1 echo), and cut-off roundtrip time (used to indicate congestion using yellow symbols, default 500ms). There are, however, some caveats to PingTV as a measurement tool: (1) ping may be filtered by firewalls since ICMP can be used for malicious purposes; (2) ping measures roundtrip delay not unidirectional delay; and (3) periodic sampling as opposed to random sampling for statistical observation. <ref type="bibr" target="#b0">[1]</ref> A fourth problem we discovered was the variability of the individual ping round-trip data points. PingTV was originally programmed to map round-trip times directly to colored icons using predetermined threshold values, however, we learned that this leads to flickering between contrasting colored symbols (up-green/down-red/slow-yellow) even in stable situations due to the natural variability of the data measurement across a network. We addressed this problem by processing data into running averages with corresponding shading so that individual data points would not cause a flicker.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 6: Host Configuration GUI</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PRACTICAL EXPERIENCE</head><p>The initial implementation of PingTV was developed for the ISU Office of Residential Life where it collects network status from the segments of Residence Hall Network (ResNet) and delivers this information into a dedicated campus cable television channel. Outages create a large workload as users report (often quite upset) that they are experiencing problems. The traditional way of reporting network status on a website was unacceptable since when the network went down, users were not able to access the web server. The goals of the project were achieved based on the following: 1) Users are made aware of current network conditions with information about the entire campus and their segment in particular. This relieves user confusion and frustration.</p><p>2) PingTV is a stable monitoring system capable of accurately communicating system information independent of network faults. PingTV is written in Java so it is also platform independent.</p><p>3) PingTV is a user-friendly system, which broadcasts intuitive images over campus television with easily recognizable symbols.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4)</head><p>PingTV is implemented in a graphical console, which allows operators to adaptively review and change parameters.</p><p>ResNet consists of several thousand active users in dynamic configurations. The ResNet base topology consists of a tree structure with a single-point-of-entry; 10 edge switches, and up to 20 workgroup switches per edge switch. Instead of reporting status of a particular switch, the network status table is mapped to buildings and floors and presented in a symbolic format so an ordinary user without a technical background can comprehend the information. Implementation of PingTV guarantees access to ResNet status information as a whole and by segment on 24x7 basis.</p><p>One specific lesson lead to the modification of PingTV for testing. A PingTV test pings all nodes in the tree and changes a tree "node" to a "host" by finding missing information (IP# or fully-qualified domain name). Testing without generating an image or log file was found useful to verify tree topologies and obtain host information on a routine basis as ResNet is frequently reconfigured.</p><p>We have not yet attempted to use PingTV between local networks or across the Internet and seek interested parties who have both a peer network and access to their corresponding geographical dataset. Of course, as in any proactive monitoring, PingTV adds traffic to the operational network links and hosts under study which makes use across the Internet problematic without coordination in advance (transit networks, timing of periodic test cycles, ping payload, time synchronization).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">SUMMARY</head><p>PingTV provides a case study of visually monitoring a network using colored symbols upon a geographical image based on geospatial data sets. The unique contribution of this project is the development of direct real-time television visualization.</p><p>Continuing development of PingTV includes the simultaneous generation of HTML output with television output; web accessible "remote control" accomplished with servlet technology; and "network weather" or "traffic temperature" forecasts based on past ping data benchmarks and trends. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>Network Device Status Symbols</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 7 :</head><label>7</label><figDesc>Ping Configuration GUI2.2 Ping Data for VisualizationPing is one of the most widely available tools bundled with TCP/IP. The Ping command, also called the Packet INternet Groper, uses a series of Internet Control Message Protocol (ICMP) echo messages to determine if a remote host is active or inactive and to determine the round-trip delay. Ping is desirable as a network performance tool since it is simple, light-weight, efficient, and does not require privileged access.<ref type="bibr" target="#b0">[1]</ref> Ping has five network metrics it can quantify: (1) round-trip time; (2) reachability; (3) packet loss; (4) quiescence (target host load); and (5) unpredictability (variability of packet loss and round trip time).<ref type="bibr" target="#b1">[2]</ref> Several other network monitoring research programs also use ping but do not use television: PingER (U.S. Department of Energy); and Active Measurement Program (National Laboratory for Applied Network Research, NLANR, an NSF-funded supercomputer activity).<ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4]</ref> </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>PingTV Screenshot Showing a Single Subnet with Status of Devices With Corresponding Domain Names PingTV Screenshot Showing Two Subnets Figure 10: PingTV Screenshot of Previous Figure After Dynamically Adding a New Node</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">ACKNOWLEDGMENTS</head><p>We would like to first acknowledge the help of Dean Plumadore of ResNet/Illinois State University who is the operational manager using PingTV. Dean posed this idea as a potential research project and we hope to work with him in the future to gather benefit quantification. We would also like to thank Martin B.H. Weiss/University of Pittsburgh who forwarded Doug Burke's M.S. thesis to us so we could learn about "ping" idiosyncrasies when used as a network management tool. Lastly, we would like to thank the five anonymous reviewers whose insightful comments have greatly improved this paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">An Empirical Analysis of ping as an Internetwork Performance Tool</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">W</forename><surname>Burke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-05-01" />
		</imprint>
		<respStmt>
			<orgName>Department of Information Science and Telecommunications, University of Pittsburgh</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">M.S. Thesis</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The PingER Project: Active Internet Performance Monitoring for the HENP Community</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Matthews</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cottrell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="page" from="130" to="136" />
			<date type="published" when="2000-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">How to Create a Network Map</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Midden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Connexions: the Interoperability Report</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="18" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">End-to-End Internet Performance Assessments</title>
		<ptr target="&lt;http://nlanr.net/Viz/End2end/&gt;" />
		<imprint/>
		<respStmt>
			<orgName>National Laboratory for Applied Network Reseach</orgName>
		</respStmt>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
