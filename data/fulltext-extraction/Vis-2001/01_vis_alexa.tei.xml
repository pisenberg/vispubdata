<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Point Set Surfaces</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Alexa</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Tel Aviv University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">U</forename><surname>Darmstadt</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Tel Aviv University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Johannes</forename><surname>Behr</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Tel Aviv University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Cohen-Or</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Tel Aviv University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shachar</forename><surname>Fleishman</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">Tel Aviv University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Levin</surname></persName>
							<affiliation key="aff3">
								<orgName type="laboratory">AT&amp;T Labs</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
							<affiliation key="aff4">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Point Set Surfaces</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation-Display algorithms</term>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Curve, surface, solid, and object representations</term>
					<term>surface representation and reconstruction, moving least squares, point sample rendering, 3D acquisition</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We advocate the use of point sets to represent shapes. We provide a definition of a smooth manifold surface from a set of points close to the original surface. The definition is based on local maps from differential geometry, which are approximated by the method of moving least squares (MLS). We present tools to increase or decrease the density of the points, thus, allowing an adjustment of the spacing among the points to control the fidelity of the representation. To display the point set surface, we introduce a novel point rendering technique. The idea is to evaluate the local maps according to the image resolution. This results in high quality shading effects and smooth silhouettes at interactive frame rates.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Point sets are receiving a growing amount of attention as a representation of models in computer graphics. One reason for this is the emergence of affordable and accurate scanning devices generating a dense point set, which is an initial representation of the physical model <ref type="bibr" target="#b27">[28]</ref>. Another reason is that highly detailed surfaces require a large number of small primitives, which contribute to less than a pixel when displayed, so that points become an effective display primitive <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b35">36]</ref>.</p><p>A point-based representation should be as small as possible while conveying the shape, in the sense that the point set is neither noisy nor redundant. It is important to have tools which adequately adjust the density of points so that a smooth surface can be well-reconstructed. <ref type="figure" target="#fig_0">Figure 1</ref> shows a point set with varying density. Amenta et al <ref type="bibr" target="#b0">[1]</ref> have investigated the problem from a topological point of view, that is, the number of points needed to guarantee a topologically equivalent reconstruction of a smooth surface. Our approach is motivated by differential geometry and aims at minimizing the geometric error of the approximation. This is done by locally approximating the surface with polynomials using moving least squares (MLS). We understand the generation of points on the surface of a shape as a sampling process. The number of points is adjusted by either up-sampling or down-sampling the representation. Given a data set of points P = {pi} (possibly acquired by a 3D scanning device), we define a smooth surface SP (MLS surface) based on the input points (the definition of the surface is given in Section 3). We suggest replacing the points P defining SP with a reduced set R = {ri} defining an MLS surface SR which approximates SP . This general paradigm is illustrated in 2D in <ref type="figure" target="#fig_1">Figure 2</ref>: Points P , depicted in purple, define a curve SP (also in purple). SP is resampled with points ri ∈ SP (red points). This typically lighter point set called the representation points now defines the red curve SR which approximates SP .</p><p>The technique that defines and resamples SP provides the fol- This manifold is sampled with (red) representation points. The representation points define a different manifold (red curve). The spacing of representation points depends on the desired accuracy of the approximation.</p><p>lowing important property:</p><p>Smooth manifold surface: The surface defined by the point set is guaranteed to be a 2-manifold and C ∞ smooth, given that the points are sufficiently close to the surface being represented.</p><p>In the context of surface consolidation (see Section 2), our approach has two important features:</p><p>Noise reduction: Filtering imperfect data and generating a thin point set, in the sense that the points do not deviate from the surface being represented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Redundancy reduction:</head><p>The point set is down-sampled by removing redundant information introduced by oversampling the surface.</p><p>Finally, we present a rendering method that approximates SR from the local polynomial approximations offering:</p><p>High quality: Since SR is a smooth surface, proper resampling leads to smooth silhouettes and normals resulting in superior rendering quality at interactive frame rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Single step procedure:</head><p>Resampling respects screen space resolution and guarantees sufficient sampling, i.e. no holes have to be filled in a postprocessing step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related work Consolidation</head><p>Recent technological and algorithmic advances have improved the process of automatic acquisition of 3D models. Acquiring the geometry of an object starts with data acquisition, usually performed with a range scanner. This raw data contains errors (e.g., line-ofsight error <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b36">37]</ref>) mainly due to noise intrinsic to the sensor used and its interaction with the real-world object being acquired. For a non-trivial object, it is necessary to perform multiple scans, each in its own coordinate system, and to register the scans <ref type="bibr" target="#b4">[5]</ref>. In general, areas of the objects are likely to be covered by several samples from scans performed from different positions. One can think of the output of the registration as a thick point set. A common approach is to generate a triangulated surface model over the thick point set. There are several efficient triangulation techniques, such as <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b11">12]</ref>. One of the shortcomings of this approach is that the triangulated model is likely to be rough, containing bumps and other kinds of undesirable features, such as holes and tunnels, and be non-manifold. Further processing of the triangulated models, such as smoothing <ref type="bibr" target="#b40">[41,</ref><ref type="bibr" target="#b10">11]</ref> or manifold conversion <ref type="bibr" target="#b14">[15]</ref>, becomes necessary. The prominent difficulty is that the point set might not actually interpolate a smooth surface. We call consolidation the process of "massaging" the point set into a surface. Some techniques, such as Hoppe et al <ref type="bibr" target="#b17">[18]</ref>, Curless and Levoy <ref type="bibr" target="#b8">[9]</ref>, and Wheeler et al <ref type="bibr" target="#b44">[45]</ref> consolidate their sampled data by using an implicit representation based on a distance function defined on a volumetric grid. In <ref type="bibr" target="#b17">[18]</ref>, the distances are taken as the signed distance to a locally defined tangent plan. This technique needs further processing <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b16">17]</ref> to generate a smooth surface. Curless and Levoy <ref type="bibr" target="#b8">[9]</ref> use the structure of the range scans and essentially scan convert each range surface into the volume, properly weighting the multiply scanned areas. Their technique is robust to noise and is able to take relative confidence of the samples into account. The work of Wheeler et al <ref type="bibr" target="#b44">[45]</ref> computes the signed distance to a consensus surface defined by weighted averaging of the different scans. One of the nice properties of the volumetric approach is that it is possible to prove under certain conditions that the output is a least-square fit of the input points (see <ref type="bibr" target="#b8">[9]</ref>).</p><p>The volumetric sign-distance techniques described above are related to a new field in computer graphics called Volume Graphics pioneered by Kaufman and colleagues <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b43">44,</ref><ref type="bibr" target="#b39">40]</ref> which aims to accurately define how to deal with volumetric data directly, and answer questions related to the proper way to convert between surface and volume representations.</p><p>It is also possible to consolidate the point set by performing weighted averaging directly on the data points. In <ref type="bibr" target="#b42">[43]</ref>, model triangulation is performed first, then averaging is performed in areas which overlap. In <ref type="bibr" target="#b38">[39]</ref>, the data points are first averaged, weighted by a confidence in each measurement, and then triangulated.</p><p>Another approach to define surfaces from the data points is to perform some type of surface fitting <ref type="bibr" target="#b12">[13]</ref>, such as fitting a polynomial <ref type="bibr" target="#b24">[25]</ref> or an algebraic surface <ref type="bibr" target="#b33">[34]</ref> to the data. In general, it is necessary to know the intrinsic topology of the data and (sometimes) have a parametrization before surface fitting can be applied. Since this is a non trivial task, Krishnamurthy and Levoy <ref type="bibr" target="#b21">[22]</ref> have proposed a semi-automatic technique for fitting smooth surfaces to dense polygon meshes created by Curless and Levoy <ref type="bibr" target="#b8">[9]</ref>. Another form of surface fitting algorithms couples some form of high-level model recognition with a fitting process <ref type="bibr" target="#b34">[35]</ref>.</p><p>The process of sampling (or resampling) surfaces has been studied in different settings. For instance, surface simplification algorithms <ref type="bibr" target="#b6">[7]</ref> sample surfaces in different ways to optimize rendering performance. Related to our work are algorithms which use particle systems for sampling surfaces. Turk <ref type="bibr" target="#b41">[42]</ref> proposes a technique for computing level of details of triangular surfaces by first randomly spreading points on a triangular surface, then optimizing their positions by letting each point repel their neighbors. He uses an approximation of surface curvature to weight the number of points which should be placed in a given area of the surface. A related approach is to use physically-based particle systems to sample an implicit surface <ref type="bibr" target="#b45">[46,</ref><ref type="bibr" target="#b9">10]</ref>. Crossno and Angel <ref type="bibr" target="#b7">[8]</ref> describe a system for sampling isosurfaces, where they use the curvature to automatically modulate the repulsive forces.</p><p>Lee <ref type="bibr" target="#b23">[24]</ref> uses a moving-least squares approach to the reconstruction of curves from unorganized and noisy points. He proposes a solution for reconstructing two and three-dimensional curves by thinning the point sets. Although his approach resembles the one used here (and based on theory developed in <ref type="bibr" target="#b26">[27]</ref>), his projection procedure is different, and requires several iterations to converge to a clean point set (i.e., it is not actually a projection, but more of a converging smoothing step).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Point sample rendering</head><p>Following the pioneering work of Levoy and Whitted <ref type="bibr" target="#b28">[29]</ref>, several researchers have recently proposed using "points" as the basic rendering primitive, instead of traditional rendering primitives, such as triangulated models. One of the main reasons for this trend is that in complex models the triangle size is decreasing to pixel resolution. This is particularly true for real-world objects acquired as "textured" point clouds <ref type="bibr" target="#b30">[31]</ref>.</p><p>Grossman and Dally <ref type="bibr" target="#b13">[14]</ref> presented techniques for converting geometric models into point-sampled data sets, and algorithms for efficiently rendering the point sets. Their technique addresses several fundamental issues, including the sampling rate of conversion from triangles to points, and several rendering issues, including handling "gaps" in the rendered images and efficient visibility data structures. The Surfels technique of Pfister et al <ref type="bibr" target="#b32">[33]</ref> builds and improves on this earlier work. They present alternative techniques for the sampling of the triangle mesh, including visibility testing, texture filtering, and shading.</p><p>Rusinkiewicz and Levoy <ref type="bibr" target="#b35">[36]</ref> introduce a technique which uses a hierarchy of spheres of different radii to model a high-resolution model. Their technique uses small spheres to model the vertices at the highest resolution, and a set of bounding spheres to model intermediate levels. Together with each spherical sample, they also save other associated data, such as normals. Their system is capable of time-critical rendering, as it adapts the depth of tree traversal to the available time for rendering a given frame.</p><p>All the above techniques account for local illumination. Schaufler and Jensen <ref type="bibr" target="#b37">[38]</ref> propose to compute global illumination effects directly on point-sampled geometry by a ray tracing technique. The actual intersection point is computed, based on a local approximation of the surface, assuming a uniform sampling of the surface.</p><p>Point-based rendering suffers from the limited resolution of the fixed number of sample points representing the model. At some distance, the screen space resolution is high relative to the point samples, which causes undersampling. Tackling this problem by interpolating the surface points in image space is limited. A better approach is to resample the surface during rendering at the desired resolution in object-space, guaranteeing that sampling density is sufficient with respect to the image space resolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Defining the surface -projecting</head><p>Our approach relies on the idea that the given point set implicitly defines a surface. We build upon recent work by Levin <ref type="bibr" target="#b26">[27]</ref>. The main idea is the definition of a projection procedure, which projects any point near the point set onto the surface. Then, the MLS surface is defined as the points projecting onto themselves. In the following, we explain Levin's projection procedure <ref type="bibr" target="#b26">[27]</ref> and, then, how to efficiently compute it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The projection procedure</head><p>Let points pi ∈ IR 3 , i ∈ {1, . . . , N }, be sampled from a surface S (possibly with a measurement noise). The goal is to project a point r ∈ IR 3 near S onto a two-dimensional surface SP that approximates the pi. The following procedure is motivated by differential geometry, namely that the surface can be locally approximated by a function.  <ref type="figure">Figure 3</ref>: The MLS projection procedure: First, a local reference domain H for the purple point r is generated. The projection of r onto H defines its origin q (the red point). Then, a local polynomial approximation g to the heights fi of points pi over H is computed. In both cases, the weight for each of the pi is a function of the distance to q (the red point). The projection of r onto g (the blue point) is the result of the MLS projection procedure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Reference domain: Find a local reference domain (plane)</head><p>for r (see <ref type="figure">Figure 3</ref>). The local plane H = {x| n, x − D = 0, x ∈ IR 3 }, n ∈ IR 3 , n = 1 is computed so as to minimize a local weighted sum of square distances of the points pi to the plane. The weights attached to pi are defined as the function of the distance of pi to the projection of r on the plane H, rather than the distance to r. Assume q is the projection of r onto H, then H is found by minimizing</p><formula xml:id="formula_0">N i=1 ( n, pi − D) 2 θ ( pi − q )<label>(1)</label></formula><p>where θ is a smooth, radial, monotone decreasing function, which is positive on the whole space. Since θ decreases as the distance of the points increases, the plane approximates the tangent plane to S near the point r. The local reference domain is then given by an orthonormal coordinate system on H so that q is the origin of this system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Local map:</head><p>The reference domain for r is used to compute a local bivariate polynomial approximation to the surface in a neighborhood of r (see <ref type="figure">Figure 3</ref>). Let qi be the projection of pi onto H, and fi the height of pi over H, i.e fi = n•(pi −q).</p><p>Compute the coefficients of a polynomial approximation g so that the weighted least squares error</p><formula xml:id="formula_1">N i=1 (g(xi, yi) − fi) 2 θ ( pi − q )<label>(2)</label></formula><p>is minimized. Here (xi, yi) is the representation of qi in a local coordinate system in H. Note that, again, the distances used for the weight function are from the projection of r onto H. The projection of r onto SP is defined by the polynomial value at the origin, i.e. q + g(0, 0)n.</p><p>Levin proves that the surface defined as the points that project onto themselves is a two-dimensional manifold <ref type="bibr" target="#b26">[27]</ref>. Further, a general analysis of moving least squares <ref type="bibr" target="#b25">[26]</ref> leads to the conjecture that the resulting surface is infinitely smooth as long as θ ∈ C ∞ (provided that θ has the above-mentioned properties). The approximation of single points is mainly dictated by the radial weight function θ. The weight function suggested in <ref type="bibr" target="#b26">[27]</ref> is a where h is a fixed parameter reflecting the anticipated spacing between neighboring points. By changing h the surface can be tuned to smooth out features of size &lt; h in S. More specifically, a small value for h causes the Gaussian to decay faster and the approximation is more local. Conversely, large values for h result in a more global approximation, smoothing out sharp or oscillatory features of the surface. <ref type="figure" target="#fig_3">Figure 4</ref> illustrates the effect of different h values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Computing the planes and polynomials</head><p>We explain how to efficiently compute the projection and what values should be chosen for the polynomial degree and h. Furthermore, we discuss trade-offs between accuracy and speed.</p><p>Step 1 of the projection procedure is a non-linear optimization problem. By setting q = r + tn for some t ∈ IR, (1) can be rewritten as:</p><formula xml:id="formula_2">N i=1 n, pi − r − tn 2 θ ( pi − r − tn )<label>(4)</label></formula><p>Usually, the function will have more than one local minimum. Intuitively, the plane should be close to r, which means t should be small. Thus, we want to choose the local minimum with smallest t. For minimizing (4), we have to use some iterative scheme, which descends towards the next local minimum. Currently, a standard iterative solver is employed, together with a good heuristic choice of the initial values {n, t}, which ensure that the minimization converges to a local minimum with small t. We find this initial value by setting t = 0 and solving <ref type="bibr" target="#b3">(4)</ref>:</p><formula xml:id="formula_3">N i=1 n, pi − r 2 θi, θi = θ ( pi − r )<label>(5)</label></formula><p>This is a quadratic function in n and can be solved by setting its gradient</p><formula xml:id="formula_4">N i=1 2θi n, pi − r (pi − r)<label>(6)</label></formula><p>to zero.</p><p>The resulting initial value is refined using Powell iteration. Note that the global minimum of (4) is approached for t = ∞. To avoid this solution, (4) is normalized with the sum of weights θ.</p><p>The second step of the projection procedure is solved in the same way as the initial value problem for the first step: Once the plane H is computed, the weights θ( pi−q ) are known. The gradient of (2) over the unknown coefficients of the polynomial leads to a system of linear equations of size equal to the number of coefficients, e.g. 10 for a third degree polynomial.</p><p>Through experimentation, we found that high degree polynomials are likely to oscillate. Polynomials of degree 3 to 4 have proven to be very useful as they produce good fits of the neighborhood, do not oscillate, and are quickly computed.</p><p>The most time-consuming step in computing the projection of a point r is collecting the coefficients from each of the pi. Implemented naively, this process takes O(N ) time, where N is the number of points. We compute these terms using a hierarchical method inspired by solutions to the N-body problem <ref type="bibr" target="#b2">[3]</ref>. The basic observation is, that a cluster of points far from r can be combined into one point. To exploit this idea, an Octree is filled with the pi. Leaf nodes contain the pi; inner nodes contain information about the number of points in the subtree and their centroid. Then, terms are collected from the nodes of the Octree. If the node's dimension is much smaller than its distance to r, the centroid is used for computing the coefficients; otherwise the subtree is traversed. In addition, we neglect nodes, for which the distance to r is larger than a predefined constant.</p><p>A simple way to trade accuracy for speed is to assume that the plane H passes through the point to be projected. This assumption is reasonable for input points, which are expected to be close to the surface they define (e.g. input that has been smoothed). This simplification saves the cost of the iterative minimization scheme.</p><p>Actual timings for the projection procedure depend heavily on the feature size h. On a standard Pentium PC the points of the bunny were projected at a rate of 1500-3500 points per second. Smaller values for h lead to faster projection since the neighborhoods and, thus, the number of points taken into account are smaller. The code has not been optimized to be memory efficient and no storage analysis had been performed as the available main memroy of 512MB was sufficient in all tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Generating the representation point set</head><p>A given point set might have erroneous point locations (i.e. is noisy), may contain too many points (i.e. is redundant) or not enough points (i.e. is undersampled). The problem of noise is handled by projecting the points onto the MLS surface they define. The result of the projection procedure is a thin point set. Redundancy is avoided by decimating the point set, taking care that it persists to be a good approximation of the MLS surface defined by the original point set. In the case of undersampling, the input point set needs to be up-sampled. In the following sections, we show techniques to remove and add points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Down-sampling</head><p>Given a point set, the decimation process repeatedly removes the point that contributes the smallest amount of information to the shape. The contribution of a point to the shape or the error of the sampling is dictated by the definition of the shape. If the point set is reconstructed by means of a triangulation, criteria from the specific triangulation algorithm should control the resampling. Criteria include the distance of points on the surface <ref type="bibr" target="#b17">[18]</ref>, curvature <ref type="bibr" target="#b11">[12]</ref>, or distance from the medial axis of the shape <ref type="bibr" target="#b0">[1]</ref>. For a direct display of the point set on a screen homogeneous distribution of the points over the surface is required <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b32">33]</ref>. Here, we derive a criterion motivated by our definition of the surface. The contribution of a projected point pi to the surface SP can be estimated by comparing SP with S P −{p i } . Computing the Hausdorff distance between both surfaces is expensive and not suitable for an iterative removal of points of a large point set. Instead, we approximate the contribution of pi by its distance from its projection onto the surface S P −{p i } . Thus, we estimate the difference of SP and S P −{p i } by projecting pi onto S P −{p i } (projecting pi under the assumption it was not part of P ).</p><p>The contribution values of all points are inserted into a priority queue. At each step of the decimation process, the point with the smallest error is removed from the point set and from the priority queue. After the removal of a point, the error values of nearby points have to be recalculated since they might have been affected by the removal. This process is repeated until the desired number of points is reached or the contributions of all points exceed some prespecified bound. <ref type="figure">Figure 6</ref> illustrates our decimation process applied on the set of red points depicted in (a). First, the red points are projected on the MLS surface to yield the blue points. A close-up view over a part of the points shows the relation between the input (red) points and the projected points. In (b), we show three snapshots of the decimation process, where points are colored according to their error value; blue represents low error and red represents high error. Note that in the sparsest set, all of the points have a high error, that is, their <ref type="figure">Figure 7</ref>: The up-sampling process: Points are added at vertices of the Voronoi diagram. In each step, the vertex with the largest empty circle is chosen. The process is repeated until the radius of the largest circle is smaller than a specified bound. The wavy torus originally consisting of 800 points has been up-sampled to 20K points. removal will cause a large error. As the decimation proceeds, fewer points remain and their importance grows and the error associated with them is larger. <ref type="figure">Figure 5</ref> shows the decimation process in 3D with corresponding renderings of the point sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Up-sampling</head><p>In some cases, the density of the point set might not be sufficient for the intended usage (e.g. direct point rendering or piecewise reconstructions). To alleviate this problem, we try to decrease the spacing among points. Additional points should be placed (and then projected to the MLS surface) where the spacing among points is larger then a specified bound.</p><p>The basic idea of our approach is to compute Voronoi diagrams on the MLS surface and add points at vertices of this diagram. Note that the vertices of the Voronoi diagram are exactly those points on the surface with maximum distance to several of the existing points. This idea is related to Lloyd's method <ref type="bibr" target="#b29">[30]</ref>, i.e techniques using Voronoi diagrams to achieve a certain distribution of points <ref type="bibr" target="#b31">[32]</ref>.</p><p>However, computing the Voronoi diagram on the MLS surface is excessive and local approximations are used instead. More specifically, our technique works as follows: In each step, one of the existing points is selected randomly. A local linear approximation is built and nearby points are projected onto this plane. The Voronoi diagram of these points is computed. Each Voronoi vertex is the center of a circle that touches three or more of the points without including any point. The circle with largest radius is chosen and its center is projected to the MLS surface. The process is repeated iteratively until the radius of the largest circle is less than a userspecified threshold. (see <ref type="figure">Figure 7)</ref>. At the end of the process, the density of points is locally near-uniform on the surface. <ref type="figure">Figure 7</ref> shows the original sparse point set containing 800 points, and the same object after adding 20K points over its MLS surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Rendering</head><p>The challenge of our interactive point rendering approach is to use the representation points and (when necessary) create new points by sampling the implicitly defined surface at a resolution sufficient to conform to the screen space resolution.</p><p>Usually, the representation points are not sufficient to render the object in screen space. In some regions, it is not necessary to render all points as they are occluded, backfacing, or have higher density than needed. However, typically, points are not dense enough to be projected directly as a single pixel and more points need to be generated by interpolation in object space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Culling and view dependency</head><p>The structure of our rendering system is similar in spirit to QSplat <ref type="bibr" target="#b35">[36]</ref>. The input points are arranged into a bounding sphere hierarchy. For each node, we store a position, a radius, a normal coverage, and optionally a color. The leaf nodes additionally store the orientation of the support plane and the coefficients of the associated polynomial. The hierarchy is used to cull the nodes with the view frustum and to apply a hierarchical backface culling <ref type="bibr" target="#b22">[23]</ref>. Note that culling is important for our approach since the cost of rendering the leaf nodes (evaluating the polynomials) is relatively high compared to simpler primitives. Moreover, if the traversal reaches a node with an extent that projects to a size of less than a pixel, this node is simply projected to the frame-buffer without traversing its subtree. When the traversal reaches a leaf node and the extent of its bounding sphere projects to more than one pixel in screen space, additional points have to be generated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sampling additional points</head><p>The basic idea is to generate a grid of points sufficient to cover the extent of a leaf node. However, projecting the grid points using the method described in Section 3 is not fast enough; thus, we sample the polynomials associated with the representation points. Note that the gradient of the polynomials also yields pointwise normals. Yet, this requires the point set and the associated polynomials to be near-uniform on the surface and it might be necessary to first process a given point set with the up-sampling methods presented in Section 4. This way, we ensure that the local, non-conforming (i.e. overlapping or intersecting) polynomials are a good approximation to the surface inside a patch [−h, h] 2 around a point and, thus, the resulting image shows a smooth surface. However, most dense point sets can be readily displayed with the approach. presented here. For example, <ref type="figure" target="#fig_5">Figure 9</ref> shows several renderings of the original Stanford Bunny data.</p><p>It is critical to properly define the extent of a polynomial patch on the supporting plane, such that neighboring patches are guaranteed h <ref type="figure">Figure 8</ref>: The patch size of a polynomial: Points inside a ball of radius h around the red point are projected onto the support plane of the red point. The patch size is defined as the bounding box (in local coordinates) of the projections. Note that using a disk of radius h or a square patch of [−h, h] 2 would lead to unpleasant effects in some cases, as the polynomial might leave the ball of radius h.</p><p>to overlap (to avoid holes) but do not overlap more than necessary. Since no inter-point connectivity information is available, it is unclear which points are immediate neighbors of a given point on the surface. To compute the extent of a polynomial patch on the support plane all points inside a ball of radius h are collected. These points are projected to the support plane. The extent is defined as the bounding rectangle of these projections aligned to the local coordinate system of the support plane. Since the spacing of points is expected to be less than h, patches of neighboring points are guaranteed to overlap. Note that using a constant extent (e.g. a disk of radius h on the support plane) can lead to errors, as the polynomial might leave the ball of radius h, in which a good approximation of the point set is expected. <ref type="figure">Figure 8</ref> illustrates the computation of the patch sizes.</p><p>The grid spacing d is computed so that a grid perpendicular to the viewing direction is sufficiently sampled in image space. If the grid is, indeed, perpendicular to the viewing direction, the sampling is also correct on the polynomial. If the grid is not perpendicular to the viewing direction, the projected area might be oversampled. However, note that a polynomial over that grid might not be parallel to the viewing direction. More precisely, if the derivative of the polynomial is less than one, sufficient sampling is guaranteed for all orientations of the support plane. If the derivative is higher, the sampling density needs to be adjusted.</p><p>Upon the view-dependent grid spacing d, the polynomials are evaluated by a forward difference approach, where the polynomial is scanned across its extent in its local u, v parametric space. The affine map transforming from support plane coordinates to world coordinates is factored into polynomial evaluation, thus, generating points in world coordinates. These points are then fed into the graphics pipeline to be projected to the screen.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Grid pyramids</head><p>The time-critical factor is the view-dependent evaluation of the points on the polynomial. Optimally, these are recomputed whenever the projected screen space size changes. To accelerate the rendering process, we store a grid pyramid with various resolutions per point. Initially, the pyramid levels are created, but no grid is actually evaluated. When a specific grid resolution is needed, the system creates and stores the level that slightly oversamples the polynomial for a specific resolution, such that small changes in the viewing position do not result in new evaluations.</p><p>To enhance the interactivity of our approach, we also allow the point size to adapt to changing viewing conditions. while rotating or zooming, sparser grids with large points are used to guarantee an interactive frame rate. Once the viewer stops moving, a proper grid is chosen from the pyramid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results</head><p>We have tested our approach on a variety of point sets. <ref type="figure" target="#fig_5">Figure 9</ref> shows the renderings of the Stanford Bunny. In (a), the original point set is shown. Splatting (b) is not leading to good results, because the model is not sampled densely enough. The traditional Gouraud-shaded mesh in (c) and (g) is compared to our approach in (d) and (h). Note the accuracy of the highlights. The nonconforming local polynomial patches are shown color-coded in (e) and (f). An example of a environment mapping to demonstrate the normal continuity is given in <ref type="figure" target="#fig_0">Figure 10</ref>. Note that silhouettes and normals are smooth, which leads to less distortions on the boundary and in the reflections. The frame rates we achieve are mainly dictated by the number of visible representation points (i.e. graph traversal time) and the number of pixels to be filled. All models depicted in the paper are displayed at more than 5 frames per second in a 512 2 screen window (see the accompanying video for more information). The number of representation points ranges from 1000 (for the torus) to 900K (for the angel statue). Tests are performed on a PC with GeForce2 graphics board.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion</head><p>In differential geometry, a smooth surface is characterized by the existence of smooth local maps at any point. In this work we use this as a framework to approximate a smooth surface defined by a set of points and we introduced new techniques to resample the surface to generate an adequate representation of the surface.</p><p>To render such surfaces, the surface is covered by a finite number, as small as possible, of non-conforming, overlapping, polynomial patches. We showed that the error of these approximations is bounded and dependent on the spacing among points. Thus, it is possible to provide a point set representation that conforms with a specified tolerance.</p><p>Our paradigm for representing surfaces advocates the use of a point set (without connectivity) as a representation of shapes. This representation is universal in the sense that it is used from the beginning (i.e. acquisition) to the end (i.e. rendering) of a graphical representation's life cycle. Moreover, we believe that this work is a step towards rendering with higher order polynomials. Note that we have used simple primitives (points) to achieve this goal. This admits to the current trend of integrating high quality rendering features into graphics hardware.</p><p>It would be interesting to integrate our approach with combinatorial methods such as the one of Amenta et al <ref type="bibr" target="#b0">[1]</ref>. This would combine topological guarantees with the additional precision of higher order approximations and the possibility of smoothing out noise or small features.</p><p>Using different values for h, it is easy to generate more smooth or more detailed versions of a surface from one point set (see, for example, <ref type="figure" target="#fig_3">Figure 4)</ref>. A set of different versions could be used as a smooth-to-detailed hierarchy and would allow for multiresolution modeling <ref type="bibr" target="#b20">[21]</ref>. Of course, h is not necessarily a global parameter and could be adapted to the local feature size. Varying h has several implications and utility in handling point sets (see <ref type="bibr" target="#b23">[24]</ref> for a nice introduction to the issues in two dimensions), such as properly accounting for differences in sampling rate and levels of noise during the acquisition process. Also, non radial functions might be necessary to properly account for sharp features in the models. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>A point set representing a statue of an angel. The density of points and, thus, the accuracy of the shape representation are changing (intentionally) along the vertical direction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>An illustration of the paradigm: The possibly noisy or redundant point set (purple points) defines a manifold (purple curve).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>The effect of different values for parameter h. A point set representing an Aphrodite statue defines an MLS surface. The left side shows an MLS surface resulting from a small value and reveals a surface structure resulting from the wood carving. The right side shows a larger value for h, smoothing out small features or noise. Gaussian θ(d) = e</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :Figure 6 :</head><label>56</label><figDesc>The point set representing an Aphrodite statue is projected onto a smooth MLS-surface. After removing redundant points, a set of 37K points represents the statue (a). The corresponding rendering is shown in (b). The point set is decimated using point removal. An intermediate stage of the reduction process is shown in (c). Note that the points are color-coded with respect to their importance. Blue points do not contribute much to the shape and might be removed; red points are important for the definition of the shape. The final point set in (e) contains 20K points. The corresponding rendering is depicted in (d) and is visually close to the one in (b). Noisy input points (green points) are projected onto their smooth MLS curve (orange points). The figures in (a) show the point sets and a close-up view. The decimation process is shown in (b). Points are color-coded as inFigure 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>For example, The Stanford Bunny: The points defining the bunny are depicted in (a) (some points are culled). Points are splatted in (b) to satisfy screen space resolution. Note the difference of a piecewise linear mesh over the points (c) and close-up in (g) to the rendering of non-conforming polynomial patches (d) and (h). The patches are color-coded in (e) and (f).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 10 :</head><label>10</label><figDesc>Comparison of mesh rendering with our technique with environment mapping. The left column shows renderings of a mesh consisting of 1000 vertices. The right column shows our technique using the vertices as input points. The environment maps emphasize the improved normal and boundary continuity.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work was supported by a grant from the Israeli Ministry of Science, a grant from GIF (German Israeli Foundation) and a grant from the Israeli Academy of Sciences (center of excellence). The bunny model is courtesy of the Stanford Computer Graphics Laboratory. The angel statue was scanned by Peter Neugebauer using a structured light scanner and the QTSculptor system.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A new voronoi-based surface reconstruction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bern</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kamvysselis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 98</title>
		<meeting>SIGGRAPH 98</meeting>
		<imprint>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="415" to="422" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automatic reconstruction of surfaces and scalar fields from 3d scans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 95</title>
		<meeting>SIGGRAPH 95</meeting>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A hierarchical O(N log N) force calculation algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Barnes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hut</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">324</biblScope>
			<biblScope unit="page" from="446" to="449" />
			<date type="published" when="1986-12" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The ballpivoting algorithm for surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mittleman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Rushmeier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="349" to="359" />
			<date type="published" when="1999-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A method for registration of 3-d shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Besl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Mckay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transaltions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="239" to="256" />
			<date type="published" when="1992-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Geometric structues for three-dimensional shape representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-D</forename><surname>Boissonnat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="266" to="286" />
			<date type="published" when="1984-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A comparison of mesh simplification algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="54" />
			<date type="published" when="1998-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Isosurface extraction using particle systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Crossno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Angel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<imprint>
			<date type="published" when="1997-11" />
			<biblScope unit="page" from="495" to="498" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A volumetric method for building complex models from range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 96</title>
		<meeting>SIGGRAPH 96</meeting>
		<imprint>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="303" to="312" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Physically-based methods for polygonization of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">H</forename><surname>De Figueiredo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>De Miranda Gomes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Velho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface &apos;92</title>
		<imprint>
			<date type="published" when="1992-05" />
			<biblScope unit="page" from="250" to="257" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Implicit fairing of irregular meshes using diffusion and curvature flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 99</title>
		<meeting>SIGGRAPH 99</meeting>
		<imprint>
			<date type="published" when="1999-08" />
			<biblScope unit="page" from="317" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Surface reconstruction based on lower dimensional localized delaunay triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gopi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Krishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2000-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Surface fitting to scattered data by a sum of gaussians</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Goshtasby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">D</forename><surname>O'neill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="143" to="156" />
			<date type="published" when="1993-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Point sample rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Grossman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Rendering Workshop</title>
		<imprint>
			<date type="published" when="1998-06" />
			<biblScope unit="page" from="181" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Converting sets of polygons to manifold surfaces by cutting and stitching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Gueziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lazarus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Horn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;98</title>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="page" from="383" to="390" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Scene reconstruction and description: Geometric primitive extraction from multiple view scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laurendeau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Poussart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Computer Vision and Pattern Recognition</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="286" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Piecewise smooth surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Halstead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schweitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 94</title>
		<meeting>SIGGRAPH 94</meeting>
		<imprint>
			<date type="published" when="1994-07" />
			<biblScope unit="page" from="295" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Surface reconstruction from unorganized points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 92)</title>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="71" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Mesh optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 93</title>
		<meeting>SIGGRAPH 93</meeting>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Volume graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="51" to="64" />
			<date type="published" when="1993-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Multiresolution shape deformations for meshes with dynamic vertex connectivity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">P</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bareuther</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="249" to="259" />
			<date type="published" when="2000-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Fitting smooth surfaces to dense polygon meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Krishnamurthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 96</title>
		<meeting>SIGGRAPH 96</meeting>
		<imprint>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="313" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Hierarchical back-face computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Garrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Rendering Workshop</title>
		<editor>X. Pueyo and P. Schröder</editor>
		<meeting><address><addrLine>New York City, NY; Wien</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1996-06" />
			<biblScope unit="page" from="235" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Curve reconstruction from unorganized points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I.-K</forename><surname>Lee</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-02" />
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="161" to="177" />
		</imprint>
	</monogr>
	<note>Computer Aided Geometric Design</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">3L fitting of higher degree implicit polynomials</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">M</forename><surname>Blane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">B</forename><surname>Cooper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Third IEEE Workshop on Applications of Computer Vision</title>
		<meeting>Third IEEE Workshop on Applications of Computer Vision<address><addrLine>Sarasota, Florida, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">The approximation power of moving least-squares</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Computation</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">224</biblScope>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Mesh-independent surface interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Computational Mathematics</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note>in press</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The digital michelangelo project: 3d scanning of large statues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pulli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ginzton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ginsberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shade</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fulk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="131" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">The use of points as a display primitive</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Whitted</surname></persName>
		</author>
		<idno>85-022</idno>
		<imprint>
			<date type="published" when="1985" />
		</imprint>
		<respStmt>
			<orgName>University of North Carolina at Chapel Hill</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Least squares quantization in PCM</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Lloyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="128" to="137" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Real-time rendering of real-world environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">K</forename><surname>Mcallister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">F</forename><surname>Nyland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Popescu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lastra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mccue</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eurographics Rendering Workshop</title>
		<imprint>
			<date type="published" when="1999-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Spatial Tesselations -Concepts and Applications of Voronoi Diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Okabe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Boots</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sugihara</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<publisher>Wiley</publisher>
			<pubPlace>Chichester</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Surfels: Surface elements as rendering primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Baar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="335" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Direct least-squares fitting of algebraic surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pratt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 87)</title>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="145" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Creating generative models from range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramamoorthi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Arvo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 99</title>
		<meeting>SIGGRAPH 99</meeting>
		<imprint>
			<date type="published" when="1999-08" />
			<biblScope unit="page" from="195" to="204" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Qsplat: A multiresolution point rendering system for large meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="343" to="352" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Merging range images of arbitrarily shaped objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rutishauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stricker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Trobina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Computer Vision and Pattern Recognition</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="573" to="580" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Ray tracing point sampled geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schaufler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">W</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Rendering Techniques 2000: 11th Eurographics Workshop on Rendering</title>
		<imprint>
			<date type="published" when="2000-06" />
			<biblScope unit="page" from="319" to="328" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Surface modeling from dynamic integration of multiple range views</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Soucy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laurendeau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1992 International Conference on Pattern Recognition</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="449" to="452" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Alias-free voxelization of geometric objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sramek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E</forename><surname>Kaufman</surname></persName>
		</author>
		<idno>1077-2626</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="251" to="267" />
			<date type="published" when="1999-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">A signal processing approach to fair surface design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 95</title>
		<meeting>SIGGRAPH 95</meeting>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="351" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Re-tiling polygonal surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 92)</title>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<title level="m">Zippered polygon meshes from range images. Proceedings of SIGGRAPH 94</title>
		<imprint>
			<date type="published" when="1994-07" />
			<biblScope unit="page" from="311" to="318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Volume sculpting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E</forename><surname>Kaufman</surname></persName>
		</author>
		<idno>0-89791-736-7</idno>
	</analytic>
	<monogr>
		<title level="m">Symposium on Interactive 3D Graphics</title>
		<imprint>
			<date type="published" when="1995-04" />
			<biblScope unit="page" from="151" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Consensus surfaces for modeling 3d objects from multiple range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wheeler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Sato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ikeuchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Conference on Computer Vision</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="917" to="924" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Using particles to sample and control implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Witkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 94</title>
		<meeting>SIGGRAPH 94</meeting>
		<imprint>
			<date type="published" when="1994-07" />
			<biblScope unit="page" from="269" to="278" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
