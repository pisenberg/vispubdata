<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PixelFlex: A Reconfigurable Multi-Projector Display System</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruigang</forename><surname>Yang</surname></persName>
							<email>ryang@cs.unc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Gotz</surname></persName>
							<email>gotz@cs.unc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Justin</forename><surname>Hensley</surname></persName>
							<email>hensley@cs.unc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herman</forename><surname>Towles</surname></persName>
							<email>towles@cs.unc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">S</forename><surname>Brown</surname></persName>
							<email>brown@cs.ust.hk</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Kentucky</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">-ence and Technology)</orgName>
								<orgName type="institution">Hong Kong University of Sci</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">PixelFlex: A Reconfigurable Multi-Projector Display System</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation -Digitizing and scanning, Display algorithms, Viewing algorithms</term>
					<term>I.4.1 [Image Processing and Computer Vision]: Digitization and Image Capture -Imaging geometry, Camera calibration</term>
					<term>B.4.2 [Input/Output and Data Communications] Input/Output Devices -Image display large-format projection display, camera-based registration and calibration</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper presents PixelFlex-a spatially reconfigurable multi-projector display system. The PixelFlex system is composed of ceiling-mounted projectors, each with computer-controlled pan, tilt, zoom and focus; and a camera for closed-loop calibration. Working collectively, these controllable projectors function as a single logical display capable of being easily modified into a variety of spatial formats of differing pixel density, size and shape. New layouts are automatically calibrated within minutes to generate the accurate warping and blending functions needed to produce seamless imagery across planar display surfaces, thus giving the user the flexibility to quickly create, save and restore multiple screen configurations. Overall, PixelFlex provides a new level of automatic reconfigurability and usage, departing from the static, onesize-fits-all design of traditional large format displays. As a front-projection system, PixelFlex can be installed in most environments with space constraints and requires little or no post-installation mechanical maintenance because of the closed-loop calibration.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In recent years, with increased computer performance and the advancement of projector display technology, a number of large-format display systems have been built by research and commercial institutes. The compelling visuals and higher resolutions of these displays make them ideal for a variety of applications in scientific visualization, entertainment, business, and education.</p><p>While these systems are very effective at providing large scale imagery to users, installation and operation is often a tedious undertaking. Because of design constraints, most are rear-projection systems that require substantial floor space to accommodate. Moreover, continuous maintenance can be required to maintain geometric alignment. Because of the tremendous setup effort needed, once these systems are installed, the spatial layout is finalized.</p><p>This papers presents PixelFlex -a spatially reconfigurable projector-based display system (shown in <ref type="figure" target="#fig_0">Figure 1</ref>) which is optimized for planar or nearly planar screens. Pix-elFlex is composed of ceiling-mounted projectors, each with computer-controlled pan, tilt, zoom and focus. A single camera is used for closed-loop calibration. PixelFlex allows for installation in small room environments, while providing the flexibility and versatility to change display layout for different users or applications. For example, during group collaboration, a user might desire a wide-area, full wall display. Later, a smaller, brighter, higher pixel density display may be desired. In other cases, a wide-area display using an extra projector to create a high-resolution inset may be needed. In the future, it may be possible to allow two overlapping layers to create a passive stereo system similar to the one described in <ref type="bibr" target="#b1">[2]</ref>.</p><p>This automatic reconfigurability allows users to easily create, save and restore a multitude of display layouts in minutes, literally at the touch of a button.</p><p>The remainder of this paper is organzied as follows. Sec-tion 2 provides an overview of related work. Sections 3, 4 and 5 detail the three major aspects of developing the Pix-elFlex reconfigurable display system including:</p><p>• Components for Reconfigurability: Physically arranging and controlling the projectors, pan-tilt units and camera for a reconfigurable display involves many details.</p><p>• Automatic Calibration: Seamless display using multiple, overlapping projected images requires precise geometric registration and photometric calibration, which PixelFlex achieves quickly and automatically using a single camera and computer vision techniques.</p><p>• Rendering Applications: We have developed two applications for the PixelFlex system -an X Windows desktop and an OpenGL 3D viewer. These applications also represent two different rendering techniques -a more general two-pass image warping technique for handling non-linear lens distortion over the full optical zoom range of the projectors and a one-pass algorithm applicable when the projector optics (zoom position) is set at the linear "sweetspot".</p><p>The paper concludes in Sections 6 and 7 with a discussion of results and conclusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND AND RELATED WORK</head><p>Although newer technologies may lead to larger thin-panel displays and eventually the promise of displays that could be applied like wallpaper, the use of light projectors is currently the most effective way to build large-scale, high-resolution displays. There are several commercially available projectorbased large scale display systems, including the well-known CAVE <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b11">12]</ref> environment, as well as a variety of video walls and dome products <ref type="bibr" target="#b23">[26,</ref><ref type="bibr" target="#b24">27,</ref><ref type="bibr">17]</ref>.</p><p>Owning and operating a large format display is often an expensive endeavor, requiring rigid display surface construction with precise projector alignment and constant maintenance. This, compounded with expensive rendering hardware, has limited the use of such systems to only a handful of well-funded research institutes. Addressing these issues, there are on-going research efforts to make large format displays more accessible. Much of this work can be divided into two categories: distributed rendering and geometric registration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Distributed Rendering</head><p>Operating systems, such as MacOS, Unix, and MS Windows 2000, have support for extending their desktop to multiple displays. Using this feature with carefully aligned projectors, users can create tiled displays <ref type="bibr" target="#b0">[1]</ref>. However, the scalability of such arrangements is often limited by the OS window manager and/or the number of video output channels available on a single machine.</p><p>This has led to efforts to explore the use of multiple rendering nodes, often PCs with high-end graphics cards, to create a single logical display. The key challenge with these systems is to get the distributed nodes to coordinate as a seamless rendering engine. There are two notable efforts in this area.</p><p>First is Li's et al. <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b20">22,</ref><ref type="bibr" target="#b13">14]</ref> Scalable Display Wall at Princeton. Their research addresses several challenges, including resource allocation, parallel visualization algorithms, and user-interface metaphors for the display ( <ref type="bibr" target="#b13">[14]</ref> gives a comprehensive overview to this work). Their implementation provides several application support layers, including a Virtual Display Driver to allow Window's applications and an Window's OpenGL implementation.</p><p>Second is Humphrey's et al. Infomural <ref type="bibr" target="#b10">[11]</ref> and WireGL <ref type="bibr" target="#b8">[9]</ref> research at Stanford into scalable distributed display architecture. Their effort focuses on efficient algorithms to minimize network load and thus provide efficient scalability. The WireGL software <ref type="bibr" target="#b9">[10]</ref> provides an easy to use distributed-OpenGL implementation with available source code which is cross-compatible with several OS platforms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Geometric Registration</head><p>While distributed rendering research is allowing large scale displays walls to be created from a set of commodity PCs, the construction of these displays is still quite tedious, requiring precise projector overlap, often needing orthogonal projection to the screen. This arguably is the most prominent drawback of large format display design. Research into techniques for automating this registration process is helping alleviate this time consuming setup.</p><p>A general solution to the seamless display problem was presented by Raskar et al. <ref type="bibr" target="#b17">[19]</ref>. In this approach, a series of calibrated stereo cameras are used to determine the display surface and individual projector's intrinsic and extrinsic parameters in a common coordinate frame. The result was an exhaustive description of the entire display environment. Although this approach allowed for a general solution, the computational effort and resources needed to implement this approach introduce their own level of complexity.</p><p>Chen et al. <ref type="bibr" target="#b2">[3]</ref> provides a mechanism to help reduce mechanical alignment by calculating a corrective projective function (a 3×3 co-lineation from projector space to the display space) for each projector. These equations are solved by observing corresponding projector pixels and lines via an un-calibrated camera with controllable zoom and focus, mounted on a pan-tilt unit. Simulated annealing is used to find a global solution that minimizes the overall pixel position and line slope error between adjoining projector segments. This approach requires substantial image data and computation. As reported in their paper, data collection and a final solution can take over 30 minutes to compute. Furthermore, this approach corrects the imagery for slightly misaligned projectors, it is not clear if it can handle large misalignment, as in our system.</p><p>Surati <ref type="bibr" target="#b22">[25]</ref> presented a solution that also used a camera to establish the relative geometry of multiple projectors. Using a camera that had been "calibrated" by looking at a regularly spaced grid placed in front of the display surface, subsequent projector imagery can be registered to the grid. Surati's solution was designed for a planar surface; concurrent research <ref type="bibr" target="#b18">[20]</ref> showed that this technique could be used to create geometrically correct imagery on arbitrary display surfaces. The only requirement of this technique is that a single camera be able to observe the entire display.</p><p>While most registration methods treat the calibration task as a pre-process that is done only once when the configuration is fixed, Yang and Welch <ref type="bibr" target="#b27">[30]</ref> presented an on-line and continuous registration method that auto-calibrates the display while the system is being used. Using a camera to observer the entire display, they iteratively refine the estimate of the display surface shape based on image-based correlation between the known projector image and the observed camera image. While this method takes a relatively long period of time to converge, it can be used to continually refine the display surface geometry even if changes occurs during usage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Other Work</head><p>The IEEE Computer Graphics and Applications Vol 20, Number 4, 2000 is a special issue on large-format displays, in which the above-mentioned groups and researchers from the University of Chicago, Argonne National Laboratory <ref type="bibr" target="#b7">[8]</ref>, Lawrence Livermore National Laboratory <ref type="bibr" target="#b21">[23]</ref>, Sandia National Laboratories <ref type="bibr" target="#b5">[6]</ref>, and AT&amp;T Shannon Laboratory <ref type="bibr" target="#b25">[28]</ref> present their recent research and experiences in building such display systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Spatially Reconfigurable Display</head><p>While the current research is promising to make large-scale display more affordable with less rigid design constraints, the display designs themselves are limited to a static, onesize-fits-all design philosophy.</p><p>The idea behind PixelFlex is to allow for an automated, reconfigurable, large scale display that can change its display layout to accommodate a variety of desired viewing arrangements. In that sense, it is similar to the steerable projection system <ref type="bibr" target="#b3">[4]</ref> developed at IBM Research. Their system employs a single projector, while our system uses an array of projectors to create a single logical display device.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">COMPONENTS FOR RECONFIGURA-BILITY</head><p>The PixelFlex system currently includes a configurationcontrol PC, a camera, and eight Proxima 6850 LCD projectors driven by multiple pipes of an SGI Infinite Reality system. The projectors have a resolution of 1024 × 768 and output 1500 ANSI lumens. In front of each projector, a front-surface mirror is mounted on a pan-tilt unit (PTU). These eight combined assemblies are mounted on the ceiling in two rows of four for front-projection onto a white diffuse wall approximately seven feet away. Front-projection allows the system to fit into much smaller areas by eliminating the need for room behind the display surface. Both the projectors and the PTUs are connected through serial links to the control PC for computer control of each projector's optic functions (zoom and focus) and mirror orientation (pan and tilt). A picture of the projector array with a closeup view of the mirror-PTU assembly is shown in <ref type="figure" target="#fig_1">Figure 2</ref>.</p><p>An NTSC camera is mounted across the room from the display surface where it can observe the entire display area. It is connected to a video capture card in the control PC.</p><p>In our typical wide-area configuration, the display area is approximately 12 feet by 5 feet, with an average spatial resolution of 25 DPI and 15% overlap. Limited by the zoom range, high-resolution insets can increase the spatial resolution to approximately 40 DPI.</p><p>From the configuration-control PC, a user interface permits one to change individual projector's optical settings, as well as steer its light via the mirror-PTU unit. Once a desired layout has been created, the layout settings can be saved to a configuration file. These configuration files can be loaded via the control panel at a later time to restore the PixelFlex system to any saved configuration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">AUTOMATIC DISPLAY CALIBRATION</head><p>When the user requests a change in the display configuration, the new display layout needs to be calibrated. Projector calibration of the PixelFlex system involves accurate computation of the mapping function from projector image coordinates to world display coordinates. We present a simple, yet accurate geometric registration procedure using a single video camera which satisfies the mapping requirements of two different rendering algorithms.</p><p>Photometric calibration includes automatically determining the display overlap regions and intensity responses of each projector. This data is used to compute an alpha mask used in the rendering process to attenuate the light contribution of individual projectors in these overlapping regions, thereby producing a more photometrically seamless display.</p><p>We also present our method for determining the optimal zoom setting for each projector that minimizes radial distortion. The results from these measurements are used when rendering with our one-pass algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Geometric Registration</head><p>The goal of the geometric registration procedure is to create a mapping between each projector's image coordinates and the display's global coordinates. There are three main steps in the geometric registration process: (1) camera to display surface registration, (2) projector registration via structured light, and (3) post processing of the registration data for the appropriate rendering algorithm. Due to space limit, we will provide an overview of the process here, more details of the registration process are presented in the technical report <ref type="bibr" target="#b6">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Camera to Display Surface Registration</head><p>We use a single, standard NTSC video camera to determine the mapping between the projectors' imagery and the display surface. Our camera needs to see the entire screen and thus uses a wide-field-of-view lens which inevitably suffers from radial distortion. We remove this non-linearity by computing the lens' distortion factors using Intel's OpenCV computer vision library <ref type="bibr" target="#b12">[13]</ref>. Using the undistorted camera image, we register it to the display surface by observing four fiducial placed on the display surface defining the display's rectangular coordinate system. After finding the corresponding positions in the undistorted camera image of the fiducials, we can define a 3 × 3 homography transformation to transform observed camera points to the global display coordinate system 1 . This procedure needs to be performed only one time unless the camera is moved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Projector Registration via Structured Light</head><p>Once the camera-to-display transform is known, we find a mapping between each projector's pixel coordinate system and the camera's image by taking regular samples in the projector's pixel space and linearly interpolating between them. This is done by projecting a regular array of structured light patterns from each projector and viewing them with the camera. We have found empirically that a 10 × 10 array of circular features, with Gaussian distribution luminance, is adequate for our current setup. The centroid of the projected features can be determined to sub-pixel accuracy in the camera's image. The sub-sampled data provides a piecewise linear approximation to all pixel space distortions, including keystone distortion, projector lens distortions, and irregular display surface geometry.</p><p>The structured-light procedure defines a mapping from each projector's image space to the camera's image space. Using the camera-to-display registration computed in the previous section, the results are mapped into the display's global coordinate system. A similar approach was presented in <ref type="bibr" target="#b26">[29]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Post Processing for Rendering Algorithms</head><p>The geometric registration process generates a sub-sampled mapping between projector image coordinates and global display coordinates. We process this initial mapping into the form needed by either of two rendering algorithms.</p><p>Optimized One-Pass Algorithm -When the display surface is planar and the projector complies with the pinhole camera model, i.e., lens distortions in the projector are minimal, individual projector imagery can be aligned with a 3 × 3 homography transformation <ref type="bibr" target="#b16">[18]</ref>. This transformation is computed for each projector using samples from the projector-to-display mapping determined during the registration process. This transform corrects the image keystoning caused by off-axis projection. In section 4.3, we define an automatic procedure for finding the optimal zoom setting at which the lens distortion is minimal.</p><p>Generalized Two-Pass Algorithm -Our two-pass rendering algorithm is a more general solution that corrects for both linear and non-linear distortions such as non-planar display surfaces and radial lens distortion. The actual nonlinear mapping function to pre-warp the projected image is implemented with a piecewise linear approximation. We break the projector image into a tesselated mesh upon which we texture the desired image. The mesh structure and texture mapping coordinates are derived from the mapping data obtained in the structured light registration procedures described in the previous section. In summary, the desired image is first rendered into host memory in the first pass, <ref type="bibr" target="#b0">1</ref> Chen et al. <ref type="bibr" target="#b2">[3]</ref> showed that this procedure can be accomplished with an uncalibrated controllable camera mounted on a pan-tilt unit. and texture mapped in a second pass onto this tesselated structure.</p><p>Since the projectors are casually aligned, the outer boundary of the unified display is not normally rectangular. So to produce a rectangular display, we determine the maximum inscribed rectangular area. The resultant area defines the Effective Display Area (EDA) on the projection screen. Pixels outside this area are blanked. An example of the EDA is shown in <ref type="figure" target="#fig_2">Figure 3</ref>(a) for a four-projector array.</p><p>The size of the EDA modulates the dimensions of the image rendered into host memory on pass one. In our widescreen format using eight projectors, we would typically render a 4096 x 1536 texture image on the first pass. Texture hardware limitations require us to break this large texture into smaller 1024 x 1024 sub-textures for the second texture rendering step. If a projector must reference multiple sub-textures, then this requires us to also sub-divide the geometric mesh into patches that reference a single subtexture. This is necessary to insure texture coordinates of a graphic primitive reference only one texture. <ref type="figure" target="#fig_2">Figure 3(b-d)</ref> illustrates this sub-division for both the geometric tesselated mesh and the texture patch for a four-projector array.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Photometric Calibration</head><p>There are two major tasks involved with photometric calibration. The first task is the measurement of each projector's intensity response. This data is used to create a color lookup table that linearizes each projector's intensity response.</p><p>The second task is the determination of the display overlap regions. This data is used to compute an alpha (blending) mask used in the rendering process to attenuate the light contribution of individual projectors in these overlapping regions so as to produce a photometrically seamless display.</p><p>To linearize the projector's intensity response, we adopt the techniques introduced by Majumder <ref type="bibr" target="#b15">[16]</ref>. We use a spectroradiometer to accurately measure the luminance responses of each channel of a projector. The inverse of each channel's response is loaded into the graphic hardware's color look-up table for real-time intensity correction. <ref type="figure" target="#fig_3">Figure  4</ref> shows the input-output responses before and after nonlinearity correction.</p><p>Our alpha weighting function is based on the distance formulation presented by Raskar et al. <ref type="bibr" target="#b17">[19]</ref>, however, we add a pixel-density attenuation factor to account for different pixel densities. Following their notations, the final alpha weight Am(u, v) associated with projector Pm's pixel (u, v) is evaluated as follows:</p><formula xml:id="formula_0">Am(u, v) = am(m, u, v)p n m i ai(m, u, v)p n i (1)</formula><p>where ai is the distance related alpha function computed for projector Pi, pi is the average pixel density for projector Pi, and n is the constant attenuation factor specified by the user. An attenuation factor of 2 is typical. A larger attenuation factor favors projectors with a higher pixel-density. The modified weight function still guarantees that the alpha values for all projectors sum to unity for each screen point, while allowing more flexible control of the blending smoothness in regions where projectors with different pixel densities overlap.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Optical Linearity Evaluation</head><p>A projector's geometric non-linearity is mainly exhibited in term of lens distortions. During tests of our system, we determined that radial distortion is dependent on the zoom setting of the projector. The lens distortion changes from barrel distortion to pincushion distortion as we change the optical zoom from the narrowest to the widest field-of-view. This implies that there is an optimal zoom setting at which lens distortion is minimal. Because our one-pass rendering algorithm does not correct for non-linear distortions, we find the zoom setting that minimizes these distortions. Operating the projectors at the optimal zoom setting allows us to efficiently render imagery using our one-pass rendering algorithm that corrects for the geometric distortion created by non-orthogonal projection.</p><p>Using linearized images from our system camera, we have developed a line-fitting, computer vision methodology to evaluate a projector's optical non-linearities. The left graph of <ref type="figure" target="#fig_5">Figure 5</ref> shows how the optical non-linearity varies as a function of zoom setting for the Proxima 6850 projector.  The point of minimum non-linearity is close to the middle of the zoom range. At this zoom setting, the spatial distortion of the projected image is usually within a pixel, which allows us to use the more efficient one-pass rendering algorithm while maintaining accurate geometric registration. The right image in <ref type="figure" target="#fig_5">Figure 5</ref> shows the level of geometric linearity and registration we can achieve using the one-pass algorithm. Alpha blending has been turned off in this image to clearly identify the four projector overlap in this critical registration region.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RENDERING APPLICATIONS</head><p>We present two applications for our system -an X Windows Desktop and an OpenGL 3D Viewer. The X Windows Desktop was developed using the two-pass rendering algorithm described in section 4.1.3, and as such supports the full optical reconfigurable range of PixelFlex. This desktop allows most existing X Windows applications to run on our system without modification. Unfortunately, it currently does not support OpenGL programs so we separately developed an OpenGL 3D Viewer application. The latter employs our single-pass rendering technique, which is applicable when projector's zoom optics are set at the linear sweetspot.</p><p>In both applications, photometric blending of the projector overlap regions is achieved by multiplying the resulting framebuffer image with the pre-computed alpha mask. This can be performed using standard texturing hardware with minimal performance cost. Note that the rendering cost of the second-pass texturing and alpha blending steps are independent of scene complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">X Windows Desktop</head><p>The X Windows Desktop supported on PixelFlex is provided through a modified version of the Virtual Network Computer(VNC) software from AT&amp;T Laboratory Cambridge <ref type="bibr" target="#b19">[21]</ref>. The basic VNC software allows the desktop of one machine to be shared on another machine. The VNC server software also allows an arbitrarily sized, virtual X Windows screen to be created in host memory. We modified the VNC software to create VNC clients that utilize the two-pass rendering algorithm described in section 4.1.3. While inherently intended to run networked on different machines, nothing precludes a VNC server and clients from running on the same platform.</p><p>On PixelFlex, a VNC X Windows server is first started on the SGI platform. Depending on the desired resolution, one or more rendering clients running on the same SGI machine connect to the server and request updates only for their respective portion of the high-resolution screen. These screen viewports are then pre-warped for display in a second ren- <ref type="figure">Figure 6</ref>: The worse-case registration quality using our twopass mapping algorithm with photometric-blending off.</p><p>dering pass and blended with the alpha mask. This allows X-based applications to be displayed on the PixelFlex display without modification, as they would be on any X server.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">OpenGL 3D Viewer</head><p>We have implemented an OpenGL 3D viewer to demonstrate the high performance, single-pass rendering algorithm for the case of linear display setup, i.e., planar display surfaces and no radial distortions in the projectors. The mapping from the unified display to the underlying distributed rendering engine are encapsulated in a single C++ class. While not totally transparent, this allows most existing OpenGL applications to be modified to run on PixelFlex by changing only a few lines of code.</p><p>In this implementation, advantage is taken of SGI's OpenGL Multipipe SDK [24] to hide the complexities of using multiple display pipes on the SGI InfiniteReality 2 platform. The API provides transparent access to accrued hardware resources and allows 3D applications to run with greater flexibility in a multipipe configuration without recompilation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS AND FUTURE WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Results</head><p>We have assembled a working PixelFlex prototype in a conference room at UNC-Chapel Hill, and have successfully used it in a number of configurations.</p><p>The default configuration for PixelFlex is a wide area configuration with an effective pixel resolution of approximately 3500 × 1300. This configuration is useful for group collaboration and demonstrations. In <ref type="figure" target="#fig_0">Figures 11 and 12</ref>, a user is working with the X Windows desktop on PixelFlex. The large format display allows him to view a high-resolution image from an astrophysics simulation while checking relevant information on the web using Netscape. <ref type="figure" target="#fig_7">Figure 8</ref> shows the underlying triangulated mesh in the left half of the desktop that is used in the 2-pass rendering technique.</p><p>Our OpenGL 3D viewer is shown in <ref type="figure" target="#fig_8">Figure 9</ref>. The rendering is done on an SGI InfiniteReality 2 system using two graphics pipes with four output channels each. It can be easily integrated into existing OpenGL applications without degrading the rendering performance. <ref type="figure" target="#fig_6">Figure 7</ref> shows the OpenGL 3D Viewer running while Pix-elFlex is in a stacked configuration. In the future, with the proper light polarizing filters, a similar stacked configuration could be used for stereoscopic viewing. <ref type="figure" target="#fig_0">Figure 10</ref> shows a view of the X Windows desktop with a high-resolution inset. The smaller picture in the lower-left part of the figure shows a zoomed-in view of the physical high-resolution inset. In this example, the inset allows viewers to see the micro-print on a twenty dollar bill 2 more clearly. This example demonstrates how user control over pixel placement can benefit visualization tasks.</p><p>While a complete quantitative measurement of PixelFlex is an on-going project in our group, we presented a qualitative view of the accuracy of the geometric registration algorithm. <ref type="figure">Figure 6</ref> shows the worse-case registration quality using our two-pass mapping algorithm, while the right image of <ref type="figure" target="#fig_5">Figure 5</ref> shows the registration in the one-pass rendering case. Both images are taken of a four corners region of four overlapping projectors. Photometric blending was turned off to more clearly identify the overlap region. If projectorto-projector registration were ideal, one would see no C 0 or C 1 discontinuities in the grid pattern of these images. In most cases our positional error over the entire display was less than one pixel; but as seen in the worse-case image, registration errors of up to two pixels sometimes occur. With photometric blending turned on, these differences are less obvious.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Future Work</head><p>While PixelFlex represents a large step towards a flexible, spatially dynamic display system, there are a number of issues that need to be addressed in future work.</p><p>While the geometric registration we have been able to achieve is very good, we must continue our efforts to fully quantify the registration quality. In this area, we plan to explore the benefits a higher resolution calibration camera may afford. Related to this is a deeper understanding of overall screen resolution especially in the overlap regions where noncoincident pixel centers from multiple projectors complicate the sampling structure.</p><p>The most visually concerning issue is that of photometric uniformity. Our system incorporates only the basic notion of blending across projector intensity values in overlapping regions. Overcoming large color differences between projectors and even within a single projector remain a major challenge as does the more fundamental issue of matching black level across the entire display. Reconfigurability further complicates the photometric issues because of changes in brightness, pixel density, and overlap regions. Photometric uniformity is an ongoing research topic in our group. While much of this involves precise measurements with an expensive spectroradiometer, one goal of this research is to determine how low-cost color cameras can be used in the photometric correction process.</p><p>We also recognize the need to migrate our system away from a single SGI host and towards a low cost PC-cluster architecture. The most significant challenge in this direction is the development of a software architecture that will support a unified display API. We would like to extend WireGL for our rendering architecture so as to provide truly transparent OpenGL application support; and develop a distributed X Windows desktop architecture that is more efficient than our current VNC implementation. These combined efforts will lead to a more affordable and easier to use display system that transparently supports both desktop and full-screen 3D applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>In this paper we have presented techniques to build PixelFlex -a reconfigurable multi-projector display system. The main idea is to build a large scale display system that allows the end-users, not the system designer, to change the display layout on an application driven basis. To realize this vision, we have</p><p>• developed a projector array whose display layout can be easily reconfigured</p><p>• automated the calibration/registration process using computer vision techniques via closed-loop camera operation</p><p>• developed two applications that transparently map underlying PixelFlex components to a seamless, geometrically correct, unified display the end-user sees</p><p>Combining these techniques, we believe we have built and demonstrated the first large scale display system that has the ability to automatically reconfigure for different users or applications. It is a versatile front-projection display system that 1) can be installed in a variety of rooms, 2) is easy for end users and application developers to operate, and 3) requires little maintenance.</p><p>PixelFlex: A Reconfigurable Multi-Projector Display System      A user using PixelFlex to view DOE ASCI/Flash data.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>The top image shows PixelFlex with a wide area configuration, while the bottom image shows a stacked configuration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>This image shows the PixelFlex projector array. The inset is a closeup view of the mirror and PTU in front of a projector.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Post-processing for a 2 × 2 projector array. (a) the maximum inscribed rectangle is the Effective Display Area (EDA); (b) the EDA is divided into four texture patches; (c) A projector contains three texture patches; (d) Retriangulation with normalized texture coordinate.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Luminance response of the PixelFlex projectors (Proxima 6850) before and after non-linearity correction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Left: Projector optical non-linearity as a function of zoom setting; Right: Accurate geometric registration is achieved with the one-pass algorithm in this four projector corner region.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>3D model viewer running in a stacked configuration of PixelFlex. Insert image shows projector overlap.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>This image reveals the underlying projector meshes used in the X Window desktop application. Triangles in the mesh are textured with the appropriate X Window framebuffer to create a seamless, geometrically correct image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>3D viewer application showing portions of a power plant model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 :</head><label>10</label><figDesc>User points to a high-resolution inset area in PixelFlex display. The inserted image shows a closed-up view of the high-resolution detail.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :</head><label>11</label><figDesc>A user running the system with a wide-area configuration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 :</head><label>12</label><figDesc>Figure 12: A user using PixelFlex to view DOE ASCI/Flash data.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">The "Currency Demo" concept originated with the Scalable Display Wall team at Princeton University.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">ACKNOWLEDGMENTS</head><p>This research is supported by the Department of Energy, ASCI VIEWS program. We would like to thank Aditi Majumder for her color correction code and useful discussions. We also gratefully acknowledge John Thomas, Jim Mahaney and David Harrison in the assembly of our PixelFlex prototype. Special thanks are also due to Henry Fuchs and Greg Welch for inspirations and discussions throughout the course of this research.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Working in the Office of</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Bishop</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="76" to="78" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>Real Soon Now</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Toward a Compelling Sensation of Telepresence: Demonstrating a portal to a distant (static) office</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Towles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Nyland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<meeting><address><addrLine>Salt Lake City, UT, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Automatic Alignment of High-Resolution Multi-Projector Displays Using An Un-Calibrated Camera</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">W</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<meeting><address><addrLine>Salt Lake City, UT</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-10-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Using a Steerable Projector and a Camera to Transform Surfaces into Interactive Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pinhanez</forename><surname>Claudio</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Conference on Human Factors in Computing Systems (CHI 2001)</title>
		<imprint>
			<date type="published" when="2001-03" />
			<biblScope unit="page" from="369" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Surround-Screen Projection-Based Virtual Reality: The Design and Implementation of the CAVE</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Cruz-Neira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Sandin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Defanti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="135" to="142" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Remote High-Performance Visualization and Collabortation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Friesen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>Tarman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="45" to="49" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">The Design and Implementation of Pix-elFlex: A Reconfigurable Multi-Projector Display System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gotz</surname></persName>
		</author>
		<idno>TR01-025</idno>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
		<respStmt>
			<orgName>University of North Carolina at Chapel Hill</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Introduction to Building Projection-based Tiled Display Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hereld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">R</forename><surname>Judson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Stevens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="22" to="28" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Distributed Rendering for Scalable Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Humphreys</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Buck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eldridge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Supercomputing</title>
		<meeting><address><addrLine>Dallas, TX</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">WireGL: A Scalable Graphics System for Clusters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Humphreys</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><forename type="middle">B</forename><surname>Eldridge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Everett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2001</title>
		<meeting>SIGGRAPH 2001</meeting>
		<imprint>
			<date type="published" when="2001-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Distributed Graphics System for Large Tiled Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Humphreys</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization 1999</title>
		<meeting><address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title/>
		<ptr target="http://www.fakespacesystems.com/index.html" />
	</analytic>
	<monogr>
		<title level="j">Fakespace Systems Inc</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Open Source Computer Vision Library</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Intel</surname></persName>
		</author>
		<ptr target="http://www.intel.com/research/mrl/research/opencv/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Early Experiences and Challenges in Building and Using A Scalable Display Wall System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">W</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Damianakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Essl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Finkelstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Housel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Praun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samanta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shedd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Tzanetakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="671" to="680" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Optical Blending for Multi-Projector Display Wall System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12 th Lasers and Electro-Optics Society 1999 Annual Meeting</title>
		<meeting>the 12 th Lasers and Electro-Optics Society 1999 Annual Meeting</meeting>
		<imprint>
			<date type="published" when="1999-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Color Calibration of Projectors for Large Tiled Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Majumder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Towles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<meeting><address><addrLine>Salt Lake City, UT, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Immersive Planar Display using Roughly Aligned Projectors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE VR 2000</title>
		<meeting><address><addrLine>New Brunswich, NJ, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Multi-Projector Displays Using Camera-Based Registration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Towles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Seales</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<meeting><address><addrLine>San Francisco</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-10" />
			<biblScope unit="page" from="161" to="168" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">The Office of the Future: A Unified Approach to Image-Based Modeling and Spatially Immersive Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cutts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Stesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="179" to="188" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note>Annual Conference Series</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Virtual Network Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Richardson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Stafford-Fraser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">R</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hopper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet Computing</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="38" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Load Balancing for Multi-Projector Rendering Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samanta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Singh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH/Eurographics Workshop on Graphics Hardware</title>
		<imprint>
			<date type="published" when="1999-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">High-Resolution Multi-Projector Display Walls</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gaunt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hobson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Whitlock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="38" to="44" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Scalable Self-Calibration Display Technology for Seamless Large-Scale Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Surati</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
		<respStmt>
			<orgName>Massachusetts Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Trimension Systems</title>
		<ptr target="http://www.trimension-inc.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Panoram</forename><surname>Technologies</surname></persName>
		</author>
		<ptr target="http://www.panoramtech.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Visualization Research with Large Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Koutsofios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Krishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="50" to="54" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Geometrically Correct Imagery for Teleconferencing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">B</forename><surname>Seales</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Multimedia 99</title>
		<meeting><address><addrLine>Orlando, FL</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Automatic Projector Display Surface Estimation Using Every-Day Imagery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">9th International Conference in Central Europe on Computer Graphics, Visualization and Computer Vision</title>
		<meeting><address><addrLine>Plzen, Czech Republic</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2001-02" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
