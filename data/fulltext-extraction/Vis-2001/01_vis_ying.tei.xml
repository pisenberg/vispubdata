<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Nonmanifold Subdivision</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lexing</forename><surname>Ying</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denis</forename><surname>Zorin</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">New York University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Nonmanifold Subdivision</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling: Boundary representations</term>
					<term>Curve</term>
					<term>surface</term>
					<term>solid and object representations Subdivision surfaces</term>
					<term>Nonmanifold surfaces</term>
					<term>Geometric modeling</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Commonly-used subdivision schemes require manifold control meshes and produce manifold surfaces. However, it is often necessary to model nonmanifold surfaces, such as several surface patches meeting at a common boundary. In this paper, we describe a subdivision algorithm that makes it possible to model nonmanifold surfaces. Any triangle mesh, subject only to the restriction that no two vertices of any triangle coincide, can serve as an input to the algorithm. Resulting surfaces consist of collections of manifold patches joined along nonmanifold curves and vertices. If desired, constraints may be imposed on the tangent planes of manifold patches sharing a curve or a vertex. The algorithm is an extension of a well-known Loop subdivision scheme, and uses techniques developed for piecewise smooth surfaces.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>A crucial advantage of subdivision algorithms is their ability to generate a smooth surface from a broad class of control meshes. However, all existing subdivision schemes are designed for generating manifold surfaces. At the same time, many objects we may want to model are best represented by surfaces with nonmanifold topology. A surface has nonmanifold topology if at some points of the surface no neighborhood, no matter how small, can be continuously deformed into a disk. Typically, this occurs if the surface consists of several patches sharing a boundary. Examples of such surfaces include models of biological structures (heart with ventricles separated by a wall, fish with fins) as well as artificial objects (plane with wings, bag with several compartments). One of the motivations of this work was the need to produce models for heart simulations using immersed boundary method, as described in Section 4.</p><p>General polygonal or triangle meshes can be used to model such objects, if no requirements are imposed on the ways the faces of the mesh can share vertices or edges. However, the problem becomes more difficult if we wish to model the surfaces using higher order primitives, subdivision surfaces in particular: existing algorithms require the * {lexing,dzorin}@mrl.nyu.edu control mesh to be a topological manifold. It is possible to split such meshes into manifold pieces and treat each as a separate mesh. However, with this approach it is difficult to ensure that the pieces do not separate. Furthermore, it might be necessary to impose tangent plane continuity constraints on the joints between manifold pieces; such constraints are also difficult to maintain if the surface is defined by a collection of separate meshes.</p><p>Our approach is to extend existing subdivision rules to handle a more general class of control meshes. In fact, we allow any triangle mesh as input, as long as for any polygon no two vertices of this polygon coincide. Our scheme extends the well-known Loop subdivision scheme <ref type="bibr" target="#b8">[9]</ref>, but the same approach can be applied with few changes to extend any subdivision scheme to nonmanifold control meshes. Additional data assigned to vertices and edges of the mesh allows one to specify how patches are joined together.</p><p>Our main contributions include extending piecewise smooth subdivision rules to nonmanifold surfaces and new rules for tangent plane continuous interpolation of nonmanifold curves, an essential tool for modeling piecewise smooth nonmanifold surfaces.</p><p>We should note that nonmanifold surfaces form a very broad class; we restrict our attention to surfaces which have well-defined tangent planes everywhere, possibly several tangent planes at singular features such as nonmanifold vertices and curves. For such surfaces, at any point behavior can be described up to the first order by a collection of tangent planes of manifold surface patches meeting at the point. Thus, if we can ensure that a certain part of the surface has prescribed tangent plane at a point, we should be able to model any desired first order surface behavior. A limitation of our approach is that we do not include surfaces with no finite set of tangent planes defined at some points, e.g. a cone or several cones attached at their apexes. While including certain categories of cones would be easy, it is unclear at this point which types of cones are useful in practice; we leave this as a subject for future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Related Work.</head><p>A recent paper <ref type="bibr" target="#b0">[1]</ref> discussed methods to generate surfaces with piecewise smooth boundaries. Our work is based on the results of that paper. The crucial difference is the way the rules are applied and addition of special rules for tangent plane interpolation along a curve. Rules for tangent plane interpolation along a curve introduced in this paper are close in spirit to the work of Levin <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7]</ref>. The paper of Hubeli and Gross <ref type="bibr" target="#b3">[4]</ref> considers the problem of fairing arbitrary nonmanifold meshes. Their approach to defining nonmanifolds is slightly different: they consider nonmanifold surfaces formed as unions of intersecting manifold surfaces. Topologically these classes are the same. Our work is complementary to <ref type="bibr" target="#b3">[4]</ref>: rather than fairing existing fine meshes, we construct smooth surfaces from an arbitrary coarse control mesh.</p><p>The paper by Nasri <ref type="bibr" target="#b10">[11]</ref> studies a related problem of interpolating networks of curves by dual subdivision surfaces; as we explain below, curve interpolation plays an important role in our construction. We consider primal rather than dual subdivision and our approach is more compatible with Loop and Catmull-Clark schemes.</p><p>Nonmanifold objects are widely studied in solid modeling literature <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b1">2]</ref>. Other related work includes nonmanifold mesh compression <ref type="bibr" target="#b2">[3]</ref> and nonmanifold simplification e.g. <ref type="bibr" target="#b11">[12]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Nonmanifold Surfaces</head><p>We start with introducing notation for meshes with nonmanifold topology. For any vertex v of the mesh let N1(v) (1-neighborhood of v) be the set of all triangles sharing v. We call v a manifold vertex, if the triangles of N1(v) can be ordered so that two sequential triangles share one edge ending at v. The first and the last triangles may also share one edge, in which case v is an interior vertex; otherwise v is a boundary vertex. An edge of the mesh is called manifold if it is shared by two triangles of the mesh, or belongs to a single triangle; in the latter case it is called boundary.</p><p>We call all boundary and nonmanifold edges singular, and similarly singular vertices are the nonmanifold and boundary vertices. subset of N1(v) such that for any two triangles in F there is a chain of triangles in N1(v) connecting them such that any two sequential triangles in the chain share an edge. A petal P of a flower F is a maximal subset of F , such that any two triangles in P are connected by a chain of triangles in F such that any two consecutive triangles in the chain share a manifold edge <ref type="figure" target="#fig_0">(Figure 1</ref> Among nonmanifold vertices it is convenient to distinguish a special type of vertices which we call simple. A simple nonmanifold vertex v has a single flower in N1(v), and there are exactly two singular edges incident on v. It follows that all petals share these two edges <ref type="figure" target="#fig_0">(Figure 1(c)</ref>). All other nonmanifold vertices are called complex.</p><formula xml:id="formula_0">A flower F at a vertex v is a maximal v F 1 v (a) (b) v P 1 P 2 P 3 P 4 e 2 e 1 (c) F 2 F 3 P 2 P 1 P 3</formula><p>It follows from the definition of petals that at any vertex v, N1(v) can be decomposed into manifold petals at any vertex. Each petal can belong to one of the three types shown in <ref type="figure" target="#fig_2">Figure 2</ref>, depending on the number of singular edges it contains; we will call these types closed, dart and open petals. Subdivision of nonmanifold meshes. To define a subdivision scheme we need to define two types of rules: connectivity refinement rule, which tells us how to change the connectivity of the mesh, and geometric rule, which tells us how to compute positions of control points. Standard quadrisection refinement rules work without any changes on nonmanifold meshes. To choose geometric rules, we need to define when nonmanifold surfaces are considered smooth. As there is no conventional definition, we choose one that we believe to be intuitively natural and sufficiently flexible for geometric modeling purposes. The surface obtained by subdivision can be regarded as parameterized on the control mesh. Petals, singular curves and singular points on the surface are images of petals, singular edges and singular vertices respectively on the control mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>closed dart open</head><p>We observe that petals are not much more complex than local charts for a topological manifold with boundary; instead of two chart types we have three (the dart chart is added). It appears to be natural to treat petals separately in the same way we treat neighborhoods of points on manifold surfaces. Thus, a nonmanifold vertex has a collection of neighborhoods associated with it, and we say that a surface is smooth if each of these neighborhoods has a regular parameterization over one of the standard charts used for piecewise smooth surfaces ( <ref type="figure" target="#fig_3">Figure 3</ref>). • open petals of complex singular vertices can be parameterized over Q1, Q2 or Q3.</p><formula xml:id="formula_1">Q 1 D Q 2 Q 3 D' r</formula><p>These constraints immediately suggest how a simple subdivision scheme can be defined for nonmanifold meshes, using the rules for piecewise smooth subdivision surfaces described in <ref type="bibr" target="#b0">[1]</ref>. We assume that the ambiguity for open petals of complex singular vertices is resolved by user choice of tags (convex corner, concave corner, smooth); if no tag is chosen, we assume that the petal is a convex corner. Note that two petals sharing two singular edges can be either both corner or both smooth. If one is concave, the other can be either convex or concave.</p><p>Nonmanifold subdivision scheme. We start with a summary of the rules; detailed formulas are provided below and in <ref type="figure" target="#fig_4">Figure 4</ref>. Vertex rules are as follows:</p><p>• for simple singular vertices, use cubic B-spline subdivision rules.</p><p>• for complex singular vertices, use corner rules, i.e. the vertex remains fixed, the user specified tag is used to decide the choice between convex and concave corner rule.</p><p>• for regular vertices, use standard Loop rules.</p><p>The edge rules follow the rules for piecewise smooth surfaces, with sectors replaced by petals, with one exception at the closed petal:</p><p>• for singular edges, use the standard cubic B-spline subdivision rule (midpoint subdivision).</p><p>• for nonsingular edges of a corner or dart petal, use corresponding piecewise surface rules.</p><p>• for nonsingular edges which are parts of a closed petal for a nonmanifold vertex, use a special fixed disk rule described below.</p><p>• in all other cases, use standard Loop rules.</p><p>It should be noted that on the first subdivision step a nonsingular edge can be contained in two different petals if both endpoints are singular vertices. In this case we simply use the average of the conflicting positions; after the first subdivision step this is no longer possible for both its subedges.</p><p>Edge rules in detail. As we have mentioned, edge subdivision rules coincide with piecewise smooth subdivision surface subdivision rules with the exception of an additional fixed disk rule. Here we briefly review these rules for completeness; for details, see <ref type="bibr" target="#b0">[1]</ref>.</p><p>The rules consist of two stages: subdivision and flatness modification. The stencils for the vertex rules are shown in <ref type="figure" target="#fig_4">Figure 4</ref>. Stencils used at the first stage of edge subdivision rules are shown in <ref type="figure" target="#fig_4">Figure 4</ref> (d) to (f). Suppose k is the valence of the considered petal, the values of θ for dart, convex corner and concave corner rules are 2π/k, α/k and α/k respectively, where in the last two cases, α is the angle between two singular curves of the petal. For smooth open petal rule (when two singular curves bounding the petal meet smoothly) we use θ = π/k. For the fixed disk rule, the new rule introduced for closed petals at nonmanifold vertices, the standard Loop rule is used at the first stage (θ = π/3).</p><p>Flatness modification. The second stage for edge rules is flatness modification, which is required for concave corner, dart and fixed disk rules to ensure C 1 -continuity. Flatness, tangent and normal modification are controlled by a parameter s, which determines how fast the surface approaches the tangent plane.</p><p>To formulate the flatness modification rules we need additional notation. Consider a petal at a vertex v. Let p m be the vector of control points on subdivision level m which are in N1(v) and also contained in the petal.</p><p>Subdivision matrix S is the matrix of subdivision coefficients which relates the vector of control points p m at level m to the vector of control points p m+1 at level m + 1: p m+1 = Sp m . Let x i be right eigenvectors of S, and λi corresponding eigenvalues. Then we can write p = N −1 i=0 aix i Notice each ai is a vector in R 3 computed as ai = (l i , p), where l i is the left eigenvector of S. The left eigenvectors for all cases excluding fixed disk rules are provided in <ref type="bibr" target="#b0">[1]</ref>. The vectors for this rule are given in the appendix. In order for the subdivision scheme to be convergent, λ0 is 1 and x0 is a vector including all ones.</p><p>The flatness modification ensuring C 1 continuity is given by</p><formula xml:id="formula_2">p new = (1 − s)p + s(a0x 0 + a1x 1 + a2x 2 ).</formula><p>In the case of concave corner rules, in order to ensure</p><formula xml:id="formula_3">C 1 - continuity, s has to satisfy (1 − s)(3/8 + (1/4)(cos(π/k) − cos(θ))) &lt; 1/2).</formula><p>Clearly, choosing s = 1/2 is always sufficient. We refer the reader to <ref type="bibr" target="#b0">[1]</ref> for details. However, the subdivision scheme that we have just described is not sufficiently flexible. While we ensure that each petal is a piecewise smooth surface, we have no means of making two petals share a tangent plane along a curve or at a point, which is a natural operation ( <ref type="figure" target="#fig_0">Figure 5, Figure 12)</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Tangent Plane Constraints</head><p>Our initial scheme described above needs to be extended to handle constraints between patches. Enforcing a common normal for two petals joined at a point is straightforward; normal modification of <ref type="bibr" target="#b0">[1]</ref> can be used for this.</p><p>Ensuring two patches of the surface meeting at curve to have a common normal along the curve is more difficult.</p><p>Our approach is to use rules that allow one to prescribe the normal to the surface everywhere on the common curve explicitly; if such rules are used, one can guarantee that two patches share a singular curve and have common normal along that curve, and still evaluate subdivision on each patch separately. An additional advantage of this approach is that any number of patches can be made tangential at a nonmanifold curve. It turns out that tangent modification, similar to flatness modification described above, can be used to force prescribed normal along a singular edge, if applied at all simple singular vertices on that edge.</p><p>The rules that we use are similar to the approach of Levin <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7]</ref>; however, they do not require explicit use of the parameterization of the singular curve and do not place any restrictions on the valence of vertices on the curve.</p><p>Prescribed tangent and normal data. Before describing our rules that enforce prescribed normal along singular curves and at singular vertices, we describe the tangent data that can be associated with the mesh vertices to control this behavior. We take a somewhat more general approach than required to handle the cases listed above, and allow the user to prescribe a complete set of tangent planes for any singular point.</p><p>More specifically, the following data can be specified:</p><p>• tangents for any singular edges incident at complex singular vertices;</p><p>• additional "interior" tangents for any dart and smooth open petals;</p><p>• normals for any closed petals.</p><p>• Singular edges can be tagged; prescribed tangent planes are interpolated along these edges.</p><p>One can easily see that at a singular vertex if all the data is specified, the tangent planes are determined for each petal. Indeed, for a corner petal the normal is defined by the tangents to the singular curves bounding the petal. For a smooth open petal an extra interior tangent has to be specified because the singular curves have the same tangent at the vertex. Similarly, for a dart vertex an interior tangent has to be specified as there is only one singular curve. Finally, the normal can be specified independently for any closed petal.</p><p>In addition to vertex data, some singular edges are tagged. For these edges the tangent plane should be interpolated along a singular edge independently of the control point positions away from the edge. When we subdivide the edge, we also use midpoint subdivision to interpolate interior tangents (this is sufficient for C 1 but not C 2 continuity). Interpolated interior tangent may have a singularity, but this happens only if two prescribed tangents at adjacent vertices have strictly opposite directions.</p><p>This mechanism provides a general way of controlling the tangent plane along a singular curve; for example, by prescribing opposite interior tangents for two patches at two adjacent vertices, we ensure that near the edge the two patches will form a C 1 -continuous surface with the singular curve embedded in the surface <ref type="figure">(Figure 6(a)</ref>).</p><p>To ensure that the prescribed and interpolated tangents are actually tangent to the surface, we use two rules taken from <ref type="bibr" target="#b0">[1]</ref>: tangent and normal modification.  <ref type="figure">Figure 6</ref>: (a) To force two patches to share the same tangent plane along a singular curve, we specify the interior tangents at all vertices of the curve. Note that at any vi on the curve, opposite interior tangents ti and −ti are specified for two patches. (b) and (c) show how we compute interior tangents and normals when none are prescribed. (b) n1 and n2 are the original normals of close petals P1 and P2 respectively. Their average nc is the prescribed normal. (c) t1 and t2 are the original interior tangents of patch P1 and P2. t and −t are their projections onto the direction of t2 − t1.</p><formula xml:id="formula_4">v 1 v 2 v</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tangent modification. The tangent modification is given by</head><formula xml:id="formula_5">p new = p + s (λ r 1 t1 − a1) x 1 + (λ r 2 t2 − a2) x 2</formula><p>where t1 and t2 are prescribed tangents at a point and r is the subdivision level. We scale the prescribed tangents to have the same length as a1 and a2 on the top level, to ensure that if ti has the same direction as ai, no modification ocurs on any level. In the case of interior tangent interpolation along a singular edge, we apply this rule using the tangent to the singular curve as t 2 and interpolated interior tangent as t1. s satisfies 0 &lt; s ≤ 1; we use the value 3/4, but different value may work better depending on the mesh.</p><p>Normal modification. Normal modification is used for closed petals when a normal is prescribed. Using the same notation as before, to ensure that the surface has normal n at the vertex v we modify the vector of control points as follows:</p><formula xml:id="formula_6">p new = p − s((a1, n)nx 1 + (a2, n)nx 2 )</formula><p>where s is a blending coefficient between 0 and 1; similarly, we use 3/4 in this case.</p><p>Note that the rules requiring prescribed normal or interior tangent are just elementary building blocks which can be used to define a surface; the fact that we use such rules does not mean that we will actually require a user to specify the tangent by hand, just as using Bezier curves as internal representation does not mean that independent Bezier points have to be manually prescribed for each segment. In most cases, reasonable interior tangents and normal data can be inferred from the mesh with minimum user input. We concider how this can be done in two typical situations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Control of tangent direction along a curve.</head><p>We summarize how our rules ensure that the surface has the prescribed tangent along a curve. Whenever a new vertex is inserted on a singular edge connecting two simple singular vertices with prescribed interior tangents, we assign it a tangent, making it into a new (simple) singular vertex with prescribed interior tangent. This tangent is used in tangent modification calculations.</p><p>It is not trivial to show that this subdivision process produces a surface with desired normals, and the resulting surfaces are C 1 . The proof of C 1 continuity will be described in detail in a separate paper. Here we provide only an outline for such a proof (see Appendix A).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Tangent plane continuity across a singular curve.</head><p>As we have mentioned the rules described above provide the least common denominator for a variety of ways to specify surface behavior along singular curves. We consider one of the most common scenarios: suppose two patches are required to share a tangent plane along a singular curve, but no normal or tangent is provided at the vertices of the curve.</p><p>In this case interior tangents can be inferred from the mesh. First, for each vertex on the curve, we compute its interior tangents in both patches using standard tangent plane rules. Then we specify the projection of each interior tangent onto their difference to be the specified interior tangent on both sides <ref type="figure">(Figure 6(c)</ref>). Models in <ref type="figure" target="#fig_0">Figures 10  and 11</ref> were obtained in this way.</p><p>If tangent plane continuity is required for more than two patches user input appears to be necessary to specify a meaningful common tangent plane.</p><p>Shared normal at a singular vertex. Another common case is when it is necessary for several closed petals at a vertex to have a common normal direction. We can first compute the normal for each sector using the standard Loop subdivision rule, and then take the average of them as the specified common normal <ref type="figure">(Figure 6(b)</ref>). This approach was used in <ref type="figure" target="#fig_5">Figures 5(a)</ref> and 7.</p><p>We found these two cases to be most common but clearly it is possible to specify relations between patches in many different ways; in each case, an intermediate step should be used to convert the user-specified data to the form accepted by our algorithm.</p><p>Implementation. Most of the implementation is identical to implementation of piecewise smooth subdivision for manifold meshes. The most significant difference is the need to represent nonmanifold meshes. In our implementation, we use triangles as the main object class. Toplevel triangles contain pointers to adjacent triangles and vertices; the triangles on finer levels have pointers only to vertices, descendant and parent triangles. For singular edges we use the following approach. Suppose triangles T 1, T2, . . . Tn, n &gt; 1 share an edge. Then Ti contains a pointer to Ti + 1 for i &lt; n, and Tn contains a pointer to T1. This is compatible with manifold case n = 2 (T1 points to T2 and T1 points to T2) and allows us to obtain all necessary information about local structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results</head><p>We have implemented the algorithm described in the previous sections. The following images are examples of surfaces produced using our algorithms. The control mesh for the surfaces are rendered as gray line; for some models, the interior structures are shown in cross-sections.</p><p>In Figures 7 we specify the same normal directions for several manifold patches at a vertex. Notice that the surfaces are tangential near the fixed singular vertex. <ref type="figure">Figure 9</ref> shows the case of dart petals. The patches on two sides of the singular edge also have the same tangent plane along the edge. <ref type="figure" target="#fig_0">Figure 10</ref> shows the case when several patches have the same tangent plane along a singular curve. In <ref type="figure" target="#fig_0">Figure 11</ref>, we demonstrate how different surfaces are obtained by specifying different combinations of patches to share tangent plane along singular curve. We apply our algorithm to the X29 plane model. The original model is being modified to ensure the connectivity and preserve nonmanifold structure <ref type="figure" target="#fig_0">(Figure 12)</ref>.</p><p>Our scheme was applied to create an approximate model of the human heart which has typical nonmanifold structures of biological models. Different muscle layers are abstracted as different manifold patches and these patches are connected along singular curves <ref type="figure" target="#fig_0">(Figure 13</ref>). This model is intended to be used in immersed boundary simulations, and is based on the model developed by C. Peskin and D. McQueen.</p><p>Immmersed boundary method requires surfaces to be represented by collections of infinitely thin fibers; in the case of the heart, it was found that using surface geodesics as fibers matches well the actual structure of muscle fibers <ref type="figure" target="#fig_0">(Figure 13(c)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions and Future Work</head><p>We have demonstrated how subdivision can be applied to arbitrary nonmanifold meshes and tangent plane constraints can be imposed across the singular edges and at singular vertices of the resulting nonmanifold surface. We have also implemented the combination of this scheme with the piecewise smooth subdivision schemes of <ref type="bibr" target="#b0">[1]</ref>, which is straightforward, as the two schemes share majority of the rules. In fact, one can interpret the scheme of <ref type="bibr" target="#b0">[1]</ref> as a special case of our scheme, when some of the regular mesh edges and vertices are marked as extraordinary. However, the combined scheme while not being much different, requires more effort to describe <ref type="bibr" target="#b14">[15]</ref>.</p><p>A few important types of surfaces are excluded by our rules: for example, surfaces with conic features; developing schemes to generate such surfaces is one of the possible directions for future research.</p><p>Due to curve and normal interpolation constraints the surface can exibit undulations near the places where the singular curves have complex shape. It is unlikely in such cases a significant improvement can be achieved in our setting while using fixed-coefficient subdivision rules with small support. Analysis of the subdivision rules in almost all cases is identical to the analysis of the rules for piecewise smooth surfaces. The only case that requires special consideration is C 1 continuity of the surface at the singular curves with prescribed interior tangents along the whole curve. Complete analysis is rather tedious and will be described in a separate paper; while it is based on known techniques, the application of these techniques is nontrivial and requires introduction of extensive notation. Here we outline the basic steps of the verification.</p><p>As it is the case for all commonly used subdivision schemes, the analysis has two parts: regular case analysis and analysis of the behavior near extraordinary vertices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Regular case. All new vertices inserted on the singular edges</head><p>are regular (i.e. have three adjacent triangles in each petal). This means that the coefficients of the rules are fixed and the first subdivision step can be combined with second in an explicit form; thus, for vertices immediately adjacent to the boundary we get (see <ref type="figure">Figure</ref> </p><formula xml:id="formula_7">8 for notation) p j+1 2 = (3 + 2s) p j 0 +(1 + s) p j 1 +(3 − 2s) p j 2 +(1 − 2s) p j 3 +sp4 +s/2t j</formula><p>The rules for vectors t are one dimensional rules, e.g. midpoint subdivision rules, with an additional factor 1/2:</p><formula xml:id="formula_8">t j+1 0 = t j /2; t j+1 1 = (t j 0 + t j 1 )/4</formula><p>. As we compute tangents for newly inserted vertices on the singular edge also using a simple subdivision scheme, we can regard the tangent as just another control.</p><p>In this formulation, the scheme reduces to a variation of a quasiuniform scheme <ref type="bibr" target="#b4">[5]</ref>, with additional tangent data added along the boundary. We have analyzed the scheme for the range of s from 0 to 1 and verified that it is C 1 -continuous in all these cases.</p><p>To verify C 1 -continuity we need to consider convergence of the divided difference scheme, i.e. the subdivision scheme 2S which satisfies S ∆p = ∆Sp, where ∆ is the vector of difference operators in directions (1, 0) and (0, 1). Analysis is based on the observation that convergence and continuity of a scheme follows from contractivity of the corresponding difference scheme, which in the case of quasiuniform schemes can be reduced to contractivity of a a uniform  <ref type="figure">Figure 8</ref>: Mask of subdivision combined with tangent modification near a regular vertex on a singular edge, all coefficients are scaled by 1/8. scheme and a one-dimensional matrix scheme <ref type="bibr" target="#b4">[5]</ref>. Indeed, note that away from the boundary the only rules that are used are the standard quartic box spline subdivision rules. At any point away from the boundary, after sufficient number of subdivision steps, the limit can be computed using only the box spline rules. This means that we only need to prove existence and continuity of the limit functions at the boundary. We observe that all the irregular rules included in S can be captured by a one-dimensional matrix subdivision scheme acting on the vectors</p><formula xml:id="formula_9">Pi = [[∆1p]0i, [∆1p]1i, [∆2p]0i, [∆2p]1i,ti],</formula><p>where [∆j p]mi is the forward difference in direction (1, 0) or (0, 1) at pmi andti = 2 s ti for subdivision level s. The subdivision rules for this one-dimensional matrix scheme T can be written as</p><formula xml:id="formula_10">P2i = A even 1 pi−1 + A even 0 pi + A even −1 pi+1 P2i+1 = A odd 2 pi−2 + A odd 1 pi−1 + A odd 0 pi + A odd −1 pi+1</formula><p>The matrix coefficients for the even rule are Under some technical assumptions, a matrix scheme S converges and is continuous, if γ = S N ∞ &lt; 1 for some N where S is the difference scheme. Analysis of the difference scheme T for the matrix scheme T shows that it is contractive: we found that (T ) <ref type="bibr" target="#b6">7</ref> ∞ &lt; 1 for 0 ≤ s ≤ 1; together with some easily verifiable additional conditions, this is is known to prove that the scheme converges. We compute T ∞ explicitly as a function of s using a symbolic algebra system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Extraordinary vertices.</head><p>If we regard interior tangents as additional control points,we can write the subdivision matrix M at extraordinary vertices, such that the vector of control points p (including additional control points for tangents) satisfies Mp j = p j+1 . Using standard arguments, one can infer C 1 -continuity of the scheme from regularity and injectivity of the corresponding characteristic map. Algorithms of <ref type="bibr" target="#b16">[17]</ref> can be used to verify the properties of the characteristic map, as they require only estimates of the norm of the first and second difference schemes, which we have obtained to verify C 1 continuity in the regular case.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>(a) Three flowers F1, F2 and F3 at vertex v. (b) Four petals P1, P2, P3 and P4 at vertex v. (c) v is a simple nonmanifold vertex with 3 petals P1, P2 and P3 which share two nonmanifold edges e1 and e2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(b)). Thus, for a triangle mesh the 1-neighborhood of a vertex v consists of a collection of flowers; each flower, in turn, consists of a number of petals, bounded by singular edges incident on v.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Three types of petals. The closed petal has no singular edges, the dart petal has one and the open petal has two. Singular edges are shown as dark edges.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Domains for local parameterizations. We assign the parameterizations as follows: • closed petals are parameterized over the disk D; • dart petals are parameterized over the disk D with a singular radius r; • open petals of simple singular vertices are parameterized over the half-disk Q2;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Vertex rules: (a) Standard Loop rule, k is the valence of center vertex. If k = 3, β = 3/8k, if k = 3, β = 3/16. (b) Uniform cubic spline rule. (c) Interpolation rule. Edge rules: (d) Standard Loop rule. (e) Uniform cubic spline rule. (f) modified edge rule, the center vertex of the petal has coefficient 3/4 − γ. θ is the parameter for different cases, values are specified in the text. In the picture γ = 1/2 − 1/4 cos θ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>(a) Two tangential patches at a vertex. (b) Four patches share a tangent plane along a common edge. (c) A patch attached to a smooth surface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 : 1 i 1 c = 0, l 1 i 2 c = 0, x 2 i 2 c = 0, l 2 i</head><label>71112222</label><figDesc>(a) Surface with three manifold patches interpolating the common point smoothly with the prescribed normal direction. (b) Cross-section of (a). (c) Surface with two patches interpolate common point smoothly. (d) Cross-section of (c).A Subdominant eigenvectorsMost of the subdominant eigenvectors required by the algorithm are the same as in the case of piecewise smooth manifold subdivision. The only new case is those for the disk rule.Subdominant eigenvectors for disk rule.For a disk rule with degree k, its subdivision matrix is of size (k + 1) × (k + 1). In the following formulae, subscript c denotes the coefficient for center vertex and i is in the range {0, 1, • • • , k − 1}. = sin(2πi/k) l = 2/k sin(2πi/k) x = cos(2πi/k) l = 2/k cos(2πi/k) B Sketch of the proof of C 1 -continuity</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :Figure 10 :Figure 11 :</head><label>91011</label><figDesc>(a) Surface with an attaching patch. Two patches share same tangent plane along singular curve and the endpoints of singular curve are dart nonmanifold vertex. (b) Two attaching cones. Four patches share same tangent plane along singular curve and the endpoints of cones are dart nonmanifold vertex. Patches sharing some tangent plane along singular curve. (a) A ball with an interior patch. (b) A ball with an exterior attaching ring. (c) Two cylinders connected by two planes. Three different ways to join three patches. In each case, two out of three patches share tangent planes along the common singular curve.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 12 :Figure 13 :</head><label>1213</label><figDesc>The X29 plane model. Left: The outlook of the plane. Middle: Nonmanifold structure where the wings attach the plane body. Right: Nonmanifold structure at the cockpit. The human heart model. Left and Middle: Cross-sections from side and bottom. Right: Muscle fibers (geodesics) generated from the model.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Piecewise smooth subdivision surfaces with normal control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henning</forename><surname>Biermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adi</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denis</forename><surname>Zorin</surname></persName>
		</author>
		<idno>1-58113-208-5</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="113" to="120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Polygonization of nonmanifold implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jules</forename><surname>Bloomenthal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Keith</forename><surname>Ferguson</surname></persName>
		</author>
		<idno>ISBN 0-201-84776-0</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 95</title>
		<meeting>SIGGRAPH 95<address><addrLine>Los Angeles, California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="309" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Efficient compression of non-manifold polygonal meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>André</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Guéziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Bossen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cláudio</forename><forename type="middle">T</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;99</title>
		<imprint>
			<date type="published" when="1999-10" />
			<biblScope unit="page" from="73" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fairing of non-manifold models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andreas</forename><surname>Hubeli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marcus</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<meeting><address><addrLine>Salt Lake City, Utah</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Analysis of quazi-uniform subdivision schemes. Submitted</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Levin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Combined subdivision schemes for the design of surfaces satisfying boundary conditions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="345" to="354" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Interpolating nets of curves by smooth subdivision surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 99</title>
		<meeting>SIGGRAPH 99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
	<note>Annual Conference Series</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Using laurent polynomial representation for the analysis of non-uniform binary subdivision schemes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Computational Marthematics</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">11</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Smooth subdivision surfaces based on triangles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Loop</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
		</imprint>
		<respStmt>
			<orgName>University of Utah, Department of Mathematics</orgName>
		</respStmt>
	</monogr>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A boundary representation for form features and non-manifold solid objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yi</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gábor</forename><surname>Lukács</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SMA &apos;91: Proceedings of the First Symposium on Solid Modeling Foundations and CAD/CAM Applications</title>
		<imprint>
			<date type="published" when="1991-06" />
			<biblScope unit="page" from="45" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Interpolating meshes of boundary intersecting curves by subdivision surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ahmad</forename><surname>Nasri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer Journal</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Progressive simplicial complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jovan</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
		<idno>0-89791-896-7</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 97</title>
		<meeting>SIGGRAPH 97<address><addrLine>Los Angeles, California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="217" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Structured topological complexes: a featurebased api for non-manifold topologies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarek</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SMA &apos;97: Proceedings of the Fourth Symposium on Solid Modeling and Applications</title>
		<imprint>
			<date type="published" when="1997-05" />
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Mesh simplification with smooth surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Volpin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sheffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bercovier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Joskowicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computeraided Design</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="875" to="882" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Nonmanifold subdivision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lexing</forename><surname>Ying</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denis</forename><surname>Zorin</surname></persName>
		</author>
		<imprint/>
		<respStmt>
			<orgName>Computer Science Dept., New York Univ</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zorin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Biermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>Subdivision surfaces with boundary. submitted</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A method for analysis of c 1 -continuity of subdivision surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denis</forename><surname>Zorin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
