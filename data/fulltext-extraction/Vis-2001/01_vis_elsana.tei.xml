<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Integrating Occlusion Culling with View-Dependent Rendering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jihad</forename><surname>El-Sana</surname></persName>
							<email>el-sana@cs.bgu.ac.il.</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Neta</forename><surname>Sokolovsky</surname></persName>
							<email>netaso@cs.bgu.ac.il.</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cláudio</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
							<email>csilva@research.att.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">¢</forename><surname>At&amp;t</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Ben-Gurion University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">Gurion University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Ben-Gurion University of the Negev</orgName>
								<address>
									<postCode>84105</postCode>
									<settlement>Beer-Sheva</settlement>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Ben-Gurion University of the Negev</orgName>
								<address>
									<postCode>84105</postCode>
									<settlement>Beer-Sheva</settlement>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="department">AT&amp;T Labs-Research</orgName>
								<address>
									<addrLine>180 Park Ave., Room D265, Florham Park</addrLine>
									<postCode>07932</postCode>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Integrating Occlusion Culling with View-Dependent Rendering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We present a novel approach that integrates occlusion culling within the view-dependent rendering framework. View-dependent rendering provides the ability to change level of detail over the surface seamlessly and smoothly in real-time. The exclusive use of viewparameters to perform level-of-detail selection causes even occluded regions to be rendered in high level of detail. To overcome this serious drawback we have integrated occlusion culling into the level selection mechanism. Because computing exact visibility is expensive and it is currently not possible to perform this computation in real time, we use a visibility estimation technique instead. Our approach reduces dramatically the resolution at occluded regions.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Interactive rendering of large datasets is a fundamental issue for various applications in computer graphics. Although graphicsprocessing power is increasing every day, its performance has not been able to keep up with the rapid increase in data set complexity. To address this shortcoming, techniques, such as occlusion culling and level-of-detail rendering, are being developed to reduce the amount of geometry that is required to be rendered, while still preserving image accuracy.</p><p>The rendering time of a given polygonal dataset is mainly determined by the number of polygons sent to the graphics hardware. Hence, rendering-acceleration algorithms have tried to reduce the number of rendered polygons. These algorithms include geometric simplification and occlusion culling, which achieve their speedup through the decrease of the set of polygons sent to the graphics hardware. Geometric simplification reduces the number of the rendered triangles by reducing the resolution (number of triangles per area unit) of the dataset, while occlusion culling manages to reduce the size of the rendered-polygons set by culling invisible polygons.</p><p>In a certain way geometric simplification and occlusion culling achieve their respective speedups through orthogonal operations. Occlusion culling algorithms cull occluded triangles, but these techniques still render small triangles, which might not contribute significantly to the final image. Geometric simplifications, on the other hand, manage to reduce the number of triangles that occupy small regions, but they still render invisible triangles. The combination of both approaches can potentially lead to great reduction on the number of rendered triangles, while not compromising image quality. To our knowledge, the only other work that combines level-of-detail selection with visibility determination is the recent paper by Andujar et al. <ref type="bibr" target="#b1">[2]</ref> (see section 2).</p><p>View-dependent rendering provides different level-of-detail over different regions of the same surface. The selection of appropriate level of detail is based on view-parameters such as illumination and</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">View-Dependent Simplification</head><p>The vast majority of previous work on geometric simplification for level-of-detail-based rendering has concentrated on computing a fixed set of view-independent levels of detail. At runtime an appropriate level of detail is selected based on viewing parameters. We refer the interested reader to the recent survey and comparison by Cignoni et al. <ref type="bibr" target="#b5">[6]</ref>.</p><p>Recent advances on generating multiresolution hierarchies take advantage of the temporal coherence to adaptively refine or simplify the polygonal datasets from one frame to the next in a viewdependent manner. In particular, adaptive levels of detail have been used in terrains by Gross et al. <ref type="bibr" target="#b21">[22]</ref> and Lindstrom et al. <ref type="bibr" target="#b32">[32]</ref>. <ref type="bibr">Gross et al.</ref> define wavelet space filters that allow changes to the quality of the surface approximations in locally-defined regions. Lindstrom et al. define a quadtree-based block data structure that provides a continuous level of detail representation, and Duchaineau et al. <ref type="bibr" target="#b10">[11]</ref> developed real-time optimally adapting meshes (ROAMing) for terrains. However, these approaches provide elegant solutions for terrains and other datasets that are defined on a grid.</p><p>Progressive meshes have been introduced by Hoppe <ref type="bibr" target="#b24">[25]</ref> to provide a continuous resolution representation of polygonal meshes. Progressive meshes are based upon two fundamental operatorsedge collapse and its dual, the vertex split, as shown in <ref type="figure" target="#fig_0">Figure 1</ref>.</p><formula xml:id="formula_0">A polygonal mesh ¦ § © §</formula><p>is simplified into successively coarser meshes § by applying a sequence of edge collapses. One can retrieve the successively higher detail meshes from the simplest mesh § by using a sequence of vertex-split transformations. The se-</p><formula xml:id="formula_1">quence § " ! $ # &amp; % ( ' 0 ) 1 ! 2 # 3 % ( ' 0 ) 4 5 5 6 5 6 7 6 5 8 ! $ # &amp; % ( ' 0 ) " 9 4 @ A</formula><p>is referred to as a progressive mesh representation.</p><p>Xia et al. <ref type="bibr" target="#b42">[42]</ref> developed the Merge Trees as a data structure built upon progressive meshes to enable real-time view-dependent ren- dering of an object. These trees encode the vertex splits and edge collapses for an object in a hierarchical manner. Hoppe <ref type="bibr" target="#b25">[26]</ref> has independently developed a view-dependent simplification algorithm that works with progressive meshes. This algorithm uses the screenspace projection and orientation of the polygons to guide the runtime view-dependent simplifications. Luebke and Erikson <ref type="bibr" target="#b33">[33]</ref> define a tight octree over the vertices of the given model to generate hierarchical view-dependent simplifications. If the screen-space projection of a given cell of an octree is too small, all the vertices in that cell are collapsed to one vertex. De Floriani et al. <ref type="bibr" target="#b9">[10]</ref> have introduced multi-triangulation (MT). Decimation and refinement in MT are achieved through a set of local operators that affect fragments of the mesh. The dependencies between these fragments are then used to construct a directed acyclic graph (DAG) of these fragments. Gueziec et al. <ref type="bibr" target="#b22">[23]</ref> demonstrate a surface partition scheme for a progressive encoding scheme for surfaces in the form of a DAG. Klein et al. <ref type="bibr" target="#b29">[29]</ref> have developed an illumination-dependent refinement algorithm for multiresolution meshes. Schilling and Klein <ref type="bibr" target="#b36">[36]</ref> have introduced a refinement algorithm that is texture dependent. El-Sana et al. <ref type="bibr" target="#b13">[14]</ref> have developed Skip Strip, a data-structure that efficiently maintains triangle strips during view-dependent rendering. View-dependent rendering schemes require the existence of the entire dataset in main memory. To overcome the memory size drawback El-Sana and Chiang <ref type="bibr" target="#b4">[5]</ref> have developed an external memory view-dependent simplification. Shamir et al. <ref type="bibr" target="#b38">[38]</ref> have developed a view-dependent approach that handles dynamic environments with arbitrary internal deformation. They have also introduced the T-DAG data structure to support their approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">View-Dependence Trees</head><p>The View-Dependence Tree was introduced by El-Sana and Varshney <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b15">16]</ref> as a compact multiresolution hierarchical data-structure that supports view-dependent rendering. In fact, for a given input dataset the view-dependence tree construction often leads to a forest (set of trees) since not all the nodes can be merged together to form one tree. View-dependence trees are constructed bottom-up by recursively applying the vertex-pair collapse operation (see <ref type="figure" target="#fig_0">Figure 1</ref>). The order of the collapses is determined by the simplification metric. This data structure (tree) differs from other previous work <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b42">42]</ref> in that it enables topology simplification, does not store explicit dependencies, and handles non-manifold cases. At run-time the viewdependence tree is used to guide the selection of the appropriate level of detail based on view-parameters such as view position and illumination.</p><p>To enable topology simplification, pair of vertices that are not connected by an edge are allowed to collapse. This allows merging of unconnected components. Such a vertex pair is said to be connected by a virtual edge, while the original model edges are referred to as real edges. To handle non-manifold cases, a more general scheme is used so that when a vertex split occurs, more than two new adjacent triangles can be added that share the newly created edge (in the case of a manifold each edge is shared by no more than two triangles).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Visibility Culling Algorithms</head><p>Occlusion culling is a technique whose goal is to determine which geometry is hidden from the viewer by other geometry. Such occluded geometry need not be processed by the graphics hardware since it will not contribute to the final image produced on the screen. Occlusion culling, also known as visibility culling, is especially effective for scenes with high depth complexity, due to the large amount of occlusion that occurs. In such situations, much geometry can often be eliminated from the rendering process. Starting with the pioneering work of Airey et al. <ref type="bibr" target="#b0">[1]</ref> and Teller and Séquin <ref type="bibr" target="#b41">[41]</ref> on precomputing lists of potentially visible geometry from cells, visibility culling grew into an important area of research in computer graphics. We refer the interested reader to the recent surveys by Cohen-Or et al. <ref type="bibr" target="#b6">[7]</ref> and Durand <ref type="bibr" target="#b11">[12]</ref>.</p><p>Roughly speaking, there are several classes of occlusion algorithms (for a more complete classification, see <ref type="bibr" target="#b6">[7]</ref>):</p><p>-image-precision algorithms, which are generally classified as those which perform visibility computations with image precision, i.e. using depth values <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b37">37]</ref> or occlusion maps <ref type="bibr" target="#b44">[44]</ref>;</p><p>-object-precision algorithms, which perform visibility computations with object precision, usually by finding a set of large occluders which can be used to determine if other objects (or a hierarchy of objects) in a scene are visible <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b27">28]</ref>;</p><p>-and from-region algorithms, which perform visibility computations not for a single viewpoint, but instead compute the set of potentially visible cells for a whole region. These techniques have been the source of considerable research recently <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b35">35]</ref>.</p><p>Occlusion culling techniques are usually conservative, producing images that are identical to those that would result from rendering all of the geometry. However, they can also be approximate techniques <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b30">30,</ref><ref type="bibr" target="#b31">31,</ref><ref type="bibr" target="#b44">44]</ref> that produce images that are mostly correct, in exchange for even greater levels of interactivity. The approximate approaches are more effective when only a few pixels are rendered incorrectly, limiting any artifacts that are perceivable to the viewer.</p><p>Along the same line as our work, Andujar et al. <ref type="bibr" target="#b1">[2]</ref> propose a hybrid technique which combines level-of-detail rendering with visibility. In their work, they define the term "hardly visible sets" (HVS), which are subsets of the potentially visible cells that contributes only a small number of pixels to the overall picture. Then, they propose a stratified rendering framework which uses a userdefined error bound to choose from a fixed set of level-of-detail representations based on the HSV error estimates.</p><p>Another approach to approximate visibility is based on using a volumetric representation, that is, instead of performing geometric visibility computations, one can compute a volume which has intrinsic properties related to the "density" of geometry in the environment, and approximate the visibility between regions by computing the volume opacity between regions. This approach was pioneered by Sillion <ref type="bibr" target="#b39">[39]</ref> in the context of speeding up visibility computations for a radiosity system. It is extended in <ref type="bibr" target="#b40">[40]</ref> into a multi-resolution framework. Volumetric visibility was independently developed by Klosowski and Silva <ref type="bibr" target="#b30">[30,</ref><ref type="bibr" target="#b31">31]</ref> in their PLP system (see below), where it is used to roughly estimate the order of projection of the geometry.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Time-Critical Algorithms</head><p>Several authors have addressed the problem of achieving constant frame processing of very large datasets for different graphics and geometry algorithms <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b34">34,</ref><ref type="bibr" target="#b43">43]</ref>.</p><p>Funkhouser and Séquin <ref type="bibr" target="#b17">[18]</ref> propose an adaptive display algorithm for rendering complex virtual environments. Their rendering algorithm achieves a near constant frame rate by adapting the level of detail B of each object by using a constrained optimization algorithm, which tries to generate the "best" image possible within the allowable time budget. In their technique they use the occlusion culling algorithm of Teller and Séquin <ref type="bibr" target="#b41">[41]</ref> to avoid rendering geometry which is not visible through the portals. At a high-level our technique can be seen as a finer grain version of their work. There are two main differences:</p><p>-we employ view-dependent level-of-detail algorithms which generate smooth transitions, and essentially provides continuous models;</p><p>-the occlusion-culling technique we use is only approximate, but it can account for a larger class of occlusion types. In particular the models do not need to be composed of only cells and portals.</p><p>The Prioritized-Layered Projection (PLP) algorithm, introduced by Klosowski and Silva <ref type="bibr" target="#b30">[30,</ref><ref type="bibr" target="#b31">31]</ref>, is an approximate occlusion culling technique. Rather than performing (expensive) conservative visibility determinations, PLP is an aggressive culling algorithm that estimates the visible primitives for a given viewpoint, and only renders those primitives that it determines to be most likely visible, up to a user-specified budget. Consequently, PLP is suitable for generating partially correct images for use in a time-critical rendering system. PLP works by initially creating a partition of the space occupied by the geometric primitives. Each cell in the partition is then assigned, during the rendering loop, a probabilistic value indicating how likely it is that the cell is visible, given the current viewpoint, view direction, and geometry in the neighboring cells. The intuitive idea behind the algorithm is that a cell containing much geometry is likely to occlude the cells behind it. At each point of the algorithm, PLP maintains a priority queue, also called the front, which determines which cell is most likely to be visible and therefore projected next by the algorithm. As cells are projected, the geometry associated with those cells is rendered, until the algorithm runs out of time or reaches its limit of rendered primitives. At the same time, the neighboring cells of the rendered cell are inserted into the front with appropriate probabilistic values. It is by scheduling the projection of cells as they are inserted in the front that PLP is able to perform effective visibility estimation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Our Approach</head><p>Rendering very large polygonal datasets at interactive rates is one of the fundamental problems of computer graphics. The time spent in rendering a polygonal dataset is (mostly) proportional to the number of triangles sent to the graphics hardware. £ Therefore, reducing the number of triangles sent to the graphics hardware accelerates the rendering of polygonal datasets. Such reduction should be achieved without noticeable loss of fidelity. Several solutions have been developed to address this problem such as geometric simplification, occlusion culling and image-based rendering.</p><p>Level-of-detail rendering and occlusion culling techniques have successfully reduced the number of triangles sent to the graphics hardware while preserving the visual appearance of the rendered 3D polygonal scenes. It is important to note that these two approaches have reduced the number of triangles in two orthogonal ways (refer to section 1).</p><p>Our approach is based on integrating these two fundamental approaches -level-of-detail rendering and occlusion culling -into one £ In some cases, the rasterization phase can also be the bottleneck (e.g., volume rendering based on texture mapping), and if a number of very large polygons are sent to the graphics hardware the rasterization cost can potentially limit the frame rate. algorithm in a simple and intuitive fashion. We have developed an algorithm that successfully integrates view-dependent rendering with occlusion culling. Our occlusion culling algorithm is an approximate occlusion culling technique. Instead of performing expensive conservative occlusion culling, our algorithm estimate occlusion probability by using an approximate occlusion culling technique similar to the prioritized-layered projection (PLP) algorithm (refer to section 2). Since the occlusion culling algorithm is integrated in the view-dependent framework, it achieves additional reduction that contributed by low level-of-detail for far-from-viewer regions. Furthermore, the use of view-dependent rendering avoids the generation of "black" regions in PLP resulting of a shortage in triangle budget. Instead of removing hidden triangles, as in typical occlusion culling algorithms, our algorithm reduces the level of detail in different regions proportional to the occlusion probability of these regions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Estimating Visibility</head><p>Our approach is based on estimating visibility of a region from a given viewpoint. Such approximation should be as accurate as possible with the time limit between two consecutive frames at interactive rates. It is important to note that we have chosen to approximate visibility because it is quite hard (and at this time computationally intractable) to compute exact visibility within the given limited time.</p><p>For a given viewpoint </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>#</head><p>. To determine the occlusion factor we first impose a three-dimensional uniform grid over the bounding box of the given scene. The dimensions of the grid depend on the depth complexity of the scene. Then we compute visibility of a cubic cell from a given viewpoint in way similar to computing opacity of cell in volumetric representation. Therefore, for each cell, which includes triangles, we need to define an attribute equivalent to opacity in volumetric representation. Similar to Klosowski and Silva <ref type="bibr" target="#b31">[31]</ref> we shall refer to this attribute as solidity of a cell.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Solidity of a Cell</head><p>We would like to define a solidity of a cell as an indicator for how this cell occludes other cells of the imposed 3D grid. It is obvious that the more primitives contained within the cell the more it may occlude other cells. Therefore, we use clutter as the basic factor in determining solidity of a cell.</p><p>Let us consider shooting a ray </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F</head><p>. Determining whether a ray passes a cell could be very expensive and may not be feasible within a duration of one frame for large datasets. Therefore, we compute a probability that a ray passes a cell instead of exact expensive determination.</p><p>The solidity of a cell is inversely proportional to the probability that any ray passes that cell. Since our approach deals with static scenes we have chosen to compute solidity in a preprocessing stage. Therefore, we do not have the time limits constraints as in real-time interaction.</p><p>A ray  . Using this principle we have developed two approaches to compute the solidity of a cell. One is based on projecting the polygons inside the cell on its sides; and the other is based on shooting ray across the cell. Next we shall describe these two approaches:</p><p>-Face projection. This technique is based on projecting polygons on the six faces of a cell. We refer to the six images created by projecting a polygon on the six faces of a cell as Projection Area <ref type="figure" target="#fig_8">Figure 2</ref>: Computing solidity using orthogonal projection: two faces of a 2D cell.</p><p>the projection area of a polygon. Then we compute the solidity of a cell as the ratio between the union of the projection areas of all polygons inside a cell and the total area of the six faces of the cell. Since we are using parallel projection, it is enough to project each polygon on three orthogonal faces and then compute the solidity with respect to the selected faces. If </p><formula xml:id="formula_2"># C G V U P W C S 7 P X )A is the projection area of a polygon ) then ! 5 G Y % ( ' à T ' 0 ) 2 H 0 F A¨ c b e d g f i h 5 p 1 q s r t u 2 v 0 w # C G 5 U P R C Y S 7 P X )A x y f y 5 u t s uvw P R C S 7 P I A<label>(1)</label></formula><p>-Ray shooting. In this technique we shoot a number of rays into a cell and compute the number of rays that pass the cell. Then we compute the solidity as the ratio between the number of rays that do pass the cell and the total number of rays (the "shot rays") as in Equation 2. To provide a meaningful solidity value for a cell we would like to shoot rays in a uniform fashion. Therefore we bound the cell we intend to compute its solidity value with a sphere, virtually subdivide the surface of the sphere into uniform regions, and then shoot one random ray through each region. As result of the symmetry of spheres, it is enough to shoot rays for half of the bounding sphere.</p><formula xml:id="formula_3">! 5 G Y % ( ' à T ' 0 ) 2 H 0 F A¨ c G " ) P H ! P ! i ! S` P H ! G i ) P H ! (2) E 6 D P ! i ! S` P H ! G " ) P H !<label>(3)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Visibility of a Cell from Viewpoint</head><p>We would like to estimate visibility from a viewpoint. Therefore, we need to estimate the probability for a vertex to be visible from a given viewpoint The rendering of a volume data can be done by traversing a ray from viewpoint into the volume dataset in a front-to-back or backto-front fashion. In back-to-front rendering, each voxel occludes the preceding one in proportion to its color and opacity. Opaque voxels contribute more to the final pixel than the transparent ones. Front-to-back traversal uses the same basic process but traverses the voxels from the viewpoint to the voxels. The benefit of the frontto-back traversal is that once the maximum opacity for that pixel is reached, the traversal process can stop without traversing the rest of the dataset.</p><p>In our approach we treat solidity as opacity value and use frontto-back traversal to compute the visibility (occlusion) of a cell. We initialize the occlusion probability to contributes a certain "transparency", which is used for attenuation:</p><formula xml:id="formula_4">) 2 E d X 0 F A $ A S 9 ef 1 g 5 f 1 g h Q i where S 9 ef 1 g 7 f g 1 h &amp; i</formula><p>is normalized by the maximum cell diagonal, so ) k j E</p><p>. (Note that if a cell has solidity equal to one, its transparency is zero.)</p><formula xml:id="formula_5">G F F % ( l 3 ! 7 ' a G " m # C G n P n ' % ( ' 0 ) 2 H 0 A o p q d X 0 F p A p 9 4 r q )<label>(4)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Adaptive Level of Detail</head><p>Once the view-dependence trees have been constructed off-line, it is possible to construct an adaptive level-of-detail mesh representation at run-time. Real-time adaptive mesh reconstruction requires the determination of a list of vertices and the list of triangulation amongst them. We refer to the vertices selected for display at a given frame as display vertices list and triangles for display as display triangles list. The selection of active nodes is based on view-parameters and occlusion culling which are mainly determined by the viewpoint. On each change of the view-parameters we scan the active nodes list. For each visited node we determine whether a node requires an increase, reduction, or no change on its resolution. We increase the resolution for a node by performing split operation, and reduce the resolution by performing merge operation. To simplify the explanation, we shall refer to the no-change operation as nop. The two adapt operations split/merge change the active nodes list that influences the display vertices and display triangles lists.</p><p>The split operation involves removing the node from the active nodes list and inserting its two children into the active nodes list. In addition, we need to update the active triangles list, by inserting the newly created adjacent triangles due to this split. The added triangles are obtained by looking at the adjacent triangle lists stored in the two children nodes (refer to <ref type="bibr" target="#b14">[15]</ref>). The merge operation is the dual operation, and it also requires an update of the active nodes list accordingly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">View-Parameter Influence</head><p>In view-dependent rendering, we would like to represent objects with respect to their visual importance in the final rendered image. Except for silhouettes, we would like to represent regions in a resolution (in terms of polygons count) on the 3D space proportional to their contribution in the final rendered image. Hence, regions that are close-to-viewer and visible would enjoy high level of detail while occluded or far-from-viewer regions would be represented in low resolution.</p><p>The decision on the next adapt operation (split, merge, or nop) for a node depends on the current resolution of the node, the viewparameters, and occlusion probability of the node with respect to the current viewpoint. We compute the contribution of view-parameters by considering the current viewpoint and the set of current light sources. Each factor (viewpoint or light source) determines appropriate level of detail that is computed by taking into account distance from the node and the difference between its direction (viewdirection, or light direction) and the normal of the inspected viewdependence node.</p><p>The target level of detail for a node is the lowest level of detail among the various level of detail computed by viewpoint and light sources. In our level-of-detail determination scheme, regions that are far from the viewpoint have lower level of detail, and close regions have higher level-of-detail. The difference between the viewdirection (or light direction) and the node normal results in high resolution for regions facing the viewer and coarse level of detail for back-facing regions. Silhouette regions are handled separately.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Level of Detail Selection</head><p>The selection of level of detail that is based on view-parameters assigns high resolution to close nodes that are not visible from the current viewpoint. To avoid such serious drawback we incorporate occlusion culling in the above scheme. The occlusion-culling factor cannot increase resolution; it can only reduce it. This is an immediate result of the fact that occluded-close regions are represented in more triangles than their contribution to the final rendered image. Therefore, we determine the level of detail at a node by computing its view-parameters contribution and estimate its occlusion probability. For occlusion probability</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D 6 D</head><p>, the selected level of detail is the one determined by the view-parameters, and for occlusion probability E 6 D w e would like to select the lowest level of detail possible. Hence, the probability value can reduce the level of detail at a node from the level of detail determined by the view-parameters to the lowest possible one as expressed in Equation 5.</p><p>Note that in Equation 5 </p><formula xml:id="formula_6">s u t w v</formula><formula xml:id="formula_7">s u t w v y | x q 2 E t A } s k t w v f 2 z t } s u t w v q p 1 z 3 2 { d<label>(5)</label></formula><p>We have found out that even though our occlusion culling is neither exact nor conservative, we have achieved very high fidelity while greatly reducing the number of triangles. This is a result of the use of dependences among nodes on the view-dependence trees. These dependences (implicit and explicit) were introduced to prevent fold-overs in run-time level-of-detail selection by preventing the split or merge of nodes before others. Hence, these dependencies often restrict the refinement of nodes, which might have otherwise refined to comply with the visual fidelity or error metric. Such behavior seems to improve our occlusion probability approach as result of:</p><p>-Dependencies prevent one node that inaccurately assigned high occlusion probability to select very low resolution.</p><p>-We give high priority for high resolution to overcome inaccuracy in computing the occlusion probability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Implementation Details</head><p>We have implemented our algorithm in C/C++ on Unix (and GNU/Linux) operating systems. In our current implementation we have carefully selected efficient data structures, but have not fully optimized our code. Our approach is aimed at rendering large three-dimensional datasets. Therefore, we reduce the memory requirements of viewdependence trees by assigning the geometry of a parent node to one of its children geometry. Such scheme of the view-dependence trees stores geometry information such as vertex position, normal, and color on the leaves of the tree, and internal nodes keep pointers to appropriate addresses where their geometry is stored. These changes reduce the overhead of storing the view-dependence tree to only Y "</p><p>times more than the 3D representation of the original mesh. We compute the occlusion probability by traversing the line segments that connect the viewpoint and the inspected node. We have implemented an algorithm similar to Bresenham's algorithm, which is based on integer increments. The algorithm starts the traversal from the viewpoint, and proceeds to the inspected node. It stops when the occlusion probability value exceeds E 6 D o r it has visited all the cells intersecting the traversed segment. In our current implementation, we compute the occlusion probability along the segment that connects the center of the cell that includes the viewpoint and the center of the cell that include the inspected node. In addition, we assign the same occlusion probability for the view-dependence nodes that belong to the same cell. We have also managed to reduce the time spent on estimating occlusion probability by avoiding unnecessary re-computation. We achieve this by using a one-byte counter for each cell. We update this counter to be equal to the current frame counter after each time we compute the occlusion probability for a cell. We recompute occlusion probability for a cell only if its one-byte counter is different from the current frame counter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results</head><p>We have tested our unoptimized implementation on various datasets and have received encouraging results. In this section we report and analyze some of these results.</p><p>View-dependent rendering algorithms are known for their ability to take advantage of coherence between consecutive frames. Hence, it makes more sense to compare its performance over sequences of frames and not over one isolated frame. Therefore, all the results we report were obtained using a sequence of frames.</p><p>The results were achieved using a Pentium-III machine with 512 MB of memory and an Nvidia GeForce graphics card. In <ref type="table" target="#tab_1">Table 1</ref> we report the average number of split/merge operations, number of triangles at each frame, and the average time for a frame. As can be seen, we have achieved interactive frame rates even for large datasets. To evaluate the improvement of integrating occlusion culling with view-dependent rendering we have performed tests that compare the performance of our current algorithm (viewdependent rendering that supports occlusion culling) with previous view-dependent rendering algorithm <ref type="bibr" target="#b14">[15]</ref>. In these tests we consider two factors -image quality and frame rates.</p><p>For each dataset we record a path which includes the camera parameters and illumination. Then, we compare the performance of the two algorithms over the same path for each dataset. For each dataset, we compare the average frame rates and the average quality of the two algorithms. It is easy to compute the frame rate after measuring the run time of the entire sequence. Measuring the image quality is not that simple. For each frame, the image quality is determined by the set of rendered triangles which are constructed from the selected level-of-detail. For the same simplification metric, the camera parameters and illumination determine the selected level-of-detail. Comparing the image quality could be done by either comparing the two images pixel-to-pixel or by comparing the set or triangles that contribute to the rendered images. We chose to use the second approach because comparing the images pixel-to-pixel may not be accurate as result of the floating-point calculation during the rendering process. In the last three columns of <ref type="table" target="#tab_1">Table 1</ref> we report results of comparing the average frame time and image quality for the two algorithms using different datasets. The column titled VDR includes the average time per frame for view-dependent rendering (without occlusion culling), and the column VDR+OC includes the average time per frame for view-dependent rendering using occlusion culling to reduce the number of rendered triangles. For these results we have used the first approach -Face projection -to approximate the solidity of the cells. The time to estimate the occlusion probability (in real-time) depends primarily on the size of the imposed 3D grid. <ref type="figure">Figure 8</ref> shows three images (a, b, and c) of a four spheres dataset. <ref type="figure">Figure 8a</ref> shows the four-spheres dataset, <ref type="figure">Figure 8b</ref> shows the solidity values of each cell represented by the size of the blue points, and <ref type="figure">Figure 8c</ref> depicts the occlusion probability along the segment . The saturation of the red color indicates the occlusion probability value. We have assigned red color for occlusion probability . As can be seen in these images cluttered cells were assigned large solidity values (larger blue points in <ref type="figure">Figure 8b</ref>) and occluded cells were assigned large occlusion probability values (black segment color in <ref type="figure">Figure 8c</ref>). <ref type="figure">Figure 6</ref> depicts the influence of occlusion probability on the selected level of detail. <ref type="figure">Figure 6</ref> shows two images of nested spheres. <ref type="figure">Figure 6a</ref> shows the final images and <ref type="figure">Figure 6b</ref> shows the outer sphere in wire-frame in order to show the inner sphere. In <ref type="figure">Figure 6b</ref> we depict the reduction of the resolution of the occluded regions.  <ref type="bibr" target="#b23">[24]</ref>). These images were generated in the same approach that we use to produce the images in <ref type="figure">Figure 9</ref>. The difference between the top images in <ref type="figure" target="#fig_0">Figure 10b</ref> and 10c is less that 0.1% of the visible triangles. Since the images in <ref type="figure" target="#fig_0">Figure 10</ref> do not depict well the complexity of the Section01A model, we show it in a better detail in <ref type="figure" target="#fig_11">Figure 5</ref>. <ref type="figure">Figure 7</ref> shows full resolution, view-dependent rendering, and view-dependent rendering with occlusion culling of Section16 of the Power Plant model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion and Future Work</head><p>We have presented a novel approach for incorporating occlusion culling within the framework of view-dependent rendering. Our approach manages to reduce the number of triangles sent to the graphics hardware without compromising image quality. Our idea is based on estimating occlusion probability rather than performing expensive conservative visibility determinations. To approximate visibility we impose a 3D uniform grid over the bounding box of the scene. Then we assign a solidity value for each grid-cell based on the polygons included in that cell. We compute the occlusion probability for a node by traversing the cells along the segment that connects the node with the viewpoint. The computed occlusion probability and the view-parameters are used to determine the appropriate level of detail for each frame.</p><p>We see the scope for future work in designing occlusion culling algorithms that can take advantage of coherence between consecutive frames. Such algorithms can provide better performance when incorporated into view-dependent rendering framework.</p><p>Our current techniques for approximating visibility are quite simple, and are likely not optimal ones. Also, there are several approximations that we are performing in the calculations which do not  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Edge collapse and vertex split.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>#</head><label></label><figDesc>the degree of occlusion of the region C w ith respect to the viewpoint</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>C t hrough the cell F.</head><label>cell</label><figDesc>Since we are considering opaque polygons a ray C m ay or may not leave the cell F . If a ray C t hat enters the cell F manages to leave it we say that C p asses</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>C p asses a cell F</head><label>cell</label><figDesc>if it does not hit any polygon inside the cell</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>F</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>of the three orthogonal faces of F , and</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>#.</head><label></label><figDesc>Our estimation is based on the solidity of the cells between the viewpoint # and the vertex . In the first step of our algorithm we determine the set of cells ! u t hat contribute to computing the visibility of the vertex from the viewpoint # . We define the set ! u a s the cells that intersect the line segment that connects the viewpoint # with the vertex . Computing the visibility of a cell from a viewpoint was inspired by rendering volume data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 3 :</head><label>3</label><figDesc>Computing solidity by shooting ray through bounding sphere.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>( 2 )</head><label>2</label><figDesc>cell we computed the accumulating solidity along the segment # (as shown in Equation 4). The contribution of a visited cell to the solidity along a segment depends on the following two factors: (1) The solidity d o f the visited cell: Cells with high solidity have higher probability to occlude cells behind it. The portion of the segment # that lies within that cell: cells that include longer portions contribute more than cells that include smaller fractions of the segment. Each segment 9 4</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 4 :</head><label>4</label><figDesc>The determination of the display lists is controlled by the selection of the active nodes of the view-dependence trees. The list of active nodes is a subset of nodes of the view-dependence trees that forms a breadth cut of the view-dependence trees as shown in figure 4. In the active nodes list, low resolutions (in term of triangles) are associated with nodes that are close to the top of the tree and high resolutions are associated with the nodes that are close to the bottom of the trees. Active nodes list in view-dependence trees.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 5 :</head><label>5</label><figDesc>A close view of the model Sect01A (Power Plant). The images in the Figures 7, 9, and 10, and compare the performance of view-dependent rendering, in terms of resolution, with and without the use of occlusion culling. The top row in Figure 9 shows three images of the Car Engine model from the same viewpoint: (a) full resolution, (b) view-dependent rendering, and (c) view-dependent rendering with occlusion culling. In the bottom row we show a side view of each instance in wire-frame mode to depict the triangle reduction. These images show that we gain a considerable reduction in the number of triangles by integrating occlusion culling with view-dependent. Note that the two top images Figure 9b and 9c differ in less that 0.05% of the visible triangles. Figure 10 shows images of the Section01A model (of the Power Plant dataset</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 6 :Figure 7 :Figure 8 :Figure 9 :Figure 10 :</head><label>678910</label><figDesc>Occlusion probability contribute to the lower resolution of the inner sphere. necessarily capture the correct physical phenomena. An interesting avenue for future work is to develop more accurate techniques for approximating visibility. Section01A of Power Plant: a) Full resolution model, b) View-dependent rendering, and c) View-dependent rendering with occluding culling support. Occlusion probability along a line that passes through four spheres scene. Car Engine: a) Full resolution model, b) View-dependent rendering, and c) View-dependent rendering with occluding culling support. (a) 748K triangles (b) 474K triangles (c) 66K triangles Section01A of Power Plant: a) Full resolution model, b) View-dependent rendering, and c) View-dependent rendering with occluding culling support.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Run time over a sequence of frames for various datasets by different view-dependent rendering algorithms.</figDesc><table><row><cell>Dataset</cell><cell cols="2">Original</cell><cell cols="2">VDR+OC Average/frame</cell><cell cols="2">Average Time(ms)/frame</cell><cell>Image Quality</cell></row><row><cell></cell><cell cols="5">Vertices Triangles Triangles Split/Merge (K) VDR</cell><cell>VRD+OC</cell><cell>Triangles( )</cell></row><row><cell>Hiding Bunny</cell><cell>38 K</cell><cell>75 K</cell><cell>30 K</cell><cell>1.4 K</cell><cell>55</cell><cell>39</cell><cell>0.0</cell></row><row><cell>Car Engine</cell><cell>70 K</cell><cell>140 K</cell><cell>52 K</cell><cell>2.1 K</cell><cell>93</cell><cell>51</cell><cell>0.23</cell></row><row><cell>Geometry Objs</cell><cell>95 K</cell><cell>190 K</cell><cell>63 K</cell><cell>2.4 K</cell><cell>91</cell><cell>54</cell><cell>0.25</cell></row><row><cell>Section16</cell><cell>597 K</cell><cell>366 K</cell><cell>69 K</cell><cell>2.9 K</cell><cell>96</cell><cell>52</cell><cell>0.5</cell></row><row><cell>Terrain</cell><cell>262 K</cell><cell>522 K</cell><cell>71 K</cell><cell>3.1 K</cell><cell>110</cell><cell>61</cell><cell>0.01</cell></row><row><cell>DragonTeam</cell><cell>320 K</cell><cell>650 K</cell><cell>74 K</cell><cell>4.8 K</cell><cell>115</cell><cell>64</cell><cell>0.5</cell></row><row><cell>Section01A</cell><cell>507 K</cell><cell>748 K</cell><cell>81 K</cell><cell>5.1 K</cell><cell>120</cell><cell>75</cell><cell>0.3</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Thanks to Wagner Corrêa for useful criticisms. We are grateful to the Walkthru Group at the University of North Carolina for making the Power Plant Model available.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Towards image realism with interactive update rates in complex virtual building environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Airey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Rohlf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Brooks</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (1990 Symposium on Interactive 3D Graphics)</title>
		<imprint>
			<date type="published" when="1990-03" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="41" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Integrating occlusion culling and levels of detail through hardly-visible sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Andújar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Saona-Vázquez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Navazo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Brunet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="499" to="506" />
			<date type="published" when="2000-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Extending graphics hardware for occlusion queries in opengl</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Huttner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH / Eurographics Workshop on Graphics Hardware</title>
		<imprint>
			<date type="published" when="1998-08" />
			<biblScope unit="page" from="97" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Time management, simultaneity and timecritical computation in interactive unsteady visualization environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">T</forename><surname>Bryson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Johan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;96</title>
		<imprint>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="255" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">External memory view-dependent simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-J</forename><surname>Chiang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="139" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A comparison of mesh simplification algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="54" />
			<date type="published" when="1998-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visibility, problems, techniques and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chrysanthou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Drettakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Siggraph 2000 course notes</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Conservative visibility and strong occlusion for viewspace partitioning of densely occluded scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Fibich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Halperin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zadicario</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="243" to="253" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Real-time occlusion culling for models with large occluders</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Coorg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Teller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1997 Symposium on Interactive 3D Graphics</title>
		<imprint>
			<date type="published" when="1997-04" />
			<biblScope unit="page" from="83" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Efficient implementation of multi-triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Magillo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;98</title>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">ROAMing Terrain: real-time optimally adapting meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sigeti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Aldrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mineev-Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">A multidisciplinary survey of visibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Durand</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>included in [7</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Conservative visibility preprocessing using extended projections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Durand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Drettakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Thollot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Puech</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIG-GRAPH 2000</title>
		<meeting>SIG-GRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="239" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Skip strips: Maintaining triangle strips for view-dependent rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Azanli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;99</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Generalized view-dependent simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="83" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Parallel construction and navigation of view-dependent virtual environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference on Visual Data Exploration and Analysis</title>
		<imprint>
			<publisher>SPIE Press</publisher>
			<date type="published" when="1999-01" />
			<biblScope unit="page" from="62" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Real-time acoustic modeling for distributed virtual environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Min</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Carlbom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 1999</title>
		<meeting>SIGGRAPH 1999</meeting>
		<imprint>
			<date type="published" when="1999-08" />
			<biblScope unit="page" from="365" to="374" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sequin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 1993</title>
		<meeting>SIGGRAPH 1993</meeting>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="247" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Time-critical multiresolution rendering of large complex models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gobbetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bouvier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="785" to="803" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">A quality knob for non-conservative culling with hierarchical z-buffering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Greene</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Hierarchical Z-buffer visibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Greene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="231" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Fast multiresolution surface meshing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gatti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Staadt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;95</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Surface partitions for progressive transmission and display, and dynamic simplification of polygonal surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Guéziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lazarus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Horn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings VRML 98</title>
		<meeting>VRML 98<address><addrLine>Monterey, California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="25" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Power plant dataset</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hill</forename><surname>Unc Chapel</surname></persName>
		</author>
		<ptr target="http://www.cs.unc.edu/˜geom/Powerplant/" />
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;96</title>
		<meeting>SIGGRAPH &apos;96</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH, ACM Press</publisher>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">View-dependent refinement of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;97</title>
		<meeting>SIGGRAPH &apos;97</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="189" to="197" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Approximating polyhedra with spheres for time-critical collision detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Hubbard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="179" to="210" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Accelerated occlusion culling using shadow frusta</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hudson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hoff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th</title>
		<meeting>13th</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Annu. ACM Sympos. Comput. Geom</title>
		<imprint>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Illumination dependent refinement of multiresolution meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schilling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Straßer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Intl</title>
		<imprint>
			<date type="published" when="1998-06" />
			<biblScope unit="page" from="680" to="687" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Rendering on a budget: A framework for time-critical rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Klosowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization 99</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="115" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The prioritized-layered projection algorithm for visible set estimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Klosowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="108" to="123" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Real-Time, continuous level of detail rendering of height fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ribarsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hughes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Faust</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 96 Conference Proceedings</title>
		<imprint>
			<publisher>August</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">View-dependent simplification of arbitrary polygonal environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Erikson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;97</title>
		<meeting>SIGGRAPH &apos;97</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH, ACM Press</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="198" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Parallel progressive rendering of animation sequences at interactive rates on distributedmemory machines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Reisman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schuster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Parallel Rendering Symposium</title>
		<imprint>
			<date type="published" when="1997-11" />
			<biblScope unit="page" from="39" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Conservative volumetric visibility with occluder fusion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schaufler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dorsey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Decoret</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">X</forename><surname>Sillion</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 2000</title>
		<meeting>SIGGRAPH 2000</meeting>
		<imprint>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="229" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Graphics in/for digital libraries -rendering of multiresolution models with texture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Schilling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="667" to="679" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">An overview of the visualize fx graphics accelerator hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Olsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gannet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The HewlettPackard Journal</title>
		<imprint>
			<biblScope unit="page" from="28" to="34" />
			<date type="published" when="1998-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Multi-resolution dynamic meshes with arbitrary deformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;2000</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="423" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">A unified hierarchical algorithm for global illumination with scattering volumes and object clusters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">X</forename><surname>Sillion</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="240" to="254" />
			<date type="published" when="1995-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Feature-based control of visibility error: A multi-resolution clustering algorithm for global illumination</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">X</forename><surname>Sillion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Drettakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 95</title>
		<meeting>SIGGRAPH 95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="145" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Visibility preprocessing for interactive walkthroughs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Teller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Séquin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics: Proceedings of SIGGRAPH&apos;91</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="61" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Adaptive real-time level-of-detailbased rendering for polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="page" from="171" to="183" />
			<date type="published" when="1997-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">P-buffer: a hidden-line algorithm in image-space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="359" to="366" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Visibility culling using hierarchical occlusion maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hudson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 1997</title>
		<meeting>SIGGRAPH 1997</meeting>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="77" to="88" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
