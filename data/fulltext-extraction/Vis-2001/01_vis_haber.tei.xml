<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Smooth Approximation and Rendering of Large Scattered Data Sets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jörg</forename><surname>Haber</surname></persName>
							<email>haberj@mpi-sb.mpg.de</email>
							<affiliation key="aff0">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Zeilfelder</surname></persName>
							<email>zeilfeld@mpi-sb.mpg.de</email>
							<affiliation key="aff0">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oleg</forename><surname>Davydov</surname></persName>
							<email>oleg.davydov@math.uni-giessen.de</email>
							<affiliation key="aff1">
								<orgName type="department">Justus-Liebig-Universität Giessen</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
							<email>hpseidel@mpi-sb.mpg.de</email>
							<affiliation key="aff0">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Smooth Approximation and Rendering of Large Scattered Data Sets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>G.1.2 [Numerical Analysis]: Approximationapproximation of surfaces, least squares approximation, spline and piecewise polynomial approximation</term>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation-display algorithms, viewing algorithms</term>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-surface representation, splines</term>
					<term>E.4 [Coding and Information Theory]-data compaction and compression scattered data approximation, least squares approximation, terrain visualization, data compression</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present an efficient method to automatically compute a smooth approximation of large functional scattered data sets given over arbitrarily shaped planar domains. Our approach is based on the construction of a C 1-continuous bivariate cubic spline and our method offers optimal approximation order. Both local variation and nonuniform distribution of the data are taken into account by using local polynomial least squares approximations of varying degree. Since we only need to solve small linear systems and no triangulation of the scattered data points is required, the overall complexity of the algorithm is linear in the total number of points. Numerical examples dealing with several real world scattered data sets with up to millions of points demonstrate the efficiency of our method. The resulting spline surface is of high visual quality and can be efficiently evaluated for rendering and modeling. In our implementation we achieve real-time frame rates for typical fly-through sequences and interactive frame rates for recomputing and rendering a locally modified spline surface.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The problem of scattered data fitting is to efficiently compute a suitable surface model that approximates a given large set of arbitrarily distributed discrete data samples. This problem arises in many scientific areas and fields of application, for instance, in chemistry, engineering, geology, medical imaging, meteorology, physics, and terrain modeling. Moreover, scattered data methods play an important role in scientific visualization to get a better understanding of a given set of scattered data points and for subsequent treatment needed in many applications.</p><p>In this paper we concentrate on the problem of functional scattered data fitting, which can be described as follows: Given a finite set of points (xi, yi) ∈ Ω, i = 1, . . . , N , where Ω is a bounded domain in the plane, and corresponding values zi, i = 1, . . . , N , find a method to construct a surface s : Ω → R that meets as many as possible of the following goals:</p><p>• Approximation: s should approximate the data, i.e. s(xi, yi) ≈ zi (i = 1, . . . , N ), while offering optimal approximation order</p><p>• Quality: s should be of high visual quality (i.e., for "smooth data" s should be at least C 1 -continuous) and have convenient properties for further processing.</p><p>• Usability: Large real world data sets, where N is typically at least of order 10 6 , should be manageable.</p><p>• Efficiency: Both the computation and the evaluation of s should be fast and efficient.</p><p>• Stability: The computation of s should be numerically stable, i.e., the method should work for any distribution of scattered points.</p><p>• Adaptiveness: The local variation and distribution of the data should be taken into account.</p><p>• Simplicity: The method should be easy to implement.</p><p>Although many approaches have been developed in the last 30 years, the literature shows that it is a difficult task to meet all of the above goals by using one single method. In fact, the algorithms proposed in the literature typically have at least one of the following drawbacks: limitations in approximation quality, severe restrictions on the number of points, limited visual quality of the resulting surface, high computation times, and restrictions on the domain and distribution of the data.</p><p>In this paper, we develop a new approach to scattered data fitting which is based on differentiable bivariate cubic splines. We decided to construct a smooth surface since such surfaces look more pleasant and have nice properties for further processing and rendering. The method we propose belongs to the class of so-called two-stage methods <ref type="bibr" target="#b39">[40]</ref>: In the first step of the algorithm, we compute discrete least squares polynomial pieces for local parts of the spline s by using only a small number of nearby points. Then, in the second step, the remaining polynomial pieces of s are obtained directly by using C 1 smoothness conditions. Our approach uniquely combines the following advantages: The data need not be triangulated, the domain Ω can be of arbitrary shape, no estimations of derivatives need to be computed, and we do not perform any global computations. As a result, we obtain a fast method that is applicable to large real world data, local data variations do not have an undesirable global effect, and the differentiable approximating spline is of high visual quality. Thus, we have a fully automatic method which is stable, easy to implement, and the local distribution and variation of the data are taken into account.</p><p>The spline representation of our surface model allows to employ Bernstein-Bézier techniques efficiently for evaluation and rendering of the spline. In contrast to previous methods for terrain visualization, we render smooth surfaces and thus do not need to decimate or (re-)triangulate the scattered data. Moreover, we have fast and robust algorithms for view frustum culling and computation of surface points, true surface normals, and texture coordinates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Previous Work</head><p>In this section we give an overview on previous and related work in the fields of scattered data fitting and rendering of large terrain data sets. There are many different approaches to scattered data fitting, see for instance the surveys and overview in <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b39">40]</ref>. A very active area of research are radial basis methods <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b37">38]</ref>. However, these methods usually require solving large, ill-conditioned linear systems. Therefore, sophisticated iterative techniques are needed for the computation of the radial function interpolants <ref type="bibr" target="#b1">[2]</ref>. An approach based on regularization, local approximation, and extrapolation has been proposed in <ref type="bibr" target="#b0">[1]</ref>.</p><p>Motivated by some classic results from approximation theory, various methods based on bivariate splines were proposed. There are several types of splines that can be used. The simplest approach is to consider tensor product splines <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b22">23]</ref> and their generalizations to NURBS surfaces <ref type="bibr" target="#b36">[37]</ref>, which have important applications, e.g., in modeling and designing surfaces. These spaces are essentially restricted to rectangular domains. In general, tensor product methods are straightforward to apply only for data given on a grid. If the data points are irregularly distributed, there is no guarantee that the interpolation problem has a solution. Also, global least squares approximation and related methods have to deal with the problem of rank deficiency of the observation matrix. Alternatively, lower dimensional spaces and/or adaptive refinement combined with precomputation in those areas where the approximation error is too high can be employed <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b44">45]</ref>. In <ref type="bibr" target="#b38">[39]</ref>, parametric bicubic splines possessing G 1 geometric continuity are adaptively subdivided to approximate 3D points with a regular quadmesh structure. Multilevel B-splines are used in <ref type="bibr" target="#b27">[28]</ref> to approximate functional scattered data.</p><p>Other spline methods are based on box splines <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b23">24]</ref>, simplex splines <ref type="bibr" target="#b45">[46]</ref>, or splines of finite-element type. The simplest example of finite-element splines are continuous piecewise linear functions with respect to a suitable triangulation of the planar domain. It is well-known that the approaches based on piecewise linear functions can not exceed approximation order 2. To achieve higher smoothness and approximation order, polynomial patches of greater degree have to be considered. In particular, there are scattered data methods based on classical smooth finite elements such as Bell quintic element, Frajies de Veubecke-Sander and Clough-Tocher cubic elements, and Powell-Sabin quadratic element, see the abovementioned surveys and more recent papers <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b30">31]</ref>. In general, these methods are local, and it is obvious that these splines possess much more flexibility than tensor product splines. Many methods require that the vertices of the triangulation include all data points or a suitable subset of these points obtained by a thinning procedure. Such a triangulation is not very expensive to obtain (computational cost O(N log N )), but the arising spline spaces can become difficult to deal with if the triangulation is complicated and its triangles are not well-shaped. In addition, the above-mentioned methods based on finite elements require accurate estimates of derivatives at the data points, which is a nontrivial task by itself assuming the data points are irregularly distributed. To overcome these difficulties, global least squares approximation and other global methods were considered, e.g., in <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b45">46]</ref>.</p><p>The basic idea of our method is related to the interpolation scheme of <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b31">32]</ref>. Essential differences are, however, that we neither triangulate (quadrangulate) the data points, nor make use of any interpolation scheme as for instance in <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b31">32]</ref>. In particular, we do not need any estimates of z-values at points different from the given data points. Instead, we compute local least squares approximations directly in the Bernstein-Bézier form, and then settle the remaining degrees of freedom by using the standard C 1 smoothness conditions <ref type="bibr" target="#b15">[16]</ref>, which results in very short computation times. Since our method does not even require a triangulation of the data points, it is very well suited for extremely large datasets. In addition, our method allows (local) reproduction of cubic polynomials and hence offers optimal approximation order. Theoretical aspects of the method are treated in <ref type="bibr" target="#b10">[11]</ref>.</p><p>A large number of techniques for efficient rendering of terrain data has been proposed in the literature. However, these techniques usually operate on piecewise linear surface representations only. Moreover, many of these methods are restricted to data that are regularly sampled on a rectangular grid. This kind of data is commonly referred to as a digital elevation map (DEM) or, in the case of additional color values associated to each data point, as a digital terrain map (DTM).</p><p>Among the early methods based on DEM / DTM data we mention techniques such as clipping surface cells against the view frustum for ray tracing <ref type="bibr" target="#b7">[8]</ref>, extracting feature points from the data set by curvature analysis and constructing a Delaunay triangulation <ref type="bibr" target="#b40">[41]</ref>, and using quadtree data structures to accelerate ray casting <ref type="bibr" target="#b5">[6]</ref>. More recent approaches achieve interactive frame rates for rather low resolution DTM by determining visible and occluded terrain regions <ref type="bibr" target="#b6">[7]</ref> or by exploiting vertical ray coherence for ray casting <ref type="bibr" target="#b26">[27]</ref>. Several methods incorporate level-of-detail (LOD) techniques to speed up rendering. Such LOD techniques can be embedded in multiresolution BSP trees <ref type="bibr" target="#b42">[43]</ref> or combined with hierarchical visibility for culling occluded regions <ref type="bibr" target="#b41">[42]</ref>. However, changing the LOD during an animation might result in visual discontinuities. This problem has led to the development of continuous LOD techniques <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b14">15]</ref>. In <ref type="bibr" target="#b28">[29]</ref>, a continuous LOD rendering is obtained through on-line simplification of the original mesh data while maintaining user-specified screen-space error bounds. A related approach is proposed in <ref type="bibr" target="#b14">[15]</ref>, where additional optimizations such as flexible view-dependent error metrics, incremental triangle stripping, and predefined triangle counts are introduced.</p><p>The methods that do not require data to be sampled on a uniform grid typically construct a triangulated irregular network (TIN) from the data. A multiresolution representation of arbitrary terrain data is presented in <ref type="bibr" target="#b4">[5]</ref>, where every resolution level consists of a TIN that is obtained through incremental Delaunay triangulation. The approximation error can be chosen to be constant or variable over the data domain. The approach in <ref type="bibr" target="#b24">[25]</ref> is similar to the one before, but here the triangulation is computed on-the-fly, avoiding the storage requirements of the hierarchy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Construction of the Spline</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Overview and Basic Idea</head><p>Many of the methods mentioned in the previous section are based on global least squares approximation and related procedures, thus facing the problem of rank deficiency. One possibility to overcome this is by applying well known numerical techniques for rank deficient matrices, such as singular value decomposition. However, this procedure is very expensive for large coefficient matrices arising from the global methods and destroys their sparse structure. In contrast, our method only relies on local least squares computations, which allows us to employ the singular value decomposition efficiently.</p><p>Given a finite set of points (xi, yi), i = 1, . . . , N , in a bounded domain Ω ⊂ R 2 and corresponding values zi, i = 1, . . . , N , we first determine a suitable space S consisting of smooth bivariate splines of degree 3 such that the total number of degrees of freedom (i.e., the dimension of S) is approximately N . We construct a quadrilateral mesh covering the domain Ω, see <ref type="figure">Figure 1</ref>, and define S to be the space of C 1 -continuous piecewise cubics with respect to the uniform triangle mesh ∆ obtained by adding both diagonals to every quadrilateral. We call the union of these quadrilaterals the spline domain Q. The basic idea of the method is to choose a subset T of triangles in ∆ with the following properties:</p><p>(i) the triangles of T are uniformly distributed in ∆;</p><p>(ii) the polynomial patches s|T (T ∈ T ) can be chosen freely and independently from each other;</p><p>Ω Q <ref type="figure">Figure 1</ref>: Layout of the Bézier triangle patches for an arbitrarily shaped domain Ω of scattered data points. In addition to the Bernstein-Bézier coefficients of the grey triangles inside the spline domain Q, the coefficients of the light grey triangles in the dashed border cells are needed to determine all remaining triangle patches in Q by smoothness conditions. The red circle shows the position of one of the circles CT .</p><p>(iii) if a spline s ∈ S is known on all triangles in T , then s is also completely and uniquely determined on all other triangles that cover the domain;</p><p>(iv) each patch s|T , where T ∈ ∆ \ T has a non-empty intersection with Ω, can be computed using only a small number of nearby patches corresponding to triangles in T .</p><p>The approximating spline is constructed in two steps. First, we compute for every triangle T ∈ T a least squares polynomial p q T in its Bernstein-Bézier form by using singular value decomposition (SVD) and taking into account only points in T and several adjacent triangles. The degree q of p q T may vary from triangle to triangle, though not exceeding 3, and is chosen adaptively in accordance with the local density of the data points. We set s = p q T on each T ∈ T . Then, in the second step, the remaining polynomial pieces of s on the triangles T ∈ ∆ \ T are computed by using Bernstein-Bézier smoothness conditions. In order to guarantee property (iii), it is necessary to add some auxiliary border cells containing both diagonals to ∆ as shown in <ref type="figure">Figure 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">The Spline Space</head><p>Our method is implemented for arbitrary domains as shown in <ref type="figure">Figure 6</ref>. For a detailed description of the spline space and its Bernstein-Bézier representation it is sufficient to consider the square domain</p><formula xml:id="formula_0">Ω = [0, 1] 2 .</formula><p>For given scattered points (xi, yi) ∈ Ω, i = 1, . . . , N , we set n = N/5 and we cover the domain Ω with squares Qij, i, j = 1, . . . , n of edge length h = 1/n. This choice of n ensures that the dimension of the spline space approximately coincides with the number of scattered data points. In addition, a ring of square border cells surrounding the union Q = Qij is needed to completely determine the approximating spline on Q. A uniform triangle mesh ∆ (a so-called ∆ 2 partition) is obtained by adding both diagonals to every square Qij as shown in <ref type="figure">Figure 1</ref>.</p><p>We consider the space of bivariate splines S consisting of all cubic C 1 piecewise polynomials with respect to ∆. It is well-known that the dimension of the spline space S is 5n 2 + 8n + 3 ≈ N <ref type="bibr" target="#b2">[3]</ref>. Moreover, this space combines a number of attractive features.</p><p>First, the splines of this kind are highly flexible in contrast to, e.g., tensor product splines <ref type="bibr" target="#b12">[13]</ref>. Second, the comparatively low degree allows fast and efficient computation of the approximating splines. Third, the approximation order of the space S is optimal <ref type="bibr" target="#b2">[3]</ref>, i.e., any sufficiently smooth function can be approximated by a spline s ∈ S with the error O(h 4 ), which is the best possible approximation order for piecewise cubics.</p><p>For computing the cubic patches of the approximating spline, we use the well-known Bernstein-Bézier representation of a cubic polynomial p <ref type="bibr" target="#b2">3</ref> T defined on a triangle T = [t0, t1, t2] ∈ ∆:</p><formula xml:id="formula_1">p 3 T (u) = |α|=α 0 +α 1 +α 2 =3 B α,3 T (u) bα, u ∈ T.<label>(1)</label></formula><p>Here</p><formula xml:id="formula_2">B α,3 T (u) := 3! α0!α1!α2! λ α 0 0 (u) λ α 1 1 (u) λ α 2 2 (u),</formula><p>are the ten Bernstein basis polynomials of degree 3, where λν (u), ν = 0, 1, 2, are the barycentric coordinates of u with respect to T . The bα ∈ R are called Bernstein-Bézier coefficients of p and represent the local degrees of freedom of the polynomial patch.</p><p>The advantages of the Bernstein-Bézier techniques include the stability of the Bernstein-Bézier basis, easily implementable smoothness conditions (see Section 3.4 below), and an efficient algorithm for the evaluation of the spline and its corresponding normal (de Casteljau algorithm).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Adaptive Least Squares Approximation</head><p>We start our algorithm by choosing a subset T of the triangles in ∆ as in <ref type="figure">Figure 1</ref> and initial circles CT , T ∈ T , with radius <ref type="bibr" target="#b4">5</ref> 4 h and midpoint at the barycenter of T . This choice of the circles ensures that the domain Ω is completely covered by the union of the circles CT , T ∈ T . In the first step of our algorithm we determine the polynomial pieces of the approximating spline s on the triangles of T . To this end we compute n 2 /2 different local discrete least squares approximations for bivariate polynomials by using singular value decomposition.</p><p>Since we treat scattered data, there is in principle no restriction on the number m of points within a particular circle CT . However, both too few and too many points are not desirable. Therefore, we use the initial circle only if m satisfies Mmin ≤ m ≤ Mmax with Mmin, Mmax chosen as described below. Thus, two different situations that require further processing can occur:</p><p>1. the number of data points within CT is too large: m &gt; Mmax;</p><p>2. the number of data points within CT is too small: m &lt; Mmin.</p><p>In the first case (m &gt; Mmax), we thin the data inside of CT down to at most Mmax points. This is done by sorting all data points from within CT into an auxiliary regular grid, which is constructed in such a way that at most Mmax grid cells lie inside of CT . Then we choose the most central data point from each non-empty grid cell to be taken into account for computing the local polynomial patch. Such thinning of the data is justified by the assumption that unreasonably large sets of local data points carry redundant information. By thinning the data points, we avoid expensive computation of SVD for large matrices.</p><p>In the second case (m &lt; Mmin), we simply increase the radius of CT until at least Mmin scattered points are inside of CT . The parameter Mmin controls the minimal local approximation order of the spline surface, while Mmax acts as a balancing parameter between detail reproduction and overall smoothness. In order to locally reproduce at least linear functions in the areas of very sparse data, we choose Mmin = 3. Since we need at least 10 scattered data points to fit a cubic polynomial, we require Mmax ≥ 10. In our tests, we found a good heuristic choice to be 20 ≤ Mmax ≤ 60.</p><p>The process of finding the data points that lie inside of a given circle CT is accelerated using an additional uniform grid data structure G constructed during the initial input of the data. This grid covers the domain Ω and its resolution is chosen such that an average number of K data points lie within each grid cell. By experiment we found that values of 10 ≤ K ≤ 20 lead to a reasonable speed up. Every grid cell is assigned a list of the data points inside that cell. Thus, we can reduce the number of point-in-circle tests significantly by considering only those data points, which are associated to the cells of G partially or completely covered by CT . These grid cells can be determined efficiently by using pre-computed twodimensional bit masks that depend on the radius of CT and the position of its midpoint relative to the grid cells of G.</p><p>The above procedure determines for each T ∈ T a set of data points (xi,ỹi), i = 1, . . . , m, that is either the set of all scattered points lying in the circle CT , or a subset of it obtained by thinning. <ref type="figure">Figure 4</ref> shows some examples of such sets of data points. We now consider the system of linear equations</p><formula xml:id="formula_3">|α|=q B α,q T (xi,ỹi) bα =zi, i = 1, . . . , m,<label>(2)</label></formula><p>where thezi are the z-values at points (xi,ỹi) and q is the local degree of p q T (q ≤ 3). Denote by Aq the matrix of the system (2). The number Mq of unknown coefficients bα depends on q and is equal to 10, 6, 3, or 1 if q is 3, 2, 1, or 0, respectively. Depending on m, we initially choose q so that m ≥ Mq. If, for instance, m ≥ 10, we choose q = 3.</p><p>To solve (2) in the least squares sense, we compute the singular value decomposition Aq = U DV , where U ∈ R m,Mq and V ∈ R Mq ,Mq are (column-) orthogonal matrices and D = diag{σ1, . . . , σM q } is a diagonal matrix containing the singular values σj of Aq (j = 1, . . . , Mq). We use the algorithm given in <ref type="bibr" target="#b35">[36]</ref> for the computation of the SVD. Since the dimension of Aq is at most Mmax × 10, we compute the SVD for small matrices only, making this step fast and robust. The least squares solution of (2) can be efficiently computed as b = V D −1 U z, since the inverse of D is again a diagonal matrix with reciprocal diagonal elements.</p><p>In general, the condition number of the system (2) is given by the ratio maxj{σj}/ minj{σj}. If at least one of the singular values σj is smaller than a prescribed bound εcond, i.e., the points (xi,ỹi) lie close to an algebraic curve of degree q, we consider the system (2) to be ill-conditioned and drop the degree q of the least squares polynomial. If the initial degree was q = 3, this means that we consider the system (2) once again, but this time for quadratic polynomials, i.e., q = 2. If the system (2) for q = 2 is ill-conditioned again, we drop the degree further down to q = 1 or even q = 0. The bound εcond is obtained from a user-specified condition number κ: εcond := maxj{σj}/κ. Extensive numerical simulations show that the quality of the resulting spline surface is quite sensitive to the choice of κ, see also <ref type="figure">Figure 5</ref>. If κ is chosen too high, the spline patches constructed over the triangles in T tend to be of a higher degree. Although this behavior can reduce the average approximation error at the data points, our tests show that individual data points may exhibit a larger approximation error. On the other hand, if κ is chosen too low, more and more spline patches possess a lower degree, thereby decreasing the local approximation order of the spline. In our tests, we successfully use κ ∈ <ref type="bibr">[80,</ref><ref type="bibr">200]</ref>.</p><p>In this way, for every T ∈ T we determine a polynomial p q T = s|T on T . If the degree q of p q T is less than three, the cubic Bernstein-Bézier representation (1) of is finally obtained by degree raising. The corresponding relations between the coefficients of p q T in its two representations (1) and (3) result from the following equation <ref type="bibr" target="#b15">[16]</ref>:</p><formula xml:id="formula_4">p q T (u) = |α|=q B α,q T (u) aα, u ∈ T,<label>(3)</label></formula><formula xml:id="formula_5">  |α|=q B α,q T aα   (λ0 + λ1 + λ2) 3−q = |α|=3 B α,3 T bα .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">C 1 -Conditions</head><p>In the second step of the algorithm, we determine the approximating spline s on the remaining triangles T ∈ ∆ \ T that have non-empty intersection with Ω.</p><p>For computing the remaining coefficients of s we use the well-known C 1 smoothness conditions for two adjacent triangular Bézier patches <ref type="bibr" target="#b15">[16]</ref>. By using these simple formulas, we compute the Bernstein-Bézier coefficients of the polynomial pieces of the smooth spline s on the triangles T ∈ ∆ \ T that have a non-empty intersection with Ω. In particular, we do not need to perform this step for the remaining triangles in the border cells. This computation works step by step as illustrated in <ref type="figure" target="#fig_0">Figure 2</ref>. Here, so-called domain points in the part of the domain surrounded by four triangles in T are shown. Each domain point represents a Bernstein-Bézier coefficient of the spline. In particular, the points shown in black correspond to the Bernstein-Bézier coefficients on the triangles in T . We first use these coefficients and the above C 1 smoothness conditions to compute the coefficients corresponding to the red points. Then we compute successively the coefficients shown in blue, green, and orange. Note that in the last step there are several possibilities to compute the coefficient shown in orange. We just choose one of them since the result is unique as follows by a standard argument.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Rendering</head><p>To efficiently render our spline surface, we adapted several techniques from <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b43">44]</ref> to smooth Bézier spline surfaces. We start by overlaying the domain Ω with a uniform, axis-aligned render grid. The resolution of this grid is adjustable, we typically use about 30 × 30 grid cells. Each of the grid cells cij is assigned a minimum and a maximum z-value z min ij and z max ij , which are taken The culling of the axis-aligned bounding boxes bij is performed in a conservative but cheap way: Each of the eight vertices of a box is projected into screen space. The box is rejected from visibility if and only if all of the projected vertices lie completely inside the same of one of the four half planes above, below, left, or right of the viewport. An early acceptance of the box is found, if any of the projected vertices lies inside the viewport. We found that this conservative test performs better than a more accurate test that includes 2D line clipping for each of the twelve edges of a box.</p><p>For each box bij that passes the culling test, we compute the bounding rectangle of the projected vertices. The maximum width / height of all these bounding rectangles is used to compute the global level-of-detail (LOD) for the current viewpoint. Obviously, it would be more efficient to have an individual LOD for each box: grid cells that are projected onto only a few pixels need not be subdivided as finely as grid cells that cover a large area of the viewport. However, such an adaptive LOD might result in visible gaps between adjacent grid cells, since the common boundary curve of the spline surface between two grid cells might be represented by a different number of linear segments for each cell. To overcome these problems, we are currently investigating the applicability of view-dependent sampling and triangle mesh generation as suggested for instance in <ref type="bibr" target="#b14">[15]</ref>.</p><p>After the global LOD has been computed, the spline surface is evaluated within every visible box bij on a uniform sub-grid over the domain of the grid cell cij. The resolution of the sub-grid is determined by the LOD. In our implementation we use a discrete LOD such that incrementing the LOD by one doubles the resolution of the sub-grid along both of its dimensions (see <ref type="figure" target="#fig_1">Figure 3)</ref>. This approach has the advantage that all surface points and normals from level j can be re-used for level j +1. Thus the spline surface has to be evaluated only at the new positions for a higher level. In the case of going down from level j+1 to level j, we do not need to evaluate the spline at all -all the surface points and normals we need have already been computed. Since the number of triangles quadruples when going from level j to level j + 1, it might seem reasonable to split every triangle into only two triangles, instead. In this case, however, it is not possible to generate optimal triangle strips for efficient rendering: Either the triangle strips are running diagonally, so that additional expensive texture binding calls are needed, or the triangle strips become much shorter than in our current approach.</p><p>To avoid possible visual discontinuities ("popping effects") when changing the LOD during an animation, we blend the surfaces Snew (corresponding to the new LOD) and Sold (corresponding to the previous LOD) over k successive frames using the alpha buffer and a blend function provided by our graphics hardware. Since we achieve real-time frame rates for rendering, we found that k = 20 yields visually smooth transitions from Sold to Snew.</p><p>The evaluation of the spline within every visible box bij is done using the de Casteljau algorithm <ref type="bibr" target="#b11">[12]</ref>. In contrast to tensor product patches of the same degree, the de Casteljau algorithm for bivariate triangle patches takes about half as many multiplications and additions to compute a point on the spline surface. If, like in our case for proper shading, the surface normal has to be computed as well, the advantage of bivariate triangle patches becomes even more evident: In addition to the costs of evaluating a surface point, we need only three multiplications and additions each to compute the (unnormalized) exact normal vector in that point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head><p>In order to verify the working of our method, we performed numerical tests on several real world scattered data sets which vary widely in size and quality. All simulations were run on an sgi Octane with a 300 MHz R12k processor and 1 GB main memory. The approximation quality of a spline is measured using the onesided Hausdorff distance dH : R 3 × S → R between the scattered data points (xi, yi, zi) ∈ R 3 and the spline s ∈ S. To facilitate comparison of different data sets, we divide the maximum approximation error by the length δ of the diagonal of the scattered data's bounding-box. The results of our simulations are summarized in <ref type="table">Table 1</ref>.</p><p>The results in <ref type="table">Table 1</ref> clearly show that both the runtime and the memory usage of our algorithm is linear in the number N of scattered data points. The approximation quality of the spline depends on the quality of the input data: The more densely the scattered data points lie, the more least squares polynomial patches of higher order will be created in general, thereby increasing the local approximation order of the spline. Our simulations show that large real world scattered data can be approximated well within some seconds: The maximum approximation error for our largest data set (588 km 2 with 360 meters elevation range) is about 14 meters (relative error 5.2•10 −4 ). In particular, in the case of huge and dense data sets, the deviation of the approximating spline to the majority of data points is less than one meter.</p><p>Once a spline approximation to a scattered data set has been computed, this spline surface can be efficiently evaluated for rendering using the techniques described in Section 4. On our Octane with a Vpro/8 graphics board we achieve real-time frame rates of 30-60 fps in typical fly-through sequences with up to 100k Gouraud-shaded and textured triangles per frame. Moreover, it is possible to locally modify the data, e.g., for animation or modeling, and render the adapted spline surface at interactive frame rates. We have created an animation sequence of a surface that has been  <ref type="table">Table 1</ref>: Results of smooth approximation for different real world scattered data sets. Timings are given for the construction of the spline; see Section 5 for details on operating platform and Hausdorff distance dH . The diameter of the scattered data's bounding-box is denoted by δ.</p><p>constructed from 736k scattered data points. In an area that covers about 0.4% of the surface, the scattered data points are moved from frame to frame. Due to the locality of the method, we are able to recompute the Bernstein-Bézier coefficients of the polynomial pieces for each frame and render the spline surface at about 10 fps. An additional area of application for our method is (lossy) geometric compression (see <ref type="figure">Figure 6</ref>). Storing the 5n 2 Bernstein-Bézier coefficients that have been computed as described in Section 3.3 allows to reconstruct the complete spline due to C 1conditions. For n = N/5 , this requires storage of approximately N floating point numbers only, since the position of the Bernstein-Bézier coefficients is implicitly defined by our scheme 1 . Since the scattered data require storage of 3N floats, we obtain a compression ratio of about 3 : 1. By decreasing the resolution n of the spline grid, we can control the compression ratio. Unlike many other compression techniques, our method becomes faster when using higher compression ratios. Compressing three million scattered data points from an area of 588 km 2 with an elevation range of 360 meters by a ratio of 30 : 1 takes about 15 seconds and yields a maximum approximation error of 20 meters. Although our method will probably not achieve the same reconstruction quality as stateof-the-art geometric compression or mesh reduction techniques <ref type="bibr" target="#b3">[4]</ref>, it can compete very well with such techniques concerning run-time complexity. Most of these techniques operate on polygonal meshes. If, however, the input data are given as unorganized scattered data, it takes O(N log N ) time to compute a triangulation. Since our method computes the Bernstein-Bézier coefficients of a smooth approximation of the scattered data in O(N ) time, it might be the method of choice for very large N .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Future Work</head><p>We have presented an efficient method to automatically compute smooth approximations of large sets of unorganized scattered data points. The method is based on the construction of a differentiable bivariate spline with respect to a uniform triangle mesh over an arbitrarily shaped planar domain. For a uniformly distributed subset of triangles we compute local polynomial least squares approximations by using singular value decomposition (SVD) of small matrices. The smooth approximating spline is constructed by gluing together these patches using Bernstein-Bézier smoothness conditions. We emphasize the following key features of our method:</p><p>• We develop a completely local approach, which means that we do not use any global optimization or other techniques involving computation with large portions of the data set.</p><p>• We employ the rank-revealing features of SVD to control the polynomial degree of the initial patches, which allows to take into account the local variation and distribution of the data points.</p><p>• The algorithm does not make use of any interpolation scheme.</p><p>In particular, no estimation of derivatives is needed.</p><p>• Our method offers optimal approximation order and the constructed spline is by its nature C 1 -continuous. In addition, the spline surface does not have artifacts like, for instance, peaks or flat spots close to the data points.</p><p>• The use of a uniform triangle mesh also contributes to great savings in computation time. As a result, the overall complexity of the algorithm is linear in the number of scattered data points.</p><p>The numerical examples with millions of scattered points of real world data sets show that the approximating spline can be computed very fast, the approximation error is very small, the resulting surfaces are of high visual quality and can be easily used for further processing in the context of rendering, modeling, and geometric compression.</p><p>In addition we note that the most expensive step of our algorithm is the computation of local discrete least squares approximations (more than 95 % of the overall computation time). Since these approximations are computed independently from each other, this step can be easily parallelized, thus leading to savings proportional to the number of processors on a multi-processor machine.</p><p>Considering these results, a variety of generalizations and applications of the new method can be thought of. In particular, the local adaptiveness of the method can be increased by designing multilevel spline spaces and adjusting the local dimension of the spline space adaptively to the local distribution of data points. However, because of the additional computational complexity, it is not clear if this approach will increase the overall efficiency of the algorithm. Other natural and important questions that include generalizations of the method to the reconstruction of surfaces of higher smoothness and more general topology or to the reconstruction of trivariate functions using, e.g., Bézier tetrahedra are currently under investigation. a) data distribution b) two configurations of triangles c) associated scattered data points d) surface with applied texture <ref type="figure">Figure 4</ref>: Stages of the approximation process. a) Distribution of 736,577 scattered data points. b) Perspective view onto the surface with projected spline grid and data distribution. Two different sets of triangles T ∈ T (blue, magenta, green, cyan) are shown on the left and on the right. The Bézier points over these triangles are computed from the given scattered data points by local least squares approximation (see Section 3.3). <ref type="figure">Figure c)</ref> depicts the corresponding scattered data points (color coded) that have been used in this local least squares fitting for each triangle. Once the Bernstein-Bézier representation over the blue, magenta, green, and cyan triangles is available, the Bernstein-Bézier representation over the yellow triangles T ∈ ∆ \ T can be computed from the surrounding triangles using the C 1 smoothness conditions (see  <ref type="figure">Figure 5</ref>: Influence of the condition number κ on the approximation quality of the surface. Left: κ is too low, the average local approximation order of the spline decreases; Middle: κ is chosen appropriately; Right: κ is chosen far too high, thereby reducing the average approximation error but exhibiting high errors at individual data points in regions of extremely sparse data (see bottom right corner of image). See Sections 3.3 and 5 for details on κ and the Hausdorff distance dH , respectively.</p><p>12,380 coeff., compr. ratio 2.7 : 1 6,010 coeff., compr. ratio 5.6 : 1 2,880 coeff., compr. ratio 11.7 : 1 <ref type="figure">Figure 6</ref>: Scattered data compression for an arbitrarily shaped domain: Distribution of N = 12, 359 scattered data points and approximating spline surfaces with a varying number of degrees of freedom (left to right). For a rectangular domain, the compression ratio is about three times higher than the ratio N : #coefficients, cf. Section 5. For an arbitrarily shaped domain, we need to store one additional integer number for every triangle T ∈ T (see Section 3) to uniquely determine the position of the Bernstein-Bézier coefficients. Therefore, the compression ratios given above are slightly lower than for the rectangular domain case.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Remaining Bernstein-Bézier coefficients are determined due to C 1 -conditions in the order: red, blue, green, and yellow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Sub-grids and resulting triangle meshes corresponding to LOD = 1 (left) and LOD = 2 (right). The spline surface is evaluated at the positions • for level one. For level two, the spline needs to be evaluated only at the new positions •. from the minimum and the maximum Bernstein-Bézier coefficient of all the Bézier triangles covered by cij, respectively. Since the spline surface is known to lie completely inside the convex hull of its Bernstein-Bézier control points, we can use the boxes bij defined by the grid cells cij and their associated z-values z min ij and z max ij as bounding boxes for a cheap visibility test. Our rendering algorithm is organized as follows: for each box bij cull bij against view frustum; if bij not completely culled mark bij as visible; compute bounding rectangle of projection of bij into screen space; compute LOD from max bounding rect extent; for each visible box bij if LOD = bij.LOD evaluate spline on uniform sub-grid of level LOD over cij; draw triangle strips into bij.displayList; bij.LOD = LOD; execute bij.displayList;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Section 3.4). d) Final result with applied texture. κ = 20 max |dH | = 21.1m, avg |dH | = 0.67m κ = 150 max |dH | = 14.3m, avg |dH | = 0.39m κ = 1000 max |dH | = 67.2m, avg |dH | = 0.34m</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">In addition, the number n and the min/max coordinates of the scattered data in the xy-plane have to be stored.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>The data used for the simulations and images was taken from the digital terrain model, scale 1:5000 (DGM 5) by kind permission of "Landesamt für Kataster-, Vermessungs-und Kartenwesen des Saarlandes" under license numbers G-07/00 (9/26/00) and D 90/2000 (10/17/00).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Approximation of Scattered Data Using Smooth Grid Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Arge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Daehlen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tveito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Computational and Applied Math</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="191" to="205" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Radial Basis Functions. Acta Numerica</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Buhmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="1" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">K</forename><surname>Chui</surname></persName>
		</author>
		<title level="m">Multivariate Splines. SIAM</title>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A Comparison of Mesh Simplification Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="54" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Representation and Visualization of Terrain Surfaces at Variable Resolution. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="199" to="217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Photo-Realistic Imaging of Digital Terrains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Shaked</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum (Proc. Eurographics &apos;93)</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="363" to="373" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visibility and Dead-Zones in Digital Terrain Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Shaked</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum (Proc. Eurographics &apos;95)</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="171" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Shaded Display of Digital Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Coquillart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gangnet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="35" to="42" />
			<date type="published" when="1984-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Modelling Non-rectangular Surfaces using Box-splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Daehlen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Skyth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">D. C. Handscomb, Mathematics of Surfaces III</title>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="287" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Scattered Data Interpolation by Bivariate C 1 -piecewise Quadratic Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">A</forename><surname>Dahmen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H J</forename><surname>Gmelig Meyling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H M</forename><surname>Ursem</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Approximation Theory and its Applications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="6" to="29" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Scattered Data Fitting by Direct Extension of Local Polynomials with Bivariate Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Davydov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note>in preparation</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Outillages Méthodes Calcul</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>De Casteljau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Andre Citroen Automobiles</title>
		<imprint>
			<date type="published" when="1959" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Curve and Surface Fitting with Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dierckx</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Oxford University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Algorithms for Surface Fitting using Powell-Sabin Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dierckx</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Van Leemput</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Vermeire</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IMA Journal of Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="271" to="299" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">ROAMing Terrain: Real-time Optimally Adapting Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Sigeti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Aldrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Mineev-Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Curves and Surfaces for Computer Aided Geometric Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Farin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
	<note>4. edition</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Continuous Terrain Level of Detail for Visual Simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Ferguson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Economy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">A</forename><surname>Kelley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">P</forename><surname>Ramos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Image V Conference</title>
		<meeting>Image V Conference</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="145" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Surface Fitting with Hierarchical Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Forsey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename><surname>Bartels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="134" to="161" />
			<date type="published" when="1995-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Scattered Data Interpolation: Test of Some Methods. Mathematics of Computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1982-01" />
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="181" to="200" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Least Squares Surface Approximation using Multiquadrics and Parameter Domain Distortion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="177" to="196" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Smooth Interpolation to Scattered Data by Bivariate Piecewise Polynomials of Odd Degree</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H J</forename><surname>Gmelig Meyling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">R</forename><surname>Pfluger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="439" to="458" />
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Reconstruction of B-spline Surfaces from Scattered Data Points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">F</forename><surname>Gregorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Computer Graphics International</title>
		<meeting>Computer Graphics International</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="163" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Interpolating and Approximating Scattered 3D Data with Hierarchical Tensor Product Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Greiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hormann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Surface Fitting and Multiresolution Methods</title>
		<editor>A. Le Méhauté, C. Rabut, and L. L. Schumaker</editor>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="163" to="172" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Piecewise Smooth Surface Reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Halstead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schweitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;94 Conf. Proc.)</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="295" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Incremental View-dependent Multiresolution Triangulation of Terrain</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hüttner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Visualization and Computer Animation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="129" to="143" />
			<date type="published" when="1998-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Curve and Surface Fitting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lancaster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Šalkauskas</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A Terrain Rendering Method Using Vertical Ray Coherence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">G</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visualization and Computer Animation</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="97" to="114" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Scattered Data Interpolation with Multilevel B-Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wolberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">Y</forename><surname>Shin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="228" to="244" />
			<date type="published" when="1997-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Real-Time, Continuous Level of Detail Rendering of Height Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ribarsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Faust</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96 Conf. Proc.)</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Scattered Data Techniques for Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Lodha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Dagstuhl Conf. Scientific Visualization</title>
		<editor>H. Hagen, G. Nielson, and F. Post</editor>
		<meeting>Dagstuhl Conf. Scientific Visualization</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="182" to="222" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A Package for Representing C 1 Interpolating Surfaces: Application to the Lagoon of Venice&apos;s Bed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cecchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">De</forename><surname>Marchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fasoli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerical Algorithms</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="197" to="215" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Local Lagrange Interpolation by Bivariate C 1 Cubic Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">L</forename><surname>Schumaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Conference on Curves and Surfaces</title>
		<meeting>Conference on Curves and Surfaces</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note>in print</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Local Lagrange Interpolation by Cubic Splines on a Class of Triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Conf. Trends in Approximation Theory</title>
		<meeting>Conf. Trends in Approximation Theory</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="341" to="350" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Fitting Triangular B-splines to Functional Scattered Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pfeifle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Graphics Interface &apos;95</title>
		<meeting>Graphics Interface &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="80" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Radial Basis Functions for Multivariable Interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J D</forename><surname>Powell</surname></persName>
		</author>
		<editor>J. C. Mason and M. G. Cox</editor>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="143" to="168" />
		</imprint>
	</monogr>
	<note>Algorithms for Approximation of Functions and Data</note>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Numerical Recipes in C: The Art of Scientific Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
	<note>2. edition</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">D-NURBS: A Physics-Based Framework for Geometric Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="1996-03" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="85" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Improved Error Bounds for Scattered Data Interpolation by Radial Basis Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Schaback</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Computation</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="issue">225</biblScope>
			<biblScope unit="page" from="201" to="216" />
			<date type="published" when="1999-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">An Adaptive Subdivision Method for Surface-Fitting from Sampled Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">J M</forename><surname>Schmitt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Barsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Du</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;86 Conf. Proc.)</title>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="179" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Fitting Surfaces to Scattered Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">L</forename><surname>Schumaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Approximation Theory II</title>
		<editor>G. G. Lorentz, C. K. Chui, and L. L. Schumaker</editor>
		<imprint>
			<date type="published" when="1976" />
			<biblScope unit="page" from="203" to="268" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Piecewise Planar Surface Models from Sampled Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Southard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Computer Graphics International &apos;91)</title>
		<meeting>Computer Graphics International &apos;91)</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="667" to="680" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Hierarchical Visibility in Terrains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Stewart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Rendering Techniques &apos;97 (Proc. 8th EG Workshop on Rendering)</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="217" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Hudson. Multiresolution BSP Trees Applied to Terrain, Transparency, and General Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wiley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">T</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iii</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Szygenda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fussell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Graphics Interface &apos;97</title>
		<meeting>Graphics Interface &apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="88" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">OpenGL Programming Guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Neider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shreiner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Adaptive Hierarchical B-Spline Surface Approximation of Large-Scale Scattered Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Pacific Graphics &apos;98</title>
		<meeting>Pacific Graphics &apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="8" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">Scattered Data Fitting with Simplex Splines in Two and Three Dimensional Spaces. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">M</forename><surname>Patrikalakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">T</forename><surname>Tuohy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Ye</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="295" to="315" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
