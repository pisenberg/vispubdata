<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualizing Whole-Brain DTI Tractography with GPU-based Tuboids and LoD Management</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2007-10-27">27 October 2007</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vid</forename><surname>Petrovic</surname></persName>
							<email>vpetrovi@uci.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Fallon</surname></persName>
							<email>fallon@uci.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Falko</forename><surname>Kuester</surname></persName>
							<email>fkuester@ucsd.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Irvine</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Irvine</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visualizing Whole-Brain DTI Tractography with GPU-based Tuboids and LoD Management</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2007-10-27">27 October 2007</date>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2007; accepted 1 August 2007; posted online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Tuboids</term>
					<term>stream tubes</term>
					<term>interactive gpu-centric rendering</term>
					<term>neuronal pathways</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Diffusion Tensor Imaging (DTI) of the human brain, coupled with tractography techniques, enable the extraction of largecollections of three-dimensional tract pathways per subject. These pathways and pathway bundles represent the connectivity between different brain regions and are critical for the understanding of brain related diseases. A flexible and efficient GPU-based rendering technique for DTI tractography data is presented that addresses common performance bottlenecks and image-quality issues, allowing interactive render rates to be achieved on commodity hardware. An occlusion query-based pathway LoD management system for streamlines/streamtubes/tuboids is introduced that optimizes input geometry, vertex processing, and fragment processing loads, and helps reduce overdraw. The tuboid, a fully-shaded streamtube impostor constructed entirely on the GPU from streamline vertices, is also introduced. Unlike full streamtubes and other impostor constructs, tuboids require little to no preprocessing or extra space over the original streamline data. The supported fragment processing levels of detail range from texture-based draft shading to full raycast normal computation, Phong shading, environment mapping, and curvature-correct text labeling. The presented text labeling technique for tuboids provides adaptive, aesthetically pleasing labels that appear attached to the surface of the tubes. Furthermore, an occlusion query aggregating and scheduling scheme for tuboids is described that reduces the query overhead. Results for a tractography dataset are presented, and demonstrate that LoD-managed tuboids offer benefits over traditional streamtubes both in performance and appearance.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>One of the most daunting obstacles to understanding the functions of the human brain is the inability to visualize the myriad of tracts of white matter bundles that connect neurons in widely distributed cortical and subcortical regions. Diffusion Tensor (DT) Tractography has enabled the extraction of maximum-likelihood diffusion paths through DT images <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b1">[2]</ref>. These pathways tend to follow large bundles of white-matter tracts. For a single brain, the number of extracted pathways is often in the thousands, and the number of pathway points, in the hundreds of thousands. The neuroscientist's work is made far easier if these datasets can be interactively explored and compellingly visualized, both for research and analysis, and for presentation, communication and education. This paper's primary contribution is a flexible, GPU-accelerated pathway LoD management system that enables significant improvements in both rendering quality and performance for massive pathway datasets. A secondary contribution is a minimally-invasive, highquality streamtube impostor construct-the tuboid-that extends on current streamtube impostor techniques and has several unique characteristics.</p><p>The techniques proposed are not only applicable to DTI tractography, but also to any collection of pathways arising in other domains such as vector field analysis and visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND AND RELATED WORK</head><p>Our input dataset is a collection of pathways. Each pathway consists of a polyline described by a sequence of position-and-attribute data points, and of per-pathway metadata such as labeling.</p><p>A pathway is commonly drawn as a streamline <ref type="bibr" target="#b24">[23]</ref> or a streamtube ( <ref type="bibr" target="#b22">[21]</ref>, among many) whose color and thickness are chosen according to the pathway metadata and the per-point attributes; the entire dataset is visualized by drawing each pathway in the collection using a graphics API such as OpenGL. We will assume that OpenGL is used.</p><p>To increase performance, pathways are stored in Vertex Buffer Objects in a form suitable for rendering. For streamlines, storing the sequence of polyline positions is sufficient. For streamtubes, several cross-section vertices must be stored for each input polyline point: if an octagonal tube cross-section is desired, eight vertices must be generated around each polyline point.</p><p>Illuminated streamtubes give higher visualization quality but lower rendering performance than streamlines. Several pathway rendering techniques have been proposed that attempt to achieve streamtube-like quality-with strong shading and perspective cues-at a lower performance cost: <ref type="bibr" target="#b16">[15]</ref>, <ref type="bibr" target="#b14">[14]</ref>, <ref type="bibr" target="#b19">[18]</ref>, <ref type="bibr" target="#b9">[10]</ref>, and <ref type="bibr" target="#b10">[11]</ref>, among others-or quality higher than streamtubes but at a greater cost, such as <ref type="bibr" target="#b12">[13]</ref>.</p><p>The basic approach is to position flat billboard geometry along the pathway, to orient it per-frame to face the eye, and to shade it to simulate a streamtube. The techniques differ in the billboard geometry used-triangle strips for <ref type="bibr" target="#b16">[15]</ref>, <ref type="bibr" target="#b14">[14]</ref>, <ref type="bibr" target="#b9">[10]</ref>, and <ref type="bibr" target="#b10">[11]</ref>, quads for <ref type="bibr" target="#b19">[18]</ref>, and point sprites for <ref type="bibr" target="#b12">[13]</ref> and <ref type="bibr" target="#b10">[11]</ref>-and in the details of the reorientation and shading calculations. In every techinque but the first published, <ref type="bibr" target="#b16">[15]</ref>, the per-frame view orientation is performed on the GPU rather than the CPU. The above techniques reduce the transfer and geometry costs of rendering pathways, but can increase fill costs.</p><p>In the following two sections, we develop a basic LoD management system, and then extend it to improve its efficiency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PATHWAY LEVEL OF DETAIL MANAGEMENT</head><p>While the marginal cost of pathway rendering has been reduced by recent research, there is room for substantial improvement in overall rendering efficiency. In a typical visualization, many of the pathways drawn contribute little to the final rendering for a given view: some are outside the view frustum, some are occluded by other pathways, and some are distant, and are hence visible in relatively few pixels. These low-visibility pathways nonetheless incur the same transfer and geometry costs as other pathways, hurting rendering efficiency. Likewise, pixel overdraw tends to be high when some pathways are drawn in back-to-front order-resulting in additional, unnecessary fill costs. In the following sections, we develop a pathway level-of-detail (LoD) management system that addresses these efficiency concerns.</p><p>Several techniques are commonly used to increase rendering efficiency by culling or reducing the detail of low-visibility geometry; <ref type="bibr" target="#b5">[6]</ref> provides a good survey. <ref type="bibr" target="#b18">[17]</ref> and <ref type="bibr" target="#b3">[4]</ref> describe a method to exploit temporal coherence.</p><p>Pathways have great spatial extent and are hence difficult to manage using bounding-volume or space-partitioning schemes. Splitting pathways to reduce their extents tends to reduce their draw efficienciesdue to the overhead of extra OpenGL calls-and is therefore not an ideal solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Pathway LoD Overview</head><p>We define several static levels of detail by simplifying the pathway geometry and by using multiple renderers with differing quality/performance characteristics. This allows us to not only increase performance by not expending needless effort on the many lowvisibility pathways, but also increase visual quality by investing additional rendering effort in the few high-visibility pathways.</p><p>We select each pathway's LoD per-frame based on an estimate of the number of pixels the pathway contributes to the final image-the pathway's total pixel visibility. Note that this measure of visibility depends only indirectly on the pathway's distance from the viewerfor example, it is possible for a pathway near the viewer to have low visibility if its image area is small.</p><p>The Occlusion Query OpenGL extension can provide us with a good approximation of such a visibility measure: it allows us to count the number of samples that pass the depth and stencil tests for an arbitrary sequence of OpenGL commands. However, the latency and overhead of the hardware occlusion queries make it impractical to issue a query for every pathway per frame. We develop a practical solution to the visibility estimation problem in a later section-for now, we assume that a visibility estimate is available for each pathway.</p><p>To support k discrete levels of detail {L 0 , L 1 ,...,L k−1 }, with L k−1 the highest, we choose an increasing sequence of visibility thresholds</p><formula xml:id="formula_0">0 = T 0 &lt; T 1 &lt; ••• &lt; T k−1 .</formula><p>Then for each pathway f j with visibility c j , we assign the LoD LoD(c j ) = max{i | c j ≥ T i }.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Pathway Simplification</head><p>Pathway simplification is performed as a preprocessing step, and provides the static geometry LoDs. A simplified pathway is described by a subsequence of the original pathway point sequence. We use a modest pathway simplification scheme: we skip pathway points until accumulated error exceeds a user-specified threshold; we then include a new point. Using the OpenGL indexed primitive functions, we can draw a linestrip over a subsequence of the full pathway point sequence for a simplified pathway representation. This allows us to draw an adaptively-decimated pathway with storage overhead of one index value for each point in the subsequence-yielding a substantial space savings over storing the simplified sequence in full.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">LoD Selection Errors</head><p>Note that some of the pixels included in the count returned by an occlusion query might have been overdrawn by fragments later in the same frame-and that hence the occlusion query can overestimate the visibility of a given pathway in the final image. We find this overestimation acceptable since visual quality remains intact and performance is only occasionally impacted.</p><p>A more significant difficulty arises when, due to differing geometry LoDs, a pathway's visibility is greater at a lower than a higher LoD: its visibility might trigger a switch to the higher LoD, which having lesser visibility would trigger a switch back to the lower LoD, thus leading to alternating LoDs and an objectionable flickering of pathways. We handle this by testing for potential flickering whenever we transition from a higher to a lower LoD: we draw the pathway twice, first normally in the higher LoD, and then transparently, with depth writes disabled, in the lower LoD, issuing a single query for both. We conservatively use the combined sample count to select the next LoD. Note that the combined count includes all samples for the higher-LoD pathway, and only those samples of the lower-LoD pathway not occluded by the higher-LoD pathway.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Visibility Sorting</head><p>To increase rendering efficiency, we sort the pathways from most-to least-visible on the CPU. Drawing the pathways in this order minimizes renderer state changes as it keeps all pathways of a given LoD contiguous. Furthermore, this visibility sorting approximates front-toback sorting, and therefore tends to reduce overdraw. Note that some low-visibility pathways are at least partially occluded by other pathways, and that if they are drawn after their occluders, there is a chance that early-Z culling can reduce the number of fragments processed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">OCCLUSION QUERY SCHEDULING AND DYNAMIC PATHWAY GROUPING</head><p>There is a significant delay between when a hardware occlusion query is issued and when the query result becomes available. To avoid stalling both the CPU and the GPU, we issue and test the queries asynchronously in batches. As a consequence, we make LoD decisions based on visibility estimated from previous frames-but due to the temporal coherence of the viewer position, the delay is usually acceptable. In addition to latency, each query introduces performance overhead, so much so that issuing queries for thousands of pathways per frame is prohibitively expensive. We therefore must queue the queries and schedule their issuance to maintain a manageable query load.</p><p>The simplest strategy is to schedule the queries round-robin, thus guaranteeing a constant issue rate. However, this approach introduces a uniform multiframe delay to the LoD changes. In the following sections we present a more sophisticated strategy that aggregates pathways into dynamic batches-pathway groups-for which we schedule queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Pathway Groups</head><p>Let ( f 0 , f 1 , ..., f n−1 ) be the sequence of active pathways, and let G a:b = ( f a , f a+1 , ..., f b−1 ), with a &lt; b, be a contiguous subsequence of pathways: a pathway group. The total visibility of a group G a:b is given by:</p><formula xml:id="formula_1">C a:b = b−1 ∑ i=a c i .<label>(1)</label></formula><p>Significantly, we can measure the total visibility C a:b of a group G a:b by issuing a single occlusion query in aggregate for all the pathways in the group. Furthermore, observe that from</p><formula xml:id="formula_2">max a≤i&lt;b c i ≤ C a:b ,<label>(2)</label></formula><p>it follows that no pathway in the group G a:b should have a LoD higher than LoD(C a:b ): a group's total visibility establishes an upper boundthe group LoD-on the LoDs of the constituent pathways.</p><p>To make this discussion more concrete, let a particular group G a:b be given, and let C 0 = C a:b be the group's total visibility. Suppose that we issue an occlusion query for G a:b , and that the updated visibility measure is C 1 . If LoD(C 1 ) = LoD(C 0 ), we simply draw the group's pathways with the same LoD as before the update. If LoD(C 1 ) &lt; LoD(C 0 ), inequality (2) implies that we can draw the pathways at the new, lower LoD(C 1 ).</p><p>If, however, LoD(C 1 ) &gt; LoD(C 0 ), we must investigate further. If G a:b is a singleton group (that is, if b = a + 1), we can then draw its sole constituent pathway at the higher LoD(C 1 ). If, on the other hand, the group comprises more than one pathway, then we do not know which, if any, pathways merit a LoD higher than LoD(C 0 ).</p><p>To resolve this, we can split the group recursively into subgroups, issuing occlusion queries for each subgroup, until all non-singleton subgroups have LoDs no greater than LoD(C 0 ). In this way, the only pathways permitted to increase in LoD are the members of singleton groups.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Merge and Split Operations</head><p>Motivated by these observations, we propose to issue occlusion queries only on pathway groups-with single pathways as singleton groups-and introduce two complementary operations on these groups, merge and split: merge(a:b:d) concatenates two adjacent pathway groups G a:b and G b:d into one group G a:d . The total visibility of the resulting group is set to the sum of the visibilities of the two original groups:</p><formula xml:id="formula_3">C a:d = C a:b +C b:d<label>(3)</label></formula><p>and the visibilities of the individual pathways are set equal to the group's average visibility</p><formula xml:id="formula_4">C a:d d−a .</formula><p>split(a:b:d) divides one group G a:d into two groups G a:b and G b:d . The visibility measure of the original group is split between the two resulting groups in proportion to the pathway counts:</p><formula xml:id="formula_5">C a:b = b − a d − a C a:d C b:d = d − b d − a C a:d<label>(4)</label></formula><p>and the visibilities of the individual pathways remain unchanged. Note that the resulting groups are assigned visibility estimatesas the true distribution of the visibility measure over the original group is unknown.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Groups and Occlusion Queries</head><p>All pathways within a group always have the same per-pathway visibility-the average pathway visibility-so that the total visibility of the group is equal to the sum of the visibilities of the group's pathways. Grouped fibers are sorted according to their per-fiber visibilities-or, equivalently, groups are sorted by average per-fiber visibility, rather than by total group visibility. Each group can be in one of three states with respect to its visibility measure:</p><p>• stale: the visibility is invalid, and must be updated;</p><p>• busy: the visibility is invalid, and is currently being updated; or • idle: the visibility is valid, but should be updated All pathways start as sole members of singleton groups in the stale state. A stale group becomes busy when an occlusion query is issued for its pathways. A group remains in the busy state until: (a) the query result becomes available; and (b) all LoD transitions, if any, are completed. Note that (b) implies that a group remains busy during flicker correction and LoD crossfades. When (a) and (b) are satisfied, a busy group becomes idle, and remains such until an occlusion query is issued for its pathways.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Merge/Split Criteria</head><p>We merge two adjacent groups G a:b and G b:d whenever:</p><p>• both G a:b and G b:d are idle; and • the merged group can maintain the same group LoD as the two groups-that is, LoD(C a:b ) = LoD(C b:d ) = LoD(C a:d ); and • the merged group would not exceed the maximum group size for the LoD.</p><p>We split a group G a:d whenever:</p><p>• G a:d is idle; and • a change in group visibility has caused the group LoD to increase; that is, LoD(C a:d ) &gt; LoD(C a:d ), where C a:d is the visibility before the change.</p><p>When a group is split into subgroups, every resulting subgroup starts in the stale state-since the assigned visibilities are rough estimates.When we choose to split a group, we can either split it onceevenly into the two groups G a:( a+d 2 ) and G ( a+d 2 ):d -or into more than two groups, up to the total number of pathways. Recall from the above that we only allow singleton groups to increase in LoD. We can reduce the number of frames spent waiting for necessary LoDs to increase by splitting each group into multiple subgroups. However, if we split each group into too many subgroups, the higher number of stale groups requiring the issuance of occlusion queries can negatively impact performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">LoD-Enabled Rendering Procedure</head><p>The LoD rendering procedure for each frame is as follows:</p><p>1. Update visibilities and LoDs for busy groups based on occlusion query results. 2. Sort groups by average pathway visibility. 3. Merge or split idle groups. 4. Schedule occlusion queries for stale and idle groups. 5. Draw each group's pathways at the assigned LoDs, issuing the scheduled occlusion queries.</p><p>See section 6.3 for a discussion of LoD-management performance and overhead.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">TUBOID PATHWAY RENDERER</head><p>In the previous sections we have described an LoD management system that enables us to explore complex rendering features that had previously been impractical. To that end, we describe a flexible and scalable streamtube impostor construct-the tuboid-that is based on and extends the large body of recent work on streamtube impostor techniques.</p><p>Rather than generating full tube geometry on the CPU and then passing it to OpenGL for rendering, using tuboids we only pass the the pathway point data sufficient for streamlines, and use the graphics hardware to generate and shade the geometry necessary to simulate tubes. Some significant characteristics of tuboids are:</p><p>1. Minimal storage requirements: require little or no more space than streamlines 2. Minimal invasiveness: require very few changes to streamline rendering code, and little or no preprocessing 3. Visual quality: have quality that rivals traditional streamtubes 4. Dynamic control: allow realtime changes to radius and other aspects of tuboid appearance</p><p>Our general approach is similar to the approaches described in the previous work ( <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b10">[11]</ref>, <ref type="bibr" target="#b14">[14]</ref>, <ref type="bibr" target="#b16">[15]</ref>, and <ref type="bibr" target="#b19">[18]</ref>) on tube impostorstriangle-strips are view-oriented in the vertex program and shaded in the fragment program-as are many implementation details. The novelty and strength of our method lie in vertex duplication and raycast shading and text labeling, described below, and are reflected primarily in the first three characteristics listed above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Processing Overview</head><p>In this work, we use the functionality exposed in the Vertex Program and Fragment Program ARB extensions.</p><p>In line with previous work, we split the rendering task between vertex and fragment programs roughly as follows. The vertex program positions triangle strip vertices such that they approximate the silhouette of a streamtube from the eye's view, and computes and stores in the vertex attributes the tuboid data to be used by the fragment program. The fragment program uses the interpolated fragmentassociated data to compute the normal (and, optionally, the point of intersection) appropriate to the local tuboid, and to then shade the fragment accordingly.</p><p>Pathways are loaded exactly as for streamline rendering-in fact, the same vertex arrays and VBOs can be used to render either streamlines or tuboids without reprocessing. However if index-based geometry LoDs-as described in section 3.2-are used, the index sequence must be modified such that for each index i in the original sequence, two indices 2i and 2i + 1 are stored for the tuboid rendering sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Vertex Processing</head><p>The data source to the tuboid vertex program is a single vertex array holding tightly-packed streamline vertices with 4 components each: three position coordinates, plus the arclength from the pathway origin, useful for shading and labeling. The program output stream is a sequence of triangle strip vertices defining the tuboid silhouette and shading parameters. The task of the vertex program involves: (1) vertex duplication, (2) centerline direction calculation, (3) silhouette vertex placement, and (4) shading setup.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Vertex Duplication</head><p>Recall that we render two strip vertices for each element in the vertex array. While such a functionality is available using geometry programs on the latest hardware, or using Direct3D instancing, it does not currently have commodity, multiplatform availability. We present an alternative-vertex duplication-that has widespread hardware support and good performance. As prerequisites, our technique requires each vertex to have an even number of components, and each vertex component to be non-negative except the last, which is required to be negative. In our system, each polyline vertex is stored as four singleprecision float components, with the negative arclength as the fourth component.</p><p>In a traditional tightly packed array indexing scheme, the stridethe offset between consecutive vertices in the array-is equal to the length of a single vertex. In our vertex-duplication scheme, we set the stride equal to half the size of a single vertex-our vertex-doubling stride is two floats. Observe that each vertex in the array gets touched twice, once in entirety-in phase-and once partially-out of phase. To reconstruct the vertex in the partial case, we set up an additional attribute array pointer into the same vertex array, with the same stride, but offset two floats before the vertex data. That is, if a given index i corresponds to the k-th float in the array using the vertex position pointer, then i corresponds to the (k − 2)-th float using the additional attribute pointer.</p><p>We must provide a way for the vertex program to detect which case-full or partial-it is dealing with. We do this by requiring the three streamline coordinates to be positive, and setting the fourth coordinate, the arclength, to be negative. The vertex program then checks which coordinate of the vertex position, the second or the fourth, is negative: if it is the second, the secondary attribute is used for the position, otherwise the position attribute is.</p><p>The program cost of vertex duplication is limited to two instructions per attribute used, plus one instruction of overhead.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Tuboid Setup</head><p>Using vertex duplication, a vertex program is run twice for each pathway point p j stored as an element in the vertex array, once per each of the output vertices v 2 j and v 2 j+1 . By using additional attribute pointers into the same array, multiple array elements can be read for each output vertex, so that the pathway points p j−1 and p j+1 adjacent to p j are also available for tuboid setup. Note that caching of vertex attributes can make the cost of accessing multiple adjacent elements negligible.</p><p>All geometry math related to tuboid setup is performed in eyespace-this is necessary to support correct illumination and tileddisplay rendering (see <ref type="bibr" target="#b14">[14]</ref> for a discussion of streamtube impostor rendering on tiled displays).</p><p>Let M be the modelview matrix. The normalized local tube directiond j -the pathway tangent-for the two strip vertices is computed as the difference between the two points adjacent to</p><formula xml:id="formula_6">p j :d j = M −T ( p j+1 − p j−1 ) M −T ( p j+1 − p j−1 ) .<label>(5)</label></formula><p>The total vertex program cost of the direction calculation is seven instructions, including vertex duplication.</p><p>To position the strip vertices, we follow the approach described in the previous work ( <ref type="bibr" target="#b10">[11]</ref>, among others). We first calculate the unit side vectorŝ j that is orthogonal to both the (unnormalized) view vector M p j and the centerline direction vectord j :</p><formula xml:id="formula_7">s j =d j × M p j d j × M p j .<label>(6)</label></formula><p>Note that when p j andd j are parallel,ŝ j is undefined, and that when they are nearly parallel,ŝ j varies greatly for small changes in either input vector. Observe also that in these cases no 2D longitudinal section of a streamtube can cover all of the pixels covered by the real streamtube. This situation leads to the flipping artifacts described in the literature ( <ref type="bibr" target="#b19">[18]</ref>, among others). Several approaches have been proposed to address this issue. Perhaps the most appealing is the GPU-based method of <ref type="bibr" target="#b10">[11]</ref>, in which view-oriented point-sprite billboards are rendered to cover up the degenerate tube sections. We choose to not address flipping artifacts in our system, leaving the option of flipping-correction as a simple extension.</p><p>The final triangle strip vertices q 2 j and q 2 j+1 are then offset from the pathway point by the tube radius W along the side vectors and transformed to clip space by the projection matrix:</p><formula xml:id="formula_8">q 2 j = M p j +Wŝ j , q 2 j+1 = M p j −Wŝ j .<label>(7)</label></formula><p>The tuboid radius can be scaled such that there is a minimum viewspace radius for the tuboids-making distant tuboids look like illuminated streamlines. To achieve this, we precompute the projected w coordinate of the position using the projection matrix, and set the radius to max{kw,W }, where k determines the minimum radius.</p><p>We compute an up vectorû j =d j ×ŝ j for use in shading, and pass all the computed vectors,d j ,ŝ j , u j , andq 2 j+{0,1} , as texture coordinates to the fragment program. Additionally, we set one texture coordinate r to 1 for q 2 j and −1 for q 2 j+1 so that the distance from the centerline can be computed quickly during fragment processing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Ray-Tube Intersection</head><p>First, we find the intersections between a view ray and a single constant-radius tube with a circular cross-section. Consider a single infinite cylinder-a tube-described by a normalized direction d, a width W , and a point p on its centerline. The tube surface B is the set of all points whose distance from the centerline is exactly W :</p><formula xml:id="formula_9">B = { x : d × ( x − p) 2 = W 2 }.<label>(8)</label></formula><p>Given a unit view vectorv, it follows that at the intersections between the view rayvt and B we have</p><formula xml:id="formula_10">d × (vt − p) 2 = W 2 .<label>(9)</label></formula><p>Solving for t, we get:</p><formula xml:id="formula_11">t = (v ×d) • ( p ×d) ± [(v ×d) • ( p ×d)] 2 − v ×d 2 (W 2 − p ×d 2 ) v ×d 2<label>(</label></formula><p>10) at the intersections. Note that there are at most two intersections for t &gt; 0; we only care about the first.</p><p>The normaln at the point of intersectionvt on B is given by:</p><formula xml:id="formula_12">n = (vt − p) − [(vt − p) •d]d W .<label>(11)</label></formula><p>Also useful is the longitudinal offset b along the tube directiond from p to the point of intersection:</p><formula xml:id="formula_13">b = (vt − p) •d.<label>(12)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Fragment Processing</head><p>The task of the vertex program involves: (1) ray-tuboid intersection,</p><p>normal calculation, and (3) shading. At each fragment we have data interpolated from the attributes at the triangle vertices. The first task for the fragment program is to compute a normal and, optionally, the point of intersection between the view ray and the tuboid.</p><p>We can use Equations (10), <ref type="bibr" target="#b10">(11)</ref>, and (12) to compute the fragment normal and offset directly from the eyespace points and vectors passed by the vertex program. It is, however, more convenient to perform the computations in a local coordinate system with the fragment position as the origin and the three vectorsŝ,û, andd as an orthonormal basis-doing so simplifies the problem and allows us to perform a part of the calculation with a 2D texture lookup. Consider <ref type="figure" target="#fig_1">Figure 1</ref>. Using a texture is good not only for performance, but also for quality: trilinear MIP-mapping significantly reduces aliasing in distant shaded tuboids. Note that this kind of aliasing is common in traditional streamtube rendering-and that here tuboids enjoy a quality advantage over streamtubes. Let Q = ŝ,û,d</p><p>T be a rotation transforming vectors from eyespace to local space. Recall that we passed a centerline-offset coordinate r that varies from 0 along the centerline to ±1 along the strip edges. The fragment position's distance from the centerline is therefore −rW along the side vectorŝ, and hence the local coordinates of the reference centerline point p are simply Q p = (−rW, 0, 0) T . We can now rewrite equation <ref type="bibr" target="#b8">(9)</ref> in theŝ,û,d local coordinates:</p><formula xml:id="formula_15">Qd × (Qvt − Q p) 2 = W 2 (13) ⎛ ⎝ −(v •û)t (v •ŝ)t + rW 0 ⎞ ⎠ 2 = W 2 .<label>(14)</label></formula><p>Solving again for t, we get:</p><formula xml:id="formula_16">t = W −r(v •ŝ) + (v •ŝ) 2 + (v •û) 2 − r 2 (v •û) 2 (v •ŝ) 2 + (v •û) 2 .<label>(15)</label></formula><p>Note that tv is the eyespace position of the tuboid point of intersection-the tube surface. Applying the perspective transformation to tv allows us to write the appropriate depth value to the Z buffer-enabling accurate intersections between tubes and with other geometry. See <ref type="figure" target="#fig_2">Figure 2b</ref>.</p><p>Using Equation <ref type="formula" target="#formula_12">11</ref>, we calculate the normal in local coordinates:</p><formula xml:id="formula_17">Qn = ⎛ ⎝ (v •ŝ)(t/W ) + r (v •û)(t/W ) 0 ⎞ ⎠<label>(16)</label></formula><p>and transform back to eye coordinates:</p><formula xml:id="formula_18">n = Q T Qn =[v •ŝ W t + r]ŝ + [v •û W t]û.<label>(17)</label></formula><p>Note also that for the longitudinal offset b from Equation <ref type="formula" target="#formula_13">12</ref>we have:</p><formula xml:id="formula_19">b = (v •d)t.<label>(18)</label></formula><p>Substituting t from <ref type="bibr" target="#b16">(15)</ref> into <ref type="bibr" target="#b17">(16)</ref>, let us now directly compute thê u-component of the normaln:</p><formula xml:id="formula_20">n •û = (v •û)(t/W ) = (v •û) −r(v •ŝ) + (v •û) (v •ŝ v•û ) 2 + 1 − r 2 (v •ŝ) 2 + (v •û) 2 = −rv •ŝ v•û + (v •ŝ v•û ) 2 + 1 − r 2 (v •ŝ v•û ) 2 + 1 = f (r,v •ŝ v •û ).<label>(19)</label></formula><p>We see that theû-component of the normal can be computed as a function f (r, m) of the centerline-offset r and the slope m =v •ŝ v•û of the view vector in theŝ −û plane. Noting that</p><formula xml:id="formula_21">t = W f (r, m)/(v •û),<label>(20)</label></formula><p>we now rewrite <ref type="bibr" target="#b17">(16)</ref> as a function of r and m:</p><formula xml:id="formula_22">Qn =ĝ(r, m) = ⎛ ⎝ m f (r, m) + r f (r, m) 0 ⎞ ⎠ .<label>(21)</label></formula><p>We store the functionĝ(r, m) as a two-component texture (see <ref type="figure" target="#fig_2">Figure 2a)</ref>, compute and scale r and m in the fragment program, and perform a texture lookup.</p><p>Finally, we compute the normal in eyespace by:</p><formula xml:id="formula_23">n = [m f (r, m) + r]ŝ + [ f (r, m)]û [m f (r, m) + r]ŝ + [ f (r, m)]û .<label>(22)</label></formula><p>The complete normal computation described above has a program cost of two dot products, four multiply-adds, one swizzle, one perspective texture lookup, and one normalization. For lower-LoD shading, we instead compute a rougher approximate normal by evaluatinĝ g(r, 0) at a cost of two multiply-adds and a texture lookup.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Shading and Text-Labeled Tuboids</head><p>Given the normal from Equation 22, we shade each tuboid fragment using the Phong reflection model and environment mapping. Additionally, the flexibility of the tuboid renderer and the extra fragmentprocessing budget afforded by the LoD manager allows us to apply text labels that appear to be on the surface of the tuboid-simulated tubes. The per-fragment texture coordinates x and y for mapping a intensityand-alpha label texture with aspect ratio γ = w/h onto the tuboid strip are given by: </p><formula xml:id="formula_24">x = sgn(s y ) (x 0 + b) γW ,<label>(23)</label></formula><formula xml:id="formula_25">y = 1 + sgn(s y ) (n •ŝ) 2 = 1 + sgn(s y ) (m f (r, m) + r) 2 ,<label>(24)</label></formula><p>where x 0 is the interpolated arclength at the fragment, and b is the longitudinal offset of the point of intersection. Substituting <ref type="bibr" target="#b21">(20)</ref> into <ref type="formula" target="#formula_19">18</ref>, we find that b is given by:</p><formula xml:id="formula_26">b = Wv •d v •û f (r, m).<label>(25)</label></formula><p>Note that the above coordinates guarantee that the label will be drawn right-side-up. The texture's alpha component is modulated by</p><formula xml:id="formula_27">α = min{k 1 s y , 1}<label>(26)</label></formula><p>so that on transitions between text orientations, the labels fade in and out smoothly, with k 1 controlling the width of the fades. Additionally, the labels are drawn only if the tuboid is close enough for the text to be legible: as the distance from the eye changes, the labels fade in and out. We achieve the legibility criterion by clearing lower-detail mipmap levels and using trilinear filtering. We use an OS API to draw the labels into an image and perform an optimized text outlining procedure. We batch multiple labels into a single texture to reduce the number of texture binding changes.</p><p>To provide an additional 3D curvature cue, we modulate the environment mapping component of the shading function to draw rings of alternating reflectivity along the tuboid:</p><formula xml:id="formula_28">β = β 0 + β 1 ( k 2 x 0 + b mod 2),<label>(27)</label></formula><p>where β 0 and beta 2 control the relative reflectivities of the rings, and k 2 controls the frequency of the alternations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS AND DISCUSSION</head><p>We implemented a two-level version of the proposed LoD management system. We generated simplified pathway geometry totaling 130,994 points, and defined several shading levels of detail:</p><p>• flat: only a solid color is applied to the strip.</p><p>• draft: a simple simulated texture-based shading function is applied. • raycast, no depth replacement: the above-presented method, without depth-replacement. • raycast: the above-presented method, with depth-replacement.</p><p>• raycast with labeling: the above-presented method, with depthreplacement, labeling, and alternating rings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Tractography Dataset</head><p>We generated a full-brain tractography dataset by using Slicer <ref type="bibr" target="#b7">[8]</ref> and its DTMRI module to manually seed, select, and label bundles of pathways. Based on a priori anatomical knowledge of where the specific white matter bundle in question (eg, the arcuate fasciculus, or cingulum) should begin and end, the tractography was carried out by bounding a region of interest (ROI), automatically growing all pathways intersecting that ROI, and then manually selecting the appropriate pathways to label and store. The resulting dataset comprises 5,743 pathways and a total of 761,585 pathway points, with colors assigned according to bundle, and jittered over individual pathways in each bundle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Flythrough Performance</head><p>To quantify the performance of the described system and its various components-LoD management, tuboid shading and labeling, and vertex duplication-we now present timing information for several configurations of the system. For each configuration, we measured the average framerate over a 1,800-frame fixed-path flythrough of the above-described dataset. We ran all tests on a midrange 2GB-memory 2GHz Core 2 Duo thin-and-light notebook computer with a 128MB NVIDIA GeForce 7400 Go. The results of the measurements are summarized in <ref type="table">Table 1</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">LoD System</head><p>Using full LoD management, we achieve flythrough averages of 68.2fps in a 800x400 window and 32.9fps at 1280x800 fullscreen. See <ref type="table">Table 1a</ref> and <ref type="figure">Figure 3</ref>.</p><p>To measure the overhead of the LoD management system, we used the simplified geometry and the least costly shading on both high and low LoDs-see <ref type="table">Table 1b</ref>. This overhead includes: (1) pathway sorting, (2) occlusion query costs, (3) group management costs, and (4) flicker correction costs. The measured overhead is less than 2%. <ref type="table">Table 1c</ref> provides a summary of the relative costs of the different shading techniques; the geometry is simplified and the tests are run at fullscreen so that shading is the bottleneck. We can see that the raycast shading modes, especially with depth replacement and labeling, are prohibitively expensive to use in the absence of effective LoD management.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Vertex Duplication</head><p>To place the performance of our vertex duplication scheme into context, we also implemented a more traditional VBO setup for the triangle strips, with precomputed tangents and a one-to-one correspondence between strip vertices and VBO elements. See <ref type="table">Table 1d</ref>. We compared the performance for the two approaches at a low resolution and with a trivial shader, so that the basic strip vertex placement would be the performance bottleneck. We see that vertex duplication entails only a 2% performance penalty over the traditional setup.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Discussion</head><p>We have presented a rendering system that enables high-quality interactive exploration and qualitative analysis of large tractography datasets on affordable, widely available hardware. Such a capability complements the recent work into investigating the reproducibility and validity of automated and semi-automated tractography methods <ref type="bibr" target="#b4">[5]</ref>, and into the quantitative analysis of tractography datasets <ref type="bibr" target="#b20">[19]</ref>.</p><p>High-performance rendering is essential for navigating large datasets interactively-whether in the context of a broader quantitative analysis system, or of pure qualitative analysis, visualization, and presentation. Rich and interactive visualizations allow neuroscientists to more easily grasp the fully three-dimensional nature of the pathway datasets and perform qualitative analyses currently impossible using automated methods. The labeling technique is particularly well-suited for this type of interactive analysis as it is both informative and unobtrusive: per-pathway data, such as the bundle names demonstrated in this paper, can be applied to pathways without taking up any additional screen space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5.1">Limitations and Future Work</head><p>Using an index subsequence to render simplified pathway geometry can lead to errors if the tangent at a vertex in the simplified pathway differs sufficiently from the tangent of the same vertex in the original pathway. This occurs because for a given vertex, the tangent-used for the tuboid setup calculation-is computed using the vertex's immediate neighbors in the full pathway and not the simplified pathway. This is unaffected by whether vertex doubling is used or not. To ensure correct tangents, it is necessary to precompute and store the tangents appropriate for the simplified pathway vertices.</p><p>Flipping artifacts can be addressed using the approach described in <ref type="bibr" target="#b10">[11]</ref> by positioning view-oriented point sprites at each high-LoD pathway vertex, and performing appropriate ray-tube intersection thereon. Likewise, while we do not cap the ends of pathways, a method such as described in <ref type="bibr" target="#b14">[14]</ref> can be used to make the pathway ends appear more realistic.</p><p>Finally, our tuboid intersection derivation assumes a constant tube radius per fiber. If a variable tube radius is desired, it is possible to derive a ray-tube intersection technique with each tuboid segment in the shape of a funnel, rather than a ring as in Equation (8):</p><formula xml:id="formula_29">B = d × (vt − p) 2 = [W Δd • (vt − p) +W p ] 2<label>(28)</label></formula><p>where W P is the tube radius at p, and W Δ is the slope of the radius along the tube direction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>This paper presents a flexible and efficient pathway renderer capable of visualizing whole-brain tractography datasets at interactive rates and high visual quality. A GPU-centric visualization scheme with levelof-detail management was introduced that generates fully-shaded and labeled streamtube impostors, while requiring little to no preprocessing or extra space over the original streamline data.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Published 14</head><label>14</label><figDesc>September 2007.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Ray-tube intersection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>(a) tuboid lookup texture, (b) intersection of tuboids</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We would like to thank the Vietnam Era Twin Study of Aging for the DWI dataset used for the tractography. This research was supported in part by NSF under awards EIA-0203528, MRI-0421554, by NIH via NAMIC and MBIRN, and by the Josephs Foundation. The above support is greatly appreciated.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Exploration of the brain&apos;s white matter pathways with dynamic queries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Akers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sherbondy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mackenzie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Dougherty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wandell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;04: Proc. IEEE Visualization Conf., volume</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="377" to="384" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Estimation of the effective self-diffusion tensor from the NMR spin-echo</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Basser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattiello</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Bihan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Magnetic Resonance, B</title>
		<imprint>
			<biblScope unit="volume">103</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="247" to="254" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">In vivo fiber tractograpy using DT-MRI data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Basser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pajevic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Pierpaoli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Duda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Aldroubi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Magnetic Resonance in Medicine</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="625" to="632" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Coherent Hierarchical Culling: Hardware Occlusion Queries Made Useful</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bittner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wimmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Piringer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Purgathofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">615</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">From diffusion tractography to quantitative white matter tract measures: a reproducibility study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Ciccarelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Toosy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wheeler-Kingshott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Barker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Boulby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neuroimage</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="348" to="359" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A survey of visibility for walkthrough applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chrysanthou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Durand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="412" to="431" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualizing second-order tensor fields with hyperstreamlines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="25" to="33" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An integrated visualization system for surgical planning and guidance using image fusion and interventional imaging</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gering</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nabavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Grimson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Hata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Everett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Jolesz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wells</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MICCAI &apos;99: Proc. Intl. Conf. on Medical Image Computing and Computer Assisted Intervention</title>
		<imprint>
			<biblScope unit="page" from="809" to="819" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Strategies for direct volume rendering of diffusion tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="124" to="138" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visualization of fibrous and thread-like data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Melek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mayerich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Yuksel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Keyser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1165" to="1172" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Hybrid visualization for white matter tracts using triangle strips and point sprites</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Merhof</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sonntag</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Enders</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Nimsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hastreiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Greiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1181" to="1188" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Fiber tracking: principles and strategies-a technical review</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mori</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Van Zijl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NMR in Biomedicine</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">7-8</biblScope>
			<biblScope unit="page" from="468" to="480" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">GPU-based hyperstreamlines for diffusion tensor imaging</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bidmon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Enders</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hastreiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EuroVis &apos;06: Proc</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">/Ieee-Vgtc</forename><surname>Eurographics</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Symp</surname></persName>
		</author>
		<title level="m">on Visualization</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Efficient visualization of large amounts of particle trajectories in virtual environments using virtual tubelets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schirski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kuhlen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hopp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Adomeit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pischinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bischof</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VRCAI &apos;04: Proc</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m">ACM SIGGRAPH Intl. Conf. on Virtual Reality Continuum and its Applications in Industry</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="141" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Scalable self-orienting surfaces: A compact, texture-enhanced representation for interactive visualization of 3D vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PG &apos;02: Proc. Pacific Conf. on Computer Graphics and Applications</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page">356</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Improving occlusion query efficiency with occupancy maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Staneker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meissner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PVG &apos;03: Proc. IEEE Symp. on Parallel and Large-Data Visualization and Graphics</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page">15</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Occlusion-driven scene sorting for efficient culling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Staneker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Straßer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Afrigaph &apos;06: Proc. Intl. Conf. on Computer Graphics, Virtual Reality, Visualisation and Interaction in Africa</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="99" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Visualization with stylized line primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;05: Proc. IEEE Visualization Conf</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="695" to="702" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Reproducibility of quantitative tractography methods applied to cerebral white matter</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wakana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Caprihan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Panzenboeck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fallon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Perry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gollub</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hua</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dubey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Blitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Van Zijl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neuroimage</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="630" to="644" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Interactive view-dependent rendering with conservative occlusion culling in complex environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-E</forename><surname>Yoon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Salomon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;03: Proc. IEEE Visualization Conf</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="163" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Visualizing diffusion tensor MR images using streamtubes and streamsurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Demiralp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Laidlaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">09</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="454" to="462" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Oriented tensor reconstruction: tracing neural pathways from diffusion tensor MRI</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhukov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;02: Proc. IEEE Visualization Conf</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="387" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Interactive visualization of 3D-vector fields using illuminated stream lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zöckler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;96: Proc. IEEE Visualization Conf</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="107" to="113" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
