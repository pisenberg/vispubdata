<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Efficient Surface Reconstruction using Generalized Coulomb Potentials</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2007-10-27">27 October 2007</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><forename type="middle">C</forename><surname>Jalba</surname></persName>
							<email>andrei@cs.rug.nl</email>
							<affiliation key="aff0">
								<orgName type="department">Institute for Mathematics and Computing Science</orgName>
								<orgName type="institution">University of Groningen</orgName>
								<address>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jos</forename><forename type="middle">B T M</forename><surname>Roerdink</surname></persName>
							<email>j.b.t.m.roerdink@rug.nl</email>
							<affiliation key="aff0">
								<orgName type="department">Institute for Mathematics and Computing Science</orgName>
								<orgName type="institution">University of Groningen</orgName>
								<address>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Efficient Surface Reconstruction using Generalized Coulomb Potentials</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2007-10-27">27 October 2007</date>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2007; accepted 1 August 2007; posted online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Surface reconstruction</term>
					<term>Implicit surfaces</term>
					<term>Octrees</term>
					<term>Generalized Coulomb potentials</term>
					<term>Polygonization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We propose a novel, geometrically adaptive method for surface reconstruction from noisy and sparse point clouds, without orientation information. The method employs a fast convection algorithm to attract the evolving surface towards the data points. The force field in which the surface is convected is based on generalized Coulomb potentials evaluated on an adaptive grid (i.e., an octree) using a fast, hierarchical algorithm. Formulating reconstruction as a convection problem in a velocity field generated by Coulomb potentials offers a number of advantages. Unlike methods which compute the distance from the data set to the implicit surface, which are sensitive to noise due to the very reliance on the distance transform, our method is highly resilient to shot noise since global, generalized Coulomb potentials can be used to disregard the presence of outliers due to noise. Coulomb potentials represent longrange interactions that consider all data points at once, and thus they convey global information which is crucial in the fitting process. Both the spatial and temporal complexities of our spatially-adaptive method are proportional to the size of the reconstructed object, which makes our method compare favorably with respect to previous approaches in terms of speed and flexibility. Experiments with sparse as well as noisy data sets show that the method is capable of delivering crisp and detailed yet smooth surfaces.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Surface reconstruction is challenging because the topology of the real surface is unknown, acquired data can be non-uniform and contaminated by noise, and reconstructing surfaces from large data sets can be prohibitively expensive in terms of computations or memory usage. A lack of information about the surface orientation at the acquired samples may further complicate the problem.</p><p>We propose a novel, geometrically adaptive method for surface reconstruction without using orientation information. It employs a fast convection algorithm (inspired by the tagging method of Zhao et al. <ref type="bibr" target="#b30">[31]</ref>) to attract the evolving surface (i.e., the current approximation to the final surface) towards the data points. The force field in which the surface is convected is based on generalized Coulomb potentials evaluated on an adaptive grid (i.e., an octree) using the fast, hierarchical algorithm of Barnes and Hut <ref type="bibr" target="#b5">[6]</ref>. The potentials are used to attract the evolving surface towards the data points and to remove outliers due to noise. When the convection process ends, the characteristic function χ (defined as 1 at points inside the object, and 0 at points outside) yields the final implicit surface, which is polygonized using a meshing algorithm based on tetrahedral subdivision of octree cells <ref type="bibr" target="#b26">[27]</ref>.</p><p>Formulating surface reconstruction as a convection problem offers a number of advantages. Most methods for implicit surface fitting compute a signed distance function from the given point data and represent the reconstructed surface as an iso-contour of this function. However, these approaches are very sensitive to outliers (shot noise) due to the very reliance on the distance transform. By contrast, global generalized Coulomb potentials can be used to disregard the presence of outliers due to noise. Some methods first locally fit the data and then combine these approximations by blending the locally fitting (basis) functions. Unlike this, Coulomb potentials represent long-range interactions for all data points at once, and thus convey global information. As computing Coulomb potentials is of paramount importance in a broad variety of problems, we can rely on a very efficient method for computing Coulomb potentials, to arrive at reconstruction with scalable computational time and memory requirements.</p><p>The main contributions of this paper include:</p><p>• An improved geometrically-adaptive method for surface reconstruction based on an implicit surface representation which only requires information about the position of the samples and is robust to the presence of noise and missing data.</p><p>• A hierarchical and adaptive representation based on octrees, which allows scalable reconstruction at different levels of detail.</p><p>• New algorithms for surface reconstruction based on convection of surfaces in generalized Coulomb potentials.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Popular explicit surface representations are based on parametric (e.g., NURBS, B-spline and Bézier patches) and triangulated surfaces. Major drawbacks of parametric representations are that patches should be combined to form closed surfaces, which can be very difficult for arbitrary data sets, and noisy data sets are difficult to deal with. Triangulated surfaces are usually based on tools from computational geometry, such as Delaunay triangulations and their duals, Voronoi diagrams. Most methods in this class extract subsets of faces of Delaunay triangulations to yield the reconstructed surface <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b14">15]</ref>. They exactly interpolate the data, and therefore, are rather sensitive to noise. Moreover, inserting hundreds of thousands of points into a triangulation is computationally expensive. Examples are Alpha Shapes <ref type="bibr" target="#b14">[15]</ref>, the (Power) Crust algorithm <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>, and the Ball-Pivoting algorithm <ref type="bibr" target="#b6">[7]</ref>. Recently, Giesen and John <ref type="bibr" target="#b15">[16]</ref> introduced the notion of flow in computational geometry, and Scheidegger et al. <ref type="bibr" target="#b27">[28]</ref> proposed an adaptive method based on the Moving Least-Squares algorithm. Much research is devoted to efficient reconstruction methods relying on implicit surface representations, as these offer a number of advantages. Compared to explicit methods, implicit ones elegantly deal with objects of arbitrary topology, blend and perform Boolean operations on surface primitives, and fill holes automatically. The traditional approach is to compute a signed distance function and represent the reconstructed implicit surface by an iso-contour of this function <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b16">17]</ref>. This requires a way to distinguish between the inside and outside of closed surfaces. E.g., Hoppe et al. <ref type="bibr" target="#b16">[17]</ref> approximate the normal at each data point by fitting a tangent plane in its neighborhood, using principal component analysis. Zhao et al. <ref type="bibr" target="#b30">[31]</ref> use the level-set formalism <ref type="bibr" target="#b25">[26]</ref> for noise-free surface reconstruction. Their method handles complicated topology and deformations, and the reconstructed surface is smoother than piecewise linear. The main drawback is the sensitivity to shot noise, due to reliance on the distance transform. The work of Zhao et al. <ref type="bibr" target="#b30">[31]</ref> inspired researchers from the computational-geometry community to develop 'geometric convection' algorithms <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b10">11]</ref> in the context of surface reconstruction. These methods deform a closed oriented pseudo-surface embedded in the 3D Delaunay triangulation of the sampled points, and yield the reconstructed surface as a set of oriented facets of the triangulation. Although these methods tolerate small amounts of Gaussian noise, they are computationally expensive.</p><p>More recently, blending globally or locally supported implicit primitives (e.g. Radial Basis Functions or RBFs) became the favorite technique <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b22">23]</ref>. Turk and O'Brien <ref type="bibr" target="#b29">[30]</ref> and Carr et al. <ref type="bibr" target="#b9">[10]</ref> use globally supported RBFs by solving a large and dense linear system of equations. Since the ideal RBFs are globally-supported and non-decaying, the solution matrix is dense and ill-conditioned <ref type="bibr" target="#b19">[20]</ref>. Moreover, these methods are very sensitive to noise because local changes of the positions of the input points have global effects on the reconstructed surface. Morse et al. <ref type="bibr" target="#b22">[23]</ref> and Ohtake et al. <ref type="bibr" target="#b24">[25]</ref> use compactly-supported RBFs to achieve local control and reduce computational costs by solving a sparse linear system. Dinh et al. <ref type="bibr" target="#b12">[13]</ref> use RBFs and volumetric regularization to handle noisy and sparse range data sets. Recently, Ohtake et al. <ref type="bibr" target="#b23">[24]</ref> proposed the so-called 'partition of the unity implicits', which can be regarded as the combination of algebraic patches and RBFs. Carr et al. <ref type="bibr" target="#b8">[9]</ref> further address surface reconstruction from noisy range data by fitting a RBF to the data and convolving with a smoothing kernel during the evaluation of the RBF. Kojekine et al. <ref type="bibr" target="#b20">[21]</ref> use compactly-supported RBFs and an octree data structure such that the resulting matrix of the system is band-diagonal, thus reducing computational costs. More recently, Kazhdan <ref type="bibr" target="#b18">[19]</ref> proposed to use the Fourier transform for computing the characteristic function of the solid model, and then standard isosurfacing techniques (i.e., marching cubes) to triangulate its boundary. Although (small) displacements of the positions and normals of the samples are handled well, the temporal and spatial complexities are cubic in the (uniform) grid resolution. An improved, geometrically adaptive method <ref type="bibr" target="#b19">[20]</ref> with quadratic complexities, formulates reconstruction as a Poisson problem which is then tackled using efficient Poisson solvers. However, both methods assume that orientation information is available. Kolluri et al. <ref type="bibr" target="#b21">[22]</ref> introduce a noise-resistant algorithm for watertight reconstruction based on spectral graph partitioning. Since the local spectral partitioner uses a global view of the model, their algorithm can ignore outliers and patch holes in under-sampled regions. The method is computationally expensive as it solves an eigenvalue problem on a large graph formed by a subset of the Voronoi vertices of the input set. Tang and Medioni <ref type="bibr" target="#b28">[29]</ref> use tensor-voting to develop a method which is resilient to noise and copes well with sparse data. The downside of this method is its cubic spatio-temporal complexities. In <ref type="bibr" target="#b17">[18]</ref> regularized membrane potentials are used to aggregate the input points on a uniform grid, then a labeling algorithm similar to that in <ref type="bibr" target="#b30">[31]</ref> is used to define an implicit surface, which is smoothed using a mass-spring system and as a final step polygonized. However, this method has cubic complexities similar to the FFT method in <ref type="bibr" target="#b18">[19]</ref>.</p><p>Similarly to RBF approaches and Poisson reconstruction, our method creates smooth surfaces that approximate noisy data, and combines some positive aspects of both global and local approximation schemes. Convection is performed in a global field (Coulomb force field) which does not rely on computing local neighborhoods for blending. However, after the indicator function of the solid has been computed, we do employ blending based on compactly-supported kernels to produce smooth triangulated surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE PROPOSED METHOD</head><p>Let S denote an input data set of samples (points, lines, etc.) lying on or near the surface ∂ M M M of an unknown object M. The problem is to accurately reconstruct the indicator function χ of M, and then to approximate the surface ∂ M M M by a watertight, smooth triangulated iso-surface.</p><p>Given a flexible, arbitrary enclosing surface Γ Γ Γ, the reconstruction problem is formulated as the convection of Γ Γ Γ in a conservative velocity field v v v = −∇φ created by the input data points, as described by the differential equation</p><formula xml:id="formula_0">dΓ Γ Γ dt = v v v (Γ Γ Γ(t)) = −∇φ (Γ Γ Γ(t)) .<label>(1)</label></formula><p>We assume that φ is the electric scalar potential (Coulomb potential), such that the velocity field becomes the electric field</p><formula xml:id="formula_1">v v v = E E E ≡ −∇φ .</formula><p>We regard the sample points s i , s i ∈ S, as electric charges q i with position vectors r r r i , i = 1, 2,...N generating a charge distribution ρ. Hence we can solve for φ by numerically approximating Poisson's equation</p><formula xml:id="formula_2">∇ 2 φ = − ρ ε 0 .<label>(2)</label></formula><p>Solving for Poisson's equation in this case has the problem that the long-range nature of Coulomb interactions is not properly taken into account. Moreover, Poisson's equation requires a continuous charge distribution and not a set of discrete charges, which are in fact just a set of singularities. This problem has been addressed in <ref type="bibr" target="#b19">[20]</ref> by convolving the input points with a Gaussian kernel prior to solving Poisson's equation. Additionally, in <ref type="bibr" target="#b19">[20]</ref> the authors directly solve a Poisson equation for the characteristic function, assuming however that the orientation of the sample points is available. Discretizing the superposition integral, the potential φ is a sum of potentials generated by each charge taken in isolation. However, this potential is inadequate for our purposes (see <ref type="figure" target="#fig_3">Fig. 2</ref>). Therefore, we use higher order generalized Coulomb potentials which decay faster with distance than as inverse of distance, i.e.,</p><formula xml:id="formula_3">φ (r r r i ) = ∑ j =i q j |r r r i − r r r j | m ,<label>(3)</label></formula><p>where m &gt; 1 and we removed the constants appearing in the physical formulation. Note that similar potentials have been successfully used for computing medial axes of 3D shapes <ref type="bibr" target="#b0">[1]</ref>. In our case a highorder potential should be used for noise-free data when an accurate reconstruction is desired. By contrast, we show that for noisy data a smaller-order potential can be used to detect and remove outlier data. During convection generalized Coulomb potentials have to be evaluated not only at the sample positions, but at all centers of the (adaptive) grid cells. This is required by the fast convection algorithm (described in Section 4.3) which, starting from the bounding box of the grid, follows increasing paths of the scalar field until regional maxima (corresponding to the sample points) and ridges are reached. As it sweeps the volume, this algorithm labels grid cells as exterior, so that after propagation the remaining cells qualify as interior to the surface. Naive evaluations of these potentials at all grid positions is expensive for large grid resolutions. So we need to use fast adaptive solvers (see Section 4.2) to approximate them.</p><p>Having labeled the cells of the adaptive grid (octree) as exterior and interior to the surface, and thus equivalently determined χ, we compute a smoothed versionχ of χ as the weighted sum of contributions of nearby cells (estimated during polygonization). The weights are obtained by evaluating the quadratic (approximating) C 1 -continuous Bspline of Dodgson <ref type="bibr" target="#b13">[14]</ref>. This has second order interpolation error, and since it evaluates to zero and has vanishing derivatives at the boundary it is conducive to stability. Moreover, it is inexpensive to compute since it requires only three multiplications and three additions for each evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">IMPLEMENTATION 4.1 Adaptive octree-based approximation</head><p>Discretizing the problem on a regular 3D grid is impractical since the memory for maintaining such a uniform structure becomes prohibitive for fine-grain reconstruction. However, since accurate representations are only required close to the data set, we can use an adaptive grid based on an octree to efficiently evaluate Coulomb potentials and to represent and triangulate the implicit function.</p><p>Given samples s i ∈ S, i = 1, 2,...,N regarded as particles with position s i .p and charge s i .q, and a maximum tree depth D, the octree O is built by calling the function octInsert shown in Algorithm 1 for each particle, with n set to the root node r. When the maximum tree depth D is reached for a non-empty leaf l, l ∈ O, the node is not further subdivided if a new particle is to be assigned to it. Instead, the centroid and total charge of the subset Z of all particles s k that would have been assigned to the subtree rooted at l in an infinitely-deep octree are computed and stored in a new particle s s that is assigned to l. All particles s k can now be discarded, as they are no longer needed. Effectively we implement a low-pass filter acting on particle positions, since the given (maximum) resolution (1/2 D ) cannot be exceeded anyway, i.e.,</p><formula xml:id="formula_4">s s .p ← ∑ s k ∈Z s k .q s k .p ∑ s k ∈Z s k .q , s s .q ← ∑ s k ∈Z s k .q<label>(4)</label></formula><p>When initially all particles have the same charge (we use q = 1), the total charge of such particles will be larger than that of usual particles assigned to non-empty leaves.</p><p>Algorithm 1 Insert particle s i in the subtree rooted at n. function octInsert(s i , n) if subtree rooted at n contains more than one particle then determine child c of n which contains particle s i ; octInsert(s i , c); else if subtree rooted at n contains exactly one particle then if n.depth ≥ D then determine particle s j contained in n; create new particle s s with charge</p><formula xml:id="formula_5">s s .q = s i .q + s j .q and position s s .p = (s i .q • s i .p + s j .q • s j .p)/s s .q;</formula><p>assign s s to n and discard particles s i and s j ; else add n's eight children to the octree; move particle s j already in n into the child in which it lies; let c be the child in which s i lies; octInsert(s i , c); else store s i at node n;</p><p>After octree construction the octree is balanced (by subdividing nodes until any two neighboring cells differ at most by one in depth), as required by both the meshing (see Section 4.4) and convection algorithms (see Section 4.3 and <ref type="figure" target="#fig_3">Fig. 2</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Fast evaluation of the Coulomb potentials</head><p>To evaluate the generalized Coulomb potentials within any desired precision on the adaptive grid obtained by stacking the cells of the balanced octree, we rely on the fast, hierarchical algorithm of Barnes and Hut <ref type="bibr" target="#b5">[6]</ref>, thus trading accuracy for speed. The Barnes-Hut algorithm can be summarized as follows: (i) construct an octree where each leaf contains at most one particle, (ii) for each octree cell, compute the centroid and total charge for the particles it contains, (iii) traverse the tree to evaluate the potential at any desired grid location. The first step is accomplished using the function octInsert in Algorithm 1. The second step is implemented in a depth-first-search traversal of the balanced tree O b , in which the total charge n.q and the centroid n.c of each node n ∈ O b are computed (using Eq. (4)) and stored at each node.</p><p>Then we come to the core of the Barnes-Hut algorithm, evaluating the potential at an arbitrary location p p p. A small positive test charge q t (with value q t = 1) is placed at position p p p, i.e.,</p><formula xml:id="formula_6">φ (p p p) = q t N ∑ i=1 q i |r r r i − p p p| m .<label>(5)</label></formula><p>Then one computes the ratio between the size L of a given cell and the distance r i , from p p p to the centroid of the cell, see <ref type="figure">Fig. 1</ref>. If the ratio is smaller than θ (a user-supplied accuracy parameter), the potential is computed from the total charge and centroid of the particles in the cell. Otherwise, computation continues with the children of the node associated to the current cell, see Algorithm 2. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Fast convection based on tagging</head><p>We revise the tagging algorithm of Zhao et al. <ref type="bibr" target="#b30">[31]</ref> to find the exterior and interior octree cells to the surface, i.e., to compute the characteristic function χ of the model on octree grids.</p><p>Given the balanced octree O b , the task is to classify its leaf cells as either exterior, interior or boundary at each depth of the octree, starting at the coarsest grid resolution and moving gradually towards the highest resolution at tree depth D. This is done in a breadth-firstsearch tree traversal based on a queue Q. Initially, all octree cells at all depths are labeled as interior, and the root of the tree as well as a sentinel node s are added to Q. Then, the octree is traversed by removing one node at a time from Q. Like Zhao et al. we also use a sorted heap H storing leaf cells at the current depth d, but the cells are sorted in increasing order of their keys (potential values at the cell centers). If the current node n taken out from Q is the sentinel node s, this signifies that all accessible leaves at the current depth d, d = 1, 2,...,D have been collected in the heap H (see below), and the marching of the exterior boundary at level d towards the data points can be performed by Algorithm 3. After marching at level d ends, the current depth d is incremented, a new sentinel is added to Q, and a node (at the new depth) is extracted from Q and assigned to the current node n. The traversal continues by adding all children of n to Q. Then, whether or not the current node was the sentinel one, it is labeled as exterior if the node touches the bounding box. Otherwise, if (i) it is an interior leaf node, and (ii) has at least one exterior neighbor at a depth smaller or equal to its own, and (iii) the potential evaluated at its center is larger or equal to that evaluated at the center of its neighbor, it is labeled as trial and added to the heap H. The process is repeated by extracting a new node from Q until the whole tree has been traversed.</p><p>The computation is summarized in Algorithm 3. Compared to the tagging method there are some slight modifications. First, we replaced the maximum heap with a minimum one, as we march towards local maxima and ridges of generalized Coulomb potentials. A more subtle modification was required due to the fact that during marching, even if the octree is balanced, some interior neighbors of a node may lie at a depth smaller (by one) than its own. Since these nodes will never be reached and thus inserted in the heap, they have to be resolved immediately. This is handled by subdividing any such neigh- bor and continuing the marching process normally. Additionally, a user-specified parameter ε has been introduced to allow the marching process to continue if the potential at a neighboring node is not small enough compared to that of the current node. For noise-free data sets we set this parameter to ε = 0, whereas for data sets corrupted by outliers we allow for some variation and set ε to a value larger than zero (see Section 5.5). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Smoothing and polygonization</head><p>We define the implicit surface as the zero level set of the (characteristic) function χ (on the octree) constructed as follows. In a depth-firstsearch traversal, the total charge associated with boundary and nonleaf nodes is set to zero, whereas that of exterior nodes is set to one and that of interior ones is set to minus one. During polygonization, a smoothed versionχ of χ is computed by the weighted sum of contributions of nearby cells, where the weights are obtained by evaluating the B-spline kernel mentioned at the end of section 3, i.e., χ(r r r) ≡ q(r r r)</p><formula xml:id="formula_7">∑ n∈O b n.q W n (r r r) ∑ n∈O b W n (r r r)</formula><p>, W n (r r r) = W 3|n.c c ce e en n nt t te e er r r − r r r| 2h n .</p><p>Here q(r r r) = 1 is a test charge at location r r r, and n.q, h n and n.c c ce e en n nt t te e er r r are the total charge, kernel support and center of the grid cell associated with n, respectively. The support h n is set to h n = s • G/2 n.depth , where s is a user-supplied parameter controlling the amount of smoothing; n.depth is the octree depth of node n, and G is the size To extract the iso-surface, we use a method based on tetrahedral subdivision of octree leaves <ref type="bibr" target="#b26">[27]</ref>. In a depth-first-search traversal of the octree, all grid cells corresponding to boundary nodes are collected and their faces triangulated. We walk around each face in a fixed direction, e.g., counterclockwise as seen from the positive axis perpendicular to that face, starting at the corner vertex with the largest coordinates. By checking whether the neighboring cells are subdivided, this results in a unique sign pattern which helps us to triangulate the face. Once all its faces have been triangulated, the cell is tetrahedrized connecting each of its triangles to the center of the cubic cell. When a new tetrahedron is to be triangulated, we check whether the implicit function intersects it. The final, smoothed implicit surface is defined as the iso-surface at level zero of the functionχ. To test for intersections, we estimate the value ofχ at the vertices of each cubic cell and at the cell center using Algorithm 4. Only if the surface intersects the tetrahedron it is triangulated as described above. Note that the resulting triangulated surface is guaranteed to be manifold by the construction ofχ.</p><p>To speed up the computations, the values ofχ are cached using a hash map, whose keys are obtained by hashing 3D positions of cell vertices. In this way memory usage is kept low, since only an integer (the final hashing key) and a floating point number (the function value) have to be stored for each vertex of the visited cells. The number of triangles generated by this method will be larger than that of the marching cubes algorithm (see <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b26">27]</ref>), but there are no ambiguous polygonization cases, the algorithm is straightforward and results in better interpolation of mesh vertices.</p><p>The method is geometrically adaptive in the sense that if the samples are non-uniformly distributed, during polygonization, larger and fewer triangles are generated in regions of small sampling density, whereas smaller and more triangles will be generated in regions with high sampling density. However, as the resolution of the adaptive octree grid reflects the distribution of the sample points, if the input data set is uniform, then the final mesh will have many triangles of similar sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Cost analysis</head><p>Let N denote the number of samples in the data set S. Assuming that the maximum octree depth D is such that to each leaf a sample is assigned (i.e., the grid resolution agrees with that of the samples), then the number of leaves is approximately equal to the number of samples, i.e., 2 3D ≈ N. Then the total number M of octree nodes is , the complexity of the polygonization step is linear in the total number of nodes. Accordingly, in the worst case, if the tree depth is increased by one level, the temporal complexities of both the convection and polygonization steps increase by a factor of eight. The same worstcase total complexity is reached when the resolution of a uniform grid is doubled. However, when using an adaptive octree grid this does not happen since the octree is not complete, i.e., the samples are non-uniformly distributed on the grid (see Section 5.1). Note that our method has similar spatial worst-case complexities.</p><formula xml:id="formula_8">M ≡ ∑ D i=0 N/2 3i ≈ N ≈ 2</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head><p>We present several results obtained using the proposed method, in a large variety of settings, using a system with two dual Opteron processors and 8 GB of RAM. The parameters of the method were set as follows. Given a desired grid resolution (maximum octree depth D), the size of the computational domain G is set to G = 2 D . Parameter D controls the tradeoff between the accuracy of the reconstruction versus the computational requirements. If reconstruction is to be performed at maximum resolution, D should be set such that each leaf of the octree is assigned a sample point. The parameter θ controlling the accuracy of the computations of generalized Coulomb potentials was fixed to θ = 0.9. We experimented with different settings of θ in the range of 0.5 − 0.95, without noticing differences in the quality of the reconstructed surfaces. The factor s determining the support radius of the smoothing kernel in Algorithm 4 was set to s = 2.0. The larger the value of this parameter the smoother the final surface becomes, albeit at the expense of larger computational time; we experimented with values in the range of 1.6 − 2.5. The settings of the remaining parameters (m and ε) will be mentioned in the text. On the setting of parameter m we mention that similar generalized Coulomb potentials have been successfully used for computing medial axes of 3D shapes <ref type="bibr" target="#b0">[1]</ref>, and it was shown that as the potential order becomes arbitrarily large, the axes approach those computed using the shortest distance to the border <ref type="bibr" target="#b0">[1]</ref>. Since in general it is possible to revert the medial axis transform to obtain an approximation of the input shape, this suggests that as the order of the potential is increased, a more accurate approximation can be obtained, which in the limit yields the original shape. In our case this means that for noise-free data, when an accurate reconstruction is desired, a high-order potential should be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Multi-resolution</head><p>The method delivers representations at different scales, where the maximum depth of the tree D plays the role of the scale parameter. <ref type="figure" target="#fig_2">Fig. 3</ref> shows reconstruction results of a dragon model (3, 609, 600 samples) at different octree depths. As the depth of the octree is increased by one, details at higher resolutions are captured, while the computational time and number of triangles increase roughly by a factor of four, whereas the memory overhead increases by a factor of two. Some statistics are given in <ref type="table">Table 1</ref>.   <ref type="table">Table 1</ref>. Computational time (seconds), peak-memory usage (megabytes) and number of triangles of the reconstructed surface as functions of the tree depth, for the large dragon model (see <ref type="figure" target="#fig_2">Fig. 3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Comparison to other methods</head><p>We compare our results to those obtained using Power Crust <ref type="bibr" target="#b3">[4]</ref>, Multi-level Partition of Unity implicits (MPU) <ref type="bibr" target="#b23">[24]</ref>, the method by Hoppe et al. <ref type="bibr" target="#b16">[17]</ref>, the FFT method in <ref type="bibr" target="#b18">[19]</ref> and the Poisson-based method <ref type="bibr" target="#b19">[20]</ref>. The experiment was performed using the Stanford bunny data set consisting of 362, 000 samples assembled from range data. The normal at each sample was estimated as in ref. <ref type="bibr" target="#b19">[20]</ref> when required, i.e., for the MPU, FFT and Poisson methods. The results are shown in <ref type="figure" target="#fig_4">Fig. 4</ref>. Since this data set is contaminated by noise, interpolating methods such as the Power Crust generate very noisy surfaces with holes due to the non-uniformity of the samples. The method by Hoppe et al. <ref type="bibr" target="#b16">[17]</ref> generates a smooth surface, although some holes are still visible due to the non-uniform distribution of samples, which the method cannot properly handle. The MPU method yields a smooth surface without holes, but with some artefacts due to the local nature of the fitting, which does not cope well with the noise and non-uniformity of the data. Global methods such as the FFT, Poisson and our method accurately reconstruct the surface of the bunny. <ref type="table">Table 2</ref> provides some statistics about the methods as well as about the quality of the reconstructed surfaces. The last column shows the approximation error, which is computed as the average distance from the data points to the centroids of the mesh triangles and represents an upper bound for the average distance from the data points to the reconstructed surface. The smallest reconstruction error was achieved by the Power Crust, MPU and our method. Although the Power Crust method should have produced an interpolating surface, thus achieving a smaller upper-bound error, this does not happen in this case, as the  <ref type="table">Table 2</ref>. Computational time (seconds), peak-memory usage (megabytes), number of triangles and reconstruction error for the Stanford bunny by different methods (see also <ref type="figure" target="#fig_4">Fig. 4</ref>). reconstructed surface contains holes. Although the surface generated by the Poisson method is slightly smoother than that of our method, the reconstruction error is higher. The computation time of our method is comparable to that of the MPU method, which is one of the fastest geometrically-adaptive reconstruction methods according to <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b23">24]</ref>, while the peak memory usage of our method (at octree depth D = 9 with m = 5) remains well below those of the other methods. Although the FFT method is fast in this case, it becomes impractical at higher grid resolutions due to its cubic complexities <ref type="bibr" target="#b18">[19]</ref>. The Poisson method is roughly two times slower than our method and has higher memory usage. It also does not cope well with noisy inputs, see Section 5.5. Finally, as our polygonizer is based on tetrahedral decomposition, the number of triangles of the reconstructed surface is quite high. However, methods for surface decimation can be used to improve this.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Range data sets</head><p>We performed an experiment on range data using three popular data sets: the 'Happy Buddha' model (2, 468, 000 samples), the 'dragon' model <ref type="bibr">(2, 198, 655 samples)</ref>, and the 'Armadillo' model <ref type="bibr">(2, 185, 867 points)</ref>. The results are shown in <ref type="figure">Fig. 5</ref> and <ref type="table">Table 3</ref>. The maximum octree depth was set to D = 10. When evaluating generalized Coulomb potentials for the Buddha model at a location p p p we only considered those cells which were in a ball of radius r = 100 centered at p p p. This was necessary because, since there are no samples between the feet,   <ref type="table">Table 3</ref>. Computational time (seconds), peak-memory usage (megabytes) and number of triangles of the reconstructed surfaces of three range data sets (see <ref type="figure">Fig. 5</ref>).</p><p>our method would have connected both feet just above the pedestal of the statue. Note that this does happen with the Poisson method, see <ref type="bibr" target="#b19">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Reconstruction of large models. Scalability</head><p>To study scaling with higher resolutions, we performed a further experiment on two large data sets, the 'Lucy' model (14 million samples) and the 'Thai statue' (5 million samples). <ref type="figure" target="#fig_8">Fig. 6</ref> shows the reconstructions performed at a maximum octree depth of D = 11. The Lucy model took 21 minutes using 2.6 GB of RAM, generating a mesh with 39 million triangles. Similarly, reconstructing the Thai statue took 28 minutes using 3.0 GB of RAM (42 million triangles). Reconstructing these models with methods such as the FFT <ref type="bibr" target="#b18">[19]</ref> or the method in <ref type="bibr" target="#b17">[18]</ref> would require two uniform grids of size 2048 3 voxels, i.e., more than 60 GB of memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Coping with noise</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.1">Shot noise</head><p>A number of outliers, expressed as a percentage of the number of input samples was added in order to produce noisy data sets. Parameters were modified as follows. First we decreased the power m in Eq. 3 to m = 2 (see Section 3), which produces a slower decaying field. Contributions of nearby particles are stronger, which allows marching to continue whenever outliers are encountered. However, this is not sufficient because any sample location (whether input sample or outlier) represents a singularity which is clipped and thus turned into a local maximum. Therefore we also allowed for some variation of the potentials by putting ε = 0.1. In this way we can detect and remove outlier data as demonstrated in <ref type="figure">Fig. 7</ref>. Note that the method still works for two times more (uniformly-distributed) outliers than data points, albeit at the cost of some visible artefacts. Among the few methods which can tolerate shot noise is the recent one of Kolluri et al. <ref type="bibr" target="#b21">[22]</ref>. However, the CPU time reported in <ref type="bibr" target="#b21">[22]</ref> is one order of magnitude higher than ours, on the same range data set and with similar reconstruction quality (compare <ref type="figure">Fig. 1</ref> in <ref type="bibr" target="#b21">[22]</ref> with <ref type="figure" target="#fig_10">Fig. 8</ref>). Our reconstructed surface has genus 4, that of Kolluri et al. has genus 14, whilst the source object has genus 1, <ref type="bibr" target="#b21">[22]</ref>. Although the FFT method is resilient to Gaussian noise, it does not cope well with shot noise, as this affects the whole Fourier spectrum and not only certain (high) frequencies. Also, it is not clear how sample normals can be computed in such cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.2">Gaussian noise</head><p>We perturbed the positions of the input points with Gaussian noise of zero mean and different standard deviations, expressed as percentages of the length of the diagonal of the bounding box spanned by the sample points, and compared to the Poisson method <ref type="bibr" target="#b19">[20]</ref>. The parameters of our method were set as in the previous section. Since this method requires normals at the sample points, we first reconstructed the surface (at level D = 8) using our method, computed per-vertex normals and then fed the Poisson method with the vertices and normals of the mesh. The results are shown in <ref type="figure">Fig. 9</ref>. Even when the coordinates of most points were randomly translated in the interval [−8, +8], our method was able to reconstruct the surface, although the reconstruction is rather rough. As shown in <ref type="bibr" target="#b18">[19]</ref>, methods based on local fitting such as the MPU and some RBF methods do not tolerate well Gaussian noise, nor does the Poisson method, as shown in <ref type="figure">Fig. 9</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Limitations</head><p>Surface features smaller than the size of the smallest grid cells (at octree depth D) are not accurately reconstructed. A possible solution is to increase the grid resolution at the expense of larger computational time and memory requirements. As for any method that employs implicit representations, we assume that the surfaces to be reconstructed are closed. <ref type="figure">Fig. 10</ref> also illustrates in 2D several failure modes of the method. If there is a deep cavity in the model, with poor sampling density along its walls, the potential across the entry to the cavity forms a ridge closing off the cavity, <ref type="figure">Fig. 10</ref>, left. Another problem appears if there are significant holes in the sampling. In this case, the ridges of the potential field do not form a closed surface and labeling fails, <ref type="figure">Fig. 10</ref>, center. Still, the method does perform intrinsic hole filling by minimal surfaces, see <ref type="figure">Fig. 10</ref>, right. σ = 0.5% σ = 1.0% σ = 2.0% <ref type="figure">Fig. 9</ref>. Gaussian noise. First row: input samples and standard deviations σ as percentages of the diagonal of the bounding box; second row: reconstructions by the Poisson method; third row: reconstructions by our method. <ref type="figure">Fig. 10</ref>. Failure modes of the method. First row: input sets; second row: reconstruction results, left: labeling fails when there are large cavities in the object and when there are significant holes in the sampling, center : very large gaps cannot be bridged, right: smaller gaps are filled.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Published 14</head><label>14</label><figDesc>September 2007.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .Algorithm 2</head><label>12</label><figDesc>Estimation of the Coulomb potential at an arbitrary grid position p p p. If the ratio L/r i &lt; θ the direct contribution is replaced by one contribution due to all particles in the box. Grid cells are only subdivided during the octree construction, see Algorithm 1. Evaluate the potential at p p p due to all particles in the cell associated with octree node n. function computePotential(p p p, n) returns pot pot = 0; if n contains one particle s i then pot = compute direct potential due to s i ; else r = distance from p p p to centroid n.c; L = size of the cell associated with n; if L/r &lt; θ then compute pot due to (n.q, n.c); else for all eight children m i of n do pot = pot+ computePotential(p p p, m i ); return pot;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Algorithm 3</head><label>3</label><figDesc>Label cells as exterior or boundary. function marchExterior(H) while not empty heap H do extract node n from H; p n = computePotential(n.c c ce e en n nt t te e er r r, root); for each leaf m, neighbor of n, m.depth ≤ n.depth do if m is interior and m.depth &lt; n.depth then subdivide m; find neighbor k of n among the children of m; assign m = k and continue; if m is interior then p m = computePotential(m m m. . .c c ce e en n nt t te e er r r, root); if p m + ε &lt; p n then label n as boundary; continue with extracting a new node from H; label n as exterior; for each leaf m, neighbor of n do if m is interior then label m as trial; insert m onto H;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .</head><label>2</label><figDesc>Example of 2D curve reconstruction. Top-left: input set; Topright: labeling fails if the octree is unbalanced (highly non-uniform data set); Bottom-left: Labeling can still fail for slower-decaying potentials (m = 1 in Eq. (3)) even on a balanced tree; Bottom-right: correct result on a balanced tree with m = 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Algorithm 4</head><label>4</label><figDesc>of the computational domain. With some abuse of terminology, we callχ the smoothed characteristic function, although it takes values in the interval [−1, 1]. Evaluateχ at location r r r. function computeChi(r r r, s) returns F n = locate leaf containing r r r; h n = G/2 n.depth ; f = n.q W n (r r r); s f = W n (r r r); label n as trial and add n to Q; while not empty queue Q do dequeue node n from Q; for each neighbor m of n do if m is not trial then if m has children then m = unlabeled child of m closest to r r r; h m = G/2 m.depth ; d m = r r r.dist(m.c c ce e en n nt t te e er r r); if d m ≤ h m and d m ≤ 2 • s • h n then f = f + m.q W m (r r r); s f = s f +W m (r r r); label m as trial and add it to Q; label all visited nodes as not-trial; return (F = f /s f ); We limit the number of considered cells surrounding the cell associated to node n and which contains r r r, such that only cells in the neighborhood N O b (n) of n, with N O b (n) = {m | r r r.dist(m.c c ce e en n nt t te e er r r) ≤ 2 • s • h n } are visited. Therefore, we designed a fast flood-fill algorithm based on a queue Q which implements blending as just described, the pseudo-code of which is shown in Algorithm 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>3D . Since balancing does not increase the order of complexity, constructing the balanced octree O b is done in O(M • log M). Since each interior cell is visited at most once during convection, the complexity of the marching procedure is O(M • log M), where log M comes from the heap sort algorithm. Since the complexity of evaluating the Coulomb potential (see Algorithm 2) at the center of a grid cell is O(log M), the total complexity of the fast convection algorithm is O(M • log 2 M). Further, considering that a constant number of cells are visited for evaluatingχ at a point (see Algorithm 4)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 3 .</head><label>3</label><figDesc>Example of reconstruction at various octree depths: Top-left: D = 7, top-right: D = 8, bottom-left: D = 9, bottom-right: D = 10.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 4 .</head><label>4</label><figDesc>Reconstruction of the Stanford bunny; Left-to-right, top-tobottom: Power Crust, Hoppe et al., MPU, FFT-based, Poisson reconstruction, and our method.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 6 .</head><label>6</label><figDesc>Reconstruction of two large models ('Thai statue' and 'Lucy', 5 and 14 million samples, respectively) at octree level D = 11.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 5 .Fig. 7 .</head><label>57</label><figDesc>Reconstruction from real-world range data sets. Shot noise experiment. First row: input data sets, with the numbers representing the percentages of added noise samples; second row: reconstruction results (see text).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 8 .</head><label>8</label><figDesc>Shot noise experiment. Left: noisy range data set with 2, 008, 414 samples and 4, 000 outliers; right: reconstructed surface (CPU time: 168 seconds). Angel data set courtesy of the U.C. Berkeley Computer Animation and Modeling Group.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>We have shown that surface reconstruction can be formulated as a convection problem of a surface in a velocity field generated by generalized Coulomb potentials, and that this offers a number of advantages. The method scales well and can be used to efficiently reconstruct surfaces from clean as well as noisy non-uniform, real-world data sets.</p><p>Further work concerns more efficient smoothing of implicit surfaces on non-uniform grids based on curvature flows and/or (anisotropic) diffusion, and improving the overall performance of the polygonization method. Of particular interest is the possibility of accelerating the computations using modern, programmable GPU hardware.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Shape representation using a generalized potential field model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ahuja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-H</forename><surname>Chuang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Anal. Machine Intell</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="169" to="176" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Convection-driven dynamic surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Allègre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Chaine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Akkouche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Shape Modeling International</title>
		<meeting>Shape Modeling International</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="33" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The crust and the β -skeleton: Combinatorial curve reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bern</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Graphical Models and Image Processing</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="125" to="135" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The power crust, unions of balls, and the medial axis transform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kolluri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry: Theory and Applications</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2-3</biblScope>
			<biblScope unit="page" from="127" to="153" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Automatic reconstruction of surfaces and scalar fields from 3D scans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="109" to="118" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A hierarchical O(N Log N) force calculation algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Barnes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hut</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">324</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="446" to="449" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The ball-pivoting algorithm for surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mittleman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Rushmeier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="349" to="359" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Smooth surface reconstruction via natural neighbour interpolation of distance functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Boissonnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Cazals</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 16th ACM Symp</title>
		<meeting>16th ACM Symp</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="223" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Smooth surface reconstruction from noisy range data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Beatson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Fright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mclennan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Graphite</title>
		<meeting>Graphite</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="119" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Reconstruction and representation of 3D objects with radial basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Beatson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Cherrie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">R</forename><surname>Fright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Evans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;01</title>
		<meeting>SIGGRAPH&apos;01</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="67" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A geometric convection approach of 3-D reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Chaine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographics Symposium on Geometry Processing</title>
		<meeting>Eurographics Symposium on Geometry essing</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="218" to="229" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A volumetric method for building complex models from range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;96</title>
		<meeting>SIGGRAPH&apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="303" to="312" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Reconstructing surfaces by volumetric regularization using radial basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">Q</forename><surname>Dinh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Slabaugh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Anal. Machine Intell</title>
		<imprint>
			<biblScope unit="page" from="1358" to="1371" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Quadratic interpolation for image resampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">A</forename><surname>Dodgson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Image Processing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1322" to="1326" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Three-dimensional alpha shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Mücke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="43" to="72" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Surface reconstruction based on a dynamical system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Giesen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>John</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="363" to="371" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Surface reconstruction from unorganized points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;92</title>
		<meeting>SIGGRAPH&apos;92</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="71" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Surface reconstruction from noisy data using regularized membrane potentials</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Jalba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B T M</forename><surname>Roerdink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics/IEEE VGTC Symposium on Visualization</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="83" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Reconstruction of solid models from oriented point sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kazhdan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Symposium on Geometry Processing</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="73" to="82" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Poisson surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kazhdan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bolitho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Symposium on Geometry Processing</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="61" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Surface reconstruction based on compactly supported radial basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kojekine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Savchenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hagiwara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric modeling: techniques, applications, systems and tools</title>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="218" to="231" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Spectral surface reconstruction from noisy point clouds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kolluri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Shewchuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>O'brien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Geometry Processing</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2004-07" />
			<biblScope unit="page" from="11" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Interpolating implicit surfaces from scattered surface data using compactly supported radial basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">S</forename><surname>Morse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Yoo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rheingans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">R</forename><surname>Subramanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Shape Modeling International</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="89" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Multi-level partition of unity implicits</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ohtake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Belyaev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH&apos;03</title>
		<meeting>SIGGRAPH&apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="463" to="470" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Multi-scale approach to 3D scattered data interpolation with compactly supported basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ohtake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Belyaev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Shape Modeling International</title>
		<meeting>of Shape Modeling International</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="153" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Fronts propagating with curvature-dependent speed: Algorithms based on Hamilton-Jacobi formulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="12" to="49" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Isotopic meshing of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Plantinga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Vegter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Vis. Comput</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="45" to="58" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Triangulating point-set surfaces with bounded error</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Scheidegger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fleishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographics Symposium on Geometry Processing</title>
		<meeting>Eurographics Symposium on Geometry essing</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Inference of integrated surface, curve, and junction descriptions from sparse 3-D data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">K</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Anal. Machine Intell</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="1206" to="1223" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Modelling with implicit surfaces that interpolate</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>O'brien</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="855" to="873" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Fast surface reconstruction using the level set method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Workshop on Variational and Level Set Methods in Computer Vision</title>
		<meeting>the IEEE Workshop on Variational and Level Set Methods in Computer Vision</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="194" to="202" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
