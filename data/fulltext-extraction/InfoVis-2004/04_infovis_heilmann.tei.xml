<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">RecMap : Rectangular Map Approximations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roland</forename><surname>Heilmann</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
							<email>keim@inf.uni-konstanz.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Panse</surname></persName>
							<email>panse@inf.uni-konstanz.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mike</forename><surname>Sips</surname></persName>
							<email>sips@inf.uni-konstanz.de</email>
						</author>
						<author>
							<affiliation key="aff0">
								<address>
									<settlement>Bayer Technology</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of Konstanz</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of Konstanz</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">University of Konstanz</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">RecMap : Rectangular Map Approximations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Geographic Visualization</term>
					<term>Information Visualization</term>
					<term>Database and Data Mining Visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Results of RecMap-The area of each region corresponds to the number of people living there. The cartograms of Figures 1(a) and 1(c) contain no area error and no empty space error whereas in Figures 1(b), 1(d), and 1(e) no area error occurs and the shapes of the regions are preserved. The colormap indicates the number of people (yellow: high; brown: low).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The information revolution is creating and publishing vast data sets, such as records of business transactions, environmental data, and census demographics. In many application domains, this data is collected and indexed by geo-spatial locations. The discovery of interesting patterns in geo-spatial databases is a key to turn this data into valuable information. Nowadays, different kinds of maps are used to emphasize the spatial distribution of one or more geospatial attributes. The nature of geo-spatial data is the highly nonuniform distribution in real world data sets which has several impacts on the resulting map visualizations. Imagine a data analyst who uses a traditional map, for example the U.S. map, and who wants to find very quickly potentially valuable information. The problem of using classical area maps is that they tend to highlight patterns in large areas, which may, however, be of low importance. It is mostly impossible for the data analyst to understand the presented geo-spatial information quickly, since this visual model does not address the human perception skills.</p><p>Cartographers and geographers used cartograms or value-by-area maps to address this problem long before computers were available. The basic idea of a cartogram is to distort a map by resizing its regions according to some external geography-related parameter. First hand-made cartograms can be found in <ref type="bibr">[12, pp. 216-217]</ref>. Here, the area of a region corresponds to its population in 1958. (A detailed description of how to construct rectangular cartograms manually can be found in <ref type="bibr" target="#b10">[12]</ref>.) However, the manual construction of cartograms is a very difficult task because, on the one hand, we have to resize the regions according to their geo-spatial statistical values and, on the other hand, we have to take into account that the (original) shapes of the regions and their neighborhood relationships (topology) are preserved as much as possible.</p><p>Consequently, the study of automated methods for drawing cartograms is of considerable interest. In the meantime, many automatic cartogram generation techniques have been developed (for an overview see <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b6">7]</ref>). Circular cartograms <ref type="bibr" target="#b0">[1]</ref> (see <ref type="figure" target="#fig_1">Figure 2</ref>(a)) ignore the shape of the input polygons completely and represent them as circles. In many cases, the area and topology constraints have to be relaxed, too. The general applicability of this technique is open to question. TreeMaps <ref type="bibr" target="#b5">[6]</ref>, which are a well-known information visualization technique, are an appropriate method to display data with a given hierarchic order. They divide the display area into rectangles such that the area of each rectangle corresponds to its statistical value. <ref type="figure" target="#fig_1">Figure 2</ref>(b) displays an example where TreeMaps are used for visualizing U.S. census data. To the best of our knowledge there do not exist any automatic procedures which compute the split hierarchy of the map. This work has to be done by the user  via interaction. Most of the techniques which have been presented so far do not take the shape and the topology of the map into account, e.g. <ref type="bibr" target="#b0">[1]</ref>, or the area error on continuous cartograms cannot be eliminated completely, e.g. <ref type="bibr" target="#b6">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">OUR CONTRIBUTION</head><p>The idea of this work is to approximate familiar land covering map region shapes by rectangles and to find a partition of the available screen space where the areas of these rectangular regions are proportional to given statistical values. In order to support the understanding of the information represented by a cartogram we try to place the rectangles as close as possible to their original positions and as close as possible to their neighbors. We define two variants of this optimization problem and present two corresponding (heuristic) algorithms which generate space filling partitions of the screen space with respect to the given geo-locations. Both algorithms construct cartograms where the area of each rectangle of the cartogram is proportional to its area within the map. The difference between these heuristics is that the first method does not allow empty space, whereas the second one preserves the shapes of the polygons.</p><p>The remainder of this paper is organized as follows: Section 3 is devoted to a formal description of the (variants of the) map partition problem or cartogram problem. In Section 4, we present two heuristic solution procedures. The efficiency of our new approach as well as some application examples are shown in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PROBLEM DEFINITION</head><p>In this section, we give a formulation of the problem of determining a near-optimal cartogram P = {p 1 , . . . , p R } for a given map P = {p 1 , . . . , p R } consisting of R polygons or regions and vector Z = (z r ) r=1,...,R of spatial data values z r ≥ 0 with ∑ R r=1 z r = 1. For this, we first refer to the constraints which have to be met during the optimization process. Hereafter, we turn to the single components of the objective function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Constraints</head><p>When determining P we can choose among several possibilities of representing the regions of P. We have decided to use rectangular polygons as in this way the expressiveness of P is not impaired by insignificant details of the shapes of the polygons of P. As indicated before, we name this type of cartogram rectangular map. Hence, we have to meet the following constraints in any case:</p><p>• P is planar,</p><p>• each polygon p ∈ P is a rectangle, and</p><p>• each polygon p ∈ P is neighbor of at least one different polygon p ∈ P.</p><p>A cartogram P obeying these constraints is called feasible. The set of feasible cartograms is denoted by M .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Objective function</head><p>The quality of P depends on two aspects: First, we have to evaluate whether the polygons of P can be easily recognized in P. Second, the areas of the polygons of P have to reflect the geo-spatial data values given by Z. In general, these requirements represent conflicting goals. Based on these aspects, we use five criteria in order to evaluate the quality of P. These criteria, which correspond to the components of the objective function, are presented in the following.</p><p>Area The quality of P w.r.t. the criterion "area" is measured by the area error A(P) = A(P, Z) with</p><formula xml:id="formula_0">A(P) := 1 R • R ∑ r=1 |ε r − z r | z r .<label>(1)</label></formula><p>A(P) equals the average relative deviation of the actual share ε r := a(p r )/A f (P) of the area a(p r ) of a polygon p r in the filled space or filled area A f (P) := ∑ R r=1 a(p r ) of P from its desired share z r in A f (P).</p><p>Shape The shape error S(P) = S(P, P) reflects the average relative deviation of the shape of a polygon p r ∈ P from that of its corresponding polygon p r ∈ P and is determined as follows:</p><formula xml:id="formula_1">S(P) := 1 R • R ∑ r=1 |s(p r ) − s(p r )| s(p r ) .<label>(2)</label></formula><p>The shape s(p r ) or s(p r ) of a polygon p r ∈ P or p r ∈ P is measured by the ratio of its maximum extension in horizontal direction and its maximum extension in vertical direction, respectively.</p><p>Topology The topology error T (P) is an indicator of the deviation of the neighborhood relationships given by P from those given by P. To obtain T (P), we first have to compute the adjacency graphs or pseudo dual graphs G a and G a of P and P, respectively. An adjacency graph reflects the neighborhood relationships between the polygons of a polygon mesh (cf. <ref type="bibr" target="#b8">[9]</ref>, p. 267). To obtain that graph, we first introduce a vertex for each polygon of the polygon mesh. Next, for each pair of neighbored polygons, we add an edge between the corresponding vertices.</p><formula xml:id="formula_2">T (P) = T (P, P) with T (P) := |E a \E a | + |E a \E a | |E a ∪ E a | ,<label>(3)</label></formula><p>where E a and E a denote the set of edges of G a and G a , respectively, reflects the number of neighborhood relationships being solely contained in one of both polygon meshes and is normalized to the interval [0, 1]. An example for the calculation of T (P) is given by <ref type="figure" target="#fig_2">Figure 3</ref>.</p><p>Relative polygon positions An important criterion for the recognizability of the polygons in P are their relative positions. But since they are only partially reflected by the adjacency graph we use the (relative) position error R(P) = R(P, P) with</p><formula xml:id="formula_3">R(P) := 2 R • (R − 1) • 1 180 • • R−1 ∑ r=1 R ∑ ρ=r+1 α r,ρ ,<label>(4)</label></formula><p>which is normalized to the interval Empty space As we make use of rectangular maps it might happen that P contains "holes" or empty space which comprises those areas which are completely surrounded by filled space, i.e. by polygons of P. Consequently, we also measure the quality of P by the empty space error E(P) with</p><formula xml:id="formula_4">[0, 1]. α r,ρ := arccos( u r,ρ • u r,ρ )/(| u r,ρ | • | u r,ρ |)</formula><formula xml:id="formula_5">E(P) := A t (P) − A f (P) A t (P) ,<label>(5)</label></formula><p>which equals the share of empty area in the total area A t (P) of P. A t (P) stands for the space being enclosed by the boundary of P.</p><p>Again, E(P) is normalized to the interval [0, 1].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Formulation of the optimization problem</head><p>To give the user full control over the visualization goals we have developed two variants of the map partition problem each of them focussing on different components of objective function F(P) = (A(P), S(P), T(P), R(P), E(P)).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Variant 1 (MP1)</head><p>Since one of the most important aspects w.r.t. the expressiveness of cartograms is that spatial data is represented by area, we require that A(P) equals zero. In order to use the full screen space, we demand that E(P) equals zero, too. Hence, using the constraints and the components of F which have been introduced above, we can state the first variant of the map partition problem being considered in this paper as the following vector minimum problem:</p><formula xml:id="formula_6">Min. F(P) (6) s.t.</formula><p>P ∈ M , A(P) = 0, and E(P) = 0.</p><p>Variant 2 (MP2) Like for (MP1), we demand that no area error occurs. Second, in order to take the recognizability of the polygons into account, we do not allow any shape error. Consequently, we obtain the following optimization problem:</p><formula xml:id="formula_8">Min. F(P) (8) s.t.</formula><p>P ∈ M , A(P) = 0, and S(P) = 0.</p><p>It is likely that (MP1) and (MP2) represent N P-hard optimization problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">THE RecMap ALGORITHM</head><p>In the following, we are going to present heuristic solution procedures for both variants of the map partition problem. First, we refer to a heuristic for (MP1). Hereafter, we present a method which computes a near-optimal solution for (MP2).</p><p>To obtain cartograms of high quality, we repeat the construction of cartograms using a genetic algorithm (cf. <ref type="bibr" target="#b3">[4]</ref>, 2000) which guides the optimization process. In each iteration of this meta heuristic, a set or generation of cartograms or individuals is generated. An individual is characterized by three aspects: the genotype, the construction algorithm, and the phenotype. The genotype stands for the information needed to generate the corresponding phenotype using a certain construction algorithm. In our context, the genotype corresponds to an array of nonnegative integers and the phenotype to a (feasible) cartogram.</p><p>The individuals of a generation are evaluated by means of a weighted objective function F which is derived from F. Then, we select a predefined number of best individuals and determine the next generation out of their genotypes by applying replication and mutation. This process is repeated until a predefined number of generations has been generated or a given amount of time has elapsed. The best cartogram which has been found so far is returned.</p><p>The weights of F can be set by the user according to her or his visualization goals. In this way, the user gains control over the visualization process and result. The effect of different weights on the </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Basic idea</head><p>In order to achieve E(P) = 0, our heuristic is based on the procedure of <ref type="bibr" target="#b7">[8]</ref> which -starting with a single rectangle -computes a sequence of partial cartograms P by adding a rectangle in each step in such a way that no empty space can occur. In the following, we first give a detailed description of this basic procedure which serves as the construction algorithm within our genetic algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Initialization step</head><p>In the initialization step, we first draw the initial partial cartogram which consists of a rectangle, denoted by p 1 , with an horizontal</p><formula xml:id="formula_10">extension of max r=1,...,R max i=1,...,n r x r i − min r=1,...,R min i=1,...,n r x r i and a vertical extension of max r=1,...,R max i=1,...,n r y r i − min r=1,...,R min i=1,...,n r y r</formula><p>i . (n r stands for the number of nodes of p r and (x r i , y r i ) for the position of the ith vertex of p r in clockwise order.) Second, we compute the center of gravity c(p r ) for each polygon p ∈ P and plot this point into the starting rectangle. In the following, the polygons of P are represented by their centers of gravity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Main step</head><p>In the main step, we perform a sequence of so-called splits. Each split refers to a rectangular polygon p ∈ P, which contains at least two centers of gravity, and divides it into two new rectangular polygons, each of them containing at least one center of gravity. In this way, we construct a sequence of partial cartograms P with no empty space error. Each p ∈ P represents the aggregation of those polygons of P which correspond to the centers of gravity c(p r ) being contained in p (i.e. c(p r ) ∈ p). The main step ends, when each rectangle contains exactly one center of gravity and hence no further split can be done. Consequently, after R − 1 splits we obtain a partial cartogram P with R polygons. This final (partial) cartogram corresponds to a (complete) cartogram: P := P. The polygons of P have to be renumbered because, as indicated before, a rectangle p ∈ P represents that polygon p r ∈ P which corresponds to the single center of gravity being included in p. Therefore, p gets the index r.</p><p>We differ between two types of splits: a horizontal split and a vertical split. A horizontal (vertical) split introduces a horizontal (vertical) splitting line into the rectangle p ∈ P to be split, which results in two new polygons p and p with p being below (left) of p . Splitting is done in such a way that, after each split, we have for the current partial cartogram P</p><formula xml:id="formula_11">a(p r ) | P| ∑ ρ=1 a(p ρ ) = ∑ c(p r )∈p z r (r = 1, . . . , | P|),<label>(10)</label></formula><p>i.e. the area of p r ∈ P is proportional to the sum ∑ c(p r )∈p z r of the spatial data values of the polygons p r ∈ P being associated with c(p r ) ∈ p (r = 1, . . . , | P|).</p><p>We try to split a polygon p ∈ P as equally as possible: If we do a horizontal (vertical) split, we scan the points c(p r ) ∈ p from bottom to top (left to right), and add them to p until we have</p><formula xml:id="formula_12">∑ c(p r )∈p z r ≥ 1 2 • ∑ c(p r )∈p z r .<label>(11)</label></formula><p>Those centers of gravity of p which have not been added to p are added to p . If p contains two centers of gravity, we stop after having scanned the first. Provided that we perform a horizontal or vertical split of p r ∈ P, the splitting line is placed into p r such that the height or the breadth of p equals</p><formula xml:id="formula_13">∑ c(p r )∈p z r ∑ c(p r )∈p z r • (y r 3 − y r 1 ) or ∑ c(p r )∈p z r ∑ c(p r )∈p z r • (x r 3 − x r 1 ) ,<label>(12)</label></formula><p>respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.4">The RecMap -algorithm for Variant 1</head><p>A major drawback of the procedure described in the previous section is its rigidity. This means, that the polygons resulting from a horizontal split have to be split vertically in any case and vice versa. But in this way, no special attention is paid to the shapes of the polygons and the neighborhood relationships between them. For example, if the majority of the polygons p ∈ P possesses a longish shape (i.e. s(p) &lt; 1) the procedure might lead to seriously deformed cartograms, i.e. cartograms P with high values for S(P) and T (P). In such a case, it would have been indicated to prefer vertical splits.</p><p>This drawback can be avoided by using split sequences. For example, let a cartogram P be obtained by performing a horizontal split and two vertical splits afterwards. If we associate a horizontal split with 0 and a vertical split with 1, we get the split sequence <ref type="figure">(0, 1, 1)</ref>. This split sequence can be conceived as the genotype of P. In general, the genotype of a cartogram is a vector (I λ ) λ =1,...,R−1 of (binary) values I λ ∈ {0, 1}.</p><p>To use the construction algorithm described above w.r.t. a given split sequence (I λ ) λ =1,...,R−1 , it has to be adapted accordingly. For this, we introduce variable λ which stands for the split position which is currently considered. I λ represents the splitting type to be chosen for the λ th split. At the end of the algorithm, λ equals R−1.</p><p>The adapted construction algorithm is given by Algorithm 1. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Basic idea</head><p>In literature, we find an optimization problem in the context of inner-plant layout planning (cf. <ref type="bibr" target="#b8">[9]</ref>, pp. 255) which shows certain similarities to (MP2). This layout problem can be roughly stated as follows: We are given a rectangular site, a set of machines (being described by their ground plans), and the amounts of material which have to be transported between them. The objective is to find a layout, i.e. a plan with the positions of the machines on the site, such that the transportation costs are minimized, i.e. that machines with a high transportation intensity in between are located as close as possible. The map partition problem considered here is similar to the layout problem in so far as we are also given a set of rectangular areas (i.e. polygons) which have to be placed such that the distances between them are taken into consideration.</p><p>The construction algorithm of our heuristic for (MP2) relies on two ideas of the procedure of <ref type="bibr" target="#b2">[3]</ref> which is derived from a graph theoretical model of the layout problem. First, in the initialization step, we choose a specific polygon, called the core polygon p c , to be the center of the layout or cartogram. Second, in the main step, we construct a sequence of partial layouts or partial cartograms P, i.e. starting with p c , the remaining R − 1 polygons are placed around it one after the other until we have found a (complete) cartogram P := P.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Initialization step</head><p>As the area error and the shape error ought to be zero, the breadth b(p r ) and height h(p r ) of each polygon p r ∈ P are given by</p><formula xml:id="formula_14">b(p r ) := z r • ∑ R r=1 a(p r ) • s(p r ) and (13) h(p r ) := z r • ∑ R r=1 a(p r ) s(p r ) ,<label>(14)</label></formula><p>respectively. The core polygon p c is determined with the help of an extension G a x of G a which is obtained by introducing an additional node R + 1 for the outer region of P. p c corresponds to a polygon p r which has the maximum distance d r,R+1 from the outer region p R+1 where the distance between two polygons is measured by the minimum number of edges between their corresponding nodes in G a x .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Main step</head><p>As indicated before, the main step consists of R − 1 partial steps.</p><p>In each of these steps, we choose an index r among the set of indices of those polygons which have not yet been created and added to P. Let Q denote the set of indices of the polygons p r ∈ P.</p><p>Then, the index of the newly created polygon has to be taken from {1, . . . , R}\Q. Since the maintenance of the neighborhood relationships of P is of high importance w.r.t. the recognizability of the polygons of P, we have a look at G a in order to determine the index r of the polygon to be added next. We demand that the corresponding polygon p r ∈ P is a neighbor of at least one of those polygons p r ∈ P the indices of which are contained in Q because otherwise, the adjacency graph of the resulting partial cartogram P would not be connected and we could no longer guarantee P ∈ M for the final cartogram P. Let N (p r ) denote the set of neighbors of p r in P, i.e. N (p r ) = {p ρ |(r, ρ) ∈ E a }. If there are several indices which could be selected, we choose the lowest one. Thus, we set</p><formula xml:id="formula_15">r := min{r ∈ {1, . . . , R}\Q|p r ∈ ρ∈Q N (p ρ )}. (15)</formula><p>After the determination of r we have to decide where to place the corresponding polygon p r . In general, there exists an infinite number of possible positions for p r . In order to keep the computational time low, we have to restrict ourselves to a finite subset.</p><p>Pretests have revealed that the following procedure is favorable: We scan the edges e of the boundary E of P and determine a set Π e of possible positions for p r w.r.t. e. For example, we add the end points and the middle point of e to Π e as possible positions of the lower left corner of p r . To keep the number of possible positions low and to exclude infeasible positions, each position (x, y) ∈ Π e is checked within a multi-stage test. For instance, we remove those positions from Π e which cause a violation of the planarity or which could lead to unacceptable high values of T (P) or R(P).</p><p>Subsequent to the determination of the sets Π e we select the best position (x , y ) and create p r at that position. (x , y ) is found as follows: Let Π denote the set of all feasible positions which have been found so far. For each position (x, y) ∈ Π, we temporarily extend P by adding the newly created polygon p r at (x, y) and compute a weighted sum F( P) of the values of the components of F. The position associated with the minimum value of F equals (x , y ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.4">The RecMap -algorithm for Variant 2</head><p>As the order in which the polygons are added to P is of high importance we have to encode this information by the genotype of P which equals a vector (I λ ) λ =1,...,R of values I λ ∈ {1, . . . , R} with I λ = I λ for λ = λ (λ , λ ∈ {1, . . . , R}). For the use within our genetic algorithm-based heuristic, we have to adapt the choice of r accordingly. This means, that among the set of indices of those polygons which are neighbors of polygons p r with r ∈ Q, we select that index r which is the first of them in I. Hence, (15) has to be modified as follows:</p><p>r := min{λ ∈ {1, . . . , R}|I λ ∈ {1, . . . , R}\Q and</p><formula xml:id="formula_16">p I λ ∈ ρ∈Q N (p ρ )}.<label>(16)</label></formula><p>The construction algorithm is given by Algorithm 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>STEP 1 (initialization step)</head><p>Create </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EFFICIENCY &amp; APPLICATION</head><p>The algorithms described above were implemented in ANSI-C using the O4 compiler option and run on the operating systems Microsoft Windows and UNIX. The tests were performed on a 1.5 GHz Intel Xeon server with 4 GB main memory under Linux (only 1 MB was needed by the algorithms). In this section, we will show some applications using the U.S. census data base and U.S. election data.</p><p>Efficiency <ref type="figure" target="#fig_7">Figure 5</ref> shows, for each generation, the best cartogram which has been found so far by the heuristic for (MP2) and <ref type="figure" target="#fig_8">Figure 6</ref> illustrates the respective values of the errors. The values for the (MP1) approach are illustrated, too. From these scatterplots we can conclude that the heuristic for (MP2) is more time  consuming than that for (MP1). Since RecMap gives us a useful visualization even after the first iteration the interactive exploration of the data is guaranteed (see the cartogram yielded after Step 1 in <ref type="figure" target="#fig_7">Figure 5</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>U.S. election analysis</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>U.S. census analysis</head><p>We have applied RecMap to the population data of the U.S. census data set. In <ref type="figure">Figure 8</ref> RecMap has been integrated into our CartoView-System together with other information visualization techniques for geo-spatial data which have been introduced in the past <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. The interaction allows us to make the exploration process more efficient and effective.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION &amp; FUTURE WORK</head><p>In this study we have analyzed and discussed the problem of efficient map partitioning and have proposed two automatic, scalable, and flexible algorithms called RecMap for generating rectangular map partitions. Here, the user has an explicit control of all visualization constraints. Our approach is novel because its features (no area error, explicit control of shape, topology, empty space, and relative position constraints) are not provided by previous approaches. This new technique enables interactive views of detail at various levels to find very fast interesting patterns or subsets.</p><p>The experiments show that our algorithms offer good results for a variety of applications, and their speed even allows an interactive display. Further research could comprise the combination of our approach and other visualization techniques such as pixeloriented techniques (where the pixels could be placed directly into their corresponding map partitions). Such a combination would allow to visualize areas with high information density. Additional material (e.g. an executable file) and ongoing work can be found on our web site http://dbvis.inf.uni-konstanz.de/ projects/RecMap. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>(a) A screen capture of Dorling's Circle Cartograms [1] using the 2000 U.S. population data and the cdv-tool. [2] (b) Treemap -interactively controlled method based on TreeMaps [10] -Visualizations of the presidential race in 2000.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Related work on RecMap</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>The Figures show the adjacency graphs of the U.S. map (left) and a corresponding map partition (right). The red colored segments indicate the topology error.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>measures the deviation of the relative positions of polygons p r and p ρ from those of p r and p ρ with the help of vectors u r,ρ = c(p ρ ) − c(p r ) and u r,ρ = c(p ρ ) − c(p r ) where c(p r ) and c(p r ) stand for the centers of gravity of p r and p r , respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 : 4 . 1</head><label>441</label><figDesc>Cartograms P resulting from different weights for the components of F resulting cartograms is demonstrated in Figure 4 w.r.t. our heuristic for (MP2). For example, Figure 4(a) shows the cartogram which is obtained if the weight for T (P) is set to one and the other weights are set to zero. (Figures 4(b) and 4(c) have to be interpreted in an analogous manner.) The cartogram of Figure 4(d) is obtained if all weights are set to one. Variant 1</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>STEP 1 (Algorithm 1 :</head><label>11</label><figDesc>initialization step) P := {p 1 }; S := {p 1 }; λ := 1 STEP 2 (main step) WHILE S = / 0 DO Remove p from S IF |{p r ∈ P|c(p r ) ∈ p}| &gt; 1 THEN IF I λ = 0 THEN Split p horizontally into p and p ELSE Split p vertically into p and p S := S ∪ {p }; S := S ∪ {p } P := P\{p}; P := P ∪ {p , p } λ := λ + 1 RETURN P Construction procedure for the MP1 heuristic 4.2 Variant 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Algorithm 2 :</head><label>2</label><figDesc>G a x r := min{r ∈ {1, . . . , R}|d r,R+1 = max ρ=1,...,R d ρ,R+1 } Create p r at (0, 0); P := {p r }; Q := {r }; p c := p r STEP 2 (main step) WHILE Q = {1, . . . , R} DO r := min{r ∈ {1, . . . , R}\Q|p r ∈ ρ∈Q N (p ρ )} Q := Q ∪ {r } Π := / 0 FOR e ∈ E DO Determine Π e ; Π := Π ∪ Π e F := ∞ FOR (x, y) ∈ Π DO Create p r at (x, y); P := P ∪ {p r } IF F( P) &lt; F THEN (x , y ) := (x, y); F := F( P) P := P\{p r } Create p r at (x , y ); P := P ∪ {p r } RETURN P Construction procedure for the MP2 heuristic</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>This Figure demonstrates the continuous improvement of the feasible solutions for (MP2) with increasing number of generations. The computation time for each iteration equals 5 seconds.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>The scatterplots display the errors over time yielded by the (MP1) and (MP2) heuristics for U.S. state level. Note that the time axes are logarithmically scaled. The whole computation time for 10 iterations equals 0.33 seconds for (MP1) and 55 seconds for (MP2).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>We ran the algorithms on a number of example data sets. Figures 7(b) and 7(c) show the U.S. electoral voters corresponding to the presidential election result in 2000.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>(a) we show the original map on state and county level. On all maps of Figure 8 a unipolar colormap (see Figure 8(h)) is used to indicate the number of people. In Figures 8(b) and 8(c), highly populated regions, e.g. L.A. and Chicago, are made clearly visible. Figures 8(d)-8(g) show rectangular maps for California, New York state, and Texas using RecMap for Variants 1 and 2. Please note that for all rectangular cartograms the area error is zero.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 7 :Figure 8 :</head><label>78</label><figDesc>(a) Traditional map which can be accessed at [11] (b) RecMap for (MP1) (c) RecMap for (MP2) Visualizations of the presidential race in 2000. The areas of Figures 7(b) and 7(c) correspond to the numbers of electoral voters. The red and the blue color depict which candidate has won each state. The candidate who covers most of the area of all polygons in Figures 7(b) and 7(c) has won the election.(a) Traditional U.S. map on state and county level (b) Results of RecMap (Variant 1) using U.S. census population data on U.S. state and county level (c) Results of RecMap (Variant 2) using U.S. census population data on U.S. state and county level (d) CA using Variant 2 (e) NY using Variant 2 (f) TX using Variant 1 (g) TX using Variant 2 (h) Colormap Population data from U.S. Census Bureau on various levels for the year 2000 -The area of each map partition corresponds to the number of people living there. The colormap of Figure 8(h) indicates the number of people living in each region (yellow: high population; brown: low population) and is a link from the traditional map to the corresponding map partitions.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">October 10-12, Austin, Texas, USA 0-7803-8779-1/04/$20.00 ©2004 IEEE IEEE Symposium on Information Visualization 2004</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>We thank Stephen C. North from the AT&amp;T Shannon Laboratory in Florham Park, New Jersey, U.S., for encouraging this research. We thank Catherin Plaisant for preparing the Treemap picture in <ref type="figure">Figure 2</ref> </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Area Cartograms: Their Use and Creation. Department of Geography</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Dorling</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
		<respStmt>
			<orgName>University of Bristol, England</orgName>
		</respStmt>
	</monogr>
	<note>1st edition</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Cartographic visualization: Exploratory spatial data analysis with local indicators of spatial association using tcl/tk and cdv</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Dykes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Statistician</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="485" to="497" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">R</forename><surname>Foulds</surname></persName>
		</author>
		<title level="m">Graph Theory Applications</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Genetic Algorithm and Engineering Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Cheng</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Continuous cartogram construction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Donald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">J</forename><surname>House</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kocmoud</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<meeting><address><addrLine>Research Triangle Park, NC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="197" to="204" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Treemaps: A space-filling approach to the visualization of hierarchical information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;91 Conf</title>
		<meeting>Visualization &apos;91 Conf</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="284" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">CartoDraw: A fast algorithm for generating contiguous cartograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Panse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2004-02" />
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="95" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Efficient cartogram generation: A comparison</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Panse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jörn</forename><surname>Schneidewind</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">InfoVis 2002, IEEE Symposium on Information Visualization</title>
		<meeting><address><addrLine>Boston, Massachusetts</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-10" />
			<biblScope unit="page" from="33" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Produktions-und Operations-Management</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Neumann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Springer</publisher>
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">User interfaces for the u.s. bureau of census online survey interfaces and data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kent</forename><surname>Norman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shneiderman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Catherine</forename><surname>Plaisant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Evan</forename><surname>Golub</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gunjan</forename><surname>Dang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Egemen</forename><surname>Tanin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Haixia</forename><surname>Zhao</surname></persName>
		</author>
		<ptr target="http://www.cs.umd.edu/projects/hcil/census/" />
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Principles of Cartography</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erwin</forename><surname>Raisz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1962" />
			<publisher>McGraw-Hill</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On rectangular cartograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bettina</forename><surname>Marc Van Kreveld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Speckmann</surname></persName>
		</author>
		<ptr target="http://www.us.es/ewcg04/Articulos/Speckmann.ps" />
	</analytic>
	<monogr>
		<title level="m">20th European Workshop on Computational Geometry</title>
		<meeting><address><addrLine>Seville</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004-03" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
