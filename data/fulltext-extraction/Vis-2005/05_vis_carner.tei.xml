<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Topology-driven Surface Mappings with Robust Feature Alignment</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Carner</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miao</forename><surname>Jin</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xianfeng</forename><surname>Gu</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename><surname>Qin</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Stony Brook University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Topology-driven Surface Mappings with Robust Feature Alignment</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.7 [Computer Graphics]: Computational Geometry and Object Modeling-Curve</term>
					<term>surface</term>
					<term>solid</term>
					<term>and object representations; Surface parameterization</term>
					<term>Riemannian surface structure</term>
					<term>Computational topology</term>
					<term>Shape morphing</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Surface mapping between horse and lizard. The color-coding shows the mapping of each region, guided by eight user-specified feature curves. Our topology-driven method provides mappings of different homotopy type between the two surfaces as shown in (c) and (d). We show feature curves in red.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Surface mapping is of prime significance in many graphics applications including shape analysis, texture mapping, animation transfer, shape morphing, feature registration, and many other digital geometry processing methods. In principle, parameterization-based surface mapping methods can be classified by the topology of the parametric domain. Typically, surfaces that are homeomorphic to a disk can be easily parameterized over the plane. For topologically more complicated shapes, the parameter domain can be an arbitrary surface in R 3 , and so a parameterization will essentially be a mapping between two objects. In such a case, a continuous, meaningful mapping requires that the two surfaces share the same topological attributes, such as genus and number of boundaries. In addition to the topological factors, a desirable surface mapping also hinges upon the specific application demands. For example, texture mapping frequently requires a planar parameterization because most textures are acquired/synthesized as 2D images. However, applications such as remeshing, morphing, and medical model registration are better suited to a surface mapping between topologically equivalent manifolds in 3D.</p><p>Furthermore, topological concepts and techniques have been broadly applied in computer graphics and geometric modeling ( <ref type="bibr" target="#b5">[6]</ref>). However, the homotopy type of a mapping between two surfaces has not been addressed before. While other surface mapping methods focus on a single homotopy class, in this paper, we articulate a theoretically rigorous method that produces many continuous maps of different homotopy type between two arbitrary triangle meshes with the same topology (see <ref type="figure" target="#fig_1">Figures 2 and 9</ref>). The uniqueness of our methodology results from applying the rich mathematical theory of topology to surface classification, rather than relying solely on the embedded geometry. In a nutshell, we first compute  a special set of curves, called the canonical homology basis, that will cut any two homeomorphic surfaces in the same way into a topological disk (see <ref type="figure" target="#fig_8">Figure 6</ref>). Then, we can parameterize each sliced surface over a planar domain, using a metric to reduce the distortion. Next, we can create a mapping between the planar domains of two surfaces and extract the final mapping between the original surfaces from the shared planar domain.</p><p>In addition, our novel, topology-based approach has several other advantages. First, current methods require the use of heuristics to avoid bad path-tracing while partitioning the surface into multiple regions between features. On the other hand, our technique enables an elegant feature mapping mechanism that can robustly satisfy user-specified, hard constraints without relying on ad-hoc approaches to ensure validity. Moreover, unlike some methods, we do not require a minimum number of features to be inserted. The feature curves are always guaranteed to be parts of cutting curves mapped to hard, planar boundaries, so the exact feature alignment will be naturally enforced, while non-feature regions are automatically mapped.</p><p>Aside from acting as a useful tool for computer graphics applications, our method can be used as a rigorous and practical mechanism for visualizing and gaining an intuitive understanding of abstract topological concepts such as homotopy type of surface mappings, homology basis, fundamental domain, and universal covering space. Our approach computes many different mappings between two surfaces, each of which corresponds to a single homotopy class (see <ref type="figure" target="#fig_11">Figure  9</ref>).</p><p>The main contributions of our method are outlined as follows:</p><p>• A novel technique for computing mappings of different homotopy type between two arbitrary surfaces with the same topology.</p><p>• A fundamental method for computing sets of canonical homology basis curves that slice the surface to a single disk.</p><p>• An elegant, local feature correspondence technique that robustly satisfies hard constraints, without the use of heuristics to avoid bad path-tracing.</p><p>• A new mechanism that allows the user to quickly change the homotopy type, or global structure, of the mapping with minimal user intervention.</p><p>• An approach for the visualization and intuitive understanding of abstract topological concepts such as homotopy class of surface mappings, homology basis, fundamental domain, and universal covering space.</p><p>Note that, in the interest of space, this paper focuses only on applying our mapping to shape morphing and color transfer. However, the technical scope of this work easily extends to other visual computing applications, including animation transfer, feature registration for medical applications, remeshing, and other geometry processing applications. The space limitation also compels us to assume that the reader has some knowledge of the relevant concepts and language of abstract topology. We only include a minimal explanation of these concepts in the Appendix, and we refer the reader to <ref type="bibr" target="#b13">[14]</ref> and <ref type="bibr" target="#b11">[12]</ref> for a more thorough treatment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Previous Work</head><p>Planar parameterization. Parameterization of 3D surfaces over the plane are the most developed because of the early attention to texture mapping for enhancing the visual quality of polygonal meshes. In order to compute a one-toone mapping to a planar domain, a surface has to be homeomorphic to a disk. The goal of a planar parameterization of a disc-like mesh M in R 3 is to find an appropriate polygonal domain Ω ⊂ R 2 and a suitable piecewise linear mapping φ :  <ref type="bibr" target="#b19">[20]</ref>), or overlapping charts <ref type="bibr" target="#b8">[9]</ref>, others cut the mesh into a single disk ( <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b9">[10]</ref>, <ref type="bibr" target="#b25">[26]</ref>, <ref type="bibr" target="#b10">[11]</ref>). The quality of the resulting parameterization depends on the cut placement.</p><formula xml:id="formula_0">P ⊂ R 3 → Ω, such that φ(x, y, z) = (u, v) = x −</formula><p>For our purpose of computing an intermediate planar mapping, we must slice open the two homeomorphic surfaces using the same cut graph. In addition, mapping an atlas of multiple charts can be cumbersome, and many of these methods rely on heuristics to place the cuts; they cannot guarantee a canonical planar domain boundary for each surface. To alleviate this difficulty, <ref type="bibr" target="#b5">[6]</ref>, <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b26">[27]</ref>, and <ref type="bibr" target="#b1">[2]</ref> develop methods for cutting a surface along a canonical homology basis into a single disk. The method of <ref type="bibr" target="#b5">[6]</ref> shows that finding such a cut that minimizes the length is generally NPhard. The algorithm of <ref type="bibr" target="#b1">[2]</ref> finds a provably minimum-length schema, given a non-optimal basis, in polynomial time. By using these methods, one can compute a minimum cut graph on the surface, but only a single set of such curves. On the other hand, our method can compute many canonical cuts for a given surface, allowing the user to make the most desirable choice. Each cut corresponds to a mapping of different homotopy type (see <ref type="figure" target="#fig_1">Figures 2 and 9</ref>).</p><p>Non-planar parameterization. Non-planar methods parameterize the surface over a 3D domain. In the genus-0 case, the surface can be mapped directly to a sphere, but it is harder to guarantee robustness and avoid flipped triangles. Spherical parameterization methods include <ref type="bibr" target="#b0">[1]</ref>, <ref type="bibr" target="#b7">[8]</ref>, and <ref type="bibr" target="#b21">[22]</ref>.  Other methods use a hierarchical approach to map the surface to some topologically-equivalent, coarser domain. They partition the mesh into a set of polygonal regions, each to be mapped onto a single face in the base domain ( <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b17">[18]</ref>, <ref type="bibr" target="#b16">[17]</ref>, <ref type="bibr" target="#b22">[23]</ref>, <ref type="bibr" target="#b23">[24]</ref>). However, this is a problem in itself; it involves tracing consistently-arranged paths between feature vertices on the meshes. Moreover, these techniques require a set of heuristics to avoid bad path-tracing and guarantee the correspondence of the patches.</p><formula xml:id="formula_1">a i , b i , a −1 i , b −1 i . (a) (b) (c) (d)</formula><p>Feature correspondence. For feature alignment, some approaches allow the user to specify a set of point constraints, while others (like ours) represent features as a collection of curves (edge paths) on the mesh. Some use "soft" constraints ( <ref type="bibr" target="#b18">[19]</ref>, <ref type="bibr" target="#b2">[3]</ref>), where the system will attempt to match the features as closely as possible while minimizing a distortion metric. Others create "hard" constraints that will exactly match corresponding feature positions ( <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b15">[16]</ref>, <ref type="bibr" target="#b23">[24]</ref>).</p><p>Hard constraints can be difficult to handle because there may exist no valid mapping that satisfies all the constraints. However, our technique robustly satisfies user-defined hard constraints easily, without the use of ad-hoc approaches like the addition of so-called Steiner vertices ( <ref type="bibr" target="#b4">[5]</ref>, <ref type="bibr" target="#b15">[16]</ref>).</p><p>3 Algorithms</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Overview</head><p>The intent of our method is to create a continuous, piecewiselinear map between triangulated surfaces with the same genus and number of boundaries. Thus, our goal is to obtain a common domain for the surfaces, from which to extract the final mapping. To this end, for each surface we compute a single planar disk with a regular polygonal boundary, the canonical fundamental domain M * of the surface (see <ref type="figure" target="#fig_2">Figure  4</ref>).</p><p>To obtain this, we first compute a special set of curves (edge paths), a canonical homology basis, for the surface (see As mentioned above, the homotopy type of the mapping is governed by the choice of a homology basis for each surface, as well as the one-to-one matching between these sets of curves. This will produce a mapping that belongs to a unique homotopy class of surface mappings. In <ref type="figure" target="#fig_1">Figures 1,2</ref>, and 9, we visualize the effect of the homology basis on the final surface mapping.</p><p>Once we have the two homology basis sets and a matching between them, the surface can be parameterized over the canonical fundamental domain M * . Every surface with the same genus can be cut open to a disk in this manner. The overall alignment of mesh features is governed by the way in which the curves on two surfaces correspond. In our system, the curve mappings can be controlled by the user before and after the mapping to the plane. Once we have cut the surfaces open, we parameterize them onto the plane. Then, we align these planar domains and extract the mapping from the two sets of vertices and faces.</p><p>The outline of our approach is as follows:</p><p>1. The user selects a set of feature curves, which we use in the Feature Handle Conversion of the surface (see Section 3.4). 5. Extract the map between the two meshes and construct a meta-meshM (see <ref type="bibr" target="#b16">[17]</ref>), combining the vertices and tessellations of both models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Computing the Canonical Homology Basis</head><p>First, we informally introduce the relevant terminology. We say that two curves are homotopic to each other if one can be deformed to the other on the surface without any tearing (see <ref type="figure" target="#fig_7">Figure 5</ref>). A more general curve classification theory is homology; we say that two curves are homologous if they bound any 2-dimensional patch on the surface (including handles). Given a surface with genus g, a homology basis is a set of 2g curves {a1, b1, a2, b2, • • • , ag, bg}, each of which is not homotopic to any other, that spans the curve space of the surface. (see <ref type="figure" target="#fig_3">Figure 3)</ref>. A canonical homology basis is a homology basis that meets the following criteria:</p><p>1. All the curves meet at a single base point, v. Here, we explain steps 1-4 of <ref type="figure" target="#fig_2">Figure 4</ref>. A mapping between two genus g surfaces requires that the cut graph structure of both surfaces be equivalent. To accomplish this, we 1) compute canonical homology basis curve sets for the surface, and 2) choose a basis for each surface. In the simplest case, each handle i on the surface will be assigned a pair of curves {ai, bi}: one that travels around the hole ai, and another bi that runs through it (see <ref type="figure" target="#fig_3">Figures 3a and 5)</ref>. The surface M is sliced along the regular cut graph formed by a canonical homology basis to obtain the canonical fundamental domain M * , a 4g-gon. The boundary of this polygon has a regular pattern (see <ref type="figure" target="#fig_2">Figure 4</ref>)</p><formula xml:id="formula_2">a1b1a −1 1 b −1 1 a2b2a −1 2 b −1 2 • • • agbga −1 g b −1 g</formula><p>(the inverse of a curve c is denoted c −1 , traversed in the direction opposite to c).</p><p>To compute the canonical homology basis, we first compute a non-canonical fundamental domain M * nc , formed by the irregular cut graph of a non-canonical homology basis (see <ref type="figure" target="#fig_2">Figure 4</ref>, steps 1-2). In this case, the boundary of M * nc is a set of homology basis curve segments, as opposed to the 4g-sided canonical fundamental domain, whose boundary consists of whole curves formed by a regular cut graph on M . We use the method of <ref type="bibr" target="#b10">[11]</ref> to compute the irregular cut graph and the resulting non-canonical fundamental domain.</p><p>Next (step 3 of <ref type="figure" target="#fig_2">Figure 4</ref>), we use a concept called the universal covering space (UCS) from Riemann surface theory  <ref type="figure" target="#fig_7">Figure 5</ref>). Therefore, each vertex v ∈ M will have a discrete set of preimages or copies v k ∈ p −1 (v) in the UCSM . The central idea is this: if we pick a base vertexṽ0 inM , any curve γ drawn between the pair {ṽ0,ṽ k } represents a unique homology class of curves when mapped to the surface by p. Sinceṽ0 andṽ k each map to v ∈ M , p(γ) will be a loop on M . Eachṽ k corresponds to a curve of different homotopy type.</p><p>In essence, we construct the canonical homology basis in the following manner (see <ref type="figure" target="#fig_2">Figure 4</ref>):</p><p>1. Compute the irregular cut graph of the surface M (noncanonical homology basis) using the method of <ref type="bibr" target="#b10">[11]</ref>.</p><p>2. Slice M along the cut graph to obtain the non-canonical fundamental domain, M * nc . The new boundary of the planar mesh is a set of homology basis curve segments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Construct the UCSM by gluing copies of M *</head><p>nc to itself along corresponding segments. <ref type="bibr" target="#b3">4</ref>. Choose a vertex v ∈ M and fix one corresponding base vertexṽ0 ∈ p −1 (v) in the UCSM .</p><p>5. For eachṽ k ∈ p −1 , find the shortest path between the base vertex andṽ k .</p><p>6. For eachṽ k ∈ p −1 , project the path to M , where the path is actually a closed loop. This closed curve represents a single homology class of curves on the surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Choose 2g projected curves to form the canonical homology basis (see below).</head><p>Choosing the canonical homology basis. For any surface with handles (genus g &gt; 0), there is an infinite number of canonical homology basis curve sets. For each surface, our technique allows the user to visualize a subset of all possible homology bases on the surface and choose the one most appropriate for the desired mapping. After we compute the UCS, we trace shortest paths to find representative candidates for the homology basis and sort them by length on the surface M . Then, we employ a verification procedure, based on the criteria in Section 3.2, to find a combination of curves that constitutes a valid canonical homology basis.</p><p>If the curve set is unsatisfactory, we can continue searching until we find a favorable combination.</p><p>Note that, if the mesh M is too sparse, some curves can share edges, especially around the base vertex v. In order to prevent this, we subdivide the mesh as needed in problem areas to allow more direct routes for shortest path tracing (step 5 of the algorithm above for computing the canonical homology basis).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Surface Mapping</head><p>Planar Parameterization. Once we have computed and chosen a canonical homology basis for each surface, we slice the mesh along these curves to obtain a disk. Each curve a is fixed on one edge of the boundary of the planar 4g-gon domain; the inverse a −1 represents the opposite edge (see <ref type="figure" target="#fig_2">Figure 4</ref>). We compute a parameterization φ : M * → M of the vertices v ∈ M over this domain by using a harmonic mapping f (v) = φ −1 (v) to obtain the planar mesh M * , minimizing the harmonic energy:</p><formula xml:id="formula_3">E h (f ) = 1 2 M |∇f | 2 .<label>(1)</label></formula><p>This metric, popular in the computer graphics community, works quite well to reduce the distortion on the plane. In addition, this translates into a simple linear system of equations, whose weights we compute as the mean value coordinates <ref type="bibr" target="#b6">[7]</ref>.</p><p>Final Mapping. After we have parameterized both meshes over the same planar polygonal region, the goal is to compute the surface mapping ρ : M1 → M2, where</p><formula xml:id="formula_4">ρ(M1) = φ −1 1 (M1) • τ (M * 1 ) • φ2(M2),<label>(2)</label></formula><p>where M1 is mapped to M2 (see <ref type="figure" target="#fig_8">Figure 6</ref>), and τ is a transformation of the planar domain.</p><p>A mapping between two meshes M1 and M2 involves storing, for each vertex, its position, normal, color, and any other desired attributes for each mesh. We compute the surface mapping in the following steps:</p><p>1. For each v ∈ M1, find the face f ∈ M2 in which the (u, v) position φ −1 (v) lies. Compute its barycentric coordinates within f and interpolate the position and attributes of the vertices (v0, v1, v2) of face f .</p><p>2. For each v ∈ M2, find the corresponding face f ∈ M1.</p><p>Compute the new M1 attributes of v as in the previous step.</p><p>3. Combine the vertices and edges of M1 and M2 into the meta-mesh. <ref type="bibr" target="#b3">4</ref>. For each vertex formed by an intersection of an edge of M1 and an edge of M2, interpolate the positions and attributes from the endpoints of those edges. Enter the vertex and the newly-formed edges into the meta-mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Feature Correspondence by Feature Handle Conversion</head><p>The matching of homology basis curves determines the alignment of major shape elements of both meshes; handles are mapped to handles. This defines the homotopy type of the map. However, depending on the geometric differences between the surfaces, sometimes it is necessary to adjust the mapping, or even if the surfaces are very similar, the user may want to create a highly unusual mapping of features. To this end, our system incorporates a novel feature-matching procedure, Feature Handle Conversion, that satisfies userdefined hard constraints robustly and elegantly. The idea is to treat each feature simply as another handle on the surface. We allow the user to input a set of corresponding open feature curves or edge paths on each mesh before it is cut into a disk. Then, for each feature, we can create a new boundary in the mesh M by slicing along the curve. Next, we perform a technique known as double-covering (see <ref type="bibr" target="#b10">[11]</ref>), by which a copy of M is glued to M along the newly-cut boundaries to obtain a new mesh M . The result is a set of new feature handles on each surface. Specifically, for a genus g surface with n feature curves, there will be n − 1 feature handles; thus, the surface M will be of genus 2g + n − 1.</p><p>Then, we can simply proceed as before; compute the canonical homology basis for each doubled surface, inserting the homology basis curve that travels along each feature and back into the basis set in order to ensure that the features are exactly mapped. Then, we match each pair of corresponding feature handles as well as any other true handles of the surfaces. When the mapping procedure is completed, we will have two copies of the meta-mesh glued together. We simply cut one copy away and sew together the boundary holes created when we sliced along the feature curves. Finally, we obtain a mapping between the original meshes: a single meta-mesh with combined tessellations from M1 and M2. This elegant technique guarantees exact feature alignment and a robust surface mapping because the special curves computed on the surfaces are mapped to the hard boundaries on the planar domain. Aside from robustness, this procedure holds an advantage over other ad-hoc hard constraint handling techniques in that it is unnecessary to use heuristics to avoid bad path-tracing between features. Since each feature is treated as a topological handle, the curves are a homology basis, and thus, form a valid configuration on the mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Implementation</head><p>Choosing a canonical homology basis. We have found that it takes less than 2-3 layers of the UCS to produce a canonical homology basis. Each matching of canonical homology bases between the two surfaces will produce a mapping of different homotopy type. Our interactive method produces curve bases one at a time, starting with shorter curves. A naive user can view a preliminary mapping (before the expensive step of meta-mesh construction) for each choice of canonical basis for the two surfaces. If it is unsatisfactory (as explained in Section 3), the system computes the next canonical basis (adding more layers to the UCS if necessary) and presents the resulting partial mapping.</p><p>Feature mapping. We have developed an interactive system for feature mapping that allows the user to enter and match a set of feature curves on each mesh. Then, the system will proceed to compute curves on the meshes along which to slice them open and parameterize them over the planar polygonal region. In this method, the pair of homology basis curves for each feature handle created at a specified feature includes one curve ai that surrounds the handle and another curve bi that is traced from the common vertex v, through the handle, and back to v. By using this system, we can also map surfaces with boundaries by treating each boundary as an additional feature; the user simply chooses the mapping between the boundaries on each surface. When the surface is double-covered, we get another feature handle for the boundary.</p><p>Merging meshes. We represent a map between two meshes M1 and M2 by storing, for each vertex, its position, normal, color, texture coordinates, and any other desired attributes on each mesh. We combine their tessellations into a meta-meshM <ref type="bibr" target="#b16">[17]</ref>. For morphing between the source (M1) and target (M2) meshes, this combined mesh is paramount: we must retain the complete geometry of both source and target. Therefore,M combines the complete connectivity, both vertices and edges, of both meshes. The original geometry is retained by including the vertices created by the intersection (a) (b) (c) 50% morph.  of original mesh edges on the planar domain. On the other hand, the meta-mesh is much more dense than the original meshes, taking up more memory, and the edge connectivity network may be rather cumbersome. In order to produce the best trade-off between this and the geometry loss, it is possible to choose only those edges whose insertion into the meta-mesh will prevent a change in geometry from the original meshes. To this end, our mesh-merging procedure allows the user to specify the maximum dihedral face angle for determining which edges to insert into the meta-mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head><p>In the surface mapping function (Equation 2), we can utilize τ to change homotopy type of the map. For example, by rotating of the domain of M2 by 2π/g radians, we can switch the mapping of the handles. This rotation changes the mappings between the homology basis curves of each surface. We illustrate this concept in <ref type="figure" target="#fig_1">Figure 2</ref>. In the first mapping between M1 (the two-hole torus) and M2 (the vase), the right handles are mapped to each other, as are the left handles.</p><p>In the second, the right handle is mapped to the left handle and vice-versa. <ref type="figure">Figure 1</ref> shows the visualization of two homotopy classes of mappings between a lizard and a horse. Here, the features are treated as topological handles. By rotating the planar fundamental polygon by π radians, we can easily change the mapping. In the first mapping, the lizard and horse heads are mapped to each other. In the next, the horse's head is mapped to the lizard's tail and vice-versa.  In <ref type="figure" target="#fig_10">Figure 8</ref>, we visualize several homotopy classes of mappings between the torus and itself, as well as between the teapot and torus. By using this concept, we can create various new coloring effects. The torus in (a) is mapped to the torus in (b); by matching the curve a + b with a and b with b, we obtain a swirling effect on the flame. In (d) and (e), we create two different mappings between the teapot and itself. We obtain a flame around the handle in (d) by simply mapping a to a and b to b. Next, we switch the curve mappings in (e) (a to b, b to a) to revolve the flames through the handle. In (f), we use the mapping between the torus and teapot to enlarge the handle with a morph (10% torus, 90% teapot).</p><p>We demonstrate the results of our method on two genus-0 surfaces that each have one boundary in <ref type="figure">Figure 10</ref>. The face meshes were acquired from a real-time 3D scanning device. We use four features to guide the mapping process, and we apply our map to morphing and color transfer in (c) and (d), respectively. <ref type="figure">Figure 11</ref> illustrates the mapping between the Stanford bunny and a gargoyle statue. Eight feature curves were specified by the user: two for the wings, two for the ears, two at the bottom, and two on the head. Then, we convert the genus-0 mesh to a genus-7 surface by cutting along the feature curves and double-covering the surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusion and Future Work</head><p>We have articulated a novel, robust approach to the problem of automatically computing continuous maps between two arbitrary triangle meshes with the same topology. Strongly inspired by concepts from topology theory, we have developed several techniques that can easily create a suite of meaningful mappings between two surfaces. We compute canonical homology basis sets to slice the surfaces open, one of which the user chooses for each surface. Moreover, we presented an elegant and robust technique for satisfying hard feature constraints. <ref type="table" target="#tab_1">Lizard  Horse  25002 19859 216821 0  7  Bunny  Gargoyle 12502 10002 109825 0  7  Dirk  Skull  4322  5002  40458 0  5  2H-Torus Vase  770  1476  10955 2  2  Teapot  Torus  4256  2500  37569 1  1  Lock  Torus  1120  2500  16999 1  1  Face 1</ref> Face 2 76365 59700 N/A 0  <ref type="figure">Figure 10</ref>; the resolution of Face 1 is large enough to avoid constructingM .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>M1 M2 M1 M2M g g</head><p>Furthermore, our method tackles the homotopy type of a mapping between two surfaces, which has never been addressed before. In addition to acting as a useful tool for computer graphics applications, our method can be used as a rigorous and practical mechanism for visualizing and gaining an intuitive understanding of abstract topological concepts. Our approach computes many different mappings between two surfaces, each of which corresponds to a single homotopy class. Our results visualize these concepts using shape morphing, color coding, and new coloring effects.</p><p>There are many possible avenues for future research. Given the infinite number of homology basis curve sets for a given surface, so it would be beneficial to provide a more artistic control for naive users, an intuitive way for computing the "best" set of homology basis curves for a surface based on certain metric. Thus, we aspire to extend our method by including such a metric for determining a good choice and placement of the curves based on geometry (curvature). In addition, flattening the surface can induce large distortion if regions of high curvature are not sliced apart. We are currently working on a technique that, given the matching of homology bases, relaxes the mapping on the surface to obtain the minimum distortion. Also, our mapping can be straightforwardly adapted to many other graphics applications, including remeshing, animation and detail transfer, and shape analysis, which we plan to explore. maps vertex to vertex, edge to edge and face to face. If, for any vertex v ∈ M 1 , f maps the one-ring neighbor composed of all faces adjacent to v to a one-ring neighbor of f (v) ∈ M 2 , and the mapping is one to one, then f is a covering map, and M 1 is a covering space of M 2 . Conceptually, for any mesh M , there exists a unique meshM that is a covering space of M and is an infinite topological disk;M is called the universal covering space of M . We denote the covering map as p :M → M . Given a vertex v ∈ M , its preimage p −1 (v) is a discrete set. Supposeṽ 0 ,ṽ 1 ∈ p −1 (v). If we select arbitrarily two curvesr 0 ,r 1 connectingṽ 0 ,ṽ 1 , then p(r 0 ) and p(r 1 ) are closed curves on S through p. Furthermore, they are homotopic to each other.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>IEEE Visualization 2005October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 ©2005 IEEE.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Visualization of two different homotopy classes of mappings between the vase and the two-hole torus by color coding. (a) and (b) show the mapping of the handles between the two-hole torus and the vase: right to right, left to left. Each mapping is produced by a different homology basis on each surface. We obtain a different mapping between the handles in (c) and (d): right to left, left to right. (a) and (c) are 25% morphs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Procedure for computing a canonical fundamental domain, M * . Step 1: Compute an irregular cut graph that will open the surface to a single disk. Step 2: Slice the surface open to a non-canonical fundamental domain, whose edges (here, 18 of them) are segments of homology basis curves. Step 3: Glue copies of the domain to itself along corresponding segments to form the UCSM . Choose a vertex v ∈ M and a preimage of v,ṽ 0 ∈M . Trace paths betweenṽ 0 other preimagesṽ k ∈M of v, each of which corresponds to a single homology class of curves on M . Step 4: Find a combination of such curves that forms a canonical homology basis. Step 5: Slice the surface along this cut graph, constructing a canonical fundamental domain M * . The ith handle is sliced open along the curve sequence</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Visualization of several homology basis curve sets for the two-hole torus. (a) and (b) have canonical homology bases, producing a regular cut graph. (c) and (d) show homology bases that are non-canonical.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig- ures 3</head><label>3</label><figDesc>and 5). This set of curves defines a regular cut graph, along which we slice each surface open in a canonical way.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>2 .</head><label>2</label><figDesc>Compute a set of curves, the canonical homology basis, which becomes a cut graph for slicing each surface open to a single disk. The user can choose any computed set to map corresponding structures of surfaces as desired. 3. Slice each surface open to a disk along the cut graph formed by the set of curves. 4. Parameterize each sliced surface over the plane. The set of curves form the boundary of the canonical fundamental domain M * , a polygon with 4g sides.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>2 .</head><label>2</label><figDesc>Each pair of curves {ai, bi} algebraically intersect each other exactly once. 3. No curve in another pair {aj, bj} algebraically intersects either of {ai, bi}. Here, we define algebraic intersection in the following way. Given two oriented loops a and b on the surface M , let xI be their algebraic intersection number. At any point p ∈ M where a and b cross, we compute the unit vectors tangent to a and b, ta and t b , respectively. Let the unit surface normal at p be n. If (ta × t b ) • n &gt; 0, increment xI ; otherwise, decrement xI . a and b algebraically intersect iff xI = +1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>This universal covering space (UCS)M is formed by infinite copies of the canonical fundamental domain M * of a torus M , sliced open along a canonical homology basis. The covering map p :M → M is a periodic function. The base vertex v has a discrete set of preimages, p −1 (v) =ṽ 0 ,ṽ 1 , . . . onM . A curve γ drawn between each pair {ṽ 0 ,ṽ k } represents a unique homotopy class of curves p(γ) when mapped to the surface by p. Here, p(γ) is homotopic to b. (see the Appendix). Intuitively, the UCSM of a surface M is an infinite topological disk that consists of an unbounded number of copies of the fundamental domain M * glued together along corresponding homology basis curves or curve segments (i.e. ai in one copy is glued to a −1 i in the neighboring copy, and bi in one copy is glued to b −1 i in another copy. Let p :M → M be the so-called covering map, which is a periodic function (see</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>An overview of the surface mapping process. The vase and the two-hole torus are cut open along a common set of curves and parameterized over the canonical fundamental domain M * . The final mapping is extracted from the overlaid meshes. τ can be used to change the homotopy type of the mapping.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :</head><label>7</label><figDesc>The skull model mapped to "Dirk's Head" ( c 2004 Sean Carner) Features are shown in (a) and (b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 8 :</head><label>8</label><figDesc>In (a) and (b), we show curve a + b matched with a and b with b. (c) shows the texture used to create the effects. In (d), we map a to a, b to b. In (e), we map a to b, and b to a. (f) shows a mapping between the torus and teapot with a morph (10% torus, 90% teapot).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9 :</head><label>9</label><figDesc>Visualization of two different homotopy classes of mappings between the vase and the two-hole torus. Each mapping is facilitated by the choice of a homology basis on the two-hole torus.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 7</head><label>7</label><figDesc>demonstrates the mapping between the head of "Dirk" and a skull. Facial feature curves such as the eyes and nose are specified by the user. Our system slices the mesh open along these curves and double covers it, increasing the number of handles. Then, we compute the canonical homology basis, slice the surface open to the plane, and extract the mapping. Finally, we discard one copy of the mesh and sew the cuts to obtain the surface mapping.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 10 :Figure 11 : 1 . 2 .</head><label>101112</label><figDesc>(a) and (b): original face meshes, acquired via 3D scanning. The mapping between them is guided by four features, shown in blue. (c) 50% morph. The color value associated with each vertex of (b) is transferred to (a) using the mapping in (d). Mapping between Stanford bunny and a gargoyle statue, guided by eight user-specified features (red curves). (a) and (b): color-coded corresponding regions. (c) 50% morph. A homotopy between two curves r 0 and r 1 is a continuous map R : [0, 1] × [0, 1] → S, such that R(•, 0) = r 0 and R(•, 1) = r 1 . If r 0 and r 1 can be connected by a homotopy, then r 0 is homotopic to r Homotopy of mappings. Given two surfaces M 1 and M 2 and two mappings f 0 : M 1 → M 2 and f 2 : M 1 → M 2 , a homotopy between f 0 and f 1 is a continuous map F : M 1 × [0, 1] → M 2 , where M 1 ×[0, 1] is the direct product of M 1 and the unit interval, such that F (•, 0) = f 0 , F (•, 1) = f 1 . Two continuous mappings are homotopic to each other if there exists a homotopy between them. Suppose f : M 1 → M 2 is a continuous map that induces a map f * : H 1 (M 1 , Z) → H 2 (M 2 , Z). f * is a linear map between two linear spaces; it can be represented as a matrix. Two maps f 1 , f 2 : M 1 → M 2 are homotopic if and only if f * 1 = f * Universal covering space. Suppose M 1 , M 2 are meshes. A map f : M 1 → M 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc><ref type="bibr" target="#b0">1</ref> and P is the set of vertices i in M with positions xi.</figDesc><table><row><cell>See [7]</cell></row><row><cell>for a survey of planar parameterization methods. including</cell></row><row><cell>Floater's shape-preserving map and mean-value map.</cell></row><row><cell>Surface cutting and computational topology. Other</cell></row><row><cell>planar parameterization methods handle surfaces that do</cell></row><row><cell>not have the topology of a disk, for example, closed surfaces.</cell></row><row><cell>This requires that the topology be modified by partitioning</cell></row><row><cell>the surface into a set disk-like charts and mapping them</cell></row><row><cell>individually to the plane. While some methods slice the</cell></row><row><cell>surface into multiple, non-overlapping patches ([21],</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Mesh sizes (number of vertices) and genus for several data sets used in our system.M is the mesh that contains the merged connectivities of M 1 and M 2 . The change from genus g to g = 2g + n − 1 reflects the addition of n features by the user, which are treated as new handles on the surface. Face 1 and Face 2 are from</figDesc><table /><note></note></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Appendix</head><p>The major concepts and theories in topology used in the paper are introduced in detail in this section.</p><p>Homology and Canonical Basis. Suppose M is a triangle mesh and suppose its vertices</p><p>k . An n-dimensional chain is a linear combination of n simplices with integer coefficients. All n-chains form a linear space called an n-dimensional chain space. The boundary operator ∂n : Cn → C n−1 is a linear operator, which maps a chain to its boundaries. For example, the boundary of a face </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Merging polyhedral shapes with scattered features. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexa</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="26" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Optimal system of loops on an orientable surface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">C</forename><surname>De Verdiere</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lazarus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Foundations of Computer Science</title>
		<meeting>IEEE Symposium on Foundations of Computer Science</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="627" to="636" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Intrinsic parameterizations of surface meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eurographics</title>
		<imprint>
			<biblScope unit="page" from="209" to="218" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Multiresolution analysis of arbitrary meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>ACM SIGGRAPH</publisher>
			<biblScope unit="page" from="173" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Texture mapping with hard constraints</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Eckstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Surazhsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eurographics</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Optimally cutting a surface into a disk</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Erickson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Har-Peled</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 18th Annual ACM Symposium on Computational Geometry</title>
		<meeting>the 18th Annual ACM Symposium on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="244" to="253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Recent advances in surface parameterization. Multiresolution in Geometric Modeling Workshop</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Floater</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hormann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Fundamentals of spherical parameterization for 3d meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sheffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Parameterization using manifolds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Grimm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hughes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal on Shape Modeling</title>
		<imprint>
			<biblScope unit="page" from="51" to="80" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Gortler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<title level="m">Geometry images. ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="355" to="361" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Global conformal surface parameterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-T</forename><surname>Yau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Symposium on Geometry Processing</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="127" to="137" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">A Combinatorial Introduction to Topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Henle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>Dover</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Mips: An efficient global parameterization method. Curve and Surface Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hormann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Grenier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="153" to="162" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Compact Riemann Surfaces: An Introduction to Contemporary Mathematics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jost</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Shape transformation for polyhedral objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Kent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Carlson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Parent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="47" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Matchmaker: constructing constrained texture maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kraevoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sheffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="326" to="333" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Multiresolution mesh morphing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dobkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>ACM SIGGRAPH</publisher>
			<biblScope unit="page" from="343" to="350" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Maps: multiresolution adaptive parameterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cowsar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dobkin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>ACM SIGGRAPH</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Constrained texture mapping for polygonal meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Levy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH</title>
		<imprint>
			<biblScope unit="page" from="417" to="424" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Least squares conformal maps for automatic texture atlas generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Petitjean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maillot</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>ACM SIGGRAPH</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maillot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yahia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Verroust</surname></persName>
		</author>
		<title level="m">Interactive texture mapping. ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Spherical parametrization and remeshing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Praun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="page" from="340" to="349" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Praun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<title level="m">Consistent mesh parameterizations. ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="179" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Intersurface mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schreiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Asirvatham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Praun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="870" to="877" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Parameterization of surfaces for meshing using angle-based flattening</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sheffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>De Sturler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Engineering with Computers</title>
		<imprint>
			<biblScope unit="page" from="326" to="337" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Bounded-distortion piecewise mesh parameterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Sorkine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Goldenthal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lischinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Visualization</title>
		<imprint>
			<biblScope unit="page" from="355" to="362" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Developing surfaces. Shape Modeling and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Kunii</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shinigawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kawamichi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ohwada</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="253" to="260" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
