<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Scale-Invariant Volume Rendering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
						</author>
						<title level="a" type="main">Scale-Invariant Volume Rendering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation-Display algorithms; I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism-Raytracing volume visualization</term>
					<term>volume rendering</term>
					<term>isosurfaces</term>
					<term>silhouette enhancement</term>
					<term>volume shading</term>
					<term>translucence</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Various kinds of isocontours: (a) isolines at equidistant isovalues on a slice; (b) standard volume rendering of isosurfaces (with gradient-dependent opacity); (c) scale-invariant volume rendering of isosurfaces with uniform opacity and (d) with silhouette enhancement</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The goals of photorealistic volume rendering of semitransparent volumetric objects are considerably different from the goals of volume visualization. Thus, volume rendering algorithms for volume visualization often include computations that are not based on physics but are designed to visually enhance particular structures * e-mail: martin kraus germany@yahoo.com of the data. This is not only true for recent approaches that explicitly refer to non-photorealistic rendering, e.g., volume illustration by Ebert and Rheingans <ref type="bibr" target="#b0">[1]</ref>, but also for older volume rendering algorithms, e.g., the rendering of surfaces by Levoy <ref type="bibr" target="#b6">[7]</ref>.</p><p>In fact, without these enhancements, standard volume rendering is rather unfit for many visualization tasks. Apart from the problem of visualizing surfaces in volumetric data sets, another main challenge is the specification of particular opacities for parts of the data set. The ability to specify an appropriate opacity is crucial in volume visualization as structures become invisible if their opacity is too small, and hide occluded structures if their opacity is too large. However, the opacity in standard volume rendering depends on several factors that are often unknown to the user, e.g., the geometric size of the data set, the units in which colors and opacities are defined, or the magnitude of the local gradient. Thus, appropriate colors and opacities for direct volume visualization usually have to be determined by trial and error. Moreover, any local variation of the opacity, for example due to a dependency on the local gradient, makes it difficult to specify visualization parameters that generate appropriate opacities for all visible parts of a volumetric data set. An example is depicted in <ref type="figure">Figure 1b</ref>: the two isosurfaces in a synthetic data set (featuring three Coulomb potentials) are generated by two sharp peaks in the transfer functions. The blue isosurface is particularly opaque in between the red isosurface components because of the smaller magnitude of the local gradient there. The bottommost component of the three red isosurface components in <ref type="figure">Figure 1b</ref> is more opaque than the other two for the same reason. A smaller local gradient also corresponds to less "dense" isolines in <ref type="figure">Figure 1a</ref>; therefore, the dependency of the opacity on the local gradient in standard volume rendering is quite counterintuitive since a large magnitude of the local gradient results in denser isolines but less opaque isosurfaces. (More examples of this unpleasant dependency are presented in Section 6; the mathematical background is discussed in Section 3.2.2.)</p><p>While previous approaches tried to solve these problems by adding additional terms to the standard volume rendering integral, this paper describes a variant of the integral itself; more specifically, an integral in data space instead of physical space. One important motivation for this approach is to achieve scale invariance, which offers several immediate advantages. For example, the geometric size of the data set becomes irrelevant as it no longer affects the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Visualization 2005</head><p>October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 ©2005 IEEE.</p><p>rendering. Note that scale invariance is also a basic feature of the rendering of semitransparent polygons as their opacity is usually specified independently of their size. The mathematical definition of this scale-invariant integral is presented in Section 3 and allows us to understand its relation to previously published approaches; in particular, to the rendering of surfaces from volume data suggested by Levoy <ref type="bibr" target="#b6">[7]</ref> and the pre-integrated isosurface rendering published by Röttger et al. <ref type="bibr" target="#b9">[10]</ref>.</p><p>In Section 4, the most important features of scale-invariant volume rendering are discussed. These include scale invariance, rendering of isosurfaces of uniform opacity (see also <ref type="figure">Figure 1c</ref>), viewdependency, rendering with constant transfer functions, and the interpretation as the limit of infinitely many isosurfaces.</p><p>Analogously to the rendering of semitransparent polygons, a uniform opacity for an entire semitransparent surface is not always desirable; thus, extensions for silhouette enhancement (see also <ref type="bibr">Figure 1d)</ref> and volume shading are presented in Section 5.</p><p>Volume shading is particularly useful for rendering illuminated isosurfaces. However, previously published methods usually lack support for illumination by transmitted light. Therefore, an empirically based, local illumination model for translucent surfaces is proposed in Section 5.2. This model supports plausible diffuse and specular transmission of light and guarantees consistent illumination by transmitted light for surfaces of any opacity without requiring additional parameters. Thus, it can replace Phong's illumination model in many volume shading methods.</p><p>In Section 6, additional results are presented. Finally, conclusions and future work are discussed in Section 7.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Scale invariance has never been a topic in volume visualization; probably because there is no physically based reason to require it for volume rendering. However, the opacity of semitransparent surfaces is usually expected to be scale-invariant; thus, any approach that uses volume rendering to display isosurfaces or material boundaries of a uniform opacity will inevitably face the problem of scale invariance itself or a related problem.</p><p>One of the first approaches to volume rendering of isosurfaces was published by Levoy <ref type="bibr" target="#b6">[7]</ref>, who already observed that the transition region associated with the rendered surface should have a uniform thickness. In particular, it should be independent of the local gradient of the scalar field. Since the thickness of this transition region increases in inverse proportion to the magnitude of the local gradient, Levoy suggests to either scale the opacity of samples or the width of a tent-shaped opacity transfer function by the local gradient's magnitude. As will be discussed in Sections 3 and 5.1, the former scaling results in a good approximation to the rendering of surfaces of uniform opacity with silhouette enhancement.</p><p>More recently, Kindlmann and Durkin <ref type="bibr" target="#b4">[5]</ref> proposed the use of multidimensional transfer functions to render material boundaries by means of volume rendering. They also suggested transfer functions that depend on the local gradient.</p><p>Volume rendering of isosurfaces has received new attention in the context of pre-integrated volume rendering <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b9">10]</ref>. In fact, the pre-integrated technique for rendering isosurfaces in tetrahedral meshes suggested by Röttger et al. <ref type="bibr" target="#b9">[10]</ref> (and later by Engel et al. <ref type="bibr" target="#b1">[2]</ref> for texture-based volume rendering) results in isosurfaces of uniform opacity independently of the local gradient. Thus, this technique already obtains scale-invariant opacities; however, this is only true for the special case of isosurfaces. Moreover, it lacks a mathematical justification since the uniform opacities are achieved by ignoring the difference between an integration in physical space and data space.</p><p>One of the first techniques for silhouette enhancement of semitransparent surfaces has been published by Kay and Greenberg <ref type="bibr" target="#b3">[4]</ref>.</p><p>Since standard volume rendering of surfaces already results in a similar effect, silhouette enhancement has not received much interest in volume visualization. However, the adaptation of nonphotorealistic techniques for volume visualization has also included techniques for silhouette enhancement; see, for example, the approach by Ebert and Rheingans <ref type="bibr" target="#b0">[1]</ref>.</p><p>Volume shading was also pioneered by Levoy <ref type="bibr" target="#b6">[7]</ref>, who suggested to apply Phong's illumination model to volume rendering by substituting the normalized local gradient of the scalar field for the surface normal. While volume shading is very popular and has been extended to global volume illumination models, diffuse and specular transmission of light directly emitted by light sources is usually ignored in local volume illumination models although the transmission of light is often considered in physically based surface illumination models (see, for example, the work by Hall and Greenberg <ref type="bibr" target="#b2">[3]</ref> or Rushmeier and Torrance <ref type="bibr" target="#b10">[11]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SCALE-INVARIANT INTEGRATION IN DATA SPACE</head><p>In this section, a variant of the volume rendering integral in data space is proposed and its numerical evaluation in data space as well as in physical space is discussed. This integral provides the mathematical foundation of scale-invariant volume rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Scale-Invariant Volume Rendering Integral</head><p>In this work, the standard volume rendering integral for the line segment from point x 1 to point x 2 in physical space visualizing a scalar field s(x) using transfer functions for (non-associated) colors c p (s) and attenuation coefficients τ p (s) is written as </p><formula xml:id="formula_0">I p = |x 2 −x 1 | 0 c p (s(x(ξ )))τ p (s(x(ξ ))) (1) × exp − ξ 0 τ p (s(x(ξ )))dξ dξ with x(ξ ) = x 1 + ξ (x 2 − x 1 ) / |x 2 − x 1 | .</formula><formula xml:id="formula_1">|x 2 − x 1 | → ∞.</formula><p>In contrast to this integration in physical space, the scaleinvariant volume rendering integral is defined in data space. For this definition, the line segment from x 1 to x 2 is decomposed into smaller line segments such that the function s(x(ξ )) is strictly monotone on each part, i.e., the derivative ds(x(ξ ))/dξ is either positive or negative on the i-th line segment between x</p><formula xml:id="formula_2">(i) 1 and x (i) 2 .</formula><p>This decomposition has to cover all points of the original line segment where s(x(ξ )) is strictly monotone while intervals with constant s(x(ξ )) are not part of this decomposition and, therefore, will not contribute to the scale-invariant integral. Note also that the parts are enumerated from 1 to N I such that x</p><formula xml:id="formula_3">(i) 1 is closer to x 1 than x (i) 2 , and x (i) 1 is closer to x 1 than x (i+1) 1 .</formula><p>The scale-invariant volume rendering integral for the i-th part between s</p><formula xml:id="formula_4">(i) 1 = s x (i) 1 and s (i) 2 = s x (i) 2</formula><p>is defined as</p><formula xml:id="formula_5">I (i) d = s (i) 2 s (i) 1 c d (s)τ d (s) exp − s s (i) 1 τ d (s )ds ds<label>(2)</label></formula><p>and the transparency T</p><formula xml:id="formula_6">(i)</formula><p>d of the i-th part is</p><formula xml:id="formula_7">T (i) d = exp − s (i) 2 s (i) 1 τ d (s)ds .<label>(3)</label></formula><p>Analogously to c p (s), c d (s) is a transfer function for a nonassociated color. Similarly to τ p (s), the transfer function τ d (s) specifies attenuation per unit of the scalar data instead of length. Since the data value is also the argument of this transfer function, integrating it over its own argument results in meaningful attenuation coefficients.</p><p>For the complete scale-invariant volume rendering integral, the contributions of the N I integrals I </p><formula xml:id="formula_8">I d = N I ∑ i=1 I (i) d i−1 ∏ j=1 T ( j) d .<label>(4)</label></formula><p>This definition might appear very different from the definition of the standard volume rendering integral in Equation <ref type="formula">1</ref>. However, the numerical evaluation of both integrals is very similar in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Numerical Integration</head><p>The previously described decomposition into strictly monotone intervals is usually unnecessary since most numerical evaluations of the scale-invariant volume rendering integral can safely assume that the function s(x(ξ )) is locally strictly monotone as long as intervals with a constant data value do not contribute to the integral.</p><p>Here, a sampling of the line segment between x 1 and x 2 at a uniform sampling distance d is assumed. The resulting N C sampled data values are denoted by s i with 1 ≤ i ≤ N C . The generalization to arbitrary sampling distances is straightforward. Note that samples are ordered with the first sample s 1 obtained at x 1 . Each sample s i corresponds to an associated colorC i and an opacity α i , which are determined by applying transfer functions as discussed below. The scale-invariant volume rendering integral is then approximated by a sum of N C terms:</p><formula xml:id="formula_9">I d ≈ N C ∑ i=1C i i−1 ∏ j=1 (1 − α j ).<label>(5)</label></formula><p>This sum can be evaluated by the same blending operations as in the case of the standard volume rendering integral; see, for example, the survey by Kraus and Ertl <ref type="bibr" target="#b5">[6]</ref>, which also covers the use of transfer functions for an associated color densityc(s) instead of the product c p (s)τ p (s).</p><p>There are several ways to determine the colorC i and the opacity α i of the i-th sample, i.e., to classify it; in particular, pre-integrated classification, post-classification, and pre-classification. The adaptations of these three methods for scale-invariant volume rendering are discussed next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Pre-Integrated Classification</head><p>For pre-integrated volume rendering, colorsC i and opacities α i are pre-computed for ray segments between two adjacent samples s f and s b at distance d; i.e., in general a three-dimensional lookup table has to be pre-computed. However, a two-dimensional table is sufficient for a uniform sampling distance d. For scale-invariant volume rendering, the sampling distance is not relevant at all (see Equations <ref type="bibr" target="#b1">(2)</ref> and (3)); thus, a two-dimensional lookup table is in fact sufficient. Pre-integration assumes a linear interpolation between two adjacent samples; therefore, the assumption of strict monotony is always fulfilled unless the two samples s f and s b are identical. In this case, the pre-integration has to result in transparent black.</p><p>The lookup table for colorsC</p><formula xml:id="formula_10">d (s f , s b )</formula><p>is computed by the scaleinvariant integral</p><formula xml:id="formula_11">C d (s f , s b ) = s b s f c d (s)τ d (s) exp − s s f τ d (s )ds ds .<label>(6)</label></formula><p>Analogously, the lookup table for opacities</p><formula xml:id="formula_12">α d (s f , s b ) is pre- computed by α d (s f , s b ) = 1 − exp − s b s f τ d (s)ds .<label>(7)</label></formula><p>Note that these integrals are zero if s f is equal to s b . With these pre-</p><formula xml:id="formula_13">integrated lookup tables,C i is determined byC d (s i , s i+1 ) and α i by α d (s i , s i+1 ).</formula><p>Since these tables are two-dimensional, the scaleinvariant variant is either as efficient as standard pre-integrated volume rendering or more efficient if a three-dimensional table is required for the latter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Post-Classification</head><p>The mapping of interpolated data samples to colors and opacities is often referred to as post-classification since the transfer functions are applied after the interpolation step. In contrast to pre-integrated volume rendering, post-classification processes each sample separately. Therefore, it is less straightforward to apply this approach to scale-invariant volume rendering. In order to evaluate the scale-invariant integrals of Equations (2) and (3) by means of post-classification, the integration variables have to be replaced by spacial variables:</p><formula xml:id="formula_14">I (i) d = |x (i) 2 −x 1 | |x (i) 1 −x 1 | c d (s(x(ξ )))τ d (s(x(ξ )))|∇ ξ s(x(ξ ))| (8) × exp − ξ |x (i) 1 −x 1 | τ d (s(x(ξ )))|∇ ξ s(x(ξ ))|dξ dξ , T (i) d = exp − |x (i) 2 −x 1 | |x (i) 1 −x 1 | τ d (s(x(ξ )))|∇ ξ s(x(ξ ))|dξ ,<label>(9)</label></formula><p>where |∇ ξ s(x)| is the magnitude of the projection of the local gradient of s(x) onto the line from x 1 to x 2 :</p><formula xml:id="formula_15">|∇ ξ s(x)| = |∇s(x) • (x 2 − x 1 )| / |x 2 − x 1 | .</formula><p>Based on these integrals and the assumption of local monotony, Equation (5) may be employed for a discrete approximation of the scale-invariant integral with colorsC i and opacities α i being evaluated according to these equations:</p><formula xml:id="formula_16">C i = c d (s i )α i ,<label>(10)</label></formula><formula xml:id="formula_17">α i = 1 − exp −τ d (s i )|∇ ξ s i |d ≈ τ d (s i )|∇ ξ s i |d,<label>(11)</label></formula><p>where d is the uniform sampling distance and |∇ ξ s i | is the magnitude of the projected local gradient at the i-th sample.</p><p>Note that this factor |∇ ξ s i | is missing in the corresponding equations for standard volume rendering. Thus, opacities and colors computed in standard volume rendering are scaled by 1/|∇ ξ s i |. In other words, a small magnitude of the projection of the local gradient in view direction tends to increase opacities and colors in standard volume rendering; for examples see Figures 1b, 8a, and 8c.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Pre-Classification</head><p>For pre-classification, transfer functions are applied to the data before the interpolation is performed. The transfer functions in Equations <ref type="bibr" target="#b9">(10)</ref> and <ref type="bibr" target="#b10">(11)</ref> can also be evaluated in this way; however, the projection of the gradient is view-dependent and, therefore, cannot be pre-computed. Moreover, pre-classification is less appropriate for thin isosurfaces. In order to visualize these with pre-classification, more powerful techniques than one-dimensional transfer functions should be employed to extract voxels, vertices, or polygons that form a surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.4">Required Sampling Rate</head><p>The sampling rates required for an accurate evaluation of the scaleinvariant volume rendering integral are the same as for the standard volume rendering integral; see the discussion by Schulze et al. <ref type="bibr" target="#b11">[12]</ref>. I.e., pre-integrated volume rendering requires a sampling rate high enough to accurately sample the scalar data s(x) while post-classification requires a product of this sampling rate and a sampling rate that is high enough to accurately sample the transfer functions. Pre-classification only requires a sampling rate that is high enough to accurately sample the pre-computed colors and opacities since the sampling of the transfer functions is determined by the data set's mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Comparison with Previous Work</head><p>As discussed in Section 3.2, pre-integrated volume rendering is particularly well suited for scale-invariant volume rendering. In fact, the two-dimensional lookup table employed for pre-integrated volume rendering in Section 3.2.1 was used by Röttger et al. <ref type="bibr" target="#b9">[10]</ref> and later by Engel et al. <ref type="bibr" target="#b1">[2]</ref> to render semitransparent isosurfaces with a uniform, user-specified color and opacity, independently of the local gradient or the geometric size of the data set. Since a uniform color and opacity provides less information about the shape of surfaces (see <ref type="figure" target="#fig_1">Figure 2a</ref>), it was important to combine this technique with volume shading (see <ref type="figure" target="#fig_1">Figure 2b)</ref>.</p><p>For the special case of infinitesimally thin isosurfaces, this method is equivalent to scale-invariant volume rendering. However, the main motivation in those publications was the efficient computation of two-dimensional lookup tables while the authors were unaware of the integration in data space, and the uniform color and opacity was not recognized as an advantage. In fact, the "flat" appearance of isosurfaces of uniform opacity and color (see <ref type="figure" target="#fig_1">Figure 2a</ref>) was considered disadvantageous; thus, more recent publications, e.g., Lum et al. <ref type="bibr" target="#b7">[8]</ref>, again employed standard volume rendering for isosurfaces since efficient techniques for the computation of lookup tables had been developed.</p><p>There are also predecessors of scale-invariant volume rendering using post-classification and pre-classification. In particular, Levoy <ref type="bibr" target="#b6">[7]</ref> suggested to scale opacities of samples by the magnitude of the local gradient (see Equation (4) in his work <ref type="bibr" target="#b6">[7]</ref>). (The scaling of the width of a tent-shaped opacity transfer function also proposed by Levoy <ref type="bibr" target="#b6">[7]</ref> has a similar effect on the total opacity of a surface.) The scaling by the local gradient instead of the projected local gradient (as in Equation (11)) results in an approximation to the silhouette enhancement discussed in Section 5.1.</p><p>More generally spoken, the use of gradient-dependent, twodimensional transfer functions can approximate scale-invariant volume rendering; however, the specification and efficient implementation of appropriate transfer functions is far more complicated than the approaches proposed in Section 3.2.</p><p>Thus, scale-invariant volume rendering provides the mathematical background for a thorough understanding of several volume rendering techniques, which are already known to generate reasonable results. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">FEATURES OF SCALE-INVARIANT VOLUME RENDERING</head><p>There are several characteristics of scale-invariant volume rendering that distinguish it from standard volume rendering. The most important features are discussed in this section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Scale Invariance</head><p>In this work, scale invariance denotes the invariance of colors and opacities under scaling transformations of the physical space. While this is a basic feature of standard polygonal graphics, colors and opacities in standard volume rendering are not scale-invariant. This is appropriate for many applications of volume graphics; however, for volume visualization and especially for the rendering of isosurfaces, scale invariance is necessary to allow users to specify colors and opacities independently of particular properties of a data set, e.g., its geometric size or local gradients. The scale invariance of the presented approach depends on the invariance of the volume rendering integral in Equation <ref type="formula" target="#formula_8">4</ref> In addition to Equation (4), the numerical integration presented in Section 3 should also be scale-invariant. Since the required sampling rate depends on the scaling of the physical space, it is appropriate to scale the sampling distance accordingly in order to guarantee the accuracy of the numerical integration. In this case, all sampled values s i will be invariant. Since no other variables are used to compute colors and opacities in the pre-integrated case, these computations are explicitly scale-invariant.</p><p>The computations for post-classification and pre-classification include the sampling distance and the local gradient, which are not scale-invariant. However, the sampling distance is scaled like any distance while the magnitude of the projected gradient is scaled by the reciprocal factor. Thus, the product of the sampling distance and the magnitude of the projected gradient is also scale-invariant. Since the sampling distance and the local gradient occur only in such products, these computations are implicitly scale-invariant. <ref type="figure" target="#fig_1">Figure 2a</ref> provides an example for scale invariance because the two small red isosurface components correspond to two Coulomb potentials, which are smaller copies of the bottommost Coulomb potential. While all three components are rendered with the same opacity by scale-invariant volume rendering (see <ref type="figure" target="#fig_1">Figure 2</ref>), standard volume rendering results in visible differences (see <ref type="figure">Figure 1b</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Isosurfaces of Uniform Opacity</head><p>One of the most important consequences of scale invariance is the possibility to render isosurfaces of uniform color and opacity whereas the opacity of isosurfaces in standard volume rendering depends on the local gradient. Moreover, this dependency is counterintuitive because it results in brighter and more opaque colors for parts of the isosurface with a small local gradient, which usually indicates a soft, less pronounced transition; see also the discussion of <ref type="figure">Figure 1b</ref> in Section 1 and <ref type="figure" target="#fig_8">Figures 8a and 8c</ref> in Section 6.</p><p>An infinitesimally thin isosurface can be specified by a δ -peak in the transfer function τ d (s) that is placed at the corresponding isovalue. Since the integration for scale-invariant volume rendering is performed in data space, any integral that includes this isovalue will result in the same color and opacity. This special case was already implemented by Röttger et al. <ref type="bibr" target="#b9">[10]</ref> and Engel et al. <ref type="bibr" target="#b1">[2]</ref> although they were not fully aware of the mathematical background.</p><p>The scale-invariant integration also results in well-defined colors and opacities for extended peaks provided that the integration covers the whole peak and that the sampling is fine enough. In contrast to this integration in data space, the integration in physical space for standard volume rendering scales a peak in physical space by the reciprocal magnitude of the projected local gradient and, therefore, results in scaled colors and opacities. This corresponds to an isosurface of varying thickness while scale-invariant volume rendering guarantees a uniform thickness.</p><p>Just as in the case of semitransparent polygonal surfaces, the realistic appearance of semitransparent isosurfaces can be improved by shading and/or silhouette enhancement; see Section 5. However, the uniform color and opacity can also be modulated by other quantities in order to visualize additional data on isosurfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">View-Dependency</head><p>The colors and opacities of point samples in scale-invariant volume rendering depend on the orientation of the local gradient in relation to the position of the viewer; more specifically, it depends on the magnitude of the local gradient projected onto the view direction; see Section 3.2. This additional view-dependency might appear counterintuitive; however, there is a similar view-dependency in polygonal graphics: the projected area and therefore the total color contribution of a flat, semitransparent polygon to an image also depends on the projection of its normal vector onto the view direction. In both cases, this view-dependency results in a "flat" appearance, which can be cured by shading and/or silhouette enhancement, as discussed in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Rendering with Constant Transfer Functions</head><p>Another interesting feature of scale-invariant volume rendering is the possibility to reveal structures with the help of constant transfer functions, i.e., a mapping of all data values to the same color and attenuation coefficient. While standard volume rendering only renders the domain of the whole data set with a uniform color and attenuation coefficient under these circumstances, scale-invariant volume rendering reveals regions with large variations of the data; see <ref type="figure" target="#fig_3">Figure 3a</ref>, which visualizes the same scalar field as <ref type="figure" target="#fig_1">Figures 1 and  2</ref>. Thus, material boundaries and local extrema in the data can be visualized even without specifically designed transfer functions or techniques such as volume shading.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Limit of Infinitely Many Isosurfaces</head><p>Standard volume rendering can be defined as the limit of infinitely many sampling slices (or shells) through a volumetric data set. For this limit, the slicing distance and the opacities of samples are decreased at the same rate. A finite number of slices corresponds to the evaluation of the standard volume rendering integral in physical space by a discrete sum. Similarly, scale-invariant volume rendering can be defined as the limit of infinitely many isosurfaces. In this case, each isosurface has a uniform color and opacity, which is decreased at the same rate as the distance between isovalues. Therefore, the evaluation of the scale-invariant volume rendering integral in data space by a discrete sum corresponds to a finite number of isosurfaces. For example, the set of isosurfaces in <ref type="figure" target="#fig_3">Figure 3b</ref> approximates the constant transfer function employed in <ref type="figure" target="#fig_3">Figure 3a</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EXTENSIONS FOR ISOSURFACE RENDERING</head><p>Scale-invariant volume rendering is very well suited for the rendering of isosurfaces since it allows users to specify uniform colors and opacities for isosurfaces independently of the data set. Therefore, this section presents two extensions, which are particularly beneficial for the rendering of isosurfaces, namely silhouette enhancement and local illumination by transmitted light. Note, however, that both extensions are not limited to isosurfaces but are useful for scale-invariant volume rendering in general.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Silhouette Enhancement</head><p>One positive aspect of the dependency of colors and opacities on the local gradient in standard volume rendering is a tendency to enhance silhouettes of isosurfaces and, thereby, to provide additional cues about their shape; see, for example, <ref type="figure">Figure 1b</ref>. Since there is no such dependency in basic scale-invariant volume rendering, it is lacking this enhancement of silhouettes; see <ref type="figure">Figure 1c</ref>.</p><p>In computer graphics, silhouette enhancement is a common technique to improve the realistic appearance of semitransparent surfaces. One approach for thin surfaces has been proposed by Kay and Greenberg <ref type="bibr" target="#b3">[4]</ref>, who implemented an exponential attenuation of the transparency by the total length ∆ of the path through the medium. In our notation:</p><formula xml:id="formula_18">α = 1 − exp (−τ 0 ∆) ;<label>(12)</label></formula><p>see Equation <ref type="bibr" target="#b5">(6)</ref> in their work <ref type="bibr" target="#b3">[4]</ref>. Here, τ 0 is the uniform attenuation coefficient of the medium. In order to integrate silhouette enhancement into scale-invariant volume rendering, no new parameters such as the indices of refraction or the uniform thickness of the surface should be introduced since the primary goal is a plausible silhouette enhancement for isosurfaces of any opacity without the necessity to specify additional parameters. Thus, refraction is not taken into account in this work, </p><formula xml:id="formula_19">τ 0 ∆ 0 = −ln (1 − α 0 ) .<label>(13)</label></formula><p>This computation assumes that the opacity α 0 is specified for a view direction perpendicular to the surface. Only the product of τ 0 and ∆ 0 can be determined this way and, fortunately, no additional information is required. Without refraction and assuming a (locally) flat surface of thickness ∆ 0 , the length ∆ of the path through the medium is given by</p><formula xml:id="formula_20">∆ = ∆ 0 |v||n| |v • n| ,<label>(14)</label></formula><p>where n is the surface normal and v is the direction to the viewer; see <ref type="figure">Figure 4</ref>. Thus, the silhouette enhancement proposed here is achieved by increasing the opacity α 0 according to the following equation:</p><formula xml:id="formula_21">α = 1 − exp ln(1 − α 0 ) |v||n| |v • n| .<label>(15)</label></formula><p>Associated colors should be scaled by the factor α/α 0 ; see the discussion by Schulze et al. <ref type="bibr" target="#b11">[12]</ref>. An example of this silhouette enhancement is depicted in <ref type="figure" target="#fig_5">Figure 5a</ref>; see also <ref type="figure" target="#fig_1">Figure 2a</ref> for the same scene without silhouette enhancement. A good approximation of Equation (15) for small opacities is:</p><formula xml:id="formula_22">α ≈ min 1, α 0 |v||n| |v • n| .<label>(16)</label></formula><p>Unfortunately, this approximation breaks down near the silhouettes, resulting in too large opacities. Nonetheless, the visual results with clamped opacities are often acceptable; see <ref type="figure" target="#fig_5">Figure 5b</ref>. This procedure can also be employed to modify the opacity of any volume sample by replacing α 0 by the sample's opacity and the surface normal n by the gradient ∇s(x). Since the direction v corresponds to −(x 2 − x 1 ), the magnitude of the projected gradient |∇ ξ s(x)| is |v • n|/|v|. This results in the equation</p><formula xml:id="formula_23">|v||n| |v • n| = |∇s(x)| |∇ ξ s(x)| .<label>(17)</label></formula><p>This relation is particularly useful because the gradient ∇s(x) is often already computed for volume shading and the projected gradient |∇ ξ s(x)| may be approximated by |s b − s f | /d in a pre-integrated volume rendering algorithm. It was mentioned in Section 3.3 that substituting the local gradient for the projected local gradient corresponds to adding an approximation to the silhouette enhancement proposed in this section. In fact, the magnitude of the local gradient corresponds to the product of the magnitude of the projected local gradient and the factor that is responsible for the silhouette enhancement:</p><formula xml:id="formula_24">|∇s(x)| = |∇ ξ s(x)| |∇s(x)| |∇ ξ s(x)| = |∇ ξ s(x)| |v||n| |v • n| .<label>(18)</label></formula><p>Thus, within the limits of the approximation in Equation (16), the use of the local gradient instead of the projected local gradient in Equation (11) can be justified by silhouette enhancement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Illumination by Transmitted Light</head><p>Local volume shading (or volume lighting) is often used to illuminate surface structures in volume rendering. For this purpose, Phong's empirically based illumination model is usually employed (see for example <ref type="figure">Figure 6a</ref>) because it can be implemented very efficiently and is often supported by graphics hardware. For volume shading, the surface normal is replaced by the local gradient of the scalar field because the local gradient is orthogonal to the local isosurface. Since Phong's illumination model does not include diffuse or specular transmissions, these are also not implemented in standard volume shading. Thus, backlight usually has very little effect in local volume shading; for an example see <ref type="figure">Figure 6b</ref>. This results in an implausible illumination, which can be avoided in some cases by placing additional lights opposite the original light sources. However, these additional lights do not cure the reason for the implausible illumination but rather distract the viewer from the missing transmitted light by adding additional reflected light. Therefore, a consistent extension of Phong's illumination model is suggested here, which includes plausible diffuse and specular transmission (see <ref type="figure">Figures 6c, 6d, and 7)</ref> for surfaces and volume samples of any opacity without requiring additional parameters. Since programmable graphics hardware provides a convenient way to customize local shading, this extension can be integrated easily in many hardware-accelerated volume shading algorithms.</p><p>As in Section 5.1, no refraction is taken into account. Furthermore, ideal diffuse transmission is assumed and specular transmission is modeled analogously to specular reflection in Phong's model with the reflected light direction r i being replaced by the light direction −l i ; see <ref type="figure">Figure 7</ref>. In particular, the specular-reflection exponent n is also employed for specular transmission.</p><p>The diffuse transmission is affected by the color of the material and by its opacity. As the material's color for diffuse reflection is used for surfaces of any opacity, i.e., also for almost completely transparent surfaces, it is plausible to use the same color for diffuse and specular transmission. While a different color for specular transmission can result in more realistic images, it is very unlikely that specular transmission could be modeled by the same color as The effect of the material's opacity α is slightly more complicated because there should be no transmission for completely opaque surfaces (α = 1) nor for completely transparent surfaces (α = 0) because light passes through a completely transparent surface without any interaction in our model. The most straightforward way to achieve this behavior is a factor of α(1 − α) for diffuse and specular transmission. This factor is plausible because only a fraction (1 − α) of the incident light is transmitted through a semitransparent surface and of the transmitted light only a fraction (α) interacts with it.</p><p>In summary, the proposed local illumination model takes the following five contributions into account (see also <ref type="figure">Figure 7</ref>): ambient light, diffuse reflection, specular reflection, diffuse transmission, and specular transmission. The total (associated) intensity I total (of one color component) is the sum of these contributions:</p><formula xml:id="formula_25">I total = I amb αC diff + ∑ i f att,i I i Θ ((l i • n)(v • n)) αC diff l i •n + Θ ((l i • n)(v • n)) αC spec (max (0,r i •v)) n (19) + Θ (−(l i • n)(v • n)) α(1 − α)C diff l i •n + Θ (−(l i • n)(v • n)) α(1 − α)C diff max 0, −l i •v n ,</formula><p>where I amb is the intensity of the ambient light; I i is the intensity of the i-th light source; f att,i is an attenuation factor for the i-th light source; C diff is the material's (non-associated) color for diffuse reflection as well as diffuse and specular transmission; C spec is the material's (non-associated) color for specular reflection (often equal to 1); n is the exponent for specular reflection and transmission; the Heaviside function Θ(x) (also known as step function) is 0 for x &lt; 0 and 1 for x &gt; 0; l i and v are the vectors from the illuminated point to the i-th light source and the viewer, respectively; n is the surface normal at this point; and r i is the reflection of l i at n: If different sets of material parameters (C diff , C spec , and n) are used for the two sides of the surface, it should be considered to introduce a third set of parameters (or the average values of the two sets) for diffuse and specular transmission in either direction because the transmission of light is usually independent of its direction.</p><formula xml:id="formula_26">r i = 2n(n • l i ) − l i . l i ,v</formula><p>Although the proposed model results in slightly more expensive computations than implementations of Phong's illumination model, it offers the advantages of a plausible local illumination of semitransparent surfaces and volume samples of any opacity by light from any direction; for an example see <ref type="figure">Figure 6</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>The volume renderings in this work are all of dimensions 512 × 512. All but <ref type="figure" target="#fig_8">Figures 8e and 8f</ref> were generated by a prototypical implementation of the proposed techniques within an experimental software ray caster. In order to avoid any problems caused by filtering or interpolation of sampled data, all scalar fields and gradient fields were computed procedurally in this ray caster.</p><p>Since the visual differences between standard volume rendering and scale-invariant volume rendering with silhouette enhancement (see, for example, <ref type="figure">Figures 1b and 1c)</ref> are not always clearly recognizable, two additional examples are presented in this section. No illumination is included in these examples in order to avoid unnecessary complications.</p><p>Figures 8a and 8b depict a semitransparent isosurface (isovalue 0.5) in the test signal published by Marschner and Lobb <ref type="bibr" target="#b8">[9]</ref>. While the scale-invariant volume rendering in <ref type="figure" target="#fig_8">Figure 8b</ref> shows plausible silhouette enhancement, the standard volume rendering in <ref type="figure" target="#fig_8">Figure 8a</ref> results in a too opaque surface near the top of ridges and near the bottom of valleys, where the local gradient is relatively small. This additional opacity is not understandable without knowledge about the gradient field and difficult to distinguish from the increased opacity near silhouettes.</p><p>In <ref type="figure" target="#fig_8">Figures 8c and 8d</ref>, the 3d z 2 orbital of the hydrogen atom is visualized by one semitransparent isosurface, which consists of three separate components. Again, the scale-invariant volume rendering in <ref type="figure" target="#fig_8">Figure 8d</ref> is plausible while standard volume rendering in <ref type="figure" target="#fig_8">Figure 8c</ref> shows a more opaque ring in the center of the image. The reason for this difference is a small local gradient near the local maximum of the scalar field that is within this component of the isosurface. Additional visual differences between Figures 8c and 8d can be found at the top and the bottom of the images, where the gradient is slowly decreasing. <ref type="figure" target="#fig_8">Figures 8e and 8f</ref> show an example of hardware-accelerated tetrahedra projection. The visualized tetrahedral mesh was produced by the decomposition of a uniform 32 3 grid into 148955 tetrahedral cells. While the standard volume rendering in <ref type="figure" target="#fig_8">Figure 8e</ref> employs three-dimensional textures as suggested by Röttger et al. <ref type="bibr" target="#b9">[10]</ref>, scale-invariant volume rendering with silhouette enhancement requires only two-dimensional lookup tables as discussed in Section 3.2.1. The use of two-dimensional textures in <ref type="figure" target="#fig_8">Figure 8f</ref> increased the rendering performance by about 23 % on the tested system (800 MHz PowerPC G3 with an ATI Radeon 7500 Mobility). Without silhouette enhancement, which was implemented using the texture combine environment mode, the measured performance gain was even about 27 %.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS AND FUTURE WORK</head><p>As shown in this work, scale-invariant volume rendering offers various advantages for volume visualization. Apart from scaleinvariant colors and opacities, the most important advantage is the possibility to render isosurfaces of uniform opacity and color. In combination with the presented silhouette enhancement and the proposed illumination model, scale-invariant volume rendering can considerably improve the quality of isosurfaces rendered by many volume visualization algorithms, including hardware-accelerated algorithms. The performance cost compared to standard volume rendering depends on the particular volume rendering algorithm; for some pre-integrated algorithms, however, scale-invariant volume rendering offers a significant increase in rendering performance. Moreover, it provides a variant of volume rendering that represents the limit of infinitely many semitransparent isosurfaces, and it also provides the mathematical background for at least two ad hoc techniques that have been published previously.</p><p>Apart from implementing scale-invariant variants of various volume rendering algorithms, the most important future work is the de-sign of appropriate user interfaces since users can gain much more control over colors and opacities in scale-invariant volume rendering than in standard volume rendering if appropriate interfaces are provided. Furthermore, the specific advantages of scale-invariant volume rendering (in respect of and beyond isosurfaces) have to be investigated in actual applications.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>d</head><label></label><figDesc>have to be attenuated, i.e., I(i) dhas to be multiplied by all transparencies T( j) d with j &lt; i:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Scale-invariant volume rendering of isosurfaces with uniform opacity: (a) without and (b) with volume shading</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>under scaling transformations of the physical space. Since the decomposition of the line segment from x 1 to x 2 is scale-invariant (apart from the scaled coordinates), all of the variables in Equations (2) and (3) are scale-invariant; thus, Equations (2), (3), and (4) are also scale-invariant.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>(a) Scale-invariant volume rendering with constant transfer functions and (b) a set of isosurfaces approximating the limit in (a)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>v n 0 Figure 4 :</head><label>04</label><figDesc>Path of a ray of length ∆ through a surface of thickness ∆ 0 and the thickness ∆ 0 and the attenuation coefficient τ 0 of isosurfaces are computed from the user-specified opacity α 0 :</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Scale-invariant volume rendering of isosurfaces with silhouette enhancement: (a) without and (b) with the approximation in Equation(16)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Scale-invariant volume rendering with silhouette enhancement and volume shading: (a) light from behind the viewer; (b) backlight without transmission, (c) backlight with diffuse transmission, and (d) backlight with diffuse and specular transmission Illumination of a semitransparent surface of opacity α with normal ±n by light from direction l i , reflected to r i specular reflection since the corresponding physical processes are rather different.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>,n, andr i are the corresponding normalized vectors. Note that the orientation of n is irrelevant for I total , i.e., substituting −n for n leads to the same result. For numerical reasons it is often advantageous to replace the term v • n in the computation of I total by a more robust computation. For example, in pre-integrated volume rendering (seeSection 3.2.1) v•n could be replaced by (s f −s b ) since only the sign of v • n is relevant here.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :</head><label>8</label><figDesc>(a) &amp; (b) Isosurface in the Marschner-Lobb test signal; (c) &amp; (d) isosurface visualizing the 3d z 2 hydrogen orbital; (e) &amp; (f) volume visualization of a tetrahedralization of the 32 3 bucky ball data set. (a), (c), and (e) were generated by standard volume rendering; (b), (d), and (f) by scale-invariant volume rendering with silhouette enhancement.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Volume illustration: Nonphotorealistic rendering of volume models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Penny</forename><surname>Rheingans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization 2000</title>
		<editor>Thomas Ertl, Bernd Hamann, and Amitabh Varshney</editor>
		<meeting>IEEE Visualization 2000</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="195" to="202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">High-quality preintegrated volume rendering using hardware-accelerated pixel shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Graphics Hardware</title>
		<editor>William Mark and Andreas Schilling</editor>
		<meeting>Graphics Hardware</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A testbed for realistic image synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donald</forename><forename type="middle">P</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="10" to="20" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Transparency for computer synthesized images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Douglas</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kay</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donald</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th Annual Conference on Computer Graphics and Interactive Techniques</title>
		<meeting>the 6th Annual Conference on Computer Graphics and Interactive Techniques</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1979" />
			<biblScope unit="page" from="158" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Semi-automatic generation of transfer functions for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gordon</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><forename type="middle">W</forename><surname>Durkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 1998 IEEE Symposium on Volume Visualization</title>
		<meeting>1998 IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Pre-integrated volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visualization Handbook</title>
		<editor>Charles D. Hansen and Christopher R. Johnson</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">High-quality lighting and efficient pre-integration for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><forename type="middle">B</forename><surname>Lum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brett</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwa-Liu</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Joint Eurographics-IEEE TVCG Symposium on Visualization 2004 (VisSym &apos;04)</title>
		<meeting>Joint Eurographics-IEEE TVCG Symposium on Visualization 2004 (VisSym &apos;04)</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An evaluation of reconstruction filters for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marschner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Lobb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<editor>R. D. Bergeron and A. E. Kaufman</editor>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="100" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Hardware-accelerated volume and isosurface rendering based on cell-projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Röttger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<editor>Thomas Ertl, Bernd Hamann, and Amitabh Varshney</editor>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Extending the radiosity method to include specularly reflecting and translucent materials</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Holly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">E</forename><surname>Rushmeier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Torrance</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="27" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Integrating pre-integration in the shear-warp algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Jürgen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Schulze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Lang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Third International Workshop on Volume Graphics</title>
		<meeting>Third International Workshop on Volume Graphics</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
