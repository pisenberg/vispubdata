<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Quality Mesh Generation for Molecular Skin Surfaces Using Restricted Union of Balls</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ho-Lun</forename><surname>Cheng</surname></persName>
							<email>hcheng@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xinwei</forename><surname>Shi</surname></persName>
							<email>shixinwe@comp.nus.edu.sg</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">National University of Singapore</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Quality Mesh Generation for Molecular Skin Surfaces Using Restricted Union of Balls</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>J.3 [Life and Medical Sciences]: Biology and Genetics; I.3.8 [Computer Graphics]: Computational Geometry and Object Modeling-Curve</term>
					<term>Surface</term>
					<term>Solid</term>
					<term>and Object Representation Smooth surfaces</term>
					<term>meshing</term>
					<term>restricted union of balls</term>
					<term>Delaunay triangulation</term>
					<term>guaranteed quality triangulation</term>
					<term>homeomorphism</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Molecular models of the molecule Helix. The leftmost shows the van der Waals surface model; the center shows the molecular skin model and the rightmost shows the magnified mesh details in the box of the center figure.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Molecular biology is receiving growing attention from computer scientists. With the recent success of the Human Genome Project, an important aspect of the biological study is the investigation of the three dimensional structures of molecules and their functionalities. A fundamental computational primitive supporting these studies is to construct digital representations of molecular surfaces. The polygonal mesh is one of the most popular representations because they facilitate not only visualizations but also numerical simulations on macromolecules. Wherein the mesh quality is important for the convergence and accuracy of the simulation. In addition, the homeomorphism between the mesh and the surface is essential to provide a correct boundary representation. In this study, we investigate efficient algorithms to generate quality and homeomorphic meshes for the molecular skin models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Previous work</head><p>Molecular surface meshing has been much discussed in the recent literature. Amitabh et. al <ref type="bibr" target="#b1">[4]</ref> presented a parallel algorithm for computing the triangulated molecular surface efficiently. The algorithm assumed an upper bound on the number of neighboring atoms to each atom and achieved linear computation over n processors. However, the paper offered little in the way of handling molecular surface self-intersections and guaranteeing the mesh quality. Akkiraju and Edelsbrunner <ref type="bibr" target="#b0">[3]</ref> described algorithms for triangulating the surface of space filling (SF), solvent accessible (SA), and molecular surface (MS) models. The computation is based on the regular triangulation of a set of balls representing the atoms of a molecule. The implementation of the algorithm ran into robustness problem because of the inconsistency between the regular triangulation and</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Visualization 2005</head><p>October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 Â©2005 IEEE. the surface meshes <ref type="bibr" target="#b0">[3]</ref>. In addition, the author did not address the problem of molecular surface self-intersections nor offer any guarantees on the mesh quality. Laug and Borouchaki <ref type="bibr" target="#b13">[14]</ref> applied surface mesh generation techniques to construct quality meshes for molecular surfaces. First, an analytical representation of the surface was computed and parameterized. Then, triangular meshes were constructed in the parametric space and mapped onto the molecular surface. The generated triangulation had good quality but was limited to a few small molecules free of self-intersections. By far, the molecular surface self-intersections have been the bottleneck in developing robust surface mesh generation tools for molecules.</p><p>A number of other studies have proposed new surface models for molecules. Zhang et.al <ref type="bibr" target="#b15">[16]</ref> investigated the approximation of implicit solvation surfaces of molecules using the electron density maps. The author used the summation of Gaussian kernel functions to construct the density map and sample volumetric data. Surface meshes were extracted from the volumetric data as an isosurface using the dual contouring methods. However, the isosurface generated by the Gaussian density function is not smooth because the volume data could not be sufficiently fine. The error of the isosurface could be very large relative to the atom size and resulted in inaccurate representations.</p><p>Edelsbrunner <ref type="bibr" target="#b7">[10]</ref> introduced the molecular skin model based on a framework of the Voronoi diagram and Delaunay triangulation of a set of weighted points. We argue that the skin model outperforms the existing surface models because the skin surface is smooth, free of self-intersections and capable of being parameterized, triangulated with good quality and deformed freely with smooth transitions <ref type="bibr" target="#b7">[10]</ref>. Cheng et.al <ref type="bibr" target="#b3">[6]</ref> developed an algorithm that constructed the skin triangulation by growing an initial Delaunay mesh dynamically. However, the efficiency is not satisfactory because the algorithm computes a large number of redundant intermediate meshes between the initial mesh and the final surface mesh.</p><p>Recently, Cheng and Shi <ref type="bibr" target="#b4">[7]</ref> presented an advancing front meshing algorithm to generate quality meshes for the skin surface efficiently. In this algorithm, the critical points of a height function on the surface were used to detect front collision and the Morse-Smale complex was constructed to eliminate noisy critical points. This method improved the efficiency dramatically but resulted in robustness problem of the implementation. For example, this algorithm failed to triangulate the molecular skin surface illustrated in <ref type="figure" target="#fig_0">Figure 2</ref> because the bumpy appearance on the surface resulted in a large number of noisy critical points and a complicated Morse-Smale complex. The accumulation of numerical errors in the approximation of Morse-Smale complex led to inconsistent critical points after eliminating noisy critical points inaccurately. An analytical representation of the Morse-Smale complex would avoid such a problem. However, the current methods for solving partial differential equations(PDEs) make it impossible for us to have analytical representations because the arcs in the Morse-Smale complex are solutions of partial differential equations with order 2 and it is difficult to obtain the analytical solutions for such equations.</p><p>Boissonnate and Oudot <ref type="bibr" target="#b2">[5]</ref> proposed a Delaunay based algorithm for triangulating smooth surfaces with provable quality and topology guarantees. However, since the algorithm requires the computation of the local feature size of surface points, it is not applicable for the molecular skin surface because the media axis computation of the surface is hard.</p><p>To sum up, it is still challenging to build robust software to generate quality surface meshes for molecules. In this paper, we present a robust Delaunay-based meshing algorithm to generate quality meshes for the molecular skin models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Our approach</head><p>We employed the Delaunay-based method to generate quality mesh for the molecular skin surface incrementally. In particular, we add one sample point each time and maintain the Delaunay triangulation of the sample points with the incremental flipping algorithm. Then, we extract a subset of the Delaunay triangulation as the candidate surface triangles. This extraction only requires a local update because most of the candidate surface triangles remain the same. These candidate surface triangles forms a partial mesh and guides the future point sampling. We iteratively apply this procedure until we get an Îµ-sampling of the whole surface. At the same time, the surface mesh is extracted from the collection of all candidate surface triangles. Our Delaunay-based meshing algorithm can offer mathematical guarantees on the mesh quality as well as robustness in practice.</p><p>In order to guarantee the mesh quality and topology, we employ the restricted union of balls, which is introduced in Section 3.1. The restricted union of balls ensures that our algorithm generates an Îµ-sampling of the skin surface. Because the restricted Delaunay triangulation of an Îµ-sampling is homeomorphic to the skin surface if Îµ is sufficiently small, we can extract the restricted Delaunay triangles from the Delaunay triangulation to construct homeomorphic mesh <ref type="bibr" target="#b3">[6]</ref>. At the same time, we can guarantee the length of the edges in the surface mesh is not too short and the circumradius of the triangle is small by utilizing the restricted union of balls. As a result, we can guarantee the termination of algorithm and achieve a lower bound on the minimum angle of each triangle in the surface mesh.</p><p>One point worth noting here is the efficiency of the algorithm. Since the incremental algorithm for Delaunay triangulation in three dimensions has quadratic complexity in the worst case, our algorithm may take quadratic time. Fortunately, we overcome this deficiency by speeding up the point location procedure in the computation of Delaunay triangulation. Instead of using a directed acyclic graph (DAG) to store the history of performed flips, we give a straightforward yet fast way to locate the tetrahedron enclose the newly inserted point by taking the advantage of our point sampling strategy. The results of our implementation provide evidence of the robustness, efficiency and quality guarantees of the algorithms.</p><p>Outline. Section 2 introduces some geometric fundamentals. Section 3 describe our Delaunay skin meshing algorithm. Section 4 illustrates some experimental results of our meshing algorithm and we conclude the paper in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PRELIMINARIES</head><p>We first introduce some definitions, then describe a few previous results from <ref type="bibr" target="#b3">[6]</ref> for the understanding of our algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Definitions</head><p>Skin surfaces. A skin surface F B is defined by a set of spheres B in R 3 . It is the envelope of an infinite family of spheres derived from B by convex combination and shrinking. Even though the family of spheres is infinite, the skin surface can be decomposed to a collection of quadratic patches. Each patch is a portion of sphere or hyperboloid clipped within a polyhedron obtained by shrinking the Minkowski sum of the corresponding Voronoi and Delaunay polyhedron. The molecular skin model of a molecule is the skin surface specified by the set of spheres positioned at each atom coordinate and equipped with a radius as â 2 times the summation of the atom's van der Waals radius and the radius of the probe sphere, which is usually chosen as 1.4 Angstrom to represent the water as solvent.</p><p>Curvature property. The skin surface is a C 1 continuous surface and its maximum curvature is continuous as well. We denote the maximum principal curvature at x â F B as Îº(x). The reciprocal 1/Îº(x) is called the local length scale at x, denoted as Ï(x). For two points x, y â F B , the variation of the local length scale can be expressed in the Lipschitz condition,</p><formula xml:id="formula_0">|Ï(x) â Ï(y)| â¤ x â y .</formula><p>We use the local length scale to control the sampling density in the triangulation. In particular, we require the vertices of the triangulation to be an Îµ-sampling. Îµ-sampling of skin. A finite subset P â F B is an Îµ-sampling of F B if every point x â F B has a point p â P such that their distance is at least ÎµÏ(x). For an Îµ-sampling on the skin with a feasible Îµ value, its restricted Delaunay triangulation is homeomorphic to the skin surface.</p><p>Restricted Delaunay triangulation. The restricted Voronoi polygon of a â P is defined as Î½ a â² = Î½ a F B , in which Î½ a is the Voronoi cell of a with respect to P in R 3 . The nerve of the restricted Voronoi polygons is the set of these polygons with non-empty common intersection. The collection of the convex hull of the nerve element is the restricted Delaunay triangulation, namely,</p><formula xml:id="formula_1">D P â² = conv (U) U â P, F B â© aâU Î½ a = / 0 .</formula><p>We aim to generate an Îµ-sampling of a skin surface and construct its restricted Delaunay triangulation. Next, we introduce several properties of the restricted Delaunay triangulation of an Îµ-sampling of the skin surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Homeomorphic Conditions</head><p>The restricted Delaunay triangulation is homeomorphic to the surface if it satisfies the closed ball property <ref type="bibr" target="#b8">[11]</ref>. This implies that we need a dense enough sample on the surface. We refer to the results from Cheng et. al <ref type="bibr" target="#b3">[6]</ref>.</p><p>Thm. 2.1 Homeomorphism Theorem. If P is an Îµ-sampling of a skin surface F B with 0 &lt; Îµ &lt; 0.279, the restricted Delaunay triangulation D â² P is homeomorphic to F B . For each triangle abc â D â² P , its Voronoi edge passes through its circumcenter o and intersects the skin surface at a point z. Moreover, the triangle abc have a small circumradius compared to local length scale at its vertices and the distance between o and z have an upper bound as well. These two properties are expressed in the following two Lemmas from <ref type="bibr" target="#b3">[6]</ref>.</p><p>Lemma 2.1 The cricumradius R abc have an upper bound, namely,</p><formula xml:id="formula_2">R abc &lt; Îµ 1 â Îµ Ï abc .</formula><p>Lemma 2.2 The distance between o and z is</p><formula xml:id="formula_3">oz â¤ Îµ 2 2 Ï abc ,</formula><p>in which the local length scale of the triangle abc is defined as Ï abc = min{Ï(a), Ï(b), Ï(c)}. We use these two bounds as the conditions to select candidate surface triangles from the Delaunay triangulation of a partial sampling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DELAUNAY SKIN MESHING USING RESTRICTED UNION OF BALLS</head><p>In this section, we first introduce the definition of the restricted union of balls and the guarantees of mesh topology and quality. Then, we give an overview of our meshing algorithm followed by the detail description of the key operations in the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Restricted Union of Balls</head><p>For each point p â P, we define the Î³-ballp of p as the open ball centered at p with a radius Î³Ï(p), in which Î³ is a positive constant less than 1 and the Ï(p) is the local length scale at p. A Î³-ball is empty if no other sample point in P is inside the Î³-ball. Each Î³-ball intersects the skin surface with a topological disk and the intersection of the skin and a union of a set of Î³-balls is called the restricted union of balls. The boundary of the restricted union of balls is a set of closed curves consisting of a loop of arcs when the union of balls does not cover the whole surface. A Î³-ball that contributes to the boundary of the restricted union of balls is called a boundary ball.</p><p>We use the restricted union of balls to generate an Îµ-sampling of the skin surface. We prove that the restricted union of balls without boundaries determines an Îµ-sampling of the skin surface when the value of Î³ is small. We have the following theorem.</p><p>Thm. 3.1 Sampling Density Theorem. For a sampling P â F B , if its restricted union of balls with Î³ â¤ Îµ 1+Îµ covers the skin surface, P is an Îµ-sampling of the skin surface F B . PROOF. Let x be any point on the skin surface. Since the restricted union of balls covers the whole surface, we have at least one Î³-ballÃ¢ enclose x. We have the upper bound for Î³ when x is on the boundary ofÃ¢. In this case, xa = Î³Ï(a).</p><p>By definition of the Îµ-sampling, we require xa â¤ ÎµÏ(x). Together with the curvature property, we have Î³Ï(a) â¤ Îµ(Ï(a) â Î³Ï(a)). That is, Î³ â¤ Îµ 1+Îµ .</p><p>Theorem 3.1 implies that we can construct a restricted union of balls with 0 &lt; Î³ &lt; 0.218 to obtain an Îµ-sampling with 0 &lt; Îµ &lt; 0.279, which suggests that we can guarantee the surface mesh is homeomorphic to the skin surface.</p><p>If we require each Î³-ball is empty, we can guarantee the length of an edge ab in the surface mesh have a lower bound, that is, ab â¤ Î³Ï ab , in which the local length scale of the edge ab is defined as Ï ab = max{Ï(a), Ï(b)}. Together with the Lemma 2.1, we can guarantee a lower bound on the minimal angle of the surface mesh, that is, arcsin( Î³ 2Îµ (1 â Îµ)). This suggests that smaller Î³ and Îµ mean better mesh quality if we ensure that they satisfy the upper bound. We can choose the values of the Î³ and Îµ as small as possible. However, this would result in more surface triangles. We should keep a balance between the mesh quality and mesh size. For example, we chose Î³ = 0.15 and Îµ = 0.18 and achieved a lower bound of 20 â¢ on the minimum angle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Overview of our algorithm</head><p>Our algorithm constructs the triangulation of a given skin surface by meshing each connected component individually. We can differentiate all the connected components with the alpha shape <ref type="bibr" target="#b9">[12]</ref> and its Betti numbers <ref type="bibr" target="#b6">[9]</ref> because each connected component of the skin surface F B corresponds to a connected component of the alpha complex K B specified by B. This corresponding relationship is based on the homotopy equivalence between the spaces enclosed by the skin surface F B , namely, the skin body, and the underlying space of the alpha complex <ref type="bibr" target="#b7">[10]</ref>.</p><p>For each component, we start from a seed point and insert new points along the boundary of the restricted union of balls incrementally. Each newly inserted point is located outside the current restricted union of balls. After a new point is inserted, we compute the Delaunay triangulation and extract the small restricted Delaunay triangles as the candidates for the surface triangulation. At the same time, the restricted union of balls expands along the skin surface and the boundary is updated until the whole surface is covered. The algorithm terminates when the restricted union of balls covers the whole surface. <ref type="figure" target="#fig_2">Figure 3</ref> illustrates a scenario of a vertex insertion.  Denote the current sampling point set as P i and Delaunay triangulation of P i as D i . We choose all the small restricted Delaunay triangles in D i as the candidate surface triangles, denoted as S i â D i . Ideally, S i could be a piecewise 2-manifold with boundary that is an exact subset of the final surface mesh. However, we cannot achieve this from a partial sampling and the candidate surface triangles S i is a superset of the 2-manifold, which may include some false surface triangles resulting in tetrahedra or non-manifold elements. These false surface triangles can be cleaned up when we obtain an Îµ-sampling.</p><p>With P i , we insert a new point v to get P i+1 . Since the point v must be outside of the current restricted union of balls, we identify the boundary balls to locate v. The boundary balls are found by using a subset of the Delaunay edges in S i , namely, the f ront. Each front edge is either a dangling edge in S i or an edge shared by two candidate triangles whose normals form an angle larger than 90 â¢ . The collection of all the Î³-balls at the vertices of the front edges includes all the boundary balls and a small number of interior Î³-balls. We can differentiate these interior balls in our point placement methods and locate the new point v on the restricted Voronoi edge of a front edge whose vertices Î³-balls are boundary balls. Then, we maintain the Delaunay triangulation of P i+1 and extract new candidate surface triangles. As a result, the collection of candidate surface triangles grows from S i to S i+1 and the front advances to the unmeshed region. We store the f ront in a queue Q and iteratively apply the above procedure until the front Q is empty, that is, the restricted union of balls cover the whole surface. The pseudo code of the algorithm is illustrated as following.</p><p>Algorithm 1 DeloneSkinMesh() 1: while The boundary of restricted union of balls is not empty do 2:</p><p>Find a front edge ab;</p><p>3:</p><p>Locate a new point v according to ab;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4:</head><p>Compute the Delaunay triangulation of P i âª {v};</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5:</head><p>Extract the candidate surface triangles;</p><p>6:</p><p>Update the front; 7: end while 8: Clean up the non-restricted Delaunay triangles from S;</p><p>The algorithm consists of four main steps, namely, locating a new vertex, updating the Delaunay triangulation, extracting candidate surface triangles and updating the front. When the restricted union of balls covers the surface and no more points can be inserted, we get an Îµ-sampling and the collection of candidate triangles includes the restricted Delaunay triangulation of the Îµ-sampling. We clean up the non-restricted Delaunay triangles and get the final surface mesh. Next, we discuss these steps in details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Point Placement</head><p>Assume that we have a front edge ab whose Î³-ballsÃ¢ andb are boundary balls. We aim to locate a new sample point v satisfying the following requirements:</p><p>â¢ the point v should be outside the restricted union of balls;</p><p>â¢ the Î³-ballv should be free of any sample point in P i ;</p><p>â¢ the Î³-ballv should intersect the boundary ballsÃ¢ andb deeper than tangentially;</p><p>â¢ the point v will form at least one candidate surface triangles with the points in P i .</p><p>The first two requirements maintains the empty property of the Î³-balls, which avoids short edges in the mesh and implies that the algorithm will terminate. The third requirement is to ensure the restricted union of balls cover the whole surface once the algorithm terminates. The last one aims to maintain a valid front to guide our future vertex insertion. These requirements imply that the distance from the point v to a and b should be larger than Î³Ï ab but not too far from a and b. This suggests that the points along the intersection between the skin and the boundary ballsÃ¢ andb would be a good choice. We argue that there is always a space to find a point v satisfying these requirements before the algorithm terminates. In particular, we can locate the point v on the restricted Voronoi edge of the front edge ab. See <ref type="figure" target="#fig_3">Figure 4</ref> as an example.</p><p>In <ref type="figure" target="#fig_3">Figure 4</ref>, ab is a front edge and its restricted Voronoi edge is the curve wy, which is the intersection of the skin and the Voronoi polygon of ab with respect to the points in P i . The solid line circles represent the Î³-balls and the point m is the intersection point of the skin surface and the boundary ofÃ¢ andb that is outside the restricted union of balls. The point v is the point we intend to insert and edge va and vb are the Delaunay edges of D i+1 after v is inserted. We demonstrate that point v can be found on the curve wy around the point m. Since ab is a front edge, the endpoint w is on the Voronoi edge of a Delaunay triangle abx in D i and abx is not a candidate surface triangle. Thus, the circumradius R abx of the triangle abx is greater than Îµ 1âÎµ Ï abx . It implies that wa = wb &gt; Îµ 1âÎµ Ï abx , which means the point w is outsideÃ¢ âªb and far from the corner point m. As a result, we can find the point v starting from m toward w along the curve wy.</p><p>The computation of the intersection curve wy between the skin and the Voronoi polygon of edge ab is costly. Therefore, we use the projection of wy on the tangent plane of the point a, namely, w â² y â² , to locate the point v. We denote the projection of m on the line w â² y â² as m â² and w â² y â² is a line segments passing through the middle point t of a and b. We find a point v â² on w â² y â² start from t with a length slightly longer than tm â² . For instance,</p><formula xml:id="formula_4">tv â² = 1+ â 3 2</formula><p>tm â² is a feasible choice in practice. We get the point v by projecting v â² to the skin surface.</p><p>In the case where the vertices Î³-balls of front edge ab is not boundary balls, the point v we compute using the previous procedure must be inside the restricted union of balls. We simply discard the point v and cancel the candidate surface triangles attached to the edge ab. Next, we compute the Delaunay triangulation, D i+1 , of P i âª {v}.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Computation of Delaunay triangulation</head><p>We adapt the incremental flip algorithm to construct the Delaunay triangulation D i+1 efficiently. The incremental flip algorithm was initially proposed by Lawson <ref type="bibr" target="#b14">[15]</ref>. The basic idea of the algorithm is the following. Let P be a set of n points in R 3 , 4 &lt; i &lt; n and assume that the Delaunay triangulation of the first i points in P is already constructed, called D i . Add the (i + 1)-th point to triangulation and restore the Delaunayhood by flipping, this results in D i+1 . Repeat this process until i = n. A crucial step in the algorithm is the point location, which occurs when a new point is added in to the triangulation. A directed acyclic graph (DAG) with the history of all performed flips were used to speed up the point location. However, the DAG structure results in large memory usage and complicated implementation. In our algorithm, we employ a straightforward yet fast way to locate point by taking the advantage of our point sampling strategy.</p><p>Since the newly inserted point v corresponds to a front edge ab and is not far from a and b, we simply search the tetrahedra in a certain region around ab. Particularly, we choose a Delaunay triangle abd in the star of edge ab whose normal has minimal difference with the normal of point v at the skin surface as a starting point.</p><p>The point v only belongs to one of the half spaces divided by the plane pass through triangle abd, denote as H. If the triangle abd is a facet on the convex hull and there is no points in P i belonging to the half space H, the point v would be on the convex hull also and we return the artificial tetrahedron connecting abd with the point at infinite. Otherwise, there must be a tetrahedron enclosing v and we can find it by walking through the triangles enclosed by a sphere centered at a and with a radius of 1.5 times of the length of edge va along the direction toward v. In general, the point v is either a convex hull point or is enclosed by a tetrahedron attached to the start point triangle. That is, we only need a constant time to locate the tetrahedron enclosing v, which accelerate the construction of the Delaunay triangulation very much. Then, we connect v to the vertices of the tetrahedron and perform flips to restore the Delaunay property of the triangulation. Our implementation is based on the results of alpha shape software <ref type="bibr">[1,</ref><ref type="bibr" target="#b9">12]</ref>.</p><p>After the Delaunay triangulation D i+1 is accomplished, we extract the candidate surface triangles. The Delaunay triangulation D i+1 differs from D i with the star of v, which is a set of tetrahedra that include v as one of their vertices. Therefore, we can only consider the triangles in the star of v for labeling new candidate surface triangles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Extraction of Candidate Surface Triangles</head><p>We select candidate surface triangles according to two conditions, namely, the small circumradius condition and restricted Delaunay condition. By "small" we mean the circumradius R abc of a Delaunay triangle abc is smaller than Îµ 1âÎµ Ï abc . For the restricted Delaunay property, we not only require the Voronoi edge V abc intersects the skin surface but also need the distance between the intersection point z and the circumcenter o is less than Îµ 2 2 Ï abc . The following pseudo code shows the procedure ExtractCandidateTringles(). </p><formula xml:id="formula_5">if R abc &lt; Îµ 1âÎµ Ï abc then 4:</formula><p>if V abc intersect the skin surface with a closest point z and oz &lt; Îµ 2 2 Ï abc then end if 17: end while</p><p>The small circumradius condition and restricted Delaunay condition ensure that the candidate surface triangles include all the restricted Delaunay triangles in the final restricted Delaunay triangulation of the Îµ-sampling. This argument is based on the following two observations. First, the small Delaunay triangles would be always Delaunay if we did not insert any point into its smallest circumsphere. It implies that the points sampled in the future will not invalidate most existing candidate surface triangles. Second, the restricted Voronoi edge of a Delaunay triangle can only become shorter after more points are sampled, which means that a restricted Delaunay triangle in a partial mesh could become a nonrestricted Delaunay triangle but a non-restricted Delaunay triangle would never be a restricted Delaunay later.</p><p>We can accelerate the candidate surface extraction procedure by checking the edge length of a large triangle. Since the longest edge of a triangle is as long as 2 times of its circumradius, we can distinguish whether a Delaunay triangle is not a candidate surface triangle if its edge is too long.</p><p>Finally, we update the front from the new candidate surface triangles by checking each edge of a candidate triangle. If the edge is a dangling edge or shared by two triangles with large normal angles, then we put the edge to the queue Q.</p><p>If the restricted union of balls covers the whole surface and no more points can be added, the sample points P is an Îµ-sampling of the skin surface. We walk through all the candidate surface triangles and clean up all the non-restricted Delaunay triangles. The remaining triangles form the restricted Delaunay triangulation of the Îµ-sampling P, which is a quality surface mesh approximating the skin surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>We implemented the algorithm on the PC platform with C++ using OpenGL as the graphics library. We partially reuse prior software on alpha shapes [1] and Betti numbers <ref type="bibr" target="#b6">[9]</ref>. We triangulate a few large molecular skin models of proteins, especially several molecules that our previous algorithm fails to generate the mesh because of the noisy critical points in the Morse-Smale Complexes. <ref type="figure" target="#fig_0">Figure 2</ref> shows the molecular skin model of a protease molecule of the Human Immunodeficiency Virus (HIV). Our algorithm triangulates this surface and produce a mesh with a minimum angle 20.35 â¢ . Since the surface of the molecule has a very bumpy appearance, our previous algorithm failed to triangulate this surface <ref type="bibr" target="#b4">[7]</ref>. In contrast to this, our current algorithm can handle the bumpy surface robustly. This can be explained by two factors: first, we did not use the Morse-Smale complex in this algorithm so that there are no accumulation of numerical error involved in the computation; second, the robust and stable implementation of the alpha shape software relieve us from the robustness worries associated with the Delaunay triangulation computation. <ref type="figure" target="#fig_6">Figure 5</ref> and 6 show the molecular skin model of two molecules we randomly choose from the protein data bank [2]. These results demonstrate that our meshing algorithm generates a correct and precise representation of the surfaces of molecules. We verify this by comparing the Betti numbers of the alpha shape and that of the surface. The topological features such as genus and tunnels are preserved and detail geometric feature like depressions and protrusions are approximated accurately. For example, <ref type="figure" target="#fig_6">Figure 5(b)</ref> shows the magnified view of a small genus and <ref type="figure">Figure 6(b)</ref> illustrates the magnified view of a cavity on the surface. The homeomorphism between the mesh and the original surface and the accurate approximation are due to the Îµ-sampling generated by the restricted union of balls. This also supports our arguments that the molecular skin model is a better geometric model for the molecules such as proteins and DNAs because it can enable us to achieve these two goals.    <ref type="table" target="#tab_2">Table 1</ref> lists the statistics of the running time and mesh quality of the surface meshes illustrated in this paper. All these experiments were run on a Pentium 4 PC. These results indicate that our implementation performs robustly and achievs good mesh quality with reasonable speed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION</head><p>This paper describes an incremental mesh generation algorithm using restricted union of balls for triangulating the molecular skin surfaces. The restricted union of balls is the intersection of the skin surface and the union of a set of empty open balls centered at the surface sample points. By judiciously choosing the radius of the balls to adapt to the surface curvature, we obtain an even Îµ-sampling and the surface mesh is the restricted Delaunay triangulation of the sampling, which is guaranteed to be homeomorphic to the original surface. At the same time, we achieve guaranteed mesh quality and reasonable efficiency.</p><p>Compared with the sweeping skin meshing algorithm, our current meshing algorithm performed more robustly but had a lower efficiency because it computes the Delaunay triangulation of all the sample points on the surface. Although we improve the efficiency of locating the tetrahedron in the incremental construction of the Delaunay triangulation in a fast way, the edge flipping is still costly since the complexity of the Delaunay triangulation of surface sample points can be O(n 2 ), as shown by Jeff Erickson <ref type="bibr" target="#b10">[13]</ref>. Actually, any surface meshing algorithm using Delaunay triangulation of the sample points would face this problem and perform even worse because they have to use the DAG structure to locate the new vertex.</p><p>The mesh quality we achieved is worse than the previous methods, namely, the sweeping skin meshing algorithm and dynamic skin triangulation algorithm in a small scale. The main reason is that we do not use the costly refinement operations to improve the mesh quality. We can achieve a better quality by choosing smaller Î³ values. However, it would result in a large number of triangles in the mesh. Applying the refinement operations on our result would be an option to achieve better qualities. Indeed, after some minor refinement, our mesh will be as good as the results given by the previous method. However, we skip the refinement part in this paper because we aim to focus on the new way of mesh generation.</p><p>Our algorithm generates surface meshes and outputs the Delaunay triangulation of these sample points at the same time. An immediate future work would be the generation of quality volumetric tetrahedral mesh for the molecules on the base of our results. The Delaunay refinement algorithm in <ref type="bibr" target="#b5">[8]</ref> would be a good choice. With the quality volumetric tetrahedral mesh, we can approximate the electrostatic potentials by solving the Poisson-Boltzmann equations using finite element methods. We believe the result would be more accurate and close to the experimental results because the mesh quality is an essential factor for the accuracy and convergence of finite element methods. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>The molecular skin model of HIV-2 protease.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>The vertex insertion in the algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Locate the new point v correspond to a front edge ab.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Algorithm 2</head><label>2</label><figDesc>ExtractCandidateTriangles() 1: unmark all the triangles in Star(v) 2: while there is an unmarked triangle abc â Star(v) do 3:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>molecular</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>The molecular skin model of the molecule with PID:200D. Figure (a) shows its surface model and (b) illustrates the zoomed mesh details of a small genus in the box of (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table /><note>Performance of our meshing algorithm.</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors thank the constructive discussions with T.T. Wong. They are also grateful to Siu-Wing Cheng for the stimulating discussions at the beginning of this work.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Triangulating the surface of a molecule</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nataraj</forename><surname>Akkiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Edelsbrunner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Appl. Math</title>
		<imprint>
			<biblScope unit="volume">71</biblScope>
			<biblScope unit="page" from="5" to="22" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Linearly scalable computation of smooth molecular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">V</forename><surname>Wright Amitabh Varshney</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frederick</forename><forename type="middle">P</forename><surname>Brooks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="19" to="25" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Provably good surface sampling and approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Boissonnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Oudot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eurographics/ACM SIGGRAPH symposium on Geometry processing</title>
		<meeting>the Eurographics/ACM SIGGRAPH symposium on Geometry processing</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="9" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Dynamic Skin Triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sullivan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="525" to="568" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Guaranteed quality triangulation of molecular skin surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xinwei</forename><surname>Ho-Lun Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Quality meshing with weighted delaunay refinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Siu-Wing</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tamal</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the thirteenth annual ACM-SIAM symposium on Discrete algorithms</title>
		<meeting>the thirteenth annual ACM-SIAM symposium on Discrete algorithms</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="137" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An incremental algorithm for betti numbers of simplicial complexes on the 3-sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cecil</forename><surname>Jose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Delfinado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Edelsbrunner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="771" to="784" />
			<date type="published" when="1995-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Deformable smooth surface design. Discrete Computational Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="87" to="115" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shah</surname></persName>
		</author>
		<title level="m">Triangulating topological spaces. Proceedings 10th ACM Symposium on Computational Geometry</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="285" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Three-dimensional alpha shape</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herbert</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ernst</forename><forename type="middle">P</forename><surname>Mucke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transaction on Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="43" to="72" />
			<date type="published" when="1994-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Nice point sets can have nasty delaunay triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeff</forename><surname>Erickson</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The molecular skin model of the molecule with PID:1FG1. Figure (a) shows its surface model and (b) illustrates the zoomed mesh details of a cavity in the box of (a)</title>
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m">Proceedings of the seventeenth annual symposium on Computational geometry</title>
		<meeting>the seventeenth annual symposium on Computational geometry</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="96" to="105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Molecular surface modeling and meshing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Laug</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Houman</forename><surname>Borouchaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 10th International Meshing Roudable</title>
		<meeting>10th International Meshing Roudable</meeting>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="31" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Software for c 1 surface interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><forename type="middle">L</forename><surname>Lawson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematical Software III</title>
		<imprint>
			<date type="published" when="1977" />
			<biblScope unit="page" from="161" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Quality meshing of implicit solvation models of biomolecular structures. Ices technical report</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yongjie</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guoliang</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chandrajit</forename><surname>Bajaj</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
		<respStmt>
			<orgName>University of Texas at Austin</orgName>
		</respStmt>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
