<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Extraction of Parallel Vector Surfaces in 3D Time-Dependent Fields and Application to Vortex Core Line Tracking</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holger</forename><surname>Theisel</surname></persName>
							<email>theisel@mpi-inf.mpg.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mpi</forename><surname>Saarbrücken</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan</forename><surname>Sahner</surname></persName>
							<email>sahner@zib.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zib</forename><surname>Berlin</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tino</forename><surname>Weinkauf</surname></persName>
							<email>weinkauf@zib.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Christian</forename><surname>Hege</surname></persName>
							<email>hege@zib.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
							<email>hpseidel@mpi-inf.mpg.de</email>
						</author>
						<title level="a" type="main">Extraction of Parallel Vector Surfaces in 3D Time-Dependent Fields and Application to Vortex Core Line Tracking</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Line and Curve Generation I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism flow visualization</term>
					<term>vortex core lines</term>
					<term>bifurcations</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Flow behind a circular cylinder. Shown are vortex core lines in a certain frame of reference. Their evolution over time is tracked by our algorithm and depicted using transparent surfaces. Red color encodes the past while gray shows the future.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Flow fields play a vital role in many research areas. Examples are burning chambers, turbomachinery and aircraft design in industry as well as blood flow in medicine. As the resolution of numerical simulations as well as experimental measurements like PIV have evolved significantly in the last years, the challenge of understanding the intricate flow structures within their massive result data sets has made automatic feature extraction schemes necessary.</p><p>Among the features of interest, vortices are the most prominent. They play a major role in many research areas due to their wanted or unwanted effects on the flow. In turbomachinery design, vortices reduce efficiency, whereas in burning chambers, vortices have to be controlled to achieve optimal mixing of oxygen and fuel. In aircraft design, vortices can both increase and decrease lift.</p><p>Thorough overviews of algorithms for the treatment of vortical structures in time-independent flow fields can be found in the literature <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b11">12]</ref>. We give a short introduction here. Vortex detection schemes can be classified in two major categories:</p><p>• Vortex region detection is based on scalar vortex region quantities that are used to define a vortex as a spatial region where the quantity exhibits a certain value range. Examples are regions of high magnitude of vorticity or negative λ 2 -criterion <ref type="bibr" target="#b7">[8]</ref>. Isosurfaces or volume rendering are common approaches for visualizing these quantities.</p><p>• Vortex core line extraction aims at finding line type features that are regarded as centers of vortices. Different approaches exist. Sujudi and Haimes consider lines where the flow exhibits a swirling motion around it <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b11">12]</ref>. Banks and Singer extract vorticity lines seeded at critical points and corrected towards pressure minima <ref type="bibr" target="#b1">[2]</ref>. Roth and Peikert consider stream lines of zero torsion <ref type="bibr" target="#b13">[14]</ref>. While those methods depend on the reference frame, recently a vortex core line extraction method was proposed that is Galilean invariant by extracting extremum lines of scalar region quantities <ref type="bibr" target="#b14">[15]</ref>, i.e., this method is invariant under adding constant flow fields.</p><p>All vortex core line methods mentioned above can be implemented using the parallel vectors (PV) operator, a popular line feature extraction approach for static flow fields <ref type="bibr" target="#b11">[12]</ref>. The idea of the PV approach is to derive two vector fields w 1 , w 2 out of a given 3D vector field v, such that the desired vortex core lines are the locations where w 1 and w 2 are parallel. Several ways of extracting these lines exist <ref type="bibr" target="#b11">[12]</ref>, either based on extracting and intersecting isosurfaces <ref type="bibr" target="#b8">[9]</ref>, Newtonian iterations on grid faces, analytic solutions for triangular faces, or curve following schemes <ref type="bibr" target="#b0">[1]</ref>. All these solutions (except <ref type="bibr" target="#b0">[1]</ref>) have in common that they are based on an underlying grid and a simple (linear or trilinear) interpolation inside the grid cells. In fact, these solutions find intersection points of the vortex core lines on grid faces and connect them afterward by local connection strategies. Also <ref type="bibr" target="#b0">[1]</ref> computes the intersection of the vortex core lines with certain faces which are locally set by a predictor step. Then the actual intersections with the vortex core lines are computed in a corrector step. Flow dynamicists are interested in tracking vortex core lines over time for several reasons:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Visualization 2005</head><p>October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 ©2005 IEEE.</p><p>• When the impact of a feature on the flow is measured by certain criteria (rotation strength <ref type="bibr" target="#b15">[16]</ref>, pressure <ref type="bibr" target="#b9">[10]</ref>, Okubo-Weiss-criterion <ref type="bibr" target="#b6">[7]</ref>), feature tracking becomes necessary to answer the question, whether the impact of a feature on the flow increases or decreases, when time evolves, as the correspondence problem of features in different time steps is not a trivial task. With the full feature surface of our method at hand, the problem can be solved by simply checking, if two features at different times lie in the same connected component of the surface.</p><p>• Also, the spatial evolution over time is interesting e.g. in burning chambers, where the location and extent of vortices are the key ingredient for a complete burning process.</p><p>A first approach to tracking PV-based vortex core lines over time was given in <ref type="bibr" target="#b2">[3]</ref> which focused on scale-space as the additional dimension. There, a marching-cubes-like algorithm is performed to extract 4D triangular structures in regular 4D hypercubes building the cells of the space-time domain.</p><p>In this paper we introduce a new method to extract and track vortex core lines which are based on a PV formulation. This method is based on the concept of feature flow fields (FFF) <ref type="bibr" target="#b20">[21]</ref>: we derive appropriate vector fields such that the searched vortex core lines are stream lines on them. This way, the extraction/tracking of vortex core lines is reduced to a simple stream line/surface integration of vector fields. We choose this approach because of the following reasons:</p><p>• Numerical stream line/surface integration is well-understood in the Visualization community. A variety of fast and stable algorithms exist for this purpose. <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b16">17]</ref> • The stream surface integration approach is independent of an underlying grid, giving a subcell accuracy and relieving us of finding appropriate local connection strategies.</p><p>• Bifurcations (i.e. events of sudden changes of the behavior of vortex core lines over time) play an important role in the understanding of the dynamical behavior of vortex core lines. Contrary to pre-existing methods, the FFF approach permits to localize, characterize and classify these bifurcations. To the best of our knowledge, this has not been done in the Visualization community before.</p><p>The rest of the paper is organized as follows: sections 2-5 describe our FFF based approach of extracting and tracking vortex core lines. Since the approach is exclusively based on the PV formulation, we describe the approach independently of the vortex core background. We call the solutions of the PV operator in the static case PV lines, while their sweeping over time in time-dependent fields are called PV surfaces. Section 2 explains the FFF approach to extract PV lines in static fields. Based on this, section 3 introduces the feature flow fields to track PV lines over time. Section 4 gives a complete classification of local bifurcations of PV lines over time. Section 5 describes the final algorithms to tracking PV lines. Section 6 shows the application of our technique to a number of test data sets, among them the particular PV realization for vortex core lines defined by Sujudi and Haimes <ref type="bibr" target="#b18">[19]</ref> in a Galerkin model of a flow behind a circular cylinder.</p><p>Notation: In this paper we consider points, vectors and vector fields both in 3D and 4D. To make a clear distinction between them, we write a 4D structure as p, v, ..., while for 3D structures we simply write p, v.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">EXTRACTING PV LINES IN STATIC FIELDS</head><p>In this section we shortly describe the parallel vectors (PV) operator <ref type="bibr" target="#b11">[12]</ref> and explain how to use the concept of feature flow fields (FFF) in order to extract PV lines in a 3D static field. This will later be the foundation of an FFF-based algorithm for tracking PV lines in unsteady fields.</p><p>Given two continuous 3D vector fields w 1 and w 2 , the PV operator extracts all points in the domain where the vectors of w 1 and w 2 point in the same direction, i.e. w 2 = λ w 1 for some real λ 1 , or w 1 w 2 in shorthand notation.</p><p>Peikert and Roth <ref type="bibr" target="#b11">[12]</ref> list examples of reasonable choices of w 1 and w 2 to extract line type features like vortex core lines in flow fields or extremum lines in scalar fields. As the theory presented here can be formulated completely in terms of the PV operator, we keep the derivation as general as possible and just choose particular vector fields w 1 and w 2 in section 6.</p><p>Aiming at extracting PV lines of (w 1 , w 2 ) in the domain</p><formula xml:id="formula_0">D = [x min , x max ] × [y min , y max ] × [z min , z max ]</formula><p>, we define the vector field s as</p><formula xml:id="formula_1">s(x, y, z) =   k(x, y, z) m(x, y, z) n(x, y, z)   = w 1 × w 2 .<label>(1)</label></formula><p>Then the PV lines consist of all locations (x, y, z) with s(x, y, z) = (0, 0, 0) T .  <ref type="bibr" target="#b20">[21]</ref> (originally introduced to track critical points of time-dependent vector fields) was already used for extracting particular Galilean invariant vortex core lines without using the PV approach <ref type="bibr" target="#b14">[15]</ref>. To apply the FFF concept to PV lines, the following steps are necessary: 1. A vector field f is defined which fulfills the FFF property.</p><p>This means that given a point x 0 = (x 0 , y 0 , z 0 ) with s(x 0 ) = (0, 0, 0) T , each point x on the stream line of f starting from x 0 fulfills s(x) = (0, 0, 0) T as well. In other words: PV lines of (w 1 , w 2 ) are stream lines of f.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head><p>A set of starting points is defined which guarantees that the stream line integration of f starting from them covers all PV lines.</p><p>Then all PV lines of (w 1 , w 2 ) can simply be extracted by applying a stream line integration of f. We treat the two parts of the approach in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Obtaining the feature flow field f</head><p>In this section we show that f essentially consists of an appropriate combination of the first order partials s x , s y , s z of s. We denote the gradients of the components of s in (1) by</p><formula xml:id="formula_2">∇k =   k x k y k z   , ∇m =   m x m y m z   , ∇n =   n x n y n z   .</formula><p>Then f should point into a direction where the components of s remain constant. This means that f has to be perpendicular to the gradients of the components of s. We define</p><formula xml:id="formula_3">f 1 = ∇m × ∇n =   det(s y , s z , (1, 0, 0) T ) det(s z , s x , (1, 0, 0) T ) det(s x , s y , (1, 0, 0) T )   . (2)</formula><p>which is perpendicular to ∇m and ∇n. Hence, all points on a stream line of f 1 have constant components m and n. In a similar way we define f 2 and f 3 as</p><formula xml:id="formula_4">f 2 = ∇n × ∇k =   det(s y , s z , (0, 1, 0) T ) det(s z , s x , (0, 1, 0) T ) det(s x , s y , (0, 1, 0) T )   (3) f 3 = ∇k × ∇m =   det(s y , s z , (0, 0, 1) T ) det(s z , s x , (0, 0, 1) T ) det(s x , s y , (0, 0, 1) T )   .<label>(4)</label></formula><p>In general, f 1 , f 2 , f 3 describe different directions. However, if we are on a PV line, we can write w 2 = λ w 1 for a certain λ . Inserting this into the computation of the derivatives of (1), we get</p><formula xml:id="formula_5">s x = (w 1x × w 2 ) + (w 1 × w 2x ) = w 1 × (w 2x − λ w 1x ) s y = (w 1y × w 2 ) + (w 1 × w 2y ) = w 1 × (w 2y − λ w 1y ) (5) s z = (w 1z × w 2 ) + (w 1 × w 2z ) = w 1 × (w 2z − λ w 1z )</formula><p>which shows that s x , s y , s z are coplanar perpendicular to w 1 and w 2 . </p><formula xml:id="formula_6">= α f 1 + β f 2 + γ f 3 and a = (α, β , γ) T , we obtain f =   e f g   =   det(s y , s z , a) det(s z , s x , a) det(s x , s y , a)   .<label>(6)</label></formula><p>Choosing the vector field a:</p><p>In order to choose a suitable vector field a, we rewrite f as</p><formula xml:id="formula_7">f =   b 1 • a b 2 • a b 3 • a  <label>(7)</label></formula><p>with</p><formula xml:id="formula_8">b 1 = s y × s z , b 2 = s z × s x , b 3 = s x × s y .<label>(8)</label></formula><p>On a PV line, the coplanarity of s x , s y , s z together with <ref type="bibr" target="#b7">(8)</ref> gives</p><formula xml:id="formula_9">w 1 w 2 b 1 b 2 b 3 .</formula><p>Consequently, the only condition we have to put on a is that it must not be perpendicular to w 1 and w 2 respectively on a PV line. If we know that w 1 never vanishes on a PV line, the simple choice a = w 1 does the job. A similar statement holds for w 2 . In case that both w 1 and w 2 may vanish on a PV line, we choose</p><formula xml:id="formula_10">a = w 1 if w 1 ≥ w 2 w 2 otherwise,</formula><p>which guarantees a to be continuous in direction but not in orientation. Thus, f has to be integrated as an orientation-free vector field (similar e.g. to an eigenvector field of a tensor field), i.e., the local orientation has to be obtained from the information where the integration of the line has come from. A number of vortex core line extraction concepts based on parallel vectors use w 1 = v and w 2 = M v (see for example <ref type="bibr" target="#b18">[19]</ref> with M = ∇v or <ref type="bibr" target="#b19">[20]</ref> with M = (∇v) T ). For these approaches, both w 1 and w 2 vanish at critical points of v causing both s(x) = (0, 0, 0) T and f(x) = (0, 0, 0) T there. To deal with this problem, we equivalently reformulate w 2 as an appropriate eigenvector of M. This eigenvector does not vanish along the vortex core line, but since eigenvectors have no orientation, an orientation-free integration of f is necessary here as well.  To get the starting points for the first case, we search for the intersections of the PV lines with the boundary of D: for the boundary face x = x min , we search for all points (y, z) with s(x min , y, z) = (0, 0, 0) T . To do so, different numerical solvers can be applied. We use a simple subdivision approach in the (y, z)domain: a rectangular cell C is checked whether one of the components k, m, n is positive/negative at all 4 corners of C. If so, no PV line intersection is found inside C. Otherwise, we recursively subdivide C into 4 subcells until their size is smaller than a certain threshold. In a similar way we compute the intersections of the PV lines with the remaining 5 faces.</p><p>To find a starting point on a closed PV line, it is sufficient to identify an arbitrary point on the line. We have chosen to extract points x with</p><formula xml:id="formula_11">[ s(x) = (0, 0, 0) T , e(x) = 0 ]<label>(9)</label></formula><p>with e from (6). To do so, we apply a similar 3D subdivision approach as described above for the 2D case. Since a closed PV line must consist of points with both positive and negative ecomponents, each closed PV line must consist of at least two points fulfilling <ref type="bibr" target="#b8">(9)</ref>. <ref type="figure" target="#fig_1">Figure 2a</ref> illustrates an example. Clearly, (9) may also deliver solutions on open PV lines, but it guarantees to find at least two solutions for each closed PV line <ref type="bibr" target="#b4">5</ref> . Finally, we do an integration of f starting from all detected points and remove multiply obtained curves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">FEATURE FLOW FIELDS FOR TRACKING</head><p>Now we consider PV structures in time-dependent 3D vector fields (w 1 (x, y, z,t), w 2 (x, y, z,t)). To do so, we first note that all the 3D static vector fields w 1 , w 2 , s, ∇k, ∇m, ∇n, f 1 , f 2 , f 3 , f, a which were introduced in section 2 can be defined in a similar way for the timedependent case as well. In the following we consider these vector fields to be time-dependent, i.e. they are maps for the 4D domain D = D × [t min ,t max ] to IR <ref type="bibr" target="#b2">3</ref> . PV structures in (w 1 (x, y, z,t), w 2 (x, y, z,t)) can be considered as lines in D sweeping over time while smoothly changing their shape and location. In addition, certain bifurcations may occur. Hence, the PV structures in D have the dimensionality 2, i.e. they are surfaces in D. <ref type="figure" target="#fig_1">Figure 2b</ref> gives an illustration. Here a PV line at time t 0 (red) moves to the blue line at time t 1 . Each point on the swept surface between the two lines is actually a 4D point: in addition to the spatial values it is provided with a t-value. In figure 2b (as well as in the following figures) we color code the t-values of points, lines and surfaces.</p><p>In order to extract the PV surfaces in D, we need to define two 4D feature flow fields f and g. The first one can easily be defined as</p><formula xml:id="formula_12">f(x, y, z,t) = f(x, y, z,t) 0 (10)</formula><p>where f is defined in <ref type="bibr" target="#b5">(6)</ref>. It gives a PV line at a certain time level, i.e. all points on a stream line of f have the same t-value. The evolution in time of a PV line should be covered by the 4D feature flow field g. Keeping mind that PV structures in D are surfaces, a family of different g could be chosen such that each linear combination of f and g is a FFF. Among them, we choose the g with f⊥ g. This gives a unique g (except for scaling). We obtain</p><formula xml:id="formula_13">g(x, y, z,t) = h × f f 2 = h × f e 2 + f 2 + g 2 (11) with h(x, y, z,t) =   det(s x , s t , a) det(s y , s t , a) det(s z , s t , a)  <label>(12)</label></formula><p>and f defined in <ref type="bibr" target="#b5">(6)</ref>. <ref type="figure" target="#fig_1">Figure 2b</ref> illustrates f and g at a certain point (red) on the PV surface.</p><p>To prove that g is indeed the desired feature flow field, we consider the gradients in D of the components of s:</p><formula xml:id="formula_14">∇k =    k x k y k z k t    , ∇m =    m x m y m z m t    , ∇n =    n x n y n z n t    .</formula><p>Then we have to show that from w 1 w 2 (i.e. for s = (0, 0, 0) T ) the following four properties can be deduced:</p><formula xml:id="formula_15">∇k • g = ∇m • g = ∇n • g = f • g = 0</formula><p>where • denotes the 4D dot product. This can be shown by a straightforward exercise in algebra.</p><p>We note that Theisel et al. already proposed a FFF for PV tracking <ref type="bibr" target="#b20">[21]</ref> which appears not to work: the FFF proposed there is constantly vanishing on a PV line and therefore unable to track it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">LOCAL BIFURCATIONS</head><p>Although in general PV lines change smoothly over time, there are certain points D in which the behavior of the PV lines changes  abruptly. These bifurcation are a vital ingredient for assuring the complete extraction of PV surfaces. Furthermore, knowing what kind of bifurcations may occur contributes to understanding the parallel vectors operator. In this section we characterize local bifurcations and show how to extract them. In general, we can distinguish between two kinds of bifurcations: inner bifurcations and boundary bifurcations. We treat them separately in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Inner bifurcations</head><p>An inner bifurcation is characterized by the fact that the integration of f on a PV surface in D ends in a critical point of f. This means that an inner bifurcation occurs at a location c ∈ D with</p><formula xml:id="formula_16">[ s( c) = (0, 0, 0) T , f( c) = (0, 0, 0) T ].<label>(13)</label></formula><p>Since both s( c) = (0, 0, 0) T and f( c) = (0, 0, 0) T gives surfaces in D as solutions <ref type="bibr" target="#b5">6</ref> , their intersections are stable isolated points in D.</p><p>To get them, we use a subdivision approach in 4D similar to the one already explained in 2D and 3D. In order to analyze the behavior of the PV lines around an inner bifurcation, we analyze the Jacobian matrix of f in c which is a common approach in the field of vector field topology to classify critical points of 2D <ref type="bibr" target="#b4">[5]</ref> and 3D <ref type="bibr" target="#b24">[25]</ref> vector fields. On c fulfilling (13) we know from (7) that b 1 = b 2 = b 3 = (0, 0, 0) T . This and <ref type="bibr" target="#b7">(8)</ref> gives that s x s y s z , i.e. we can set s y = p s x and s z = q s x for  certain p, q. Inserting this into the derivatives of (8), we get</p><formula xml:id="formula_17">b 1x = (s yx × s z ) + (s y × s zx ) = s x × (p s zx − q s yx ) b 1y = (s yy × s z ) + (s y × s zy ) = s x × (p s zy − q s yy ) b 1z = (s yz × s z ) + (s y × s zz ) = s x × (p s zz − q s yz ) b 2x = (s zx × s x ) + (s z × s xx ) = s x × (q s xx − s zx ) b 2y = (s zy × s x ) + (s z × s xy ) = s x × (q s xy − s zy ) (14) b 2z = (s zz × s x ) + (s z × s xz ) = s x × (q s xz − s zz ) b 3x = (s xx × s y ) + (s x × s yx ) = s x × (s yx − p s xx ) b 3y = (s xy × s y ) + (s x × s yy ) = s x × (s yy − p s xy ) b 3z = (s xz × s y ) + (s x × s yz ) = s x × (s yz − p s xz ).</formula><p>This shows that the 9 vectors in <ref type="bibr" target="#b13">(14)</ref> are coplanar perpendicular to s x , s y , s z . In addition, the following statements follow directly from <ref type="bibr" target="#b13">(14)</ref>: </p><formula xml:id="formula_18">b 1x + p b 2x + q b 2x = (0, 0, 0) T<label>(</label></formula><formula xml:id="formula_19">b 1x + b 2y + b 3z = (0, 0, 0) T .<label>(18)</label></formula><p>Keeping b 1 = b 2 = b 3 = (0, 0, 0) T in mind, we can write the Jacobian matrix of f( c) as</p><formula xml:id="formula_20">J f( c) =   b 1x • a b 1y • a b 1z • a b 2x • a b 2y • a b 2z • a b 3x • a b 3y • a b 3z • a   .<label>(19)</label></formula><p>- <ref type="bibr" target="#b16">(17)</ref> show that the lines of J f( c) are not independent, which gives det(J f( c) ) = 0. Hence, one eigenvalue of J f( c) is zero. From <ref type="bibr" target="#b17">(18)</ref> we infer that the trace of J f( c) is zero. As the trace of a matrix equals the sum of its eigenvalues, we see that also the remaining eigenvalues of J f( c) add to zero. So they can be written as  set, see section 6 for details on the used visualization scheme. Now imagine a closed PV line p 0 at the time t 0 . While moving forward in time (t = t 1 ), the closed PV line p 1 becomes smaller until at a certain time t 2 it collapses to a point c and disappears. Note that the inverse case of a closed collapse bifurcation exists as well indicating the birth of a (small) closed PV line.</p><p>A saddle bifurcation appears if <ref type="bibr" target="#b12">(13)</ref> and r &gt; 0 hold. See figure 3d for an illustration and figure 4 for an example from a test data set. Two PV lines p 0 , q 0 at the time t = t 0 move towards each other (t = t 1 ), share a common point c at the time t = t 2 , and move away from each other (t = t 3 ). The directions of the PV lines out of c are the directions of the two eigenvectors of J f( c) corresponding to the non-zero eigenvalues.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Boundary bifurcations</head><p>A boundary bifurcation is characterized by the fact that f on a PV surface is tangential to the boundary surface of D. </p><p>which gives isolated points in the stable case. To get them, we may apply a 3D subdivision approach (in (x, y,t)-space) similar as described in section 2.2. However, there is a faster approach which will be explained later in section 5. In a similar way we compute the boundary bifurcations for the remaining boundary faces of D. At a boundary bifurcation c, the integration of f starting from c (both in forward and backward direction) may enter D, or it may leave D immediately after starting the integration. To distinguish these two kinds of behavior, we check whether directional derivative ∇f • f of f points inside or outside D. In the first case, we have an inflow boundary bifurcation. See figure 3a for an illustrating example. Imagine two PV lines p 0 and q 0 at the time t = t 0 which leave D at the points x 0 and y 0 respectively. While moving forward in time (t = t 1 ), the exit points x 1 , y 1 of the current PV lines p 1 , q 1 move towards each other until at a certain time t 2 they collapse to An outflow boundary bifurcation illustrated in figure 3b and shown in <ref type="figure" target="#fig_9">figure 6</ref> within a test data set. Here, the PV line p 0 at the time t 0 enters and leaves D at the points x 0 and y 0 . While moving forward in time (t = t 1 ), the exit points x 1 , y 1 move towards each other, until at a certain time t 2 they collapse in the point c making the PV line disappear.</p><p>Also for boundary bifurcations the reverse cases exist. At an inflow boundary bifurcation a PV line may split up into two lines, and at an inflow boundary bifurcation a PV line may appear.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Further bifurcations</head><p>After introducing the local bifurcations above, one may ask whether there are more bifurcations possible. In particular we check whether fold bifurcations of (open or closed) PV lines exist. A fold bifurcation occurs when two PV lines move toward each other, merge at a certain time and immediately disappear after that <ref type="bibr" target="#b6">7</ref> . It turns out that such a bifurcation cannot exist for PV lines. To show this, imagine two PV lines p 0 , q 0 at the time t 0 as illustrated in figure 7a. While moving forward in time (t = t 1 ), the current PV lines p 1 , q 1 move towards each other until they merge in the line p 2 and disappear. If we pick a point x 0 on p 0 and start a stream line integration of g from x 0 , we end in a point y 0 on q 0 . Since x 0 and y 0 have the same t-value t = t 0 , the integration of g must go both forward and backward in time. This is a contradiction to <ref type="bibr" target="#b10">(11)</ref> which shows that the last component of g (specifying the evolution in time) is always non-negative. Therefore, PV fold bifurcations do not exist.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE ALGORITHMS</head><p>Before we formulate the algorithms for PV surface extraction in D, we explain the main ideas on a number of simple examples.</p><p>Consider figure 7b: suppose there is a PV line p 0 at the time t = t 0 which leaves D in the points x 0 , y 0 . While moving forward in time until t = t 1 , p 0 sweeps to the line p 1 which leaves D in x 1 , y 1 . Doing this sweeping, the points where the PV lines leave D form two lines x, y on the boundary of D: x connects x 0 and x 1 , while y connects y 0 and y 1 . In order to extract the PV surfaces (i.e. the surface bounded by the curves p 0 , y, p 1 , x), we have the choice between two approaches: One approach is to start with an extraction of p 0 and using it as seeding curve for a stream surface integration of g until we reach p 1 (or reversely, integrate g backward from p 1 until we reach p 0 ). The second approach is to extract x and use it as seeding curve of a stream surface integration of f until it reaches y (or reversely, integrating f from y to x). The first approach has two disadvantages over the second one: first, a stream surface integration of f is cheaper then a stream surface integration of g because f has a simpler structure (see section 3). Second, a stream surface integration of g starting from p 0 may partially leave D before reaching p 1 . Hence we prefer the second approach. The extraction of x and y turns out to be simple: in the example, x consists of all points (x min , y, z,t) with s(x min , y, z,t) = (0, 0, 0) T . Keeping x min constant, this can be considered as finding PV lines in a steady 3D flow field in the (y, z,t)-domain. Thus, x can be found by applying the algorithm of section 2 for the (y, z,t)-domain. Similarly we find y.</p><p>Another simple example is shown in figure 8a. Here we have a closed PV line p 0 at the time t 0 which moves over time to the line p 1 at t = t 1 . To extract the PV surface, we might integrate g starting from p 0 . In order to be consistent with the example before, we prefer to pick a point x 0 on p 0 8 and apply a stream line integration of g starting from x 0 until it leaves D in a point x 1 . This stream line is used as seeding structure for a stream surface integration of f.</p><p>The last simple example is shown in figure 8b. Here a closed PV line appears at the time t 0 in the closed collapse bifurcation point p 0 , grows over time (t = t 1 ) to p 1 until at t = t 2 it touches the boundary of D in the inflow boundary bifurcation point c. From this moment on it is an open PV line p 3 which creates an intersection curve x with the boundary of D. In order to get a seeding structure for this example, we first extract x similar to the example in figure 7b. Then we apply a stream line integration of g starting from c until it ends in p 0 .</p><p>In order to extract PV surfaces in D, we provide two algorithms. Algorithm 1 describes how to get a seeding structure, i.e., a set of lines in D such that a stream surface integration of f starting from them gives the complete PV surface. Based on this, algorithm 2 describes how to extract and visualize the PV surfaces for a particular time interval. Then the set of all lines obtained in steps 1-4 is the searched seeding structure. This algorithm needs some comments: To 1: We have to find the PV lines at the faces of D. This means to apply six times the algorithm for extracting PV lines of static vector fields as described in section 2. To 2: All inner bifurcations can be found by applying a recursive subdivision approach as described earlier. Boundary bifurcations can be found by checking the lines from step 1 of algorithm 1 for local extremal values of the t-component. To 3: We get the closed stream line by applying the static algorithm of section 2 to find closed PV lines in the first and last time step. Algorithm 1 can be considered as a preprocess of the actual PV extraction algorithm described in the following Algorithm 2 (extract and visualize the PV surface for a time interval [t 0 ,t 1 ] with t min ≤ t 0 ≤ t 1 ≤ t max ):</p><p>1. Load the seeding lines obtained from algorithm 1.</p><p>2. Identify all parts of the seeding lines with t-values between t 0 and t 1 .</p><p>3. Starting from these seeding lines, apply a stream surface integration of f until it leaves D or returns to its starting point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>Visualize the stream surfaces obtained in 3.</p><p>Note that although algorithm 2 guarantees that all PV surfaces are found, it does not guarantee that each surface is found only once.</p><p>In fact, an open PV surface is extracted twice, by integrating from both exit curves of D. In the current implementation we did not consider this problem and visualized parts of the PV surfaces twice.</p><p>Out-of-core considerations: 3D time-dependent fields tend to be larger than the main memory of high-end workstations. Thus, an out-of-core data handling is preferable. We show for our algorithm that only a certain part of the data has to be in memory at once, and that (in worst case) the whole data set has to be loaded only twice. We assume that certain time intervals of the data can be loaded into memory separately, e.g. the data may come as a sequence of static 3D vector fields, one for each time step: by loading the vector fields of two consecutive time steps t i and t i+1 and applying a linear interpolation, we obtain the time-dependent vector field in that interval. Algorithm 1 can be executed by treating time slices consecutively, but not in one sweep through the data since g needs to be integrated in both directions. Thus, we make one forward sweep through the data collecting the local bifurcations and integrating g in forward direction. While doing this, we build up 6 static 3D vector fields representing the spatial boundaries of the domain over time. They serve as input for step 1 of this algorithm. In a following backward sweep we integrate g backwards starting from the already collected seeding points.</p><p>Since a stream line of f always stays in the same time level, the stream surface integration of algorithm 2 can be applied to smaller subintervals independently if the data of the original time interval [t 0 ,t 1 ] does not fit into main memory. <ref type="figure" target="#fig_4">Figures 4-6</ref> show examples of local bifurcations in constructed quadrilinear vector fields w 1 , w 2 . We show them both to illustrate the bifurcations again and to explain our visualization technique. As projecting the complete PV surface to space leads to selfintersections already in quite simple settings, we use the following approach to visualize the evolution of PV structures: at a given time we draw the PV lines as red tubes inside the PV surface that  is displayed only for a certain time range for future and past. At the boundary the corresponding seeding lines from algorithm 1 are given for a larger time interval. Both the surfaces and the seeding lines fade out away from the current time. We use color coding to indicate past (red) and future (gray). <ref type="figure" target="#fig_4">Figure 4</ref> shows the evolution of a saddle bifurcation. Note that the width of the surface in figures 4a and 4c confirms the intuition that the most drastic movements of the PV line over time takes place near the bifurcation points. <ref type="figure" target="#fig_9">Figure 6</ref> shows a reversed outflow boundary bifurcation leading to the birth of a PV line. We omitted to display the PV surface for this and the following example. <ref type="figure" target="#fig_0">Figure 5</ref> shows an inflow bifurcation and a subsequent closed collapse bifurcation in the green point. Note that in figure 5a, the location of the future inflow bifurcation is already shown by the grey semi-transparent point.</p><p>Now we proceed to applying our parallel vector based theory to vortex core line extraction. To do so, we consider the vortex core line concept defined by Sujudi and Haimes <ref type="bibr" target="#b18">[19]</ref> searching for all locations with v ∇v • v in regions where ∇v has a pair of complex eigenvalues. As already mentioned in section 2.1, we have equivalently chosen w 1 = v and w 2 as the eigenvector corresponding to the only real eigenvalue of ∇v in the regions of interest. Before we apply the technique to a real data set, we analyze whether the bifurcations introduced in section 4 may appear for vortex core lines defined by <ref type="bibr" target="#b18">[19]</ref> for piecewise low-degree vector fields. It turns out that the inner bifurcations do not exist inside a cell for a piecewise linear vector field in space-time <ref type="bibr" target="#b8">9</ref> . For piecewise quadrilinear vector fields, all bifurcations can occur inside a cell. <ref type="figure" target="#fig_14">Figure 9</ref> shows an example of a quadrilinear vector field containing a saddle bifurcation.</p><p>Consider <ref type="figure" target="#fig_15">Figure 10</ref> that demonstrates our vortex core line tracking approach for visualizing a moving Stuart vortex. A Stuart vortex is a well-known vortical structure in fluid dynamics which can be described by a closed formula. <ref type="figure" target="#fig_15">Figure 10a</ref> shows that there is a critical point on the moving vortex core line. <ref type="figure" target="#fig_15">Figure 10b</ref> shows the vortex core line together with the PV surfaces indicating its past and future behavior. It shows that our FFF integration did not get stuck in the critical point. <ref type="figure" target="#fig_16">Figures 1 and 11</ref> demonstrate the results of our method applied to vortex core line tracking in a flow behind a circular cylinder. As above, we chose the vortex core line definition v ∇v • v. The data set was derived by Bernd R. Noack (TU Berlin) from a direct numerical Navier Stokes simulation by Gerd Mutschke (FZ Rossendorf). It resolves the so called 'mode B' of the 3D cylinder wake at a Reynolds number of 300 and a spanwise wavelength of 1 diameter. The data is provided on a 265 × 337 × 65 curvilinear grid as a low-dimensional Galerkin model <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b26">27]</ref>. The examined time range is [0, 2π]. The flow exhibits periodic vortex shedding leading to the well known von Kármán vortex street. This phenomenon plays an important role in many industrial applications, like mixing in heat exchangers or mass flow measurements with vortex counters. However, this vortex shedding can lead to undesirable periodic forces on obstacles, like chimneys, buildings, bridges and submarine towers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>In this paper, we made the following contributions for 3D timedependent fields:</p><p>• We presented feature flow fields which are equivalent to the PV operator.</p><p>• Based on the FFF's, we achieved a complete classification of stable local bifurcations of tracked PV lines in saddle bifurcations, closed collapse bifurcations, inflow and outflow boundary bifurcations.</p><p>• We presented a new algorithm to extract and track PV lines as a repeated stream line/surface integration of the FFF's. This way, the algorithm is independent of a particular underlying grid of the data. In fact, the accuracy of our method does not depend on the grid resolution but exclusively on the chosen technique and step size for the stream surface integration.</p><p>There is a number issues left for future research. First, algorithm 1 can be enhanced such that the set of seeding lines is minimal, i.e., each part of the PV surface is obtained only once. Second, algorithm 1 can be optimized such that the complete data set has to be loaded only once instead of twice.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>( 5 )</head><label>5</label><figDesc>and (2)-(4) give that f 1 , f 2 , f 3 are parallel on a PV line. Thus, almost every linear combination of f 1 , f 2 , f 3 can act as feature flow field. Setting f</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>(a) two kinds of PV lines: ending in the boundary points x 1 , x 2 , or closed: in this case we extract two starting points x 3 ,x 4 ; (b) PV structures are surfaces in 4D.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>2. 2</head><label>2</label><figDesc>Starting points for integrating f Given the definitions above, we first analyze whether an integration of f along a PV line may get stuck in a critical point of f. This happens at a location x ∈ D with s(x) = (0, 0, 0) T and f(x) = (0, 0, 0) T . Both conditions independently build structures of dimensionality 1 in D, i.e., they are line structures 3 . If these line structures intersect, the intersection points are structurally unstable, i.e., they disappear by adding noise to the data. Because of this we assume that such intersections do not exist in D. However, we mention that [s(x) = (0, 0, 0) T , f(x) = (0, 0, 0) T ] gives stable solutions in a time-depending setting. We treat this in section 4. If [s(x) = (0, 0, 0) T , f(x) = (0, 0, 0) T ] does not have solutions in D, every PV line ends either on the boundary faces of D (for both forward and backward integration), or builds a closed stream line in f [12] 4 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>local bifurcations of PV lines: (a) inflow boundary bifurcation; (b) outflow boundary bifurcation; (c) closed collapse bifurcation; (d) saddle bifurcation. (a) Shortly before. (b) The event. (c) Shortly after.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Saddle bifurcation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Inflow bifurcation and closed collapse bifurcation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>15 )b</head><label>15</label><figDesc>1y + p b 2y + q b 2y = (0, 0, 0) T (16) b 1z + p b 2z + q b 2z = (0, 0, 0) T(17)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>, possibly negative r. Hence we can classify three kinds of inner bifurcations. The first, r = 0, is a generally unstable higher order inner bifurcation and not considered here. For r = 0, exactly two stable kinds of inner bifurcations are possible depending on the sign of r:A closed collapse bifurcation appears if (13) and r &lt; 0 hold. In this case, the two non-zero eigenvalues of J f( c) are purely imaginary indicating a rotational behavior of f around c. While figure 3c illustrates this, figure 5 depicts this bifurcation using a test data(a) Shortly before. (b) The event. (c) Shortly after.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 :</head><label>6</label><figDesc>Reversed outflow boundary bifurcation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>A boundary bifurcation c = (x c , y c , z c ,t c ) on the boundary face x = x max is the solution of [ s( c) = (0, 0, 0) T , x c = x max , e( c) = 0 ]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 7 :</head><label>7</label><figDesc>(a) PV line fold bifurcations do not exist! (b) tracking an open PV line. a point c. At c the current PV lines p 2 , q 2 get smoothly connected and build a single PV line p 3 from this moment on. The point c denotes the inflow boundary collapse bifurcations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 8 :</head><label>8</label><figDesc>seeding lines (black) for simple examples.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Algorithm 1 ( 2 . 3 .</head><label>123</label><figDesc>getting the seeding lines): 1. Compute the intersection curves of the PV surface with the spatial boundaries of D (see figure 7b for an example). Extract all local bifurcations introduced in section 4. Extract closed PV lines at the times t = t min and t = t max respectively, pick a point on each extracted closed line, and apply a stream line integration of g starting from them until they leave D or end in a closed collapse bifurcation. Figure 8a shows an example. 4. Start a stream line integration of g from all inflow boundary bifurcations until it ends in a closed collapse bifurcation or leaves D (see figure 8b for an example).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 9 :</head><label>9</label><figDesc>Saddle bifurcation of vortex core lines as defined by v ∇v • v in a quadrilinear vector field. (a) Critical points and surrounding stream lines. (b) Vortex core line together with its PV surface showing the evolution of the vortex over time.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 10 :</head><label>10</label><figDesc>Stuart Vortex moving over time from left to right.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 11 :</head><label>11</label><figDesc>Flow behind a circular cylinder. The extracted seeding lines elucidate the alternating evolution of the vortical structures in transverse direction.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">λ = ±∞ is also allowed, i.e., w 1 w 2 holds if w 1 or w 2 vanishes.<ref type="bibr" target="#b1">2</ref> Note that this statement gives that these line structures cannot be obtained by replacing s(x, y, z) = (0, 0, 0) T by s(x, y, z) = 0 and applying a simple scalar field analysis of s , since the zeros of general scalar fields are structures of dimensionality 2.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">This has been shown for s, as it defines PV lines<ref type="bibr" target="#b11">[12]</ref>. To show that f(x) = (0, 0, 0) T builds line structures as well, we have to show that f can also be formulated using the PV operator. (2)-(4) give that we can rewrite f as f = (α ∇m − β ∇k) × (∇n − γ β ∇m). Hence, f = (0, 0, 0) T corresponds to (α ∇m − β ∇k) (∇n − γ β ∇m).<ref type="bibr" target="#b3">4</ref> This statement implies that our approach does not have to incorporate algorithms to detecting closed stream lines in flow fields<ref type="bibr" target="#b25">[26]</ref>, since we know in advance that our stream lines of interest in f are closed.<ref type="bibr" target="#b4">5</ref> If a closed PV line completely lies in the y−z plane by chance, (9) gives many solutions. In this case, e(x) = 0 can simply be replaced by f (x) = 0 in<ref type="bibr" target="#b8">(9)</ref> to reduce the number of solutions.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6">This is due to the fact that both s( c) = (0, 0, 0) T and f( c) = (0, 0, 0) T can be interpreted as sweeping lines over time.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7">In the field of time-dependent vector field topology, we have similar fold bifurcations for critical points<ref type="bibr" target="#b22">[23]</ref> and isolated closed stream lines (cyclic fold bifurcation<ref type="bibr" target="#b21">[22]</ref>).</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8">We use one of the points which were necessary to extract p 0 -see section 2</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9">This is similar to the fact that e.g. fold bifurcations do not exist inside a cell for piecewise linear time-dependent vector fields.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We thank Jan Reininghaus for his great implementational efforts. We thank Bernd R. Noack for fruitful discussions and providing the cylinder data set. All visualizations in this paper have been created using AMIRA -a system for advanced visual data analysis <ref type="bibr" target="#b17">[18]</ref> (see http://amira.zib.de/).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Vortex tubes in turbolent flows: Identification, representation, reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="132" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A predictor-corrector technique for visualizing unsteady flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TVCG</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="151" to="163" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Vortex tracking in scale space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization 2002. Proc. VisSym 02</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Stream surface generation for fluid flow solutions on curvilinear grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization 2001. Proc. VisSym 01</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Representation and display of vector field topology in fluid flow data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="27" to="36" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Constructing stream surfaces in steady 3D vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hultquist</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;92</title>
		<meeting>IEEE Visualization &apos;92</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="171" to="177" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Vorticity and vortex dynamics in complex turbulent flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Hunt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc CANCAM, Trans. Can. Soc. Mec. Engrs</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">21</biblScope>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">On the identification of a vortex</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hussain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">285</biblScope>
			<biblScope unit="page" from="69" to="94" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Minagawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rado</surname></persName>
		</author>
		<title level="m">The 3D marching lines algorithm. Graphical Models and Image Processing</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="page" from="503" to="509" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Identification of tubular vortices in turbulence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Miura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kida</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Physical Society of Japan</title>
		<imprint>
			<biblScope unit="volume">66</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1331" to="1334" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A low-dimensional galerkin method for the three-dimensional flow around a circular cylinder</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">R</forename><surname>Noack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Eckelmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Fluids</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="124" to="143" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The parallel vectors operator -a vector field visualization primitive</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization 99</title>
		<meeting>IEEE Visualization 99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Feature extraction and visualisation of flow fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Vrolijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Doleisch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographics</title>
		<meeting>Eurographics</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="69" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A higher-order method for finding vortex core lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;98</title>
		<meeting>IEEE Visualization &apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="143" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Galilean invariant extraction and iconic representation of vortex core lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sahner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. EuroVis</title>
		<meeting>EuroVis</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Core-line-based vortex hulls in turbomachinery flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="151" to="154" />
			<date type="published" when="2003" />
			<publisher>Visualization Society of Japan</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A tetrahedra-based stream surface algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bobach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mahrous</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Kollmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization 01</title>
		<meeting>IEEE Visualization 01</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="151" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Amira: A highly interactive system for visual data analysis. The Visualization Handbook</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Westerhoff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="749" to="767" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Identification of swirling flow in 3D vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sujudi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haimes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Department of Aeronautics and Astronautics</title>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>MIT. AIAA Paper 95-1715</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Extremal feature extraction from 3-D vector and noisy scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">K</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Medoni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="95" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Feature flow fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization 2003. Proc. VisSym 03</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="141" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Stream line and path line oriented topology for 2D time-dependent vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="321" to="328" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Topology-based visualization of time-dependent 2D vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization 2001. Proc. VisSym 01</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="117" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Implicit stream surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization 93</title>
		<meeting>Visualization 93</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="245" to="252" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Boundary switch connectors for topological visualization of complex 3D vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VisSym 04</title>
		<meeting>VisSym 04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="183" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Detection and visualization of closed streamlines in planar flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wischgoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TVCG</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="165" to="172" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">On the transition of the cylinder wake</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-Q</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Fey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">R</forename><surname>Noack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>König</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Eckelmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Fluids</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="779" to="795" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
