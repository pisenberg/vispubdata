<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Rendering of Large Unstructured Grids Using Dynamic Level-of-Detail</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><forename type="middle">P</forename><surname>Callahan</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Scientific Computing and Imaging Institute</orgName>
								<orgName type="institution">University of Utah</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">João</forename><forename type="middle">L D</forename><surname>Comba</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Instituto de Informática</orgName>
								<orgName type="institution">UFRGS</orgName>
								<address>
									<country key="BR">Brazil</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Shirley</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">University of Utah</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cláudio</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Scientific Computing and Imaging Institute</orgName>
								<orgName type="institution">University of Utah</orgName>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">School of Computing</orgName>
								<orgName type="institution">University of Utah</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Rendering of Large Unstructured Grids Using Dynamic Level-of-Detail</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Surface and object representations</term>
					<term>geometric algorithms; I.3.3 [Computer Graphics]: Picture/Image Generation interactive volume rendering</term>
					<term>multiresolution meshes</term>
					<term>level-of-detail</term>
					<term>tetrahedral meshes</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We describe a new dynamic level-of-detail (LOD) technique that allows real-time rendering of large tetrahedral meshes. Unlike approaches that require hierarchies of tetrahedra, our approach uses a subset of the faces that compose the mesh. No connectivity is used for these faces so our technique eliminates the need for topological information and hierarchical data structures. By operating on a simple set of triangular faces, our algorithm allows a robust and straightforward graphics hardware (GPU) implementation. Because the subset of faces processed can be constrained to arbitrary size, interactive rendering is possible for a wide range of data sets and hardware configurations.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Unstructured meshes are common in scientific computing. Direct volume rendering for these meshes follows two main approaches: ray casting and cell projection in visibility order. These approaches are typically too slow for interactivity when full resolution meshes are rendered. Thus, level-of-detail (LOD) techniques are an attractive way to trade off rendering quality for rendering speed. However, unlike for rectilinear volumes, it is not well studied how LOD techniques should be applied to unstructured meshes.</p><p>There have been two basic approaches to LOD for unstructured meshes, typically for the special case of tetrahedral meshes. The first has been employed in ray casting where the scalar field along the ray is sparsely sampled to improve speed. The second is to simplify the mesh into a hierarchy of new meshes, each with fewer tetrahedra than its parent mesh. The ray tracing approach has the advantage of simplicity and robustness, and the mesh simplification approach has the advantage that it can be easily used in a graphics hardware (GPU) implementation.</p><p>This paper describes a technique that attempts to capture the simplicity of the ray sampling method while still allowing a natural GPU implementation. This is accomplished by sparsely sampling the faces between tetrahedra in the mesh without creating an explicit hierarchy of LODs. The GPU is used to perform ray integration between these sparsely sampled faces without the need for connectivity information. This avoids the complexity of the mesh simplification methods, but still allows a GPU implementation, which makes a fast and robust LOD rendering system possible ( <ref type="figure">Figure 1</ref>). Our main contributions are:</p><p>1. We propose a new sample-based LOD framework for rendering unstructured grids that can be implemented by simply using a subset of mesh faces.</p><p>2. We examine several strategies for deciding which faces to draw, and discuss their relative merits.</p><p>3. We provide an efficient implementation of our techniques, and show that they can be applied to generate high-quality renderings of large unstructured grids.</p><p>The remainder of this paper is layed out as follows. We summarize related work in Section 2. In Section 3 we lay the framework for sample-based simplification for LOD. A description of our sampling strategies is described in Section 4. In Section 5 we present Please see supplementary material on conference DVD.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Visualization 2005</head><p>October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 ©2005 IEEE.</p><p>our implementation details. Our experimental results are shown in Section 6, and in Section 7 we discuss the different trade-offs with our approach. Finally, in Section 8 we provide our conclusions and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Volume rendering unstructured grids has been a topic of much research, and major advances have been made in performing this rendering efficiently (e.g., <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b36">37,</ref><ref type="bibr" target="#b39">40]</ref>). Because the size of the unstructured grids continues to increase faster than our visualization techniques can handle them, other research has focused on approximately rendering unstructured grids to maintain interactivity <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b27">28]</ref>. The two main techniques have been to use LOD representations of the data <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b32">33]</ref>, or to sparsely sample viewing rays. The approximate rendering was first done by sampling sparsely along viewing rays <ref type="bibr" target="#b7">[8]</ref>. This idea can work for unstructured meshes as well, provided there is a mechanism for skipping cells entirely (e.g., <ref type="bibr" target="#b29">[30]</ref>). Alternatively, a multiresolution approach is commonly used to increase the rendering speed of triangle meshes <ref type="bibr" target="#b22">[23]</ref>. They often work by dynamically selecting a set of triangles to approximate the surfaces to within some error bound, or to meet some target frame rate <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b21">22]</ref>.</p><p>For structured grids, computing and dynamically rendering multiple LODs is relatively straightforward. This can be accomplished by using hardware-accelerated techniques that involve slicing the volume with view-aligned texture hierarchies <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b37">38]</ref>. Because the data is structured, the view-aligned slices can be computed quickly and compositing can be accomplished by blending the fragments into the framebuffer in the order in which they are generated.</p><p>For unstructured meshes the problem is not as well studied. One way to speed up the rendering is to statically simplify the mesh in a preprocessing step to a mesh small enough for the volume renderer to handle <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b15">16]</ref>. However, this approach only provides a static approximation of the original mesh and does not allow for dynamic changes to the level of detail. This way, the user can not easily refine features of interest, or dynamically adapt the LOD to the capabilities of the hardware being used. Dynamic LOD approaches are preferable, and have shown to be useful by Museth and Lombeyda <ref type="bibr" target="#b27">[28]</ref> even if the pictures generated are of a more limited type than full-blown volume renderings. To our knowledge, the only two approaches that describe dynamic LOD volume rendering for unstructured meshes are the recent works by Cignoni et al. <ref type="bibr" target="#b3">[4]</ref> and Leven et al. <ref type="bibr" target="#b19">[20]</ref>.</p><p>Cignoni et al. <ref type="bibr" target="#b3">[4]</ref> propose a technique based on creating a progressive hierarchy of tetrahedra that is stored in a multitriangulation data structure <ref type="bibr" target="#b13">[14]</ref> that is dynamically updated to achieve interactive results. Their algorithm is quite clever (and involved), as an efficient implementation requires the use of compression of the topology and hierarchical information to be practical. Leven et al. <ref type="bibr" target="#b19">[20]</ref> convert the unstructured grid into a hierarchy of regular grids that are stored in an octree, and can be rendered using LOD techniques for regular grids. Their experiments show that the resulting LOD hierarchy is over two orders of magnitude larger than the original data. Both of these techniques require some form of hierarchical data structures, fairly involved preprocessing, and relatively complex implementations.</p><p>Many methods have simplified triangle meshes into smaller sets of textured polygons (e.g., <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b23">24]</ref>). Another approach is to use compression schemes to minimize the bandwidth of the geometry <ref type="bibr" target="#b10">[11]</ref>. Of these, our method is most similar in spirit to the randomized Zbuffer <ref type="bibr" target="#b35">[36]</ref> or the work by Deussen et al. <ref type="bibr" target="#b9">[10]</ref>, where a subset of all the geometry is drawn. Our algorithm is also related to the sampling work of Danskin and Hanrahan <ref type="bibr" target="#b7">[8]</ref>. Some of our sampling strategies are reminiscent of Monte Carlo rendering (e.g., <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b6">7]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">A SAMPLE-BASED LOD FRAMEWORK</head><p>In scientific computing, it is common to represent a scalar function f : D ⊆ R 3 → R as sampled data by defining it over a domain D, which is represented by a tetrahedral mesh. For visualization purposes, we define the function f as linear inside each tetrahedron of the mesh. In this case, the function is completely defined by assigning values at each vertex v i (x, y, z), and is piecewise-linear over the whole domain. The domain D becomes a 3D simplicial complex defined by a collection of simplices c i . It is important to distinguish the domain D from the scalar field f . The purpose of visualization techniques, such as isosurface generation <ref type="bibr" target="#b20">[21]</ref> and direct volume rendering <ref type="bibr" target="#b24">[25]</ref> are to study intrinsic properties of the scalar field f . The time and space complexity of these techniques are heavily dependent on the size (or number of simplices) and shape of the domain D.</p><p>For large data sets, it is not possible to achieve interactive visualization without using an approximation. In these cases, it is often useful to generate a reduced-resolution scalar fieldf :D ⊆ R 3 → R, such that:</p><p>• the new scalar fieldf approximates f in some natural way,</p><p>i.e., |f − f | ≤ ε;</p><p>• the new domainD is smaller than D.</p><p>LOD techniques attempt to compute multiple approximationsf i from f at decreasing resolutions for interactive visualization. Recently, techniques have been proposed that hierarchically simplify the tetrahedral mesh by using edge collapses (see <ref type="bibr" target="#b3">[4]</ref>). These techniques work similarly to triangle based simplification and use connectivity information to incrementally cull simplices c i from the domain D, i.e., when a 1-simplex is collapsed, several 2-and 3simplices become degenerate and can be removed from the mesh. Most techniques order the collapses using some type of error criterion, stopping when the size of the domain |D| reaches the desired LOD.f computed in this way for LOD can be considered as a domain-based simplification of f because the domain D is being resampled with fewer vertices. An alternative approach for computingf is sample-based simplification. If we consider a ray r that leaves the viewpoint and passes through screen-space pixel (x, y) then enters the scalar field f , a continuous function g(t) is formed for r where g(t) = f (r 0 + tr d ).</p><p>In the domain D, represented by a tetrahedral mesh, this function g(t) is piecewise-linear and defined by the set of points P = {p i</p><p>x,y }. An approximationḡ(t) can be created by using a subsetP of P. In other words, by removing some of the samples that define g(t), we obtain an approximating functionḡ(t). This subsampling can occur on the tetrahedral mesh using any of the 2-or 3-simplices.</p><p>The key difference between domain-and sample-based simplification is that they approximate the domain D in different ways with respect to the volume integral. If you consider the ray r passing through a medium represented by D, the volume rendering integral is computed at each 2-simplex intersection within D (see Max <ref type="bibr" target="#b25">[26]</ref>). Domain-based simplification approximates the domain D, then computes an exact volume integral over the approximate geometry. Sample-based simplification uses the original geometry to represent D, then computes an approximate volume integral over the original geometry. <ref type="figure" target="#fig_0">Figure 2</ref> shows a 2D example of the function g(t) and approximate functionsḡ 1 (t) andḡ 2 (t) using these two approaches as the ray r passes through D. It is important to emphasize that sample-based simplification provides different, though not necessarily better, results than domain-based simplification. The advantage of this approach is the simplicity of the simplification method and data structures necessary to perform dynamic LOD.</p><p>Because we wantf to be a good approximation of f , when using sample-based simplification it is necessary to ensure that each ray r passing throughf encounters at least two samples to avoid holes in the resulting image. Furthermore, by removing geometry without constraint in a nonconvex mesh, we could possibly be computing the volume integral over undefined regions outside of D. This problem can easily be resolved by always guaranteeing that the boundary B of f is always sampled (see <ref type="figure" target="#fig_0">Figure 2</ref>).</p><p>This problem is similar to importance sampling where the integral can be approximated using probabilistic sampling or Monte Carlo techniques <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b31">32]</ref>. However, this is a much more difficult problem when considering the entire space of functions that occur because of the infinite number of viewpoints. Therefore, sampling strategies that attempt to optimize the coverage of the functions from all viewpoints become necessary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Face Subsampling</head><p>The sample-based simplification strategy described above operates on the existing geometric representation of the mesh. In principle, the sampling could be done on any of the simplices that compose the mesh. We choose to sample by the faces (triangles) that make up the tetrahedra. This is due to the flexibility and speed of the sampling that it allows.</p><p>If we consider the topology of the mesh as a collection of triangles (2-simplices) embedded in R 3 ,f i can be computed at each LOD i by selectively sampling a portion of the faces. Thus, by removing one triangle, we are effectively removing one sample of the function g(t) that represents f along the ray r. The advantage of this technique is that it provides a natural representation for traversing the different LODs.</p><p>Given a set of unique faces F in a tetrahedral mesh, boundary faces B and internal faces I can be extracted such that B ∪ I = F. Since B gives a minimum set of faces that bound the domain D of the mesh, B should remain constant. By adding and removing faces from I, we get an approximation of the mesh where B ∪ I ⊆ F. This leads to a simple formula for determining the number of faces in I that need to be selected in each pass:</p><formula xml:id="formula_0">|I| = |I prev | × TargetTime RenderTime ,</formula><p>where TargetTime is the amount of time you would like each frame to take for interactive viewing, i.e., 0.1 seconds, and RenderTime is the time that the previous frame required to render. This allows the system to adapt the LOD to the current view and render complexity.</p><p>It also allows an easy return to the full quality mesh by selecting all the internal faces to be drawn with the boundary faces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SAMPLING STRATEGIES</head><p>To minimize visual error the faces should be chosen while accounting for both transfer function and viewpoint. However, to maximize visual smoothness when the viewpoint or the transfer function change, the faces should be based only on mesh geometry and scalar field values. This conflict between accuracy and ability to change viewpoint and transfer function easily indicates that the best sampling strategy will depend on user goals and properties of the data. For this reason we provide a variety of sampling strategies. We described the steps that are required to achieve interactive rates given an internal face list. However, the heuristics that are incorporated to assign importance to the faces are just as important. We describe four methods that operate on different properties of the mesh: topology sampling, view-aligned sampling, field sampling, and area sampling strategies ( <ref type="figure" target="#fig_2">Figure 4</ref>). The first two strategies are deterministic. The second two strategies are randomized, each rewarding different data attributes. We also implemented a naive randomized algorithm that selected a uniformly random subset of faces, but these results were poor for the same reason unstratified sampling is poor when sampling pixels: clumping and holes <ref type="bibr" target="#b26">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Topology Sampling</head><p>The first sampling method that we employ is based on the topology of the initial tetrahedral mesh. This approach assigns layers to some of the faces in an attempt to select faces that are connected, resulting in an image that looks more continuous. Similar work has been done for determining a sequence of nonconvex hulls on a point set <ref type="bibr" target="#b11">[12]</ref>. This approach requires a preprocessing step in which we extract the boundary, remove the tetrahedra on the boundary, and repeat until all the tetrahedra have been peeled from the mesh. A new layer value is assigned to the faces on the boundary at each step in the algorithm and separated into the boundary face list (layer zero) and the internal face list (all other faces). The preprocessing layer extraction algorithm is given in <ref type="figure" target="#fig_1">Figure 3</ref>.</p><p>This algorithm assigns layers to some of the faces, but not all of them. In practice, it uses enough of the faces for a good image. However, when all of the layer faces cannot be drawn because they exceed the limit of internal faces allowed for interactive rendering,  a subset of the layers are rendered. This is done by picking an even distribution of the layers throughout the mesh until the target internal face count is reached.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">View-Aligned Sampling</head><p>The second sampling strategy that we use is view-aligned sampling. The intuition to this approach is that the faces perpendicular to the viewing direction are the most visible ones. Therefore, by selecting the internal faces that are more closely aligned to the current view, we can optimize the screen-space coverage. A simple approach would be to perform a dot product between each internal face normal and the viewing direction to order the faces in the internal face list. However, this approach is costly because it requires processing on every face independent of the LOD. Instead, we use a simple technique based on the work of Kumar et al. <ref type="bibr" target="#b17">[18]</ref> and Zhang and Hoff <ref type="bibr" target="#b40">[41]</ref> for back-face culling. In a preprocessing step, the faces are clustered by their normals. The clusters are computed by fitting a bounding box to a unit sphere and subdividing the faces of the box into regions. This grid is then projected onto the sphere, and the internal faces are clustered based on their normal's location in the distribution. Clearly, this is not a uniform distribution, but in practice it produces good results. We used a 4 × 4 grid for each of the faces of the bounding box, which results in 96 normal clusters. This allows us to detect view-aligned faces based on their cluster instead of individually, which significantly increases the performance of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Field Sampling</head><p>Our third approach for sampling internal faces is based on the field values of the tetrahedral mesh. In most cases this is represented as a scalar at each vertex in the mesh. This technique assigns importance to a face based on the average scalar value at its vertices. In a preprocessing step, a histogram is built using the normalized scalar values, which shows the distribution of the field. Using an approach similar to stratified sampling in Monte Carlo integration, we divide this histogram into evenly spaced intervals (we use 128), then randomly pick the same number of faces from each interval to be rendered. Unlike Monte Carlo integration, which provides the underlying theory for randomly sampling to approximate a function, we are randomly sampling over the entire space of functions. The internal face list is filled with these random samples, so that no extra computation is required for each viewpoint or change in LOD. A similar technique can be applied to the field using the transfer function. Intuitively, samples should be selected based on opacity instead of scalar value. A histogram is built using the opacity of the scalar values from the transfer function and sampled randomly as previously described. The tradeoff of this method is that it requires resampling with every transfer function update. Due to this constraint, we sample without the transfer function in our experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Area Sampling</head><p>Our fourth strategy recognizes that if the removal of a triangle causes an error of a certain magnitude at a given pixel, then the total error magnitude for all pixels is proportional to the area of that triangle. Thus we could prioritize based on area. An easy way to do this while preserving the possibility of choosing small faces is to prioritize based on A i * ξ i where A i is the area in R 3 of the ith face and ξ i is a uniform random number. This randomizes the selected triangles, but still favors the larger ones being drawn. As with field sampling, this list does not need to be rebuilt for new viewpoints or number of faces to be drawn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION</head><p>The algorithm for dynamic LOD builds on the Hardware-Assisted Visibility Sorting (HAVS) volume rendering system proposed by Callahan et al. <ref type="bibr" target="#b0">[1]</ref>. <ref type="figure" target="#fig_3">Figure 5</ref> shows an overview of how the sampling interacts with the volume renderer.</p><p>In a preprocessing step, the boundary faces are separated from the internal faces and each are put in a list. Each internal face contains a neighboring face with the same vertices and scalar values. To avoid the redundancy of computing a zero-length interval, these duplicate faces are removed. The internal face list is reordered from most important to least important based on one of sampling strategies previously described. This allows us to dynamically adjust the number of faces that are being drawn by passing the first |I| faces to the volume renderer along with the boundary faces. For full quality images, which are shown when the user is not interactively viewing the mesh, the entire internal face list is used. Once the proper subset of faces has been selected, the HAVS algorithm prepares the faces for rasterization by sorting them by their centroids. This provides only a partial order of the faces in object-space since the mesh may contain faces of varying size or even visibility cycles. Upon rasterization, the fragments undergo an image-space sort via the k-buffer, which has been implemented using fragment shaders. The k-buffer keeps a fixed number of fragments (k) in each pixel of the framebuffer. As a new fragment is rasterized, it is compared with the other entries in the k-buffer, the two entries closest to the viewpoint (for front-to-back) are used to find the color and opacity for the fragment using a lookup table which contains the preintegrated volume integral. The color and opacity are composited in the framebuffer, and the remaining fragments are written back to the k-buffer (see <ref type="bibr" target="#b0">[1]</ref> for more detail).</p><p>For dynamic LOD, we are interested in the time that each frame requires to render so we can adjust accordingly. Therefore, we track the render time at each pass and use it to adjust the number of internal faces that are sent to the rasterizer in the next step. This is very important when you are interacting with the system. Since the bottleneck of the volume renderer is rasterization, by zooming in or out, the frame rate can increase or decrease depending on the size of the faces being drawn. Dynamically adjusting the LOD ensures that frame rates remain constant. We use 10 frames per second as a target frame rate for a good balance in interactivity and quality.</p><p>As described above, HAVS requires a preintegrated lookup table to composite the image-space fragments. This table is represented as a 3D texture that looks up a front fragment scalar, a back fragment scalar, and the distance between the fragments. Unfortunately, we remove samples, thereby introducing intervals that are larger than the maximum edge length from which the lookup table is built. In a software implementation, this problem could be resolved by repeatedly compositing the fragment until the gap has been filled similar to Danskin and Hanrahan <ref type="bibr" target="#b7">[8]</ref>. However, this repetition does not map to current hardware. To solve this issue we create a separate lookup table, which is preintegrated to handle rays that span the entire bounding box of the mesh. This secondary lookup table is used during the dynamic LOD where the quality difference is not as noticeable and is replaced by the original table when rendering full quality images. Using a logarithmic scale of the distance to build the lookup table would further improve the image quality during LOD rendering <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>Our experiments were run on a PC with a 3.2 GHz Pentium 4 processor and 2,048 MB RAM. The code was written in C++ with OpenGL and uses an ATI Radeon X800 Pro graphics processor with 256 MB RAM. The Spx2, Torso, and Fighter data sets were used to measure performance and to compare the sampling strategies. An important consideration with LOD techniques is the preprocessing time to create the data structures necessary for interactive rendering. <ref type="table">Table 1</ref> shows the three data sets with their sizes and the time required to preprocess the original mesh into static LODs using the different sampling strategies. The results show that all strategies can be preprocessed quickly, which is important in realworld use, where data may be regenerated with different parameters repetitively.</p><p>Rendering a tetrahedral mesh using sample-based LOD dynamically is based on the fundamental assumption that the render time decreases proportionally to the number and size of the faces that are sampled. The performance of our volume renderering system is based on the number of fragments that are processed at each frame. This roughly corresponds to the number of faces that are rasterized. <ref type="figure" target="#fig_4">Figure 6</ref> shows the performance of the volume rendering system as the number of sampled faces increases. The almost linear scale factor provides a good estimate of the number of faces that would be required to render a data set at a specific frame rate. It is important to note that sampling by area or by view decreases the number of faces that can be rasterized interactively because the screen-space area of the faces is generally larger, resulting in more fragments. For example, 10% LOD using area sampling will take longer to render than 10% LOD using field sampling.</p><p>Another important aspect of sample-based LOD is choosing a sampling strategy that gives the best approximation of your original mesh. To measure the effectiveness of our sampling strategies, we generated images of each data set at 14 fixed viewpoints using all the sampling strategies and compared the results with full quality results from the same viewpoints. Unfortunately there are not yet accepted methods for accurately predicting the magnitude of the difference between two images (as opposed to whether images are perceived as identical where good methods do exist <ref type="bibr" target="#b28">[29]</ref>). In the absence of such an ideal method, we compare images with root mean square error (RMSE). These measurements should only be  <ref type="table">Table 1</ref>: Preprocessing time in seconds of the different sampling strategies for dynamic LOD. The time represents all operations on the mesh after it has been loaded from file before the first rendering pass occurs.  used as a subjective tool for where the images differ as opposed to any quality ranking for LOD strategies. <ref type="figure" target="#fig_6">Figure 8</ref> shows the three data sets at the different viewpoints and the error measured between each LOD sampling strategy and a full quality image. Notice that no sampling strategy is superior in all cases, but they all provide a good approximation.</p><p>To provide a more qualitative analysis of the sampling strategies, we also show images of the different techniques on the same data set. <ref type="figure" target="#fig_5">Figure 7</ref> shows a direct comparison of the strategies with a full quality rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION</head><p>Our algorithm is designed to meet a speed goal while maintaining what visual quality is possible and in this sense it is oriented toward time-critical systems such as TetSplat <ref type="bibr" target="#b27">[28]</ref>. Unlike TetSplat, our method aims to do direct volume rendering with transfer functions rather than surface rendering with castaways. Our method also has the advantage that it requires very little additional storage beyond the original mesh. Approaches that sample the unstructured mesh on a regular grid <ref type="bibr" target="#b19">[20]</ref> increase the original data size substantially and require extensive preprocessing.</p><p>Our method is an alternative to rendering explicit hierarchical meshes <ref type="bibr" target="#b3">[4]</ref>. While explicit hierarchies are elegant and provide excellent visual quality, they require more preprocessing than our technique, are difficult to implement, and they do not easily allow for continuous LOD. The main advantage of explicit hierarchies over our technique is that they can provide smoother imagery that may be a better visual match to an exact rendering. However, our subjective impression is that our approximate rendering is more than accurate enough for interaction with volume data, and what objective visual accuracy is needed for visualization tasks is an interesting and open question (see <ref type="figure" target="#fig_7">Figure 9)</ref>.</p><p>A key characteristic of our algorithm is that it operates on mesh faces rather than mesh cells. This results in fewer primitives than methods that render cells by breaking them into polygons (e.g., <ref type="bibr" target="#b30">[31,</ref><ref type="bibr" target="#b38">39]</ref>), which improves overall bandwidth of the rendering algorithm. For example, given n tetrahedra, projected tetrahedra algorithms render 3.4n triangles, while HAVS renders only 2n. Furthermore, the set of all possible mesh faces to be rendered do not change with viewpoint, just the order and number of the face indices. Thus, we can leave the geometry in memory on the GPU for better efficiency. Another advantage of our system is that it works with perspective or parallel projections with no additional computation. Most importantly, a face-based method allows faces to be dropped without major errors in opacity because the HAVS method is aware of adjacent faces visible through a pixel, whereas dropping cells in cellbased methods leads to undesirable accumulation of empty space which causes the volume to gradually grow more and more transparent as cells are dropped. So for cells, unlike faces, some explicit simplification hierarchy is required. Our four sampling strategies each select a subset on the set of mesh cell faces. View-aligned sampling attempts to choose a subset based on view directions, and this emphasizes the quality of individual frames at the expense of coherence between frames. The other three methods choose a subset independent of viewpoint and thus do not have flickering artifacts. Topology sampling builds a set of shells for its subsets and produces images without obvious holes, but does so at the expense of correlated regions in the image. Field sampling uses a randomized algorithm over binned densities to choose a subset. This is a robust strategy but because it completely ignores connectivity it has obvious discontinuities in intensity. In practice, sampling by scalar value and sampling by opacity using the transfer function produce simlar results. Area sampling rewards larger faces and also achieves robustness via randomization. While rewarding larger faces does seem to lower visual error, it also lowers the number of triangles that are rasterized because of the larger fill requirements. Overall, each method has its merits and we expect the best choice to be data and application dependent. We tried to keep our implementation both simple and robust while minimizing preprocessing costs. The idea behind trying to minimize preprocessing costs was to lower the effort to load new data into the system. Our design choices cause certain limitations. One of the most significant being that the lowest LOD the current system can support is limited by the size of the boundary of the mesh (which appears to hover around 3% for several of the data sets we tried). We note that there are ways around this issue, e.g., we can simplify the boundary using traditional surface simplification as done in <ref type="bibr" target="#b34">[35]</ref>. We also note that we have not fully optimized our system. In particular, we are not using view-frustum culling, which certainly can lead to substantial speedups in closeup views.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSIONS AND FUTURE WORK</head><p>Our technique is based on an alternative solution to the subsampling problem needed for LOD rendering. Instead of using a domainbased approach which maintains different versions of a valid unstructured mesh in a hierarchical data structure our sample-based approach is based on rendering with a subset of the mesh faces. These faces correspond to the intersection points of the underlying unstructured grid with rays going through the center of the screenspace pixels. In effect, our technique directly subsamples the vol-ume rendering integral as it is computed. We have shown this to be effective in interactive visualization of unstructured meshes too large for approximation-free rendering. This effectiveness is largely because our technique is particularly well-suited to GPU implementation.</p><p>In the future it would be useful to do user-studies to determine what types of visual error are detrimental to success in visualization tasks. Such studies could guide which sampling strategies are best. It would also be interesting to see whether our face sampling method would be useful in ray tracing volume renderers as the data reduction might benefit them as well. Another area of future work is to extend our system to handle data sets too large for main memory through the use of compression techniques similar to <ref type="bibr" target="#b10">[11]</ref> or out-of-core storage of the data set as in <ref type="bibr" target="#b5">[6]</ref>. We would also like to extend our algorithm to handle hexahedron which should involve either using quadrilaterals directly or splitting them into triangles for efficiency. As a final direction for future work, we are interested in using our algorithm to visualize dynamic data.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Classification of LOD simplification techniques in 2D represented by a mesh and the function occurring at a ray r through the mesh. Undefined areas of the volume are expressed as dashed lines. (a) The original mesh showing the function g(t) that ray r passes through. (b) The mesh after sample-based simplification where the function approximationḡ 1 (t) is computed by removing samples from the original function g(t). (c) The mesh after domain-based simplification, where the approximating functionḡ 2 (t) is computed by resampling the original domain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Pseudocode for extracting the topology layers of a tetrahedral mesh.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>A 2D example of sampling strategies for choosing internal faces. (a) A topology sampling which calculates layers by peeling boundary tetrahedra. (b) A view-aligned sampling that selects the faces most relevant to the current viewpoint. (c) A field sampling which uses stratified sampling on a histogram of the scalar values. (d) An area sampling which selects the faces by size.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Overview of the dynamic LOD algorithm. (a) The LOD algorithm samples the faces and dynamically adjusts the number of faces to be drawn based on the previous frame rate. (b) The HAVS volume rendering algorithm sorts the faces on the CPU and GPU and composites them into a final image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Plot of the render time for the Spx2 (blue), Torso (red), and Fighter (black) at different LODs using field sampling. Approximately 3% LOD is the boundary only and 100% LOD is a full quality image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Direct comparison of the different sampling strategies with a full quality rendering of the Spx2 data set (828 K tetrahedra). Full quality is shown at 2.5 fps and LOD methods are shown at 10 fps (3% LOD for area sampling and 10% LOD on all other strategies).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Error measurements of the different sampling strategies for 14 fixed viewpoints on the Spx2, Torso, and Fighter data sets. Root mean squared error is used to show the difference between the full quality rendering and the LOD rendering at 10 fps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>The Fighter data set (1.4 million tetrahedra) shown in multiple views at full quality on top (1.3 fps), 15% LOD (4.5 fps) in the middle, and at 5% LOD (10.0 fps) on the bottom. The LOD visualizations use area-based sampling.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>← false while there exists t such that Peeled[t] = false for each face f f ← External Set s = / 0 for each tetrahedron t such that Peeled[t] = false for each face f in t if f is already in s f ← Internal else insert f into s for each face f such that f = External f ← CurrentLayer for each tetrahedron t such that f and t share a vertex Peeled[t] = true CurrentLayer ← CurrentLayer + 1</figDesc><table><row><cell>EXTRACT LAYERS</cell></row><row><cell>CurrentLayer ← 0</cell></row><row><cell>for each tetrahedron t</cell></row><row><cell>Peeled[t]</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors thank Carlos Scheidegger for insightful discussions, John Schreiner for help with the paper, and Mark Segal from ATI for donated hardware. The authors acknowledge Bruno Notrosso (Electricite de France) for the Spx data set, Neely and Batina (NASA) for the fighter data set, and the Scientific Computing and Imaging Institute (Utah) for the Torso. Steven P. Callahan is supported by the Department of Energy (DOE) under the VIEWS program. The work of João L. D. Comba is supported by a CNPq grant 478445/2004-0. Cláudio T. Silva is partially supported by the DOE under the VIEWS program and the MICS office, the National Science Foundation (grants CCF-0401498, EIA-0323604, OISE-0405402, and IIS-0513692), and a University of Utah Seed Grant. Peter Shirley is partially supported by National Science Foundation under grant CCF-0306151.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Hardware-Assisted Visibility Ordering for Unstructured Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Callahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ikits</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Comba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="285" to="295" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Progressive simplification of tetrahedral meshes preserving all isosurface topologies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-J</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Lu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="493" to="504" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">TetFusion: an algorithm for rapid tetrahedral mesh simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Chopra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="133" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Selective Refinement Queries for Volume Visualization of Unstructured Tetrahedral Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Magillo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="29" to="45" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Stochastic Sampling in Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="51" to="72" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">iWalk: Interactive Out-Of-Core Rendering of Large Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Corrêa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Klosowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
		<idno>TR-653-02</idno>
		<imprint>
			<date type="published" when="2002" />
			<pubPlace>Princeton University</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Interactive Transfer Function Control for Monte Carlo Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Csebfalvi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Volume Visualization and Graphics</title>
		<meeting>IEEE Symposium on Volume Visualization and Graphics</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="33" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Fast algorithms for volume ray tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Danskin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1992 Workshop on Volume Visualization</title>
		<meeting>the 1992 Workshop on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Billboard Clouds for Extreme Model Simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Décoret</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Durand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sillion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dorsey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Interactive visualization of complex plant ecosystems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Colditz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stamminger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Drettakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="219" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Geometric Compression for Interactive Transmission</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Devillers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-M</forename><surname>Gandoin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="319" to="326" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Non-convex onionpeeling using a shape hull algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Fadili</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Melkemi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Elmoataz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition Letters</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">14</biblScope>
			<biblScope unit="page" from="1577" to="1585" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Time-Critical Rendering of Irregular Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Farias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S B</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wylie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th Brazilian Symposium on Computer Graphics and Image Processing</title>
		<meeting>the 13th Brazilian Symposium on Computer Graphics and Image Processing</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="243" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Efficient Implementation of Multi-Triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Magillo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;98</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Adaptive Display Algorithm for Interactive Frame Rates During Visualization of Complex Virtual Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Séquin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH 1993</title>
		<meeting>ACM SIGGRAPH 1993</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="247" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Quadric-Based Simplification in Any Dimension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2005-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Projected Tetrahedra without Rendering Artifacts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Qiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Hierarchical backface computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Garrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eurographics Workshop on Rendering techniques &apos;96</title>
		<meeting>the Eurographics Workshop on Rendering techniques &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page">235</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Multiresolution Techniques for Interative Texture-based Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lamar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Interactive Visualization of Unstructured Grids Using Hierarchical 3D Textures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leven</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Corso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Volume Visualization and Graphics</title>
		<meeting>IEEE Symposium on Volume Visualization and Graphics</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="37" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH 1987</title>
		<meeting>ACM SIGGRAPH 1987</meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">View-Dependent Simplification of Arbitrary Polygonal Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Erikson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 1997</title>
		<meeting>SIGGRAPH 1997</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="199" to="208" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Level of Detail for 3D Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Huebner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Morgan-Kaufmann Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Visual Navigation of Large Environments Using Textured Clusters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">W C</forename><surname>Maciel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Interactive 3D Graphics</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="95" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Area and volume coherence for efficient visualization of 3D scalar functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Optical Models for Direct Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">L</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="99" to="108" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Consequences of Stratified Sampling in Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="277" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">TetSplat: Real-time Rendering and Volume Clipping of Large Unstructured Tetrahedral Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Museth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lombeyda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="433" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The Visible Differences Predictor: Applications to Global Illumination Problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Myszkowski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Rendering Workshop</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="223" to="236" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Interactive Ray Tracing for Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-P</forename><surname>Sloan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="238" to="250" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A Polygonal Approximation to Direct Scalar Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. San Diego Workshop on Volume Visualization</title>
		<meeting>San Diego Workshop on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1990-11" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Time Complexity of Monte Carlo Radiosity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Shirley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics &apos;91</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="459" to="465" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Progressive Tetrahedralizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">G</forename><surname>Staadt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="397" to="402" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Sorting and Hardware Assisted Rendering for Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symposium on Volume Visualization</title>
		<meeting>IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="83" to="89" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Simplification of Unstructured Tetrahedral Meshes by Point-Sampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Uesu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Bavoil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fleishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shepherd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE/EG International Workshop on Volume Graphics 2005</title>
		<meeting>IEEE/EG International Workshop on Volume Graphics 2005</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="157" to="165" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">The Randomized Z-Buffer Algorithm: Interactive Rendering of Highly Complex Scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">M</forename><surname>Der Heide</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Straßer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Hardware-Based Ray Casting for Tetrahedral Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Weiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Merz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003-10" />
			<biblScope unit="page" from="333" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Level-Of-Detail Volume Rendering view 3D Textures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Weiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Zimmerman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Volume Visualization</title>
		<meeting>IEEE Volume Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A coherent projection approach for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="275" to="284" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Visibility-Ordering Meshed Polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="126" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Fast backface culling using normal masks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">E</forename><surname>Kenneth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1997 Symposium on Interactive 3D Graphics</title>
		<meeting>the 1997 Symposium on Interactive 3D Graphics</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="103" to="106" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
