<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fast Visualization by Shear-Warp on Quadratic Super-Spline Models Using Wavelet Data Decompositions</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregor</forename><surname>Schlosser</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">ICM</orgName>
								<orgName type="institution" key="instit2">Universitäten Mannheim und Heidelberg</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jürgen</forename><surname>Hesser</surname></persName>
							<email>jhesser@rumms.uni-mannheim.de</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">ICM</orgName>
								<orgName type="institution" key="instit2">Universitäten Mannheim und Heidelberg</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Institut für Mathematik</orgName>
								<orgName type="institution">Universität Mannheim</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Zeilfelder</surname></persName>
							<email>zeilfeld@euklid.math.uni-mannheim.de</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">ICM</orgName>
								<orgName type="institution" key="instit2">Universitäten Mannheim und Heidelberg</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Institut für Mathematik</orgName>
								<orgName type="institution">Universität Mannheim</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Rössl</surname></persName>
							<email>roessl@mpi-sb.mpg.de</email>
							<affiliation key="aff2">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Reinhard</forename><surname>Männer</surname></persName>
							<email>maenner@ti.uni-mannheim.de</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">ICM</orgName>
								<orgName type="institution" key="instit2">Universitäten Mannheim und Heidelberg</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Günther</forename><surname>Nürnberger</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">ICM</orgName>
								<orgName type="institution" key="instit2">Universitäten Mannheim und Heidelberg</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Institut für Mathematik</orgName>
								<orgName type="institution">Universität Mannheim</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
							<email>hpseidel@mpi-sb.mpg.de</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">ICM</orgName>
								<orgName type="institution" key="instit2">Universitäten Mannheim und Heidelberg</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Fast Visualization by Shear-Warp on Quadratic Super-Spline Models Using Wavelet Data Decompositions</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Volume Rendering</term>
					<term>Quadratic Super-Splines</term>
					<term>Shear-Warp Algorithm</term>
					<term>Hierarchical Data Encoding</term>
				</keywords>
			</textClass>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"> <ref type="figure">Figure 1</ref><p>: CT scan of the SIGGRAPH 1989 teapot. Data courtesy: Terarecon Inc, MERL, Brigham and Women's Hospital. Fast visualization of shear-warp by using wavelet encoded data. The close-up views are taken from marked areas. Zooming close to the local regions of interest the improved visual quality becomes increasingly evident. Left: Standard model (trilinear interpolation). Center: Approximation by quadratic super-splines. Right: Approximation by quadratic super-splines with decimated data (14.8% of the given data). The quadratic super-splines have the potential to reduce noise and leads to almost artifact-free visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ABSTRACT</head><p>We develop the first approach for interactive volume visualization based on a sophisticated rendering method of shear-warp type, wavelet data encoding techniques, and a trivariate spline model, which has been introduced <ref type="bibr" target="#b23">[24]</ref> recently. As a first step of our algorithm, we apply standard wavelet expansions <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b30">31]</ref> to represent and decimate the given gridded three-dimensional data. Based on this data encoding, we give a sophisticated version of the shearwarp based volume rendering method <ref type="bibr" target="#b12">[13]</ref>. Our new algorithm visits each voxel only once taking advantage of the particular data organization of octrees. In addition, the hierarchies of the data guide the local (re)construction of the quadratic super-spline models, which we apply as a pure visualization tool. The low total degree of the polynomial pieces allows to numerically approximate the volume rendering integral efficiently. Since the coefficients of the splines are almost immediately available from the given data, Bernstein-Bézier techniques can be fully employed in our algorithms. In this way, we demonstrate that these models can be successfully applied to full volume rendering of hierarchically organized data. Our computational results show that (even when hierarchical approximations are used) the new approach leads to almost artifact-free visualizations of high quality for complicated and noise-contaminated volume data sets, while the computational effort is considerable low, i.e. our current implementation yields 1-2 frames per second for parallel perspective rendering a 256 <ref type="bibr" target="#b2">3</ref> volume data set (using simple opacity transfer functions) in a 512 2 view-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Interactive volume rendering is devoted to techniques for the visualization of volumetric data sets obtained from computer tomography (CT), magnetic resonance imaging (MRI) or 3D ultrasound. The increasing interest in these techniques in the last decade (see <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b34">35]</ref>, and the references therein) mainly comes from the fact that this is a key technology for many fields of application. To name two of them, we mention the particular, but wide, areas of medical applications and industrial quality control, where one is interested in efficient methods for high-quality visualization. Hence, one of the main goals in these areas is to develop applicable approaches, which lead to as few artifacts as possible, since these may be misinterpreted as lesions in medical diagnosis or defects in quality control, for instance. On the other hand, the huge volumetric data sets are often measured and quantified with low-bit resolution or even corrupted by noise, and therefore high-quality visualization often becomes an extremely difficult task. Overcoming artifacts in visualization has often been associated with a correct sampling <ref type="bibr" target="#b9">[10]</ref>, only. However, the vast literature on the topic shows that the sources of certain undesired results (visible on modern, graphical display units) can be widespread, and may sometimes have its origin not only in the choice of the computational visualization method and the type of data representation, but also on the non-discrete representation of the data by a model, e.g. the opacity function.</p><p>Recalling the developments and previous work in the area it can be seen that, due to the importance of the topic, there are many different algorithms, which have been realized so far. Some ma-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Visualization 2005</head><p>October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 ©2005 IEEE.</p><p>jor directions in interactive volume rendering are the classical image based approaches like ray-casting <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b33">34]</ref>, object based methods like splatting <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b35">36,</ref><ref type="bibr" target="#b36">37]</ref>, and intermediate algorithms based on the shear-warp transform <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b28">29]</ref>. The latter have shown to be very efficient due to their ability to optimally use the cache architecture found in modern computers. Artifacts arising in the original implementation of <ref type="bibr" target="#b12">[13]</ref> led to modifications and essential further developments of the shear-warp approach. In <ref type="bibr" target="#b29">[30]</ref> a sophisticated improvement using intermediate slices was introduced to reduce the overall sampling distance, which is often considered as a major source for artifacts visible on the screen. A similar approach using Hermite curves was given in <ref type="bibr" target="#b26">[27]</ref>. More recently, <ref type="bibr" target="#b27">[28]</ref> included pre-integrated volume rendering in the shear-warp algorithm for parallel projection to further reduce potential problems connected with the classification step in the rendering. The approach presented below is orthogonal to pre-integrated volume rendering since <ref type="bibr" target="#b27">[28]</ref> uses a linear univariate model of the opacity and color function defined within a cubic cell whereas we consider trivariate piecewise quadratic polynomials on tetrahedral partitions. Therefore, we can easily extend this method using pre-integrated rendering as well. In addition, the three-fold overhead for coding the volume data has been solved by reducing the coding to two and one coded volume(s) <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b29">30]</ref>. Furthermore, one basically distinguishes between the above full volume rendering methods, where the integral equation of a physical emission-transport model has to be numerically solved along rays and the less expensive visualization of isosurfaces extracted from the volume (cf. <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b22">23]</ref>, and the references therein), where the first intersection point of an isosurface along rays has to be found. A common property of these approaches is that the non-discrete model used as a tool for the visualization are trilinear splines, i.e. splines with tensor-product structure, which are linear in each of the three space directions. Hence, for full volume rendering the integral equation has to be numerically approximated for the piecewise cubic models (total degree of the polynomial pieces is 3). Moreover, in the standard approach the models involve no smoothness conditions and therefore the evaluation of the necessary gradient field requires a separate model. This is one of the reasons why different models of the discrete data have been proposed <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b32">33]</ref> as tools for the visualization with improved visual quality. Here, the models are often local approximations with tensor-product splines of higher degrees (for instance triquadratic and tricubic splines) involving smoothness conditions. The simplicity of these (re)constructions allows to keep the computational costs relatively low, while simultaneously the visualization of the isosurfaces often lead to satisfying results. On the other hand, according to the relatively high total polynomial degree of these models (which is 6 and 9 for the triquadratic and tricubic models, respectively) the evaluation of its values and gradients may sometimes become inexact and the computational costs are higher as in the approaches based on trilinear splines. As a compromise between visual quality and computational efficiency issues, a different model for the local approximation with splines has been proposed, recently. The approach <ref type="bibr" target="#b23">[24]</ref> is based on trivariate splines involving smoothness conditions on a uniform tetrahedral partition of the volumetric domain, where the polynomial pieces are quadratic, i.e. the total degree is 2. It has been shown that the piecewise Bernstein-Bézier form of these splines allows to apply well-established tools from Computer Aided Geometric Design (CAGD) to compute its values and gradients, which leads to high-quality visualizations of iso-surfaces from gridded volume data. Note that recently the spline model proposed in <ref type="bibr" target="#b23">[24]</ref> has been used <ref type="bibr" target="#b25">[26]</ref> for the analysis and visualization of vector fields. For further information on the field of volume visualization, we refer the interested reader to recent books <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b4">5]</ref>, the surveys <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b34">35]</ref>, and the references therein.</p><p>It is the purpose of this paper to develop a new efficient approach for interactive volume visualization taking the various practical requirements of high-quality volume rendering into account. The proposed volume rendering method improves and further develops the original shear-warp techniques in that our algorithm visits each run-length encoded voxel only once, is able to deal with data hierarchies, and can handle a recent spline model, which differs from those known from the previously known full volume rendering approaches. For the representation and decimation of the volumetric gridded three-dimensional data subsequently organized in an octree structure, we apply wavelet type encoding techniques <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b30">31]</ref>. Since our focus is on high-quality visualization, we introduce the trivariate, quadratic super-splines model <ref type="bibr" target="#b23">[24]</ref> as a main tool for the full volume rendering of the hierarchically organized data. To do this, we give a new coding scheme of the data, which guides the local computation of the splines on the different hierarchy levels, and realize some substantial changes in our implementation of the original shear-warp rendering algorithm. Since the quadratic super-splines have a more complex structure than the usual trilinear models, we develop techniques for these new models to numerically approximate the solution of the volume rendering equation. In particular, this can be done efficiently by using Bernstein-Bézier techniques (BB-techniques) which we apply for computing the necessary values and the gradients of the polynomial pieces. Here, we make use of the fact that the polynomial degree is lowest possible and that the BB-coefficients representing the local splines are almost immediately available from the given data. To summarize, the proposed approach is to combine an efficient full volume rendering implementation with a new spline visualization tool by using a hierarchical data representation.</p><p>The subsequent paper is organized as follows. In the first section, we briefly describe the background on volume rendering and the basics of the original shear-warp implementation. In addition, we give an overview of our new algorithm. Sect. 3 is devoted to trivariate quadratic splines on a tetrahedral partition of a cube. Here, we briefly describe the repeated averaging algorithm to determine quasi-interpolating splines as well as its essential properties, and show the numerical approximation of the volume rendering integral. Sect. 4 is devoted to data reduction by using wavelet decompositions. Sect. 5 discusses details of our implementation of the shear-warp type renderer for the given spline representation based on the hierarchical organization of the data. Finally, we present our results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">VOLUME RENDERING</head><p>We describe the background on volume rendering, i.e. the computation of the rendering integral equation, and recapitulate the original shear-warp algorithm, which are the basis of our implementation. In addition, we give an overview of our new algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Volume Rendering Integral</head><p>Volume rendering methods are often derived from the transport theory of light <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b24">25]</ref>. Gray shaded images are discussed in the following for simplicity reasons since color images require this approach to be applied separately for each individual color component. Using an emission-absorption model <ref type="bibr" target="#b11">[12]</ref> the volume rendering equation n • (∇I) + κ I = q, with n parallel to r, n = 1 and I(0) = 0, has the following solution</p><formula xml:id="formula_0">I(ρ) = ρ 0 q(t) e −σ (0,t) dt,<label>(1)</label></formula><p>where I is the intensity at the position ρ along a ray r(ρ) = a ρ + b, ρ ∈ [0, B], in three-dimensional space (ρ = B is the location of the background), q is a scattering function that is identified with the Phong shading model, and σ is the optical depth defined as</p><formula xml:id="formula_1">σ (t 1 ,t 2 ) = t 2 t 1 κ(τ) dτ,<label>(2)</label></formula><p>where κ is the opacity function. In order to compute the integral equation, the interval [0, B] is subdivided into small not necessarily equidistant subintervals [t k ,t k+1 ], k = 0, . . . , N −1, where t 0 = 0 and t N = B, and hence</p><formula xml:id="formula_2">I(B) = N−1 ∑ k=0 t k+1 t k q(t) e −σ (t k ,t) dt k−1 ∏ j=0 e −σ (t j ,t j+1 ) = N−1 ∑ k=0 C k k−1 ∏ j=0 (1 − α j ),<label>(3)</label></formula><p>whereby the voxel color C k is</p><formula xml:id="formula_3">C k = t k+1 t k q(t) e −σ (t k ,t) dt,<label>(4)</label></formula><p>and the voxel opacity α k is</p><formula xml:id="formula_4">α k = 1 − e −σ (t k ,t k+1 ) .<label>(5)</label></formula><p>The sum in (3) can now be rewritten in a recursive waỹ</p><formula xml:id="formula_5">C k =C k−1 + (1 −α k−1 ) C k , α k =α k−1 + (1 −α k−1 ) α k , k = 1, . . . , N − 1,<label>(6)</label></formula><p>whereC k is the pixel color,α k is the pixel opacity,</p><formula xml:id="formula_6">andC 0 = C 0 ,α 0 = α 0 . Obviously,C N−1 = I(B).</formula><p>In order to compute a visualization of the whole voxel grid, the volume rendering equation is applied to each ray r cast into the volume.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Original Shear-Warp</head><p>The original shear-warp algorithm <ref type="bibr" target="#b12">[13]</ref> is still one of the fastest software based volume rendering implementations. We briefly recall the basic ideas, which we further develop in our new implementation. After classification, i.e., mapping the scalar values to the opacity and the RGB-colors, the shear-warp algorithm computes runlength-encodings of the voxel data based on the opacity values for all three major viewing directions. Each run-length-encoded 1 voxel consists of two entities: an opacity value and a shading index representing the local gradient. Next, just before rendering the viewing matrix V is factorized into a shear S and a warp matrix W , i.e. V = W • S. For simplicity, in the following, we describe the case of parallel projection as it has been proposed in the original method <ref type="bibr" target="#b12">[13]</ref>. The major viewing axis is determined from V and the run-length-encoding is computed. Then, the sheared volume slices are rendered in a front-to-back order into an intermediate image, aligned with the volume slice most parallel to the final image plane. The grid spacing in this intermediate image equals that of the volume being rendered. Rays r are cast from the pixels of the intermediate image plane into the sheared volume.</p><p>During rendering two adjacent voxel runs are traversed simultaneously. Space-leaping, i.e. skipping transparent (low opacity) voxels, is realized efficiently because of the run-length-encodings of the volume scanlines. Each time a non-transparent voxel is detected in one of the two voxel runs the corresponding pixel in the pixel scanline of the intermediate image is updated. If this pixel is already opaque, i.e. the value ofα k is above a user-defined threshold, then all the adjacent opaque pixels are skipped too; and the dynamic run-length-encoded data structure of the intermediate image is updated. Otherwise, if this pixel is not opaque the shading indices of the run-length-encoded voxels are used to compute the colors C k from the shading table. The colors C k as well as the opacities α k are bi-linearly interpolated and the resulting new color and opacity are then composited with the corresponding intermediate image pixel colorsC k and opacitiesα k . Finally, after rendering all slices, the warping step is applied to the intermediate image, i.e. a 2D affine transformation, which can be performed by 2D texture hardware on graphics cards.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Overview: New Rendering Approach</head><p>In the following, we give a brief overview of our approach for volume rendering. Given a scalar volume data set on a Cartesian grid, we begin by pre-classifying the data. As a first step of our algorithm, we compute wavelet decompositions of the given data, which are well-known in image processing, for instance. These decompositions are used to reduce the data according to a user defined threshold. The (decimated) data set is represented by an octree, where the leaves are subcubes of different resolution. The opacity of the classified and decimated data is represented by splines on tetrahedral partitions, and we compute the coefficients of these models by using a coarse-to-fine strategy. On each hierarchy level, we code the splines by choosing an appropriate determining subset of its coefficients. These parts of the algorithm are considered as preprocessing steps. The actual volume rendering is performed in principle in the same way as the approach described in the previous subsection. However, our implementation differs at three major points. First: during the rendering for each slice of the volume, we precompute the intersection points of the current ray with the tetrahedral partition. Second: our algorithm visits each voxel only once by computing its contribution to the intermediate image immediately, an approach characteristic for splatting and now usable for shear-warp. Third: the contribution of the volume rendering integral on subintervals are numerically approximated, where we apply BB-techniques to determine the necessary values and gradients of the splines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">APPROXIMATION AND VISUALIZATION BY QUADRATIC SUPER-SPLINES</head><p>We represent the opacity of the classified data by trivariate quadratic super-splines, i.e. piecewise polynomials of total degree defined w.r.t. a tetrahedral partition of the volume. In this section, we briefly recall the basic idea of the underlying quasi-interpolation scheme for approximating gridded volume data sets as well as its main properties. For the details of this new approach we refer the interested reader to <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b23">24]</ref>. Since our main goal here is to combine these sophisticated spline constructions with the shear-warp, we develop efficient methods to numerically approximate the volume rendering integral for these opacity functions. For simplicity, in this paper we describe the splines as well as the quasi-interpolation scheme in the most local way. This means that we mainly consider a standard volumetric cube, say Q = [− 1 2 , 1 2 ] 3 , with center point v Q = 0, rather than a partition of the whole volume with tetrahedrized cubes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Trivariate Quadratic Splines on the Cube Q and BB-form</head><p>For building up splines with smoothness properties of lowest possible polynomial degree, we need an appropriate partition of the standard cube Q, i.e. we subdivide Q into a set of tetrahedra denoted by ∆. This is realized by splitting Q into six pyramids (v Q is connected with the four vertices of every square face of Q), inserting both diagonals in the six faces of Q and connecting their intersection points with v Q . <ref type="figure" target="#fig_0">Fig. 2</ref> illustrates this subdivision of Q into 24 congruent tetrahedra T . This leads to a tetrahedral partition ∆, which is sometimes called a type-6 tetrahedral partition. We consider quadratic splines on ∆, i.e. on each tetrahedron T ∈ ∆, we let p ∈ P 2 = span {x i y j z k : i, j, k ≥ 0, i + j + k ≤ 2} be a trivariate polynomial of total degree two. Furthermore, we assume that for each pair of different tetrahedra T,T in ∆, the corresponding polynomial pieces are consistent in the sense that their values coincide for every point from T ∩T . The resulting trivariate quadratic splines s have a unique representation in its Bernstein-Bézier form (cf. <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>), i.e. for every tetrahedron</p><formula xml:id="formula_7">T = [v 0 , v 1 , v 2 , v 3 ] of ∆, we have s| T = p = ∑ i+ j+k+ =2 b i jk B T i jk ,<label>(7)</label></formula><p>where the real-valued coefficients b i jk are called the Bernstein-Bézier coefficients (BB-coefficients) of s on T . Here, the ten basis polynomials</p><formula xml:id="formula_8">B T i jk = 2!/(i! j!k! !) λ i 0 λ j 1 λ k 2 λ 3 ∈ P 2 , i + j + k + = 2,</formula><p>are the quadratic Bernstein polynomials with respect to T , and λ ν ∈ P 1 = span {1, x, y, z}, ν = 0, . . . , 3, are the barycentric coordinates with respect to T uniquely determined by the interpolation conditions λ ν (v µ ) = δ ν,µ , µ = 0, . . . , 3 (δ ν,µ denotes Kronecker's symbol). <ref type="figure" target="#fig_1">Fig. 3 (left)</ref> shows the domain points</p><formula xml:id="formula_9">ξ T i jk = (iv 0 + jv 1 + kv 2 + v 3 )/2, i + j + k + = 2</formula><p>associated with the ten BB-coefficients of a quadratic polynomial p on a tetrahedron T as white dots. This figure further illustrates one of the basic ideas for introducing trivariate, piecewise quadratic polynomials in the area of volume visualization: along the line segment [u 0 , u 1 ] being the intersection of T with a ray r, we obtain a univariate, quadratic polynomial. Hence, p| [u 0 ,u 1 ] is uniquely determined by the values at three distinct intersecting points, for instance by the values w 0 = p(u 0 ), w 1 = p(u 1 ), and w = p((u 0 + u 1 )/2).  Since our new volume rendering approach is based on (hierarchically organized and decimated) gridded data (see Sect. 5), it suffices to give a local description on the setting of BB-coefficients. By this local description we obtain an appropriate approximating spline. To do this, we assume that the opacity value f (0,0,0) is given at the center point v Q of Q, and that we also have immediate access to the opacity values f (σ ,τ,ρ) , σ , τ, ρ ∈ {−1, 0, 1}, (σ , τ, ρ) = (0, 0, 0) at the center points of its phantom cubes, i.e. those 26 cubes from the standard volume grid, which have at least one point in common with Q (see <ref type="figure" target="#fig_1">Fig. 3 (right)</ref>).</p><p>In the following, we briefly describe the basic idea of constructing quasi-interpolating quadratic spline models <ref type="bibr" target="#b23">[24]</ref> as well as their basic properties which are essential for our new volume rendering approach. By using the above 27 data stencil, each of the 65 BBcoefficients b ξ of an approximating spline s associated with a domain point ξ = ξ T i jk ∈ Q is determined as a weighted sum of this local data</p><formula xml:id="formula_10">b ξ = 2 −α(ξ ) ∑ σ ,τ,ρ∈{−1,0,1} ω σ τρ (ξ ) f (σ ,τ,ρ) ,<label>(8)</label></formula><p>where α(ξ ) ∈ {2, . . . , 7} and ∑ σ ,τ,ρ ω σ τρ (ξ ) = 1. Here, the number and choice of non-zero (integer) weights ω σ τρ (ξ ) depend on the type of BB-coefficient b ξ . For the BB-coefficients of s associated with domain points of the type illustrated as blue, red, green, yellow, white, black, and magenta dots in <ref type="figure" target="#fig_3">Fig. 4</ref> these numbers are 4, 8, 6, 10, 8, 18, and 27, respectively, and the corresponding weights coincide (up to symmetric permutations) for the domain points of the same color. The discussion in <ref type="bibr" target="#b23">[24]</ref> shows that the weights are basically determined as a result of a repeated averaging of the local data, where the corresponding averaging rules result from applying Farin's smoothness conditions <ref type="bibr" target="#b7">[8]</ref> for neighboring polynomial pieces, i.e. polynomials on different tetrahedra with a common triangular face, as well as some "appropriate" averages of these averaging rules (see below and the caption of <ref type="figure" target="#fig_3">Fig. 4</ref>, which shows the three different layers of BB-coefficients within one pyramid). In this way, the BB-coefficients of s| Q can be computed efficiently by performing a small, fixed number of multiplications. In the current implementation of the hierarchically organized data (see Sect. 4 and 5), we locally store the 21 BB-coefficients associated with the domain points illustrated as blue, red, and magenta dots in <ref type="figure" target="#fig_3">Fig. 4</ref>. In this way, for computing all the 65 BB-coefficients in (8) basically 50 binary shifts have to be performed on the fly, which means that, given the local 27 data stencil, we have almost immediate access to the BB-coefficients needed to represent the local spline s| Q . In the above particular context, "appropriate" means that polynomials from the subspace P = span {1, x, y, z, xy, xz, yz} ⊆ P 2 are reproduced by the resulting (global) quasi-interpolation operator Q, i.e. Q(p) =p,p ∈ P, and that the remaining quadratic polynomials are reproduced up to a known constant c, i.e. Q(x 2 ) = x 2 + c, for instance. By using the uniform boundness of Q, it has been shown in <ref type="bibr" target="#b21">[22]</ref> that the resulting quasi-interpolating splines yield nearly optimal order under some standard assumptions on the given data. Simultaneously the (piecewise) partial derivatives of the splines ∂ s/∂ x, ∂ s/∂ y, and ∂ s/∂ z yield optimal order of the derivatives. This is one of the reasons for proposing this approach in the context of high-quality visualization: instead of (re)computing a different model for the gradient as it has been frequently done in the area (for instance in methods based on trilinear splines <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b36">37]</ref>), our spline method allows the direct usage of its gradients ∇s T = (∂ s/∂ x, ∂ s/∂ y, ∂ s/∂ z) (Here, and in the following (.) T denotes the transpose of a vector). In our current implementation, we use this, i.e. the gradients for Phong shading are obtained directly from the derivatives of the opacity function s.</p><p>Another important property from a visualization point of view is the fact that any directional first derivative ∂ s/∂ r of the spline s is consistent in the sense that for each phantom cubeQ the values of ∂ s/∂ r coincide for every point from Q ∩Q (see <ref type="bibr" target="#b21">[22]</ref>) -and in this sense we have super-splines, here. In addition, the partial derivatives of the splines at the vertices of Q are automatically determined in such a way that no intermediate samples are getting lost as it is the case with certain standard finite difference schemes. Moreover, obviously only data values are required but no derivatives at any point in the three-dimensional space have to prescribed or estimated. These properties further motivate the usage of these models in high-quality volume rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Numerical Approximation of the Volume Rendering Integral for Quadratic Super-Spline Opacities</head><p>As described in Sect. 2.1, the volume rendering integral based on the quadratic super-spline opacity s has to be computed along each ray r cast into the volume, i.e. we consider κ = s| r . Around each voxel in the decimated (see Sect. 4 and 5) volume, we consider a translationQ of Q having its center point at the position of the current voxel, where the length of the edges ofQ can be different. This cube is further subdivided into tetrahedra (see Sect. 3.1), and hence as a first step, as described in Sect. 3.2, we compute the 65 BB-coefficients of s|Q from the 21 determining BB-coefficients associated with domain points inQ. In the next step, we compute the entrance and exit points along r with every tetrahedron inQ. This determines a sequence of ray-segments and a corresponding subsequence of subintervals (as in Sect. 2) of the form [t k ,t k+1 ], where k = k 0 , . . . , kQ, for which we have to determine the voxel color C k and the voxel opacity α k . Note that r(t k 0 ) and r(t kQ ) are the entrance and exit point ofQ, respectively. For each of the subintervals [t k ,t k+1 ], where k = k 0 , . . . , kQ, the reconstructed opacity function s| r can be written as a univariate quadratic polynomial</p><formula xml:id="formula_11">s| r (t) = p k (t) = α t 2 + β t + γ, t ∈ [t k ,t k+1 ],</formula><p>where the coefficients α, β , and γ are easily found by using interpolation at three points (see <ref type="figure" target="#fig_1">Fig. 3 (left)</ref>) and Newton's form (for details, see <ref type="bibr" target="#b23">[24]</ref>). According to (5) the voxel opacity α k is given as</p><formula xml:id="formula_12">α k = e P k (t k )−P k (t k+1 ) ,</formula><p>where P k is a cubic polynomial with P k = p k , and therefore we can compute α k explicitly. On the other hand, by using the Phong shad-ing model <ref type="bibr" target="#b8">[9]</ref> the voxel color C k from (4) becomes</p><formula xml:id="formula_13">C k = t k+1 t k (k a + k d c T L ∇s(t) + k s (c T V c R ) n δ ) e P k (t k )−P k (t) dt,</formula><p>where ∇s(t) := ∇s(r(t)), c L is the direction of the light source, c R is the direction of reflection of a perfect mirror, i.e. c R = 2 (c T L ∇s(t)) ∇s(t) − c L , and c V is the direction of the viewpoint. Further, k a , k d , and k s are the ambient, diffuse, and specular reflection coefficients and n δ is the specular reflection exponent. Each component of ∇s is a linear polynomial on [t k ,t k+1 ], and hence, the scalar products in our spline model lead to the following function assuming c standing for either c L or c V :</p><formula xml:id="formula_14">c T ∇s(t) = t−t k+1 t k −t k+1 c T ∇s(t k ) + t−t k t k+1 −t k c T ∇s(t k+1 ), t ∈ [t k ,t k+1 ].</formula><p>Although with this approach the function to be integrated is much simpler than in the previously existing methods based on tensorproduct splines (also note that the degree of P k is three), we still have to perform numerical approximations here: in general there exists no closed formula for the resulting integral because its integrand is the product of a polynomial with e −P k , the exponential of a polynomial of degree three. In our current implementation, we use the Simpson integration rule to compute the approximative integrals associated with the voxel color. Note that this quadrature method is also based on interpolation by quadratic splines along the ray r.</p><p>As it can be seen from the above the numerical approximation, the volume rendering integral requires efficient methods for the evaluation of the values s(v) and the gradients ∇s(v) at prescribed positions v in the three-dimensional space. To do this, we take advantage of the fact that the polynomial pieces of s are of total degree two (see <ref type="figure" target="#fig_1">Fig. 3 (left)</ref>), where we apply BB-techniques, in particular a trivariate version of de Casteljau's algorithm and some simple formulae on the connection of the directional derivatives of the polynomial pieces with certain weighted differences of its BBcoefficients. For the details, we refer the interested reader to <ref type="bibr" target="#b23">[24]</ref>.</p><p>Finally note that for clarity, we explained the basic principle of our approximative volume rendering for a single level, here. However, the actual integration is a bit more complex, since the voxel opacity and voxel color have to be computed taking different hierarchy-levels into account (see Sect. 5). We give here a first comparison for the well-known Marschner-Lobb function <ref type="bibr" target="#b14">[15]</ref> with a standard (trilinear) model in <ref type="figure" target="#fig_4">Fig. 5</ref>. Similarily as in <ref type="bibr" target="#b23">[24]</ref>, we observe that the smoothness conditions involved for reconstructing the splines lead to much more natural visualizations in the volume rendering context, where, for instance, the typical stripe artifacts are essentially reduced. Comparison of volume rendering with trilinear and quadratic super-spline model of the Marschner-Lobb function <ref type="bibr" target="#b14">[15]</ref> (128 × 128 × 128 voxels), respectively. Left: Standard model (trilinear interpolation). Right: Approximation by quadratic super-splines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">WAVELET DECOMPOSITION AND DATA REDUCTION</head><p>Our method operates on scalar data on a Cartesian grid of dyadic size. For coding purposes, we perform the following operations in a preprocessing context. The classified volume is transformed into the wavelet space, whereby we implement the Haar and a linear wavelet type according to <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b30">31]</ref> although for discussing the results we restrict ourselves to Haar wavelets since they have shown better data compression rates for the type of data given. Each node of an octree-data structure stores an average value of the considered subcube we denote as average data. High frequency components (detail data) are computed at each level in order to be able to prune octree nodes. These are classified as transparent, homogeneous or heterogeneous depending on the average and detail data of the decomposed volume. If both all detail data of an octree node are below a user-defined threshold and all child nodes of the current octree node are homogeneous then the current node of the octree becomes homogeneous as well. In the same way we identify transparent nodes. All those nodes of the octree are pruned that have a parent node which is either transparent or homogeneous. For each leaf of the octree (which can be on any level m) the 21 determining BBcoefficients (see Sect. 3.2) are computed from a 2 m subsampling of the original grid.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">HIERARCHICAL VOLUME RENDERING WITH QUADRATIC SUPER-SPLINES</head><p>In the following, we describe implementation aspects of our hierarchical volume rendering approach. At first, we discuss aspects, which are different from the standard approach to generate the images. Next, we focus on details on precomputing the run-length encoding for the spline representation of the hierarchical data in use and on how a qube template is defined that both serves for speeding up intersection computations and allows for minimizing memory accesses by visiting each voxel only once.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Implementation Details of the Algorithm</head><p>In order to be able to include the spline model (see 3) and the numerical integration along a ray (1) a new data structure used during run-length encoding of the shear-warp type renderer of Sect. 2.2 is required: Quadratic super-splines represent the opacity function within a cubeQ (see Sect. 2). More specifically, they represent the opacity function for each partition ofQ, which may be a 24-tetrahedral partition ∆ forQ at the finest level as described in Sect. 3.2 or variations thereof (for details, see <ref type="figure" target="#fig_5">Fig. 6</ref>). Computing the contribution of the voxel to the final image requires determining the intersection of all rays with these partitions. These intersection points (entrance and exit points of each partition belonging to a voxel) are stored in a precomputed template called qube template in order to speed up computing. It should be emphasized here, that by considering several rays passing through the cubeQ allows to reduce memory accesses by up to a factor of 8. Visiting each voxel only once has been the characteristic of splatting so far but can now be used for shear-warp by this technique as well. Processing a slice, space-leaping is performed in the same way as in the original algorithm mentioned in Sect. 2.2. In order to minimize accesses to the main memory, we improved and further modified the processing scheme of the shear-warp algorithm. Instead of operating on two voxel scanlines and one pixel scanline, we consider one voxel and therefore two pixel scanlines. By this rearrangement, only one access to voxel data is necessary per frame. Hereby, we directly compute all contributions of a cubeQ (belonging to a voxel) to the intermediate image (which are 4 pixels that are lying in both considered pixel scanlines) and thus achieve a significant speedup (independent from the choice of the non-discrete model representing the data). As a consequence, for early-raytermination two pixel scanlines are considered in parallel. Whenever a non-transparent voxel and a non-opaque pixel (in at least one of both scanlines) is found, compositing is carried out for each ray segment intersecting the partitions of the voxel. For computing the contribution for each ray segment we first expand the 21 BBcoefficients of the splines stored in the memory to the required 65 BB-coefficients needed for computing opacity and gradients values derived from the quadratic super-spline. These values serve for computing the numerical approximation of the volume rendering integral (see Sect. 2.1). The numerical approximation allows to control the visual quality respectively the numerical error for the rendering integral of (1), a technique still not found in typical implementations of volume rendering. Further, each leaf can be transparent, homogeneous or heterogeneous and stores an address to its quadratic super-spline coefficients. Top right: One octree leaf of size 4 and its subdivision by the slicing planes. This leaf is representative for 4 3 voxel cubes. For each voxel cube (addressed by local position coordinates inside the leaf) there is a 6 bit flag, which stores the plane numbers going through this cube. Bottom: Scanline created from octree, where the blue and green areas are transparent and non-transparent runs. For each non transparent run each voxel stores the address of the spline coefficients (4 bytes), the octree leaf size and the local coordinates of the voxel cube respective the leaf (3 bytes) and a flag indicating the planes to consider at current voxel cube (1 byte). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Pre-Computing Run-Length Encoded Data from Spatial Hierarchy</head><p>Having created the octree data structure (see previous subsection), the run-length encoding for two main viewing directions is precomputed. The third run-length encoding can be avoided using pointers to each scanline of the two other run-length encodings and changing the processing order of the scanlines during rendering (see <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b29">30]</ref>) <ref type="bibr" target="#b1">2</ref> . To create a run-length encoded scanline <ref type="bibr" target="#b12">[13]</ref>, we start at the root node of the octree and visit only those leafs that are intersected by the current scanline. Whenever a transparent leaf is found the length of the voxel run within this leaf is written into the runlength structure. In the case of a homogeneous leaf for each voxel along the scanline within the current homogeneous leaf we store a pointer to the super-spline coefficients of the respective homogeneous leaf of the octree. Further, we store the size of the leaf and the local position of each voxel in the current octree leaf. Finally, we compute partitions for the cubeQ associated with the voxel. If the leaf belongs to the finest level of the octree we select the 24tetrahedral partition as described before. Otherwise, in each voxel a flag indicates which of the six slicing planes defining the tetrahedral partition of the homogeneous octree leaf subdividesQ and the respective partitions are stored (see <ref type="figure" target="#fig_5">Fig. 6</ref> for a 2D-explanation).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Qube-template</head><p>Before determining the contribution of a slice to the intermediate image, all ray intersections with every partition (associated with a voxel on the slice) are computed (see <ref type="figure" target="#fig_6">Fig. 7</ref>). The intersection points of rays with the partitions define ray segments that are the subdivisions of the volume rendering integral mentioned in (3). All intersection points are stored in the so-called qube template. Since we consider parallel projection and since the shear-warp implementation assumes rays starting from a grid having the same grid constant as the volume, the qube template is identical for each voxel in the same slice and therefore has to be computed only once per slice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>We implemented the algorithms in C++ using a 3. Our new interactive volume rendering approach aims at achieving high-quality results efficiently. Therefore, it is compared with a recent, fast shear-warp type implementation that was developed in order to reduce artifacts as well <ref type="bibr" target="#b29">[30]</ref>. We omitted a comparison with ray-casting and splatting as alternatives since their implementation is substantially different to shear-warp and would therefore raise questions of fair comparison which is not the focus of this paper. Nevertheless, for these volume rendering methods quadratic supersplines may show advantageous properties as well. Motivated by the opacity functions in use, we refer to our implementation of the algorithm in <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b29">30]</ref> as TL (trilinear) and denote our approach by QSS ( quadratic super-splines). Two different classifications are selected as prototypes for translucent (linear opacity transfer function) and surface-enhanced images (where the threshold function provides results similar to iso-surface rendering and therefore being a prototype for comparison with <ref type="bibr" target="#b23">[24]</ref>).  We measured the error between original data and the spline approximation by the peak-signal-to-noise ratio as shown in <ref type="figure">Fig. 10</ref> (PSNR rms = 20log 10 (255/RMSE), where RMSE is the root-meansquare error as defined in <ref type="bibr" target="#b9">[10]</ref>). It shows that the overhead of spline coding can be well compensated by the hierarchical representation without affecting the resulting image quality significantly. Due to the current construction this approach is, however, not as efficient as the method in <ref type="bibr" target="#b1">[2]</ref>.</p><p>In our experiments, TL requires 1.2, 1.2, and 3.6 seconds for encoding the engine, teapot, and head data set, respectively, while QSS needs 2.7, 2.6 and 8.7 seconds for the same data sets. Hence, we observe that QSS only requires about twice the time, although the precomputed spline-coding of QSS increases by a factor of about 10.5. Visual comparisons showing the reduction of artifacts and the improved visual quality of QSS are given in <ref type="figure" target="#fig_7">Fig. 8 and 1</ref>, where we use the full (preclassified) engine and teapot 4 data set, respectively. However, using the wavelet decompositions followed by data reduction of the size can be cut by up to a factor of 5 relative to the preclassified volume without significant losses in image quality (see <ref type="figure" target="#fig_8">Fig. 9</ref>). The preprocessing for encoding the data hierarchy requires 22.3, 20.5, and 27.1 seconds for the engine, teapot, and head data set, respectively.</p><p>For comparing the rendering time measured in milliseconds and to obtain a robust statistics, all data sets are rendered from 100 random viewing directions. Although the frame-rate of TL outperforms QSS by a factor of 24 in case of the linear classification function (engine: 132±3 (TL), 2396±315 (QSS); teapot: 152±5 (TL), 5699±957 (QSS); head: 378±13 (TL), 5887±804 (QSS)) and a factor of 5 in the case of the threshold function (engine: 92±2 (TL), 469±87 (QSS); teapot: 94±2 (TL), 419±42 (QSS); head: 130±4 (TL), 693±101 (QSS)) one should mention that the QSS <ref type="figure">Figure 10</ref>: Left: Peak-signal-to-noise ratio (PSNR) as a function of the compression factor between original data set and the hierarchically spline coded data. Middle and right: Volume rendering by using QSS of the engine and the teapot based on a compressed data set using about 32% and 46%, respectively, of the pre-classified data.</p><p>implementation (a) still yields interactive rates at up to 2 frames/s, (b) suppresses noise in the image more efficient, (c) leads to almost artifact-free and natural visualizations, and (d) outperforms the frame rate of the simple iso-surface renderer <ref type="bibr" target="#b23">[24]</ref> by nearly one order of magnitude. With increasing performance of computers in the near future, we can therefore expect this renderer type being a good candidate for displaying delicate data sets in medicine and quality control, where artifact-free results are at premium, although even for current systems the performance and the memory demands are already acceptable for given data sets which are not too large. More sophisticated types of data hierarchies are currently under investigation, in particular usage of averaged samples obtained from the quadratic super-splines on finer hierarchy levels might yield essential improvements.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Subdivision of the cube Q into 24 congruent tetrahedra.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Left: The BB-coefficients of a quadratic polynomial on a tetrahedron T are associated with the ten domain points in T (white dots). The restriction of a trivariate, quadratic polynomial piece (red curve) to a line segment [u 0 , u 1 ] is uniquely determined by the values (red boxes) at three distinct points (black boxes). Right: The cube Q (grey) together with the local data stencil of 27 data points (black boxes). Each data point different from the center point v Q of Q represents one of the 26 phantom cubes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>3. 2</head><label>2</label><figDesc>Repeated Averaging Algorithm and Properties of the Resulting Quasi-Interpolating Splines on ∆</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>According to the approach in<ref type="bibr" target="#b23">[24]</ref> the BB-coefficients of s| Q are determined in the following way: First, the BB-coefficients associated with the blue dots (domain points) are determined as the average of four adjacent data values. Then smoothness conditions of the form a = 1/2 (b + c) and a = (b + c) − 1/2 (d + e) are applied to determine the BB-coefficients associated with the red, green, yellow, and white dots (in this order). Finally, two smoothness formulae of the form a = 1/2 (b+c) are averaged to determine the BB-coefficients associated with the black dots, and twelve conditions of the form a = (b + c) − 1/2 (d + e) are averaged to determine the BB-coefficients associated with v Q (magenta dot).Figure courtesy<ref type="bibr" target="#b23">[24]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Comparison of volume rendering with trilinear and quadratic super-spline model of the Marschner-Lobb function [15] (128 × 128 × 128 voxels), respectively. Left: Standard model (trilinear interpolation). Right: Approximation by quadratic super-splines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Top left: One slice where the different leafs are subdivided by six slicing planes defining the tetrahedral partition of that leafs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>2D-explanation: Qube template representing all intersections of a ray, the unit cube and its triangular partition.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Volume rendering results for the original engine data set original shear-warp (left), applying TL (middle), and QSS (right), with no decimation. Top: overview, bottom: close-up views. Both, the original shear-warp and TL show typical stripe artifacts on the planar side of the machine part which disappear almost for the QSS model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Volume rendering of the head by using QSS for different tolerated errors. From the left to the right the accepted error of the data is 0, 6.5, and 13.6, where the number of non-transparent voxels is about 1.1 • 10 6 , 0.4 • 10 6 and 0.2 • 10 6 .</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">i.e. a data reduction which encodes runs of voxels with opacities smaller than a user-defined threshold by the length of the run.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">A reduction to one run-length encoding is possible as well<ref type="bibr" target="#b26">[27]</ref> to further reduce the amount of data.3 Volume Graphics GmbH</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">InFig. 1we use a data decimation based on 78% of the preclassified data.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">ACKNOWLEDGEMENTS</head><p>This research was supported by BMBF grant number 01 IR C01F and a local grant from the University of Mannheim.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">3d rgb image compression for interactive applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Ihm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Park</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="10" to="38" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visualization-specific compression of large volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Ihm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PG &apos;01: Proceedings of the 9th Pacific Conference on Computer Graphics and Applications</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page">212</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<title level="m">Data Visualization Techniques</title>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Triquadratic reconstruction for interactive modelling of potential fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Barthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mora</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dodgson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Sabin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Shape Modeling International</title>
		<meeting>Shape Modeling International</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="145" to="153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Nonlinear wavelet transforms for image coding via lifting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Claypoole</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Baraniuk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Transactions on Image Processing</title>
		<meeting>IEEE Transactions on Image essing</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="1449" to="1459" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">B-form basics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>De Boor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Geometric Modelling</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="131" to="148" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Triangular Bernstein-Bézier patches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Farin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CAGD</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="83" to="127" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
		<title level="m">Computer Graphics: Principles And Practice</title>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
	<note>2nd Edition In C</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Woods</surname></persName>
		</author>
		<title level="m">Digital Image Processing</title>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The rendering equation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Kajiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Computer Graphics and Interactive Techniques</title>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="143" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The application of transport theory to visualization of 3d scalar data fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Krueger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="273" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Fast Volume Rendering Using a Shear-Warp factorization of the Viewing Transform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lacroute</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="451" to="458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An evaluation of reconstruction filters for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marschner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Lobb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="100" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Area and volume coherence for efficient visualization of 3d scalar functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symposium on Volume Visualization</title>
		<meeting>IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="27" to="33" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A practical comparison of popular volume rendering algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meissner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symposium on Volume Visualization</title>
		<meeting>IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="81" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Reconstruction filters in computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">N</forename><surname>Netravali</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page" from="221" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Design of accurate and smooth filters for function and derivative reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Kurzion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symposium on Volume Visualization</title>
		<meeting>IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="143" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Accelerating volume rendering with quantized voxels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mora</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-P</forename><surname>Jessel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Caubet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symposium on Volume Visualization</title>
		<meeting>IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Volume modelling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<editor>M. Chen, A.E. Kaufman, and R.Yagel</editor>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer</publisher>
			<biblScope unit="volume">Graphics</biblScope>
			<biblScope unit="page" from="29" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Quasiinterpolation by quadratic piecewise polynomials in three variables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rössl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">P</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="221" to="249" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Interactive ray tracing for isosurface rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-P</forename><surname>Sloan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="233" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Reconstruction of volume data with quadratic super splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rössl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="397" to="409" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A rendering algorithm for visualizing 3D scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sabella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Computer Graphics and Interactive Techniques</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="51" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Galilean invariant extraction and iconic representation of vortex core lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sahner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. EUROGRAPH-ICS -IEEE VGTC Symposium on Visualization</title>
		<meeting>EUROGRAPH-ICS -IEEE VGTC Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Volume rendering on one rle compressed data set by a new combination of ray-casting and shear-warp</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schlosser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hesser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH, DVD-ROM</title>
		<meeting>SIGGRAPH, DVD-ROM</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Integrating preintegration into the shear-warp algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Schulze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Lang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographics/IEEE TVCG Workshop on Volume Graphics</title>
		<meeting>Eurographics/IEEE TVCG Workshop on Volume Graphics</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The perspective shear-warp algorithm in a virtual environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Schulze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Niemeier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Lang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="207" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Shear-warp deluxe: The shear-warp algorithm revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sweeney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the symposium on Data Visualisation</title>
		<meeting>of the symposium on Data Visualisation</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="95" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Building your own wavelets at home</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wavelets in Computer Graphics</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="15" to="87" />
		</imprint>
	</monogr>
	<note>ACM SIGGRAPH Course notes</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Reconstruction issues in volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Theußl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hladuvka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gröller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization, Data Visualization: State of the Art</title>
		<meeting>IEEE Visualization, Data Visualization: State of the Art</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">High-quality isosurface rendering with exact gradients</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Thévenaz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Unser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="854" to="857" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">V-buffer: Visible volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Keeler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="59" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">State of the art in interactive ray tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Wald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Slusallek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STAR, EUROGRAPHICS 2001</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="21" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Footprint evaluation for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Computer Graphics and Interactive Techniques</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="367" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A coherent projection approach for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Computer Graphics and Interactive Techniques</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="275" to="284" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
