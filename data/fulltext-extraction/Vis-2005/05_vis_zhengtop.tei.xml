<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Topological Structures of 3D Tensor Fields</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
							<email>zhengxq@cse.ucsc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beresford</forename><surname>Parlett</surname></persName>
							<email>parlett@math.berkeley.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
							<email>pang@cse.ucsc.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">UCSC</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Mathematics and Graduate School</orgName>
								<address>
									<country>UCB</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">UCSC</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Topological Structures of 3D Tensor Fields</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.6 [Computer Graphics]: Methodology and Techniques-Interaction Techniques; separating surface</term>
					<term>trisectors</term>
					<term>wedges</term>
					<term>symmetric tensors</term>
					<term>hyperstreamlines</term>
					<term>degenerate tensors</term>
					<term>tensor topology</term>
					<term>topological lines</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Tensor topology is useful in providing a simplified and yet detailed representation of a tensor field. Recently the field of 3D tensor topology is advanced by the discovery that degenerate tensors usually form lines in their most basic configurations. These lines form the backbone for further topological analysis. A number of ways for extracting and tracing the degenerate tensor lines have also been proposed. In this paper, we complete the previous work by studying the behavior and extracting the separating surfaces emanating from these degenerate lines. First, we show that analysis of eigenvectors around a 3D degenerate tensor can be reduced to 2D. That is, in most instances, the 3D separating surfaces are just the trajectory of the individual 2D separatrices which includes trisectors and wedges. But the proof is by no means trivial since it is closely related to perturbation theory around a pair of singular state. Such analysis naturally breaks down at the tangential points where the degenerate lines pass through the plane spanned by the eigenvectors associated with the repeated eigenvalues. Second, we show that the separatrices along a degenerate line may switch types (e.g. trisectors to wedges) exactly at the points where the eigenplane is tangential to the degenerate curve. This property leads to interesting and yet complicated configuration of surfaces around such transition points. Finally, we apply the technique to several common data sets to verify its correctness.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The goal of topological analysis is to provide a simple yet powerful representation of the complex phenomena described by the data. The topological structures make it simple for users to understand the underlying data fields yet are sensitive enough to capture important features. Early work on using topology based method to visualize vector and tensor fields are proposed by Hesselink et al. <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>. It defines the tensor topology based on degenerate features, discusses its nature in 2D cases in great detail. Recently, we discovered that degenerate tensors form curves in its most basic configuration, and proposed a stable algorithm to extract such features <ref type="bibr" target="#b11">[12]</ref>. We also proposed a formula to obtain the analytical tangent of the degenerate feature lines at each point <ref type="bibr" target="#b12">[13]</ref>. This method gives us the power to obtain the topologically correct solution of the feature line and high resolution feature lines with little extra computational cost.</p><p>This paper is the second installment of <ref type="bibr" target="#b11">[12]</ref> and completes the analysis of stable degenerate features in second order 3D symmetric tensor fields. Given the extracted degenerate feature lines and the knowledge that they serve as the critical features in 3D tensor topology, we study the topological structure of 3D tensor field. The first step in topological analysis of a certain type of data is to study their behavior near a critical feature. In this paper, we first show that the eigenvectors around a degenerate tensor can be approximated as those of the projected tensor on the repeated plane. A repeated plane of a degenerate tensor is the plane spanned by the eigenvector with the same eigenvalues. Note that the repeated plane is not necessarily perpendicular to the degenerate curve. But, all vectors on this plane are valid eigenvectors. This fact simplifies the analysis of 3D tensor field around a degenerate curve into a series of individual analysis of 2D tensor field around a 2D degenerate point. Such analysis naturally breaks down when the degenerate curves are tangential to the repeated plane. But as we will show later, a very interesting property of points on the degenerate curves where the curve is tangential to the repeated plane is that they are exactly where the degenerate points switch types. Such type transitions are closely related to the study of time-varying 2D degenerate tensor fields <ref type="bibr" target="#b8">[9]</ref>, and leads to complicated yet interesting configurations of separating surfaces near such transition points.</p><p>This paper is intended to lay down a theoretical foundation for tensor field analysis. We also test our findings using several synthetic but commonly used benchmark data sets to verify their correctness. However, since the field of 3D tensor topology is still in a very fundamental stage of research, it is too early to evaluate its effectiveness on real data sets. We can predict that blindly applying the technique proposed from this paper on noisy real datasets such as DT-MRI data sets will result in hefty visual clutter of degenerate features and even more complicated separating surfaces. However, such difficulties are not insurmountable. It is not a fundamental flaw of the topological approach, but rather a lack of current understanding on what is really important. We believe that once we obtain sufficient knowledge and understanding of 3D tensor topology, the representation and visualization can be greatly simplified to highlight only the most important properties. Only then can the goal of topological analysis to present a simple yet powerful representation of the complex phenomenon can be fully realized.</p><p>Digital images and animations can be accessed online at: www.cse.ucsc.edu/research/avis/tensorsep.html.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">TENSOR ANALYSIS</head><p>Tensor fields, especially second order tensor fields, are useful in many medical, mechanical and physical applications such as: fluid dynamics, meteorology, molecular dynamics, biology, astrophysics, mechanics, material science and earth science. Effective tensor visualization methods can enhance research in a wide variety of fields. However, developing an effective algorithm can be difficult because of the large amount of information contained in 3D tensor fields: there are nine independent components in each tensor and six for a symmetric tensor. Users in many research fields are especially interested in real symmetric tensors. In some applications, the data themselves are inherently symmetric. In other cases, sym-</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Visualization 2005</head><p>October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 Â©2005 IEEE. metric tensor data can be obtained through various decomposition techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Tensor Transformation</head><p>In this paper, we mainly focus on second order symmetric tensors. However, the transformation rule of tensors can be easily applied to tensors of arbitrary orders. For example, consider a tensor T in the coordinate system C1 and another coordinate system C2. We know that the orthogonal transformation between C1 and C2 is R, i.e., the relation between the coordinates of a point in these two system can be written as: X1 = RX2. Then we know that the same tensor T in C2 can be written as T * : T * = R T T R. In its index form using Einstein notation <ref type="bibr" target="#b0">[1]</ref>, this can be written as:</p><formula xml:id="formula_0">T * ij = T kl R ki R lj<label>(1)</label></formula><p>Note that in Einstein's summation convention, all the redundant indices on the right hand side will be summed up implicitly. In this paper, we are not only interested in the transformation of tensors themselves, but also their gradients, since they are important in analyzing the separating surfaces. Note that the gradient of a tensor field of rank N can be considered as another tensor field of rank N + 1. We denote the gradient of a second order tensor field T (x1, ..., xN ) as a third order tensor field âT (x1, ..., xN ),</p><formula xml:id="formula_1">âT ijk = âT jk âxi (2)</formula><p>The transformation rule of this tensor gradient can be also similarly written in its index form:</p><formula xml:id="formula_2">âT * ijk = âT lmn R li RmjR nk<label>(3)</label></formula><p>We use Equation 3 to compute the gradient of tensors in a rotated coordinate. For efficiency considerations, only components that will be actually used are computed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Tensor Projection</head><p>The projection of a 3D vector onto the X â Y plane results in a 2D vector with its third component removed. Similarly, the projection of a 3D tensor T onto the X â Y plane results in a 2D tensor with its third column and third row removed. However, if the projection plane is not perfectly aligned with the axis and its normal is N , then the projection still results in a 3D tensor T â :</p><formula xml:id="formula_3">T â = P T T P (4) P = N N T<label>(5)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">2D Tensor Topology</head><p>Analysis of 2D tensor topology was first proposed by Delmarcelle et al. <ref type="bibr" target="#b2">[3]</ref>. Tricoche et al. <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref> then extended this method into tracking and simplifying time-varying 2D tensor field topology. We briefly review the main results that are most relevant to our research. A study of tensor topology is a study of the topology of its eigenvectors. A hyperstreamline is similar to streamline in an eigenvector field. Like streamlines, hyperstreamlines do not usually cross with each other. The only places that they do cross are the degenerate tensors, where at least two of the eigenvalues are the same. First order analysis of the eigenvectors around a 2D degenerate tensor classifies their patterns into trisectors and wedge points. Wedge points can be further classified into double wedge points (with two separatrices) and single wedge points (with a single separatrix). <ref type="figure" target="#fig_0">Figure 1</ref> shows a simple illustration of these basic patterns.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Trisector Double wedge</head><p>Single wedge Note that the separatrices are the radial eigenvectors around a degenerate tensor. A radial eigenvector is traced from a small offset from the degenerate tensor and gives the direction of the eigenvectors in its vicinity. The radial eigenvectors can be computed from the first order gradient of the tensor field at the degenerate tensor by solving a cubic equation. If the cubic equation has only one real root, it must be a single wedge; otherwise if it has three real roots, a number Î´ is proposed by Delmarcelle et al. to distinguish between trisectors and double wedges <ref type="bibr" target="#b2">[3]</ref>. Note that a radial eigenvector only has an orientation but no direction, since flipping a radial eigenvector results in another valid one. However, for any particular set of eigenvectors, only one of the two directions is a valid separatrix. In case of major eigenvectors, the direction which the radial eigenvector is aligned with the major eigenvector is the separatrix. Flipping the radial eigenvector results in the separatrix for the corresponding minor eigenvectors. But it is perpendicular to the major eigenvector.</p><p>The radial eigenvectors divide the space around the degenerate point into hyperbolic and parabolic regions. It is worth noting that not all radial eigenvectors are separatrices. For example, in a degenerate point with a double wedge, there is a radial eigenvector between the two separatrices, which is not a separatrix because it resides between two parabolic regions. We refer to it as the hidden separatrix. Although it is of little importance in 2D tensor field analysis, we can show that it is important in understanding 3D tensor topology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Transitions Among 2D Degenerate Tensors</head><p>Since the degenerate features form curves instead of points in their most basic configurations, the analysis of 3D tensor topology is closely related to the study of time-varying 2D tensor topology. Here, we briefly introduce the continuous transition from one type of 2D degenerate point into another. It is important to note that although any wedge point has an index of +1/2 and a trisector point has an index of -1/2, the index can change discontinuously whereas the tensors are changing smoothly. This property makes the transition between different types of degenerate tensors possible.</p><p>First, there is a misconception that the transition between a trisector and a double wedge point comes about when the two of the separatrices of a trisector get wider and wider apart until one of them merges with the other separatrix (conversely, two of the separatrices get closer and closer together until they merge together) and therefore reduced into a double wedge point. However, in our experiments as shown in <ref type="figure" target="#fig_2">Figure 2</ref>, the persistent transition between a trisector and a double wedge point is that the flow pattern in the hyperbolic region becomes increasingly sharper. In the next instant, one of the separatrices suddenly flips to the other side and turns into the hidden separatrix, and the degenerate tensor becomes a double wedge point.</p><p>Second, there is also a misconception that the transition between a double wedge and a single wedge is that the two separatrices get closer and closer until they finally merge with each other so they become a single wedge. But the true transition is that the hidden separatrix in the double wedge gets closer and closer to one of the  real separatrices. When they touch, they annihilate each other and both disappear. The degenerate tensor therefore changes into a single wedge.</p><p>Third, a persistent transition between a trisector and a single wedge point can happen only through a temporary double wedge point. We claim that during the transition between a wedge and a trisector point, there must be three real solutions for the separatrices. Here, we skip the proof of this claim due to space limitations. Direct transition between a single wedge and a trisector is unstable. Any small amount of perturbation will introduce a temporary double wedge point. In reality, this temporary double wedge point may exist only for a very short period, so that it can be considered a "direct" transition.</p><p>It is worth noting that even though the data change smoothly, all the transitions of separatrices happen in a discontinuous manner. In all the transitions, one or two separatrices will change smoothly. The other(s) can suddenly flip direction, annihilate each other, or both appear at one place but moving in opposite directions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PREVIOUS WORK</head><p>A hyperstreamline is basically a streamline defined over an eigenvector field <ref type="bibr" target="#b1">[2]</ref>. Typically, the major eigenvector field is used for integrating the hyperstreamline, while the two other eigenvector fields provide local information along the length of the major hyperstreamline and are mapped to its cross section. One of the weaknesses of hyperstreamlines is ambiguity in places where the tensors are degenerate, i.e. where the eigenvalues are nearly equal. In these areas, a sudden change in direction of the hyperstreamline may arise. Note that this is a common problem with integration algorithms e.g. fiber tracking algorithms in DT-MRI. To address this problem, tensorlines were introduced by Weinstein et al. <ref type="bibr" target="#b10">[11]</ref>. Ambiguities are resolved by taking the anisotropy of the local tensor into account as well as information about orientation of nearby features. This allows the tensorlines to proceed in a relatively smooth path, even in the face of isotropic regions or noise in the data set.</p><p>Topology based tensor visualization techniques represent the tensor fields in a simple yet powerful way. The critical features are extracted to present a simplified version of the underlying data field. They are defined as degenerate tensors where the eigenvalues are identical, and are the only places where the two associated hyperstreamlines can intersect each other. In 2D tensor fields, there is only one way to obtain a degenerate point: the two eigenvalues must be equal. Hesselink and Delmarcelle used this concept in 2D and discussed the nature of the degenerate points (wedges and trisectors) in great detail.</p><p>However, it is more complicated in 3D, in part because there are two types of degenerate points in 3D: double degenerate points, where two of the three eigenvalues are equal, and triple, where all three eigenvalues are identical. Furthermore, the double degenerate points may be distinguished by whether the minor and medium eigenvalues are equal, which we refer to as type-L or linear degenerate (these are locations where minor hyperstreamlines can intersect each other), or the medium and major eigenvalues are equal, which we refer to as type-P or planar degenerate (these are locations where major hyperstreamlines can intersect each other). This distinction is important in some applications. For example, in DT-MRI studies, fiber structures are more likely to be found near type-L features lines. Hesselink's early work <ref type="bibr" target="#b3">[4]</ref> does not fully explore the properties of the double degenerate features and instead focuses on the triple degenerate tensors, whose properties are closer to their counterparts in 2D. They hint that the triple degenerate points (for the double point load data) are connected by a locus of double degenerate points <ref type="bibr" target="#b3">[4]</ref>. The paper fails to point out that the dimension of the stable double degenerate features are in fact lines in most of the typical non-degenerate tensor fields. Hence, it did not attempt to find a stable numerical method to extract these feature lines in 3D.</p><p>In complex 2D tensor fields, the extracted topology may also be very complex. Tricoche et al. proposed algorithms to simplify 2D tensor topology <ref type="bibr" target="#b9">[10]</ref> as well as track them in time-varying 2D tensor fields <ref type="bibr" target="#b8">[9]</ref>. In <ref type="bibr" target="#b7">[8]</ref> they studied vector field topology on cutting planes, an approach similar to reducing 3D tensor field topology locally to 2D planes.</p><p>Recently, Zheng and Pang <ref type="bibr" target="#b11">[12]</ref> established that stable degenerate features in 3D symmetric 2nd order tensor fields form lines. A numerically stable method for extracting these lines was also presented. First, the discriminant function was reformulated into seven signed constraint functions which allowed one to check if a cell face can potentially contain a degenerate point. Next, the degenerate points on each candidate cell face were extracted. Finally, these points were connected using a multi-pass approach to construct the degenerate feature lines. In <ref type="bibr" target="#b12">[13]</ref>, an analytical formulation for the tangents of these degenerate feature lines was derived. This allowed one to trace the degenerate feature line as soon as one of the degenerate points has been extracted. As a result, the more expensive degenerate point extraction process can be carried out using a coarser grid, and replaced with a less expensive and more accurate tracing algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">3D TENSOR TOPOLOGY</head><p>In this section, we introduce the analysis of 3D tensor topology, including the degenerate curves and their separating surfaces. We first start by introducing an important theorem that shows 3D tensor analysis near a degenerate tensor can be reduced to a similar analysis around a 2D degenerate tensor. Second, we discuss the properties of the transition point where the reduced 2D degenerate tensors change its types. We also show that these results lead to interesting configuration of separating surfaces around a 3D degenerate curve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Eigenvectors Around 3D Degenerate Tensors</head><p>It was recently established that 3D degenerate tensors form feature curves. We also know that hyperstreamlines can only cross each other on points along these degenerate curves. Therefore, a very important step in 3D tensor topology is to study eigenvectors around a degenerate tensor. Here we study a more general case of N Ã N symmetric tensor field around a degenerate tensor with p repeated eigenvalues. In this section, we show that the eigenvectors around a degenerate tensor are equivalent to the eigenvectors of the tensor projected into its invariant space.</p><p>We consider a real symmetric matrix T (t) which is a function of real parameter t and has the property that two or more distinct eigenvalues Î»i(t) coalesce at t = 0:Î» = Î»1(0) = Î»2(0) = â¢ â¢ â¢ = Î»p(0). We define the eigenpairs of T (t), each consisting of an eigenvalue and corresponding eigenvector, as (Î»i(t), Ïi(t)), Ïi = 1 and Ï T i Ïj = 0, i = j. T (t) can be considered as a curve passing through the degenerate point at t = 0.</p><p>We assume that the eigenvectors Ïi(t) â Ïi(0) when t â 0. For any t, S(t) = span{Ï1(t), ..., Ïp(t)} is an invariant space with the associated eigenvalues Î»1(t),...,Î»p(t). S(0) is the invariant space spanned by the eigenvectors associated with the repeated eigenvalues at t = 0. Note that although each eigenvector is indeterminate at t = 0, their spanned invariant space is well defined. We assume no further degeneracy. In particular, we assume that for small enough t, min i =j |Î»i(t) â Î»j(t)| â¥ 2Î´t, where Î´ &gt; 0 and is independent of t. In other words, although the associated eigenvalues are getting closer as t â 0, nevertheless the separation is O(t). This assumption will play an important role in the analysis to follow. It also clearly points out where such analysis breaks down.</p><p>Without loss of generality, we assume the basis for S(0) is simply R p , followed by an orthonormal basis for its complement. In such a basis, T (t) takes the form,</p><formula xml:id="formula_4">T (t) = M (t) B T (t) B(t) H(t)<label>(6)</label></formula><p>where M , B, and H are the block submatrices of T , and M (t) is p Ã p and represents the projection of T (t) onto S(0). Thus, S(0) is not invariant under T (t), t = 0. But as t â 0, B(t) â 0. With little loss of generality, we assume B(t) &lt; Kt, K &gt; 0 and independent of t. In the limit, T (0) = M (0) H(0), where is the direct sum between two matrices.</p><p>In this basis, we may write</p><formula xml:id="formula_5">Ïi(t) = (yi(t), Î¾i(t)). By our assumption, Ïi(t) â Ïi(0) â S(0) and thus Î¾i(t) â 0 as t â 0, i = 1, ..., p. The projection of T (t) onto S(0) is M (t).</formula><p>Clearly, yi(t) is the projection of Ïi(t) onto S(0). We identify the eigenpairs of M (t) as (Âµi(t), wi(t)). In other words, wi(t) is the eigenvector of the projection and yi(t) is the projection of the eigenvector of T (t) onto S(0). Let 2Î³ be the separation ofÎ», the repeated eigenvalue, from the remaining eigenvalues of T (0): 2Î³ = mini&gt;p |Î»i âÎ»|. The relationship between wi(t) to yi(t) can be stated as the following theorem,</p><formula xml:id="formula_6">Theorem 4.1. For small enough t, |Î»i â Âµi| â¤ K 2 Î³ t 2 (7) | sin (yi, wi)| â¤ K 2 Î³Î´ t<label>(8)</label></formula><p>The proof of this theorem is provided in Appendix. This theorem implies that as t â 0, the projection of an eigenvector is equal to the eigenvector of the projection. For 3D tensor field, this theorem states that to study the eigenvectors in a small neighborhood around a degenerate tensor, it is sufficient to study the eigenvectors of their projection on the repeated plane. Therefore, it is easy to see that the separating surface in a 3D tensor field is simply the trajectory of the individual separatrix of each 2D projected tensors around all points along a degenerate curve. Such an intuition is important in understanding the behavior of 3D tensor topology It is worth noting that Theorem 4.1 is closely related to the singular perturbation theory around a pair of degenerate state in quantum mechanics <ref type="bibr" target="#b4">[5]</ref>. It can also be proven using the singular perturbation theory. In the appendix, we provide a more rigorous version of the proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">3D Transition Points</head><p>Theorem 4.1 states that the relationship between the eigenvector around a degenerate tensor can be approximated by the eigenvector of the projection of the tensor in a small neighborhood if the projection of T (t), M (t), is not degenerate itself for t = 0. Such assumption is valid as long as the repeated plane is not tangent to the degenerate curve at that point. In fact, using the analytical formula described in <ref type="bibr" target="#b12">[13]</ref> to calculate the degenerate curve tangent, we knew that from any degenerate point, the degenerate curve tangent, i.e., the direction that keeps the tensor degenerate, is also the direction that keeps the projection of the tensor degenerate. In most cases, the separating surfaces consist of all the individual 2D separatrices on the repeated plane, emanating from all the points along the degenerate curve. However, such analysis naturally breaks down at points where the degenerate curve is tangential to the repeated plane. In fact, we can show that such points are exactly the points where the degenerate tensors switch types between trisectors and wedge points.</p><p>Without loss of generality, we still assume that the eigenvectors are aligned with the natural basis of the coordinate system at the degenerate point of interest. We denote A(X) = M11(X)âM22(X) and B(X) = M12(X), where M (X) is the projected tensor field of T (X) onto the repeated plane. From <ref type="bibr" target="#b12">[13]</ref>, we know that the tangent of the degenerate curve is equivalent to the direction that keeps both A and B zeros at the same time, i.e., keeps the projected tensor degenerate.</p><formula xml:id="formula_7">N = âA Ã âB = ï£« ï£­ A2B3 â A3B2 A3B1 â A1B3 A1B2 â A2B1 ï£¶ ï£¸<label>(9)</label></formula><p>where A1 = âA/âx1 and other symbols are defined similarly. Note that N3 = A1B2 â A2B1 is exactly the symbol Î´ used by Delmarcelle et al. in <ref type="bibr" target="#b2">[3]</ref> to distinguish between trisectors and wedge points: if N3 &lt; 0, the degenerate tensor is a trisector; if N3 &gt; 0, the degenerate tensor is a wedge point. It is natural to see that N3 = 0 occurs at exactly the points where the degenerate tensor change between these two types. Since N =&lt; N1, N2, N3 &gt; is the tangent of the degenerate curve and X â Y plane is the repeated plane, this is equivalent to the fact that the degenerate curve is tangential to the repeated plane at that point. We refer to such points as transition points. Another type of transition point is between double wedge and single wedge. But since there is no sign change in N3, there is no special property at such points. The hidden separatrix simply merges with one of the two real separatrices and both disappear. For example, given a transition point between trisectors and double wedge points, the degenerate curve must pass through the repeated plane at that point. Through this point, two of the three separatrices form smooth surfaces, but the other one flips direction. It can also be shown that the third separatrix must lie on the direction of the projection of the degenerate curve on the repeated plane. So on both sides of the transition plane, the separatrices that flip direction either point to each other or point away from each other.   when such transition happens. All the transition points are marked by white points, and each individual separating surface is labeled with a different letter. <ref type="figure" target="#fig_4">Figure 4(a)</ref> is a transition between a trisector and a single wedge point. In this picture, the temporary period of the double wedge point is very short so that it can be considered as a direct transition between the trisector and the single wedge point. A more careful examination reveals that there is indeed a brief double wedge point stage, although it is not evident. Below the transition point, the separatrices are single wedges. Above the transition point, they are all trisectors. Note that surface A is continuous throughout the transition. Surfaces B and C grow out in opposite directions after the transition point. All three separatrices at the transition point form the repeated plane that is tangential to the degenerate curve at that point. The most interesting property is that surface C starts from one side of surface A and goes below the degenerate curve. It then wraps back and merges with surface A from the other side of the transition point. It can be better seen from other results in Section 6. We refer to this type of surface configuration as the helical shell. <ref type="figure" target="#fig_4">Figure 4</ref>(b) is a transition between a trisector and a double wedge point. The separatrices are trisectors below the transition point and they are double wedges above it. Surface B is in front of surface C from the this viewpoint. Surfaces A and C are continuous throughout this transition. However, the separatrices on surface B switch direction after the transition. In this example, the flipped separatrices point toward each other. We can see that the separating surface starting from the trisector side ends up intersecting with the same degenerate line. The separating surface wraps up with itself. This means that not only can separatrices interact with other degenerate curves, but they can also interact with their own degenerate curve. <ref type="figure" target="#fig_4">Figure 4(c)</ref> is a similar transition between a trisector and a double wedge point. However, in this example, the flipped separatrices point away from each other. This forms an interesting swordfish surface configuration. <ref type="figure" target="#fig_4">Figure 4(d)</ref> shows a transition between a single and a double wedge point. Outside the white box, the separatrices all belong to single wedge points. However, they are all double wedge points inside the box. In terms of the separatrices, the hidden separatrix and another real separatrix suddenly appear at one point, when going along the degenerate curve. Then the hidden separatrix gradually moves toward the other real separatrix. When it merges with the other one, they annihilate each other and both disappear and the degenerate point reverts back to a single wedge. Although this process is discontinuous, the separating surface is continuous (although not smooth) in this case. It is simply a surface folded twice that forms a "Z" shape configuration along the degenerate curve.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Other Separating Surfaces</head><p>By definition, the separating surfaces divide the space into smaller regions, within each of which the hyperstreamlines have a simple pattern. However, the separating surfaces described above do not segment the space into closed, distinct regions. If we only consider the trajectory of the 2D separatrices emanating from all the points along the degenerate curve, points on opposite sides of a separating surface might still be connected to each other through other paths. The reason is that there are still other types of surface that form separating surfaces. One of them is the surface formed by all the hyperstreamlines starting between the separatrix at the intersection of degenerate curve and the boundary. Another example is the hyperstreamline that is tangential with the boundary. It is important that one needs all types of separating surfaces to completely segment the space into disconnected regions. However, these additional separating surfaces may add to the visual clutter and prevent the users from seeing the real topological structure. In this paper, since we do not know the physical meaning of the boundary, we ignore these other types of surfaces and only focus on the surfaces formed by all the 2D separatrices. In the future, the relationship between other types of separating surfaces and the trajectory of 2D separatrices should be further investigated to determine the most useful visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION ISSUES</head><p>In this section, we discuss several implementation issues in the process of obtaining the separating surfaces as described in the previous sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Obtaining High Resolution Degenerate Curves</head><p>Most parts of the degenerate curve extraction algorithm we use is described in <ref type="bibr" target="#b12">[13]</ref>. We choose the method based on discriminant constraint functions for its stability around higher order degeneracy. We also use the analytical formula to obtain the tangent of the degenerate curves to trace high resolution features.</p><p>It is worth noting that since the eigenvectors are very sensitive to small changes at locations near a degenerate tensor, the accuracy of the separating surface highly depends on the quality of the degenerate curves. For each point along the curve, we demand the difference between the two eigenvalues to be sufficiently small. Since the separatrix must be a radial eigenvector, it is a good way to verify the correctness of the algorithm. For any particular set of eigenvectors, we move a small offset from the degenerate point in the direction of the separatrix, and check the eigenvector direction. If all the algorithms are correct, that eigenvector should be perfectly aligned with the separatrix. These two vectors are referred to as verifying vectors. Any discrepancy of these two vectors is a good indication of errors.</p><p>For all the datasets in this paper, we use a grid for extracting the feature points on the grid faces that is half the resolution of the original grid. Since the extraction algorithm is based on the generalized Newton-Raphson iterative method, it converges very quickly near the real solution, but there is no guarantee that it can find all the solutions. Then, we use fourth order Runge-Kutta combined with the analytical tangent to trace and connect the extracted feature points. When the tracing intersects a cell face, we record the intersection point and compare it with nearby features. If there is no feature nearby and the feature is accurate enough, a missing feature that is lost in the extraction algorithm is recovered through the tracing. Then the tracing continues to the nearby cells through this newly discovered feature point. Using this hybrid algorithm of extraction and tracing, not only do we develop algorithms that guarantees the correctness of the connectivity, but we also greatly reduce the computational cost in obtaining high resolution feature lines. This is because tracing is much cheaper than extraction. As long as there is at least one feature point that is extracted for a degenerate curve, we can recover the entire degenerate curve. Given the low false negative rate of the extraction stage, it further reduces the likelihood that a feature line would be lost.</p><p>For this paper, we further develop another method to dynamically increase the resolution of feature lines. Given a low resolution feature line with the correct connectivity, we first simply interpolate the feature points along the curve. However, the interpolated points are not strictly degenerate any more. In our experiments, although they are still very close to the real degeneracy, the two verifying vectors can sometimes have more than 50 â¢ difference. Tracing the separating surfaces from such feature points will result in extremely low quality results. Therefore, we refine each interpolated feature point by fixing it on a plane that is most perpendicular to the analytical tangent. Since the point is very close to the real solution, the iterative method converges in one or two iterations in most cases without the need to worry about losing features. This simple algorithm gives us the power to extract high accuracy degenerate points with dynamically changing resolution with little extra computational cost.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Rendering of Separating Surfaces</head><p>Although all the separatrices emanating from the degenerate curves form surfaces, simply rendering the surface is not enough. It is very important to show both the surfaces and the hyperstreamline curves, of which they are composed. For this consideration, we choose a dense array of illuminated hyperstreamlines as our rendering technique for the separating surfaces. A large number of hyperstreamlines are computed during the setup stage. During the rendering stage, the resolution of the hyperstreamlines can be controlled dynamically. A sparse array of illuminated hyperstreamlines helps us understand the interaction between the hyperstreamlines and other degenerate curves; a dense array of illuminated hyperstreamlines gives us better perception of the surfaces without the detail of individual lines. However, for complicated separating surfaces like those in the double point load data set, it is not an easy job to understand all the separating surfaces at the same time. Our current solution is to give users the flexibility to hide or show each isolated separating surface one by one to avoid visual clutter. In the future, we also plan to experiment with other visualization techniques such as semi-transparent surfaces with texture flow on them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>In this section, we apply our technique on several synthetic but commonly used benchmark datasets: the randomly generated ten-sor field and the double point load stress tensors. The color mapping scheme used in <ref type="figure" target="#fig_7">Figures 5 to 8</ref> tries to show the distance of the hyperstreamlines from the degeneracies. In the randomly generated dataset, including those in <ref type="figure" target="#fig_4">Figure 4</ref>, the color represents the integration distance of the separatrix from the starting point on the degenerate curve. This color scheme shows how the separatrices interact with other degeneracies very well. However, it may lead to different colors even at the same point. Because the separating surfaces are often intertwined with each other, especially in the double point load dataset. So, for <ref type="figure" target="#fig_10">Figures 7 and 8</ref>, we simply use the difference between the repeated eigenvalues as the measure of distance. Note that away from the degenerate curve, the eigenvalues that were repeated do not have the same values anymore. This scheme gives blue colors when the hyperstreamline is close, in value, to being double degenerate.</p><p>It took 9 seconds to extract the separating surfaces as a sparse array of illuminated hyperstreamlines and 67 seconds as a dense array for the randomly generated tensor fields. It took 21 seconds to extract the separating surfaces as a sparse array and 161 seconds as a dense array for the double point load stress tensors. The machine used is a Dell workstation with a 3.2 GHz CPU, 2Gb memory, and an nVidia Quadro FX 3000 graphics card.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Randomly Generated Tensor Field</head><p>Here, we used the same datasets as in <ref type="bibr" target="#b12">[13]</ref> for comparison reasons. This dataset is a simple cell with all of its eight corner values randomly generated. Although simple, this type of dataset covers a lot of topological information. An important advantage with such datasets is that if we encounter any interesting structure, we can be fairly confident that this type of structure is persistent, and small amount of noise will not make it disappear. Therefore, we can expect to see it often in real dataset and know it is among the basic configurations. For example, we know degenerate surfaces and subvolumes are not persistent features for 3D tensor field, but it is still possible that we encounter some datasets that have such features, even although their very existence can be dissolved by small amounts of noise. But if we encounter them too often in a particular physical phenomenon, such as single point load stress tensors, that means for that type of physical phenomenon, the six free variables in each 3D tensor are not independent at all. There must be some implicit constraint that confine the degenerate tensors to form features other than curves. Therefore, the best solution is to reformulate the specification of the data and choose the ones that can represent its real free parameters, and then develop stable numerical algorithm on it. <ref type="figure" target="#fig_7">Figure 5</ref> shows the separating surfaces of the type-P degenerate features (where the major hyperstreamlines can intersect each other) in the randomly generated tensor field. Note that one separating surface is wrapped around another degenerate curve and shows its wedge-like behavior. In the lower part of <ref type="figure" target="#fig_7">Figure 5</ref>(a), we can see the transition point between trisectors and double wedges, and the surface wrapping up on its own degenerate curve. In the upper right part of the same picture, we see the surface folded twice and therefore shows the transition from single to double back to single wedge points. <ref type="figure" target="#fig_8">Figure 6</ref> shows the separating surfaces for the type-L degenerate features (where the minor hyperstreamlines can intersect each other) in the same dataset. At the lower right of <ref type="figure" target="#fig_8">Figure 6</ref>(a) and lower left of <ref type="figure" target="#fig_8">Figure 6</ref>(b), we see the "swordfish" shape associated with the transition point between trisectors and double wedges. The central line shows a very interesting and sophisticated surface structure around the transition between trisectors and single wedges. We can clearly see from both pictures that one of the separating surfaces goes around the degenerate curve and wraps around another separating surface from the other side.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Double Point Load Stress Tensors</head><p>In this dataset, there are two point loads applied on a semi-infinite volume. At each location, a tensor describes the distribution of stress at that point. It is commonly used as a benchmark dataset to validate and demonstrate the effectiveness of the visualization techniques. The two yellow arrows mark out the positions of the point loads and the two purple balls show the triple degenerate points. <ref type="figure" target="#fig_10">Figure 7</ref> shows the separating surfaces for type-L degenerate features. Note the interesting patterns formed by hyperstreamlines in the symmetric vertical plane connecting the two point loads in <ref type="figure" target="#fig_10">Figure 7(a)</ref>. They first go around the point loads in almost circular shapes and then pass above the degenerate curve connecting the two triple degenerate tensors. Note that these separating surfaces do have a lot of intersections. This property suggests that techniques similar to the saddle connectors in <ref type="bibr" target="#b6">[7]</ref> can be used here. <ref type="figure" target="#fig_10">Figure 7(b)</ref> only shows the separating surface emanating from the two bifurcated branches below one of the point loads. Note that the separatrices are trisectors on both branches. However, if one zooms out enough and merges these two branches, we end up with a "node" structure similar to a "saddle" point in vector topology. This observation suggests that a good simplification technique should merge isolated first order degenerate features into higher order features. <ref type="figure" target="#fig_11">Figure 8</ref> shows the separating surfaces for the type-P degenerate features. <ref type="figure" target="#fig_11">Figure 8(a)</ref> shows all but the loop structure and the line connecting the two point loads. We don't show the other two to reduce visual clutter. Note that many of these surfaces lie close to the surface of the semi-infinite volume. It may be related to the tran-sition between compressive and tensile forces in this region. Interestingly, the two degenerate "tails" from the two triple degenerate point have a separating surface connecting them. <ref type="figure" target="#fig_11">Figure 8(b)</ref> shows the separating surface emanating from the loop structure only. Note that there are four different transition points on this structure. The first two are on the lower part of this loop. They are transitions between trisectors and double wedges. The other two are on the upper part of this loop where two double wedges merge into single wedge points.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>This paper provides the theoretical foundation for analyzing and solving the separating surfaces of second order 3D symmetric tensor fields. These surfaces emanate from degenerate curves and hence special care must be taken in their calculation. Together, the separating surface and the degenerate curves define the topological structure of 3D symmetric tensor fields. Of note is the observation that the type of double degenerate tensor along a degenerate curve may switch among the three basic types: trisector, double wedge, and single wedge. The transition point occurs when the plane containing the repeated eigenvalue is tangent to the degenerate curve. The surfaces in the vicinity of these transition points are quite complex, but continuous. The continuity of the surfaces is realized when one takes the hidden separatrix into consideration. One of the interesting behaviors that we noticed is that it is possible for a separating surface to emanate and end on the same degenerate curve.</p><p>To fully understand these topological structures, further study is needed. For example, to improve the visualization of these structures, at least two possible avenues are: (i) applying texture patterns such as LIC on transparent surfaces to show the grain or orientation of the separatrices on the surface, and (ii) finding a more compact representation of the topological structure to reduce the visual clutter e.g. some variation of saddle connectors come to mind <ref type="bibr" target="#b6">[7]</ref>. So far, we have only looked at randomly generated tensors and the double point load stress tensor data sets. Both are rather clean data sets. Applying topological analysis on noisy data sets may produce topological structures that are simply too complex to analyze. It is therefore also important to study filtering or abstraction methods that identify the important features in the data set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">ACKNOWLEDGMENT</head><p>This work is supported by NSF ACI-9908881 and NASA Ames through contract # NAS2-03144 for the University Affiliated Research Center under Task Order TO.035.0.DK.INR. We would like to thank Joel Yellin for discussions regarding singular perturbation theory and quantum mechanics, Craig Wittenbrink and NVidia for the graphics card used in the experiments. We also thank the reviewers for their very detailed critiques of the paper.</p><p>A PROOF OF THEOREM 4.1</p><p>Before we prove Theorem 4.1, we introduce the gap theorem, Theorem A.1. (Gap Theorem) Given a real symmetric matrix T , any scalar Î³, and any vector u, there is an eigenpair of (Î»i, vi) such that</p><formula xml:id="formula_8">|Î» â Î³| â¤ T u â Î³u u (10) |sin (u, v)| â¤ T u â Î³u u gap(Î³)<label>(11)</label></formula><p>where gap(Î³) = min Î» k =Î» (Î» k â Î³)</p><p>A proof of the gap theorem can be found in <ref type="bibr" target="#b5">[6]</ref>,  These bounds leads to our conclusion that when t â 0, Î»i â Âµi and yi â wi.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>The basic types of first order 2D degenerate tensors.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Transition between a double wedge and a trisector. Blue arrows are the major eigenvectors. Note that the data are changing smoothly while the separatrix has a sudden jump.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Schematic diagrams showing two transitions between trisectors and double wedges. The dash line is the hidden separatrix. The repeated plane is tangent to the degenerate curve at the transition point. On the left, the separatrices point to each other before the flip. On the right, the separatrices point away from each other.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4</head><label>4</label><figDesc>gives the examples of the basic surface configurations (a) Trisector -Single Wedge (b) Trisector -Double Wedge (c) Trisector -Double Wedge (d) Single -Double Wedge</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Basic surface configurations at transition points (white dots) between different types of degenerate points. The separatrices are colored according to the integration "age" from the degenerate curve and vary from blue to red.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>Separating surfaces emanating from type-P degenerate features lines of a randomly generated tensor field. Surfaces are rendered using dense arrays of illuminated hyperstreamlines.(a) Oblique view (b) Oblique view</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>Separating surfaces emanating from type-L degenerate features lines of a randomly generated tensor field. Surfaces are rendered using dense arrays of illuminated hyperstreamlines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 :</head><label>7</label><figDesc>Separating surfaces emanating from type-L degenerate features lines of the double point load stress tensor field. Surfaces are rendered using sparse arrays of illuminated hyperstreamlines. (a) Oblique view (b) Side view</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8 :</head><label>8</label><figDesc>Separating surfaces emanating from type-P degenerate features lines of the double point load stress tensor field. Surfaces are rendered using sparse arrays of illuminated hyperstreamlines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Theorem 4 . 1 .</head><label>41</label><figDesc>For small enough t, Proof. T Ïi = Î»iÏi yields the relations:(M â Î»iI)yi + B T Î¾i = 0 (14) Byi + (H â Î»iI)Î¾i = 0(15)Eliminate Î¾i to find,(M â Î»iI)yi = B T (H â Î»iI) â1 Byi (16) (M â Î»iI)yi â¤ (H â Î»iI) â1 B 2 yi(17)Since 2Î³ is the separation ofÎ» from the remaining eigenvalues of T (0). For small enough t,(H â Î»iI) â1 â¤ 1/ min iâ¤p,j&gt;p |Î»i(t) â Î»j(t)| â¤ 1/(|Î»i(0) â Î»j(0)| â |Î»i(t) â Î»i(0)| â |Î»j(t) â Î»j(0)|) â¤ 1/Î³ (18) (M â Î»iI)yi yi â¤ (Kt) 2 Î³(19)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Invoke the gap theorem which says that there is an eigenpair Âµi, wi of M such that,gap(Î»i) = min k =i,kâ¤p |Î»i â Âµ k | â¥ |Î»i â Î» k | â |Âµ k â Î» k | â¥ 2Î´t â (Kt) 2 /Î³ â¥ Î´t</figDesc><table><row><cell>|Î»i â Âµi| â¤</cell><cell cols="2">(Kt) 2 Î³</cell><cell>=</cell><cell cols="2">K 2 Î³</cell><cell>t 2</cell><cell>(20)</cell></row><row><cell cols="2">| sin (yi, wi)| â¤</cell><cell cols="5">(Kt) 2 Î³gap(Î»i)</cell><cell>(21)</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(22)</cell></row><row><cell cols="7">This leads to the bound on | sin (yi, wi)|,</cell></row><row><cell cols="2">| sin (yi, wi)| â¤</cell><cell cols="3">(Kt) 2 Î³Î´t</cell><cell cols="2">=</cell><cell>K 2 Î³Î´</cell><cell>t</cell><cell>(23)</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Einstein notation. en.wikipedia.org/wiki/Einstein notation</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visualizing second-order tensor fields with hyperstreamlines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="25" to="33" />
			<date type="published" when="1993-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The topology of second-order tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;94</title>
		<editor>R.D. Bergeron and A.E. Kaufman</editor>
		<meeting>IEEE Visualization &apos;94</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="140" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The topology of symmetric, second-order 3D tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lavin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="1997-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Lifshitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Landau</surname></persName>
		</author>
		<title level="m">Quantum Mechanics: Non-Relativistic Theory. Butterworth-Heinemann</title>
		<imprint>
			<date type="published" when="1981" />
		</imprint>
	</monogr>
	<note>3rd edition</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">The symmetric eigenvalue problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Beresford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Parlett</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980" />
			<publisher>Prentice-Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Saddle connectors -an approach to visualizing the topological skeleton of complex 3D vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Holger</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tino</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Christian</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Seattle</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2003-10" />
			<biblScope unit="page" from="225" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualization of intricate flow structures for vortex breakdown analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Deines</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ruetten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;04</title>
		<meeting>Visualization &apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="187" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Tensor topology tracking: A visualization method for time-dependent 2D symmetric tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="461" to="470" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Topology simplification of symmetric, second-order 2D tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xavier</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric Modeling for Scientific Visualization</title>
		<editor>G. Brunnet, B. Hamann, H. MÃ¼ller, and L. Linsen</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="171" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Tensorlines: Advection-diffusion based propagation through diffusion tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Weinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">C</forename><surname>Lundberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;99</title>
		<editor>D. Ebert, M. Gross, and B. Hamann</editor>
		<meeting>IEEE Visualization &apos;99</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="249" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Topological lines in 3D tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;04</title>
		<meeting>Visualization &apos;04<address><addrLine>Austin</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="313" to="320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Topological lines in 3D tensor fields and discriminant hessian factorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Beresford</forename><surname>Parlett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
		<ptr target="www.cse.ucsc.edu/Ëpang/hessian.pdf" />
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="395" to="407" />
			<date type="published" when="2005-08" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
