<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Volume rendering of smoke propagation CFD data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><surname>Staubli</surname></persName>
							<email>staubli@itdesign.ch</email>
							<affiliation key="aff0">
								<orgName type="department">Air Flow Consulting †</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Sigg</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Air Flow Consulting †</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ronald</forename><surname>Peikert</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Air Flow Consulting †</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Gubler</surname></persName>
							<email>gubler@afc.ch</email>
							<affiliation key="aff0">
								<orgName type="department">Air Flow Consulting †</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Gross</surname></persName>
							<email>grossm@inf.ethz.ch</email>
							<affiliation key="aff0">
								<orgName type="department">Air Flow Consulting †</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eth</forename><surname>Zürich</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Air Flow Consulting †</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Volume rendering of smoke propagation CFD data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I</term>
					<term>3</term>
					<term>8 [Computer Graphics]: Applications; J</term>
					<term>2 [Applications]: Physical Sciences and Engineering-Engineering volume rendering, flow visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Six timesteps of smoke emission from a fire inside a hall. The smoke propagation is simulated by computational fluid dynamics and lit with an absorbtion and limited diffuse scattering-based lighting model. Illuminated exit signs shine through dense smoke, which is modeled by adjusting the transfer function in front of exit signs.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Every year, 4 million fires occur worldwide. As a result, 15,000 people are killed and damages totalling 70 billion USD are incurred.</p><p>Contrary to what one might think, the deaths are rarely caused by the flames. In most cases, the victims are poisoned by the smoke. The smoke not only poisons people, it also causes the majority of the property damage, estimated at 70%. Therefore, fire safety has become more and more important during the architectural planning of a building. In the event of a fire the first priority is to remove the smoke from the building, thereby enabling the people to quickly and safely find the fire exits. In addition, the rescue of people trapped within the building and effective fire fighting is dependant on the removal of smoke.</p><p>To assess smoke removal concepts and to prove the efficiency of smoke removal measures to guarantee a safe evacuation and a safe operation of the fire rescue staff, the visibility in a building is a key parameter. In response to market demands for improved fire safety, a new modeling technique for fire and smoke simulation has been developed. The technique is based on Computational Fluid Dynamics (CFD). For smoke propagation inside closed buildings, buoyancy of hot air and heat dissipation are important aspects of the simulation. Based on several simulated fire scenarios, the ventilation can be optimized to guarantee effective removal of smoke. The output of a CFD fire-simulation is a distribution of smoke concentrations within the room. Using today's standard post-processing software (e.g. Fluent, Ansys CFX, Ensight), it is possible to visualize the distribution of smoke concentration as color coded slices through the volume data or as an iso-surface. Two examples are shown in <ref type="figure" target="#fig_0">Figure 2</ref>.</p><p>The distance of visibility in uniformly distributed smoke is directly coupled to the smoke concentration. The iso-surface rendering clips the smoke at a certain level (e.g. visibility of more than 10m), which only gives a very crude approximation of real visibility for two reasons. First, visibility will still be limited outside the isosurface and second, the visibility is evaluated only locally assuming uniform smoke distribution. An assessment of the visibility in various directions, considering different lighting situations or illuminated signs etc. along an escape route is not possible.</p><p>Also, the interpretation of iso-surface illustration or contour plots is very difficult for non-experts, such as architects. The goal of this project was to apply well-known methods to visualize complex CFD data from a commercial CFD code with volume rendering and to create a simple and productive software tool.</p><p>We use an adoption of unstructured direct volume rendering, which incrementally composes transmittance and colors in visibility order to the final image using the computational power of modern graphics cards. Direct volume rendering has proven to be an effective rendering technique for volumetric data in many different fields of application. One of the few areas where direct volume rendering does not play a major role yet is flow visualization. Reasons for this can be found in the lack of clearly separated structures, in Please see supplementary material on conference DVD.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Visualization 2005</head><p>October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 ©2005 IEEE. : Current visualization techniques of smoke concentration inside a mall. Top: contour plot of slices through smoke concentration and corresponding local visibility distance. Bottom: iso-surface of smoke concentration 1g/m 3 . Inside this surface the visibility is less than 10m, outside it is more than 10m but not unlimited.</p><p>the predominance of vector-valued data and in the more abstract meaning of the transfer functions. The visualization of smoke concentration data, however, is a case where direct volume rendering is an immediate and natural approach.</p><p>The input data from the numerical simulation consists of time dependent smoke densities on unstructured grids of tetrahedra. While the optical model defines a mapping from smoke concentration data to opacities, the color of smoke does not effect visibility distances and can be used for improving appearance. Our focus is not realism, but efficient processing of large time-dependent datasets with a simple lighting model. A fraction of light traversing smoke is absorbed and scattered as diffuse color, depending on the particle concentration. Note that we do not consider indirect lighting, which would lead to disproportionate complex computations for scientific visualization. The light model is evaluated in a preprocessing step for each mesh vertex at every time step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Flow volumes <ref type="bibr" target="#b8">[9]</ref> provide a smoke generator for flow fields using direct volume rendering to visualize results of a CFD simulation. Our flow field is coupled to the placement of the fire, which is also the source of smoke. Therefore, smoke concentration is computed during numerical simulation instead of during a post processing step.</p><p>In contrast to previous work on realistic modeling and rendering of smoke and clouds <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b15">16]</ref>, the objective of our work is not realism, but a technical visualization of given smoke concentration data under the constraints of a standardized optical model commonly used in fire protection engineering <ref type="bibr" target="#b11">[12]</ref>. The optical model gives a fixed translation from smoke concentration data to opacities. Assuming linearly varying smoke concentration within each mesh cell, we get a opacity transfer function completely specified by the optical model, which can be pre-integrated and stored in a two dimensional lookup table <ref type="bibr" target="#b1">[2]</ref>. In contrast, more general pre-integration methods of piecewise linear color transfer functions require a three dimensional lookup table, which consume considerable larger amount of memory even at low sampling rates <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b18">19]</ref>.</p><p>One common approach of volume rendering on unstructured grids is to store the mesh as a texture on the graphics card and run a fragment program per visible pixel which accumulates the colors along the corresponding viewing ray <ref type="bibr" target="#b19">[20]</ref>. However, fragment program limitations usually require the use of temporary rendering buffers storing intermediate results and frequent context switching can slow down performance if not implemented carefully. A more natural approach for graphics hardware is the algorithm of projected tetrahedra <ref type="bibr" target="#b16">[17]</ref>. The basic idea is to project the tetrahedra onto the image plane in visibility order and accumulate the final color using framebuffer blending. In order to interpolate the parameters of the pre-integration lookup specified at the vertices, the tetrahedron has to be split into three or four sub-tetrahedrons. This can also be done in the vertex shader <ref type="bibr" target="#b21">[22]</ref>, but then the computation is discarded after every frame even for static cameras, which produces unnecessary overhead for animation of time dependent data. Interpolation, pre-integration sampling and framebuffer blending are all prone to artifacts. Our renderer employs the techniques presented in <ref type="bibr" target="#b5">[6]</ref> to keep artifacts at a minimum level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">OPTICAL MODEL USED FOR SMOKE</head><p>For evacuating in smoke, the visibility of way guidance markings and signage is critical. It has been shown <ref type="bibr" target="#b4">[5]</ref> that the crucial factor is viewing distance, much more than power or luminance. The actual maximum distance for visibility of an object through smoke depends on properties of the smoke, but also of the object itself and the lighting conditions. For practical purposes such as architectural specifications, a simpler empirical model is used <ref type="bibr" target="#b11">[12]</ref> where visibility distance is defined as the reciprocal value of the optical density of the smoke, implying a simple emission-absorption optical model <ref type="bibr" target="#b7">[8]</ref>. The visibility distance is the distance at which the light is reduced to 10% by absorption and scattering, or at which an opacity of 90% is attained.</p><p>The optical density of smoke can be described <ref type="bibr" target="#b11">[12]</ref> by a linear function of the particle concentration c p :</p><formula xml:id="formula_0">D = K m 3 y s c p (1)</formula><p>The optical density D is proportional to the more common extinction coefficient τ = D ln 10. The quantity K m is the light absorption of soot. Typical values are K m = 7.6 m 2 g for flaming burn and K m = 4.4 m 2 g for pyrolysis. The soot yield y s is the mass ratio of soot particles per total particles, which is material dependent value. The combined factor (K m /3)y s is called the smoke potential. Example values are shown in <ref type="table" target="#tab_1">Table 1</ref>.  The opacity α is the fraction of light lost by absorption and scattering over a path length L along a viewing ray. Transmittance T = 1 − α is the remaining fraction and can be expressed as:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Material flaming burn non-flaming burn</head><formula xml:id="formula_1">T (s) = 10 − s 0 D(t)dt = e − s 0 τ(t)dt (2)</formula><p>For given constants K m and y s , Eq. 1 defines an opacity transfer function, mapping smoke concentration to optical densities or extinction coefficients. In principle, the constants are given by the conditions of the CFD simulation, so the opacity transfer function is completely determined by our application of visualizing smoke concentration data. However, in practice, the smoke potential is not known exactly. Also, CFD simulations <ref type="bibr" target="#b13">[14]</ref> are valid for a certain range of smoke potentials. Therefore, the smoke potential can be used as a parameter for explorative visualization. The color of the smoke is evaluated with a simple light model. A fraction of the light E traversing smoke is scattered as diffuse color C = τE. The volume rendering integral describes the color of one pixel, which is the diffuse color accumulated along one viewing ray:</p><formula xml:id="formula_2">c = C(s)T (s)ds = E(s)τ(s)T (s)ds<label>(3)</label></formula><p>Assuming linear interpolation within each tetrahedron, the volume rendering equation can be split into piecewise linear segments. For one such segment of length L, extinction and light color within the segment can be written as</p><formula xml:id="formula_3">E(s) = (1 − s L )E 0 + s L E 1 (4) τ(s) = (1 − s L )τ 0 + s L τ 1<label>(5)</label></formula><p>where E 0 and E 1 (τ 0 and τ 1 ) are the light colors (extinctions) at the segment borders. For one segment, Eq. 3 can now be converted to a weighted sum of the light colors.</p><formula xml:id="formula_4">c = L 0 E(s)τ(s)T (s)ds = w 0 E 0 + w 1 E 1<label>(6)</label></formula><p>with weights w 0,1 depending on the segment length and the extinctions at the segment borders:</p><formula xml:id="formula_5">w 0 = L 1 0 ((1 − s)τ 0 + sτ 1 )e −L s 0 (1−t)τ 0 +tτ 1 dt (1 − s)ds w 1 = L 1 0 ((1 − s)τ 0 + sτ 1 )e −L s 0 (1−t)τ 0 +tτ 1 dt sds<label>(7)</label></formula><p>Analytical integration of Eq. 7 is not possible because they contain Gaussian integrals. However, they can be pre-computed numerically and stored in a lookup table. Two parameters are sufficient to reference weights for any triple {τ 0 , τ 1 , L} (for example {τ 0 L, τ 1 L}).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RENDERING APPROACH</head><p>For each frame, we first render the opaque walls of the building. The geometry is lit by a simple approach as described in Section 4.3, which reuses the lighting of smoke. Next, the smoke is rendered with the algorithm of projected tetrahedra. For a given viewpoint, the tetrahedra are first sorted in visibility order, described in the next section. Each tetrahedron is then rendered as a set of triangles, as described in Section 4.2. Section 4.3 covers the approach used to light smoke by a set of spotlights.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Visibility sorting</head><p>For correct blending, the tetrahedra are sorted back-to-front by their distance to the camera position, which produces less precision artifacts than front-to-back ordering, see end of Section 4.2 for details. Front-to-back rendering allows early ray termination, which locks pixels once they exceed a certain opacity level and thus avoids computations with neglectible impact on the final image <ref type="bibr" target="#b6">[7]</ref>. Back-tofront rendering only allows culling of cells against opaque walls. However, smoke configurations that completely occlude a large fraction of cells are rare in our application.</p><p>We are using an adoption of the XMPVO <ref type="bibr" target="#b17">[18]</ref> algorithm to sort tetrahedra according to the distance to the camera position. First, we build a set of visibility relations between neighboring tetrahedra. The orientation of the common face of two neighboring tetrahedra with respect to the camera position determines the visibility relation. Next, we run a topological sort, which is essentially a breadth first search. If the mesh contains disconnected components or is generally non-convex, the weak ordering of face orientation make a complete sorting impossible. To obtain a complete sorting, ambiguities are resolved by comparing the distances between the camera position and the centers of the tetrahedra. Note that this approach does not guarantee exact results if visibility cycles are present in the data. Visibility cycles could be resolved by subdividing tetrahedrons, but are ignored in our implementation because we never noticed any spurious artifacts.</p><p>Because only tetrahedra intersecting the view frustum need to be sorted to achieve a correct rendering, an implementation could use a visibility acceleration structure (like BSP trees) to determine the subset of tetrahedra which need to be sorted. However, we chose to sort all tetrahedra because often only a small fraction lies outside of the view frustum. Thus, querying an acceleration structure does not pay off. Moreover, if all tetrahedra are sorted, the user can rotate and zoom the camera at a fixed position without performing additional sorting.</p><p>The depth of the thick vertex can be chosen arbitrarily. If set to a convex combination of the corner positions, the depth test can be used to cull cells that lie behind opaque walls. For each thick vertex, the extinction τ 0,1 and light color E 0,1 at the front and back face has to be computed. The coefficients of the corresponding linear interpolation as well as the projection class can be computed from four determinants defined by the three vectors from the eye point to the vertices of each face of the tetrahedron. The class depends only on the signs of these determinants: class 1 has an odd number of positive signs, while class 2 has an even number. To animate time dependent data, projection class and interpolation weights are reused as long as the camera position stays fixed. <ref type="figure" target="#fig_1">Figure 3</ref> shows the vertex data which is stored in a vertex buffer object on the graphics card.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Cell projection</head><p>The following section explains the rendering of the sorted tetraedra. The first stage splits each tetrahedron in three or four sub-tetrahedra so that the screen space projection can be broken up into triangles with no triangular region crossing an edge of the tetrahedron. Then, special perspective interpolation has to be used to concurrently interpolate extinction and light color at the front and back plane of each sub-tetrahedron during rasterization. A fragment program performs the color and transmittance integration along the viewing ray segment inside the tetrahedron using a pre-integration approach <ref type="bibr" target="#b1">[2]</ref>. Fragment blending incrementally composes the final color for each pixel, employing the depth sorting of the tetrahedra.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cell Splitting.</head><p>Graphics hardware is optimized for triangle rasterization and supports correct perspective interpolation of linear functions within triangles. However, the parameters of Eq. 3 have to be interpolated on four front or back planes. Thus, each tetrahedron is split into sub-tetrahedra so that each of them projects to a triangle in image space. The screen space projection of one tetrahedron can be classified into three cases, depending on the orientation with respect to the image plane. <ref type="figure" target="#fig_2">Figure 4</ref> shows the (non-degenerate) cases that can occur, resulting in fans of either three or four triangles. The center vertex is called the thick vertex, the outer vertices the thin vertices. All parameters of Eq. 7 vary linearly in perspective coordinates of the triangles and can be interpolated from the vertex values by the rasterization process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Perspective Interpolation.</head><p>The rasterization process performs perspective linear interpolation of vertex values in screen space. For any linear function f in object space, f w is a linear function in screen space, where w is the homogeneous clipping coordinate. Internally, the rasterization process linearly interpolates f w and 1 w , from which the function f is reconstructed for every pixel and passed to the fragment shader. For the algorithm of projected tetrahedra, perspective interpolation has to be carried out concurrently for the front and the back face of one tetrahedron, while the triangle actually drawn lies in the middle between those two faces. If we denote values of front, middle and back face with x 0 , x and x 1 respectively, the vertex program computes f = f i w w i and f w w i . The value of f i can then be reconstructed in the fragment program by computing</p><formula xml:id="formula_6">f / f = f i w w i w i</formula><p>w . The interpolation scheme is illustrated in <ref type="figure" target="#fig_3">Figure 5</ref>. Alternatively, we could also carry out perspective division in the vertex program to obtain w = 1 for all vertices. However, perspective division is not a reversible operation and thus correct clipping cannot be performed if two vertices of a primitive have differently signed w-coordinates. The ray segment length is not a linear function but can be computed from the (linear) positions on the front and back face.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cell Integration.</head><p>A fragment program is responsible for computing the integral of the diffuse smoke color c and transmittance T along the viewing ray segment, according to Eq. 2 and 3. For direct volume rendering applications, the integral is pre-computed for a set of linear density functions and stored as a 3D texture. The densities at the segment borders and the segment length are used to lookup the precomputed color values in the fragment program. Because the transfer function used in our application is linear, two parameters (τ 0 L, τ 1 L) are sufficient to determine the weights of the light color (see Eq. 7). We use the inverse of the exponential function to map the parameter range [0, ∞] 2 to the texture coordinate range [0, 1] 2 , producing denser sampling for small values, where the weighting functions change more rapidly. In comparison to the approach used in <ref type="bibr" target="#b5">[6]</ref>, the exponential mapping does not require a bound parameter range and thus the lookup table can be computed once for all datasets at high precision.</p><p>First, the fragment program reconstructs the positions and smoke densities at the front and back plane by inverting the perspective division carried out in the vertex program. The integration length is computed from the positions on the front and back plane as L = p 1 − p 0 , and the color weights are read from the lookup texture. The fragment program also needs to compute the transmittance for the frame buffer blending described in the next paragraph. The transmittance as defined in Eq. 2 could be computed from the color weights, because T = 1 − w 0 + w 1 holds. However, it is more precise to compute the transmittance analytically. We can combine the computation of texture coordinates and transmittance:  </p><formula xml:id="formula_7">u = e −τ 0 L/2 , v = e −τ 1 L/2 (8) T = uv, {w 0 , w 1 } = tex(u 2 , v 2 )<label>(9)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fragment Blending.</head><p>The contribution of each cell is accumulated to the final pixel color using alpha blending. For back-to-front compositing, the framebuffer contains the color of all cells behind the one currently being rendered. The transmittance is the fraction of the color that is absorbed by this cell. The blending equation in OpenGL terminology becomes c dst = c src + α src c dst <ref type="bibr" target="#b9">(10)</ref> where the transmittance T is written to the alpha component by the fragment program. Although not generally needed for back-tofront compositing, we also store the accumulated transmittance in the alpha channel of the framebuffer to later adjust the transfer function in front of exit signs as explained in Section 4.4. The separate blending function for the alpha channel is</p><formula xml:id="formula_8">α dst = α src α dst<label>(11)</label></formula><p>While the fragment program does all computations in 24 or 32bit floating point precision, the color and alpha output is rounded to 8bit fixed point numbers. Alpha dithering is a sufficient way to overcome quantization artifacts, as suggested in <ref type="bibr" target="#b20">[21]</ref>. The idea is to round transmittance depending on some random number q:</p><formula xml:id="formula_9">T = ( 255 • T + f rac(255 • T ) &gt; q?1 : 0)/255<label>(12)</label></formula><p>The approach described in <ref type="bibr" target="#b5">[6]</ref> uses a dependent texture lookup to retrieve the random number. Instead, we use the lower bits of the transmittance to compute a pseudo random number.</p><formula xml:id="formula_10">q = f rac(256 • 255 • T )<label>(13)</label></formula><p>Because quantization also occurs after alpha blending, artifacts can only be avoided completely if a high precision framebuffer is available. The current generation of graphics hardware supports 16bit floating point framebuffers and do not show quantization artifacts. See <ref type="figure" target="#fig_5">Figure 7</ref> for a comparison.</p><p>Front-to-back compositing uses a different blending function for the color channel (c dst = α dst c src + c dst ), which produces strong rounding artifacts at 8bit precision: For α dst c src &lt; 0.5/255, the blending does not change the value of the destination color. For example, infinite compositing of white smoke cells with 25% opacity leads to a grey value of only 33% instead of 100%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Lighting</head><p>The lighting of the smoke must be calculated every vertex and time step of the simulated CFD data. We used a simple lighting model which considers the absorption of the light by smoke and opaque surfaces. By restricting the light sources to spotlights, lighting can be performed by the same cell projection procedure as rendering. The scene is rendered from the position of each light source, with a view-frustum bounding the cone of light. The cells are now rendered in front-to-back order. Note that α-compositing is independent of the ordering (in contrast to RGB-compositing, see Eq. 10 and 11), and thus the alpha buffer contains the amount of light transmitted through all cells already rendered. The transmittance value of the alpha buffer can be multiplied with the standard spotlight model to gain the light intensity at the vertex. However, the pixels of the framebuffer are generally not aligned with the vertex positions. To minimize artifacts, we perform bilinear interpolation of the alpha buffer at the projected vertex position. Furthermore, we read back the alpha channel before the cell in front of the vertex is rendered and compute the last factor of the transmittance compositing at the exact vertex position on the CPU. Occlusion is handled by sampling the depth buffer of the opaque walls rendered beforehand and comparing it with the vertex depth. The accumulation of all light sources in the scene equals to the light intensity that reaches a mesh vertex.</p><p>All lighting calculations are done only once for every time step in a preprocessing step and the results are saved to disk for later use during visualization.</p><p>Because the computational grid of the smoke propagation is generally aligned with the building geometry, we can use boundary faces of the grid to render shadows on walls of the building. First, all opaque geometry is rendered using standard OpenGL lighting. Then, semi-transparent boundary faces are rendered on top to darken the walls according to absorption from smoke, occlusion and attenuation of the spotlight model. The depth range is shifted slightly to avoid depth buffer collision. The result of the lighting is visualized for a synthetic ball of smoke in <ref type="figure" target="#fig_4">Figure 6</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Rendering of exit signs</head><p>An important part of our application is the visibility of exit signs under various smoke conditions. Compared to reflecting signs, selfemitting signs have a larger visibility distance, which is modeled by a reduced smoke potential of (K m /8)y s instead of (K m /3)y s , see <ref type="bibr" target="#b10">[11]</ref>. We can exploit the special relationship of the two transfer functions to draw illuminated exit signs after the smoke has been rendered. According to Eq. 2, the transmittance of the reduced smoke potentional is As described in Section 4.2, the transmittance T of the smoke is rendered to the alpha component of the frame buffer. Illuminated exit signs can then be rendered in an additional pass using front-toback compositing: c = T c e + c s <ref type="bibr" target="#b14">(15)</ref> where c s is the smoke color and c e is the color of the exit sign.</p><formula xml:id="formula_11">T = T 3/8<label>(14)</label></formula><p>To access the per-pixel value of uncorrected transmittance T in the fragment program, a bounding box per exit sign is copied from the frame buffer to a texture. Texture coordinate interpolation needs special attention when redrawing the exit signs: while the decal texture of the exit sign uses perspective texture mapping, the αmap is parallel to the image plane and uses linear texture mapping. <ref type="figure" target="#fig_6">Figure 8</ref> shows the effect of adjusting the transfer function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head><p>We had access to two datasets of different size to measure the rendering performance of our algorithm. The smaller dataset consists of two connected rooms with no ventilation. The seat of fire is placed in the middle of the smaller room. During the animation, a dense column of smoke forms above the source, accumulates below the ceiling and eventually fills out the whole room as shown in <ref type="figure">Figure 1</ref>. The larger dataset (shown in <ref type="figure">Figure 9</ref> models a shopping mall with seven stories and ventilation. The simulated source of fire is placed on the first floor and during the animation, the smoke quickly spreads in the building. The details of the two datasets are listed in <ref type="table" target="#tab_3">Table 2</ref> and the frame rates achieved by our approach are listed in <ref type="table">Table 3</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DISCUSSION</head><p>Simulations of smoke propagation inside buildings has been previously analyzed using iso-surfaces and contour plot slices, but not with volume visualization techniques. Visibility plays a major role for safe evacuation and safe operation of the fire rescue staff during a fire. With previous methods, only a crude approximation of the visibility is visualized, corresponding to a local visibility distance assuming uniform smoke concentration. Our volume rendering approach allows analysis of accurate visibility for any point of view described by a standardized optical model. Realistic simulation of disorientation in a major fire is an important aspect of evacuation planning. By adapting common volume rendering techniques, time dependent smoke data can be lit with a simple absorption and scattering-based lighting model and rendered in real-time. Adapting the transfer function in front of exit signs accounts for the increased distance of visibility for illuminated objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>We have shown that direct volume rendering can successfully be applied to the application of technical smoke visualization. Although photo realism was not the aim of the approach, the visual quality of our renderer is superior to previously used iso-surface rendering and allows realistic visualization of the view of a person inside a building filled with smoke. In comparison to more general volume rendering approaches, the pre-defined linear mapping from smoke density to opacity allows pre-integration with a 2D table lookup. Employing perspective interpolation and 16bit framebuffers, no visible artifacts are present in the renderings. Our simple light model can be evaluated using the same rendering approach and significantly improves appearance of the smoke. The transfer function in front of illuminated exit signs can be adjusted in a final rendering pass of image space complexity.    <ref type="table">Table 3</ref>: Frame rates (in s −1 ) of two datasets at different levels of interactivity. A camera that is zoomed and rotated is still considered fixed because tetrahedra sorting and projection does not need to be performed. Frame rates denoted with * contain a back-illuminated exit sign, which requires an extra transfer function adjustment path. The frame rates are averages of the configurations shown in the screen shots in Figures 1 and 9. <ref type="figure">Figure 9</ref>: Four different viewports and time steps of smoke propagating inside a mall with seven stories. The average performance is stated in <ref type="table">Table 3</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2</head><label>2</label><figDesc>Figure 2: Current visualization techniques of smoke concentration inside a mall. Top: contour plot of slices through smoke concentration and corresponding local visibility distance. Bottom: iso-surface of smoke concentration 1g/m 3 . Inside this surface the visibility is less than 10m, outside it is more than 10m but not unlimited.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Vertex data of the tetrahedral mesh. Thick vertices are generated by the view dependent splitting of each mesh cell. Each vertex stores its position, ray segment length, extinction and light color at the front and back face. For thin vertices, L = 0, τ 0 = τ 1 and e 0 = E 1 holds. The linear array is stored in a vertex buffer object on the graphics card.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Classification of the projected cell outlines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Perspective interpolation of values on the front and back face of a tetrahedron. Each tetrahedron (with one view-aligned edge) is rendered as a triangle (middle line). To achieve correct interpolation of vertex values on the front and back face (left and right line), perspective correction has to be employed, because linear interpolations on the triangle or the image plane do not match the linear interpolations on the front and back faces. This is illustrated by the dashed lines going through the midpoints x.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Synthetic sphere of smoke to illustrate the improved appearance with our simple lighting model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Precision artifacts for a block of uniform smoke density. Standard 8bit framebuffer blending (left), 8bit framebuffer with alpha dithering (middle), 16bit framebuffer (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Illuminated exit signs (left column) are visible further than reflective exit signs (right column), which is achieved by adjustment of the transfer function.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table /><note>Smoke potentials for various materials. The unit used here is dBm 2g . Table reprinted from [1].</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 :</head><label>2</label><figDesc>Geometric complexity of two test datasets. The first two columns state the number of vertices and number of tetrahedrons of the volumetric mesh. The last column states the number of triangles of the building geometry.</figDesc><table><row><cell>Smoke Camera Hall Mall</cell><cell>steady fixed 4.6 / 2.8* 4.6 / 2.7* animated fixed 0.61 0.37</cell><cell>steady animated animated animated 2.4 / 1.9* 1.9 / 1.5* 0.42 0.25</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An Introduction into Fire Dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dougal</forename><surname>Drysdale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Wiley Sons</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">High-quality pre-integrated volume rendering using hardware-accelerated pixel shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HWWS &apos;01: Proceedings of the ACM SIG-GRAPH/EUROGRAPHICS workshop on Graphics hardware</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Visual simulation of smoke</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ronald</forename><surname>Fedkiw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jos</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henrik</forename><forename type="middle">Wann</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;01: Proceedings of the 28th annual conference on Computer graphics and interactive techniques</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="15" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Real-time cloud rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anselmo</forename><surname>Harris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lastra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="76" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Evacuating in Smoke -Decisive Factors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geir</forename><surname>Jensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IGP AS</title>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Projecting tetrahedra without rendering artifacts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Qiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Volume Visualization Symposium &apos;04</title>
		<meeting>IEEE Volume Visualization Symposium &apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Acceleration techniques for gpu-based volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Krueger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruediger</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Optical models for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="99" to="108" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Flow volumes for interactive vector field visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Barry</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;93: Proceedings of the 4th conference on Visualization &apos;93</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="19" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Fast High Accuracy Volume Rendering. PhD thesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><surname>Moreland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004-07" />
		</imprint>
		<respStmt>
			<orgName>University of New Mexico</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Smoke production and properties, SFPE Handbook of Fire Protection Engineering. Society for Fire Protection Engineering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><forename type="middle">W</forename><surname>Mulholland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Boston</pubPlace>
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Quantification of smoke produced at fires</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Rasbash</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">P</forename><surname>Phillips</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1978" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Hardware-accelerated volume and isosurface rendering based on cell-projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Roettger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Heidrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philipp</forename><surname>Slusallek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Smoke movement in buildings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rosemann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Moser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Indoor Air 99, 8th International Conference on Indoor Air Quality Climate</title>
		<meeting><address><addrLine>Edinburgh, Scotland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Compression domain volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruediger</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A real-time cloud modeling, rendering, and animation system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joshua</forename><surname>Schpok</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joseph</forename><surname>Simons</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SCA &apos;03: Proceedings of the 2003 ACM SIGGRAPH/Eurographics symposium on Computer animation</title>
		<meeting><address><addrLine>Aire-la-Ville, Switzerland, Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>Eurographics Association</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="160" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A polygonal approximation to direct scalar volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allan</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VolViz &apos;90: Proceedings of the 1990 workshop on Volume visualization</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">An exact interactive time visibility ordering algorithm for polyhedral cell complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Cludio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joseph</forename><forename type="middle">S B</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">L</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="87" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Hardware-based view-independent cell projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manfred</forename><surname>Weiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VolViz &apos;02: Proceedings of the 2002 IEEE symposium on Volume visualization and graphics</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="13" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Hardware-based ray casting for tetrahedral meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manfred</forename><surname>Weiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Merz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;03</title>
		<meeting>IEEE Visualization &apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="333" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Alpha dithering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Randall</forename><forename type="middle">J</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><forename type="middle">C</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lamar</surname></persName>
		</author>
		<idno>UCRL-ID-153185</idno>
		<imprint>
			<date type="published" when="2003-03" />
		</imprint>
		<respStmt>
			<orgName>Lawrence Livermore National Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Tetrahedral projection using vertex shaders</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Wylie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><surname>Moreland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><forename type="middle">Ann</forename><surname>Fisk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patricia</forename><surname>Crossno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VolViz &apos;02: Proceedings of the 2002 IEEE symposium on Volume visualization and graphics</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="7" to="12" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
