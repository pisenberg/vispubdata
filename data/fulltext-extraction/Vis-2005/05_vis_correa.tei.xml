<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Dataset Traversal with Motion-Controlled Transfer Functions</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><forename type="middle">D</forename><surname>Correa</surname></persName>
							<email>cdcorrea@caip.rutgers.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering Rutgers</orgName>
								<orgName type="institution">The State University of New Jersey Piscataway</orgName>
								<address>
									<postCode>08855-0909</postCode>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deborah</forename><surname>Silver</surname></persName>
							<email>silver@caip.rutgers.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical and Computer Engineering Rutgers</orgName>
								<orgName type="institution">The State University of New Jersey Piscataway</orgName>
								<address>
									<postCode>08855-0909</postCode>
									<region>NJ</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Dataset Traversal with Motion-Controlled Transfer Functions</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:37+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.6 [Computer Graphics]: Methodology and Techniques; I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism Dataset traversal</term>
					<term>illustrative visualization</term>
					<term>volume manipulation</term>
					<term>animation</term>
					<term>transfer functions</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Sequence of traversal of blood vessels in the visible human dataset as an illustrative visualization. Here, flow of blood is simulated via a transfer function. (a) Venous blood is represented as a blue transfer function coming through the vena cava. (b) The blood flows through the pulmonary artery. (c) A second transfer function in red represents arterial blood coming out through the aorta (d) Different paths used for traversal (in green).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Although volume rendering is a very well researched field, the effective exploration and visualization of volumetric datasets remains a challenging area. One of the difficulties of exploring volume models is the simultaneous visualization of different structures while preserving the context, due to occlusion, clutter and noise. In this paper, we present a technique for illustrative visualization based on the exploration of a dataset via a transfer function that can be moved along a path. We call this dataset traversal, i.e., traversing a dataset along a specified path. This is commonly used in medical illustration to produce animations, highlight features or enhance the rendering of a dataset. For example, <ref type="figure" target="#fig_0">Figure 2</ref> shows frames from an animation of arteriovenous malformations <ref type="bibr" target="#b1">[2]</ref>. Arterial blood is highlighted as animated red arrows during the first frames of the animation, and the last frames show the flow of venous blood in blue. While this is extremely illustrative, one cannot rotate or slice this image. In this paper, we show how this type of technique can be implemented on 3D data with the ability to rotate and slice interactively.</p><p>The method we describe in this paper uses a skeleton path, an abstraction of the volumetric model, as the control structure for traversal of the dataset. This enables the user to explore different parts of the dataset, while preserving the context of the visualization. Applications of dataset traversal are effective visualization of convoluted structures, such as aneurysms, or the simulation and animation of flow in vascular datasets. It can also be used for surgery and medical treatment pre-planning, or as a teaching tool, to allow a student to discover new features. There is also a basis in cognition that suggests that this type of traversal could aid in comprehension and shape understanding. Psychological evidence suggests that traversing a complex dataset seems to be an essential part of understanding 3D shape. The cognitive process obtains local explanations along the object as one traverses it to finally arrive at a global explanation <ref type="bibr" target="#b20">[21]</ref>. Furthermore, skeletons are essential attributes of geons, simple and primitive volumes which are the basic elements of object recognition, according to Hummel and Biederman <ref type="bibr" target="#b11">[12]</ref>. Techniques for navigation of datasets have been proposed for, e.g., virtual colonoscopy, where the user's viewpoint is traversed along a path. Such techniques can be described as inside-out (ego-centric) visualizations of the dataset. Here we propose an outside-in (exocentric) visualization, where the exploration is enabled by moving a transfer function, in addition to independent control of the user's viewpoint.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The methodology presented in this paper is related to a number of technologies in scientific visualization. These include spatial transfer functions <ref type="bibr" target="#b4">[5]</ref>, focus+context visualizations, interactive rendering using commodity hardware and virtual colonoscopy <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b27">28]</ref>. As a visualization that conveys motion, it is related to kinetic visualization <ref type="bibr" target="#b17">[18]</ref>, where a particle system is animated along the surface of a static volumetric model to convey shape. In our approach, we help to convey structure with the traversal of a transfer function along the interior of the volumetric model. This work relates to the spatial transfer functions defined in Chen et al. <ref type="bibr" target="#b4">[5]</ref>. A spatial transfer function is defined as a function that applies a geometrical transformation of every point p in euclidean space. A temporal spatial transfer function is defined as a geometrical transformation over time. The work here can be thought of as a temporal spatial transfer function, applied along a defined path, or a "motion-controlled transfer function". This transfer function defines a scalar value, such opacity and color, as a function of time and the position of a voxel. In contrast, the spatial transfer function in Chen et al. <ref type="bibr" target="#b4">[5]</ref> does not move the transfer function along a path, but rather applies a transfer function to the transformed voxels, according to some geometrical transformation.</p><p>The exploration of volume datasets sometimes requires the ability to visualize a focused portion of the volume while preserving some view of the rest of the volume (context). This is often known as focus + context visualization. There are many ways to provide this type of visualization, including segmentation <ref type="bibr" target="#b8">[9]</ref>, cutting planes, importance-driven <ref type="bibr" target="#b26">[27]</ref> and selective volume rendering <ref type="bibr" target="#b22">[23]</ref>, illustrative techniques <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b16">17]</ref>, features maps <ref type="bibr" target="#b18">[19]</ref>, and warping techniques such as fish-eye views <ref type="bibr" target="#b13">[14]</ref>. Cutting planes are very important in 3D visualization, but they can be difficult to position accurately, especially for convoluted structures such as an aneurysm. Mueller et al. <ref type="bibr" target="#b18">[19]</ref> present an approach to modify the transfer function of a segmented region by migrating the density range of the region of interest. Volume exploration is possible through feature maps, which associate a set of interesting features with a particular density range, so that they can be isolated smoothly from other similar features. This approach becomes impractical for the interactive traversal of a transfer function, since a new region of interest must be computed at each frame. Furthermore, the scalability of this approach is limited to a few features, because of transfer function complexity.</p><p>Importance-driven rendering <ref type="bibr" target="#b26">[27]</ref> provides an alternative for fo-cus+context visualization for both segmented and non-segmented datasets. Each voxel is assigned an importance value, which translates to a given visibility priority during a two-pass rendering process. One can think of our method as a way of defining importance on a portion of the volume. And certainly, importance-based rendering can be implemented on top of this method.</p><p>In this paper, we decompose a volume to access it via a transfer function. There has been work in volume decomposition, most of which is for rendering speed-up and texture compression <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b19">20]</ref>. In our work, texture decomposition help us explore advanced rendering capabilities. Li and Kaufmann <ref type="bibr" target="#b14">[15]</ref> and Li et al. <ref type="bibr" target="#b15">[16]</ref> devise a mechanism to speed up the rendering process by decomposing the texture into axis-aligned boxes. The partition enables empty space skipping and occlusion clipping. Engel et al. <ref type="bibr" target="#b6">[7]</ref> use a different approach to reduce the number of slices needed for rendering, using slabs rather than slices. Pre-integrated classification is used to improve image quality. Jankun-Kelly et al. <ref type="bibr" target="#b12">[13]</ref> and Park et al. <ref type="bibr" target="#b19">[20]</ref> use a k-d tree decomposition of axis-oriented boxes to speed up visualization of adaptive mesh refinement data. Unlike these approaches, we decompose the volume along a selected path. Because of the geometry decomposition along the bones, our approach enables the traversal of a transfer function at interactive rates, for segmented and non-segmented volumetric datasets.</p><p>The use of skeleton paths to guide traversal of datasets has been proposed for other applications, such as virtual navigation and virtual colonoscopy <ref type="bibr" target="#b10">[11]</ref>, also readily available as commercial products such as in GE <ref type="bibr" target="#b9">[10]</ref>, Siemens <ref type="bibr" target="#b24">[25]</ref> and Viatronix <ref type="bibr" target="#b25">[26]</ref>. In such applications, the path is a set of connected centerlines that are located at a distance from the surface appropriate for collision-free navigation <ref type="bibr" target="#b28">[29]</ref>. This type of traversal can be described as an insideout visualization, where the user's viewpoint is traversed along the volumetric dataset. In contrast, our approach is an outside-in visualization, where the transfer function is traversed along the path, while the user's viewpoint is independent of the traversal. Although centerline algorithms are usually required for skeleton determination, it is not a requirement for transfer function traversal. As an aid for visualization the path for traversal might be along certain structures of the volume, e.g., bones, vascular structures, and not necessarily along the centerline of the volume.</p><p>The use of skeletons has been proposed in Singh and Silver <ref type="bibr" target="#b22">[23]</ref> and Singh et al. <ref type="bibr" target="#b23">[24]</ref> to allow interactive manipulation of volumetric models. Singh <ref type="bibr" target="#b22">[23]</ref> showed that it is possible to apply a different transfer function to a particular bone in the skeleton. Here, we generalize that approach and define any path as a control structure for guiding a transfer function. This can be combined with the ability to rotate and manipulate a volume as an aid to effective visualization.</p><p>The rest of the paper is organized as follows: Section 3 describes the theory for this work and the different processes involved in traversal rendering. We then describe different challenges of applying this process, such as obtaining smooth transitions and applying multiple traversals. Section 4 shows results of our approach with a number of volume datasets, as well as performance results. Section 5 describes how our approach can be used to provide focus+context visualization. Finally, Section 6 presents conclusions and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THEORY</head><p>This paper presents a methodology for dataset traversal using motion-controlled transfer functions. We define dataset traversal as the process of traveling along a given region of the dataset for the purpose of visualization. This traversal is usually performed on certain regions or features of interest, that may or not be segmented from the rest of the dataset. In order to guide this traversal along certain regions, we make use of a skeleton path, which is an abstract representation that captures the essential shape of the volumetric model, or some of its interesting features. In general, traversal paths form an undirected graph, where each link is usually referred to as a bone, and each vertex is called a joint. An individual traversal is a walk within that graph from a given source to a destination bone. Alternatively, a traversal may be defined as the subtree generated by a graph search algorithm, such as depth-first search (DFS) or breadth-first search (BFS). At each stage or frame of the traversal, a number of bones are selected, referred to as the traversed bones.</p><p>Once we apply a different transfer function to the voxels in the traversed bones, it is possible to traverse the entire dataset by moving along the path. For this reason, we refer to such transfer functions as motion-controlled transfer function.</p><p>The attributes for color RGB and opacity α of a voxel can be computed as A RGBα = Φ(p,t) <ref type="bibr" target="#b4">[5]</ref>, where p is the position of the voxel in euclidean space and t is time. Notice that in this case, since no geometric transformation is performed, the function Φ maps from R 4 (euclidean space and time) to a RGBα tuple. We can extend this to the case where geometrical transformations can be applied to the points in the dataset, as in Chen et al. <ref type="bibr" target="#b4">[5]</ref>. We discuss this case later in section 3.5.3</p><p>Before traversal-rendering of a dataset, a preprocessing stage is necessary. The preprocessing stage takes a volumetric model and computes a texture decomposition along the bones of its skeleton, or a user specified path structure. After preprocessing, the user can select a path, either automatically or interactively, and rendering is performed using standard 3D texture graphics. Rotation, slicing and animation of the volume can be performed interactively, while traversing the transfer function. These stages are described further below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Path structure specification</head><p>The first step of the preprocessing stage is to determine an overall path structure from the volumetric object, from which the traversal path is chosen. This structure is a shape abstraction that defines the essential topology of an object. Path structures can be defined interactively by the user or determined automatically, e.g., using a skeleton. This skeleton can be extracted using a number of methods, and any type of skeleton path is suitable for this application. For this paper, we used the methods in Gagvani <ref type="bibr" target="#b7">[8]</ref>, which is a volume thinning algorithm that obtains a centerline representation of the volume, and in Chuang <ref type="bibr" target="#b5">[6]</ref>, which uses potential fields. The different parameters controlling the skeletonization process can affect the granularity of the animation. Examples of skeletons are shown in Figures 8(b), 11(a), 12(a), and 13(a). For the case of amorphous data, skeletons are usually more difficult to obtain. However, it is still possible for the user to select a path given the appropriate interaction widgets. Here, we assume that any path, skeleton-based or user-defined, is valid for traversal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Texture Decomposition</head><p>Traditional texture-based volume rendering uses view-aligned polygons, known as proxy geometry, to slice the volume. Once the texture coordinates for the vertices of those slices are computed, the graphics pipeline finds the correct texture via 3D interpolation. This is depicted in <ref type="figure" target="#fig_1">Figure 3</ref>(a). An improvement to this mechanism is proposed in Li et al. <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b14">15]</ref>, by decomposing the texture into axis-aligned subvolumes, using octrees or binary space partitioning. A speed-up is obtained in sparse volumes because it is possible to skip empty spaces that otherwise must be transferred into the graphics memory. As noted in Li et al. <ref type="bibr" target="#b15">[16]</ref>, an excessive number of subvolumes may hinder the performance, thus it is necessary to group a number of subtextures into larger 3D textures. In our work, decomposition is possible by means of the skeleton path. Unlike the approach in Li et al. <ref type="bibr" target="#b14">[15]</ref>, we decompose the proxy geometry, rather than the texture space. The sliced geometry consists on a set of cuboids whose axes are oriented along each of the bones <ref type="figure" target="#fig_1">(Figure 3(b)</ref>). Similar to texture decomposition, this improves the rendering rate by skipping empty space during slice compositing. However, because the decomposition is performed along the shape of the volumetric model, this makes it now possible to create meaningful visualizations of the dataset. For larger datasets that do not fit into texture memory, or sparse volumes, it may be desirable to also partition the texture space.</p><p>In this paper, we follow the approach of geometry decomposition and a single 3D texture for the cases when the texture fits into graphics memory. In addition to using cuboids, the joints between bones are modeled using mid-plane geometry <ref type="bibr" target="#b3">[4]</ref>. This type of geometry is simple enough to support interactivity, and prevents possible cracking of the dataset when manipulating the bones, as described in Singh et al. <ref type="bibr" target="#b23">[24]</ref>. It is important to note that for adjacent geometries, the common plane is composited twice. This results in clear artifacts in the rendering. To resolve this, we use the stencil buffer. Each slicing plane renders its own stencil value so that no voxel is composited twice in the same slicing plane. This also resolves artifacts when cuboids overlap, e.g. during manipulation of the model. Furthermore, using the stencil buffer we can achieve focus+context views, as described in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Selection of the Traversal Path</head><p>After texture decomposition, it is possible for the user to determine the path for the transfer function. This can be done either automatically or interactively. Automatic traversal can be performed by applying a recursive search strategy on the graph structure that constitutes the skeleton. Depth first search (DFS) and breadth-first search (BFS) are two common methods. For example, BFS can be used for simulating flow of blood in arteries and veins. Some user interaction may be needed to select the root of the traversal. An- other strategy is to let the user select a source and destination bone and compute the path resulting from running a shortest path distance algorithm. <ref type="figure" target="#fig_2">Figure 4</ref> depicts a screenshot of the VolEdit <ref type="bibr" target="#b23">[24]</ref> application for volume manipulation, as the user selects a traversal path. The bones are highlighted as an aid for the user to select the right bones, and the traversal path is rendered with a different color.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Standard 3D Texture Rendering</head><p>The rendering stage is an extension of standard texture-based volume rendering. Instead of axis-oriented cubes, we sample the boneoriented cuboids along the view direction and blend the slices in a back-to-front fashion. <ref type="figure" target="#fig_1">(Figure 3(b)</ref>).</p><p>In order to correctly composite the slices of each cuboid, it is necessary to ensure that slices are rendered back to front along the view direction. This is achieved in a two-pass rendering algorithm with the aid of a data structure that indexes polygons with respect to their depth coordinate. First, the slices from each cuboid are stored in the back-to-front data structure. After all cuboids have been processed, the polygons in the data structure are traversed in order and rendered. Since the depth bounds are known and the sampling distance is fixed, this can be done in linear time. This is essential for interactive volume rendering, since re-slicing and resorting must be performed when the viewpoint changes or when the user manipulates the bones ( <ref type="bibr" target="#b23">[24]</ref>).</p><p>Transfer functions are usually applied as a lookup color table. This table defines the color and transparency associated with each density value of the volume. This can be performed with the OpenGL command glColorTable, but recent graphic cards do not support this extension, and transfer functions are applied through dependent lookups, using texture shaders or fragment programs. Here, we need to apply a different transfer function to different regions of the skeleton path, as described in the following section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Traversal Rendering</head><p>Once a traversal path has been selected, it is necessary to render the traversed bones with a different transfer function. Let us consider a given bone b, b ∈ B, where B is the set of bones in the path, as shown in <ref type="figure" target="#fig_3">Figure 5(a)</ref>. A connectivity function C : R 3 → B maps the position of a voxel to a particular bone, i.e., C(p) = b. A dataset traversal can be defined as a function T that maps an instance in time t with a set of bones in the path B t . That is, a dataset traversal is defined as:</p><formula xml:id="formula_0">T : R → B, such that T (t) = B t ⊆ B</formula><p>Then, the transfer function for a given voxel can be defined as</p><formula xml:id="formula_1">A result (p,t) = A i , C(p) ∈ T (t) A 0 , otherwise<label>(1)</label></formula><p>where A i is the transfer function selected for traversal i, i ∈ {1, 2, ..., M} with M the number of traversals, and A 0 is the original transfer function applied to the dataset. For hardware rendering, however, we do not solve Equation 1 for each voxel. Rather, we apply it to the individual cuboids as they are processed into view-aligned slices. The back-to-front data structure for the slices is extended to maintain the source bone for each slice. When the slice is being rendered, a proper transfer function is found according to a simpler equation:</p><formula xml:id="formula_2">A result (b,t) = A i , b ∈ T (t) A 0 , otherwise<label>(2)</label></formula><p>This equation assigns the traversal transfer function if bone b corresponds to one of the bones currently being traversed, or the original transfer function otherwise. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.1">Smooth Transitions</head><p>The method described above results in clear discontinuities between the traversal and the dataset transfer functions, as seen in <ref type="figure" target="#fig_3">Figure 5</ref>(a). Although this may be required for certain applications, such as the simulation of the flow of a substance into the dataset, other applications might require the transition to be smooth. One may also want to smooth along the width of the path segment, so that voxels closer to the center of the bone appear different than the ones in the outside.</p><p>In the first case, the transitions along the direction of the traversed bones can be smoothed via interpolation. Let us denote the transfer function for traversal i as A i and the original transfer function as A 0 . Then, for the bones in a boundary of the traversed bones, called the falloff region, an intermediate transfer function A i,α is computed as:</p><formula xml:id="formula_3">A i,α = αA i + (1 − α)A o ,<label>(3)</label></formula><p>which performs linear interpolation. Gaussian smoothing can be obtained by mapping the interpolant α into 1 − g σ (5σ α), where</p><formula xml:id="formula_4">g σ (x) = e −x 2</formula><p>2σ 2 is a zero-mean gaussian filter with standard deviation σ . The 5σ scaling factor is used to approximate the gaussian interpolant to 1 when α = 1. Note that when α = 1, the transfer function corresponds to A i , and when α = 0, to A 0 . By setting different values for the falloff region and σ , it is possible to obtain traversals of different size and different visualization effects. For instance, a sufficiently large traversal with a BFS order can be used to simulate a flood-fill of a dataset.</p><p>This solution works on a per-cuboid basis. Whenever a cuboid is processed, the proper transfer function is obtained depending on the position of the bone in the traversal and applied to the corresponding slices. This results in a transfer function applied uniformly to an entire bone, that is, the voxels within each cuboid will be rendered with the same transfer function. For a sufficiently large number of bones, the transition may be smooth, but in a close-up view of the volume, or for large bones, it results in a flat transition, as the sampling of the blending function becomes noticeable ( <ref type="figure" target="#fig_3">Figure 5(c)</ref>). Furthermore, this approach results in poor transitions for bones of varying length.</p><p>Some applications may require the smooth transition to be of constant length, regardless of the length of the traversed bones. For this purpose, we propose the use of virtual bones, which split the traversal bones into smaller bones of constant length. We call them virtual bones since they are not part of the original path structure, and are only needed for the region of interest. Splitting the entire path into equally long bones would be unnecessary and would result in a decreased performance. Splitting can be performed just before the slicing stage. The polyline formed by the bones in the falloff region is subdivided into segments of length d, where d is the sampling size of the blending function used for the transition. The virtual bones create small cuboids along the skeleton path. After the new cuboids are found, the new virtual bones can be rendered with the same algorithm described above. Two different implementations of the above formulation can be realized. The first one uses a set of lookup tables for each traversal. Once the slices are rendered, the transfer function is applied by enabling the right texture or lookup table. Another implementation can be obtained with the use of dependent textures and fragment shaders. Instead of having different textures for each transfer function, a single texture can be used. A dependent lookup is used to retrieve the appropriate color using the voxel's density, the traversal itself (normalized to the interval [0, 1]) and the interpolant (α) as texture coordinates. For this implementation, it is not necessary to include virtual bones, since the α value can be interpolated along its length to achieve the desired falloff.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.2">Multiple Traversals</head><p>Many applications may require multiple simultaneous traversals. This can be easily implemented by extending the above techniques for looking up into multiple sets of transfer functions. Having additional transfer functions poses a new problem. When two traversals intersect, an appropriate transfer function must be applied to represent the desired effect of transfer function intersection. Different schemes can be applied. For instance, one may simply use one of the transfer functions for the intersection bones, having the effect of one traversal simply overlapping the other. However, for anima- tion it may be necessary to blend the intersecting transfer functions. One example is the animation of blood flow. It is common to represent arterial blood with a red color and venous blood in blue. Blood which contains a mix of both (as it may occur for certain cardiovascular disorders), are usually represented in shades of purple <ref type="bibr" target="#b0">[1]</ref>. One mechanism to produce blended transfer functions is to precompute several intermediate transfer functions for different levels of overlapping. However, this is impractical when the number of traversals grow.</p><p>Here, we propose a solution that requires no additional preprocessing of the transfer functions and runs at interactive rates. When two transfer functions must be rendered for the same cuboid, we interlaced them in the slices. That is, we apply transfer function A 1 to odd-numbered slices and A 2 to even-numbered slices. In our experiments, it turns out to be as fast as applying a single transfer function and only adds a constant overhead the the render time. However, this approach may produce rendering artifacts because each transfer function is applied to half of the slices. For example, artifacts may arise when the transfer functions negate themselves. Some of these problems may be solved by over-sampling the slicing on the highlighted bones. Note that this strategy can be extended to the case of n overlapping transfer functions. A transfer function A i is applied to the slices whose numbering is equal to i mod n.</p><p>Multiple traversals prove to be a useful mechanism to simulate flow and represent different stages of a certain process. For simple transfer functions, the interleaving mechanism proves to be very effective for blending two or more transfer functions. For instance, <ref type="figure" target="#fig_6">Figure 7</ref> shows four frames from a traversal of two transfer functions. Notice the blending of the colors in the overlapping region. This blending is a useful tool in animation and illustration to maintain the effect of movement and smooth navigation of a transfer function along a path. Other examples are shown in <ref type="figure" target="#fig_1">Figures 1 and  13(b)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.3">Rotation and Slicing</head><p>As with traditional texture-based volume rendering, one may rotate or clip the entire volumetric dataset. Rotation of the dataset (or the user's viewpoint) requires the re-computation of view-aligned slices. Global clipping of the entire dataset can be performed easily using the OpenGL command glClipPlane. More interesting is the ability to rotate and slice locally on individual cuboids. The rotation of a single bone enables the user to manipulate and animate the dataset and to reconfigure or re-pose its features. This combined with the traversal of transfer functions helps to visualize complex volumetric structures. Note that in the case of local rotation, reslicing is only needed for the modified cuboids. The decomposition of the model into cuboids also allows clipping or slicing individual parts of the dataset. This can also be accomplished using enabling the OpenGL clip planes on the desired cuboids. The clipping of individual cuboids is useful for rendering hidden parts of a dataset while maintaining the surrounding features intact.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5.4">Parameters and user control</head><p>A dataset traversal is a multidimensional object defined in terms of the following parameters per path: rendering style R (Direct Volume Rendering DVR, Volume Shading SHD or Isosurface ISO), the transfer function itself T , type of traversal tt (DFS, BFS or PATH), start and end points P 0 and P 1 , length L, length of falloff region L f , and speed s. Other possible parameters (not shown here) include width along the bone and importance. Users control these parameters with interaction widgets. Some of these parameters are incorporated into widgets, and we are currently devising interaction widgets for the others. In this paper we focus on the definition and implementation of dataset traversals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>We have experimented with our approach on a number of datasets, including the "aneurysm" (256 3 ), the "colon" (205x133x261), the "bonsai" (256 3 ), the "lobster" (256 2 x64) and the "visible human", at low resolution (128x512x64). The traversal paths were obtained from a skeleton of 197, 47, 108, 38 and 22 bones, respectively. Our test configuration consists of a Pentium 4 1.7 Ghz PC with 512 MB RAM, equipped with a GeForce 3 with 64MB. The results shown here were obtained with a 700x600 viewport, using 3D textures with a slice distance of 0.5 voxel. <ref type="figure" target="#fig_7">Figure 8</ref> shows an example traversal of the aneurysm dataset. The original dataset is highly convoluted, and it is difficult to understand the 3D structure even when rotating the dataset. When the traversal transfer function is applied, the highlighted region helps to disambiguate the different branches and vascular structures. <ref type="figure" target="#fig_7">Figure 8(a)</ref> shows the cuboid decomposition resulting from our approach. In this case, the cuboids are of constant width, but this is not the general case. Cuboids are connected with mid-plane geome-  <ref type="figure">Figure 9</ref>: Frames rate for different datasets using various methods: Our decomposition approach without rotation, decomposition with rotation, and without geometry decomposition (Traditional)</p><p>tries <ref type="bibr" target="#b3">[4]</ref>, not shown in the figure. . In this case, a DFS traversal is computed for traversal, as depicted in the first frame of the sequence. A transfer function in green is used to visualize the bones by making certain voxels transparent. Due to smoothing, this sequence has the effect of slow disintegration of the skin and tissues to reveal the bones. Simple phong illumination is obtained using the OpenGL fragment shaders to compute the modulation of a infinite light with the volume gradient. <ref type="figure" target="#fig_1">Figure 13(a)</ref> shows a traversal of the bonsai dataset using multiple paths and transfer functions. Each of these has different values for parameters T, L, L f , s, P 0 and P 1 , with R=SHD, and tt= PATH. The overlapping transfer functions are blended using the method discussed in section 3.5.2, and results in a holiday light effect, as shown in <ref type="figure" target="#fig_1">Figure 13(b)</ref>. These examples can be shown in the video that accompany this paper, and at http://www.caip.rutgers.edu/~cdcorrea/traversal</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Performance</head><p>One of the applications of our approach is the improvement on rendering rate due to geometry decomposition along the bones. This results in speed up for sparse datasets, as shown in <ref type="figure">Figure 9</ref>. For traversal of datasets, it may not be necessary to change the viewpoint. In fact, traversal of a transfer function aids to the visualization of convoluted structures without the need to rotate the dataset. This can be exploited by the rendering algorithm to allow fast traversals without the added computation of re-slicing of the volume. <ref type="figure">Figure 9</ref> shows these results. We compare the rendering rate for a number of datasets for our decomposition approach without rotation (i.e., only traversal), with rotation, and with no decomposition. Rendering of multiple traversals has a constant overhead per traversal. In our experiments each additional traversal incurred in an overhead of 1.5 to 2 ms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">FOCUS+CONTEXT VIEWS</head><p>Traversal paths do not need to be connected or non-overlapping. In fact, multiple (disconnected) path structures for the same volumetric model, can be used to highlight different features of the dataset while providing context. Consider the case of the visible human heart, as depicted in <ref type="figure">Figure 1</ref>. This dataset is a portion of the visible human dataset. A skeleton has been found for the heart and the arteries after segmentation and used as the path structure, in order to simulate flow of blood (focus). The resulting cuboids can be rendered from this skeleton (only the heart and vessels are rendered). However, one may want to also render the torso, in order to provide context. Applying a second skeleton path to the remaining features accomplishes this. A transfer function for this new path can be chosen so as to allow the visualization of the vessels inside. Traversals are used to illustrate the flow of venous blood through the inferior and superior vena cava into the heart and through the pulmonary arteries. Similarly, another set of paths guide the animation of arterial blood flowing through the aorta. Because the cuboids from the two skeletons overlap along the arteries and veins, the corresponding voxels will be composited twice. One way to prevent this is by choosing carefully the transfer functions so as to avoid the overlapping. Another mechanism is to use the OpenGL stencil buffer. After slicing the cuboids, every slice is tested against the stencil buffer such that the test fails whenever another slice along the same Z depth was rendered first. This effectively avoids compositing the overlapping slices. For proper rendering of the traversal, the slices from the context traversal should be rendered before the others (focus). This is true if the sorting algorithm for the back-to-front compositing process is stable. <ref type="figure">Figure 10(a)</ref> shows the process of slice interleaving for a set of two skeletons. <ref type="figure">Figures 10(b)</ref> and <ref type="bibr">10(c)</ref> show the results of interleaving with and without the stencil buffer. We can achieve an importance-driven style rendering <ref type="bibr" target="#b26">[27]</ref>, by leaving the stencil buffer on for all slices between the viewer and the selected bones <ref type="figure">(Figure 10(d)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS AND FUTURE WORK</head><p>We presented a methodology for interactive traversal of volumetric datasets via a motion-controlled transfer function. Dataset traversal refers to the exploration of a set of features in a dataset along a path. This is common in medical illustration to represent flow, enhance interesting parts and improve visualization. In this paper, we move the transfer function along a path, by applying the transfer function to the voxels connected to the bones in the path.To make this interactive, we decompose the volume along a path into cuboids. We have shown that this decomposition helps to obtain a rendering speedup compared to traditional texture-based volume rendering. Furthermore, traversal rendering provides a mechanism to visualize convoluted structures without the need to rotate the dataset, which.results in a higher rendering speedup. We have also shown that our approach can be used to obtain focus+context visualizations. This is possible by traversing multiple overlapping skeleton paths at the same time, and combining the results in the rendering pipeline with the stencil buffer. Our results presented here show that traversal rendering can produce improved visualizations for interactive exploration. As part of the future work, we plan to incorporate our approach with the framework for spatial transfer functions in Chen et al. <ref type="bibr" target="#b4">[5]</ref>. Other directions for future work are the extension of our decomposition approach to support massive datasets and futher improvements to the rendering process. We plan to extend our method to enable the traversal of importance along a path, in a similar fashion to the method for transfer functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">ACKNOWLEDGEMENTS</head><p>We would like to thank Meaghan Brierley for the images of the Arteriovenous Malformations animation <ref type="bibr" target="#b1">[2]</ref>. We gratefully acknowledge the support from NSF(0118760) and the United States Air Force (Brooks). </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Two frames from a medical illustration animation of Arteriovenous Malformations. In the left figure, red arrows are used to animate flow of arterial blood. In the right figure, blue arrows represent venous blood (courtesy of Meaghan Brierley. Copyright c , 2000, url: http://brainavm.oci.utoronto.ca/swf/intro.html) Please see supplementary material on conference DVD. IEEE Visualization 2005 October 23-28, Minneapolis, MN, USA 0-7803-9462-3/05/$20.00 ©2005 IEEE.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Geometry and texture decomposition. (a) Standard 3D texture (no decomposition). (b) Geometry decomposition into cuboids along the bones of a path. Note that the texture space remains as a single large 3D texture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Path selection in the VolEdit program. The green lines highlight the selected path.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Smooth transitions between transfer functions. (a) Flat transition between bones b i−1 and b i (b) Ideal smoothing using a gaussian function over the falloff bones b i−2 and b i−1 . (c) Sampled smoothing of the gaussian function (d) Smoothing is improved by adding virtual bones to even out the sampling function</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Smooth Transfer function transition for the aneurysm dataset. (a) Falloff region (b) Flat transitions (c)-(e) smoothing with 15, 30 and 60 virtual bones</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 (</head><label>5</label><figDesc>d) illustrates the use of virtual bones to improve the traversal rendering. Figure 6 shows the result of applying different techniques for the "aneurysm" dataset, over the fall-off region highlighted in Figure 6(a). Figure 6(b) shows the flat transition resulting of sampling the blending function at every bone. Figure 6(c)-(e) shows the smoothing obtained by adding 15, 30 and 60 virtual bones, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Multiple traversals of the aneurysm dataset. Transfer function T 1 (blue) is traversed from left to right, while T 2 (red) is traversed in the opposite direction (a). The two traversals overlap and are blended (purple region) (b) The two traverals continue their path (c) until they no longer overlap (d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Traversal of the aneurysm dataset. (a) Cuboid decomposition (b) Selection of traversal. The bones in yellow indicate the selected path (c)-(d) Two frames from the aneurysm traversal of a red-colored transfer function</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 (</head><label>8</label><figDesc>b) shows the different paths of the aneurysm dataset, with the traversal path highlighted in yellow. Figures 8 (b-d) show several stages of the traversal (R = DVR, T =red TF, tt = PATH, L = 10, L f = 3, P 0 = start, P 1 = end), The traversal is rendered at approximately 20 fps. Another example is the traversal of the human colon, as depicted in Figure 11(b) (R = DVR, T = yellow-ish TF, tt = PATH, L = 11, L f = 5). The traversal follows a single path, as depicted in the first image. A different transfer function, in yellow, helps to identify different parts of the volume. Figure 12(b) shows a traversal sequence of the visible male dataset (R = SHD, T = green bones, tt = DFS, L = 42, L f = 6)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 10 :Figure 11 :Figure 12 :Figure 13 :</head><label>10111213</label><figDesc>Juxtaposition of skeletons and volumes for focus+context visualization of the visible human heart. (a) Two different skeletons (one for veins and arteries, one for the torso) are used to merge slices from different features. (b) Correct compositing using the stencil buffer in (a) (c) Compositing without the stencil buffer. (d) Cutaway view of the vessels using the stencil buffer along the entire view direction. Traversal of the colon dataset. (a) Skeleton and traversal path (b) A transfer function in yellow along the path. Traversal of the visible male dataset. (a) Skeleton and DFS traversal path. (b) Frames from the traversal sequence. Multiple traversals on the bonsai dataset (a) Skeleton (b) Blending of multiple traversals produce a holiday-lights effect</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<ptr target="http://www.amhrt.org/presenter.jhtml?identifier=1303" />
	</analytic>
	<monogr>
		<title level="j">American Health Association. Pulmonary atresia</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Arteriovenous malformations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brierley</surname></persName>
		</author>
		<ptr target="http://brainavm.oci.utoronto.ca/swf/intro.html" />
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Illustrative context-preserving volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bruckner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grimm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kanitsar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gröller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. EuroVis</title>
		<meeting>EuroVis</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Layered construction for deformable animated characters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Chadwick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Haumann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Parent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH &apos;89</title>
		<meeting>SIGGRAPH &apos;89</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1989" />
			<biblScope unit="page" from="243" to="252" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Spatial transfer functions: a unified approach to specifying deformation in volume modeling and animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Winter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cornea</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Volume Graphics &apos;03</title>
		<meeting>Volume Graphics &apos;03</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Skeletonization of three-dimensional object using generalized potential field</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chuang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Tasi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1241" to="1251" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">High-quality pre-integrated volume rendering using hardware-accelerated pixel shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. HWWS &apos;01</title>
		<meeting>HWWS &apos;01</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Parameter-controlled volume thinning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Gagvani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CVGIP: Graph. Models Image Process</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="149" to="164" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">High-quality two-level volume rendering of segmented data sets on consumer graphics hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hadwiger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;03</title>
		<meeting>IEEE Visualization &apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="301" to="308" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ge Healthcare</surname></persName>
		</author>
		<ptr target="http://www.gehealthcare.com" />
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Virtual voyage: interactive navigation in the human colon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Muraki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH &apos;97</title>
		<meeting>SIGGRAPH &apos;97</meeting>
		<imprint>
			<publisher>ACM Press/Addison-Wesley</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Dynamic binding in a neural network for shape recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Hummel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Biederman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Psychological Review</title>
		<imprint>
			<biblScope unit="volume">99</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="480" to="517" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Deploying web-based visual exploration tools on the grid</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Jankun-Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shalf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">W</forename><surname>Bethel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput. Graph. Appl</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="40" to="50" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A magnification lens for interactive volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lamar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Pacific Graphics PG&apos;01</title>
		<meeting>Pacific Graphics PG&apos;01</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page">223</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Texture partitioning and packing for accelerating texture-based volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Graphics Interface</title>
		<meeting>Graphics Interface</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Empty space skipping and occlusion clipping for texture-based volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;03</title>
		<meeting>IEEE Visualization &apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Nonphotorealistic volume rendering using stippling techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rheingans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;02</title>
		<meeting>IEEE Visualization &apos;02</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="211" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Using motion to illustrate static 3d shape-kinetic visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">B</forename><surname>Lum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Stompel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="115" to="126" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Volume exploration made easy using feature maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lakare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Visualization: Extracting Information and Knowledge from Scientific Data Sets</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Case study: interactive rendering of adaptive mesh refinement data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Siddavanahalli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;02</title>
		<meeting>IEEE Visualization &apos;02</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="521" to="524" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">In the mind&apos;s eye: Julian hochberg on the perception of pictures, film, and the world. Piecemeal Perception and Hochbergs Window: Grouping of Stimulus Elements over Distances</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Pomerantz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Interactive volume on standard PC graphics hardware using multi-textures and multi-stage rasterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rezk-Salama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Greiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. HWWS &apos;00</title>
		<meeting>HWWS &apos;00</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Interactive volume manipulation with selective rendering for improved visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Symposium on Volume Visualization and Graphics &apos;04</title>
		<meeting>IEEE Symposium on Volume Visualization and Graphics &apos;04</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="95" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Real-time volume manipulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cornea</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Volume Graphics &apos;03</title>
		<meeting>Volume Graphics &apos;03</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="45" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
		<ptr target="http://www.medical.siemens.com" />
	</analytic>
	<monogr>
		<title level="j">Siemens Medical Solutions</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Viatronix</surname></persName>
		</author>
		<ptr target="http://www.viatronix.net" />
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Importance-driven volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kanitsar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Eduard</forename><surname>Gröller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;04</title>
		<meeting>IEEE Visualization &apos;04</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="139" to="145" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A new visualization method for virtual colonoscopy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Vos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Serlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Gelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Truyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Gerritsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stoker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vossepoel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Medical Image Computing and Computer-Assisted Intervention -MICCAI</title>
		<imprint>
			<biblScope unit="page" from="645" to="654" />
			<date type="published" when="2001" />
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Distance-field based skeletons for virtual navigation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Dachille</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization &apos;01</title>
		<meeting>IEEE Visualization &apos;01</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="239" to="246" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
