<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Parallel Edge Splatting for Scalable Dynamic Graph Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2011-10-23">23 October 2011</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Burch</surname></persName>
							<email>michael.burch@visus.uni-stuttgart.de</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Stuttgart</orgName>
								<address>
									<settlement>Germany</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Corinna</forename><surname>Vehlow</surname></persName>
							<email>corinna.vehlow@visus.uni-stuttgart.de</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Stuttgart</orgName>
								<address>
									<settlement>Germany</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fabian</forename><surname>Beck</surname></persName>
							<email>beckf@uni-trier.de.manuscript</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Stuttgart</orgName>
								<address>
									<settlement>Germany</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">University of Trier</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Stephan</forename><surname>Diehl</surname></persName>
							<email>diehl@uni-trier.de.manuscript</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Stuttgart</orgName>
								<address>
									<settlement>Germany</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">University of Trier</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Weiskopf</surname></persName>
							<email>daniel.weiskopf@visus.uni-stuttgart.de</email>
							<affiliation key="aff0">
								<orgName type="institution">University of Stuttgart</orgName>
								<address>
									<settlement>Germany</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Parallel Edge Splatting for Scalable Dynamic Graph Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2011-10-23">23 October 2011</date>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2011; accepted 1 August 2011; posted online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:01+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index Terms-Dynamic graph visualization</term>
					<term>graph splatting</term>
					<term>software visualization</term>
					<term>software evolution</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a novel dynamic graph visualization technique based on node-link diagrams. The graphs are drawn side-byside from left to right as a sequence of narrow stripes that are placed perpendicular to the horizontal time line. The hierarchically organized vertices of the graphs are arranged on vertical, parallel lines that bound the stripes; directed edges connect these vertices from left to right. To address massive overplotting of edges in huge graphs, we employ a splatting approach that transforms the edges to a pixel-based scalar field. This field represents the edge densities in a scalable way and is depicted by non-linear color mapping. The visualization method is complemented by interaction techniques that support data exploration by aggregation, filtering, brushing, and selective data zooming. Furthermore, we formalize graph patterns so that they can be interactively highlighted on demand. A case study on software releases explores the evolution of call graphs extracted from the JUnit open source software project. In a second application, we demonstrate the scalability of our approach by applying it to a bibliography dataset containing more than 1.5 million paper titles from 60 years of research history producing a vast amount of relations between title words.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Relationships among a set of objects are typically modeled as a graph consisting of a set of vertices and a set of edges that connect related vertices. Many of these relational datasets can be found in typical applications, not only limited to small datasets. For example, software systems may consist of hundreds or thousands of hierarchically organized classes connected by method calls and other dependencies, or digital libraries may include millions of papers linked by citations and keywords.</p><p>A major challenge for the graph drawing community is the efficient and effective computation of graph layouts. There are some generally accepted aesthetic graph drawing criteria such as the minimization of edge crossings, the even distribution of nodes in the frame, or the uniformity of graph link lengths <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b16">17]</ref>. Force-directed, orthogonal, or hierarchical layouts aim at optimizing a variety of these criteria.</p><p>The temporal evolution of a graph introduces another interesting aspect to graph drawing but also comes along with further visualization challenges concerning the additional time dimension. The prevailing approach taken by graph drawing researchers is to use animation to represent the time dimension <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b11">12]</ref>. This time-to-time mapping is intuitive but has some substantial drawbacks. The exploration of animated graph diagrams leads to high cognitive efforts due to our limited short term memory <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b32">33]</ref>. For instance, it is difficult to observe trends over longer periods or to compare two non-subsequent time steps. Abrupt changes of the graph might furthermore destroy the viewer's mental image of the graph (mental map).</p><p>Previous research investigated different dynamic graph visualization techniques that show the complete evolution at once in a single image instead of using animation <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b13">14]</ref>. While these approaches largely prevent the problems of animated diagrams mentioned above, they come along with other problems <ref type="bibr" target="#b2">[3]</ref>: due to the limited space that is left for a single graph when drawing all graphs of the sequence in a single diagram, scalability is hard to achieve especially with respect to the number of vertices.</p><p>In this paper, we introduce a single-image visualization technique for exploring dynamic and hierarchically organized graphs, now focusing on scalability. We map each time step of the graph to a narrow rectangular area on screen. The vertices are arranged along the vertical borders of these areas, according to the order implied by the hierarchy. Directed graph edges connect the vertices by straight links starting on the left hand side of the area and ending at the right hand side. In large graphs, this strategy leads to a plethora of overlapping edges. We tackle this problem by applying parallel edge splatting-a technique that transforms the edges to a density scalar field by splatting those edges to the screen. Visualizing this field by color mapping allows us to recognize the trajectories of edges even in quite cluttered areas. The term "parallel" indicates the layout of graph vertices on parallel lines. Parallel edge splatting adopts the idea of density representation from graph splatting <ref type="bibr" target="#b33">[34]</ref>, yet is complementary because we splat edges instead of vertices.</p><p>Our visualization tool provides several interactive features to manipulate and navigate dynamic graph data. With hierarchically structured graph vertices, expanding and collapsing of this hierarchy may be used to aggregate a certain number of nodes and their corresponding relations. The graph data can also be aggregated in the time dimension and filter functions can be applied to only display relations within a given weight interval. Pixel-based elements can be enlarged by a lens function. The tool design follows the information seeking mantra: overview first, zoom and filter, then details-on-demand <ref type="bibr" target="#b29">[30]</ref>. Furthermore, we formalize graph patterns and provide functionality to interactively highlight these patterns.</p><p>In two application scenarios, we demonstrate how the above combination of techniques increases the scalability of the single-image dynamic graph visualizations. First, we show the usefulness of our approach by a comprehensive case study on the evolution of the JUnit open source software system. Second, we analyze the evolution of title words occurring in more than 1.5 million paper titles acquired in the DBLP <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Visualizing dynamic relational data is a challenging task due to a number of visual dimensions to be represented in the same view: vertices, edges, and time. Node-link diagrams are effective for perceiving related objects and solving path-related tasks. However, graph datasets may reach sizes with which traditional graph layout algorithms cannot deal efficiently. A mapping of all edges of a dense graph to a 2D plane leads to visual clutter <ref type="bibr" target="#b28">[29]</ref> caused by many edge crossings, even after applying sophisticated layout algorithms that take various aesthetic criteria for graph drawing into account <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b36">37]</ref>. The time dimension is typically displayed by a natural time-to-time mapping in graph animation <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b11">12]</ref>. Complex algorithms have to be applied to reduce the user's cognitive load, especially to preserve the user's mental map of the graph diagram over time. A recent state-of-the-art report by van Landesberger et al. <ref type="bibr" target="#b35">[36]</ref> surveys existing research and challenges for visualizing large static and dynamic graphs.</p><p>Instead of representing the time dimension in the graph data by animation, we map time to space and show the subsequent graphs in a static diagram. Our approach is inspired by the TimeArcTrees visualization <ref type="bibr" target="#b13">[14]</ref>, where graph nodes are arranged on vertical lines and directed edges are drawn as arcs. In TimeArcTrees, the size of each arc depends on the number of nodes that are located between source and target node, whereas the position of each arc (left or right hand side of the vertical axis) depends on whether the corresponding edge is an upward or downward edge. Visual clutter is reduced by optimizing the arrangement of the nodes. In contrast, the technique presented in this paper uses straight lines instead of arcs to represent the graph edges and splits vertices so that all edges point from left to right.</p><p>Related to TimeArcTrees, the TimeRadarTrees <ref type="bibr" target="#b6">[7]</ref> and the Time-SpiderTrees <ref type="bibr" target="#b13">[14]</ref> approaches use a radial layout and draw each graph of the sequence in an annulus (ring). These single-image dynamic graph visualization techniques are limited to graphs consisting of a few dozens of vertices because each vertex consumes some space on a vertical line or a circumference of a circle. Another approach is to stack a sequence of node-link diagrams on top of each other such that the nodes representing the same vertex are aligned <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b12">13]</ref>. This, however, increases the problem of clutter produced by overlapping visual artifacts.</p><p>The visual representation produced by our technique is visually similar to parallel-coordinate plots <ref type="bibr" target="#b20">[21]</ref>. While polylines in parallel coordinates typically span all coordinate axes, the lines in our approach represent graph edges and are contained within the drawing area of a single graph of the sequence. Therefore, the visual signatures and interpretation differ.</p><p>Similar to the density model of parallel edge splatting, there are density-based variants of parallel-coordinate plots, e.g., <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b37">38]</ref>. In particular, there are some splatting techniques for parallel coordinates <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b39">40]</ref>. Our approach is technically similar to splatting of parallel coordinates, but is based on discrete graph data; vertices are laid out on discrete positions on vertical lines and edges are discrete objects that cover a set of discrete points on the 2D plane. Furthermore, association rules for text mining can be visualized in a way that looks similar to our dynamic graph visualization technique: the elements are arranged on vertical lines; sequence rules connect these elements by straight lines from left to right on a timeline <ref type="bibr" target="#b38">[39]</ref>.</p><p>Van Liere and de Leeuw <ref type="bibr" target="#b33">[34]</ref> introduced a graph splatting technique to transform graph data into a 2D scalar field, which is used as a basis to render a heatmap, a height field, or a set of contours. The main difference to our work is the fact that they only use the vertex information of the graph to generate a splat field. The relationship information-on which our approach is built-is not explicitly visualized. Holten and Van Wijk <ref type="bibr" target="#b19">[20]</ref> used a force-directed edge bundling approach in which a pixel-based representation is applied to emphasize regions with many edges. A similar idea may also be applied to vertically arranged vertices <ref type="bibr" target="#b18">[19]</ref>. Telea and Ersoy use a combination of distance-based splatting and skeletonization to generate image-based edge bundles <ref type="bibr" target="#b31">[32]</ref>. In contrast to our work, they focus on graphs that do not change over time, whereas we focus on time-varying directed graphs. We will discuss work related to our application scenarios in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">VISUALIZATION TECHNIQUE</head><p>Our visualization technique targets the problem of displaying dynamic weighted directed graphs in a single static view. We use parallel vertical axes to place the aligned graph vertices. The initial vertex position follows a predefined hierarchical order if there is any available. Directed graph edges are visually encoded as direct links between two subsequent axes and are oriented from left to right. To overcome the problem of visual clutter in dense graphs, we apply splatting and anti-aliasing to the graph links, obtaining a scalable visualization. Time step after time step of the dynamic graph is arranged so that the user can perceive evolving graph structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Data Model</head><p>We model a directed multi-graph in the graph-theoretic sense as</p><formula xml:id="formula_0">G = (V, E A )</formula><p>where V denotes the set of vertices and E A ⊆ V × V × W denotes the set of directed adjacency edges that consists of ordered triples of elements. The first component denotes the start vertex, the second component the target vertex, and the third component W ∈ W a finite multi-set of positive real-valued numbers representing the corresponding multi-edge, i.e., the weights of the relations. Additionally, each graph vertex v ∈ V is hierarchically organized in a tree structure</p><formula xml:id="formula_1">H = (V, E I )</formula><p>where V is the vertex set and E I ⊆ V × V are the directed inclusion edges implied by the hierarchy such that (v, w) ∈ E I iff v is the parent of w.</p><p>A dynamic weighted directed multi-graph in an information hierarchy is modeled as a finite sequence of graphs</p><formula xml:id="formula_2">Γ := {G 1 , G 2 , . . . , G n } where G i = (V i , E A i ), V i ⊆ V, E A i ⊆ E A , 1 ≤ i ≤ n.</formula><p>We assume that the hierarchical organization of the graph vertices remains constant for all graphs in the sequence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Graph Layout</head><p>To illustrate the visual encoding of such dynamic graph data by parallel edge splatting, we start with a single static directed graph as shown in <ref type="figure" target="#fig_1">Figures 1 (a)</ref>   layout. First, the graph nodes are mapped to a pair of parallel and vertically aligned lines; the mapping is identical for both lines. These lines build the axes for visually encoding the directed edges starting at the vertical position of the corresponding start node on the left axis and pointing to the vertical position of the corresponding target node on the right axis. To retain the information about the hierarchical organization of the graph nodes, we add an orthogonal node-link tree diagram in the left part of <ref type="figure" target="#fig_1">Figure 1 (b)</ref>, where the tree nodes are vertically aligned with the corresponding graph nodes on the vertical axes.</p><p>Initially, there is no special ordering of the graph nodes on the vertical axes. In our approach, we use the hierarchical organization to generate a total order of the nodes where the order of the subhierarchies in each level is not yet fixed. We use a depth-first traversal of the graph nodes and follow subhierarchies according to their order in memory. The nodes are placed equidistantly from top to bottom. If there is no hierarchy defined (e.g., for a graph without directly associated hierarchy), a hierarchy needs to be constructed in a preprocessing step, e.g., by employing hierarchical clustering of the graph nodes. Furthermore, nodes are not necessarily arranged on equidistant positions; if a metric is available to define node distances on the axis, non-uniform distances can be used.</p><p>A dynamic graph is a graph that changes over time and can be modeled as a sequence of single graphs Γ = {G 1 , G 2 , . . . , G n }. Our technique is readily extended to apply it to evolving graph structures. For displaying n graphs of a sequence, we just need (n + 1) copies of the vertical axis and place these axes side-by-side. The space between two From our parallel edge graph layout, dynamic graph behavior can be readily analyzed by visual inspection. For example, <ref type="figure" target="#fig_1">Figure 1</ref> (c) shows that node E has a self-edge (with weight 2) throughout the sequence; edges from node C to E, from D to A, and from A to B are always present.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Splatting Technique</head><p>Visualizing graphs in node-link diagrams may lead to many edge crossings and, hence, to visual clutter in the display. This phenomenon even occurs for graphs with a small number of vertices. Traditional graph layout algorithms become very time-consuming due to their high computational complexity, already for a dense graph with just a few hundred vertices. Furthermore, even sophisticated layout techniques may generate unsatisfying results in many situations. The visualization of an additional time dimension and an additional hierarchical organization is a challenging task for these layout approaches.</p><p>As discussed before, we represent time-varying graphs by a 1D layout of the nodes and a time-to-space mapping of the dynamics. A drawback of restricting the layout of graph nodes to 1D is a further increase of visual clutter caused by many edge crossings.</p><p>Therefore, a graph drawing method for dense coverage by edges is crucial. We follow the general strategy of transforming plots with opaque plotting elements (i.e., lines in our case) to corresponding density plots. In our case, graph edges are transformed to density distributions. We adopt a splatting approach, projecting the density representation of the edges to image space.</p><p>The basic splatting algorithm has only little graphics requirements. First, it needs a framebuffer or similar storage for the density image. Just a single value needs to be stored per pixel in the framebuffer. The number representation of such a pixel value should be chosen to capture the dynamic range of densities. Typically, somewhere between 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 <ref type="figure">Fig. 2</ref>. Edge splatting is applied to help a viewer trace links even in dense graph regions. The leftmost subfigure shows a square to be discretized and enlarged in the center subfigure. The sum of weight coverage implied by adding each link weight is color-coded in the rightmost subfigure. Color coding is changed due to a new maximum value. 16-bit fixed-point to 32-bit floating-point number format is appropriate. Furthermore, the framebuffer has to have support for additive blending, i.e., the plus operator according to Porter and Duff <ref type="bibr" target="#b27">[28]</ref>. As second requirement, the splatting algorithm needs a line rasterization method that is capable of rendering lines of a specified intensity to the framebuffer. Any of today's typical graphics systems meets these requirements easily, regardless of whether it is graphics hardware run by low-level graphics API (OpenGL or DirectX) or whether it is a highlevel software API, such as the Java 1.6.2 SE Runtime Environment used in our case. With these graphics components, the basic splatting algorithm works as illustrated in <ref type="figure">Figure 2</ref>. Here, we only consider one pair of vertical axes; further time steps are included by applying the splatting algorithm time-after-time at subsequent axes pairs. The rendering algorithm visits all graph edges and rasterizes their line representations. The weights of the edges determine the line intensity. Additive blending is enabled throughout the rendering process. Since additive blending is commutative, the edges can be rendered in arbitrary order. At the end of the basic splatting process, the framebuffer contains the 2D image of the edge densities. <ref type="figure" target="#fig_3">Figure 3</ref> demonstrates the effect of this edge splatting approach.</p><p>Since the density image may contain densities with high dynamic range, a postprocessing stage is recommended. Here, some data mapping is computed to reduce the dynamic range. We recommend a logarithmic mapping. Furthermore, color coding can be applied to visualize the transformed densities.</p><p>As presented, the algorithm may lead to aliasing for the line densities rendered, which may show up as "staircase" artifacts. Therefore, line filtering should be incorporated in the basic splatting algorithm. One option is to draw "thick" lines with a smooth fall-off behavior. This can be accomplished by rendering quadrilaterals whose extents are given by the lengths and widths of the lines. The quadrilaterals are textured with a prefiltered image of the "thick" line. Typical filters include Gaussian or triangle filters. The alternative option is to apply filtering after the line rendering of the basic splatting algorithm. Here, the filter operators are applied just as 2D image filters. Since both blending of lines and filtering with Gauss or triangle functions are linear operators, the order of execution does not change the final result. Therefore, both anti-aliasing approaches are equivalent. In our tool, we use the second option with a triangle filter of size 3 × 3.</p><p>Aggregate graphs (before/after):</p><p>Collapse subhierarchies (before/after): Brushing: <ref type="figure">Fig. 4</ref>. Examples of the interactive features implemented; dataset from the first case study (Section 5.1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Interactive Features</head><p>Although we generate static images from dynamic data, our visualization tool includes support for a list of important interactive features. Following the visualization seeking mantra <ref type="bibr" target="#b29">[30]</ref>, we first provide an overview of the time-varying graph data. We allow zooming, filtering, and details-on-demand as potential next steps. Furthermore, the dynamic graph data can be aggregated in the vertex as well as in the time dimensions. The hierarchy can be used to expand or collapse vertices that belong to the same subhierarchy and the corresponding edges are also adjusted to the new view. The most important interaction elements are the following:</p><p>Pixel lens. Regions of the pixel-based diagram can be shown in an enlarged display. Single pixels can be easily selected and explored in the lens view. Vertical and horizontal aggregation. A number of neighboring vertices on a vertical line can be selected and aggregated. Similarly, neighboring graphs can be selected and aggregated; see <ref type="figure">Figure 4</ref>, where a longer sequence of graphs is summarized to five graphs. The edges involved are aggregated and their new weights are computed as the arithmetic means of the original weights. Expansion and collapse of subhierarchies. Clicking on a node in the hierarchy view expands the underlying tree structure. If the tree is already expanded, it will be collapsed again. <ref type="figure">Figure 4</ref> provides an example where two subhierarchies are collapsed. Edge brushing. By selecting a number of start nodes in the node selection bar, all links are highlighted that lie on paths to a given depth by putting them to the foreground. All other links are drawn transparently in the background; see <ref type="figure">Figure 4</ref>, which highlights the selected nodes applying depth 1. Data filtering. Database queries to the full dataset are supported to select a subset of the data to be visualized. Queries may be applied to accompanying data fields that are not even shown in the graph visualization. In addition, we support filtering with respect to the weights of the graph edges and the graph density field. Furthermore, multiedges can be represented by sum of weights, maximum of weights, or average of weights.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CATEGORIZATION OF VISUAL PATTERNS</head><p>Plotting the dynamic graphs using the new visualization technique shows types of recurring visual patterns. Understanding these patterns and their relationship to the visualized data structure provides an instrument to quickly extract information from the visualization. In the following, we discern static patterns, which are patterns in a single graph, from dynamic patterns, which cover temporal phenomena.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Static Patterns</head><p>For analyzing static patterns, we look at a single graph represented in one vertical stripe. The visual patterns that may occur in such a stripe indicate a particular graph property. <ref type="figure" target="#fig_4">Figure 5</ref> schematically sketches some patterns that will be described in detail in this section.</p><p>The following definitions prepare the ground for formally defining the idealized graph properties underlying the visual patterns. As a starting point, we describe a simplified version of the graph and hierarchy structure. The idea is that the patterns are properties of that simplified structure. To this end, we modify the hierarchy by collapsing inner nodes and propagating the edge information to the collapsed vertices. First, we have to map each vertex in the aggregated structure to a set of vertices in the original structure, which we implement by defining a mapping function ρ d : V → 2 V (mapping a node to a set of nodes), where d ∈ N denotes the degree of simplification, or in other words, the number of aggregation steps: Based on the mapping function ρ d , we are now able to define a new set of multi-edges E A (d) for the simplified graph structure:</p><formula xml:id="formula_3">ρ d (v) :=      {v} if height(v) &gt; d {v} ∪ descendants(v) if height(v) = d / 0 otherwise Here, height(v</formula><formula xml:id="formula_4">E A (d) := {(v, w,W ) | / 0 = W = v ∈ ρ d (v), w ∈ ρ d (w) (v , w ,W v ,w ) ∈ E A W v ,w }</formula><p>This set contains all edges between vertices that are not collapsed and furthermore aggregates the edges from or to descendants of collapsed vertices.</p><p>Beam. The beam pattern describes a horizontal block of edges. If this block consists of a uniformly distributed edge density, it indicates a set of parallel horizontal edges, i.e., self-edges. If the density information is uneven and forms a cross of high density within the block, this could indicate a cluster (a dense sub-graph) or even a clique (a complete sub-graph). Formally, a function that identifies all nodes with beam property can be defined as follows:</p><formula xml:id="formula_5">beam(d, n) := {v | (v, v,W ) ∈ E A (d), |W | ≥ n}</formula><p>This function returns those nodes that have at least n self-edges in the aggregated set of edges E A (d). Hence, n represents the minimal strength of the beam in number of edges. The degree of simplification d is used to control the accuracy of the beam: d = 0 allows only beams within a vertex, d = 1 within a hierarchy node collapsed in the first aggregation step, etc.</p><p>Cross Beam. Similar to a beam, a cross beam pattern is a solid block of edges that connects a set of vertices on the left side to a set of vertices on the right side. The difference is that these two sets consist of different vertices so that the beam crosses the diagram like a diagonal. Hence, the cross beam pattern reveals that there is a strong directed relationship from the first set of vertices to the second one. The related formal definition is also similar to the one of the beam property, though pairs of nodes are needed to identify a cross beam. Again, n controls the strength of the cross beam and d the accuracy with respect to the hierarchical structure:</p><formula xml:id="formula_6">crossbeam(d, n) := {(v, w) | (v, w,W ) ∈ E A (d), |W | ≥ n, v = w}</formula><p>Hour Glass. A pattern that looks like an hour glass consists of two beams and two cross beams. It may indicate a cluster or clique in the graph that is, in contrast to a single beam, distributed over two different parts of the vertical axis. The hour glass property can be identified as a pair of vertices accumulating beam and cross beam properties:</p><formula xml:id="formula_7">hourglass(d, n) :={(v, w) | v, w ∈ beam(d, n), (v, w), (w, v) ∈ crossbeam(d, n)}</formula><p>Fan. The fan pattern denotes a high edge density spreading out from a single point in many directions. This pattern reveals vertices with a high out-degree (fan-out) or a high in-degree (fan-in). The density structure of the fan-gaps and denser parts-provides an overview of the set of vertices connected to the vertices in the center of the fan. Formally, vertices belonging to a fan have (outgoing/incoming) edges to at least n other vertices. The aggregated set of edges E A (d) is used to consider also fans on higher levels of abstraction:</p><formula xml:id="formula_8">f an out (d, n) := {v | |{(v, w,W ) ∈ E A (d)}| ≥ n} f an in (d, n) := {v | |{(w, v,W ) ∈ E A (d)}| ≥ n}</formula><p>Gap. A gap at the vertical boundary of the static graph diagrams indicates vertices that do not have outgoing edges or incoming ones. The according definitions consider the degree of simplification d so that also collapsed inner vertices can be identified as having such an edge degree of zero.</p><formula xml:id="formula_9">gap out (d) := {v | |{(v, w,W ) ∈ E A (d)}| = 0} gap in (d) := {v | |{(w, v,W ) ∈ E A (d)}| = 0}</formula><p>A visual pattern is an indicator for a certain graph property as described. However, even if we cannot find a particular visual pattern, it does not necessarily mean that there is no such graph property. For instance, the ordering of the vertices may prohibit that the pattern becomes apparent. Moreover, the pattern might be occluded by another pattern that consists of stronger edges. This problem could be partially addressed by applying different ordering strategies. We may minimize the edge lengths, reduce the number of edge crossings, randomize the order to prevent a bias, or find application-specific semantic sorting criteria. However, finding an appropriate linear arrangement is difficult because an arrangement that is optimal for highlighting one pattern may obscure other patterns. Hence, we choose a different approach to addressing the problem of reliably detecting the static graph properties: the formal definitions of the properties enable identifying those vertices or pairs of vertices that belong to a particular property.</p><p>A property is made visible by highlighting the respective nodes and edges in the visualization. This is implemented by adding visual marks to the respective vertices and blending out non-highlighted edges. This approach can be used to unambiguously and exhaustively obtain a particular property on demand. Nevertheless, the visual analysis of patterns is still needed for more explorative searches and may precede the highlighting of graph properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Dynamic Patterns</head><p>Complementary to static patterns, dynamic patterns describe the relationship of subsequent graphs. They can be detected by comparing the stripes containing the static graphs from left to right. These patterns are generic in the sense that different instances of these patterns can involve different static patterns and thus may look quite different.</p><p>Stability. The simplest dynamic pattern is the stability patternnothing visually changes in the subsequent static graphs, at least in the areas covered by the pattern. This means that the graph structure does not significantly change in this part. In our visualization technique, small changes affect the layout of the graph only moderately, which is important and does not go without saying in the area of dynamic graph visualization. For instance, animated node-link diagrams need to apply complex algorithms to reach the same stability in layout for small changes.</p><p>Trend. A monotonic change of edge density over a sequence of time steps is a trend. Such a trend may embody a change of structure or weights. Changes in the intensity of a line indicate changing edge weights of the respective set of edges. A trend in a particular point or small area indicates a systematic change in the edges that cross this area. This is of particular interest at the borders of the stripes, where such an area is directly related to the outgoing or incoming edges of the vertices. A trend may apply to a small set of vertices and edges or can be a global trend.</p><p>Periodicity. A sequence of recurring visual structures leads to periodicity in the visualization, for instance, the alternating presence and absence of a certain structure or the systematic variation of color values. Visual periodicity implies the analogous periodicity in the graph structure and edge weights. By presenting the complete sequence of graphs in one image, observing such periodicity is much simpler than in animated diagrams.</p><p>Shift. A shift pattern is described by a similar visual structure at a different vertical and horizontal position. This indicates a similar graph structure in a different part of the graph shifted in time. A problem is that similar structures may look different in other parts of the graph. For instance, an edge pointing to a vertex somewhere in the middle of the vertical axis is a descending line when the start node is in the upper part and an ascending line when it is in the lower part. Hence, we also have to look for distorted static patterns when searching for shifts.</p><p>Anomaly. In a sequence of similar visual patterns, a single graph that looks different with respect to some aspect is a visual anomaly. This individual property, for instance, could be the existence or absence of a certain static visual pattern. Anomalies reveal outliers with respect to the graph structure in the sequence of graphs.</p><p>Like static patterns, dynamic patterns could be hidden by more dominating patterns. The absence of a certain visual pattern again does not necessarily imply the absence of a certain property of the graph structure. However, highlighting static properties also helps us detect dynamic graph properties. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CASE STUDIES</head><p>The two case studies we present in the following apply our visualization technique to two different application scenarios. The applications use mid-size to large datasets to show the scalability of our approach. We make use of the visual patterns we introduced in the previous section. Moreover, the interactive features help us check assumptions and explore further phenomena. Hence, not all insights that we gained can be reproduced from just the few accompanying static figures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Software Visualization</head><p>As a first application domain, we look at the visualization of software evolution where dynamic graph data was extracted from open source software systems and their development history. Existing visualization systems like CVSScan <ref type="bibr" target="#b34">[35]</ref> or Evolution Matrix <ref type="bibr" target="#b23">[24]</ref> do not typically show relational data. Exceptions are the GEVOL system <ref type="bibr" target="#b7">[8]</ref> and more recently code swarm <ref type="bibr" target="#b26">[27]</ref>, which use animated node-link diagrams to visualize the evolution (code swarm actually does not draw the links).</p><p>When visualizing the artifacts contained in a software project, we often have to deal with large datasets. For example, mid-size software systems may already consist of hundreds of classes and thousands of methods. These artifacts change over time with each check-in of the software repository or with each release. In this first case study, we look at the methods of a system and how the methods interact by method calls in different releases of the software. Software developers might use this dataset to understand the system and its history, to learn when, and maybe also why, particular dependencies were introduced, or to identify design flaws like unwanted dependencies.</p><p>The JUnit regression testing framework (www.junit.org) serves as an example. We chose this project because it is a well-known open source software, its release history is readily available, it is small enough to be readable in the printed, non-interactive figures of this paper, and it is large enough to get an impression of the properties and scalability of our visualization. We collected the 21 available releases of JUnit as compiled Java bytecode and extracted the method call dependencies using DependencyFinder (depfind. sourceforge.net). The package and class structure provides a natural hierarchy on the methods of the system. The resulting dynamic graph consists of 2,817 vertices connected by 15,339 edges, where each edge is weighted by 1. <ref type="figure" target="#fig_6">Figure 6</ref> shows the dataset using our visualization technique. The upper part depicts all method call dependencies of the project, the part on the lower left represents the added dependencies (in each case with respect to the previous release), and the one on the lower right the removed dependencies. In the following, we describe a set of interesting phenomena and related visual patterns that we annotated in the figure as a matter of readability.</p><p>• The visualization provides an overview of the release history in a single image. Significant visual differences hint at major changes of the system (anomaly pattern). For JUnit, we easily retrieve the main steps of development, which only partly match to what we would have guessed analyzing the version numbers. For example, we observe major changes from version 3.0 to 3.2, but only few changes from version 2.1 to 3.0. Recurring visual patterns indicate the stable parts of the system (stability pattern). For instance, the junit.framework package changes only in small increments and decrements (A), as also confirmed by the diagrams for added and removed dependencies (A and A ).  <ref type="figure">Fig. 7</ref>. Parallel edge splatting applied to paper title words resulting in 61 graphs. (a) All papers that contain the word fragments "vis" and "web" in their titles. The word "vis" occurred much earlier in history than the word "web". The first co-relations of both words are in the year 1999. (b) All papers that contain the word fragment "graph" in their titles. The word "graph" has a longer history than the words "vis" and "web" from subfigure (a) and relations already occurred as early as in 1965.</p><p>• Analyzing method calls, the direction of the call relation carries very important information. By always drawing the edges from left to right, this information can be retrieved at first glance. We observe central methods that are called by many other methods (fan-in pattern) like in the junit.framework package (B 1 )-the interactive features, namely, collapsing hierarchy nodes, allow us to focus on this area and identify the corresponding methods as elements of class TestResults. Analogously, we find methods that call many other classes (fan-out pattern), for instance, in the junit.awtui package (B 2 ).</p><p>• Clusters in the call graph reveal highly cohesive sets of classes.</p><p>If the classes of a cluster belong to the same package, this results in dense horizontal structures in the visualization (beam pattern) and may be interpreted as an indication of a good design according to the classical design principle of low coupling and high cohesion <ref type="bibr" target="#b30">[31]</ref>. We can find these patterns, for instance, in the Assert class in the org.junit package (C 1 ). In contrast, clusters that span several packages also create dense diagonal patterns (hour glass pattern) like some classes of the packages org.junit.internal.runners and org.junit.runner (C 2 ). It might be worthwhile to consider them for restructuring.</p><p>• Non-symmetric cross beam patterns, which connect a set of vertices with another set of vertices only in one direction, reveal a layered design where the classes and methods of one package access another package unidirectionally (D 1 ). Considering the layers of the design, the packages in the lowest layer do not have any outgoing dependencies leaving the package borders. Such a package is the org.hamcrest package, which seems to be an external library (D 2 ).</p><p>• Features are added to, and also sometimes removed from, the system. For instance, the Swing user interface of JUnit seems to be implemented in the junit.swingui package. As we learn from the gap patterns and the diagrams for added and removed edges, this package is introduced in version 3.2 (E 1 and E 1 ) and again removed in version 4.0 (E 1 and E 1 ). Possibly related to this, the junit.ui package is significantly extended in version 3.2 before being completely removed in the next version (anomaly pattern, E 2 ). Perhaps, the user interface features were transferred to the junit.swingui package with a transitional step in version 3.2.</p><p>• Trend patterns reveal incremental changes of the system. Small trends are harder to observe in the view that visualizes all dependencies because they only lead to minor color adjustments from step to step. Nevertheless, we see a steady growth of incoming call dependencies for some classes in the org.junit.runner package (F). The view on the added dependencies allows us to confirm this assumption (F ): more incoming call dependencies are added than deleted in the respective frame.</p><p>In practical application of this software visualization, knowing details like the name of a particular class or the set of dependencies belonging to a particular method is important. These details cannot be retrieved by analyzing <ref type="figure" target="#fig_6">Figure 6</ref>, but can be extracted by using the zooming and filtering features of the visualization tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">DBLP Visualization</head><p>As a second application domain for our dynamic graph visualization, we visually explore the collection of data in the DBLP online bibliography <ref type="bibr" target="#b24">[25]</ref> and show interesting insights for the evolution of related paper title words. As a data basis, we extracted 1,581,172 paper titles between the years 1950 and 2010, inclusively. Each paper title consists of a finite number of words. We consider each title as a transaction of words. Any two words in one transaction are related if they occur in the same paper title. Instead of generating complete cliques, we only allow an edge from words occurring earlier in the title to words occurring later and additionally, we allow self-edges. By doing this, we reduce visual clutter in the diagrams that stems from meaningless symmetries in the graphs carrying no extra information.</p><p>Formally, from an ordered sequence of words w s := (w 1 , . . . , w m ), w i ∈ Σ * with Σ denoting a finite set of characters (the alphabet), we obtain the word graph G w s :</p><formula xml:id="formula_10">G w s := (V w s , E w s ), where V w s := {v ∈ Σ * | v ∈ w s } and E w s := {(w i , w j , {1}) | w i , w j ∈ w s , i ≤ j}</formula><p>Here, we introduce an edge (w i , w j , {1}) in the word graph if i ≤ j. Before generating the title word graphs, we free the list of words from filler words such as and, or, it, of,.... All generated word graphs belonging to the same year are unified to one single word graph.</p><p>The order of the nodes is given by the occurrence of a word in the prefix tree. Each word w consists of a finite sequence of characters</p><formula xml:id="formula_11">w := (σ l max , . . . , σ l max −|w|+1 ), σ i ∈ Σ</formula><p>where |w| denotes the length of the word w and l max denotes the length of the longest word in the list of words.</p><p>We map each σ i to a unique number maintaining the lexicographic order of the characters by the bijective function val :</p><formula xml:id="formula_12">Σ −→ N | [0,|Σ|−1] .</formula><p>Each word w is mapped to a unique identifier <ref type="figure">Fig. 8</ref>. The evolution of the word graph generated from paper titles containing the words "vis" and "web". 21 graphs are shown for the years 1990 until 2010. A total of 264,311 edges with weights of more than five are displayed.</p><formula xml:id="formula_13">id w := l max ∑ i=l max −|w|+1 val(σ i ) • |Σ| i</formula><p>The computation of these identifiers guarantees that words that are close to each other in the prefix tree are also mapped close to each other on the vertical line.</p><p>In our first scenario, we are interested in the evolution of the relation between the word fragments "vis" and "web" and all word relations to either one or both of these words. For this reason, we extracted all paper titles containing at least one of these two words. Since we take all words of a paper title into account in which one of the selected words occurs, many other words are involved that cause additional edges. To reduce the data flood and visual clutter in the display, we only take edges into account with a minimum weight of two. After this step, we still have to display 265,733 edges in total. <ref type="figure">Figure 7</ref> (a) shows this dynamic relational data with parallel edge splatting. The first observation is that the plot is becoming denser and denser to the right hand side: the number of publications is growing to higher and higher rates. One can easily see that the first occurrence of relations with respect to the word fragments "vis" and "web" with a minimum weight of two occurs in the year 1968. The relation is a self-edge and belongs to the word "visual". Around the year 1990, relations are becoming denser, starting at the vertical position of the word "visual". The occurrence of the word "web" starts some years later in 1996 and the first co-relations to the word "visual" are in 1999 and become quite frequent in the following years. The Z-pattern right below the word "web" is due to the fact that there are many paper title containing the word sequence "world wide web". There are only a few relations to words starting with characters "x", "y", and "z", which is a natural language characteristic phenomenon.</p><p>To further reduce visual clutter and make the finer substructures more visible, we concentrate on the 21 graphs of the years 1990 until 2010. Furthermore, we filter out all edges with a weight smaller than six. <ref type="figure">Figure 8</ref> shows the result after these operations. Only 1,422 edges are filtered out, whereas a total of 264,311 edges remain in the diagram. The 21 graphs can now be visualized in a larger display space, leading to more substructures to be visible.</p><p>For example, one visual pattern is the horizontal line in the center that is becoming stronger over the years. This word occurs very often in the context of the word "vis" but not the word "web", which can be uncovered by inspecting the cross beam pattern there. A detailon-demand request shows that "image" is the word that has a strong relationship to "visual". The word "web" is strongly coupled to the word "technology", which can be seen by inspecting the cross beam pattern starting at the vertical position for the word "web". More insights can be won when playing with the interactive features of the visualization tool, too many to illustrate them all here.</p><p>In our second scenario, we are interested in the word "graph", which has a longer history than "vis" and "web", see <ref type="figure">Figure 7</ref> (b). This figure shows the same overall density behavior as <ref type="figure">Figure 7 (a)</ref>, especially the growth in number of related publications. The major difference to the diagram in <ref type="figure">Figure 7</ref> (a) is the fact that relations to other words start much earlier-in the years 1965 until 1969. Consequently, the graph sequence contains 438,538 edges in total. Again, we reduced the amount of relational data by applying an edge weight filter. Only edges with a weight of at least two are taken into account.</p><p>Also here, we apply further filtering (minimum weight 6 and time span from 1990 until 2010) and obtain a sparser dynamic graph dataset. From the 438,538 edges in the beginning, 412,416 remain, which is a loss of 26,122 edges in total by filtering. <ref type="figure">Figure 9</ref> represents the resulting image of the filtered dataset. Compared to <ref type="figure">Figure 8</ref>, this dynamic graph is much denser and the occurring relations start relatively earlier. There are two cross beam patterns visible, one starts from "computer" and points to the word "graphics" and the second one starts at the word "hyper" and targets at "graph". Both cross beam relation patterns show a growing trend.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION</head><p>In this paper, we have introduced parallel edge splatting, a scalable visualization technique for dynamic graphs. The approach depicts the dynamic graph in a single image that looks similar to a parallelcoordinates plot. Two case studies have shown how the visualization technique can be applied to explore large datasets in practical applications, based on the detection of visual patterns. The next step would <ref type="figure">Fig. 9</ref>. The evolution of the word graph generated from paper titles containing the word "graph". 21 graphs are shown for the years 1990 until 2010. A total of 412,416 edges with weights of more than five are displayed.</p><p>be to evaluate the effectiveness and usability of the visualization technique in a user study.</p><p>Our approach provides a better overview of the time dimension than animated diagrams. Due to the static diagram, the user does not have to preserve a mental map of the graph from step to step, which leads to a reduction of cognitive efforts. Furthermore, laying out the graph does not require complex algorithms and graphs can be added to the sequence on-the-fly without changing the global layout.</p><p>Moreover, the technique is more scalable than other single-image dynamic graph visualization techniques. First, the graph layout is defined by arranging the vertices of each graph on vertical lines and connecting the vertices from left to right. Second, the visualization transforms the edges to a scalar field of edge densities.</p><p>The need to place the vertices on a 1D vertical line is owed to the limited space available when visualizing a dynamic graph in a single image. Simply connecting these vertices by arcs is not very scalable because the arcs frequently cross in small angles so that it becomes difficult to follow single edges <ref type="bibr" target="#b13">[14]</ref>. Splitting each vertex and drawing the edges from left to right significantly mitigates the problem of edge crossings: although the number of crossings is not reduced, it is easier to follow edges because they cross at larger angles and do not consist of curved lines. Even if parts of the edge are not discernible, a fragment of the edge identifies the two connected vertices based on the gradient and position of the fragment. Still, edge crossings may confuse the user. Using a hierarchical structure is a first step towards ordering the vertices so that related vertices are placed next to each other on the vertical axis, where sorting based on a natural hierarchy is a good basis to reveal visual patterns. If no natural hierarchy is available, a hierarchical clustering algorithm could be employed to retrieve a meaningful structure. Beyond that, more sophisticated sorting strategies may also optimize the order of the hierarchy vertices <ref type="bibr" target="#b13">[14]</ref>. Without a hierarchy, the reduction of edge crossings could be used as the exclusive ordering criterion.</p><p>Edge splatting addresses the problem of visual clutter that occurs when drawing many lines onto a small area of screen space. Another approach would have been to bundle the edges according to the hier-archical structure of the vertices <ref type="bibr" target="#b17">[18]</ref> or according to a force-directed placement <ref type="bibr" target="#b19">[20]</ref>, which can also be applied to vertically arranged vertices <ref type="bibr" target="#b18">[19]</ref>. Telea and Ersoy use a combination of distance-based splatting and skeletonization to generate image-based edge bundles <ref type="bibr" target="#b31">[32]</ref>. We, however, did not employ bundling because it somewhat obfuscates the information of an edge-seeing only a part of an edge would not allow a user to recognize the start and end point of the edge because the edge is represented as a curved line. Furthermore, density splatting is important to summarize a set of vertices in a single pixel on the vertical axis, which is necessary when the number of vertices exceeds the height of the visualization in number of pixels.</p><p>Parallel edge splatting serves the purpose of revealing changes in the graph structure, i.e., exploring the evolution of a graph. Thus, it is not important if strong relations are caused by few strong weighted connections or several more slightly weighted connections. Hence, the accumulation of weights during the splatting of edges does not really involve a loss of important information.</p><p>In general, it would be possible to apply the splatting algorithm to graphs laid out in 2D and juxtapose these diagrams to visualize the dynamic sequence. Our arguments in favor of the 1D layout of the graph vertices are that the representation of a graph becomes spaceefficient, ambiguities caused by edges crossing vertices are avoided, the alignment leads to a better comparability of graphs throughout the sequence, and an additional hierarchy can easily be added.</p><p>All in all, the visualization technique provides overview because it depicts the complete dynamic graph in a single view and visual patterns reveal the graph structure-details can be retrieved using interactions. Furthermore, it is scalable because of the special 1D vertex layout and the edge splatting technique.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>and (b). The right part of Figure 1 (a) presents a possible layout of the adjacency information of the directed weighted graph embedded into the 2D plane. The small graph example consists of five nodes labeled A, B,C, D, and E. There are eight directed weighted edges, where the weights are visualized by color coding. One of the edges is a self-edge (at node E). The left part of Figure 1 (a) shows the hierarchical organization of the graph vertices as a traditional nodelink diagram.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 (</head><label>1</label><figDesc>b) illustrates the transformation of the graph data in Figure 1 (a) into our new</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 1 .</head><label>1</label><figDesc>A step-by-step visual encoding of dynamic directed and weighted graphs in an information hierarchy. (a) A single directed and weighted graph in a 2D layout. (b) The same graph data mapped to parallel vertical lines (1D layout). (c) A sequence of five directed and weighted graphs with an additional hierarchical organization of the nodes represented as a layered icicle plot.subsequent axes is used to display the graph edges of a single time stamp. The first graph is associated with the leftmost pair of axes; subsequent graphs follow to the right.Figure 1 (c)shows an example of a sequence of five graphs. The leftmost graph in the diagram is the example taken fromFigure 1 (b). The hierarchical organization of the graph nodes can be obtained by inspecting the layered icicle plot<ref type="bibr" target="#b22">[23]</ref> in the left part ofFigure 1 (c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Visualization of a real-world dynamic graph with homogeneous edge weights (only a detail of the visualization shown)-without (a) and with edge splatting (b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Prototypes of recurring static visual patterns.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>) is the height of a vertex v in the hierarchy H, which is the maximal length of a downward path to a leaf from vertex v, and descendants(v) is the set of children, grandchildren, etc. of vertex v. Nodes v are not considered in the aggregated structure when ρ d (v) = / 0. If d = 0, the mapping does not alter the structure (ρ 0 (v) = {v}), whereas d = 1 is equivalent to collapsing all inner nodes that only have leaf nodes as children (vertices v where height(v) = 1).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Call dependencies between methods in 21 releases of the JUnit project: all (top), added (left), and removed (right) dependencies.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The project was in part funded by the German Research Foundation (DFG) grant DFG WE 2836/4-1.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Animation, small multiples, and the effect of mental map preservation in dynamic graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Purchase</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Pinaud</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="539" to="552" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Uncovering clusters in crowded parallel coordinates visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">O</forename><surname>Artero</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Ferreira De Oliveira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Levkowitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Towards an aesthetic dimensions framework for dynamic graph visualisations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Burch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Diehl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Information Visualization (IV)</title>
		<meeting>Information Visualization (IV)</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="592" to="597" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The aesthetics of graph visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bennett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ryall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Spalteholz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gooch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Computational Aesthetics in Graphics, Visualization, and Imaging</title>
		<meeting>Computational Aesthetics in Graphics, Visualization, and Imaging</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Extensions of parallel coordinates for interactive exploration of large multi-timepoint data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Blaas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Botha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1436" to="1451" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visual unrolling of network evolution and the analysis of dynamic discourse</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Brandes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Corman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="40" to="50" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">TimeRadarTrees: Visualizing dynamic compound digraphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Burch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Diehl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="823" to="830" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A system for graph-based visualization of the evolution of software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">S</forename><surname>Collberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Kobourov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Nagra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Pitts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wampler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Software Visualization</title>
		<meeting>the ACM Symposium on Software Visualization</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="77" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Graph Drawing: Algorithms for the Visualization of Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Di Battista</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tamassia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">G</forename><surname>Tollis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Graphs, they are changing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Diehl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Görg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Symposium on Graph Drawing</title>
		<meeting>the International Symposium on Graph Drawing</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="23" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Matching visual saliency to confidence in plots of uncertain data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kwock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Taylor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="980" to="989" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Online dynamic graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Frishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="727" to="740" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Visualizing live software systems in 3D</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Greevy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lanza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wysseier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Software Visualization</title>
		<meeting>the ACM Symposium on Software Visualization</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="47" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Visualizing the evolution of compound digraphs with TimeArcTrees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Greilich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Burch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Diehl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="975" to="982" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Progressive splatting of continuous scatterplots and parallel coordinates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heinrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bachthaler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="653" to="662" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Continuous parallel coordinates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heinrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1531" to="1538" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Graph visualization and navigation in information visualization: A survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Herman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Melançon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Marshall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="24" to="43" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Hierarchical edge bundles: Visualization of adjacency relations in hierarchical data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="741" to="748" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Visual comparison of hierarchically organized data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="759" to="766" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Force-directed edge bundling for graph visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="983" to="990" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Parallel coordinates: A tool for visualizing multi-dimensional geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inselberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Dimsdale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization Conference</title>
		<meeting>the IEEE Visualization Conference</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="361" to="378" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Revealing structure within clustered parallel coordinates displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Ljung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jern</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cooper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="125" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Icicle plots: Better displays for hierarchical clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kruskal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Landwehr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The American Statistician</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="162" to="168" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">The Evolution Matrix: Recovering software evolution using software visualization techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lanza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fourth International Workshop on Principles of Software Evolution</title>
		<meeting>the Fourth International Workshop on Principles of Software Evolution</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="37" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">DBLP: Some lessons learned</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Very Large Data Bases</title>
		<meeting>Very Large Data Bases</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1493" to="1500" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Construction of line densities for parallel coordinate plots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Wegman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computing and Graphics in Statistics</title>
		<editor>A. Buja and P. A. Tukey</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="107" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">code swarm: A design study in organic software visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ogawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1097" to="1104" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Compositing digital images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics (Proceedings of ACM SIGGRAPH)</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="253" to="259" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Feature congestion: A measure of display clutter</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rosenholtz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mansfield</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="761" to="770" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The eyes have it: A task by data type taxonomy for information visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Visual Languages</title>
		<meeting>the IEEE Symposium on Visual Languages</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="336" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Structured design. IBM Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stevens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Constantine</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="115" to="139" />
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Image-based edge bundles: Simplified visualization of large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="843" to="852" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Animation: can it facilitate?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Tversky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Morrison</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bétrancourt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal on Human-Computer Studies</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="247" to="262" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">GraphSplatting: Visualizing graphs as continuous fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Liere</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>De Leeuw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="206" to="212" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">CVSScan: Visualization of code evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Voinea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Software Visualization</title>
		<meeting>the ACM Symposium on Software Visualization</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="47" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Visual analysis of large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Landesberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kuijper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Schreck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kohlhammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-D</forename><surname>Fekete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">W</forename><surname>Fellner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics State-of-the-Art Reports</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="37" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Cognitive measurements of graph aesthetics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ware</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">C</forename><surname>Purchase</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Colpoys</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mcgill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="110" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">High dimensional clustering using parallel coordinates and the grand tour</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wegman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Luo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing Science and Statistics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="361" to="368" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Visualizing association rules for text mining</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">C</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Whitney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Thomas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="120" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Splatting the lines in parallel coordinates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">Z</forename><surname>Yuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="759" to="766" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
