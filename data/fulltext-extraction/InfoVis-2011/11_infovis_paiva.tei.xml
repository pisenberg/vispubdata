<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Improved Similarity Trees and their Application to Visual Data Classification</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jose</forename><surname>Gustavo</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Paiva</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laura</forename><surname>Florian-Cruz</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Helio</forename><surname>Pedrini</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guilherme</forename><forename type="middle">P</forename><surname>Telles</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rosane</forename><surname>Minghim</surname></persName>
						</author>
						<title level="a" type="main">Improved Similarity Trees and their Application to Visual Data Classification</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:02+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Similarity Trees</term>
					<term>Multidimensional Projections</term>
					<term>Image Classification</term>
				</keywords>
			</textClass>
			<abstract>
				<p>An alternative form to multidimensional projections for the visual analysis of data represented in multidimensional spaces is the deployment of similarity trees, such as Neighbor Joining trees. They organize data objects on the visual plane emphasizing their levels of similarity with high capability of detecting and separating groups and subgroups of objects. Besides this similarity-based hierarchical data organization, some of their advantages include the ability to decrease point clutter; high precision; and a consistent view of the data set during focusing, offering a very intuitive way to view the general structure of the data set as well as to drill down to groups and subgroups of interest. Disadvantages of similarity trees based on neighbor joining strategies include their computational cost and the presence of virtual nodes that utilize too much of the visual space. This paper presents a highly improved version of the similarity tree technique. The improvements in the technique are given by two procedures. The first is a strategy that replaces virtual nodes by promoting real leaf nodes to their place, saving large portions of space in the display and maintaining the expressiveness and precision of the technique. The second improvement is an implementation that significantly accelerates the algorithm, impacting its use for larger data sets. We also illustrate the applicability of the technique in visual data mining, showing its advantages to support visual classification of data sets, with special attention to the case of image classification. We demonstrate the capabilities of the tree for analysis and iterative manipulation and employ those capabilities to support evolving to a satisfactory data organization and classification.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Trees in visualization have been frequently used as a means to express multidimensional hierarchical data in various ways. Many visualization systems allow effective ways of exploring trees via various versions of link-node representations <ref type="bibr" target="#b31">[32]</ref>. Widely used techniques such as Treemaps <ref type="bibr" target="#b1">[2]</ref> improve space usage against conventional link-node representation and optimize the number of data set items that can be presented in a rectangular space.</p><p>In most cases, tree representations have been used in situations where: (i) hierarchy is the natural organization of the data and the tree reflects that; or (ii) data display is subject to a type of ordering of attributes and exploration is therefore attribute-based. In either case, trees are useful to explore data bounded by the hierarchy, and interpretation relies on a small number of attributes (those that can be mapped to visual artifacts such as color, texture and size).</p><p>Shortcomings of attribute centered visualizations start to appear when the number of dimensions grow. In this case, point-based strategies, defined by techniques where each individual in the display is an individual or group of individuals in the data set, offer a solid first step to explore the data. It relies on a relationship among individuals calculated using all the available attributes. In such cases, some type of dimensional reduction is commonly employed. Visualizations can be obtained by providing mappings of original or reduced spaces to visual (2D or 3D) spaces. Multidimensional projections are used to generate these mappings and the field has enjoyed great attention lately, resulting in more precise and faster approaches for point placement.</p><p>Similarity trees have unique properties concerning their ability to solve similarity-based (therefore, content-based) point placement. Additionally, they are an intuitive way of expressing structure in the relationship among items in the data set by adding hierarchy to the concept of similarity, that is, by seamlessly representing levels of similarity reflected as depth in the tree. Regardless of their attractiveness, very little research has been carried out on similarity trees as a form of point placement for multidimensional visualization. The only technique reported in that context is the NJ tree (neighbor joining tree) <ref type="bibr" target="#b9">[10]</ref>, that has been shown to be a high precision tree structure in terms of reflecting on the display the neighborhoods found in the multidimensional space. Tests were made mainly for textual document collections, but its application for visualization of collections of images has also been reported <ref type="bibr" target="#b14">[15]</ref>, demonstrating qualities of NJ trees for image analysis tasks, such as visual support to feature extraction, selection, and comparison. In the latter work, interaction and coordination capabilities of trees and projections become evident, but no numerical evaluation is provided.</p><p>Another advantage of NJ similarity trees is to present, within a particular branch, the same properties of the global display due to their precise phylogeny reconstruction algorithm, largely explored in Biology <ref type="bibr" target="#b19">[20]</ref>. Additionally, compared to other point placement strategies, point clutter is reduced with NJ trees due to the simplified graph layout algorithm that is used for display and due to the fact that branches allow direct inspection. Thus, there is no need for large gaps on the display window and all the space available can be used to plot points and edges. Their disadvantages are related to computational cost and the massive presence of virtual, non-representative nodes that use a substantial part of the visual space, reducing presentation area. The processing time constraint, though, is probably the reason why the technique has not yet reached wider usage.</p><p>In this paper, we propose a highly improved version of the NJ trees, both in space usage and processing speed, and illustrate their usefulness by developing an application that shows the adaptability of the approach for visual data classification tasks, with emphasis on image classification. A large number of applications can make use of this strategy. Classification is a process very difficult to converge and to adapt to a particular environment, especially when dealing with image data. In many cases, even when automatic classification algorithms give satisfactory results, visual feedback is very important to offer insight into the reasons for classification failure, and to support interfering with further classification passes, as well as intently correcting the classification. A proper visual set up is at the core of this problem. Some of the applications include product categorization, scene identification, photographs and music organization; and forensics.</p><p>The main contributions of this paper are: (i) the definition of a leaf promotion procedure that improves visual quality and space usage of NJ trees; the resulting technique is named Promoting NJ tree (PNJ tree); (ii) the adaptation and implementation of two faster versions of the neighbor joining strategy, reducing its computational cost and rendering the technique applicable to much larger data sets; (iii) objective numerical evaluation of the quality of the final displays; and (iv) the illustration of an application where similarity visualizations displayed by trees are employed to help the user in various steps of the data classification process. We focus on image classification and also exemplify using text.</p><p>The remainder of this paper is organized as follows. Section 2 reviews the literature on content based point placement of multidimensional data. Section 3 describes similarity trees, explains the faster algorithms and introduces the leaf promotion procedure. Section 4 presents analysis and comparative results of the experiments with similarity trees, while Section 5 presents the tree-based tools for the visual classification application. Section 6 concludes the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Point placement strategies aim at mapping each individual data point into a visual space. While basic mapping is most commonly based on dissimilarity calculations, some of their other attributes can also be mapped as geometrical shapes, colors, textures and even sounds. Relationships can also be explicitly represented in the visual space as edges between points.</p><p>Many of the most demanding current applications produce data sets with a large number of data items, represented by a large number of attributes, or dimensions, imposing serious constraints to information visualization and analysis techniques.</p><p>A recurring way to approach high multiplicity of dimensions or attributes is to use dimension reduction strategies, by selecting, mapping or combining dimensions in order to apply conventional visualization methods that are prepared to handle low dimensional data. Layout approaches can also be based on multidimensional projections, which map a high dimensional space into a visual space trying to preserve, in the final space, a relevant relationship among data elements in the original space.</p><p>Most 2D or 3D multidimensional projections employ a measure of dissimilarity between data elements. Thus, data elements mapped as points to the same region in visual space are considered similar. Interpretation of the layout is accomplished by locating groups of interest and focusing on such groups and their subgroups. <ref type="figure" target="#fig_0">Figure 1</ref> shows a layout of 675 extracts from scientific papers built using the Least Squares Projection <ref type="bibr" target="#b29">[30]</ref>. On this type of projection, proximity between points in the layout is meant to indicate document similarity. An automatic topic detection procedure yields a glimpse of the subjects handled by a document group.</p><p>Several multidimensional projection techniques are available. Most of them are based on dimension reduction techniques and some of those have been largely used for data analysis for decades. Principal Component Analysis (PCA) <ref type="bibr" target="#b22">[23]</ref> is a widely used linear projection technique that employs linear combinations of the data attributes (dimensions) with a high covariance degree, producing attributes with less dependence. Its main disadvantage is the low quality of resulting layouts due to the relatively low power of the two or three principal dimensions to express important features in heterogeneous data sets. Its computational cost is also high, O(nm 2 ), where n is the number of objects and m is the number of dimensions. Multidimensional Scaling (MDS) <ref type="bibr" target="#b8">[9]</ref> comprises a class of techniques that can be used to perform projections. The simplest MDS approach is the Force Directed Placement (FDP) model <ref type="bibr" target="#b12">[13]</ref>. The FDP model is based on a spring system concept, where the multidimensional instances are modeled as objects linked by springs such that the repulsion and attraction forces between the objects are proportional to the multidimensional distances. The projection is attained when the spring system reaches an equilibrium state. This technique normally presents high precision for data sets with objects possessing non-linear relationships, but has high computational cost, O(n 3 ) and uneven precision across different types of data sets (such as documents and images). The Force Scheme <ref type="bibr" target="#b37">[38]</ref> and the strategy defined by Chalmers <ref type="bibr" target="#b3">[4]</ref> are also based on the concept of attraction and repulsion forces among objects. Both use heuristics that decrease FDP's running time to O(n 2 ). As a faster, high precision projection, the Least Square Projection (LSP) <ref type="bibr" target="#b29">[30]</ref> applies a Laplacian operator in which neighbor data in the multidimensional space are projected to close positions on the visual layout. LSP presents a proper balance between precision and running times, being an O(n √ n) technique.</p><p>The previous methods generate good results for multidimensional data with varying precisions. In particular, it has been shown that LSP consistently approximates highly related data points and separates groups well. Layouts resulting from LSP provide a powerful guide to recognize global patterns in multidimensional data and help user to build a mental model of the data set <ref type="bibr" target="#b29">[30]</ref>.</p><p>Many new dimensionality reduction techniques for multidimensional projections have been put forward lately <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b30">31]</ref> with motivating results. With this evolution, their number of applications have increased, particularly in recent years. They are capable of handling large data sets and a large number of dimensions. They have also been in the frontier of integration between spatial and non-spatial visualization techniques.</p><p>Regardless of their advantages, projections are not usually capable of making locally the same claims of precision made globally. Within a certain group of points, there is significantly less neighborhood consistency that, in principle, the similarity relationship should be capable of coding. Hierarchical approaches can be a solution to that particular problem <ref type="bibr" target="#b28">[29]</ref>, but they rely on early clustering, preventing proper analysis of boundaries between groups. Newer and extremely fast projections have been put forward lately, handling well the problem of computational cost with improved precision <ref type="bibr" target="#b30">[31]</ref> or the problem of consistency in local neighborhoods <ref type="bibr" target="#b27">[28]</ref>. However, they work with space partitioning and cannot handle similarity matrices, impairing their use with applications that define similarity relationships without undergoing feature space definition (for instance, textual similarity from string comparison or similarity based on other non-numerical data). Projections are also subject to a high degree of cluttering due to the algorithm effort in guaranteeing the neighborhood between highly correlated neighborhoods. Visual density estimation, in that context, is virtually impossible without further interaction.</p><p>Multidimensional projections are evaluated by their capability of grouping and separating strongly related data items and by their capability of recovering, in visual spaces, data distribution or neighborhoods in original space. They have been proven to excel in both. Similarity trees should be evaluated in the same manner.</p><p>As an alternative technique for exploring multidimensional data based on content, the data set can be organized as a similarity tree. By positioning objects on branches, similarity is organized into levels, a natural way of interpreting degrees of similarity. Global analysis is not impaired, that is, it is also possible to distinguish larger groups of interest within the data set. Local analysis is as precise as global, sometimes more precise. Similarity tress can be built from feature spaces or similarity relationships. This is the case of the NJ tree <ref type="bibr" target="#b9">[10]</ref>, a visualization technique based on a phylogeny reconstruction algorithm named Neighbor Joining. This paper addresses this alternative, improving Cuadros et al.'s technique in both visual and processing time scales and validating its use for visual data classification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SIMILARITY TREES FOR MULTIDIMENSIONAL VISUALIZA-TION</head><p>This section describes NJ trees and proposes alternatives for improvement of both time and visual scalability. The result is a faster and less cluttered hierarchical visualization based on similarity, that completes the typical functionality of a multidimensional projection.</p><p>In terms of tree construction, the technique encompasses a two step procedure: after the construction of the similarity data structure representing a tree, the final layout is produced by a tree drawing algorithm. The input for tree construction algorithms is a symmetrical similarity matrix, and finding a similarity measure that faithfully represents relationships among objects in high dimensional feature space is a key issue for both trees and projections.</p><p>Addressing the quality of the similarity relationship is beyond the scope of this work. We consider that proper feature extraction and similarity calculation precede the visualization step and that the tree is responsible to reflect that feature space and similarity, although the tree itself could be a valuable tool for feature space convergence procedures.</p><p>Next, we explain and exemplify NJ trees, reporting on their known features. We also show their limitations as well as our solutions to improve those limitations. Additionally, an evaluation methodology for similarity trees is introduced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Neighbor Joining</head><p>A phylogenetic tree represents evolutionary relationships within a group of species. Leaves represent actual species and internal nodes represent hypothetical ancestors. Edges represent ancestor-descendant relation and their lengths may indicate distance between species. A phylogenetic tree may be rooted or unrooted <ref type="bibr" target="#b34">[35]</ref>.</p><p>In the work by Cuadros et al. <ref type="bibr" target="#b9">[10]</ref>, unrooted phylogenetic trees were built for documents and served as visualization models. Tree leaves represent documents, internal nodes represent hypothetical documents with intermediate content, and edge lengths indicate the similarity among documents. Because phylogenetic tree construction is NP-hard in general, the authors used a well-known heuristic that builds unrooted trees from distance matrices named Neighbor Joining (NJ) <ref type="bibr" target="#b34">[35]</ref>. The trees are named NJ trees. <ref type="figure" target="#fig_3">Figure 2</ref> shows an example of an NJ tree for the collection of documents of <ref type="figure" target="#fig_0">Figure 1</ref>. It shows that group organization in branches is consistent with the LSP projection, but it also structures the groups into layers of similarity and reduces cluttering considerably. Local neighborhood is also reconstructed in NJ trees according to the similarity matrix.</p><p>We refer to the previous work <ref type="bibr" target="#b36">[37]</ref> for implementation details of Algorithm 1. The input is a similarity matrix D and the output is a phylogenetic tree with n leaves and n − 2 internal nodes with degree 3. Its running time is O(n 3 ). This is clearly a limiting factor for very large data sets. In Algorithm 1, R i is the average distance from node i to every other node in D. S i j captures the notion of evolutionary change, and, at each step, two closest nodes in D are removed from the matrix and replaced by a combination (virtual) node x, for which a new row is inserted in D. The new distances from x to every other remaining node are calculated according to the formulae in Algorithm 1.</p><p>NJ trees were successful in building visualizations that consistently separate texts with similar content in different branches. It also favors Remove rows i and j from D 7: until n = 3 8: Connect the three remaining nodes in the tree</p><formula xml:id="formula_0">S i j = D i j − R i − R j ; R i = 1 n−2 ∑ k D ik L ix = 1 2 (D i j + R i − R j ); L jx = D i j − D ix ; D xk = 1 2 (D ik + D jk − D i j )</formula><p>data exploration in various levels of detail. The technique can also be applied to other types of data, such as image and sound <ref type="bibr" target="#b9">[10]</ref>.  After NJ tree construction, a linear radial graph layout algorithm [1] is applied, resulting in the nodes separated in larger branches <ref type="figure" target="#fig_2">(Figure 2a)</ref>. Then, applying a fast simplified force-based layout <ref type="bibr" target="#b37">[38]</ref> nodes are spread minimizing cluttering and allowing inspection of branch organization ( <ref type="figure" target="#fig_3">Figure 2b</ref>).</p><p>Regardless of the motivating visual exploration capabilities and aesthetically pleasing layout, in a collection with n objects, n − 2 internal nodes will be created. The space is overloaded by these virtual nodes that neither represent information nor add to the concept of multi-level similarity. <ref type="figure">Figure 3</ref> shows an NJ tree with its virtual objects highlighted, showing that the visualization model is visually polluted even for such a moderate sized collection. For larger collections, the problem becomes more serious. <ref type="figure">Fig. 3</ref>. NJ tree for 890 items with its 888 virtual objects highlighted.</p><p>The procedure described next intends to improve the layout regarding its visual space usage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Leaf Promotion in NJ trees</head><p>In order to reduce visual overload in NJ trees, we present a deterministic, ordered graph rewriting operation <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b33">34]</ref> that replaces an internal node with a leaf whenever a certain configuration of nodes exists. This operation is called promotion.</p><p>Suppose a NJ tree T such that there exists a pair of leaves u and v, both connected to the same internal node a, and that another internal node b connects a and a leaf w, as shown in <ref type="figure" target="#fig_4">Figure 4</ref>(a). The rationale behind promotion is that because no other node was closer to w than a (during the construction of T ), then no other node is closer to u and v than w, so a can be replaced by w and b can be removed altogether, with no loss of representational power. This relation among u, v, w and a is weak, because it is valid only for the topology created by the NJ algorithm and it does not hold for the metric space induced by the similarity matrix (if any exists). Nevertheless, experiments have shown that the layout precision is barely affected by promotion.</p><p>The operation may be formally defined in terms of a pattern and a replacement on the tree, as shown in Figures 4(b) and 4(c). The promotion procedure consists of replacing every occurrence of the pattern, in decreasing order of the distance from node a in the pattern to a node in the center of the tree, breaking ties arbitrarily. Weights in the replacement are denoted ω r and are evaluated from the weights in the pattern, that are denoted ω p and were computed by the tree construction algorithm. We abuse notation and use T 1 , T 2 and T 3 to denote the node connecting a subtree to the rest of the tree. We let ω r (w, T 1 ) = ω p (b, T 1 ) + ω p (a, b)/2 + ω p (w, b)/2 and ω r (w, T i ) = ω p (a, T i ) + ω p (a, b)/2 + ω p (w, b)/4 for i = 2, 3. The resulting tree will be referred to as PNJ tree. Linear time suffices to find the nodes that match the pattern, the center of the tree, and to evaluate the distances. Sorting takes O(n log n). Applying the pattern takes constant time, then the overall promotion takes O(n log n). Experiments have shown that computational time to perform promotion is negligible. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Faster Algorithms for Neighbor Joining</head><p>In the original NJ, the search for the minimum S i j in a matrix D (which determines the next pair of nodes to combine) essentially visits every cell in D and thus takes O(n 2 ). This is the target operation of NJ variations that aim at improving efficiency, either by using specialized data structures <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b35">36,</ref><ref type="bibr" target="#b39">40]</ref> or through heuristics that sacrifice precision <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b16">17]</ref>. We have investigated two of them to assess the scalability of NJ trees. Our descriptions below are based on the original NJ steps and on the notation presented in Algorithm 1. Additionally, let S min denote the minimum S i j for a matrix D. Rapid Neighbor Joining <ref type="bibr" target="#b35">[36]</ref> produces the same trees as NJ. It is based on the observation that, while visiting row i and evaluating S i j = D i j − R i − R j in the search for S min , the value of R i is fixed. The algorithm keeps an auxiliary matrix where rows are sorted (and whose cells are indexed back to D) and stops visiting the sorted row i as soon as S i j − R i − R max &gt; S min , where R max is the maximum R i among all matrix rows (thus R j ≤ R max .) Some overhead is added by sorting rows, handling removed columns and evaluating R max . While Rapid NJ is still O(n 3 ), experiments have shown that the bounding strategy significantly reduces the number of visited cells in the search for S min and that Rapid NJ outperforms other faster algorithms.</p><p>A different approach is adopted by Fast Neighbor Joining <ref type="bibr" target="#b15">[16]</ref>. Fast NJ maintains a set having O(n) candidate matrix cells. The search of S min is restricted to such set of candidates. Initially, the set of candidates contains the minimum S i j values for each row i. When rows i and j are connected to a new node x and removed from D, the candidates they contribute are removed and a new candidate for the new matrix row x is added. The approach results in an algorithm that does not produce the same tree as the original NJ and whose worst case is O(n 2 ). The authors have shown that when the distance measure is nearly additive, Fast NJ produces the same tree as NJ. We devised and adopted a more conservative variation of Fast NJ. Exactly n candidates are kept, one for each row. When rows i and j are connected to a new node x and removed from D, we remove the candidates they contribute and we also recompute remaining candidates that involved either i or j. Recomputing the candidates potentially improves the choices of S min . The modified algorithm is O(n 3 ), but the practical running times are much closer to O(n 2 ).</p><p>We further discuss running time and precision issues in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>We have added the new strategies and algorithms to a visualization platform called VisPipeline. VisPipeline implements various multidimensional visualization techniques, mainly focused on content-based point placement techniques, supported by interaction, preprocessing and some analysis tools. VisPipeline is implemented in Java and allows components and tools to be connected visually. We then specialized some of the tools and created the visual image mining framework presented in Section 5. The two faster versions of the NJ tree, along with their versions with node promotion, were adapted and implemented. The available trees are: the original version (NJ), the acceleration implemented by the Rapid Algorithm (Rapid NJ), the Fast NJ modified as previously stated (FAST), and the promoting strategies for each one of these, which we will refer to as PNJ, PRapid and PFAST.</p><p>We have added numerous interactions as well as a few mining and evaluation functions, to adapt currently point placement analysis to the similarity tree concept. Some of the added features include: tree based interactions for cutting, selecting, splitting, browsing and coloring; numerical evaluations for the tree layouts; visual analysis procedures, such as clustering and classification algorithms (thus far SVM <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b21">22]</ref>, KNN <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b11">12]</ref> as well as various hierarchical clusterings are implemented); and similarity perturbation procedures to perform class visualization from an initial visual layout of labeled instances.</p><p>For the tests of processing times, we have employed a laptop with a 2.53 GHz Core2 Duo processor, 4GB RAM, running Windows 7.</p><p>This section presents the results of applying and testing the new versions of the similarity trees for improvement on visual and time scalability.</p><p>We firstly evaluate the precision of the original NJ tree against a high precision projection, LSP. The first paper that proposes the use of phylogenetic trees for visualization <ref type="bibr" target="#b9">[10]</ref> also does that, but it employs various textual document data sets, and we wished to test it against imaging data sets, due to our focus application. Although a previous work uses the tree for visualization of images <ref type="bibr" target="#b14">[15]</ref>, these evaluations were not previously performed. Secondly, we evaluate the precision of the trees against one another. Finally, we compare the processing times of all these techniques and demonstrate their capability to support exploration both in overall and detailed levels. First, we describe the data sets employed in the tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Data Sets and Test Setup</head><p>In the demonstrations and evaluations that follow, we have chosen to employ three imaging data sets, since this is the source of the sample application in Section 5.</p><p>The first image collection, named COREL, is composed of photographs that represent specific subjects: African tribes, beach, build-ings, buses, dinosaurs, elephants, flowers, horses, mountains and glaciers, and food. Each image is represented by a vector of 150 SIFT descriptors <ref type="bibr" target="#b23">[24]</ref>. The second image collection, named MEDICAL, is composed of MRI medical images, each represented by a vector of 28 descriptors, including Fourier descriptors from image histogram and energy computed from 2D image Fourier descriptors, mean intensity, and standard deviation computed over the entire image. The third collection, named OBJECTS, is a subset of the Caltech 256 data set, containing 45 classes, 5096 images and 1000 attributes that are 1000 SIFT features calculated over Harris-Laplace extractors <ref type="bibr" target="#b20">[21]</ref>. For all data sets, the similarity used to compare the samples was Euclidean similarity. All data sets are labeled and these labels are used for the purpose of evaluation of the visualization and mining procedures reported here. <ref type="table" target="#tab_1">Table 1</ref> summarizes the numbers related to these data sets. The first aspect of the trees to be evaluated is the use of visual space.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Visual Representation and Space Organization</head><p>In the NJ tree, most of the larger groups of elements lie on separate branches, forming subtrees of the main tree. As a consequence of the algorithm, the branches are also divided into smaller branches with the same properties. Exploration and interpretation can be made equally in all levels. Selection of the branches, and therefore of groups of collection elements, can be made with one click of the mouse. On the other hand, interpretation is dependent on branches, that is, users need the edges representing the branches to recognize elements with large correlation. Opposite to multidimensional projections, visual space must be shared with the edges. The main drawback of NJ trees regarding space usage, though, is the visual overload imposed by the presence of virtual objects (white small circles on the layouts), created every time two leaves are added to the tree or a node is combined with an already present virtual node. For a data set with n elements, n − 2 virtual nodes are added by any of the algorithms. As these objects are not part of the collection, they do not play any important role during analysis.</p><p>Node promoting shares the visual organization and exploratory advantages of NJ trees, but with fewer virtual objects, resulting in a cleaner view and ultimately leading to a more direct access to actual data objects on the tree branches. In our tests, PNJ presents in average 51% fewer virtual nodes than NJ trees. <ref type="table" target="#tab_2">Table 2</ref> summarizes the numbers related to space usage on the visualizations of the test data sets. For PNJ, space usage is much more rational and clutter is reduced. <ref type="figure" target="#fig_6">Figure 5</ref> shows the images of two of the test data sets, where we can clearly see the impact of having fewer virtual nodes. For larger data sets, the impact is even more evident.</p><p>It must be observed that the promotion procedure disturbs the 2neighborhood of the nodes. That changes slightly the distance distribution (see Section 4.3), but should not impact interpretation of the trees or other neighborhoods significantly. Large layers of virtual nodes at top levels, typical of NJ, are avoided. The Rapid algorithm for  NJ leads to the same configuration as the original NJ. Thus, PNJ and PRapid are the same as far as virtual node count. Trees produced by the FAST algorithm have the same node count as NJ, although producing a different node configuration. FAST node configuration leads to a lower reduction by promotion, as <ref type="table" target="#tab_2">Table 2</ref> reveals. With node promotion, space can be occupied by further nodes or used to easier access to groups of individuals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Precision</head><p>Various multidimensional projections have high precision in terms of grouping and separation, as well as very competitive processing times for large data sets. Similarity trees also have high precision but algorithm complexity of previously available versions and consequent processing times were far behind those of the high precision projections, making the technique less appealing for large data sets, regardless of its qualities. Here we show the evidence of precision and compare the precision of all the algorithms as well as with the precision of LSP.</p><p>Measuring the precision of a particular layout is meant to verify to what degree the distance (or neighborhood) in the layout corresponds to the similarity (or neighborhood) in the original feature space. In the layout generated from multidimensional projections, the Euclidean distance is used to indicate dissimilarity between points according to that projection. In trees, the dissimilarity between points is indicated by the weight of the path between them. Edge weights in the tree are evaluated by the NJ algorithm (L ix and L jx in Algorithm 1).</p><p>To evaluate precision, two measures previously employed for projections <ref type="bibr" target="#b29">[30]</ref> were adapted to the trees. The first measure is the Neighborhood Preservation, that evaluates the frequency at which the knearest neighbors of an object in the layout are also its k nearest neighbors in the original feature space, in average. Since the Rapid algorithm produces the same trees as the original algorithm, precision discussions on Rapid are the same as the discussion on the original NJ.</p><p>For the COREL data set, the trees show better precision than that of LSP. Also, it becomes clear that near neighborhoods are reconstructed better for the trees than for LSP ( <ref type="figure" target="#fig_7">Figure 6</ref>). Among the trees themselves, it can also be noticed that the ones created by FAST present slightly lower precision than the corresponding ones generated by original NJ algorithm. Another observation is that the promoting version for each algorithm is slightly less precise in neighborhood preservation than the non-promoting ones. That is easily explained by the fact that the 2-neighborhood of a point changes when a node is promoted, since sometimes it becomes the parent of a couple of other nodes that were deemed the closest in the first place (see Section 3.2). In that case, the parent is interfering with the closeness and with the concept of first neighbor. That is also the reason for the low value of neighborhood preservation for the first neighbor on those trees. In larger neighborhoods, the relationships are not changed by promotion. Yet, the trees presented very good neighborhood preservation considering the difficulty in recovering that for any multidimensional data mapping. The neighborhood preservation plot among trees for the MEDICAL data set is very similar to the plot for COREL, but there is no significant difference between the precisions of trees and of LSP, except for the very near neighborhoods, where global projections such as LSP do not perform so well. When a data set used for tests is labeled, that can also be used to verify precision based on class reconstruction in the final layout. We would like to point out that feature space definition and dissimilarity calculations play an important role in any visualization or mining process, and much so in the precision of similarity-based visualizations, particularly those based on pseudo-classes. For the COREL and MED-ICAL data sets used here, the feature space was obtained or calculated, and various tests were carried out, so that the result described reasonably well the set of images, albeit without resolving class separation.</p><p>The second precision measure is called Neighborhood Hit. It is the average frequency at which an object and its k-nearest neighbors belong to the same class. <ref type="figure">Figure 7</ref> shows the results of neighborhood hit for the COREL data set. Here, the trees also outperform LSP, but the capability of class reconstruction of the promoting trees does not differ much from that of the original algorithms. The performances for all the techniques were not significantly different. For the neighborhood hit plot based on the MEDICAL data set, the observations on the tree precisions also hold. However, there is no significant difference between the performance of LSP and that of the trees. <ref type="figure">Fig. 7</ref>. Precision by neighborhood hit for the COREL data set.</p><p>Neighborhood hit is a value extremely influenced by proper preprocessing tasks (choice of features and similarity) and by the boundaries between groups. To help determine to which extent a 2D mapping (or 3D for that matter) is actually reflecting in the visual space the same distances as in the original space, a distance plot is commonly employed. A distance plot is a scatter plot of distances in original space versus distances in the visual space. Ideally, the point cloud of that plot will lie close to the 45 • slope. <ref type="figure" target="#fig_8">Figure 8</ref> shows distance plots (also known as stress curves) for the trees and for LSP. It can be seen that, for the COREL data set, the trees do a better job than the projection, with the original NJ algorithm performing best, followed closely by FAST. Promotion dissipates the distances around the diagonal, however, keeping the slope trend and the distribution very satisfactory. For the MEDICAL data set, LSP performs better at reconstituting the distances according to dissimilarity in original space, with the trees performing worse and very similarly among themselves. Dissipation under promotion is also observed, but to a lesser extent. Promotion over the FAST-NJ is not shown, but it had the same effect of slight point dispersion in both cases. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Efficiency and Scalability</head><p>Fast projections such as LSP, which takes time O(n √ n), take advantage over the trees under time efficiency issues. However, the new versions of the NJ, based on FAST and Rapid algorithms, have dropped that difference. In fact, processing times for the FAST version are faster than the projection. The promotion procedure is efficient, so its cost is not significant. <ref type="table" target="#tab_3">Table 3</ref> shows the time comparison between the various versions of the tree, as well as the projection, for the three test data sets. From that table, it can be seen that the trees have very competitive time consumption, with the FAST versions largely outperforming all the others. Analyzing the processing times of <ref type="table" target="#tab_3">Table 3</ref> together with the precision discussions in the previous section, the scenario seems to point to a setup where global, initial layouts would be carried out using projections or the FAST or PFAST versions of the tree. More focused vi-sualizations would take advantage of the better precision of the Rapid variation of NJ. Next, we illustrate the use of the tree as basis for a visual classification system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">VISUAL IMAGE AND TEXT CLASSIFICATION</head><p>Techniques have been proposed for employing point placement, particularly multidimensional projections and graphs, to display collections of images <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b38">39,</ref><ref type="bibr" target="#b41">42]</ref> with or without support for classification tasks, some of which already employ tree visualizations to reflect a hierarchical clustering <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref>, serving the main purpose of supporting the browsing of collections on a visual space. However, to our knowledge, the tight coupling between a visualization system and an image mining environment is not available to date.</p><p>We focus on the goal of visually supporting image classification due to the challenges facing the subject, some of which we believe can be resolved by extensively involving the user via visual analysis tools. One of the challenges is the difficulty in understanding the reasons for failure of automatic classification procedures (e.g., what points are misclassified and why). Another recurrent situation is when users do have a proper automatic classification procedure in place, but wish to 'see' it and change it at will if necessary. The third scenario is when the current labeling of the data set is not appropriate for the goals of the user. There are different definitions of similar images and class labeling may acquire different configurations depending on the target applications. For both browsing and mining, we believe that similarity trees offer a valuable layout, for their capacity of local as well as global space reconstruction.</p><p>We have implemented a suite of tools for iterative classification, whereby the user, starting from either a labeled or a non-labeled data set, builds up training sets into classified sets by mixing automatic and visually supported manual classifications. The system, complete with evaluation tools, is added to a locally built data flow visualization prototype, named VisPipeline.</p><p>We describe some of the tools built around the concept of tree visualization to support tasks in such an integrated classification setup. The main features are presented in the next subsections and we finish by mentioning additional functionality implemented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Layers of Similarity</head><p>Similarity trees allow the viewer to analyze various degrees of similarities and to explore the data in various levels of detail with practically the same strategy. Well resolved groups are laid out as branches, and the delimitation of such groups is given by the top layers of the unrooted tree, suggesting branch-based interaction. What is motivating about similarity trees is, therefore, that the model is capable of describing, to a certain extent, the organization of the similarity relationship defined or chosen by the analyst. If the dissimilarity measure is capable of distinguishing groups and subgroups, they should appear as branches in the tree. <ref type="figure" target="#fig_10">Figure 9</ref> shows an example of some of the drilling down capabilities of the trees. We first display the COREL data set using PNJ <ref type="figure" target="#fig_2">(Figure 9a)</ref>. Then, since the data was already labeled, we perturbed the distance matrix by approaching the nodes that belonged to the same class and increasing the distance between nodes that did not belong to the same class. The result of perturbing the COREL distance matrix by 18% can be seen in <ref type="figure" target="#fig_10">Figure 9b</ref>. Although that type of perturbation can only be done when a correct label is established for the collection, it is very useful to separate classes in branches, while still maintaining, within each class, the structure and ordering of the original similarity. <ref type="figure" target="#fig_10">Figure 9c</ref> shows a branch containing flower pictures, and within that, evidence that color features may be separating the group further (that is, pink and most yellow flowers, orange and red ones, then white flowers). Selections can be made by circling groups of nodes in a free curve <ref type="figure" target="#fig_10">(Figure 9b</ref>) or by just clicking on any node. Clicking on a node selects either the node itself (if it is a leaf) or a branch. What the perturbation tool does, visually, is to redistribute those nodes that were close to the main skeleton of the tree towards their proper branch. Drilling can, of course, be done in any tree, but perturbation has interesting visualization value. A proper tool to generate a family of perturbed matrices according to users' specifications, as well as corresponding views, is made available. The various visualizations are displayed using a slider that moves from one perturbation to the next.  To confirm the evidence that similarity trees keep, at lower levels, the same properties observed at the top level, we have plotted, for the visualization in <ref type="figure" target="#fig_10">Figure 9b</ref> and for each one of its branches, the neighborhood preservation and the distance plots. <ref type="figure" target="#fig_0">Figure 10</ref> shows these plots for the full set and for the flower branch, but the results are consistent for all 8 branches. <ref type="figure" target="#fig_0">Figures 10d and 10c</ref> reveal that the local neighborhood and distance reconstitution follow the same patterns, or better, than the layout at global levels. All these evaluation functions, plus the ones used to evaluate the trees in Section 3, are readily available either as modules of the pipeline or on the menu and toolbox of the visualization window.  The matrix perturbation process, besides supporting visualization of pre-defined classes, helps understand the layering of similarity and supports our visual, interactive and iterative semi-automatic classification framework. When the matrix is perturbed, precision values improve even when the layouts are evaluated against the original matrices. One way to use that is to employ perturbation after the classification process, to help gather equally labeled data in the same branches and then browse branches to adjust wrongly classified ones. The process can also be useful to create new labeled data sets or to change pre-labeled ones to adapt to a new categorization scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Manual Classification Tools</head><p>A visual method for classification has the advantage that the user is immediately exposed to the results of false positives, false negatives, mismatches and outliers. It also opens space for user's influence on the setup and on the outcome of the classification process. Users may want to relabel the training set in order to correct final classification or to assign labels themselves to unlabeled data sets. Relevance feedback techniques <ref type="bibr" target="#b2">[3]</ref> could also use visualization tools. To support these tasks, we devised two manual classification tools, one to define an initial labeling for a non-labeled data set, and another to adjust categories of individuals or groups of individuals while browsing through the images. Both techniques are combined to perform a fast labeling or re-labeling task. <ref type="figure" target="#fig_0">Figure 11</ref> illustrates both tools. The OBJECTS data set was used in the example. <ref type="figure" target="#fig_0">Figure 11a</ref> shows the label-by-selection tool. Once a tree visualization is displayed for any data set, labeled or not, the user can define new labels (by color) for whole branches or for any group of nodes. Branches can be selected just by clicking at the top node of the branch, and other groups are selected using the free curve selector mentioned before. Each time this labeling procedure is started, a new scalar field is created with the new labels. When the user moves from one group to another, the labels are recolored for consistency. The latest selection in the example is colored red. The initial selection is blue. These are the extremes of the color table used in the examples. Once any color scheme is available for the data set, the user can browse images and change labels individually. <ref type="figure" target="#fig_0">Figure 11b</ref> illustrates this tool. After selecting a particular branch for browsing, users can change labels freely. New labels are defined by choosing new names for them or employing an already existing label name. The picture shows the selection of a few images on a branch. The name of the class is changed to "not round". Then, in the branch, whose visualization is seen in another window, the corresponding nodes change color. In <ref type="figure" target="#fig_0">Figure 11b</ref>, the change in color is highlighted by an ellipse. Once the data is fully labeled, these labels can be saved together with the original point or similarity matrix and used as training set for an automatic classifier or to evaluate other classifications of the same data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Iterating Towards a Fully Classified Data Set</head><p>With the proper visualization tools, it is possible to envisage an iterative process to converge from a smaller labeled data set to a proper categorization of even very large data sets. A combination of automatic and user-driven tasks should compound an environment fit to help a considerable number of applications.</p><p>We have built another set of tools into VisPipeline to accomplish that employing the similarity trees as one of the main visualization techniques, since similarity is at the core of many classification tasks. Besides the tools and evaluation modules illustrated above, automatic classification algorithms are being progressively built into the system. A network of modules summarizing a classification setup is shown in <ref type="figure" target="#fig_0">Figure 12</ref>. One of the three pipelines in that picture is the visualization of the test set, another is the visualization of the training set, and the third is the classification pipeline that feeds the test set into the SVM classification component. Readers are capable of loading similarity or feature matrices and feeding them into visualizations or classifiers. The classification returns a new scalar field on the test data set, which can then be changed and adjusted by the user through the manual procedures explained in Section 5.2. The resulting classification can be saved as a copy of the distance matrix or as a copy of the data matrix that originated the classification, together with class for   We tested that pipeline in various ways, but we illustrate progressive classification by extracting a data subset of the COREL data set containing 500 pictures and iteratively classifying it. We start with a labeled subset of 300 photos out of the 500 and add to the set 50 photos at each step. At each step, the classifier (SVM in this case) produces a result for the test set with added photos, which is then manually corrected by the user to increase the size of the classified set. This, in turn, can serve as a training set once new pictures are added. <ref type="figure" target="#fig_0">Figure 13</ref> illustrates the process. In particular, <ref type="figure" target="#fig_0">Figure 13a</ref> shows the visualization of one training data set. The test data set colored by corresponding target classes is shown in <ref type="figure" target="#fig_0">Figure 13b</ref>. The data set after classification is shown in <ref type="figure" target="#fig_0">Figure 13c</ref>. It can be seen that the great majority of points were correctly classified.</p><p>When there is available information of target classes, that is, if the ground truth is known, it is possible to verify the classification results. Besides the usual values reflecting the number of correctly clas-  sified instances and other conventional measures of classifications, it is possible, using another supporting tool, to verify the difference between the correct classification and that obtained using also the trees, precisely locating points that were mistakenly classified. <ref type="figure" target="#fig_0">Figure 13d</ref> shows the results of this layout matching tool applied to the trees in <ref type="figure" target="#fig_0">Figures 13b and 13c</ref>. By interacting with that users may be inspired to find the reasons for classification failure in some cases. The Graph Class Match Coordination module, which realizes the matching of trees, can be seen in the pipeline of <ref type="figure" target="#fig_0">Figure 12</ref>.</p><p>Coordination is an integral part of the system. Selections can be coordinated amongst the various projections and trees. One advantage of coordinating trees with projections is to be able to identify, for a group well formed in the projection, a possible structure within the group in the tree with possible formation of subgroups. This can compensate for the poor local neighborhood reconstruction common to most projection techniques. Also, for groups that are not well formed in the projection, the coordination with trees may suggest hypotheses related to similarity calculation or to the feature extraction process.  The processes illustrated above can serve the purpose of supporting classification of many types of multidimensional data, since the visualizations take as starting point feature sets or similarity calculations. The system is prepared to handle most functions presented before for any data set. What differs is the handling of the manual classifier (the individual labeler) that has to be attached to a proper browser. Additional functions may, naturally, be needed for other data types. The system currently allows exploration and classification of text. Classification procedures are still rudimentary, but there is effective functionality for determination of topics in branches. <ref type="figure" target="#fig_0">Figure 14</ref> shows an example for a text data set. Starting from the same LSP projection of <ref type="figure" target="#fig_0">Figure 1</ref>, after determining topics of various areas on that map, the group with predominantly red points is selected on the LSP and, by coordination, shown on the corresponding tree <ref type="figure" target="#fig_0">(Figure 14a</ref>). From that part of the tree, whose general content reflects computer audio, another branch is selected and highlighted in <ref type="figure" target="#fig_0">Figure 14b</ref>. One can see that, in the selected branch, different sub-branches are treating the subjects of computer music, auditory interfaces, data sonification and audio for virtual environments.</p><p>It is also possible to coordinate, by identity, visualizations of data types of different natures (such as image and text), provided the file identifiers for image and corresponding text are named equally. For instance, one can visualize and coordinate textual and image representations of protein sequences or of X-rays and their reports, and so on.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS AND FUTURE WORK</head><p>This paper proposes solutions for processing time and visual overload problems of phylogenetic similarity trees for the purpose of multidimensional data visualization. The first problem was handled by employing faster Neighbor Joining implementations or Neighbor Joining strategy. Overload was relieved by a linear graph rewriting procedure based on node promotion.</p><p>Numerical and visual comparisons have shown that the FAST algorithm is actually the fastest with small loss in precision, and that the Rapid algorithm accelerates its original version resulting in the same structure, therefore the same precision as the original NJ tree. Use of visual space has gained considerable improvement, since an average of 51% of the virtual nodes are eliminated by promotion. These procedures should endorse larger employment of similarity trees as a precise and fast technique that supports analysis in both overall and detail tasks with the same properties. Trees are capable of examining the original space locally and globally with similar precision. The tree building and visualization processes need no parametrization from the user.</p><p>An innovative form, based on the trees, of a classical classification application was also presented. The set of tools for the application of visual mining of images is made possible by the properties offered by trees complemented by the possibilities offered by multidimensional projections.</p><p>Trees are built from similarity matrices or from vector spaces followed by similarity calculations, giving it flexibility to work with different types of information as input. While discussions on proper feature spaces or similarity functions are out of the scope here, we intend to employ the trees as a platform to support converging to proper definitions of vector space and similarity relationships. Additionally, our next steps include building trees from very large, disk-based data sets <ref type="bibr" target="#b40">[41]</ref>, to extend the use of similarity based visualizations to massive data sets. Another very promising venue is to use the matrix perturbation process presented in this paper as a means for feedback into the classification process. The system separate pipelines are to be integrated into a fully functional visual classification system.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Projection of 675 extracts (title, authors, abstract and references) of scientific papers. Circles represent documents, colored according to subjects: case-based reasoning (blue), inductive logic programming (green), information retrieval (yellow), and computer audio (red). The audio group is highlighted.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Algorithm 1 Joining 1 :repeat 3 : 4 : 5 :</head><label>11345</label><figDesc>Neighbor Let every row i of matrix D be associated with a leaf i. 2: Select a pair of nodes (i, j) with the minimum value for S i j Create a new node x connected to nodes i and j, with edge lengths L ix and L jx Add row x to D, with values D xk for every column k = i, j 6:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( a )</head><label>a</label><figDesc>Initial layout. (b) Layout after fast force scheme.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .</head><label>2</label><figDesc>NJ tree for a collection of 675 textual documents.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Promotion. Filled circles represent actual objects and triangles represent subtrees.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>(a) NJ for the COREL data set.(b) PNJ for the COREL data set.(c) NJ for the MEDICAL data set. (d) PNJ for the MEDICAL data set.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 5 .</head><label>5</label><figDesc>Tree models for the COREL and MEDICAL data sets, highlighting virtual nodes and paths.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 6 .</head><label>6</label><figDesc>Precision by Neighborhood Preservation for the COREL data set.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Distance plots, with original space in horizontal axis vs. visualization space in vertical axis. COREL data set is top row, MEDICAL data set is bottom row. Techniques are FAST-NJ, NJ, PNJ, and LSP.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>(a) PNJ of the Corel data set. (b) PNJ from a distance matrix perturbed by a rate of 18%. (c) Detail of the circled branch in (b), with flower pictures.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 9 .</head><label>9</label><figDesc>Branch selection and exploration of the COREL data set.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>(a) Neighborhood preservation of COREL -18%. (b) Distance plot of COREL -18%. (c) Precision of the circled branch in 9b. (d) Distance plot of circled branch in 9b.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 10 .</head><label>10</label><figDesc>Precision consistency in branches.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>(a) Class definition branch by branch. (b) Manual classification using the browser.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 11 .</head><label>11</label><figDesc>Visual support for manual definition of labels. future use. The saved data matrix can then be loaded as a training set in subsequent classification steps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Fig. 12 .</head><label>12</label><figDesc>Classification pipeline with visualization pipelines for test and training data sets.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head></head><label></label><figDesc>(a) Training data with 350 pictures. (b) Test data with 500 pictures. Color is target class. (c) Classified data with 500 pictures. (d) Mismatch tree. Points in red were misclassified.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Fig. 13 .</head><label>13</label><figDesc>Two steps of classification. Misclassified points: 25/500 (5%).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head></head><label></label><figDesc>(a) Global NJ tree. Points highlighted on top branch correspond to area highlighted in Figure 1. (b) Detail of one of the branches from highlighted portion in 14a.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Fig. 14 .</head><label>14</label><figDesc>NJ tree corresponding to same text data set asFigure 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>• J.G.S. Paiva is with Federal University of Uberlândia and ICMC, jgustavo@icmc.usp.br. • L. Florian-Cruz is with ICMC -University of São Paulo, laurelyf@icmc.usp.br. • H. Pedrini is with IC -University of Campinas, helio@ic.unicamp.br. • G.P. Telles is with IC -University of Campinas, gpt@ic.unicamp.br. • R. Minghim is with ICMC -University of São Paulo, rminghim@icmc.usp.br.</figDesc><table /><note>Manuscript received 31 March 2011; accepted 1 August 2011; posted online 23 October 2011; mailed on 14 October 2011. For information on obtaining reprints of this article, please send email to: tvcg@computer.org.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Collection details.</figDesc><table><row><cell>Data set</cell><cell>Content</cell><cell>Classes</cell><cell>Items</cell><cell>Attributes</cell></row><row><cell>COREL</cell><cell>Photographs</cell><cell>10</cell><cell>1000</cell><cell>150</cell></row><row><cell>MEDICAL</cell><cell>MRI images</cell><cell>12</cell><cell>548</cell><cell>28</cell></row><row><cell>OBJECTS</cell><cell>Object pictures</cell><cell>45</cell><cell>5096</cell><cell>1000</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 .</head><label>2</label><figDesc>Numbers of Nodes.</figDesc><table><row><cell cols="3">Data set Nodes Virtual</cell><cell cols="4">PNJ Saving PFAST Saving</cell></row><row><cell></cell><cell></cell><cell></cell><cell>virtual</cell><cell></cell><cell>virtual</cell><cell></cell></row><row><cell cols="2">COREL 1000</cell><cell>998</cell><cell>412</cell><cell>59%</cell><cell>548</cell><cell>45%</cell></row><row><cell>MEDICAL</cell><cell>540</cell><cell>538</cell><cell>186</cell><cell>65%</cell><cell>308</cell><cell>43%</cell></row><row><cell cols="2">OBJECTS 5097</cell><cell cols="2">5095 2437</cell><cell>53%</cell><cell>3019</cell><cell>41%</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 3 .</head><label>3</label><figDesc>Layout Building Times (seconds).</figDesc><table><row><cell>Technique</cell><cell cols="2">COREL MEDICAL</cell><cell>OBJECTS</cell></row><row><cell>Original NJ</cell><cell>3.0474</cell><cell>0.5</cell><cell>394.383</cell></row><row><cell>Promoting Original NJ</cell><cell>3.064</cell><cell>0.506</cell><cell>396.507</cell></row><row><cell>Fast NJ</cell><cell>0.0936</cell><cell>0.0462</cell><cell>4.976</cell></row><row><cell>Promoting Fast NJ</cell><cell>0.1104</cell><cell>0.052</cell><cell>6.1</cell></row><row><cell>Rapid NJ</cell><cell>2.366</cell><cell>0.373</cell><cell>261.971</cell></row><row><cell>Promoting Rapid NJ</cell><cell>2.3828</cell><cell>0.3788</cell><cell>262.178</cell></row><row><cell>LSP</cell><cell>0.7182</cell><cell>0.2068</cell><cell>61.564</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>Authors wish to acknowledge CNPq (INCT -MACC 573710/2008-2 and 301295/2008-5), FAPESP and FAPEMIG Brazilian financial agencies. We are grateful to Fernando V. Paulovich and Rafael M. Martins for coding the core of VisPipeline.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Drawing Phylogenetic Trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bachmaier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Brandes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schlieper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Algorithms and Computation</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">3827</biblScope>
			<biblScope unit="page" from="1110" to="1121" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Ordered and Quantum Treemaps: Making Effective Use of 2D Space to Display Hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Bederson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wattenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transaction on Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="833" to="854" />
			<date type="published" when="2002-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Information Retrieval: Implementing and Evaluating Search Engines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Büttcher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L A</forename><surname>Clarke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">V</forename><surname>Cormack</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010" />
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A Linear Iteration Time Layout Algorithm for Visualising High-Dimensional Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chalmers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th Conference on Visualization (VIS&apos;96)</title>
		<meeting>the 7th Conference on Visualization (VIS&apos;96)<address><addrLine>San Francisco, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="127" to="131" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Exemplar-based Visualization of Large Document Corpus</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hua</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1161" to="1168" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A Multidimensional Image Browser</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cinque</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Levialdi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Malizia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Olsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages and Computing</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="103" to="117" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Support-Vector Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Cortes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vapnik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Machine Learning</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="273" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M</forename><surname>Cover</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">E</forename><surname>Hart</surname></persName>
		</author>
		<title level="m">Nearest Neighbor Pattern Classification. Institute of Electrical and Electronics Engineers Transactions on Information Theory</title>
		<imprint>
			<date type="published" when="1967" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="21" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Multidimensional Scaling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A A</forename><surname>Cox</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Chapman &amp; Hall/CRC</publisher>
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Point Placement by Phylogenetic Trees and its Application for Visual Analysis of Document Collections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Cuadros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">V</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Minghim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Telles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Visual Analytics Science and Technology (VAST&apos;2007)</title>
		<meeting>IEEE Symposium on Visual Analytics Science and Technology (VAST&apos;2007)<address><addrLine>CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="99" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Interactive Vector Field Feature Identification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Daniels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">W</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">G</forename><surname>Nonato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="1560" to="1568" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Pattern Classification and Scene Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">O</forename><surname>Duda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">E</forename><surname>Hart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1973" />
			<publisher>John Wiley &amp; Sons Inc</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Heuristic for Graph Drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Eades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Congressus Numerantium</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="149" to="160" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Fundamentals of Algebraic Graph Transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Ehrig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ehrig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Prange</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taentzer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Eler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Y</forename><surname>Nakazaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">V</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">F</forename><surname>Andery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C F</forename><surname>Oliveira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Batista-Neto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Minghim</surname></persName>
		</author>
		<title level="m">Visual Analysis of Image Collections. The Visual Computer</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="923" to="937" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Fast Neighbor Joining</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Elias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lagergren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32nd International Colloquium on Automata, Languages and Programming (ICALP&apos;05)</title>
		<meeting>the 32nd International Colloquium on Automata, Languages and Programming (ICALP&apos;05)</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">3580</biblScope>
			<biblScope unit="page" from="1263" to="1274" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Relaxed Neighbor Joining: A Fast Distance-Based Phylogenetic Tree Construction Method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Sheneman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Evolution</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="785" to="792" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Hierarchical Classification for Automatic Image Annotation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Luo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 30th Annual International ACM SI-GIR Conference on Research and Development in Information Retrieval</title>
		<meeting>the 30th Annual International ACM SI-GIR Conference on Research and Development in Information Retrieval<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="111" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Integrating Concept Ontology and Multitask Learning to Achieve More Effective Classifier Training for Multilevel Image Annotation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Luo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="407" to="426" />
			<date type="published" when="2008-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Neighbor-Joining Revealed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Gascuel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Steel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Molecular Biology and Evolution</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Caltech-256 Object Category Dataset</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Griffin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Holub</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Perona</surname></persName>
		</author>
		<idno>7694</idno>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
		<respStmt>
			<orgName>California Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Hearst</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">T</forename><surname>Dumais</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Osman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Platt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Scholkopf</surname></persName>
		</author>
		<title level="m">Support Vector Machines. IEEE Intelligent Systems and their Applications</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="18" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Principal Component Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Jolliffe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Automatic Linguistic Indexing of Pictures by a Statistical Modelin Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Z</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1075" to="1088" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Recrafting the Neighbor-Joining Method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mailund</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">S</forename><surname>Brodal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fagerberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">N S</forename><surname>Pedersen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Phillips</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">29</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">PDH: A Human-Centric Interface for Image Libraries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Moghaddam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE International Conference on Multimedia and Expo</title>
		<meeting>IEEE International Conference on Multimedia and Expo<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-07" />
			<biblScope unit="page" from="901" to="904" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Interactive Access to Large Image Collections using Similarity-Based Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Worring</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages &amp; Computing</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="203" to="224" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Piecewise Laplacian-based Projection for Interactive Data Exploration and Organization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">V</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Eler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Poco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">P</forename><surname>Botha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Minghim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">G</forename><surname>Nonato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Eurovis</title>
		<meeting>Eurovis</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="1091" to="1100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">HiPP: A Novel Hierarchical Point Placement Strategy and its Application to the Exploration of Document Collections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">V</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Minghim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1229" to="1236" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Least Square Projection: A Fast High Precision Multidimensional Projection Technique and its Application to Document Mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">V</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">G</forename><surname>Nonato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Minghim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Levkowitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="564" to="575" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Two-Phase Mapping for Projecting Massive Data Sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">V</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">G</forename><surname>Nonato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="1281" to="1290" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">SpaceTree: Supporting Exploration in Large Node Link Tree, Design Evolution and Empirical Evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Plaisant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Grosjean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Bederson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Information Visualization</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page">57</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Evaluating a Visualization of Image Similarity as a Tool for Image Browsing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Rodden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Basalaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sinclair</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">R</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE InfoVis</title>
		<meeting>IEEE InfoVis<address><addrLine>San Francisco, CA , USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="36" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Handbook of Graph Grammars and Computing by Graph Transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Rozenberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>World Scientific Publishing Company</publisher>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">The Neighbor-Joining Method: A New Method for Reconstructing Phylogenetic Trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Saitou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Nei</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Molecular Biology and Evolution</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="406" to="425" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Rapid Neighbour-Joining</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Simonsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mailund</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">N</forename><surname>Pedersen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of WABI 2008</title>
		<meeting>WABI 2008<address><addrLine>Karlsruhe, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2008-09" />
			<biblScope unit="page" from="113" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A Note on the Neighbour-Joining Method of Saitou and Nei</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Studier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>Kepler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Molecular Biology and Evolution</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="729" to="731" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">On Improved Projection Techniques to Support Visual Exploration of Multidimensional Data Sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tejada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Minghim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">G</forename><surname>Nonato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">formation Visualization</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="218" to="231" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Visualization, Estimation and User-Modeling for Interactive Browsing of Image Libraries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Tian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Moghaddam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM International Conference on Image and Video Retrieval</title>
		<meeting><address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="7" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Large-Scale Neighbor-Joining with NINJA</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Wheeler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of WABI 2009</title>
		<meeting>WABI 2009<address><addrLine>Philadelphia, PA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="375" to="389" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Large-Scale Neighbor-Joining with NINJA</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Wheeler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th International Conference on Algorithms in Bioinformatics</title>
		<meeting>the 9th International Conference on Algorithms in Bioinformatics<address><addrLine>Philadelphia, PA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="375" to="389" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Browsing Visual Collections Using Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Worring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>De Rooij</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Van Rijn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Multimedia Information Retrieval</title>
		<meeting><address><addrLine>Augsburg, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="307" to="312" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
