<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Synthetic Generation of High-Dimensional Datasets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georgia</forename><surname>Albuquerque</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>LÃ¶we</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Marcus</forename><surname>Magnor</surname></persName>
						</author>
						<title level="a" type="main">Synthetic Generation of High-Dimensional Datasets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:00+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Synthetic data generation</term>
					<term>multivariate data</term>
					<term>high-dimensional data</term>
					<term>interaction</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Generation of synthetic datasets is a common practice in many research areas. Such data is often generated to meet specific needs or certain conditions that may not be easily found in the original, real data. The nature of the data varies according to the application area and includes text, graphs, social or weather data, among many others. The common process to create such synthetic datasets is to implement small scripts or programs, restricted to small problems or to a specific application. In this paper we propose a framework designed to generate high dimensional datasets. Users can interactively create and navigate through multi dimensional datasets using a suitable graphical user-interface. The data creation is driven by statistical distributions based on a few user-defined parameters. First, a grounding dataset is created according to given inputs, and then structures and trends are included in selected dimensions and orthogonal projection planes. Furthermore, our framework supports the creation of complex non-orthogonal trends and classified datasets. It can successfully be used to create synthetic datasets simulating important trends as multidimensional clusters, correlations and outliers.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Generating synthetic datasets is a common practice in many research areas. In situations where real data may be difficult to obtain, due to budget, time or privacy concerns, generating synthetic data poses a viable alternative. It is commonly employed as a substitute for real data and can be used to provide a controlled testing environment that meets specific conditions. This can be especially useful for purposes of verification, simulation or proof of concept.</p><p>There are numerous algorithms and tools that can be used to create synthetic data. However, most of the work done so far was developed for specific applications. For example, synthetic data generation to test Information Discovery and Analysis Systems <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b7">8]</ref> or software testing <ref type="bibr" target="#b9">[10]</ref>.</p><p>The common solution to generate synthetic data is to use wellknown statistical tools or develop small problem-oriented applications, which can be a time-consuming task. Addressing this shortcoming, we propose a framework for synthetic data generation that allows creating multivariate datasets based on visual specifications. Our approach was originally developed to create test cases for automated visual exploration algorithms <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b16">17]</ref>, but it can be directly used for a variety of applications that need multivariate datasets, such as learning and data mining algorithms. Such visual exploration algorithms are commonly used to search for hidden structures in high-dimensional datasets that can be observed in lower-dimensional projections of the data (two or three dimensions). A typical synthetically generated dataset to test these algorithms has a large number of dimensions. The values in most dimensions are randomly generated and multidimensional structures are then defined in the remaining dimensions. Some examples of such structures are correlations or clusters between selected dimensions. A good dataset does not necessarily exhibit only features that can be found by any visual analysis tool, but it may contain complex structures that are difficult to find using most algorithms, e.g., nonorthogonal structures or non-linear correlation between dimensions. Using synthetic datasets, it can be easily verified if the algorithm succeeded in finding all defined structures. We propose a powerful approach to generate different patterns in the data, including multidimensional clusters, correlations and other trends. The points of the dataset are created by sampling statistical distributions in a multidimensional space: First, the user gives basic information about the desired dataset, e.g. number of dimensions and samples. Second, the user defines a set of structures in the multidimensional space that are represented by probability density functions. Finally, all points are generated by sampling these functions. Our framework allows users to create classified and unclassified highdimensional datasets and to insert complex structures present in real data using painting tools, e.g. correlations between the attributes and clusters with different forms and dimensions. Additionally, the algorithm is able to create structures based on existing real data.</p><p>The rest of the paper is structured as follows: Section 2 discusses related work, Section 3 presents a short overview of our framework, Sections 4 and 5 describe our generation algorithm. Sections 6 and 7 show how the user may interact with the framework and some dataset examples, respectively. Finally, Section 8 concludes the paper, outlining open issues and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Generating synthetic data is an important tool that is used in a variety of areas, including software testing, machine learning, and privacy protection.</p><p>In software testing, synthetically generated inputs can be used to test complex program features and to find system faults. The difficult and expensive process of generating test data that meets specific faultbased testing criteria has traditionally been done by hand. In 1991, De-Millio and Offut claim to have made the first attempt to automatically generate such test data <ref type="bibr" target="#b4">[5]</ref>, introducing the approximation technique of constraint-based testing. More recent research suggests the use of genetic algorithms to generate adequate test data <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b11">12]</ref>. To this day, generating test data remains an active research topic in this field.</p><p>Another application area is the field of machine learning, where synthetic data can be used to balance training data. For example, when teaching an artificial intelligence to distinguish between a number of different patterns, the amount of samples for each pattern should be as equal as possible. In this field, it is a common problem that overrepresenting a certain pattern may introduce artificial bias towards that pattern. In order to prevent this problem, training datasets may be equalized by generating additional synthetic training data <ref type="bibr" target="#b6">[7]</ref>.</p><p>Synthetic data is also commonly used in scenarios where collecting real data is not an option, due to budget, time or privacy concerns. These datasets are designed to obscure sensitive information, while still maintaining statistical properties of the original data <ref type="bibr" target="#b13">[14]</ref>. This may be the case when testing the reliability of data-mining tools that have to operate on complex multivariate data. For the simulation of real high-dimensional data, complex statistical interdependencies within the multivariate dataset can be modeled using semantic graphs <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b7">8]</ref>.</p><p>Another approach is to generate synthetic datasets using the programming language R <ref type="bibr" target="#b3">[4]</ref>. This statistical computing environment offers a strong script-based approach, using a variety of readily available statistical distributions.</p><p>Since our framework is heavily focused on generating synthetic data with very specific visual properties, many of the classical statistical generation techniques do not apply to our case. Synthetic data, in our case, is used to model visual trends of real datasets. Our motivation to develop this framework was the evaluation of automated visual exploration algorithms that support the analysis of high-dimensional data. The Scagnostic method <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b19">20]</ref> is one such approach. By modeling the multivariate dataset as a graph, properties such as edgelength, graph-length, graph-diameter, and other graph properties are used to measure trends in lower dimensional projections of the dataset. These measures can be used for automated visual exploration of highdimensional datasets. Exhaustively searching for relevant information from such datasets may become an overwhelming task, as highdimensional data has to be projected onto lower-dimensional representations. In addition to the Scagnostic method, diverse automated visualization techniques <ref type="bibr" target="#b12">[13]</ref> and quality measures <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b0">1]</ref> have been designed to analyze these high-dimensional datasets. They provide the user with appropriate projections, displaying information deemed useful according to user-defined constraints. Our framework is designed to generate synthetic datasets that can be used to test and evaluate such visual exploration techniques.  <ref type="figure" target="#fig_0">Figure 1</ref> depicts the data creation pipeline. These are the steps that our generation algorithm goes through when creating an ndimensional dataset: First, some properties of the dataset are defined as input. These properties include: the number of dimensions, data samples, classes, a default distribution, and the data type of each dimension. Our framework supports two types of data: floating point and integer values. According to these parameters, a default n-dimensional probability density function (PDF) is created that can be used to generate a default dataset. Each data sample of the dataset is assigned a random position in this space. In the second step, structure may be added to chosen dimensions. The user can adjust and model desired structures using generator objects. Our framework has three kinds of such objects: A one-dimensional PDF that allows manipulation of each dimension separately, a two-dimensional PDF to manipulate orthogonal projections of two dimensions simultaneously, and a three dimensional generator object that is defined using a special plane, henceforth termed probability distribution plane (PDP). In the last step, user-controlled random noise may be applied to all dimensions to simulate irregularities found in real data. All properties and generator objects may be stored in an XML file, in order to allow future editing if necessary. The generated sample points may be exported in a comma-separated values (.csv) file format.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">OVERVIEW</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DATA GENERATION</head><p>Synthetic data generation algorithms enable users to create artificial datasets with desired characteristics. In our framework, the user may define these characteristics as part of a generator. We define a generator as the central structure that contains all necessary information to generate an n-dimensional dataset. This includes the number of dimensions and the amount of samples that are to be generated. Furthermore, the distribution of these samples is defined by a set of generator objects. Each generator object is a small module representing the relationship between different dimensions. The user may attach multiple objects to any of the n dimensions of the generator. These objects taken together define the distributions in our n-dimensional data set.</p><p>While the list of available generator objects is designed to be easily extended, we use three specific modules that can model relationships between one, two, or three dimensions, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">One-Dimensional Probability Density Functions</head><p>The first generator object is a one-dimensional probability density function (one-dimensional PDF). A PDF Ï(x) models the distribution of a variable x along a single dimension <ref type="bibr" target="#b2">[3]</ref>. Ï(x) describes the likelihood that a random variable will fall on x â R. Any number of onedimensional PDFs Ï i can be orthogonally overlaid in such a way that:</p><formula xml:id="formula_0">Ï(x 1 , . . . , x n ) = n â i=1 Ï i (x i ).</formula><p>This can be utilized to define a multi-dimensional PDF. <ref type="figure">Figure 2</ref> shows an example of this for two and three dimensions. In our framework, we use n of these PDFs to define our n-dimensional probability density space. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Two-Dimensional Probability Density Functions</head><p>The second module is a two-dimensional probability density function (two-dimensional PDF). These functions are analogous to the previously described probability density functions, and are used to define conditional relationships between two distinct dimensions of the ndimensional probability density space. Mapping multi-dimensional datasets in lower-dimensional projections is a common practice in information visualization. Particularly, two-dimensional projections are extensively used in diverse visualization tools, e.g. XmdvTool <ref type="bibr" target="#b18">[19]</ref> and GGobi <ref type="bibr" target="#b15">[16]</ref>. Most commonly such tools show two dimensions at a time, using an axis-aligned projection of the data. Appling this approach to data generation, a two-dimensional PDF allows the user to design features from a familiar perspective.</p><p>Beyond the ability to generate axis-aligned structures, a set of these PDFs may be combined to define more complex structures across an arbitrary number of dimensions, as can be seen in <ref type="figure">Figure 3</ref>. The dataset seen in (a) and (b) was generated using two independent twodimensional PDFs attached to the green and red, or green and blue dimensions, respectively. Note how the combination of these two PDFs generates a structure in the three-dimensional space that satisfies both projected distributions.  <ref type="figure">Fig. 3</ref>. A dataset consisting of 1000 samples. It was generated using two different two-dimensional PDFs defined between (a) the green and red, and (b) the green and blue dimensions, respectively. (c) is an axisindependent view that shows the three-dimensional structure that has been created by combining the two PDFs. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Probability Distribution Planes</head><p>In addition to axis-aligned distributions, the user may also demand datasets containing asymmetrical clusters and correlations that cannot be represented by one-or two-dimensional PDFs. For that purpose, we introduce our final generator object: The probability distribution plane (PDP).</p><p>A PDP is defined on a three-dimensional subset of the ndimensional probability density space. It is defined by four points A, B, C, D â R 3 , so that all four points lie on a common plane as can be seen in <ref type="figure" target="#fig_3">Figure 4</ref>. These four points define the corners of a tetragon, onto which a two-dimensional PDF Ï( u , v ) is mapped. This allows the user to define a non-orthogonal two-dimensional PDF across three different dimensions.</p><p>In addition to this, we developed a scattering tool that allows the user to extend the two-dimensionally defined distribution into the third dimension by using a noise-like function that is applied along the plane normal. This function is controlled by two parameters: Scattering type and scattering intensity. The scattering type describes the behaviour of the noise that is being applied along the planes normal during data  <ref type="figure">Figure 5</ref> shows an example of how scattering affects data points generated from a PDP. (a) depicts the points generated without any scattering applied to them while (b) portrays the points scattered along the normal of the plane using gaussian-scattering.</p><p>The PDP is designed to easily create structures within the human visible domain. It allows the user to model axis-independent clusters, correlations, and other features in an intuitive way. As can be seen in <ref type="figure">Figure 6</ref>, PDPs not only influence the exact subset of dimensions they are defined in, but also all other subsets of the n-dimensional dataset that contain any of the dimensions associated with the PDP. This property can be utilized to create visual and statistical patterns beyond the three dimensions of the generator object. PDPs may be combined with other generator objects in order to shape more complex structures across numerous dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Generation Algorithm</head><p>Once the user has finished setting up generator objects, the final dataset may be generated. During this process all of the provided generator objects g â G are taken into account in order to generate an ndimensional dataset consisting of a total of m data samples s j .</p><formula xml:id="formula_1">s j := ï£« ï£¬ ï£¬ ï£¬ ï£­ Ï j,1 Ï j,2 . . . Ï j,n ï£¶ ï£· ï£· ï£· ï£¸ + ï£« ï£¬ ï£¬ ï£¬ ï£­ Î½ j,1 Î½ j,2 . . . Î½ j,n ï£¶ ï£· ï£· ï£· ï£¸ , â j = 1, 2, . . . , m</formula><p>where Ï j is the original value of the j th data sample and Î½ j is a vector of trivial noise values that may be of a gaussian, linear, or constant distribution.</p><p>Algorithm 1 shows a simplified version of our generation algorithm. We start by generating each sample Ï j of the data set. At the beginning, all attributes of this sample Ï j,i are undefined and will be computed considering the involved generator objects. Every dimension is assigned exactly one one-dimensional PDF, but may also have an arbitrary number of two-dimensional PDFs and PDPs associated with it.</p><p>Algorithm 1 Generation algorithm.</p><p>for</p><formula xml:id="formula_2">j = 0 â m do for i = 0 â n do if Ï j,i is undefined then g â g rand â G {(1) Select a random generator object} if g is PDP then if Ï j,dim k is undefined, âdim k â g then Ï j,dim k â rand(g), âdim k â g else go to (1) end if end if if g is two-dimensional PDF then if Ï j,dim k is undefined, âdim k â g then Ï j,dim k â rand(g), âdim k â g else if Ï j,dim 1 is undefined, {dim 1 , dim 2 } â g, dim 1 = dim 2 then Ï j,dim 1 â rand(g, Ï j,dim 2 ) end if end if end if if g is one-dimensional PDF then Ï j,dim â rand(g), dim â g end if end if end for end for</formula><p>For each dimension, to determine Ï j,i , we randomly choose a generator object g from our defined set G. Since there may be more than one PDF defined per dimension, these PDFs may contradict each other in some areas, random selection allows us to average these contradicting PDFs. Depending on the kind of the selected generator object, the value of the attribute is computed as follows:</p><p>â¢ If g is a PDP, we verify if all associated dimensions dim k â g, k = 1, 2, 3 are still undefined for this sample Ï j . If this is the case, then the PDP is used to generate values, not only for the i th dimension, but for all three dimensions involved. Otherwise, this particular PDP object is discarded for this step and another generator object g is selected.</p><p>â¢ If g is a two-dimensional PDF, we first verify the two associated attributes. If neither value of the two involved dimensions dim k â g, k = 1, 2 is defined, we can safely generate new values for each of the attributes. However, if one of these values was already defined in a previous step, we generate only the value of the undefined attribute using this generator object, constrained by the previously generated value.</p><p>â¢ One-dimensional generator objects are only selected when no PDP or two-dimensional PDF can be used to generate the values. Whenever there are no other valid generator objects defined on the current dimension, the one-dimensional PDF is selected instead. A single independent value for the attribute on dimension dim â g is then generated based on this PDF.</p><p>Once all attributes of Ï j have been processed, the sample is fully defined. This process is repeated until all samples are generated.</p><p>To further illustrate our approach, a brief step-by-step example is given in <ref type="figure" target="#fig_5">Figure 7</ref>. It demonstrates how a data sample is generated using our algorithm.</p><p>In this example we can see that the data sample begins completely undefined in step 0. In step 1, a three-dimensional generator object (PDP) was randomly selected. As a result of this, three attributes Ï j,1 , Ï j,4 , Ï j,nâ2 are generated at the same time and from the same distribution function. In step 2, the one-dimensional generator object (one-dimensional PDF) was randomly selected. Therefore, only the current attribute Ï j,2 is generated. In step 3, the algorithm selected a two-dimensional generator object (two-dimensional PDF). In this case, the generator object is associated with two attributes, one of which has already been defined. Thus, only the other attribute at Ï j,3 is generated, but constrained by the value of the attribute at Ï j,nâ2 . This process continues until the data sample is completely defined in Step n. Note that given the nature of the algorithm, it is likely that Ï j is fully defined even before the n th step, in which case it would be safe to proceed with Ï j+1 .</p><p>Our data samples are eventually saved as comma-separated values (.csv), in a way that represents an m Ã (n + 1) matrix with the values at n + 1 being the class ID of the sample, so that:</p><formula xml:id="formula_3">ï£« ï£¬ ï£¬ ï£¬ ï£­ s 0 T s 1 T . . . s m T ï£¶ ï£· ï£· ï£· ï£¸ = ï£« ï£¬ ï£¬ ï£¬ ï£­ s 0,0 s 0,1 . . . s 0,n s 0,class s 1,0 s 1,1 . . . s 1,n s 1,class . . . . . . . . . . . . . . . s m,0 s m,1 . . . s m,n s m,class ï£¶ ï£· ï£· ï£· ï£¸ .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">SAMPLING A PROBABILITY DENSITY FUNCTION</head><p>Using our framework, the user may define an arbitrary one-or twodimensional probability density function as input by simply drawing it on the screen. This drawn input is then interpreted as a finite list of values representing a PDF. Directly interpolating these values into a continuous function and using common statistical methods to sample this distribution may be very computationally expensive depending on the given function. For that reason, we developed an alternative algorithm that allows us to quickly sample any function the user may give as input.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Input Functions</head><p>Before we can assume that the finite list of discrete values that the user gave as input represents an actual probability density function, we have to prove that the input, after interpolation, will adhere to the definition of a PDF.</p><p>First, the user interface is designed in such a way as to only allow values greater than or equal to 0, thus fulfilling:</p><formula xml:id="formula_4">Ï(x) â¥ 0, x â R.</formula><p>(1)</p><p>Second, the input is limited to a user-defined range, given by a lower bound Î± and an upper bound Ï. Our system further assumes that all values beyond that range are 0. This yields:</p><formula xml:id="formula_5">lim xâââ Ï(x) = lim xââ Ï(x) = 0.<label>(2)</label></formula><p>Finally, a user-drawn function is considered to be implicitly normalized:</p><formula xml:id="formula_6">â ââ Ï(x)dx = 1.<label>(3)</label></formula><p>(1), <ref type="bibr" target="#b1">(2)</ref> and <ref type="formula" target="#formula_6">3</ref>together define a continuous PDF <ref type="bibr">[2, p.772]</ref>.</p><p>We therefore know that the given input, after interpolation, adheres to the mathematical definition of a continuous PDF.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Sampling a Discrete Function</head><p>When generating random samples from a continuous PDF Ï, we make use of Ï's cumulative probability function P. A cumulative probability function <ref type="bibr">[3, pp.36</ref>] is defined as</p><formula xml:id="formula_7">P(t) := t ââ Ï(x)dx, â t, x â R.</formula><p>Since, in our case, the continuous function Ï is represented by a list of discrete values Ï arr , we can calculate P arr [x] as Since most trivial random number generators can only generate uniformly distributed random variables, we can not directly reproduce the arbitrary distribution described in Ï arr . Therefore, we have to map these random variables onto a weighted representation of Ï arr . This weighted representation is the cumulative probability function P arr of Ï arr .</p><formula xml:id="formula_8">P arr [x] := x â i=0 p arr [i], âx â [0, l â 1] â© N.</formula><p>Given a uniformly distributed random variable Î» â [0, 1) we can select an index i so that</p><formula xml:id="formula_9">P arr [i] â¤ Î» â¤ P arr [i + 1].<label>(4)</label></formula><p>As visualized in <ref type="figure" target="#fig_7">Figure 8</ref> this results in i being distributed according to Ï arr . Since it is more likely that Î» will fall into a cell with a high probability. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Sampling an Interpolated Function</head><p>A set of random data samples generated from a discrete array of size l can only have one distinct data sample per array cell. In order to approximate subcell accuracy, we have to use interpolation. It is important to note that in this case interpolation is not a trivial problem. We are not looking to recreate any function values of Ï, but are instead searching for a way to manipulate the discrete random data samples generated according to Ï arr . Our goal is matching up the distribution of such generated data samples with the continuous PDF Ï as closely as possible.</p><p>An intuitive approach to this is to add a uniformly distributed random offset Î´ to the selected index i in order to generate a new index i cont â R</p><formula xml:id="formula_10">i cont := i + Î´ , Î´ â â 1 2 , 1 2 .</formula><p>This successfully closes definition gaps in our distribution, allowing us to generate any number of values for each array cell. However, the accuracy of this method can still be improved. We found that a more precise interpolation can be achieved by emulating a technique that is commonly used in the field of signal processing. When recreating an equidistant discrete sampling of a continuous signal, it is known that convolving the signal with a tent filter, yields a result akin to linear interpolation.</p><p>Consider a triangular PDF t <ref type="bibr" target="#b14">[15]</ref>  Using an algorithm to generate random data samples from a triangular distribution <ref type="bibr" target="#b14">[15]</ref> we can calculate the interpolated index i cont</p><formula xml:id="formula_11">t(x) = min(0, x + 1), if x â¤ 0 max(1 â x, 1), else .</formula><formula xml:id="formula_12">i cont := i + 2( r 2 ), if Î´ â¤ 0 2(1 â 1âr 2 ), else , âÎ´ â [â1, 1].</formula><p>In order to calculate the offset of our index we overlay t onto Ï at the selected index i. This generates a linear probability gradient between i and its neighbouring indices. In <ref type="figure" target="#fig_8">Figure 9</ref> we can see that performing this operation for all indices is equivalent to a convolution of Ï and t. The resulting function, marked in green, is a continuous linear interpolation of Ï arr . In consequence, the distribution described by the randomly generated data samples equals a linearly interpolated sampling of Ï arr ( <ref type="figure" target="#fig_0">Figure 10</ref>). This method is not limited to the one-dimensional case, but may also be analogously extended into n-dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CREATING A NEW DATASET</head><p>As mentioned before, the creation of a new dataset is composed of three main steps. The first step is to supply some basic information about the desired dataset, e.g. number of dimensions n, number of samples m, number of classes (if any), and a default distribution (e.g. constant, linear or gaussian) that will be used to model an underlying n-dimensional distribution function. The user may specify datasets with labeling information defining a number of classes that will be represented by different colors in the framework. While these classes represent only an additional dimension in the dataset, handling them as separate properties allows the user to design the features of each class individually. The user may specify a distinct PDF per class, for each generator object. This allows the user to model clusters with differing labels as will be shown later in Section 7.</p><p>The second step is to model the desired features into this grounding distribution. Features can be designed using the three kinds of generator objects we defined in Section 4: one-dimensional PDFs, twodimensional PDFs, and probability distribution planes (PDPs). These generator objects are defined by one-or two-dimensional probability density functions. The user may specify such functions by selecting statistical distribution parameters and operations provided by the userinterface, as well as manually drawing them on the screen, or loading an image of the appropriate distribution function.</p><p>â¢ One-dimensional PDFs: The default distribution function, defined in the first step, is composed of n one-dimensional generator objects. Each of these generator objects initially resembles the supplied default distribution, but may later be edited, using new distribution parameters, painting, or cropping operations. By editing the one-dimensional PDFs, the user may specify any feature that can be defined in the individual dimensions, e.g. multidimensional clusters.</p><p>â¢ Two-dimensional PDFs: Furthermore, our framework allows to design structures in any orthogonal two-dimensional projection of the n-dimensional space, using two-dimensional PDFs. The user may select any two distinct dimensions and attach this generator object to them. The two-dimensional PDF is then defined using a selection of common painting tools (e.g. painting brush, ellipsoids, etc.) or by loading an image containing the desired information. Loading arbitrary images allows users to specify complex features using other imaging tools. Moreover, scatterplot images of existing real datasets can be loaded in order to generate new datasets with similar characteristics.</p><p>â¢ PDPs are first specified by positioning them in a threedimensional subset of the n-dimensional space. Similar to the two-dimensional PDFs, the user may select any three distinct dimensions to place a PDP into. In a three-dimensional view similar to <ref type="figure" target="#fig_3">Figure 4</ref>, the user may adjust the camera to a specific orientation and then simply click and drag the PDP into existance. The four corner points of the PDP are derived from the two points the user defined by clicking and dragging on the screen, and the camera vector as the normal of the plane, in addition to further constraints. To be able to unambiguously calculate these corner points, we further constrain them to form a perfect square from the user's point-of-view. Note that this was done to simplify the process of inserting and editing PDPs and that the PDP may later be distorted by the user. In addition to this, the user works with a normalized view of the dataset, which means that while the PDP may look rectangular to the user, it does not necessarily do so in the real dataset. As described in Section 4.3, there is a two-dimensional PDF mapped onto every PDP. This PDF is defined in an almost identical way to the two-dimensional generator object mentioned above. However, in addition to painting the two-dimensional PDF, the user may also enter scattering-, and distortion-factors.</p><p>The final step is the evaluation of the generator objects by the algorithm, as described in Section 4.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS</head><p>In this section we will show examples of datasets that were generated using our framework. We generated our examples on a Intel Core i7 CPU 960 @ 3.20GHz with 12 GB of RAM. This platform supports modeling synthetic datasets in real-time. <ref type="figure" target="#fig_0">Figure 11</ref> gives an overview of the average time to generate a sample in relation to the number of dimensions of that sample. It is important to note that in our algorithm, running time is independent from the number of classes of the dataset.  . Generated dataset with 10-dimensions, 1000 samples for each of the three defined classes. Hidden cluster patterns were modeled in two dimensions: 3 and 5. The remaining dimensions were defined by randomly sampling a normal distribution.</p><p>The system uses approximately 4 kB memory (per class) for each onedimensional PDF (at least n) and further 2 MB (per class) for each two-dimensional PDF or PDP. Our first example is a 10-dimensional dataset with three class labels and 3000 samples (1000 per class). Three clusters were defined in the projection (dimensions 3 and 5) using our free-hand painting tool <ref type="figure" target="#fig_0">(Figure 12(b)</ref>). <ref type="figure" target="#fig_0">Figure 12(a)</ref> shows the created clusters in a 3-dimensional projection including dimensions 3, 5, and 2. The remaining dimensions were defined by randomly sampling a normal distribution with mean Âµ = 0 and variance Ï 2 = 1. <ref type="figure" target="#fig_0">Figure 13</ref> shows the scatterplot matrix of the generated dataset. The dataset we show in <ref type="figure" target="#fig_0">Figure 14</ref>(a) is the real dataset Abalone <ref type="bibr" target="#b10">[11]</ref>, with 4177 instances and 8 attributes that describes the physical measures of abalones. Its main goal is the prediction of the age of abalone (dimension 8) from these physical measures. Our synthetically generated dataset shown in <ref type="figure" target="#fig_0">Figure 14</ref>(b) was created based on projections of this abalone dataset. As mentioned, our framework supports not only painting, but also loading images to define two-dimensional PDFs. Therefore, loading scatterplots of existing real datasets can be used to mimic real features. This example was created by specifying a grounding 9-dimensional dataset containing 4000 samples. The structure of the new dataset could be defined by using 8 two-dimensional PDFs, estimated from scatterplots of the original abalone dataset. It was created based only on one dataset (Abalone), but the framework can also be used to combine scatterplots from different real dataset with userdefined structures in a unique dataset. The scatterplots marked in red in <ref type="figure" target="#fig_0">Figure 14</ref>(a) were loaded and smoothed to define two-dimensional PDFs between the respective dimension pairs. <ref type="figure" target="#fig_0">Figure 15</ref> shows an example of such a scatterplot and its smoothed version. However, it is worth mentioning that the accuracy of the result (i.e. similarity to the original data) can be improved by using densityplots, rather than scatterplots. Using our test platform, this dataset takes an average total of 102.9 ms to generate and it occupies approximately 16 MB RAM. Orthographic projection is among the most common visualization tools for multi-dimensional datasets. However, this approach does not always yield satisfying results. As is often the case in natural data, a certain structure that is defined on multiple dimensions, may only be visible in non-axis-aligned projections. Using our framework, we are able to easily create such hidden structures in our dataset. In <ref type="figure" target="#fig_0">Figure  16</ref>, we demonstrate that our system is able to create structures that may not be visible using visualization approaches with orthographic projections. We show an example dataset with 10 dimensions where such a structure is added to a non-orthogonal plane between dimensions 3, 8 and 9 <ref type="figure" target="#fig_0">(Figure 16.d)</ref>. <ref type="figure" target="#fig_0">Figures 16(a)</ref>, 16(b), 16(c) show axis-aligned, orthographic projections of the three participating dimensions <ref type="bibr">(3, 8 and 9)</ref> to visualize the dataset. However, our hidden structure is not recognizable in either of these common projections. <ref type="figure" target="#fig_0">Figure 17</ref> shows a complete view of the dataset with a scatterplot matrix. The projections containing the hidden structure are marked in red. While it is possible to identify an anomalous behaviour in those projections, it is not possible to recognize the hidden structure itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>In this paper we presented a novel framework for the synthetic generation of high-dimensional datasets. Specifically, we developed a data generation algorithm based on weighting different user inputs.  According to those inputs, the sampling points may resemble real datasets, mathematically defined functions, hand painted approximated distributions or a combination of them. Compared to previous approaches, our framework is very intuitive and can be used to create datasets with complex structures within minutes. Our primary focus was on granting the user a firm control over the visual aspects of the generation process, setting our system apart from common synthetic data generators. This was achieved by designing an intuitive graphical user-interface that allows the user to manually draw trends into a visual representation of the dataset. The proposed framework can be used to generate diverse multidimensional trends, including multivariate correlations, clusters, various types of noise, and other statistical structures. Our framework is able to generate axis-independent structures that can be very useful for evaluating visualization approaches that consider non-orthogonal projections of the dataset. The presented contributions are able to aid and speed the generation of high-dimensional synthetic data that can be used to evaluate or test a variety of applications. As future work, we intend to combine our framework with a suitable visual navigation approach (similar to Roling the Dice <ref type="bibr" target="#b5">[6]</ref>), to ease the visualization of the trends in the generation process. Additionally, we would like to extend the framework capabilities to support the definition of non-uniform distributions and the descriptive input of features.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Framework to generate high-dimensional datasets</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>(a) n = 2 (b) n = 3 Fig. 2 .</head><label>232</label><figDesc>Generator schematics, showing one-dimensional PDFs Ï i (marked red, green and blue) along the axes of the probability density space in (a) two and (b) three dimensions. This view illustrates how a set of one-dimensional functions span a multi-dimensional PDF, with colour intensities representing the respective probability distributions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a) Axis-aligned projection (green and red dimensions) (b) Axis-aligned projection (green and blue dimensions) (c) Axis-independent projection</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Probability Distribution Plane (PDP). A, B, C, and D define the corner points of the PDP generator object. A two-dimensional PDF Ï( u , v ) is mapped onto the quadrilateral marked in purple.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>1 Fig. 6 .</head><label>16</label><figDesc>(a) No scattering (b) Gaussian scattering Fig. 5. A dataset of 500 points generated using a PDP (a) Î´ = 3 (b) Î´ = 2 (c) Î´ = A PDP that is defined on Î´ distinct dimensions in the visible threedimensional subset of the n-dimensional probability density space. The PDP influences all subsets of dimensions connected to the Î´ dimensions it is associated with, as is indicated by its projections generation. Possible types include gaussian-, linear-, constant-, and density-scattering (which depends on the local density Ï( u , v ).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>Example: An example of how an individual data sample Ï j is generated. The numbered cells represent the attributes {Ï j,1 , . . . , Ï j,n }. Green or white colouring indicates whether an attribute is defined or not. Below the cells, there is the currently selected generator object, with lines connecting it to all associated dimensions. Red colouring indicates an association with a previously defined attribute.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Generating a random variable r with distribution Ï arr is equivalent to selecting an array-index i â [0, l â 1] and mapping that index onto [Î±, Ï] r := (Î± + i(Ï â Î±))</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Cumulative probability function P arr , with a random cell i selected</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Convolution of Ï arr (black) and t (yellow), results in a linearly interpolated function (green).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Linear interpolation of Ï arr (green) as an approximation of what the user may have intended to draw (red).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 11 . 2 Fig. 12 .</head><label>11212</label><figDesc>Average running times per sample in relation to the number of dimensions. Example of a cluster pattern created with our painting tool. (a) Sketching the class clusters. (b) 3-dimensional projection including dimensions 3, 5 and 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 13</head><label>13</label><figDesc>Fig. 13. Generated dataset with 10-dimensions, 1000 samples for each of the three defined classes. Hidden cluster patterns were modeled in two dimensions: 3 and 5. The remaining dimensions were defined by randomly sampling a normal distribution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 15 .</head><label>15</label><figDesc>Example of a real scatterplot that is used as a basis for our painting tool. Red intensity represents the probability densities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head></head><label></label><figDesc>(a) Dimensions 3 and 8 (b) Dimensions 3 and 9 (c) Dimensions 9 and 8 (d) Hidden structureFig. 16. Dataset with 10 dimensions with non-orthogonal structures between dimensions 3, 8 and 9 (d). (a), (b) and (c) show axis-aligned, orthographic projections of the three participating dimensions (3, 8 and 9) to visualize the dataset. (d) shows the hidden structured viewed from a non-orthogonal perspective.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 17 .</head><label>17</label><figDesc>Scatterplot matrix of a test dataset. Clusters marked in red contribute to our hidden structure</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head></head><label></label><figDesc>(a) Original dataset (b) Synthetically generated datasetFig. 14. Example of a sythetic dataset (b), created from projections of a real dataset (a). The projections that were used to model the synthetic dataset are marked in red.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>â¢</head><label></label><figDesc>Georgia Albuquerque is with the Computer Graphics Lab, TU Braunschweig, Germany, E-mail: georgia@cg.cs.tu-bs.de.</figDesc><table /><note>â¢ Thomas LÃ¶we is with the Computer Graphics Lab, TU Braunschweig, Germany, E-mail: loewe@cg.cs.tu-bs.de.â¢ Marcus Magnor is with the Computer Graphics Lab, TU Braunschweig, Germany, E-mail: magnor@cg.cs.tu-bs.de. Manuscript received 31 March 2011; accepted 1 August 2011; posted online 23 October 2011; mailed on 14 October 2011. For information on obtaining reprints of this article, please send email to: tvcg@computer.org.</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors gratefully acknowledge funding by the German Science Foundation from project DFG MA2555/6-1 within the strategic research initiative on Scalable Visual Analytics. We also want to thank the anonymous reviewers for their many valuable suggestions.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Improving the visual analysis of high-dimensional datasets using quality measures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Albuquerque</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eisemann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Lehmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Magnor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Visual Analytics Science and Technology</title>
		<meeting>the IEEE Symposium on Visual Analytics Science and Technology</meeting>
		<imprint>
			<publisher>IEEE VAST</publisher>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Bronstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Semendjajew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Musiol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>MÃ¼hlig</surname></persName>
		</author>
		<title level="m">Taschenbuch der Mathematik. Verlag Harri Deutsch</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Principles of statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">G</forename><surname>Bulmer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>Dover Pubns</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Introductory Statistics with R</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dalgaard</surname></persName>
		</author>
		<idno>0-387- 95475-9</idno>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Constraint-based automatic test data generation. Software Engineering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Demilli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Offutt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="900" to="910" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Rolling the dice: Multidimensional visual exploration using scatterplot matrix navigation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Elmqvist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dragicevic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fekete</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="page" from="1141" to="1148" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Learning from imbalanced data sets with boosting and data generation: the databoost-im approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Viktor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGKDD Explorations Newsletter</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="30" to="39" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Synthetic Data Generation Capabilties for Testing Data Mining Tools</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Jeske</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rendon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Samadi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MILCOM</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">0</biblScope>
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Generation of synthetic data sets for evaluating the accuracy of knowledge discovery systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Jeske</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Samadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Younglove</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Holt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining</title>
		<meeting>the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="756" to="762" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Genetic algorithms for dynamic test data generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Mcgraw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schatz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Walton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Res</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Sterling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">12th IEEE International Conference Automated Software Engineering, 1997. Proceedings</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="307" to="308" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">The Population biology of abalone (Haliotis species) in Tasmania. 1, Blacklip abalone (H. rubra) from the north coast and the islands of Bass Strait. Sea Fisheries Division, Dept. of Primary Industry and Fisheries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Nash</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tasmania</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<pubPlace>Tasmania, Hobart</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Test-data generation using genetic algorithms. Software Testing, Verification and Reliability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pargas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Harrold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peck</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="263" to="282" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Clutter reduction in multi-dimensional data visualization using dimension reordering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IN-FOVIS&apos;04</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="89" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Satisfying disclosure restrictions with synthetic data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Reiter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Official Statistics -Stockholm</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="531" to="544" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Computer Generation of Statistical Distributions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Saucier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-03" />
		</imprint>
		<respStmt>
			<orgName>Army Research Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">GGobi: evolving from XGobi into an extensible framework for interactive data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Swayne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">Temple</forename><surname>Lang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Buja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Statistics &amp; Data Analysis</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="423" to="444" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Combining automated analysis and visualization techniques for effective exploration of high-dimensional data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tatu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Albuquerque</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eisemann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schneidewind</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Magnor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Keim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Visual Analytics Science and Technology</title>
		<meeting>the IEEE Symposium on Visual Analytics Science and Technology<address><addrLine>Atlantic City, New Jersey, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE VAST</publisher>
			<date type="published" when="2009-10" />
			<biblScope unit="page" from="59" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Computing graphics and exploratory data analysis: An introduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tukey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Tukey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth Annual Conference and Exposition</title>
		<meeting>the Sixth Annual Conference and Exposition</meeting>
		<imprint>
			<date type="published" when="1985" />
			<biblScope unit="volume">85</biblScope>
		</imprint>
	</monogr>
	<note>Computer Graphics</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Xmdvtool: Integrating multiple methods for visualizing multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="326" to="333" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Graph-theoretic scagnostics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Anand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grossman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Visualization, 2005. INFOVIS 2005. IEEE Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="157" to="164" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
