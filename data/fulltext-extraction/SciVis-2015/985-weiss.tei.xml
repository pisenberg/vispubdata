<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Adaptive Multilinear Tensor Product Wavelets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Kenneth</forename><surname>Weiss</surname></persName>
							<email>kweiss@llnl.gov</email>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lindstrom</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">K</forename><surname>Weiss</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Adaptive Multilinear Tensor Product Wavelets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2015.2467412</idno>
					<note type="submission">received 31 Mar. 2015; accepted 1 Aug. 2015; date of publication xx Aug. 2015; date of current version 25 Oct. 2015.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Multilinear interpolation</term>
					<term>adaptive wavelets</term>
					<term>multiresolution models</term>
					<term>octrees</term>
					<term>continuous reconstruction</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Many foundational visualization techniques including isosurfacing, direct volume rendering and texture mapping rely on piecewise multilinear interpolation over the cells of a mesh. However, there has not been much focus within the visualization community on techniques that efficiently generate and encode globally continuous functions defined by the union of multilinear cells. Wavelets provide a rich context for analyzing and processing complicated datasets. In this paper, we exploit adaptive regular refinement as a means of representing and evaluating functions described by a subset of their nonzero wavelet coefficients. We analyze the dependencies involved in the wavelet transform and describe how to generate and represent the coarsest adaptive mesh with nodal function values such that the inverse wavelet transform is exactly reproduced via simple interpolation (subdivision) over the mesh elements. This allows for an adaptive, sparse representation of the function with on-demand evaluation at any point in the domain. We focus on the popular wavelets formed by tensor products of linear B-splines, resulting in an adaptive, nonconforming but crack-free quadtree (2D) or octree (3D) mesh that allows reproducing globally continuous functions via multilinear interpolation over its cells.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Multilinear interpolants are at the foundation of many key visualization techniques, including isosurfacing <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b30">31]</ref>, direct volume rendering (DVR) <ref type="bibr" target="#b0">[1]</ref> and texture mapping <ref type="bibr" target="#b20">[21]</ref>, which assume piecewise multilinear interpolants over a mesh's quadrilateral or hexahedral cells. However, despite their importance, there has not been much focus within the visualization community on techniques that efficiently generate and encode globally continuous (C 0 ) functions defined by the union of multilinear cells. Although this is straightforward for uniform meshes, it becomes more difficult on adaptive meshes generated by subsets of a regular grid, e.g. on meshes generated by quadtrees, octrees and kd-trees, which are becoming more common as the gulf between processing power and memory widens. Thus, we require well grounded approaches that efficiently incorporate adaptivity in domain and function space.</p><p>Wavelets provide a natural framework for such approaches and tensor product wavelets based on quadtrees and octrees have a rich history <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b39">40]</ref>. When derived from linear B-spline wavelets, they correspond to piecewise multilinear functions. To ensure continuity between grid cells of different resolution, such meshes are typically triangulated and the underlying multilinear function is approximated via linear interpolation on each triangle (2D) or tetrahedron (3D) <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b45">47]</ref>. This increases the complexity of the mesh, and, more importantly, introduces directional biases into the mesh <ref type="bibr" target="#b7">[8]</ref> and error in the function approximation. We present a novel approach that retains the piecewise multilinear nature of the function over an adaptive quadtree or octree of minimal size while enforcing C 0 continuity.</p><p>Despite the popularity of wavelet-based techniques for simplifying volumes, images and shapes, most of the techniques in the literature have approached the problem from the perspective of reducing the storage for encoding or transmission, e.g. via quantizing and thresholding the wavelet coefficients. Considerably less effort has gone into the development of data structures and evaluation techniques for representing and processing the function in a way that exploits its sparseness in the wavelet basis. Such sparseness may arise because the function is intrinsically smooth with few fine-scale details, or is approximated by discarding wavelets with small coefficients or with support outside a region of interest. In this case the function can be represented on a coarser, adaptively refined domain and later recovered exactly at full resolution on demand using the subdivision scheme associated with the wavelet scaling function. Such an adaptive representation is not only memory efficient, but can also be used to accelerate visualization tasks like ray casting by spatially varying the grid resolution.</p><p>In this paper, we introduce a framework for lifted, separable wavelet transforms over regular grids, in which we pay attention to the runtime representation of the adaptively refined domain. In particular, we discuss how to reconstruct, interpolate and visualize such adaptive functions through the use of a meshing scheme that organizes the wavelets into binary trees (1D), quadtrees (2D), and octrees (3D). Our results should be seen as complementary to the broad spectrum of work on offline encoding of wavelet coefficients <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b35">36]</ref>.</p><p>We derive adaptivity from the dependency relations among the tensor product wavelet lifting steps and mesh refinements. After reviewing lifting in the uniform case (Section 3), we formally analyze the dependency relations required for adaptive wavelet transforms (Section 4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The main contributions of this work are:</head><p>• A unified framework for adaptive meshing of functions defined by an arbitrary subset of wavelet coefficients from a regular grid. Although this framework is general and applicable to wavelets with parametric synthesis scaling functions <ref type="bibr" target="#b38">[39]</ref>, in this paper, we focus on the popular linear B-spline tensor product wavelets <ref type="bibr" target="#b39">[40]</ref> useful for visualization. We present simple rules for constructing the coarsest mesh that allows exact reproduction of the associated function. We treat both interpolating wavelets (i.e. those with just prediction) and approximating wavelets (i.e. those with prediction and updates) in a consistent manner. • We show that the mesh can be further coarsened by replacing the multilinear interpolant with spectral interpolation <ref type="bibr" target="#b22">[23]</ref>. Furthermore, we use this interpolant to highlight the correspondence between simple subsampling and interpolating linear B-spline wavelets, leading to a simplified subsampling strategy. • Given an adaptive mesh defined by a subset of wavelet coefficients, we propose an efficient means of improving its approximation quality at no additional storage or reconstruction cost by saturating the mesh with all wavelets whose support are already present in the mesh. • We describe a simple pointerless representation for quadtrees and octrees defined by scalar values at the vertices. Specifically, we only encode the vertices of the mesh, and can implicitly retrieve its cells, as well as its hierarchical and geometric relationships.</p><p>Our approach can be thought of as generalizing the ubiquitous interpolating linear wavelets defined on simplices within adaptive binary trees <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b47">49</ref>] to multilinear C 0 interpolating and approximating wavelets on adaptive quadtrees and octrees. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND AND RELATED WORK</head><p>Multiresolution analysis has a rich history in the signal processing, computer graphics and CAD communities dating back several decades <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b39">40]</ref>. The lifting scheme, which can be defined for any wavelet filter <ref type="bibr" target="#b12">[13]</ref>, was introduced by Sweldens <ref type="bibr" target="#b40">[41]</ref> for biorthogonal wavelets, where the possibility of using an adaptive domain is hinted.</p><p>Note that the term adaptive in the wavelet literature is often used in the context of data dependent wavelet transforms, where one can adapt the wavelet basis functions themselves to fit the data <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b49">51]</ref>. While such an approach can fit within our framework, in this paper, we use the term to refer to adaptivity in the domain decomposition. There are several similar approaches within the PDE community to adaptive grids <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b28">29]</ref>, most of which are similar to block-based AMR, in which a series of nested grids cover the region of interest. In <ref type="bibr" target="#b21">[22]</ref>, a set of samples with high wavelet magnitudes are retained which are used to interpolate missing samples. In this paper, we introduce a framework for reconstructing the smallest mesh to satisfy both interpolating and approximating wavelets. We therefore focus on efficient data structures to encode and reconstruct the sparse function.</p><p>Perhaps the most closely related work to ours is the adaptive approach of Linsen et al. <ref type="bibr" target="#b24">[25]</ref>, which derives an adaptive tetrahedral mesh from their progressive n √ 2 scheme <ref type="bibr" target="#b25">[26]</ref> (based on the lifting approach of Bertram et al. <ref type="bibr" target="#b5">[6]</ref>). Similar to other approaches <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b45">47]</ref>, once the function is reconstructed, it is approximated in terms of the piecewise linear tetrahedra, rather than as a multilinear function. Specifically, they extract isosurfaces using Marching Tetrahedra <ref type="bibr" target="#b31">[32]</ref> over the simplices. In contrast, our exact evaluation uses the underlying multilinear interpolant given by the wavelet basis. As we demonstrate in Section 6.5 for natural, scanned and simulation datasets, this can improve the fidelity of our approximation by several decibels on meshes defined by the same set of vertices.</p><p>Furthermore, our scheme is designed to include the full support of every included wavelet in our adaptive representation. This does not appear to be the case in <ref type="bibr" target="#b24">[25]</ref>, whose adaptive meshes are defined only by the dependencies induced by conforming simplex bisections, which do not generally include the entire support of the wavelets. We intend to examine this issue more fully in a forthcoming paper.</p><p>Another related approach is CHARMS <ref type="bibr" target="#b18">[19]</ref>, which uses the twoscale relation of arbitrary nested basis functions to simplify adaptivity in Finite Element spaces. This is similar to our 'Full internal' stencil in Section 5.2.2. We reduce the storage requirements through the use of the lifting scheme and through our supercube encoding (see <ref type="bibr">Section 5)</ref>.</p><p>There has been a lot of work in using multiresolution and adaptive grids for processing scalar functions defined over regular grids. A ddimensional octree is a hierarchical domain decomposition based on the regular refinement of cubes. To simplify our discussion throughout this paper, we use the terms octree and cubes to generically refer to d-dimensional octrees defined by d-cubes, where d is the dimension of the domain, and we specify the dimension only when necessary.</p><p>Under regular refinement, a d-cube C is replaced by 2 d similar dcubes. This operation defines a nested containment hierarchy in which the 2 d cells created during the regular refinement of a d-cube C are its children, and C is their parent. The vertices of the children are defined by the midpoints of the parent cube's faces (e.g. edges, facets), and each child contains one of the vertices of C as well as its midpoint.</p><p>The octree's root covers the entire domain. Cubes that are not refined have no children and are referred to as leaf cells of the octree. The level of a cube C in an octree T is the number of refinements necessary to obtain C from T 's root. In a uniform octree, all leaf cells are at the same level, otherwise, the octree is adaptive. A balanced octree is one in which neighboring cells differ by at most one level. Specifically, an octree is edge-balanced if each edge in the octree is on the boundary of d-cubes from at most two consecutive levels.</p><p>Consider the regular cubical mesh defined by a uniform octree T . We refer to the i-dimensional faces of T as primal cubes, and to the axisaligned (d − i)-cubes defined by connecting the centers of its adjacent d-cubes as dual cubes. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates a 1-cube (edge) in 3D and its dual 2-cube. Most octree representations have focused on encoding data with the leaves of the tree <ref type="bibr" target="#b34">[35]</ref>, which is sufficient when the data is cellcentered. However, when the data is associated with the vertices of the mesh, this can lead to a redundant encoding of the vertex data. Our representation utilizes a pointerless supercube representation <ref type="bibr" target="#b44">[46]</ref> originally proposed for diamond hierarchies <ref type="bibr" target="#b47">[49]</ref>. The encoding of the vertex data can be seen as a non-redundant tile-based representation of the vertex data (similar to <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b16">17]</ref>, among others). An interesting aspect of this representation is that leaf cells can be determined implicitly from the set of encoded vertices, and, thus, do not need to be encoded.</p><p>Applications such as surface extraction and ray tracing typically require a function with at least C 0 continuity (i.e. crack-free). However, adaptive octree meshes are not conforming. There are several approaches to achieve continuity from an adaptive octree mesh, including explicitly patching cracks in the extracted surface <ref type="bibr" target="#b37">[38]</ref>, modifying the field values at the vertices <ref type="bibr" target="#b29">[30]</ref>, or making the primal <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b45">47]</ref> or dual <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b42">44]</ref> domain conforming using noncubical cells. Although this is typically implemented by triangulating the lower resolution neighbors on a balanced octree, we exploit the fact that under a multilinear interpolant the function varies linearly along the edges of the mesh cubes. Thus, by locally refining some edges using linear interpolation of their midpoints, we obtain a piecewise multilinear C 0 interpolant over cubical cells despite the presence of T-junctions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">LIFTING FOR UNIFORM TENSOR PRODUCT WAVELETS</head><p>In this section, we anticipate the discussion of adaptively refined tensor product wavelets by first discussing the uniform case. We assume our domain is a</p><formula xml:id="formula_0">d-dimensional uniform grid G of resolution (2 L + 1) d .</formula><p>The lifting scheme is a means of factoring wavelet transforms into simpler elementary operators. The forward lifting transform (wavelet analysis) consists of three steps. It first splits the vertices V into two sets V w and V s . V w is associated with wavelets at the current level of resolution, whereas the remaining set V s is associated with scaling functions. A w-lift generates wavelet coefficients for the vertices V w . Each coefficient is the residual of a prediction P formed by a weighted sum of function values at neighboring vertices from the set V s . An s-lift update is then optionally applied to the vertices V s as a weighted sum U of neighboring wavelet coefficients. This step exists to ensure that the mean and possibly higher order moments are preserved in the lower resolution signal represented by V s . Multiple resolutions are obtained by recursively applying this transform to the remaining vertices V s . The inverse lifting transform (wavelet synthesis) is trivially defined by reversing this sequence of steps.</p><p>When applied to a mesh, lifting can be understood in the context of regular refinement, where the splitting phase modifies the connectivity of the mesh, while the s-lift and w-lift phases modify attributes associated with the mesh (e.g. scalar values). Consider a regularly refined binary tree T , i.e., a uniform 1D octree, whose edges are cells at level defined over a regular grid containing 2 + 1 vertices. Then the inverse transform uniformly refines T to level + 1 by inserting a new vertex at the midpoint of each edge of T , converting T to a uniform octree at level + 1. The inverse s-lift and w-lift stages modify the values of T 's vertices (nodes) as well as the newly inserted midpoints, respectively. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Interpolating and approximating 1D wavelets</head><p>We consider two simple lifted wavelet transforms. Interpolating wavelets use only a prediction step (w-lift), leaving the function values at V s unchanged from one level to the next. Approximating wavelets have both a prediction (w-lift) and an update (s-lift) step. Thus, interpolating wavelets have simpler computational requirements and smaller support while approximating wavelets can better preserve properties of the function (such as its mean).</p><p>To make this more concrete, consider the biorthogonal linear Bspline wavelets <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b39">40]</ref> defined on a uniform 1D grid, where all vertices are connected to their adjacent vertices via an edge. In the w-lift, we predict the value of each odd vertex v 2i+1 ∈ V w as the average of its two even neighbors:</p><formula xml:id="formula_1">P(v 2i+1 ) = 1 2 [ f (v 2i ) + f (v 2i+2 )].</formula><p>In the s-lift, we update the values of the even vertices V s by adding to them U(</p><formula xml:id="formula_2">v 2i ) = 1 4 f (v 2i−1 ) +f (v 2i+1 ) , wheref (v) = f (v) − P(v)</formula><p>denotes a wavelet coefficient resulting from the forward w-lift. This lifting scheme results in corresponding stencils for the approximating synthesis wavelet</p><formula xml:id="formula_3">ψ = 1 8 [0, −1, −2, 6, −2, −1, 0] and interpolating waveletψ = [0, 1, 0]. Both transforms have φ = 1 2 [0, 1, 2, 1</formula><p>, 0] as their scaling functions, implying a piecewise linear subdivision in 1D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Tensor product wavelets</head><p>The 1D lifting scheme described above can be easily generalized to higher dimensions using a separable tensor product of 1D wavelets <ref type="bibr" target="#b39">[40]</ref>. In this approach, we cyclically apply the 1D scheme to the axis aligned samples along each individual dimension, leading to a tensor product of i wavelets ψ and (d − i) scaling functions φ .</p><p>The correspondence between lifted wavelets and regular refinement in 1D can be generalized to tensor product wavelets. Specifically, a basis function defined by the tensor product of i wavelets ψ and (d − i) scaling functions φ is associated with the midpoint of an i-cube in the d-dimensional grid (which is also the midpoint of a dual (d − i)-cube; see <ref type="figure" target="#fig_0">Figure 1</ref>). Thus, in 2D, the tensor product scaling functions φ x φ y are associated with the vertices of the grid, while the wavelets φ x ψ y and ψ x φ y are associated with the midpoints of edges, and the wavelets ψ x ψ y are associated with midpoints of the square cells. Since the scaling functions for linear B-spline wavelets correspond to linear interpolation, their tensor product corresponds to multilinear interpolation, namely, bilinear interpolation in 2D and trilinear interpolation in 3D. <ref type="figure" target="#fig_1">Figure 2</ref> shows the scaling function and two types of interpolating and approximating linear B-spline tensor product wavelets, along with their support on a refined 3 × 3 grid. Because the scaling function is piecewise bilinear, the wavelets correspond to a set of bilinear patches at the finer level or resolution (this is referred to as the two-scale relation <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b39">40]</ref>). Note also that the stencils (i.e. the values at the vertices of the refined 3 × 3 grid) are defined by the tensor product of the 1D stencils (see Section 3.1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Filtered wavelet coefficients</head><p>A typical workflow for using the wavelet transform consists of transforming the function into the wavelet domain, analyzing and modifying the function in the wavelet domain, and finally converting the modified function back to the spatial domain. During the analysis phase, the coefficients are often filtered or quantized in an application dependent way, e.g. to remove noisy details, or for efficient storage and transmission. These filters can be based on properties of the wavelet, such as its coefficient's magnitude or the range of isovalues in its support. Hierarchical (e.g. refinement level) and spatial information can also be used, e.g. for region of interest (ROI) queries.</p><p>Although the function has been simplified, the domain is the same, and, thus, requires the same amount of processing and storage at runtime. In the following section, we propose a refinement strategy that adapts the underlying complexity of the reconstructed function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ADAPTIVE TENSOR PRODUCT WAVELETS</head><p>Our adaptive refinement scheme is applicable to tensor product wavelets whose scaling functions can be directly evaluated from a stencil (as in <ref type="bibr" target="#b38">[39]</ref>). We utilize a regularly refined octree to organize our adaptive mesh. For each wavelet coefficient that we wish to include in our function, we ensure that its corresponding wavelet can be fully reconstructed in the resulting mesh. After running our (adaptive) inverse lifting transform, we use the wavelet scheme's interpolant to evaluate the function at any point in the domain. Thus, our results exactly match that of the function on the full domain when reconstructed from the same set of wavelet coefficients. For linear B-spline tensor product wavelets, the associated interpolant is multilinear and smooth over each cell of the octree, and is C 0 continuous across cell boundaries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Reduced neighborhoods for wavelet support</head><p>As mentioned above, a common reconstruction strategy is to either use the entire full-resolution domain to reconstruct the function from a subset of the wavelets <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b39">40]</ref>, or to use a set of (sufficiently large) nested uniform grids surrounding each wavelet, as is typical in the AMR community <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b13">14]</ref>. Our goal is to extract the coarsest mesh that faithfully reconstructs a given (arbitrary) set of wavelets. We achieve this by exploiting properties of regular refinement, of our interpolant, and of the stencil's coefficients to reduce the number of vertices (and cells) required to reconstruct each wavelet.</p><p>Recall that the two-scale relationship implies that wavelets and scaling functions at level are defined as linear combinations of scaling functions at level + 1. Thus, we can exactly reconstruct a given wavelet ψ if our mesh includes all vertices at level + 1 associated with the scaling functions defining its two-scale relationship. For tensor product wavelets, these vertices lie within a rectilinear d-dimensional stencil of coefficients surrounding the wavelet's associated vertex, and the stencil values are determined by the tensor product of its 1D stencils, as described in Section 3. For linear B-splines, these stencils cover five, three and seven grid points at level + 1 for scaling function φ , interpolating waveletψ and approximating wavelet ψ, respectively. For example, the 2D approximating wavelet ψ x ψ y over a square cell (see <ref type="figure" target="#fig_1">Figure 2c</ref>) is defined as the weighted sum of the 7 × 7 = 49 scaling functions within its stencil, and a wavelet ψ x ψ y ψ z over a cubic cell is defined by 7 3 = 343 scaling functions. Our discussion below examines these scaling functions in terms of the set of grid points at level , which comprise the vertices bounding the cells in the support of each wavelet, and those at level + 1 bounding their refined cells. In all cases, we require the full set of grid points from the former group but not necessarily all grid points from the latter group. For (1D) linear Bsplines, the support of the scaling function φ covers two cells at level defined by three level-grid points, whileψ and ψ have supports covering one and three level-cells, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Full internal stencil support</head><p>We first observe that the boundaries of the stencils have a layer of zeros, and that these are all aligned with the boundaries of cubic cells from level . Since the values of grid points at level + 1 (i.e. the faces of the cubic cells) can be trivially interpolated from their zero-valued boundary vertices, we can safely omit them.</p><p>Note that for interpolating linear B-spline waveletsψ, all that remains is an inner subgrid centered aroundψ, with three grid points along directions defined by scaling functions, and one grid point along wavelet directions. Each such stencil point corresponds to a face of ψ's corresponding dual cube (see <ref type="figure" target="#fig_3">Figure 3a)</ref>.</p><p>In our running example, eliminating the boundary grid points reduces the samples required for reconstructing ψ x ψ y to 37 (i.e. we have removed the twelve edge midpoints on the boundary of its support).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Exploiting properties of the scaling function</head><p>Although the previous step reduces the required support of each wavelet, it still includes many vertices whose values can be recovered from our wavelet interpolant. We can exploit properties of our interpolant to remove stencil vertices whose values can be interpolated directly from other samples (e.g. from the vertices of level-cubes). Specifically, for the 1D linear B-spline wavelet ψ, the collinearity of [0, −1, −2] in the approximating wavelet stencil allows us to exclude filter weight -1 as it is the linear average of 0 and -2. This allows the wavelet to be represented using cells of varying resolution.</p><p>In fact, we can decompose ψ into the sum of two scaling functions φ associated with the internal cell vertices of its stencil and a single interpolating waveletψ associated with the midpoint of its internal edge. This analysis can be extended to approximating multilinear B-spline wavelets. Let ψ be a wavelet associated with a k-cube C in the mesh (i.e. it is located at the midpoint of C , where k ≤ d). Then ψ can be decomposed into 2 k scaling functions associated with the vertices of C and into the sum of interpolating tensor product wavelets associated with each remaining face of C . For example, the 2D approximating square wavelet associated with the midpoint of the center square of the grid <ref type="figure" target="#fig_1">(Figure 2c</ref>) can be decomposed into four scaling functions associated with its vertices, four interpolating edge wavelets and a single interpolating square wavelet. The advantage of this decomposition is that we only need to include the stencil points associated with the five interpolating wavelets. In our running example, this reduces the number of samples required for reconstructing ψ x ψ y to 25, i.e. the sixteen grid points at level , the midpoints of the four edges of the center square and the midpoints of their five incident squares at level + 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.3">Using higher order predictors</head><p>We can further reduce the overhead of each wavelet's stencil by incorporating a higher order predictor into our reconstruction scheme.</p><p>In the case of lifted interpolating linear B-spline wavelets it can be shown that the underlying predictor at the midpoint of a k-cube C is not given by a multilinear average of its corners, but rather by the "radial" spectral predictor <ref type="bibr" target="#b22">[23]</ref> on the 3 k stencil that incorporates all faces of C . This predictor is given by the weighted average of 3 k − 1 points:</p><formula xml:id="formula_4">P = − k ∑ j=1 − 1 2 j ∑ i f (v k− j i ) where v k− j i</formula><p>denotes the i th vertex of the (k − j)-cube centers of the faces of C . Our interpolating wavelet predictor is equivalent to applying this predictor successively to edges, facets, and cubes, using any known values and spectrally predicting unknown values. It is easy to verify that when all vertices other than cube corners are multilinearly interpolated, P reduces to multilinear interpolation. Furthermore, since radial interpolation only changes the values at the midpoints of a cube's faces, each such patch can be seen as a set of multilinear patches at the next level of resolution. Applying the spectral radial predictor to a multilinear B-spline wavelet reduces the required stencil to just the grid points at level and the faces of primal cube C associated with the wavelet. Concluding our running example, a radially predicted ψ x ψ y requires only 21 grid points (i.e. the 16 grid points at level , and the center and four edge midpoints on the internal square).</p><p>A note about radial prediction for approximating wavelets: Radial prediction works as described for interpolating wavelets, and for approximating wavelets that do not have additional internal stencil grid points. However, due our implementation using a separable lifting transform, radial prediction can potentially introduce some interpolation errors when only a subset of the internal stencil grid points are present, as some s-lift updates might not reach these vertices if the vertices required by the lifting scheme are missing. As a compromise, in our current implementation (which cyclically lifts along the x, then y, then z axes), we conservatively retain all stencil grid points that lie in the same x-plane as the wavelet (in 2D) or in the same xy-plane (in 3D), as this guarantees the stencils of s-lift updates to all vertices. An alternative data-dependent approach, which we leave for future work, might be to further analyze lifting scheme's dependencies and only add the vertices that are necessary to correctly reconstruct the wavelet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">OCTREE REPRESENTATION AND FUNCTION EVALUATION</head><p>In this section, we discuss our pointerless nodal octree, and describe how to insert wavelets using the various adaptive stencil supports discussed in Section 4.1 and how to evaluate the underlying field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Representation</head><p>Our implicit octree structure encodes only the (adaptive subset of) vertices and their associated scalar values. Because the distribution of vertices in the mesh exhibits significant spatial coherence, we reduce the overhead due to specifying vertex coordinates using an efficient supercube representation <ref type="bibr" target="#b44">[46]</ref>, which clusters (up to) 4  <ref type="bibr" target="#b44">[46]</ref>. To traverse the tree, we only need to check if the midpoint of the current cube is present in the mesh, in which case the cube is not a leaf.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Wavelet stencil implementation</head><p>In Section 4.1, we described the characteristics of the different optimized wavelet stencils for interpolating and approximating tensor product B-spline wavelets. Here, we discuss how they can be efficiently implemented within our (pointerless) d-dimensional octree data structure. Our wavelet stencils are implemented in terms of (a) iterators of the faces of primal and dual cubes of a regular grid, and (b) standard octree refinement. The former are all implicitly determined from the coordinates of the input point p, corresponding to the center of a kdimensional (primal) cube and its (d − k)-dimensional dual cube <ref type="bibr" target="#b43">[45]</ref>.</p><p>For the latter, recall that every vertex in the domain uniquely corresponds to a single k-cube in the octree, i.e. it is the center of a k-cube at some level in the hierarchy. Assume we have an octree T , to which we would like to add a wavelet ψ, whose support is centered at vertex p on level of T . Our strategy is given in two conceptual steps, although they can be implemented concurrently. First, we set up the proper hierarchical context for ψ's stencil by refining some octree blocks in the neighborhood of p (see Section 5.2.1). This takes care of all the octree refinement for the wavelet's stencil up to level , and is implemented as a set of standard octree refinements OCTREEREFINE(C ) for a d-dimensional cube C . This function (recursively) checks that OCTREEPARENT(C ) is refined and then refines C . During the refinement, we insert vertices at the midpoints of all faces of the refining cube C . After this step, all other modifications can be done locally without triggering additional octree refinements. Our second step is to insert the set of vertices at level + 1 comprising the stencil's internal vertices (see Section 5.2.2). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Hierarchical dependencies</head><p>Since octree refinements apply to d-cubes, and our wavelet's midpoint is, in general, associated with a k-cube, we must first find a set of d-cubes in its neighborhood whose refinement will give us the right context. Recall from Section 2 that the vertices of the dual mesh correspond to the d-cubes of the primal mesh. The specifics depend on whether we are working with interpolating or approximating wavelets. The support of an interpolating linear B-spline wavelet is entirely within the primal d-cubes associated with its (d − k)-dimensional dualcube <ref type="figure" target="#fig_3">(Figure 3a)</ref>. Thus, to create these cubes, we only need to apply OCTREEREFINE to the OCTREEPARENT of the dual cube vertices.</p><p>In the approximating case, a similar trick works, but rather than finding the dual cube associated with the wavelet's primal cube, we need to find the dual cubes associated with the vertices of its primal cube. This follows from the observation that the support of the approximating wavelets lie within a 3 k 2 d−k grid of cubes at level , where the dimensions that are three cubes wide are tangent to its primal dimensions (see <ref type="figure" target="#fig_1">Figures 2 and 3b</ref>). However, by considering the pattern of nested octree refinement, we observe that the sets of cubes generated by this process are nested. That is, the octree parents of one of the vertex's dual cubes is a superset of those of all the others, which we can safely ignore. Specifically, we want the vertex of the primal cube that is furthest from the midpoint of the supercube containing p (the vertex at the upper endpoint of the wavelet's edge in <ref type="figure" target="#fig_3">Figure 3b</ref>). This can easily be calculated by a few bit manipulations on its coordinates <ref type="bibr" target="#b44">[46]</ref>.</p><p>In summary, for each wavelet ψ, we identify a single vertex v (either its midpoint, in the case of interpolating wavelets, or one of its vertices, in the case of approximating wavelets), and for each vertex v j of the dual cube of v, we apply OCTREEREFINE(OCTREEPARENT(v j )).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Interior wavelet stencils</head><p>Given the proper octree context set up in the previous section, we can now implement the specific stencil described in Section 4.1. Full rectilinear stencil Here, we simply add to T all vertices in the full subgrid of dimensions M k N d−k centered at p, which has M grid points in dimensions that are primal and N in dimensions that are dual. For approximating wavelets, M is 7 and N is 5; for interpolating wavelets, the values are 3 and 5, respectively. Full internal Since we already have the grid points at level , we only need to add those at level + 1. We can therefore use the same procedure as in the above step, after setting M = 5, N = 3 for approximating, and M = 1, N = 3 for interpolating. Min multilinear For proper multilinear interpolation, we need to add all face centers of the dual cube surrounding each edge of p's primal cube. We implement this through iterators on the primal cube edges, which call iterators on the associate dual cube faces. For interpolating wavelets, 'Min multilinear' and 'Full internal' are equivalent. Min radial For the simplest radially interpolated stencil, we add the midpoints of the faces of the primal cube. This is sufficient for the interpolating wavelets where there are no data dependencies due to slifts. For our approximating wavelets, we take a conservative approach and add all vertices that can have potential data dependency conflicts. Generally speaking, since we cyclically apply our lifting steps, this includes the vertices added in the 'Min multilinear' step above that have the same y-coordinate (2D) or z-coordinate (3D) as ψ's midpoint.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Function evaluation</head><p>We have the option of either storing the wavelet coefficients or inversetransformed function values with the octree vertices. In the former case, the lifted inverse transform is executed by traversing the octree breadth-first level by level and applying standard 1D lifting operations to transform the wavelet coefficients. Since each wavelet has the proper stencil for lifting (see Section 4), we compute the same value at the vertices of the mesh as we would in the uniform case.</p><p>To evaluate the function at a single point, we traverse the octree from the root and follow the branch containing the point until we reach a leaf cube. Given function values at the corners of this cube, we then apply multilinear or radial interpolation, depending on our extracted stencil. When we wish to evaluate the function over the entire domain, e.g. to display an image, we simply visit all leaf cubes and use our interpolant to compute the grid point values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">APPLICATIONS AND RESULTS</head><p>In this section, we discuss the utility and efficiency of our adaptive approach against the simpler uniform case. We also compare several applications of interpolating and approximating wavelets and consider the benefits of using the underlying multilinear interpolant over the adaptive cubical mesh rather than a linear interpolant over a triangulated domain. Due to space considerations, we provide a comprehensive analysis over a range of datasets in a supplementary appendix.</p><p>In the following, we denote approximating wavelets as a, and interpolating wavelets as i. We use superscripts to denote features of the wavelets (adaptivity, normalization and saturation, as defined below), and subscripts to denote the interpolation and choice of stencil. Thus, a U m denotes a mesh reconstructed using an approximating wavelet and multilinear (m) interpolation at uniform resolution (U). We compare the fidelity of the reconstruction in terms of the logarithmically scaled Peak Signal to Noise Ratio (PSNR) <ref type="bibr" target="#b41">[43]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Uniform meshes and progressive refinement</head><p>Our approach allows us to build a mesh by selecting any subset of the wavelets in the domain, so a natural first step is to filter the wavelets by hierarchy depth. The uniform lifting scheme applied to tensor product wavelets enables a straightforward progressive level of detail (LOD) extraction on a reduced domain at the granularity of one mesh per level of resolution. That is, we can reconstruct the mesh on a uniform octree of maximum level ≤ L by applying a full cycle of lifting steps.</p><p>Our approach enables selection of all wavelets at sublevel granularity (which we refer to as depths). Thus, we can select all wavelets up to level , and then also add all the level-edge wavelets, followed by all the square wavelets (followed by the cube wavelets in 3D). Note that the tensor product dependencies imply that we insert the depths in order of increasing dimensions (i.e. edges, then squares, then cubes, ...), while in the RSB-based n (2) scheme of Linsen et al. <ref type="bibr" target="#b25">[26]</ref>, the depths are inserted in the reverse order (i.e. cube centers followed by square centers and then edge centers). We have observed that most of the power within each level of resolution lies within the edge wavelets (see the dotted lines in <ref type="figure">Figure 9</ref>, where adding the edgecentered wavelets significantly impacts the PSNR, but adding the facecentered and cube-centered wavelets has much less impact).</p><p>An interesting result derived from our study on adaptive stencils (Section 4.1) is that, while we are free to select the wavelets associated with the edges of the mesh, giving us depth-based adaptivity in the function space, this does not give us any additional adaptivity in the corresponding mesh. That is, once we incorporate the edge wavelets at level , our stencil completion algorithm (Section 5.2) will add all other vertices at level , which are required by the adaptive lifting algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Wavelet magnitude thresholding</head><p>The next natural step is to use a predicate based on wavelet magnitude to filter the wavelets composing our approximated function.</p><p>Normalization. To minimize the approximation error for a given wavelet coefficient budget, the coefficients {f } may be selected by magnitude. However, the level of resolution and centering on edges, facets, and cubes of each wavelet basis function dictate its norm ψ , and hence influence the mean square error. For orthogonal wavelets, each excluded wavelet incurs an error off 2 ψ 2 , suggesting that we should select wavelets in order of decreasing f ψ (equivalent to normalizing the basis functions). Contrary to earlier work <ref type="bibr" target="#b19">[20]</ref>, we found that such normalization can have a significant impact on the quality of the results for a given mesh budget. Specifically, as we demonstrate below, normalization tends to promote the coarser details of the function, while avoiding higher resolution details, such as textures.</p><p>Saturation. To ensure that large-scale features are present, we may optionally include coefficients for all wavelets whose stencil is already present in the adaptive mesh (with respect to our chosen stencil scheme; see Section 4.1). This increases the number of wavelet coefficients while keeping the number of vertices, and thus, the mesh representation, fixed. We refer to this saturated selection strategy as Type II, with Type I denoting the original unsaturated set of coefficients. <ref type="table">Table 1</ref>. Numbers of required vertices in the support of approximating (a) and interpolating (i) wavelet stencils. Starting from the rectilinear stencil (m, grid), we can remove the mulitlinearly interpolable vertices on the support boundaries (m, int), and on the interior (m, min). The radial interpolant allows us to remove more vertices (r, opt), but depending on the stencil's orientation, we conservatively include some additional vertices (r, slice). Note that i m := i m,int (= i m,min ) and i r := i r,slice (= i r,opt ).  <ref type="figure">Figure 4</ref> compares the four combinations of wavelet normalization and saturation on the Tooth dataset [42] initialized by thresholding the top 0.03% of approximating wavelet coefficients. It is apparent that the unsaturated and unnormalized mesh a I m in 4(b) wastes much of its wavelet budget on high frequency noise, and does not faithfully reconstruct the shape of the tooth. At the same time, these wavelets can be relatively deep in the hierarchy, and therefore, their stencils impose larger hierarchical overhead. Since many of the wavelets associated with these extra vertices are fully supported in the mesh, we achieve a more faithful approximation by saturating the mesh (a II m in 4(c)), yielding a significant improvement in PSNR. By thresholding on normalized wavelets, we improve the approximation quality (e.g. increased PSNR), and considerably reduce the footprint of the mesh (by ≈ 2/3). This is in line with our experiments on a range of 2D and 3D datasets over a set of extracted meshes. See the supplemental appendix, where we compare the effects of saturation, normalization and interpolation against the number of wavelets, vertices and supercubes and PSNR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Stencil</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Efficiency of supercube-based octree representation</head><p>Here, we consider the efficiency of our adaptive representation in terms of wavelet selectivity, the overhead of stencil size, and our supercubebased encoding for the extracted meshes.</p><p>10 <ref type="formula">0 10 1 10 2 10 3 10 4 10 5 10 6 10 7 10 8</ref>10 0 10 1 10 2 10 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">4</head><p>Num wavelet coefficients normalized RMSE interp approx interpIso approxIso <ref type="figure" target="#fig_8">Fig. 5</ref>. Half-open interval volumes extracted from the Armadillo distance field. Comparison of selecting wavelets intersecting the zero level set of a 513 3 distance field (left) and selecting only by magnitude (middle). Saturated (Type II) normalized approximating wavelets a II,n were used in both cases. The images reveal the interior distance field (black contours of cutaway armadillo meshes) and octree depth (colored cubes of cutaway armadillo meshes and of cutaway octrees). Notice the distance field singularities preserved (middle), which do not contribute to the quality of the extracted surface. The relative distance error and number of wavelets, vertices, and supercubes are (1.23; 677 K; 1.27 M; 54.0 K) on the left and (3.67; 1.84 M; 3.39 M; 168 K) in the middle. The chart on the right plots the deviation from zero (normalized Root Mean Squared Error) given by the approximate fields for 1,000,000 samples from the original triangulated surface.  <ref type="table">Table 1</ref> lists the overhead per wavelet for each type of stencil defined in Section 4.1, in terms of the number of required vertices. Simply removing the boundary vertices (m, int) of the wavelet stencil significantly reduces the overhead (e.g. by 50% for the 3D approximating wavelets). This is interesting, since it extends beyond linear B-spline wavelets <ref type="bibr" target="#b18">[19]</ref>. That is, all tensor product wavelets have a rectilinear stencil, the boundary of which always has zero-valued coefficients. The multilinear optimization ('Min multilinear') gives another significant reduction, and the use of the radial interpolant ('Min radial') reduces it by half again, with respect to the original rectilinear block.</p><p>More importantly, these savings translate to runtime representations in practice (see lower left chart in <ref type="figure">Figure 9</ref>). The normalized multilinear and radial meshes induce an overhead of about 2-5 vertices per wavelet for unsaturated (Type I) and 1-2 vertices per wavelet when the mesh wavelets are saturated. Compared to the full stencil, the radial representation requires about half to a quarter of the vertices for the normalized wavelets, and about half of the total number of supercubes (our encoding primitive). On the other hand, the increase in stencil size due to our conservative radial interpolant stencils (r, slice) compared to the optimal (r, opt) incurs a slight overhead (roughly 5-10%). <ref type="figure" target="#fig_5">Figure 6</ref> illustrates the performance benefits of our adaptive representation as a function of per-cell time associated with a hypothetical processing task such as isocontouring or volume rendering. Rather than arbitrarily choosing such a task, we parameterize the speedup by the processing time. Although the per-cell time needed just to extract our adaptive meshes is around 8x longer than the per-cell time needed to traverse the full-resolution grid, our method greatly reduces the number of cells and therefore the total processing time. The top curve in this figure shows the breakeven point, i.e. the highest fraction of adaptive grid cells to full-resolution grid cells, for which our adaptive method yields the same total processing time as working with the full-resolution grid. Because our adaptive meshes usually retain 1% or fewer cells, we tend to achieve speedups of 10x or more.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Thresholding by function domain and range</head><p>For isosurfaces and interval volumes, we often require the field to be accurate only within a range of function values. We here evaluate the efficiency of representing only a scaffold of vertices around a given isocontour from a signed distance field generated from a triangle mesh. Specifically, we discard those wavelets whose support does not intersect the zero set, allowing us to adapt surface detail by thresholding the remaining wavelets by magnitude (similar to <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b46">48]</ref>).</p><p>We observe that the distance field has sharp singularities related to the 'medial' regions -locations that are equally distant from several points on the surface. By filtering with respect to a range of isovalues, we are able to remove these singularities that we are not actually interested in, while retaining all details necessary to perfectly reconstruct the surface using less than 1% of wavelet coefficients (see <ref type="figure" target="#fig_8">Figure 5)</ref>.</p><p>We evaluate the quality of our approximation by computing the mean squared distance, as given by our approximate field, evaluated over the known surface. We relate this error to the error of the fullresolution (sampled) distance field, which is non-zero since the distance field is generally not trilinear. <ref type="figure" target="#fig_8">Figure 5</ref>(right) demonstrates the quality benefit of using isosurface thresholded wavelets ('Iso' suffix). Specifically, the non-filtered distance field requires an order of magnitude more vertices to achieve the same error tolerance.</p><p>It is also common to select wavelets based on a subset of the function's domain. In <ref type="figure">Figure 7</ref> we demonstrate a region of interest query, illustrating the gradual decrease in resolution outside the circular query region, within which the function is shown at full detail. <ref type="figure">Fig. 7</ref>. Region of interest filtering on the 4097 2 Puget Sound dataset. The ROI is a circle with radius 400 samples centered around Mt. Rainier. The mesh contains 130 K vertices in 11.4 K supercubes (average occupancy 97%), comprising less than 1% of the total field. Note how the bilinear patches (colored by quadtree depth) define a globally C 0 function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.5">Effects of the interpolant: linear vs. multilinear</head><p>Since adaptive octrees generate non-conforming meshes (i.e. they have hanging nodes), the standard approach when approximating a function adaptively over an octree is to triangulate the cubes into simplices, either using red-green patterns <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b32">33]</ref> or bisection-based triangulations <ref type="bibr" target="#b45">[47]</ref>. The field is then approximated using a linear interpolant.</p><p>Here, we demonstrate the benefits of using the interpolant associated with the underlying wavelet. For a given adaptive octree mesh with reconstructed function values at the cube corners, we compare reconstructing each cube using either a multilinear interpolant or a linear interpolant based on simplex bisection <ref type="bibr" target="#b45">[47]</ref>. An analysis of the peak signal to noise ratio (PSNR) suggests that multilinear interpolation can yield significant improvements in fidelity for both natural images and volumetric data. For example, on the Rayleigh-Taylor instability (RTI) dataset <ref type="bibr" target="#b6">[7]</ref>  <ref type="figure">(Figure 9</ref>), we found that adaptive meshes defined by the same set of vertices can yield a PSNR improvement of several dB when using the native multilinear interpolant over the mesh cells rather than a linear interpolant over its tetrahedralization. See also the supplemental material for detailed comparisons.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.6">Multilinear interpolation on subsampled meshes</head><p>The relationship between radial predictors and linear B-spline wavelets can also be beneficial when attempting to use a multilinear interpolant over a subsampled scalar field, i.e. where we skip the wavelet analysis phase and merely discard a subset of the samples that we do not care about. Subsampling has been successful for linear interpolants over triangulated meshes, where it forms the basis of numerous interactive LOD schemes e.g. for view-dependent terrain visualization <ref type="bibr" target="#b14">[15]</ref> and view-dependent isosurface extraction <ref type="bibr" target="#b17">[18]</ref>, among numerous others.</p><p>Due to the centrality of multilinear interpolants in many visualization applications (e.g. the Marching Cubes algorithm <ref type="bibr" target="#b26">[27]</ref> and direct volume rendering <ref type="bibr" target="#b0">[1]</ref>), we would like to directly apply a multilinear interpolant to a subsampled regular grid. A natural choice would be to edge-balance the mesh (see Section 2), as in several adaptive isosurface extraction techniques <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b48">50]</ref>, and to apply a multilinear interpolant on the cubes of the mesh. Unfortunately, although this approach defines a globally C 0 function, it leads to disturbing visual artifacts (see <ref type="figure" target="#fig_7">Figure 8</ref>(a)). However, when we apply a radial interpolant to the same mesh, the artifacts disappear (see <ref type="figure" target="#fig_7">Figure 8</ref>(b)), and we have achieved a reconstruction equivalent to our interpolating linear B-spline wavelet approximating the original function.</p><p>To see why the radial interpolant helps, recall that interpolating wavelets have only the predictor stage (w-lift) but not the update stage (s-lift) in the lifting scheme. Thus, an interpolating wavelet's coefficient is associated with a (primal) face f of the mesh, and its interpolated value depends only on the values of the corner vertices of f . Thus, a subsampled mesh corresponds to an interpolating wavelet synthesis defined by all of the retained vertices in our subsampled mesh. By following our octree reconstruction algorithm (Section 5.2.1) we see that for the interpolating 'Min radial' extraction, we need only refine all octree parents of the vertices of the dual cubes of these vertices (giving an edge-balanced mesh), and radially interpolate the cells.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>In this paper, we have developed a framework based on adaptive octree meshes for efficiently encoding and reconstructing fields defined by tensor product wavelets. This framework enables us to represent simplified functions at runtime in an output sensitive manner. Applications like isosurfacing, DVR, ray tracing, and image panning can benefit from the reduction in both storage and computation when working with such an adaptive mesh. We have analyzed the hierarchical dependency relation among the wavelets to define an adaptive refinement strategy that allows extracting the coarsest mesh for representing any combination of wavelets. Using this dependency relation, we have demonstrated the potential benefits of saturating the mesh with the set of wavelets whose stencils are already present in the mesh. When evaluating the function on the interior of the cells of the mesh, we have demonstrated the quality benefits of using the interpolant induced by the wavelet scheme rather than a piecewise linear interpolant on a simplicial subdivision of the mesh, as in previous work <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b45">47]</ref>.</p><p>In the case of linear B-spline wavelets, we have empirically and visually demonstrated quality improvements when using the wavelet scheme's underlying multilinear interpolant on the cubic cells of the octree rather than a linear interpolant on a simplicial subdivision.</p><p>We have demonstrated the benefits of the proposed approach using several different wavelet filtering strategies, including coefficient thresholding, region of interest queries, and isovalue-based thresholding. In most cases, we can achieve a faithful approximation to the desired features of the underlying function using only a small fraction of the space necessary for the original domain on which the problem was defined.</p><p>A limitation of the current work is that modification of the function (e.g. due to the insertion of a new wavelet coefficient) is not a local operation, since it could require cascades of updates over the entire support of the wavelet. In the worst case, insertion of a wavelet could require all vertices in the adaptive mesh to update, for example, if the wavelet associated with the root of the octree is added to a mesh. As part of our ongoing work, we are developing a refinement scheme that will allow incremental updates to the mesh.</p><p>As future work, we would like to implement adaptive wavelet transforms for other tensor product wavelets. An interesting generalization would be to cubic B-spline wavelets (with more than two lifting steps), as this would make our scheme globally C 1 continuous.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>TRILINEARLY INTERPOLATED LINEARLY INTERPOLATED</head><p>a II,n m,T :0.1% (23.8 K, 39.4 K, 1.7 K); PSNR: 41.3 a U m,D:13 (18.7 K, 35.9 K, 888); PSNR: 29.6 a II,n l,T :0.1% (21.9 K, 50.0K, 1.9 K); PSNR: 39.1 a U l,D:13 (18.7 K, 35.9 K, 888); PSNR: 28.4</p><p>a II,n m,T :1% (265 K, 415 K, 17.  <ref type="figure">Fig. 9</ref>. Surfaces of ray traced interval volumes on the 257 3 Rayleigh-Taylor instability dataset <ref type="bibr" target="#b6">[7]</ref> comparing approximating a II,n wavelets (raytraced at full resolution with tricubic B-spline interpolation on bottom right) for meshes defined by similar number of wavelet coefficients (rows). Columns show close-ups of adaptive meshes extracted using (normalized and saturated) wavelet magnitude thresholded meshes (columns 1 and 3) and progressive uniform meshes at a given depth in the hierarchy (columns 2 and 4) when interpolated trilinearly over the cubes of the adaptive octree (columns 1 and 2) and linearly over a corresponding tetrahedralized mesh (columns 3 and 4). Rows show: 0.1% thresholded wavelets (T: 0.1%) vs. uniform depth 13 (D: 13); 1% thresholded vs. depth 17 (T: 1% vs. D: 17) and 10% thresholded vs. depth 20 (T: 10% vs. D: 20). When thresholding above T: 10%, the images are virtually indistinguishable from those of the mesh at full resolution. The numbers below each figure indicate the number of wavelets, vertices and supercubes in the corresponding mesh as well as the PSNR of the approximation. Note that the surface artifacts are due to the lack of normal continuity of the interpolant across cell boundaries (trilinear on the left, linear on the right). When the interpolant is fixed (columns 1 vs. 2, and 3 vs. 4), wavelet filtering achieves similar PSNR using an order of magnitude fewer vertices. Alternatively, for a fixed mesh (columns 1 vs. 3 and 2 vs. 4), multilinear interpolants achieve a gain of several decibels PSNR on the same mesh. The chart on the lower left provides a broader overview of the experiment from which this example was selected and the chart on the lower middle indicates the efficiency of the representation for different stencils in terms of the number of vertices per wavelet using the saturated (Type II, middle) wavelets.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>An edge (black) and its dual 2-cube (red) in a hexahedral mesh.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>2D basis functions for approximating (b, c) and interpolating (d, e) bilinear B-spline wavelets. With respect to the embedding 3 × 3 grid (bold), scaling functions (a) are associated with vertices, while wavelets are associated with edges (b, d) and squares (c, e).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>− 2 d vertices (12 vertices in 2D; 56 vertices in 3D). The vertices present in the adaptive octree mesh are indicated using one bit per vertex, resulting in a per-supercube overhead of 7 bytes for the vertex flags and 6 bytes for supercube coordinates in 3D. The nodal function values are stored in tiles of size 4 d − 2 d and the sets of supercubes at each level of resolution are stored in a hash map, providing random access to the mesh vertices and their associated scalar values. The mapping from grid vertices to supercubes involves only simple bit manipulations</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Hierarchical dependencies (a, b), stencil vertices (c, d) and supercube encoding (e) for interpolatingψ (a, c) and approximating ψ (b, d) edge wavelets (red) in a quadtree. (a, b) Wavelets depend on the octree parents (blue) of the vertices of a dual cube (green) of a single vertex from the mesh (the wavelet itself in (a) and that of its upper endpoint in (b)). (c, d) Wavelet stencils require all vertices from the previous level of resolution (black vertices) within the wavelet's support (black edges, compare toFigure 2). Additional vertices are required for radial (red), multilinear (red and green) and full internal (red, green and white). (e) Vertices associated with the supercubes<ref type="bibr" target="#b43">[45]</ref> at the wavelet's level of resolution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>9 Fig. 4 .</head><label>94</label><figDesc>Interval volume renderings comparing wavelet saturation and normalization in adaptive meshes approximating the Tooth dataset (a) from its highest 0.03% wavelet coefficients. The unnormalized, unsaturated mesh (b) uses a significant portion of its vertex budget on high resolution noise (not pictured), and fails to capture the shape of the tooth. Its saturated counterpart (c) successfully captures the shape, while both normalized meshes (unsaturated (d) and saturated (e)) achieve better approximations using a considerably smaller mesh. The numbers in the subcaptions indicate the number of wavelet coefficients, vertices and supercubes in the extracted mesh, as well its Peak Signal to Noise Ratio (PSNR).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Expected speedup (contours) due to adaptive mesh relative to full resolution datasets for a given cell processing time in our visualization kernel (x-axis) and density in our adaptive representation (y-axis).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>(a) Corner -PSNR:25.9 (b) Radial -PSNR:26.9 (a) Corner -PSNR:25.9 (a) Corner -PSNR:25.9 (b) Radi</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>(a) Artifacts when using a corner-based bilinear predictor to balance a subsampled adaptive mesh. (b) Radial spectral predictors based on corners and edges contain the complete support of their underlying basis function. Highlighted areas (red circles) are magnified by 2.25x.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>5 10</head><label>5</label><figDesc>4 K); PSNR: 56.2 a U m,D:17 (242 K, 275 K, 5.8 K); PSNR: 43.7 a II,n l,T :1% (248 K, 506 K, 19.0 K); PSNR: 52.8 a U l,D:17 (242 K, 275 K, 5.8 K); PSNR: 40.6 a II,n m,T :10% (2.83 M, 3.36 M, 74.2 K); PSNR: 99.0 a U m,D:20 (1.89 M, 2.15 M, 41.7 K); PSNR: 55.0 a II,n l,T :10% (2.80 M, 3.49 M, 75.5 K); PSNR: 97.3 a U l,D:20 (1.89 M, 2.15 M, 41.7 K); PSNR: 51.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 22, NO. 1, JANUARY 2016</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was performed under the auspices of the U.S. Department of Energy by Lawrence Livermore National Laboratory under Contract DE-AC52-07NA27344, and was supported by the Office of Advanced Scientific Computing Research. We wish to thank the reviewers for their valuable feedback and the various data providers for making their data sets freely available.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Direct interval volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ament</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1505" to="1514" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Rate-distortion optimal mesh simplification for communications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Balmelli</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
		<respStmt>
			<orgName>Ecole Polytechnique Fédérale de Lausanne EPFL</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Computational analysis of mesh simplification using global error</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Balmelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Liebling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vetterli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry Theory and Applications</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="171" to="196" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Refinement algorithms and data structures for regular local mesh refinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Sherman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Weiser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Computing, IMACS</title>
		<editor>R. Stepleman, M. Carver, R. Peskin, W. F. Ames, and R. Vichnevetsky</editor>
		<meeting><address><addrLine>Amsterdam</addrLine></address></meeting>
		<imprint>
			<publisher>North-Holland</publisher>
			<date type="published" when="1983" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="3" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Local adaptive mesh refinement for shock hydrodynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Colella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">82</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="64" to="84" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Generalized Bspline subdivision-surface wavelets for geometry compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="326" to="338" />
			<date type="published" when="2004-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Reynolds number effects on Rayleigh-Taylor instability with possible implications for type Ia supernovae</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cabot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Physics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="562" to="568" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Artifacts caused by simplicial subdivision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Moller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="231" to="242" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The adaptive tensor product wavelet scheme: Sparse matrices and the application to singularly perturbed problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Chegini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Stevenson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IMA Journal of Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="75" to="104" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Reconstruction of topologically correct and adaptive trilinear isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ganovelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="399" to="418" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Adaptive wavelet transforms via lifting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Claypoole</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Baraniuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Nowak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Acoustics, Speech and Signal Processing</title>
		<meeting>IEEE Acoustics, Speech and Signal Processing</meeting>
		<imprint>
			<date type="published" when="1998-05" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1513" to="1516" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Biorthogonal bases of compactly supported wavelets. Communications on pure and applied mathematics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Daubechies</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Feauveau</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="page" from="485" to="560" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Factoring wavelet transforms into lifting steps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Daubechies</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Fourier analysis and applications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="247" to="269" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Summer school on multiresolution and Adaptive Mesh Refinement methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Domingues</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Roussel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Schneider</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedinges ESAIM</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="1" to="96" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
	<note>Adaptive multiresolution methods</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">ROAMing terrain: Real-time Optimally Adapting Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Sigeti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Aldrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Mineev-Weinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Dual complexes of cubical subdivisions of R n</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kerber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete &amp; Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="393" to="414" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Adaptively sampled distance fields: A general representation of shape for computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Frisken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">N</forename><surname>Perry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Rockwood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Jones</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="2000-07" />
			<biblScope unit="page" from="249" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Interactive view-dependent rendering of large isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Gregorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002-10" />
			<biblScope unit="page" from="475" to="484" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">CHARMS: A simple framework for adaptive simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Grinspun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Krysl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="281" to="290" />
			<date type="published" when="2002-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Efficient triangular surface approximations using wavelets and quadtree data structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Staadt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gatti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="130" to="143" />
			<date type="published" when="1996-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Survey of texture mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="56" to="67" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Solving hyperbolic PDEs using interpolating wavelets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Holmström</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Scientific Computing</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="405" to="420" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Spectral interpolation on 3 x 3 stencils for prediction and compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ibarria</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computers</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="53" to="63" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Multiresolution distance volumes for progressive surface compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 3D Data Processing Visualization and Transmission</title>
		<meeting>3D Data Processing Visualization and Transmission</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="470" to="479" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Wavelets for adaptively refined &quot;3rd-root-of-2&quot; subdivision meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Linsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computers &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="223" to="231" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Waveletbased multiresolution with n √ 2 subdivision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Linsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal on Computing, Special Edition: Dagstuhl Seminar on Geometric Modelling</title>
		<imprint>
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="129" to="142" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A wavelet tour of signal processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mallat</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Academic press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Visualization of AMR data with multi-level dual-mesh interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Moran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ellsworth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1862" to="1871" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Adaptive generation of surfaces in volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="182" to="199" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">On marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="283" to="297" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Surface mapping brain function on 3D models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Payne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Toga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="33" to="41" />
			<date type="published" when="1990-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Isotopic meshing of implicit surfaces. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Plantinga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Vegter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="45" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A new, fast, and efficient image codec based on set partitioning in hierarchical trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Said</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Pearlman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Circuits and Systems for Video Technology</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="243" to="250" />
			<date type="published" when="1996-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Foundations of Multidimensional and Metric Data Structures. The Morgan Kaufmann series in computer graphics and geometric modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Embedded image coding using zerotrees of wavelet coefficients</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shapiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Signal Processing</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="3445" to="3462" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Octree-based decimation of marching cubes surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shekhar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Fayyad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cornhill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="335" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Adaptive marching cubes. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kankanhalli</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="202" to="217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Exact evaluation of Catmull-Clark subdivision surfaces at arbitrary parameter values</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="395" to="404" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Wavelets for Computer Graphics: Theory and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Stollnitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Salesin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">The lifting scheme: A construction of second generation wavelets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Mathematical Analysis</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="511" to="546" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Image quality assessment: from error visibility to structural similarity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bovik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sheikh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Simoncelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="600" to="612" />
			<date type="published" when="2004-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Extraction of crack-free isosurfaces from adaptive mesh refinement data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ligocki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shalf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hierarchical and Geometrical Methods in Scientific Visualization, Mathematics and Visualization</title>
		<editor>G. Farin, B. Hamann, and H. Hagen</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="19" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Diamond hierarchies of arbitrary dimension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1289" to="1300" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Supercubes: A high-level primitive for diamond hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1603" to="1610" />
			<date type="published" when="2009-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Bisection-based triangulations of nested hypercubic meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 19th International Meshing Roundtable</title>
		<editor>S. Shontz</editor>
		<meeting>19th International Meshing Roundtable</meeting>
		<imprint>
			<date type="published" when="2010-10" />
			<biblScope unit="page" from="315" to="333" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Isodiamond hierarchies: An efficient multiresolution representation for isosurfaces and interval volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="583" to="598" />
			<date type="published" when="2010-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Simplex and diamond hierarchies: Models and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="2127" to="2155" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<monogr>
		<title level="m" type="main">Real-time exploration of regular volume data by adaptive reconstruction of isosurfaces. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="100" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Adaptive and quality quadrilateral/hexahedral meshing from volumetric data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Methods in Applied Mechanics and Engineering</title>
		<imprint>
			<biblScope unit="volume">195</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="942" to="960" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
