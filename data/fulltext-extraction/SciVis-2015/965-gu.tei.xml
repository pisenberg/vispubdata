<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Mining Graphs for Understanding Time-Varying Volumetric Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yi</forename><surname>Gu</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department Computer Science and Engineering</orgName>
								<orgName type="institution" key="instit1">University of Notre Dame</orgName>
								<orgName type="institution" key="instit2">Notre Dame</orgName>
								<address>
									<postCode>46556</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Senior Member, IEEE</roleName><forename type="first">Chaoli</forename><surname>Wang</surname></persName>
							<email>chaoli.wang@nd.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department Computer Science and Engineering</orgName>
								<orgName type="institution" key="instit1">University of Notre Dame</orgName>
								<orgName type="institution" key="instit2">Notre Dame</orgName>
								<address>
									<postCode>46556</postCode>
									<region>IN</region>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Division of Mathematics and Computer Science</orgName>
								<orgName type="institution">Argonne National Laboratory</orgName>
								<address>
									<postCode>60439</postCode>
									<settlement>Argonne</settlement>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Tom</forename><surname>Peterka</surname></persName>
							<email>tpeterka@mcs.anl.gov</email>
							<affiliation key="aff0">
								<orgName type="department">Department Computer Science and Engineering</orgName>
								<orgName type="institution" key="instit1">University of Notre Dame</orgName>
								<orgName type="institution" key="instit2">Notre Dame</orgName>
								<address>
									<postCode>46556</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Jacob</surname></persName>
							<email>jacob@mcs.anl.gov</email>
							<affiliation key="aff0">
								<orgName type="department">Department Computer Science and Engineering</orgName>
								<orgName type="institution" key="instit1">University of Notre Dame</orgName>
								<orgName type="institution" key="instit2">Notre Dame</orgName>
								<address>
									<postCode>46556</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Seung</forename><forename type="middle">Hyun</forename><surname>Kim</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department Computer Science and Engineering</orgName>
								<orgName type="institution" key="instit1">University of Notre Dame</orgName>
								<orgName type="institution" key="instit2">Notre Dame</orgName>
								<address>
									<postCode>46556</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">Y</forename><surname>Gu</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Division of Mathematics and Computer Science</orgName>
								<orgName type="institution">Argonne National Laboratory</orgName>
								<address>
									<postCode>60439</postCode>
									<settlement>Argonne</settlement>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">S H</forename><surname>Kim</surname></persName>
							<affiliation key="aff2">
								<orgName type="department">Department of Mechanical and Aerospace Engineering</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<postCode>43210</postCode>
									<settlement>Columbus</settlement>
									<region>OH</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Mining Graphs for Understanding Time-Varying Volumetric Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2015.2468031</idno>
					<note type="submission">received 31 Mar. 2015; accepted 1 Aug. 2015; date of publication xx Aug. 2015; date of current version 25 Oct. 2015.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Time-varying data visualization</term>
					<term>graph simplification</term>
					<term>community detection</term>
					<term>visual recommendation</term>
				</keywords>
			</textClass>
			<abstract>
				<p>A notable recent trend in time-varying volumetric data analysis and visualization is to extract data relationships and represent them in a low-dimensional abstract graph view for visual understanding and making connections to the underlying data. Nevertheless, the ever-growing size and complexity of data demands novel techniques that go beyond standard brushing and linking to allow significant reduction of cognition overhead and interaction cost. In this paper, we present a mining approach that automatically extracts meaningful features from a graph-based representation for exploring time-varying volumetric data. This is achieved through the utilization of a series of graph analysis techniques including graph simplification, community detection, and visual recommendation. We investigate the most important transition relationships for time-varying data and evaluate our solution with several time-varying data sets of different sizes and characteristics. For gaining insights from the data, we show that our solution is more efficient and effective than simply asking users to extract relationships via standard interaction techniques, especially when the data set is large and the relationships are complex. We also collect expert feedback to confirm the usefulness of our approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In scientific visualization, a notable recent trend in visualizing scalar and vector field data is to design effective user interfaces that integrate techniques from computational transformation and data analysis <ref type="bibr" target="#b24">[25]</ref>. Visual representations such as parallel coordinates, treemaps, and graphs have been utilized to assist scientific visualization tasks such as transfer function specification, level-of-detail selection, and flow relationship exploration <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b14">15]</ref>. Instead of being confined to the original spatiotemporal domain, these solutions extract data and their relationships over space and time, display these relationships in a low-dimensional space, and enable users to perform queries and make connection to the original data.</p><p>The idea of transforming the data and their relationships into an abstract view for exploring complex relationships and improving data understanding has been accepted as a viable means to analyze and visualize scientific data. Nevertheless, most of these representations lack enough guidance for user exploration and navigation. In many cases, users can only rely on low-level visual hints (such as the size and density of nodes and edges) to figure out the relationships with the underlying data through brushing and linking. This approach may work for small data with simple relationships, but becomes increasingly inefficient for larger data with greater complexity. Therefore, solutions that help users sift through the data and their relationships for cost-effective understanding are highly desirable.</p><p>In this paper, we specifically focus on time-varying volume data visualization and investigate transition relationships among data items over time. We present a mining approach that automatically extracts features from a graph-based representation for understanding timevarying data. Beyond straightforward graph properties, users are given further guidance available through a series of graph analysis techniques including graph simplification, community detection, and visual recommendation. Graph simplification condenses a large graph to a smaller one by abstracting known structures, such as fan, connector, and clique, presenting a less cluttered view for quick comprehension of the overall graph structure. Community detection organizes nodes with close relationships into groups, allowing visual comparison between groups of nodes instead of individual nodes. Visual recommendation automatically highlights individual nodes or node groups based on user selected items, enabling users to spend more time on the actual analysis instead of painstaking interaction. Furthermore, visual recommendation based on node groups actually recommends the groups according to their structural relations and suggests similar groups regardless of their volume values, spatial regions, and temporal ranges. When the data set is large and the relationships are complex, navigating and exploring the resulting graph is a daunting task. We show that the suite of high-level functions introduced provides the convenience and capabilities for graph exploration which are difficult or impossible to achieve through standard interaction techniques. Our solution thus represents a step forward in applying graph-based techniques for scientific data analysis and visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Popular visual representations such as scatterplots, parallel coordinates, and treemaps have been extensively applied to scientific visualization. Unlike straightforward applications of these visual representations, leveraging the more generic and powerful visual graph representations requires a fully integrated pipeline of data transformation, representation, and visual mapping. The pioneering work of image graphs by Ma <ref type="bibr" target="#b15">[16]</ref> encodes the visualization process, including parameters and results, into a graph representation.</p><p>For time-varying multivariate data visualization, Sauber et al. <ref type="bibr" target="#b21">[22]</ref> introduced the Multifield-Graphs, a user interface that shows the overview of all possible correlation fields derived from several scalar fields for multivariate correlation exploration. Jänicke et al. <ref type="bibr" target="#b13">[14]</ref> presented the attribute cloud, a two-dimensional projection of highdimensional data that uses a minimum spanning tree to reduce edge crossing and layout the data graph. Their interface enables intuitive data brushing in 2D and connection with the underlying 3D data. Gu and Wang designed two representations, TransGraph <ref type="bibr" target="#b10">[11]</ref> and iTree <ref type="bibr" target="#b11">[12]</ref>, for time-varying data visualization. TransGraph <ref type="bibr" target="#b10">[11]</ref> encodes hierarchical transition relationships for a time-varying data set to guide relationship exploration and tracking. iTree <ref type="bibr" target="#b11">[12]</ref> integrates efficient data compacting, indexing, and classification into a single framework. A hyperbolic layout algorithm is employed to draw the iTree with a large number of nodes and focus+context visualization is provided for interaction. Researchers also designed other graphs for exploring, analyzing and tracking temporal evolution of features in large-scale simulation data sets. Examples include dynamic tracking graphs <ref type="bibr" target="#b26">[27]</ref>, attributed relational graphs <ref type="bibr" target="#b16">[17]</ref>, and Petri Nets <ref type="bibr" target="#b18">[19]</ref>.  show examples for fan, connector, and clique, respectively. We use the included angle of fan, the size of star, and the size of triangle to indicate the number of nodes simplified for the three graph features, respectively. Regular (i.e., unsimplified) nodes are drawn as squares. In (c), all other nodes connecting to the clique are connected to the center of the triangle.</p><p>Our work differs from all previous work in that we present a mining approach for viewing, exploring and navigating a graph representation extracted from a scientific data set. To handle a large number of nodes produced from a large data set, TransGraph builds a hierarchy and allows users to explore the details on demand. Users interact with TransGraph through standard interaction techniques, which is not always convenient and efficient. The techniques we employ include graph simplification, community detection, and visual recommendation. Graph simplification not only reduces the number of nodes displayed on the screen but also highlights important graph structures. To further reduce user workload, community detection groups similar nodes into communities. Node and community recommendation functions allow users to fetch similar volumetric regions from the original data via graph, and suggest similar nodes or graph structures to help the exploration. Users are given the flexibility to apply these techniques in sequence or selectively to the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">TRANSITION GRAPH</head><p>Our work is based on the transition relationships in time-varying volumetric data sets as defined in TransGraph <ref type="bibr" target="#b10">[11]</ref>. The ideas and techniques presented are applicable to other graph-based representations. They work most effectively when the graph is large. In the following, we describe the construction of a transition graph.</p><p>We first partition the volume data at each time step into blocks. Each block is, for example, N × N × N voxels. Given two blocks, we compute the Jensen-Shannon divergence (JSD) of their histograms as the dissimilarity or distance between them. Then we group these blocks based on their spatial and temporal adjacency within a small time window w. Specifically, given a target block b t , we first check its spatial or temporal neighbor b n to see whether it is similar to b t . If so, then b n is clustered to b t . We continue to compare the neighbors of b n with b t . This process repeats until no similar blocks could be found in w. Note that if b n is already clustered to another block, we will not check its neighbors when b n is reached.</p><p>Finally, we derive directional transition probabilities among blocks to construct the transition graph. In the transition graph, a node denotes a state which represents a group of spatiotemporally neighboring blocks, and a directed edge between two states indicates their transition probability. In extreme cases, a state may represent a single block. A transition i → j occurs between two blocks i and j, from one block i at time step t to another block j at time step t + 1, if and only if their spatial locations are the same. Given two groups g i and g j , the directional transition probability p g i →g j is the ratio between the number of transitions from g i to g j and the total number of transitions from g i to all the groups (including itself). As such, a transition indicates a chance for one group to transfer to another group, and its probability measures how high the chance is.</p><p>To draw the transition graph, we apply a two-step process. First, we use the Fruchterman-Reingold force-directed layout algorithm <ref type="bibr" target="#b8">[9]</ref> to create the initial layout. Since we draw nodes with certain sizes, visual occlusion becomes unavoidable for a large graph. We therefore utilize four forces: bidirectional repulsive force, unidirectional repulsive force, spring force, and attractive force, to reduce the overlap while preserving the overall graph structure <ref type="bibr" target="#b10">[11]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">GRAPH SIMPLIFICATION</head><p>Visual clutter is common in a transition graph due to the presence of a large number of nodes and edges. We can reduce the clutter through edge reduction or node reduction. For edge reduction, edge simplification and compression techniques <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b7">8]</ref> identify the relations among nodes, group the nodes with similar edge configurations together, and draw a single edge to the group instead of edges to group members. For node reduction, TopoLayout <ref type="bibr" target="#b2">[3]</ref> detects topological features such as trees, connected components and biconnected components, and motif simplification <ref type="bibr" target="#b6">[7]</ref> detects fans, connectors and cliques. Both techniques use a single node to replace a graph feature.</p><p>In our work, we focus on node reduction and replace certain graph features with symbols in order to highlight important graph structures. Similar to motif simplification <ref type="bibr" target="#b6">[7]</ref>, we select three graph features for simplification because they represent meaningful transition relations and do not impose restrictions to the order of simplification. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates these three graph features and their corresponding symbols for simplification. For graph simplification, we do not consider edge directions in the transition graph. However, the three graph features themselves already imply directional edge information as explained in the following.</p><p>• A fan is a configuration of a central node with multiple leaf nodes of degree one. The fan is simplified with the fan symbol as shown in <ref type="figure" target="#fig_0">Figure 1</ref> (a). The undirected edge between nodes v i and v j has three kinds of relation</p><formula xml:id="formula_0">: v i → v j , v j → v i , and v i ↔ v j .</formula><p>Each node encompasses data blocks grouped within a fixed time interval. If a node has only outgoing (incoming) edges, it must be in the first (last) time interval. Therefore, the fan with one directional edge v j → v i at the first time interval (v i → v j at the last time interval) indicates the convergence (divergence) of states. In other time intervals, the bidirectional edge  </p><formula xml:id="formula_1">v i ↔ v j indicates that v i derives v</formula><formula xml:id="formula_2">v i → v k and v k → v j . Second, v</formula><formula xml:id="formula_3">v j → v k .</formula><p>In both cases, v k can be considered as an intermediate state of v i and v j . Similar to fans, connectors may also occur in the first and last time intervals. In these cases, we have edges v i → v k and v j → v k (for the first time interval), and v k → v i and v k → v j (for the last time interval). They correspond to the convergence and divergence of states, respectively. • A clique is a configuration of more than two nodes that are fully connected. As shown in <ref type="figure" target="#fig_0">Figure 1</ref> (c), cliques represent a set of nodes changing their states among each other. We do not require all edges in a clique to be bidirectional.</p><p>Implication. According to the definition of fan, a node will transit to another node at later time steps and transit back to itself eventually. As a result, a fan could represent a volume region that has turbulence and eventually returns to the original state. In a connector, the nodes in between can be considered as a set of intermediate states between the two ending nodes. Therefore, a connector represents a transition from a state to another. A clique is a simplification of several nodes that have strong connections between them. These nodes therefore represent a locally stable region during that time period. Order of Simplification. We note that the order of simplification does not affect the final result. This is because they only apply to regular (i.e., unsimplified) nodes and these three graph features are unique and independent of each other. However, to achieve the best time performance in detecting these graph features, we first simplify fans, followed by connectors and cliques. Fan simplification can reduce the number of nodes dramatically, thus we take this simplification first. Clique simplification is placed last because the time complexity to identify cliques is the highest. <ref type="figure" target="#fig_1">Figure 2</ref> shows an example of the results of graph simplification. To further reduce visual clutter, we display nodes with small numbers of data blocks only if they belong to query results for highlighting. Based on our experience, those nodes that are not rendered are mainly regular nodes. Some connectors are also omitted while fans and cliques are less likely to be. In <ref type="table" target="#tab_3">Table 1</ref>, we report the number of nodes originally created, after simplification, and finally displayed. In the following, we describe our algorithms to detect these graph features.</p><formula xml:id="formula_4">BLK # NODE # BLK # NODE # BLK # NODE # (a) (b) (c) (d)</formula><p>Fan Detection. Our fan detection creates a data container called map that stores a set of tuples. Each tuple represents a pair of nodes: a central node and a leaf node. A tuple uses the central node as the key and the leaf node as the value. Thus, a set of tuples sharing the same key represents a fan feature. The detection algorithm first goes through all the nodes in the graph, finds the nodes with degree of one, and inserts them to the map. Then, we find those keys with more than one tuple in the map as the central nodes and their corresponding values as leaf nodes.</p><p>Connector Detection. Similar to fan detection, our connector detection also creates a map. To detect a connector, we use the two ending nodes as the key and an intermediate node as the value. We first go through all the nodes in the graph, find all the nodes with degree of two, and insert them to the map. If any key has more than two tuples in the map, the keys are the ending nodes and their corresponding values are intermediate nodes.</p><p>Clique Detection. To detect cliques, we apply the algorithm introduced by Tomita et al. <ref type="bibr" target="#b22">[23]</ref>. This algorithm has a time complexity of 3 |V |/3 , where |V | is the number of nodes in the graph. Since this algorithm finds all the cliques, the cliques may share nodes. To avoid this situation, we utilize a greedy algorithm to select cliques in an iterative manner. In each iteration, we always select the largest clique and rule out all other cliques that share node(s) with any previously selected clique. Algorithm 2 in the Appendix detects all the cliques in the graph. Given a node q in graph G, this algorithm generates a subgraph G ′ that consists of all the nodes in G that are adjacent to q. Then this algorithm treats G ′ as a new input graph and repeats the above process. If q does not have any adjacent nodes or has only one adjacent node left, the nodes already expand in full. Thus, q and its adjacent nodes along the path form a clique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">COMMUNITY DETECTION</head><p>Generally speaking, techniques for graph partitioning and clustering aim to identify node subsets called communities with many internal and few external edges. Unlike a clique which is a subset of nodes inducing a complete subgraph, a community is less restrictive and more practical in many applications because it identifies a highly cohesive structure as a cluster by the mere absence of a few edges. Detecting communities will help us investigate community structures and their evolution. We leverage SLPA <ref type="bibr" target="#b27">[28]</ref>, an extended version of the label propagation algorithm (LPA), for community detection. SLPA can handle weighted directed graphs which fits our transition graph. It has an efficient time complexity of d|V |, where d is the average degree of nodes and |V | is the number of nodes. This algorithm also attempts to avoid producing a number of small communities.</p><p>SLPA is outlined in Algorithm 3 in the Appendix. In SLPA, a label stands for a community identification, and each node has a buffer to store the labels received from neighboring nodes (i.e., having edges pointing to the node). SLPA detects the communities in an iterative manner. In each step, a node serves as a listener while its neighbors serve as the speakers. At the first iteration, each node adds a unique label to its buffer, which means that every node forms a community. In later iterations, SLPA goes through every node and sets it to be the listener. Its neighbors become the speakers. Each speaker randomly selects a label from its buffer and sends it to the listener. The listener selects the label with the highest rank calculated from its neighbors and adds it to the buffer. The equation to calculate the rank is as follows</p><formula xml:id="formula_5">L i = arg max j∈N i p j→i L j ,<label>(1)</label></formula><p>where L i is the label with the highest rank received by node i, L j is the label sent by node j, N i is the neighborhood of node i, and p j→i is the transition probability from j to i as defined in our transition graph. After a certain number of iterations, each node uses the label with the highest frequency in its buffer as its community identification. The nodes with the same identification form a community. <ref type="figure" target="#fig_4">Figure 3</ref> (a) shows an example of communities detected. We implement and draw Bubble Sets <ref type="bibr" target="#b3">[4]</ref> to distinguish different communities. Bubble Sets use continuous, often concave, isocontours to delineate group memberships, maintaining the spatial arrangement of the primary data relation given by the layout algorithm. Using Bubble Sets, we can produce tight capture of group members with less ambiguity compared with using convex hulls. Although the Bubble Sets overlap each other, notice that nodes in communities are disjoint, i.e., any two communities do not share any node in common.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">VISUAL RECOMMENDATION</head><p>While the focus of this paper is on graph interaction, the user can also interact with the volume to highlight relevant aspects of the graph. Details on that are in the TransGraph paper <ref type="bibr" target="#b10">[11]</ref>. Here we focus on the newly introduced node and community recommendation functions. Node Recommendation. To further guide the exploration of graph, we recommend similar nodes when a node or multiple nodes are selected. Heer et al. <ref type="bibr" target="#b12">[13]</ref> recommended similar nodes with a query relaxation engine. The recommended nodes fulfill the same query requirements but in different scenarios. Different from query relaxation, we recommend similar nodes based on their similarities. We leverage the SimRank algorithm <ref type="bibr" target="#b9">[10]</ref> to measure the similarities between nodes. SimRank considers two nodes to be similar if they are related to similar nodes. Given an unweighted directed graph G = (V, E), if the incoming nodes of two nodes v a and v b are similar, then v a and v b are similar. The similarity between v a and v b is calculated as</p><formula xml:id="formula_6">BLK # NODE # BLK # NODE # (a) (b) (c) (d)</formula><formula xml:id="formula_7">s(v a , v b ) = ∑ |I(v a )| i=1 ∑ |I(v b )| j=1 s(I i (v a ), I j (v b )) |I(v a )||I(v b )| ,<label>(2)</label></formula><p>where I(v a ) is the set of nodes pointing to node v a , and</p><formula xml:id="formula_8">I i (v a ) is the i-th node in I(v a ). If neither v a nor v b has incoming nodes, s(v a , v b ) = 0 (least similar).</formula><p>SimRank stores a |V | × |V | matrix S to record the similarities between nodes, where |V | is the number of nodes in the graph. In the first iteration, all the similarity values along the diagonal of S are set to 1 (most similar). In later iterations, we update the similarities between nodes according to Equation 2. SimRank has the time complexity of kd|V | 2 , where k is the number of iterations and d is the average degree of nodes. In our graph, each edge carries a weight indicating the transition probability between two incident nodes, thus the original SimRank cannot be immediately applied. As described in Algorithm 4 in the Appendix, our modified SimRank algorithm takes transition probabilities into account. We modify Equation 2 to the following</p><formula xml:id="formula_9">s(v a , v b ) = ∑ |I(v a )| i=1 ∑ |I(v b )| j=1 s(I i (v a ), I j (v b )) × p i→v a × p j→v b |I(v a )||I(v b )| ,<label>(3)</label></formula><p>where p i→v a is the transition probability from node I i (v a ) to node v a . We also extend Equation 3 to outgoing edges</p><formula xml:id="formula_10">s(v a , v b ) = ∑ |O(v a )| i=1 ∑ |O(v b )| j=1 s(O i (v a ), O j (v b )) × p ′ i→v a × p ′ j→v b |O(v a )||O(v b )| ,<label>(4)</label></formula><p>where O(v a ) is the set of nodes pointed from node v a and p ′ i→v a is the transition probability from node v a to node O i (v a ). Users can select either Equation 3, Equation 4, or a combination of both as the final similarity measure. <ref type="figure">Figure 4</ref> shows an example of node recommendation based on incoming transition probabilities. The recommended nodes are highlighted with a Bubble Set. As we can see, similar nodes recommended show up in the volume highlighting results, which allow the user to track the evolution of selected node.</p><p>Community Recommendation. Besides node recommendation, we also recommend similar communities when a community is selected. For simplicity, we first convert each community to an unweighted, undirected graph. Then we treat the similarity between two graphs as the similarity between the two corresponding communities.</p><p>To calculate the distance between two unweighted, undirected graphs, we apply the algorithm introduced by Robles-Kelly and Hancock <ref type="bibr" target="#b19">[20]</ref>. This algorithm finds a serial ordering of the nodes in a graph and converts graphs to strings. By comparing the difference between the two strings, we compute the difference between the two graphs.</p><p>Algorithm 5 in the Appendix utilizes random walks to find the ordering. It first calculates a normalized symmetric random walks probability matrix P ′ and computes P ′ 's leading eigenvector φ . Each value in φ is related to a node in V indicating its importance. In order to sort the nodes based on their importance and still preserve edge relations, the algorithm first finds node n with the largest value in φ and puts n in the string s. Then, it looks for node n ′ with the largest value from n's neighbors and puts n ′ in s. After that, the algorithm begins to search n ′ 's neighbors. This process repeats until all the nodes are in s. ever, if all n's neighbors are in s, the algorithm looks for n ′ which is a neighbor of any node in s and has the largest value in φ among those nodes not in s yet. Then it puts n ′ in s and keeps searching among n ′ 's neighbors. As a result, this algorithm converts a graph to a string and orders its nodes based on their importance and edge relations.</p><p>After ordering the nodes, Algorithm 7 in the Appendix computes the difference between two strings s 1 and s 2 as the distance between the two corresponding graphs</p><formula xml:id="formula_11">G 1 = (V 1 , E 1 ) and G 2 = (V 2 , E 2 )</formula><p>. This algorithm creates a lattice L using s 1 as rows and s 2 as columns. The elements in L are only linked to their neighbors along the increasing horizontal, vertical and diagonal directions. A diagonal movement from</p><formula xml:id="formula_12">L(i, j) to L(i + 1, j + 1) represents a matching of E 1 (s 1 (i), s 1 (i + 1)) and E 2 (s 2 ( j), s 2 ( j + 1)). A horizontal movement from L(i, j) to L(i + 1, j) represents a null matching of node s 1 (i).</formula><p>Similarly, a vertical movement from L(i, j) to L(i, j + 1) represents a null matching of node s 2 ( j). Therefore, the difference between s 1 and s 2 is measured by the distance between the two elements L(0, 0) and L(|V 1 | − 1, |V 2 | − 1). In addition, the distance can be treated as finding the shortest path from L(0, 0) to L(|V 1 | − 1, |V 2 | − 1). Finally, we utilize Dijkstra's algorithm <ref type="bibr" target="#b5">[6]</ref> to calculate the minimal distance between L(0, 0) and L(|V 1 |−1, |V 2 |−1) and uses it as the difference between s 1 and s 2 (i.e., the distance between G 1 and G 2 ). In Dijkstra's algorithm, the distance between two neighboring nodes is calculated as </p><formula xml:id="formula_13">d = β (a,b) × β (c,d) × R 1 (a, c) × R 2 (b, d),<label>(5)</label></formula><formula xml:id="formula_14">β (a,b) = max{D ′ 1 (a), D ′ 2 (b)} − min{D ′ 1 (a), D ′ 2 (b)} max{D ′ 1 (a), D ′ 2 (b)} ,<label>(6)</label></formula><p>where D ′ is the degree matrix calculated in Algorithm 6 in the Appendix. β (c,d) can be calculated similarly. R 1 in Equation 5 can be calculated as</p><formula xml:id="formula_15">R 1 (a, c) = P ′ 1 (a, c), if A 1 (a, c) = 1 2×|V 1 |×|V 2 | |V 1 |+|V 2 | , otherwise ,<label>(7)</label></formula><p>where P ′ is the normalized symmetric random walks probability matrix and A is the adjacency matrix. R 2 can be calculated similarly. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CASE STUDY RESULTS</head><p>Data Sets, Parameters, and Timing. We evaluated our approach with several time-varying data sets listed in <ref type="table" target="#tab_3">Table 1</ref>. The timing results were collected using a workstation with an Intel Core i7-960 3.5GHz CPU and 24GB memory. We used MPI to accelerate the performance of state clustering using the quad-core CPU. State clustering and layout computation are the two major tasks, which need to be computed only once per data set. Graph simplification, community detection, and node recommendation were calculated only once and each step took less than one second. Community recommendation was normally completed within a few seconds. The iterations of layout creation, layout adjustment, and node recommendation were set to 500, 150, and 30, respectively, at which point the iterative solutions converge.</p><p>DCMIP Climate. The DCMIP climate data sets were produced from the simulations of the Earth's climate in the dynamical core model intercomparison project (DCMIP) <ref type="bibr" target="#b0">[1]</ref>. We acquired three simulation data sets generated by different models (cam-fv, cam-se, and fim). In these three models, the volumes are fairly static in the early time steps and later on two turbulent branches appear. We performed cross-comparison of these three data sets.</p><p>As expected, the graphs derived from these three data sets are similar, although not entirely the same, as shown in <ref type="figure">Figure 5</ref> (a), (b) and (c). We can see that fans and cliques occupy the central locations in the graphs and they are surrounded by many connectors and regular nodes. Furthermore, at the early time steps, there are two large fans surrounded by many small nodes to form two groups. In the middle or later time steps, the nodes begin to form three groups. The proximity between the three groups in the graph indicates the close interaction among their corresponding volume regions. Since a fan represents the states with interruption and a clique represents a set of nodes that transit among themselves, the presence of a large number of fans and cliques implies that the data sets have a mix of dynamic and static regions. In addition, a large number of connectors indicates that their corresponding regions shift between different states frequently. <ref type="figure">Figure 5 (d)</ref> and (e) show the corresponding data blocks of all the fans and cliques of DCMIP cam-fv and DCMIP cam-se data sets, respectively. Fans correspond to the two fast-moving turbulent branches while cliques correspond to the bottom layer with slow movement.</p><p>For DCMIP cam-fv and DCMIP cam-se, nodes in the early time steps are fairly cluttered. Although two fans are the centers of the two groups, there are many nodes and edges connecting to them, showing no clear separation. They start to form groups in the middle time steps and node groups get separated more in the later time steps. In addition, a node group that lasts the longest corresponds to the bottom layer and the other two groups corresponding to the two branches appear at different time steps. For DCMIP fim, nodes can be clearly partitioned into two groups in the early time steps and three groups in the middle time steps. Nodes become cluttered in the later time steps. Note that these three node groups appear at the same time step. We first analyze the transition graphs of DCMIP cam-fv and DCMIP cam-se. In <ref type="figure">Figure  5</ref> (a) and (b), cluttered nodes in the early time steps imply that these nodes form separate groups but their differences are not significant. In addition, the nodes in <ref type="figure">Figure 5</ref> (a) begin to form groups in the later time steps. In fact, the lower branch highlighted in (d) begins to appear at time step 22. The upper branch does not appear so late, with frequent interaction with the bottom layer. Therefore, the separation between the upper branch and the bottom layer is not clear. In <ref type="figure">Figure 5 (b)</ref>, the nodes in the early time steps are also cluttered. In the middle time steps, the nodes form two groups. Similar to the graph of DCMIP cam-fv ( <ref type="figure">Figure 5 (a)</ref>), the lower branch has not appeared yet and the two groups correspond to the upper branch and the rest of regions. In the later time steps, the nodes in the upper branch begin to  diverge which leads to the nodes corresponding to the lower branch. Therefore, the connections between the upper and lower branches can be noticed. Unlike DCMIP cam-fv, its lower layer becomes distinguishable from the two branches. Therefore, the nodes in the later time steps can form clear groups. Next, we study the transition graph of DCMIP fim in order to figure out why it is different from the graphs of the other two data sets. In <ref type="figure">Figure 5</ref> (c), there are two fans in the early time steps which naturally form the centers of the two groups. This indicates that the corresponding blocks in early time steps are separated into two groups. One group corresponds to the middle region, and the other group corresponds to the two boundary regions. In the middle time steps, we can see three clear groups as shown in <ref type="figure">Figure 6</ref>. They correspond to the two turbulent branches and their surrounding. Different from DCMIP cam-fv and DCMIP cam-se, both branches appear at time step 7. That is why the clear separation appears so early in the graph. However, in the later time steps, the nodes become cluttered since the two branches are smeared into the rest of regions.</p><p>For the DCMIP fim data set, we can differentiate the nodes by examining the communities as shown in <ref type="figure">Figure 6</ref>. In addition, communities help us explain unusual events. In <ref type="figure">Figure 6 (a)</ref>, (c), and (e), the communities in the graph correspond to the lower branch, the surrounding, and the upper branch of the volume data, respectively, as shown in <ref type="figure">Figure 6 (b), (d)</ref>, and (f). This indicates that the two branches only interact with the surrounding region. This is different in DCMIP cam-fv and DCMIP cam-se data sets, where the two branches have direct interaction with each other. By tracking the communities, we can observe that the two branches in the DCMIP cam-se data set connect to each other. This is highlighted in <ref type="figure" target="#fig_6">Figure 7</ref>. The same conclusion can be drawn for the DCMIP cam-fv data set.</p><p>NOAA Climate. The NOAA climate data set was produced from the NOAA's Geophysical Fluid Dynamics Laboratory (GFDL) CM2.1 global coupled general circulation model. We studied the salinity variable for this data set. A rendering of the volume is shown in <ref type="figure">Figure  8 (a)</ref> where the empty regions correspond to the continents. In <ref type="figure">Figure 8 (b)</ref>, we can see clear separation among three node groups which are highlighted with the dashed boundaries. These three node groups correspond to the three highlighted separate ocean regions in (a). Furthermore, the presence of a large number of cliques implies that data blocks only interact with other blocks in their local neighborhood.</p><p>In <ref type="figure">Figure 8</ref> (b), we select a community (shown in red) and the community shown in yellow is recommended. Their corresponding blocks are highlighted in the top and bottom images in <ref type="figure">Figure 8 (c)</ref>, respectively. We can see that the recommended community corresponds to the spatial neighbors that are similar to the selected one at the same time step. In <ref type="figure">Figure 8 (d)</ref>, the selected and recommended communities are in different time steps. Their corresponding blocks are highlighted in <ref type="figure">Figure 8</ref> (e) and (f), respectively. Since the graph structures of two communities are similar, the corresponding data blocks may behave similarly at their respective time step. This provides an interesting cue for scientists to further examine their corresponding regions.</p><p>Earthquake. The earthquake data set was produced from a simulation of the 3D seismic wave propagation of the 1994 Northridge earthquake. For this data set, we explored node recommendation. The nodes in <ref type="figure">Figure 9</ref> (a) form a fairly long pattern due to the large number of time steps in the data set. Even after graph simplification, the nodes in the early time steps are denser than the nodes in the later time steps. This indicates more data variation in early time steps, thus more states are created. Furthermore, many cliques occupy the central locations in the graph. The four cliques highlighted in <ref type="figure">Figure 9</ref> (a) correspond to different volumetric regions in <ref type="figure">Figure 9</ref> (b) to (e). Specifically, (b) and (d) correspond to the inner layers of the earthquake's center, and (c) and (e) correspond to the outer layers of the earthquake's center.</p><formula xml:id="formula_16">BLK # NODE # BLK # NODE # (a) (b) (c) (d) (e) (f)</formula><p>Since the later growing period is important, we first selected a time range of [65, 70] using the time bar. As shown in <ref type="figure" target="#fig_0">Figure 10 (a)</ref>, the nodes in that time span are highlighted in yellow to help users narrow down to the nodes of interest. Then, among these nodes, we select a clique which is highlighted in red, as shown in <ref type="figure" target="#fig_0">Figure 10</ref> (b). This clique corresponds to the earthquake's center and its immediate surrounding. We considered outgoing transition probabilities for node recommendation. The recommended nodes nearby the selected clique correspond to data blocks at the same time step. These blocks are nearby the data blocks corresponding to the selected clique. The recommended nodes in a later time step still correspond well to the central region of the earthquake.</p><p>Ionization. The ionization data set was produced from a 3D radiation hydrodynamical simulation of ionization front instabilities for studying a variety of phenomena in interstellar medium such as the formation of stars. A small front appears at the beginning time steps. The front moves and grows along the x direction, followed by a cuboid with similar values. <ref type="figure" target="#fig_0">Figure 11 (j)</ref> shows the transition graph. Starting from the clique highlighted at the center of the graph, nodes expand along several directions, each corresponding to a layer of the volume along the x direction. Since there is no interaction between neighboring layers, the nodes in one layer do not have edges connecting to other nodes in another layer. That is why the nodes corresponding to each layer form a single branch in the graph. Different layers appear at different time steps, thus a branch may split into several smaller branches. In addition, it is clear that connectors dominate the graph except one branch. This is quite different from other data sets we explored. For the ionization data set, each layer may have several groups of nodes and there are slight changes in each layer. Although a node in a layer may diverge into several nodes, they will converge eventually. Therefore, each group of diverged nodes forms a connector.</p><p>Among all the branches shown in <ref type="figure" target="#fig_0">Figure 11</ref> (j), one of them has more nodes than any other. Highlighted with the ellipse, this branch corresponds to the front of the ionization. Since the front leads the evolution of ionization, it changes most dramatically. Thus the branch of the front has a larger number of nodes than others. Meanwhile, the nodes corresponding to the front are cluttered even after layout adjustment, as shown in <ref type="figure" target="#fig_0">Figure 11</ref> (a) to (d). This makes it difficult for us to find groups of similar nodes that correspond to different regions of the front. Community detection helps us identify similar nodes through node highlighting. For example, in <ref type="figure" target="#fig_0">Figure 11</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">DISCUSSION</head><p>Parameter Selection. <ref type="figure" target="#fig_0">Figure 12</ref> shows the graph layouts of two data sets under different parameter settings. Comparing <ref type="figure" target="#fig_0">Figure 12 (a)</ref>, (b), and (c), we can see that there are many connectors in all three graphs. In addition, there are more cliques and less fans in the early time steps than in the later time steps. Note that the number of fans in <ref type="figure" target="#fig_0">Figure 12</ref> (c) is less than that in (a) or (b). The large block size set for (c) reduces the differences among blocks, and therefore, the turbulent events become less significant, leading to less fans identified. In <ref type="figure" target="#fig_0">Figure 12 (d)</ref>, (e), and (f), we can see clear separation of the nodes which correspond to the three regions in <ref type="figure">Figure 8 (a)</ref>. Therefore, although different sets of parameter produce different graph layouts, the structure of the graphs after simplification remains almost the same. In other words, the graph structure is insensitive to the change of parameter values and the randomness of initial node placement. We conclude that the graph is largely determined by the nature of the time-varying data, while parameter changes only introduce slight layout variation.</p><p>Limitations. Our community detection and recommendation algorithms have the following limitations which we would like to improve. First, the community detection algorithm automatically suggests the number of communities. In some cases, this leads to a large number of communities with each having a small number of nodes. We will seek a different solution which allows users to specify the number of communities. Second, unlike community detection, we would like to allow users to select a subgraph of interest and apply graph alignment techniques to suggest similar subgraphs. This would give more flexibility to users in their selection and matching. Third, the community recommendation algorithm treats each community as an unweighted, undirected graph. As shown in <ref type="figure" target="#fig_0">Figure 13</ref>, given three communities with a similar number of nodes, our distance computation claims that (b) is more similar to (a) than (c). The algorithm <ref type="bibr" target="#b19">[20]</ref> provides us a measure of the similarity between communities. However, the measure does not consider other information, such as node type, node importance, edge weight, and edge direction. We would like to seek a better solution that incorporates these graph attributes into similarity measure design. Finally, we will allow domain scientists to define general patterns and analysis procedures of interest based on their domain knowledge, enabling more customized analytics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">FEEDBACK FROM DOMAIN EXPERTS</head><p>We also conducted expert evaluation with two domain experts, Drs. Robert Jacob and Seung Hyun Kim. Dr. Jacob's research focuses on ocean and coupled climate models and the computational, mathematical and theoretical issues involved in their construction. Dr. Kim's research focuses on modeling of multiscale and multiphysics problems in relation to energy science and technology. Dr. Jacob evaluated our work with DCMIP and NOAA climate data sets and mainly focused on model comparison and graph simplification. Dr. Kim evaluated our work with three other data sets and focused on graph simplification, community detection, and visual recommendation. We utilized the think-aloud protocol during the evaluation. The experts described their seeing, doing, feelings and comments, and we summarized their comments after the evaluation.</p><p>Dr. Jacob commented that our approach is novel and useful. In model comparison, transition graphs abstract the original volumetric data sets and the differences between them allow him to infer the differences between models. For example, he could notice the natural node groups to identify the time steps corresponding to the branching. This is a significant difference between the models being compared. Through brushing and linking, he could find out that the two branches are similar in one model while they are very different in the other two models. He further pointed out that our work is interesting and useful as it is able to detect the regions where the two branches interact with each other. He also mentioned that graph simplification is beneficial and the level of simplification is appropriate for users to understand the underlying graph structure. Finally, Dr. Jacob commented that it would be helpful if we could provide brushing in the volume view and link the results back to the graph view. Since one of his main interests is studying the influence among oceans, this would allow him to investigate the behavior of a particular ocean of interest.  Dr. Kim stated that our tool is useful and easy to use. For graph simplification, he mentioned that when the original graphs are complex, it is difficult to identify their structures. The simplification function not only simplifies the view of the graphs, but also helps identify the underlying structures. However, in some cases, even after simplification, the transition graphs are still complex and users could not recognize their structures. He suggested us to leverage focus+context techniques to highlight nodes at the current time step in a less cluttered view. This will make the nodes and their relations more visible, and thus easier to be selected. Dr. Kim also suggested two ways to further classify the simplified graph. First, we may want to relax cliques to dense subgraphs (quasi-cliques) so that more simplification can be achieved. Second, we may also consider edge weights in the simplification for generating stronger classification results. Dr. Kim studied the cliques in the earthquake data set and the connectors in the ionization data set. He mentioned that a clique represents a cluster of related nodes and it has a circular relation. Therefore, a clique corresponds to a stable state because we would see this structure for a period of time. Unlike cliques, connectors represent a propagation of wave-like structures. To better investigate the transition graph after simplification, he suggested us to provide a function to expand fans, connectors and cliques so that users could see more detailed structures.</p><p>For community detection, Dr. Kim agreed that it is meaningful because it collects nodes of similar characteristics, which simplifies graphs and helps users explore volume data. He suggested us to consider a maximal time period for each community for better community detection. Since different communities cover different time intervals, we should provide feedback on the time spans of communities. For example, if users are interested in a certain time step, we could highlight all the communities that overlap with this time step. Furthermore, when users select a certain community, we should provide its time duration information so that users can quickly narrow down to time steps of interest. We address this problem by adding a time bar which can be used to filter not only communities, but also nodes. In addition, we could provide a community importance measure based on their numbers of blocks or time periods to emphasize or deemphasize the communities that are more or less important. Since communities with many blocks usually span large time periods, we address this problem by assigning the importance of each community based on its block number. Dr. Kim mentioned that node and community recommendations help identify similar structures in the data. He suggested us to encode and display the similarity information in nodes or communities when a node or community is selected.</p><p>Finally, Dr. Kim commented that our work may be helpful for investigating turbulent combustion data sets. In turbulent combustion, large-scale coherent structures play an important role in determining overall flame characteristics. Such structures are large scale, organized, and propagated downstream, with small-scale turbulent motions being superimposed. Layers of high reaction rates are often associated with these large-scale structures. Cliques, connectors and fans can be used to quickly identify coherent structures. In addition, graphs for turbulent combustion data sets may be very complex due to the chaotic nature of turbulence. Graph simplification is expected to help the exploration of such data sets. Community detection and recommendation will also help explore the evolution of coherent structures or identify similar structures.</p><p>Both domain experts suggested that we could support multivariate data sets. Dr. Jacob pointed out that in ocean data sets, salinity and temperature values influence each other. Therefore, it would be helpful if we could investigate these two variables simultaneously. Dr. Kim mentioned that we could support both model comparison and variable comparison. We could generate the transition graphs for different variables and enable users to investigate the differences between graphs.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">CONCLUSIONS AND FUTURE WORK</head><p>In scientific visualization, the goal for showing a graph view in conjunction with the original spatiotemporal data view is to provide both sufficient data reduction and enough visual guidance to reduce the time for users to analyze the data. Effective analytics of data at scale will require a change from simply generating graphs as another view of data to seeking immediate meanings from such an abstraction through graph mining. Our work includes functions for graph simplification, community detection, and node and community recommendation. The results and evaluation with different data sets demonstrate that such a graph mining approach points out a promising direction to shield users from undue distraction by the complexity of graphs and thus enables them to concentrate on effective reasoning about the data.</p><p>We plan to extend our work to handle multivariate data sets. We can either fuse multiple variables into one type of node, or construct one type of node for each individual variable. In the latter case, we can visualize the relations between variables using compound graphs. We will also investigate time-evolving graphs derived from scientific data sets for identifying temporal hotspots, detecting anomaly, and aligning multiple graphs for finding common features and distinct patterns.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Graph features for simplification. (a) to (c)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>(a) to (d) are the original transition graph, the graph after detecting fans, connectors, and cliques, respectively. In (d), we show the graph after layout adjustment which pushes nodes apart for clear observation. There are three branches of nodes in the graph and the evolution of time in each branch is marked with a dashed line. The histograms at the bottom-left and bottom-right corners depict the numbers of volumetric blocks and nodes belonging to the four types of nodes, respectively. Gray for regular nodes, pink for fans, green for connectors, and blue for cliques.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .Fig. 4 .</head><label>34</label><figDesc>(a) five of the top eight largest communities detected for the transition graph of the hurricane data set and highlighted using Bubble Sets. (b) the user chooses a community with nodes highlighted in red and we automatically recommend another community with nodes highlighted in yellow. (c) and (d) are the rendering of the corresponding blocks of the chosen and recommended communities at two different time steps, respectively. (a) the user chooses a fan shown in red and we automatically recommend nodes shown in yellow. (b) is the rendering of the corresponding blocks of the chosen node. (c) and (d) are the rendering of the corresponding blocks of the recommended nodes at two later time steps.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>where a, b, c and d are the indices of L(a, b) and L(c, d). β (a,b) can be calculated as</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 (</head><label>3</label><figDesc>b) shows an example of community recommendation. The user chooses a community with nodes highlighted in red. The most similar community recommended is shown with nodes highlight in yellow. The correspondence of volume highlighting results in Figure 3 (c) and (d) shows the effectiveness of community recommendation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .Fig. 6 .</head><label>56</label><figDesc>(a) to (c) are the transition graphs of the three DCMIP climate simulation data sets. The evolution of time is marked with the black dashed line. (d) and (e) are the rendering of the corresponding blocks of all fans and cliques from DCMIP cam-fv and DCMIP cam-se data sets. Three communities, shown in (a), (c), and (e), detected from the DCMIP fim data set and the rendering of their corresponding blocks in (b), (d), and (f), respectively. (b), (d), and (f) correspond to the lower branch, the surrounding, and the upper branch, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>The rendering of blocks corresponding to the two branches of the DCMIP cam-se data set, revealing their direct interaction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .Fig. 9 .</head><label>89</label><figDesc>(a) a rendering of the entire NOAA climate data set. (b) and (c): recommending the community (yellow) that is the spatial neighbor of the selected community (red) at the same time step. (d) to (f): recommending the community (yellow) that is not the spatial neighbor of the selected community (red) at a different time step. (a) four cliques are selected in the transition graph of the earthquake data set. The evolution of time is marked with the dashed line. (b) to (e) are the rendering of the corresponding data blocks: red clique for (b), yellow clique for (c), green clique for (d), and blue clique for (e).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>(a) to (d), four communities are selected. Their corresponding volume regions are highlighted in Figure 11 (f) to (i). (f) to (h) correspond to three different layers of the front while (i) corresponds to the base.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .Fig. 11 .</head><label>1011</label><figDesc>(a) Selecting nodes (highlighted in yellow) overlapping the time range of [65, 70]. (b) a selected clique with the time range of [58, 74] is shown in red and the recommended nodes are shown in yellow. The clique corresponds to the rendering in (c). (d) shows the corresponding rendering of the recommended nodes at the same time step as (c). (e) shows the corresponding rendering of the recommended nodes at a later time step, essentially a tracking result for (d). (a) to (d) are four communities selected from the transition graph of the ionization data set. In order to better study the front area, the portion of the transition graph marked with a red rectangle in (e) is selected to zoom in for (a) and (d). (f) to (i) are their corresponding volume highlighting results. (j) the transition graph before layout adjustment reveals a large number of connectors lying on different branches.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .Fig. 13 .</head><label>1213</label><figDesc>The graph layouts with different parameter settings. (a), (b), and (c) are for the earthquake data set with block sizes 16 × 16 × 16, 16 × 16 × 8, and 32 × 32 × 16, respectively. The evolution of time is marked with the dashed line. (d), (e), and (f) are for the NOAA climate data set with block sizes 15 × 11 × 9, 9 × 11 × 9, and 15 × 6 × 9, respectively. Community comparison for the NOAA climate data set. (a) is the community selected and (b) and (c) are two communities recommended. The distance between (a) and (b) is 0.0058, and the distance between (a) and (c) is 0.0322.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1 .</head><label>1</label><figDesc>The data sets, parameters used, and timing results. All timing results are in seconds.</figDesc><table><row><cell>How-</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0" />
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The 2012 dynamical core model intercomparison project (DCMIP)</title>
		<ptr target="https://earthsystemcog.org/projects/dcmip-2012/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A tri-space visualization interface for analyzing time-varying multivariate volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Akiba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Joint Eurographics -IEEE VGTC Symposium on Visualization</title>
		<meeting>Joint Eurographics -IEEE VGTC Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="115" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">TopoLayout: Multilevel graph layout by topological features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="305" to="317" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Bubble Sets: Revealing set relations with isocontours over existing visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Penn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1009" to="1016" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Confluent drawings: Visualizing non-planar diagrams in a planar way</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dickerson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">T</forename><surname>Goodrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Y</forename><surname>Meng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Graph Algorithms and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="31" to="52" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A note on two problems in connexion with graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">W</forename><surname>Dijkstra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerische Mathematik</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="269" to="271" />
			<date type="published" when="1959" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Motif simplification: Improving network visualization readability with fan, connector, and clique glyphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Dunne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCHI Conference</title>
		<meeting>ACM SIGCHI Conference</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="3247" to="3256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Edge compression techniques for visualization of dense directed graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">H</forename><surname>Riche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mears</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2596" to="2605" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Graph drawing by forcedirected placement. Software -Practice and Experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M J</forename><surname>Fruchterman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Reingold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1129" to="1164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">SimRank: A measure of structural context similarity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Glen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Widom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGKDD Conference</title>
		<meeting>ACM SIGKDD Conference</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="528" to="543" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">TransGraph: Hierarchical exploration of transition relationships in time-varying volumetric data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2015" to="2024" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">iTree: Exploring time-varying data using indexable tree</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Pacific Visualization Symposium</title>
		<meeting>IEEE Pacific Visualization Symposium</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="137" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Generalized selection via interactive query relaxation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Agrawala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Willett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCHI Conference</title>
		<meeting>ACM SIGCHI Conference</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="959" to="968" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Brushing of attribute clouds for the visualization of multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jänicke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Böttinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1459" to="1466" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">FlowGraph: A compound hierarchical graph for flow field exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Shene</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Pacific Visualization Symposium</title>
		<meeting>IEEE Pacific Visualization Symposium</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Image graphs -a novel approach to visual data exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization Conference</title>
		<meeting>IEEE Visualization Conference</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">On the use of graph search techniques for the analysis of extremescale combustion simulation data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Mclendon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Bansal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kolla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bennett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Large Data Analysis and Visualization</title>
		<meeting>IEEE Symposium on Large Data Analysis and Visualization</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="57" to="63" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Edge concentration: A method for clustering directed graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">J</forename><surname>Newbery</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGSOFT Software Engineering Notes</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="76" to="85" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Activity detection in scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ozer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bemis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Martin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="377" to="390" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">String edit distance, random walks and graph matching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Robles-Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Hancock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Pattern Recognition and Artificial Intelligence</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="315" to="327" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Unraveling protein networks with power graph analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Royer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Reimann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Andreopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schroeder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS Computational Biology</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page">1000108</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Multifield-Graphs: An approach to visualizing correlations in multifield scalar data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Sauber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="917" to="924" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">The worst-case time complexity for generating all maximal cliques and computational experiments. Theoretical Computer Science</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tomita</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tanaka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Takahashi</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">363</biblScope>
			<biblScope unit="page" from="28" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Mapping text with phrase nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wattenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">B</forename><surname>Viégas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1169" to="1176" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A survey of graph-based representations and techniques for scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Conference on Visualization -State of The Art Reports</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="41" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">LOD map -a visual interface for navigating multiresolution volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1029" to="1036" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Interactive exploration of large-scale time-varying data using dynamic tracking graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Widanagamaachchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Christensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Large Data Analysis and Visualization</title>
		<meeting>IEEE Symposium on Large Data Analysis and Visualization</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="9" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Towards linear time overlapping community detection in social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K</forename><surname>Szymanski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Pacific Asia Knowledge Discovery and Data Mining Conference</title>
		<meeting>Pacific Asia Knowledge Discovery and Data Mining Conference</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="25" to="36" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
