<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visage: A User Interface Environment for Exploring Information</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="1996">OCT 1996</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
							<email>steven.roth@cs.cmu.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lucas</surname></persName>
							<email>lucas@maya.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><forename type="middle">A</forename><surname>Senn</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cristina</forename><forename type="middle">C</forename><surname>Gomberg</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">B</forename><surname>Burks</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><forename type="middle">J</forename><surname>Stroffolino</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">A</forename><surname>Kolojejchick</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carolyn</forename><surname>Dunmire</surname></persName>
							<email>cdunmire@arl.mil</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">MAYA Design Group, Inc</orgName>
								<address>
									<addrLine>2100 Wharton Street Pittsburgh</addrLine>
									<postCode>15203</postCode>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">School of Computer Science Pittsburgh</orgName>
								<orgName type="institution">Carnegie Mellon University</orgName>
								<address>
									<postCode>15213</postCode>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">http://www.cs.cmu.edu/~sage Army Research Lab Aberdeen Proving Ground</orgName>
								<address>
									<addrLine>410-278-5937</addrLine>
									<postCode>21005</postCode>
									<region>MD</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="department">School of Computer Science,Pittsurgh</orgName>
								<orgName type="institution">Carnegie Mellon University</orgName>
								<address>
									<postCode>15213</postCode>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visage: A User Interface Environment for Exploring Information</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="1996">OCT 1996</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Visualization</term>
					<term>exploratory data analysis</term>
					<term>graphics</term>
					<term>user interface environment</term>
					<term>human-computer interaction</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Visage is a prototype user interface environment for exploring and analyzing information. It represents an approach to coordinating multiple visualizations, analysis and presentation tools in data-intensive domains. Visage is based on an Information-centric approach to user interface design which strives to eliminate impediments to direct user access to information objects across applications and visualizations. Visage consists of a set of data manipulation operations, an intelligent system for generating a wide variety of data visualizations (SAGE) and a briefing tool that supports the conversion of visual displays used during exploration into interactive presentation slides. This paper presents the user interface components and styles of interaction central to Visage&apos;s information-centric approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>There has been a great deal of research recently on techniques for supporting the exploration and manipulation of information. This research has produced new ways to visualize information, new techniques for interacting with visualizations to manipulate information, and new tools for supporting the creation of visualizations. Much of this work has been quite general in producing visualization techniques applicable to diverse data (e.g. quantitative, symbolic/relational, geographic, temporal) and interaction techniques that can be combined and applied across many different styles of visualization (e.g. <ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b4">4,</ref><ref type="bibr" target="#b6">6,</ref><ref type="bibr" target="#b7">7,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b9">9,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b11">11,</ref><ref type="bibr" target="#b12">12)</ref>.</p><p>This work has begun to produce several general purpose analysis tools, each with its own strengths. The Table Lens <ref type="bibr" target="#b11">[11]</ref>, for example, is a dynamic spreadsheet environment for exploring large, multidimensional data sets with techniques for focusing attention on subsets while viewing the rest as context. Its strengths include techniques for rapidly creating and viewing the relations among new data attributes. Another evolving analysis package is IVEE <ref type="bibr" target="#b1">[2]</ref>, which provides the ability to rapidly create multiple dynamic query sliders to filter data. A third example is the SAGE system <ref type="bibr" target="#b12">[12]</ref>, whose central feature is rapid design of visualizations that integrate multiple attributes.</p><p>Taken together, these systems illustrate a fundamental user interface design question: how can we use the complementary features of different visualization and analysis tools in a coordinated way. Even for just these three systems, how can we create new attributes in one, filter the same data with another, and visualize the resulting subsets with a third? More generally, what user interface approach would enable people to easily move and combine interesting subsets of information across the isolating boundaries imposed by different applications?</p><p>Of course, the coordination problem is not unique to these tools. Most people who work with large amounts of information also use custom applications. For example, in domains like transportation scheduling and tracking (which we have been using as a test case), analysts use one system to generate and display airplane schedules, another for tracking the location of cargo in transit, and a third for managing warehouse inventory and requisition handling. The interfaces to these applications each have useful visualizations but no mechanism to explore relationships among the different data they portray. For example, there is no way to explore the relations among the locations where supplies are stored, the people who order them, and when they are scheduled to be shipped by air.</p><p>These problems suggest the need for a user interface environment for people who work in information-intensive domains -an electronic workspace for people who explore and analyze large amounts of data daily. Such a workspace must provide several key capabilities.</p><p>First, it requires user interface techniques that enable information to be selected and combined from multiple application interfaces, visualizations, and analysis tools.</p><p>Second, it must enable rapid generation of visualizations to integrate information from these diverse sources. The value of integrative visualizations is obvious. However, because the combinations of information that people will create are often unpredictable, it is not possible for software developers to create every visualization in advance. Therefore, an effective workspace must provide tools by which users can create new visualizations as needed without great effort or skill.</p><p>Third, consistent user interface techniques are needed with which people can filter, control level of detail, navigate, and create new information wherever it is displayed.</p><p>Fourth, an effective environment should make it easy for people to share and communicate their results in collaborative settings, where they must iterate between analysis and presentation activities frequently.</p><p>In order to address these needs, we are developing an approach within a software environment called Visage. Our goal is to incorporate basic information exploration components within a new user interface paradigm. This paper describes several key elements of Visage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">A consistent information-centric user interface paradigm.</head><p>As the name implies, this paradigm strives to provide users with greater direct contact with objects that represent information they need to view and manipulate to perform their work. In this paradigm, information is represented as first-class objects that can reside and be manipulated in visualizations, application user interfaces, on desktops, in briefing materials, or anywhere else people elect to place it. It is ultimately concerned with usability (i.e. it is user-centered), in that it seeks to reduce the complexity and restrictions created when people cannot access information directly and instead must face the mechanics of running and coordinating applications and working with file system metaphors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Dynamic visualization generation.</head><p>In order to provide integrative views of information, we are incorporating work on SAGE, a knowledge-based automatic graphic design tool <ref type="bibr" target="#b12">[12]</ref>. This approach provides rapid generation of visualizations customized to users' immediate data exploration tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Interactive information</head><p>manipulation. These include tools for:</p><p>• finding and interactively partitioning, filtering, and selectively combining subsets of data on which to focus,</p><p>• controlling the level of detail with which this information is viewed using drill-down and roll-up techniques (drill-down commonly refers to the process of segmenting or breaking down aggregated data along different dimensions to create a larger number of smaller aggregates; roll-up commonly refers to the process of merging detailed data into aggregates that summarize their attributes), and</p><p>• assembling, laying out, and interactively presenting information to others.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">An Example</head><p>In order to convey Visage's basic styles of interaction, it is useful to consider a detailed example. The example is based on one of the applications of this approach that we are pursuing to facilitate next generation logistics tracking and planning systems. These government systems are being developed to access and analyze information about the location, quantities, status, transportation, distribution, consumption and other properties of equipment and supplies and the people who need them worldwide.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figures 1 and 2 contain an outliner style of table that is</head><p>one of many displays we created in the Visage environment. It is one way to provide a hierarchical perspective on tabular data and is useful for this example because it illustrates drill-down and roll-up capabilities in a familiar way. The same techniques are applicable to other approaches to displaying hierarchical data (e.g. <ref type="bibr" target="#b8">[8,</ref><ref type="bibr" target="#b9">9]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1: Drilling down organizationally</head><p>Starting from any point in an object-oriented database for a logistics exercise, users are offered a menu of alternative dimensions along which they may drill down. In <ref type="figure">Figure 1</ref>, a user has already drilled down from an object representing the Army Corp to its five subordinate units and has selected one division (53rd Division) to drill down further organizationally. This occurs by selecting the subordinate unit relation from the pop-up menu that is dynamically attached to the 53rd. The result is the more detailed organizational breakdown (the highlighted text) in <ref type="figure">Figure 2</ref> (also see blue highlighted text in color plate) .</p><p>This drill-down process could also occur across different relations or links from any of these objects. For example, it is possible to drill-down from an object representing an Army unit to the equipment it possesses (e.g. trucks, generators, stoves). One could then drill-down further from one type of equipment to the parts or supplies it requires (e.g. from trucks to truck parts) and then drill-down from one supply-type to all the warehouses that have it in stock. This is a process of turning a network or web of database objects into a convenient hierarchical breakdown for analysis purposes.</p><p>On the right side of the outliner in <ref type="figure">Figure 1</ref>, users can select any attribute of the objects in the hierarchy that they want to have displayed, like the weight of supplies a unit requires, its echelon, the number of people in the unit, etc. These attributes can be taken directly from the database or dynamically created as derived attributes using a scripting language. In either case, as the hierarchy is expanded, the values for these attributes are added with it. The dynamic drill-down and expression of attribute values is a fundamental operation in Visage that can occur in every display. In the example, a user has drilled-down just organizationally to a group of Army units of interest.</p><p>An important operation in our implementation of the information-centric interface approach is the ability to drag objects representing information among visualizations and application interfaces throughout the Visage environment. For example, in order to display graphically some of the attributes of the subordinate units of the 53rd Division, one simply drags a copy of the unit names from the outliner to an empty bar chart display in <ref type="figure">Figure 2</ref> (the moved units are indicated by the translucent text).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2: Dragging objects across displays</head><p>In this case, a bar chart shows the weight of supplies that these units require as bars in <ref type="figure" target="#fig_0">Figure 3</ref> (some are already selected for subsequent copying and dragging to a map and appear darker in <ref type="figure" target="#fig_0">Figure 3</ref> and red in the color plate). Each display shows some attributes by default or users can select other attributes from a menu attached to the chart. The menu of attributes is constructed dynamically from the objects that are dropped into the display (i.e. the attributes of Army units in the example). Visualizing unit supply weights in a bar chart makes it easy to select those needing the most supplies -those with the longest bars. These are painted by the user and appear dark gray in <ref type="figure" target="#fig_0">Figure 3</ref>.</p><p>It's now possible to check the locations of just these units on a map, perhaps to determine the locations where supply warehouses should be established. Units are transferred to a mapping application with a similar drag and drop operation suggested by the translucent bars in <ref type="figure" target="#fig_0">Figure  3</ref>. The map application is a product called MATT which was developed independently of Visage by Bolt, Beranek and Newman and coordinated using its program interface. This is an example of one of the primary goals of this work, to explore how to cement together separately developed analysis tools into what the user will experience as an integrated work environment. By default, a map display shows the longitude and latitude attributes of objects and uses military symbols associated with unique identifiers of units and other objects.</p><p>The map display can be used to further focus attention, for example, by painting yellow (light gray in <ref type="figure">Figure 4</ref>) the subset of units that occur close together in the center of the map (perhaps to identify a region where large quantities of supplies will be needed). Notice that painting <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b6">6,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b10">10]</ref> an object in one display causes it to be similarly colored in all other displays. Together, the three displays in <ref type="figure">Figure 4</ref> show who the selected units are, how many supplies they need, and where they are located. In the color plate, the blue, red, and yellow units are all subordinates of the 53rd Division. The red and yellow ones need the most supplies. Yellow ones are Northern units of special interest to a user.</p><p>Finally, this small subset of units can be rolled-up (i.e. aggregated) into a single object and named by a user, in this case, "North High Supply Units." It appears in the bottom of the outliner, and its attributes are the appropriate totals for the units it aggregates. The new aggregate can be treated as a single object for new drill-down operations. For example, it is possible to drill-down along a new dimension to the supply types needed by the aggregated units.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 4: Dragging copies of objects back to the outliner and composing them into new data aggregates</head><p>Notice that this approach enables users to compose a complex query through a series of drill-down, drag, paint and roll-up operations. The last aggregate represents "units of the 53rd Division that need the 'most' supplies and are located in a small region to the north". No abstract query needed to be constructed.</p><p>In summary, this example illustrates the most important aspect of Visage's information-centric approach: operations are directly applied to graphical objects representing information and not through the mechanics of running applications. For example, bar chart and mapping programs are invoked by moving graphical objects to displays rather than by running programs and performing export/import procedures (the typical data sharing mechanisms used in spreadsheets and other tools). Also, painting operations are applied directly to objects that are coordinated in multiple displays via a common underlying database. Similarly, drill-down and roll-up operations are performed directly in any display because of a shared object representation. Later, we will describe how these display themselves can be similarly copied and dragged into presentation slides for briefings.</p><p>Finally, what is not illustrated here is the role of dynamic graphic design for creating composite visualizations dynamically that integrate multiple types of information. The outliner and bar chart displays in this example were created using a scripting language which will be described in detail later.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Background: Towards an Information Centric User Interface Architecture</head><p>The VISAGE user interface paradigm takes an aggressively information-centric approach to the presentation of information to the user. The informationcentric approach may be thought of as the next logical step along the path from application-centric architectures to the modern document-centric approach. The distinctions among the three approaches hinges on differences in the "basic currency" through which the users interact with the system.</p><p>In application-centric architectures, the basic currency is the file. The file system is completely exposed to the user and a somewhat detailed understanding of its workings is a prerequisite to the productive use of the system. Moreover, although files in the file system are the basic unit of information, the files themselves are of little use to the user. To access the information in their files, users must rely on "applications" to fetch and display the information from the files on their behalf. In this regard, applications are like remote manipulator arms in nuclear power plants-users are not allowed to "touch" their data, except indirectly via various special-purpose tools. Each application has it's own user interface which defines what kinds of files people can manipulate and what they can do with them.</p><p>With the introduction of graphical user interfaces and the desktop metaphor, files became concrete visual objects, directly manipulable by the user, storable on the desktop or in folders, and--to a limited extent--arrangeable by users and software in semantically meaningful ways. But the contents of those files were still out of direct reach of the user.</p><p>The advent of document-centric interface paradigms has introduced many positive changes into this story. In this world, the basic currency is no longer the file but rather the document--an entity with some potential meaning in the user's world-outside-the-computer.</p><p>The role of the application is subordinated (and perhaps ultimately eliminated) in favor of component architectures whose interactions with the user are focused on direct manipulations of documents. Documents may be kept on the desktop in addition to files and may be directly activated and manipulated via drag-and-drop operations. Documents may serve as containers for other documents, enabling natural modes of grouping and attaching information together in meaningful units. Some extremely document-centric interfaces (e.g. Workscape, <ref type="bibr" target="#b2">[3]</ref>, Web Forager <ref type="bibr" target="#b5">[5]</ref>) permit the spatial arrangement of large numbers of documents, enabling effective visualizations of the relationships among them. The application of dynamic query techniques in a document-centric world enables visual search paradigms. In document-centric interfaces, users can almost literally "get their hands on" their documents.</p><p>The information-centric approach in Visage simply represents a natural continuation of these trends. Visage abandons the primacy of the document wrapper as the central focus of user interaction in favor of the data element as the basic currency of the interface. Rather than limiting the user to files and documents as targets of direct manipulation, Visage permits direct drag-and-drop manipulation of data at any level of granularity. A numeric entry in a table, selected bars from a bar chart, and a complex presentation graphic are all first-class candidates for user manipulations, and all follow the same "physics" of the interface. The object oriented nature of this approach is clearly is not unique to Visage and indeed was introduced and explored in Smalltalk and other systems (e.g. 10). Our work addressed the user interface issues raised in using this approach throughout an information visualization and exploration environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Visage Environment Main Components</head><p>The Visage interface environment strives to minimize the number of fundamentally different kinds of objects that must be understood by the user. As a first approximation, Visage may be thought of as having only two basic object types: elements and frames.</p><p>The term elements (more properly called "Visual Elements") refers to any atomically-manipulable graphical object in a Visage display. Examples of elements are bars in a bar chart, the text label of an axis, a point in a scatter chart, or a numeric value in a spreadsheet-like cell. Each visual element corresponds to an object in an underlying database. Note that this relationship is one-to-many: each element is associated with exactly one database object, but the same object may be represented by multiple elements. Some elements are atomic, but others are compound, i.e., made up of multiple elements bound together into a single entity. An example of the latter might be a cluster composed of a dot representing a city on a map, a text label naming it, and a gauge telling its population.</p><p>In a literal sense, all Visage displays are made up exclusively of collections of elements arranged to form the display. For example, the bar chart in <ref type="figure" target="#fig_0">Figure 3</ref> is not a discrete "picture", but rather an arrangement of elements which can be broken apart by the user and separately manipulated. As the illustration shows, this makes it easy for the user to select some bars from the display (either removing them or--as in the case shown--duplicating them) and drag them to some other display. This ability to directly drag small units of data forms the basis of the information-centric approach to interface design described above.</p><p>Hints of this approach may be found in a few existing interfaces. For example, recent versions of Microsoft Word support the ability to drag selected text from one place in the document to another--thus bypassing the often criticized invisible clipboard as a mechanism for moving data around within an application (however text cannot be dragged onto the desktop or into other applications). The Macintosh system provides transparent drag-and-drop, which Netscape uses to enable images to be dragged from web page displays onto a desktop (though they are immediately hidden within files). Likewise, several visualization tools support representing data objects graphically and provide filtering, painting of linked displays, and related operations <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b6">6,</ref><ref type="bibr" target="#b8">8,</ref><ref type="bibr" target="#b10">10]</ref>. In Visage, these capabilities are promoted from special-purpose features to capabilities that can be used everywhere in the environment. It becomes part of the "basic physics" of the interface, empowering the user to directly perform unique actions that might otherwise require knowledge of numerous specialized interface "features."</p><p>Frames, the second basic object type, serve as pasteboards for elements. Strictly speaking, frames are themselves elements, but are sufficiently distinct in the user's model of the interface as to warrant separate treatment. Like windows in traditional GUI designs, frames provide a grouping function for related elements as well as a frame of reference for their arrangement. Unlike windows, however, frames are lightweight objects, easily created and destroyed, frequently manipulated by the user, and are themselves subject to the entire repertoire of directmanipulation actions available for other elements (duplication, drag &amp; drop, dynamic scaling, etc).</p><p>Another major function of frames is to serve as anchor points for scripts. The Visage user interface is highly scripted. Beyond the processing of basic user events, such as mouse-dragging and clicking, much of the high-level behavior of the system is controlled by user-accessible script rather than hard-coded methods. Although scripts may be attached to any element, most of the scripts of a typical interface are associated with frames. In the illustrated examples, it is the script of the "Bar Chart" frame that causes data dropped on that frame to be displayed as horizontal bars of certain lengths and locations. Similarly, scripts of the map frame cause the same data to be displayed in iconic form arranged by latitude and longitude. In this way, scripted frames may be composed to form highly customized applications environments, tailored to a particular user's needs.</p><p>The scripting environment provides another essential feature in support of the Visage's data exploration operations. Although the underlying database being explored may have many data values directly given, many other such values typically need to be derived in a very situation-specific manner. For example, in a transportation scheduling application, the database may contain attributes of a commodity such as gross weight and package weight. The user, however, may require a display of net shipping weight, which is not directly given. Visage allows the definition of scripts that compute these "derived attributes." Once defined, these scripts make available to the user data indistinguishable from that directly given in a database. Indeed, the total supply weight attribute in <ref type="figure">Figure 1</ref> is a detailed script that reduces much database access and calculation to a single attribute. It is attached to a Visage data object representing the class, military unit, and is invoked when an instance of this class receives a message to return the value of this attribute. The script traverses relations between a unit, its subordinates, the supply quantities they possess and accesses attributes of supply classes to retrieve their individual weights to be accumulated.</p><p>Finally, scripting is the basis for delivering to the user the drill-down and roll-up data navigation features described above. For instance, our logistics application supports a "regrouping" operation which, in a single step, decomposes a supplied unit into a long list of its required inventory items and then regroups them by the supply points that provides those items. Such operations form the basis for very powerful incremental data navigation and summarization which would require complex queries in conventional database systems. The Visage scripting language is similar to HyperTalk and contains language features tuned to data navigation and aggregation functions (e.g. for stepping across links among objects, iterating over object sets and accumulating sums of values of quantitative attributes).</p><p>Collections of specialized frames are typically gathered together to form a coherent, highly-tailored work environment. Such environments may be augmented by scripted behaviors that add useful global features to the environment at large. An example of this is the fact that the painting of elements in our logistics environment is globally coordinated across all frames of the interface, thus greatly enhancing the user's ability to identify related information across displays. Similarly, dynamic query tools <ref type="bibr" target="#b0">[1]</ref> are included in the environment, permitting the interactive control of the visual attributes of the elements of the display according to parametric aspects of the database.</p><p>People may add sliders to frames to select a subset of objects and then drag the subset to other frames to focus on different attributes. DQ sliders are visual elements with scripted behavior. Dropping one on a visualization in a frame causes it to collect all the attributes of data objects currently displayed in the frame. Users may then select an attribute from these for performing filtering operations.</p><p>Frames and their contents may be freely scaled, either by direct manipulation or by script. A given frame may be shrunk to thumbnail size for temporary storage, or expanded to full-screen during a presentation. This capability enables the efficient and flexible usage of the available screen real estate. Scale control is also a useful feature in the creation of briefing slides.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Incorporating Briefing Tools</head><p>We are exploring the use of the basic Visage tools to provide a simple briefing or "slide show" application which is completely integrated with the rest of the environment. As analyses are performed, text and graphics can be captured and saved in special frames called 'slides.' A slide is simply a frame with special scripts designed to make it easy to "paste up" other frames and elements for visual presentations. A user simply "drags and drops" the desired frames onto a slide frame, where they are scaled appropriately. Text annotation can be added to the slide using Visage text elements. Slides created in this way can be accumulated in a "slide sorter" frame, which has special scripts making it easy to sequence a presentation by simple drag operations (similar to popular commercial presentation packages, like PowerPoint). In the color plate, an outliner, map, and chart have been dropped in a slide, which has been augmented with text and dropped into the slide sorter (the latter illustrated in <ref type="figure">Figure 5</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 5: Slide sorter frame</head><p>The slider sorter has controls for initiating the sequential display of each slide at full-screen size. Thus, the briefing function has been seamlessly integrated with those of data exploration and analysis. Note that elements on the slide do not lose their separate identity--they are still fullyfunctional interface objects that can be dragged among displays, used for painting, dynamic query, drill-down and roll-up operations right in the briefing.</p><p>The ability to perform these information analysis operations during a presentation raises some interesting opportunities and challenges. First, it provides the ability to answer questions by modifying the graphic. By copying slides in the briefing, it is possible to both preserve the original presentation as well as keep a record of changes created in response to questions. Another challenge which we have not addressed is the dynamic modification of briefing slides to reflect changes in the underlying database. This problem has been addressed partially by current approaches to application embedding and linking. We are currently implementing constraint mechanisms whereby changes can either be propagated or blocked from affecting briefing slides.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">SAGE Automatic Graphics Generation</head><p>The impetus for the Visage project originated with a project on a related system called SAGE <ref type="bibr" target="#b12">[12]</ref>, whose goal was to provide ways to generate data visualizations automatically. SAGE is a knowledge-based presentation system that designs displays of combinations of diverse information (e.g. quantitative, relational, temporal, hierarchical, categorical, geographic). We have explored the use of SAGE to automatically assume the burden of visualizing information for other applications and for computer-supported graphic design. In the latter case, users interactively specify some or all of the graphical choices that SAGE must consider in generating displays of data. They do this by creating rough sketches of the graphics they want using a draw-like interface (called SageBrush) or by using a portfolio interface to browse previously created graphics to find some relevant to current needs (called SageBook). SAGE's inputs include sets of data, a characterization of the properties of the data and the tasks that the graphics should be designed to support, and an optional set of design specifications, expressing a user's preferences for how the data set should be visualized. SAGE's output consists of one or more coordinated sets of 2D information graphics that use a variety of techniques to integrate multiple data attributes within a single display. SAGE integrates multiple attributes by representing them as different properties of the same set of graphical objects (e.g. colorcoded bars), by assembling graphical objects into clusters that function as units to express data (e.g. gauges and text within nodes of networks), and by aligning multiple charts and tables with respect to a common axis.</p><p>The SAGE work has been successful for creating hundreds of integrative graphics. Our previous work developed an architecture within which basic data manipulation operations can be applied to coordinated combinations of SAGE graphics (e.g. painting, dynamic queries, and aggregation). However, to be useful in dataintensive environments, it was necessary to develop the kinds of information-centric data manipulation approaches that are described here, especially the ability to: transfer objects across displays, turn displays into briefing materials, coordinate painting with application interfaces, and provide drill-down and roll-up operations for every object.</p><p>In order to achieve this, we separated SAGE's knowledge-based design engine from the process of rendering its graphics. Thus SAGE has become a "visualization design server", which provides specifications of its designs to be rendered in Visage. The Visage renderer interprets SAGE designs, renders them in Visage frames, and populates them with visual elements whose appearance is specified by the SAGE design. Once rendered in this fashion, visualizations are subject to all the Visage operations.</p><p>Integrating the two systems combines the strengths of Visage's information-centric manipulation operations with SAGE's graphics repertoire. We have also successfully added scripts to SAGE visualizations to perform special data manipulation operations and user interface functions for applications. This appears to be a promising combination of visualization creation technology and user interface development tools.</p><p>A parallel research and development effort is continuing to incorporate new design knowledge for creating 3D, animation and other visualization techniques in SAGEespecially for large data sets. As these are added to SAGE, we will explore the implications of applying current operations within the Visage environment to these new techniques.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>Dragging units with the largest quantities (dark bars) from a chart to a map.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors would like to acknowledge the contributions of Noah B. Guyot, Hugo Cheng, Kenichiro Tanaka, Michelle Vincow, Joseph Mattis. This work was supported by contracts from ARPA and Army Research Laboratory.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Visual information seeking: tight coupling of dynamic query filters with starfield displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahlberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI &apos;94 Human Factors i n Computing Systems</title>
		<meeting>CHI &apos;94 Human Factors i n Computing Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994-04" />
			<biblScope unit="page" from="313" to="317" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">IVEE: An environment for automatic creation of dynamic queries applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahlberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wistrand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Conference Companion, CHI &apos;95 Human Factors i n Computing Systems</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1995-05" />
			<biblScope unit="page" from="15" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Designing Workscape: An Interdisciplinary Experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Ballay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI &apos;94</title>
		<meeting>CHI &apos;94</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Human Factors in Computing Systems, ACM</title>
		<imprint>
			<biblScope unit="page" from="10" to="15" />
			<date type="published" when="1994-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Brushing Scatterplots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technometrics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="127" to="142" />
			<date type="published" when="1987-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The WebBook ad the Web Forager: An information workspace for the world-wide web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>York</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI &apos;96 Human Factors i n Computing Systems</title>
		<meeting>CHI &apos;96 Human Factors i n Computing Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1996-04" />
			<biblScope unit="page" from="111" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Navigating large networks with hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">J</forename><surname>Wills</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization&apos;93</title>
		<meeting>Visualization&apos;93</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1993-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Enhanced dynamic queries via movable filters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fishkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Stone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI &apos;95 Human Factors in Computing Systems, ACM</title>
		<meeting>CHI &apos;95 Human Factors in Computing Systems, ACM</meeting>
		<imprint>
			<date type="published" when="1995-05" />
			<biblScope unit="page" from="415" to="420" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A framework for knowledge-based, interactive data exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Language and Computing</title>
		<imprint>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="339" to="363" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Treemaps: A spacefilling approach to the visualization of hierarchical information structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization&apos;91</title>
		<meeting>Visualization&apos;91</meeting>
		<imprint>
			<date type="published" when="1991-10" />
			<biblScope unit="page" from="284" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Painting multiple views of complex objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Mcdonald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ECOOP/OOPSLA &apos;90 Proceedings</title>
		<imprint>
			<date type="published" when="1990-10" />
			<biblScope unit="page" from="245" to="257" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The table lens: Merging graphical and symbolic representations in an interactive focus+context visualization for tabular information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI &apos;94 Human Factors in Computing Systems, ACM</title>
		<meeting>CHI &apos;94 Human Factors in Computing Systems, ACM</meeting>
		<imprint>
			<date type="published" when="1994-04" />
			<biblScope unit="page" from="318" to="322" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Interactive graphic design using automatic presentation knowledge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI&apos;94 Human Factors i n computing Systems</title>
		<meeting>CHI&apos;94 Human Factors i n computing Systems</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994-04" />
			<biblScope unit="page" from="112" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">The Smalltalk Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Tessler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981-08" />
			<biblScope unit="page" from="90" to="147" />
			<pubPlace>Byte Magazine, 6, 8</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
