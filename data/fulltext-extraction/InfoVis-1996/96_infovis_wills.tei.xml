<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Selection: 524,288 Ways to Say &quot;This is Interesting&quot;</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G-Raham</forename><forename type="middle">J</forename><surname>Wills</surname></persName>
							<email>gwills@bell-labs.com</email>
							<affiliation key="aff0">
								<orgName type="institution">Bell Laboratories (Lucent Technologies</orgName>
								<address>
									<addrLine>1000 E. Warrenville Road</addrLine>
									<postCode>60532</postCode>
									<settlement>Naperville</settlement>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Selection: 524,288 Ways to Say &quot;This is Interesting&quot;</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Visualization is a critical technology for understanding complex, data-rich systems. Enective visualizations make important features of the data immediately recognizable and enable the user to discover interesting and useful results by highlighting patterns. A key element of such systems is the ability to interact with displays of data by selecting a subset for further investigation. This operation is needed for use in linked views systems, and in drill-down analysis. It is a common manipulation in many other systems. It is as ubiquitous as selecting icons in a desktop GUI. It is therefore surprising to note that little research has been done on how selection can be implemented. This paper addresses this omission, presenting a taxonomy for selection mechanisms and discussing the interactions between branches of the taxonomy.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1.</head><p>Approach <ref type="figure">Figure 1</ref> shows a common operation within a GUI operating system. The user is dragging a "rubber band" around a set of icons representing files. By doing so the user is selecting them for a future operation, such as a copy, move or delete operation. The operation is natural; the user indicates which of a set of objects are of interest and performs an operation on them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1. Selection from a set of Icons</head><p>But even this ubiquitous selection operation is poorly understood by most users. Suppose the user wants to modify the selection in <ref type="figure">Figure 1</ref> either by adding a file to the selected group or removing one. It would be tedious to start over and de-select everything, then select the revised set. Worse, with a rectangular rubber-band system, many selections are impossible (e.g. selecting '96vis' and 'AIPA96' in <ref type="figure">fig.1</ref>). Clearly the ability to modify the selection is a necessity. Under Windows '95 T ' , the user can hold down either the shift or control key while dragging out the selection rectangle <ref type="bibr">[9]</ref>. These modify the selection in the following manner. When the control key is held depressed while dragging, the state (selected or not) of the icons is toggled when dragged over. Alternatively, when the user clicks and drags over a set of icons with the shift key depressed the icons are added to the current selection.</p><p>Additionally, if the user shift-clicks on an icon without dragging, the system selects only those icons in a box between the previous icon clicked on and this one. This action is useful in a list of items but can be confusing in a two way layout of icons as in <ref type="figure">Figure 1</ref>.</p><p>Windows '95 attempts to provide the user with two alternative ways of modifymg the selection, by toggling items with the control key and by adding them via the shift key. The issues faced in this comparatively simple task are amplified in a data visualization system, where hundreds or thousands of objects may be routinely selected, where selections in one view of the data require updating that selection in another view of the data, and where users often want to indicate irregularly shaped areas of the view. In the following section we present a structure for classifying selection mechanisms that aims at encompassing the majority of visualization systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Basic Taxonomy</head><p>The basic model assumed in this paper is that of a system which displays objects in (possibly) a number of views and allows the user to indicate interest in subsets using a pointer-like interface. The scope of this paper includes GUI operating systems <ref type="bibr">[2,</ref><ref type="bibr">91,</ref><ref type="bibr">71,</ref><ref type="bibr">interactive statistical graphics systems [8,</ref><ref type="bibr">11,</ref><ref type="bibr">121,</ref><ref type="bibr">geographic information systems (GISs) [6,</ref><ref type="bibr">7,</ref><ref type="bibr">101</ref>, drawing programs and any data visualization systems containing elements of drill-down and focusing.</p><p>We make one further assumption which limits our scope. We assume that when the user indicates interest in a subset, that the degree of interest is a binary variableeither interested or uninterested. Throughout the rest of this paper we assume that both an item's current state and the user's indication of interest is a mapping from the visualization domain to { 0, l}. Although this restriction is true for the overwhelming majority of visualization systems, there are cases where a continuous degree of interest is appropriate. For example, indicating a position on a map leads to a natural possibility that objects located closer to the point might be of greater interest than those further away. We will not deal with this type of selection as examples of this type of system are few, and experience is needed to gain a better understanding of issues associated with it.</p><p>With that preamble, we move on to define a taxonomy of selection systems. The first branch in the taxonomy is the issue of selection memory: 0 Memory: In a system with memory, each selection operation is remembered and changing one selection runs through all existing selection operations to determine the final selection. An example here is Ahlberg and Shneiderman's implementation of dynamic queries in the FilmFinder <ref type="bibr">[l]</ref>. Here, each variable maintains its own selection state (for example, 1990 &gt; year &gt; 1980 or actor = Connery) and the overall selection is defined as the intersection of the individual variable selections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0</head><p>Memoryless: In a memoryless system, no record is kept of other selections. Only the current state is kept track of, with no knowledge of how that state was achieved.</p><p>The advantage of a system with memory is that it allows the user to make a query involving a number of variables with very little effort, and is very forgiving; if you make an error in adjusting one selection, it is easy to change it. The advantage of a memoryless system is in power and adaptability. It is hard to generalize a memory-based system while retaining an intuitive interface (imagine the difficulties in coordinating selections from a map, a scatterplot and a network view, for example), and it makes choosing different selection operations very difficult as the method of combination of the different selections is typically fixed. From observation of existing systems, it appears that the memory-based approach is particularly good for directed queries and answering the question "Which objects satisfy this description?' and the memoryless approach is better for discovering structure in the data and answering the question "Are there unusual features in this data?'.</p><p>A selection system can also use a variety of selection tools to identify a subset. A selection tool is a mechanism which allows the user to differentiate an area of a visualization and thereby select data items which correspond to that differentiated area. There are many different types of toolsa complete enumeration is an impossible task, but we can classify selection tools frrstly by the method they use to differentiate an area, and secondly by their relationship to the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Area differentiation:</head><p>Brushes: With brushing tools, a pre-defined region (typically a rectangle) is dragged around the view, with a selection operation being performed each time the brush is dragged. Lassos: A lasso (often a rectangle "rubber-band", polygon or freely defined region) is defined by drawing it onto the plot or indicating endpoints. When the shape is completed, the selection operation is performed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Data dependency:</head><p>Data dependent: When using the tool on a view of data, the area being indicated is modified by the data being displayed. Data independent: The area indicated by the tool is not affected by the underlying data in the view.</p><p>An example of a data dependent tool might be a brush for a geographic view that selects areas of the map, but the brush is constrained so that its center coincides with the center of the nearest town on the map. Another example would be a scatterplot brush, the radius of which alters so as always to encompass the same number of points.</p><p>The final element in the taxonomy is the selection operation. How does the system combine one set of states with another? In practice, as we saw with the example of Windows '95 TM in section 1, a number of operations are available. In the following section we will examine the possible selection operations and build up a picture of reasonable selection operation systems. Note that although our discussion in the following section is based on the memoryless system, the operations described are equally applicable within a memory-based system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Selection Calculus</head><p>In this section our goal is to study operations such as those displayed in <ref type="figure">Figure 2</ref>, where two alternative selection operations are demonstrated. The first choice replaces the current selection with the new one, the second performs an exclusive-or of the selection states. Our goal is to examine the value of all possible operations, and of all possible systems of operations, to see which are most appropriate for a visualization system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2. Two possible selection operations</head><p>Since each item is either currently selected or not, and is either indicated by the user using a selection tool or is not, and the result of the operation is also binary, then a selection operator is a map of the form T: { 0,l }x{ 0,l } -+ {O,l}, as shown in <ref type="table">Table 1</ref>. With each T(.,.) having two possible results, it is clear that there are 24 = 16 possible operations. A selection system could consist of any subset of these operations, giving us 216 = 65,536 possible systems. However, not all of these are useful, as we shall show. First, we will cut down the number of basic operations we consider. It seems unreasonable to consider an operation T: (0,O) -+ 1, as such an operation corresponds to selecting something that was previously unselected and which the user did not indicate. Such operations run counter to the idea of focusing attention on interesting subsets and we reject them'. This leaves us with the possible operations displayed in <ref type="table">Table 2</ref>.</p><formula xml:id="formula_0">S I S' 0 0 T(O,O) 0 1 T(0,1) 1 0 T W</formula><formula xml:id="formula_1">......................... S 1 ; A B C D E F G H &gt; .................................................................................................. 0 o i o 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 0 1 0 0 1 1 0 0 1 1 ......................</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 2. Eight candidate operations</head><p>Of these, we eliminate A, which simply de-selects everything. A menu item or key stroke is more appropriate for this operation. Furthermore, several of the other operations can duplicate its effects simply by indicating a null set of items. B is the intersect operation (or logical AND). It is very useful for focusing down on subsets and is retained. C, the subtract operation, and H, the add operation, are especially common in brushing. Both are retained. D leaves the selection unchanged, ignoring the indicated set, and is therefore rejected. E selects only those items that were indicated, but previously unselected. This operation is similar to the toggle operation G, but is less intuitive and so we reject it, but retain G, which is a common operation in GUI and drawing programs. F is the common replace operation, and it too is retained. <ref type="figure">Figure 3</ref> summarizes the set of retained selection onerations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Replace Intersect Add Subtract Toggle Figure 3. Basic Selection Operations</head><p>Having now cut down to 5 operations, we have only 32 systems to consider. In evaluating them we use the three following criteria. Selection systems should be: Simple. A system with fewer operations is better, everything else being equal. Powerful. Users should be able to select any subset of items. The easier and faster it is for them to do this, the better the system.</p><p>The "Select All" operation, which sets the state of every item to be selected, is a useful operation, but as it does not require a subset indication, it is better implemented as a keystroke or menu item. Forgiving. Selecting the right subset can take a little time. Making a selection that is only slightly wrong should be easy to rectify. An 'undo' key is not a panacea for this problem.</p><p>Consider the simplest set of systems; those having only one operation. The intersect and subtract operations only reduce the number of selected items and are therefore not very powerful2. Replace will only be powerful enough to select any given subset for certain types of tool and data, and add, although powerful enough, is unforgiving. Selecting one item too many means the user must start over. The toggle operation, however, is both powerful and forgiving, allowing items to be added or removed from the selection at will. If there is a 'de-select all' menu operation or keystroke, it subsumes the functionality of the replace operation, the most common default operation within icon-based GUI operating systems. The toggle operation is the only generally practical one-operation system. The next simplest system has two operations. There are ten possibilities: first. <ref type="table">Table 3</ref> also orders the operations within a system showing which should be the primary (default) operation. Typically this would be implemented by making this operation the operation which occurs when selecting with the primary mouse button without holding down any modifier keys. The secondary operation might use a different mouse button (if available) or require holding down a modifier key. <ref type="figure">U , , . , . . . . . , . .</ref>   <ref type="figure">. w A...,... . . . A ,   ,  ,</ref>  </p><formula xml:id="formula_2">(f) Intersect, Subtract (g) Intersect, Toggle (h) Add, Subtract (i) Add, Toggle 0 ) Subtract, Toggle</formula><p>We reject (a) for being unforgiving as we cannot remove a few points from the selection. (b) and (c) are unforgiving for the opposite reason; points cannot be added to the selection. (0 lacks the power to select anything and is also rejected. The remaining six systems are plausible candidates, but a few have been widely implemented, whereas others have not been used. One reason might be that certain operations are simpler to understand (such as replace) and are therefore widely used. Others, such as intersect, require a more sophisticated understanding of the process and are used less frequently. Another reason is that certain operations are most natural for certain common occurring situations. The most common situation is for the user to identify a subset from a set of items all of which are currently unselected. Replace, add and toggle are the obvious winners here.</p><p>With these criteria in mind, we have ordered the systems in <ref type="table">Table 3</ref> with the potentially most useful listed 2 It could be argued that the user might select all the items via a menu choice or keystroke and then reduce the number of selected items using these operations, but this is both tedious and unintuitive. It is more natural to say "this is interesting" than "everything except this is boring".</p><p>Conceivably, there are situations where three-or fouroperation systems are necessary, but experience seems to indicate that they are few and far between. It seems that a suitable two-operation system is both powerful and forgiving enough, and the addition of a third operation causes a loss of simplicity which overwhelms the improvement in power. Furthermore, requiring three mouse buttons would be a strain on the interface and the alternative method, using modifier keys, requires the user to associate particular keys with different alternatives. The example of Windows '95, where few users understand the 'shift' and 'control' selection operations, as compared to the Mac OS <ref type="bibr">[2]</ref>, where there is only one modifier key for the single alternative, shows the difficulty with this approach. Beyond two-operation systems, the loss in simplicity suggests the next step should be the complete systemall five operations. Here we have surrendered any hope of the user remembering key combinations or mouse chords, and a visual reminder of the chosen operation is needed.</p><p>From 65,536 possible systems, we have therefore narrowed the field to the following five recommendations for generic visualization systems: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discussion</head><p>Having constructed the taxonomy of selection systems, based on memory, area differentiation, data dependency and operation system, some discussion of how these features interact is appropriate.</p><p>The data dependency axis is orthogonal to the other choices, as it modifies the tool rather than dictates a choice of tool. A data dependent brush appears to be more useful than a data dependent lasso, however. The choice of a memory-based system makes a considerable difference on the choice of lasso-or brush-based tool. Multiple brushes maintained in different data views would be hard to controlthe brush is by its nature transitory. One possibility is to allow lasso selectors in many views, but brush only in one view. This allows the brush selection to be constrained by other selections allowing a potentially useful conditioning functionality. The choice of system depends also on the area differentiation choice. Toggle operations are problematic with brushes, as toggling whenever the brush moves makes items within the brush vibrate in an unpleasant manner. Toggling an item only when it leaves or enters the brush is a solution to this, but in general it seems the replace operation and the adasubtract system are most appropriate.</p><p>We now look at some examples of selection systems to show where they lie in the taxonomy. First, we look at brushing scatterplot matrices, for example as described in <ref type="bibr">[3] or [4]</ref>. This paradigm is memoryless and dataindependent, with a brush tool. The default operation is replace, termed transitory mode in the literature, with an alternative mode (paint mode) being the addhubtract system. Labeling mode is simply an addhubtract system operating on a different state for the item, namely label visibility.</p><p>Revisiting our original example, the basic Windows '95 TM OS system is a memoryless, data-independent, lasso based system with replace/toggle operations, the secondary operation accessible via the control key. It also has an idiosyncratic alternative system using the shift key, which is memory-based (remembering the previous selected item), data-dependent (it performs differently if there is an icon at the initial mouse location) and uses a lasso. The operation used here is the replace operation (in the case where an icon was clicked on) or the add operation (if an icon was not clicked on).</p><p>The FilmFinder dynamic queries interface is memorybased (for each variable in the database there is an associated selection criterion), and usss lassos (the user typically selects a variable range by modifylng endpoints on a slider, equivalent to dragging over a range in a linear view). The operation system is either replace (for ordinal variables) or toggle (for categorical variables). Although the sliders and check-boxes in FilmFinder do not constitute what most people think of as a visualization system, we can classify them as selection tools nonetheless.</p><p>As a final example, we will look at a system the author has developed for visualizing generic data using a linked views paradigm, the Exploratory Data Visualization system, EDV.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Implementation example</head><p>The purpose of EDV is to provide an environment where new data views can easily be created and added to the system so that they can be evaluated in a realistic and powerful environment. This solves one serious problem with prototyping visualization tools; it can be very hard to assess their impact if they are not used in conjunction with other tools. EDV also facilitates comparison of different approaches in order to see where the strengths and weaknesses of each lie. EDV incorporates eight different views, with more under development. These include a modified boxplot/parallel-coordinates view, a spreadsheet view, a graph view, a table view and a rose diagram, as well as standard plots like histograms, bar charts and scatterplots. These are linked together so that selections in one view can be seen and modified in another. In this system it is practical to evaluate which views are useful for which operations. EDV has been used on data sets with over 50,000 cases and sets with over 300 variables, showing it can be used for analysis of realistic, important data sets.</p><p>EDV is a memoryless system, with selection tools (at present) all being data-independent. It provides a choice of tools from a menu ( <ref type="figure">Figure 4</ref>) and allows the user to choose whatever 2operation system they prefer using the window of figure 5. The default choices are a rectangular lasso and the replace/toggle system.  <ref type="figure">Figures 6-8</ref> show a variety of selection operations in operation. The data being analyzed is a set of baseball statistics for hitters in 1987. This is part of a data set supplied for a competition organized by the ASA. In <ref type="figure">figure 6</ref>, the analyst is examining the relationships between three variables, salary (the object of the study), years (number of years in the league) and hits (a measure of ability). A scatterplot of salary against hits shows two groups with different salaries for their performances. The players in the lower group, who are paid poorly for their performances, have been selected and the linked histogram shows that most of them have been in the league for only a few years. This selection was performed with a free-form lasso carefully drawn around the set using addhubtract operation. A brush with the same system of operations could have been used to similar effect. Note that there is one player who has been 10 years in the league and is still paid below what his performance indicates. We could either use the subtract operation and remove the newer players or the intersect operation and select that player directly from the histogram to identify him.</p><p>In figure 7 a wide brush was dragged (using the replace operation) over a smoothed salary histogram and the resulting pattern observed in a table of years versus position. Older left field (LF) players get paid more than older catchers (C), and utility fielders (UT) just don't get the big bucks.</p><p>In figure 8 we show side by side boxplots, for continuous variables, and bubble-plots, for categorical variables. Making a selection in any linked view shows the selection by superimposing parallel coordinates over the view. In <ref type="figure">figure 8</ref> we have dragged a small rectangular brush over position and are currently selecting third base players. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>A good visualization system has an appropriate, powerful, intuitive and forgiving selection system. It is easy to look at such a system and be unaware of the decisions that were made to make it so. In this paper we have presented a taxonomy that allows system builders to decide on the features that they require and gives a framework for building such a system. Our suggestion of 524,288 possible systems3 was more in fun than serious, as within the taxonomy there are many different choices that can be madewe did not discuss brush shape, lasso type or methods for combining memory-based selection for example. This framework is the result of considering both the current state of the art and historical antecedents and in the future we look forward to new inventions that will require us to expand it.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>0</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure</head><label></label><figDesc>Figure 4. Tools Figure 5. System Choices</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 7 .Figure 8 .</head><label>78</label><figDesc>Selection from Histogram Brushing over third base players</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>) ..................................................................... . . . . , . . . . . . . . . . . . . . . . . . . . . . . .................................................... . . . . . . . .</figDesc><table><row><cell>1</cell><cell>1</cell><cell>T(1,1)</cell></row><row><cell cols="3">Table 1. Combining a selection (S) and an</cell></row><row><cell></cell><cell cols="2">indicated subset (I)</cell></row></table><note>..&gt;..&gt;..a A , .</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>,</head><label></label><figDesc>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</figDesc><table><row><cell>.</cell><cell>, A , , ,</cell><cell>.</cell><cell>.</cell></row></table><note>.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>,</head><label></label><figDesc>. . . . . . . . . . . . . . . . , . . . . . . . . . .... No. ! ?? .................................................. . . . . . . . . . . . . . . . . . . . W U K . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . % . . _ . % . . . % . . . . ? . . . . . . . . . . . . . . . . . . .</figDesc><table><row><cell></cell><cell></cell><cell>V , , . . . . , . W</cell><cell>. . A. , . . ,</cell><cell>. , A . .</cell><cell>. . . .</cell></row><row><cell>d Replace</cell><cell>Toggle</cell><cell cols="3">Drawing package standard.</cell></row><row><cell></cell><cell></cell><cell cols="2">Mac OS method.</cell></row><row><cell>h Add</cell><cell>Subtract</cell><cell cols="3">Scatterplot brushing 'paint'</cell></row><row><cell></cell><cell></cell><cell>mode</cell><cell></cell></row><row><cell>e Add</cell><cell>Intersect</cell><cell cols="2">Boolean OR and AND</cell></row><row><cell></cell><cell></cell><cell cols="2">operations.</cell></row><row><cell>g Toggle</cell><cell>Intersect</cell><cell cols="2">Similar to (e), but not as</cell></row><row><cell></cell><cell></cell><cell cols="2">powerful</cell></row><row><cell>i Add</cell><cell>Toggle</cell><cell cols="3">Similar to (d),(h), but less</cell></row><row><cell></cell><cell></cell><cell cols="2">intuitive than either</cell></row><row><cell>. A. . , . . ,</cell><cell>Subtract</cell><cell cols="2">Less forgiving than (h)</cell></row><row><cell cols="4">Table 3.2-Operation Selection Systems</cell></row><row><cell>(a) Replace, Add</cell><cell></cell><cell></cell><cell></cell></row><row><cell>(b) Replace, Intersect</cell><cell></cell><cell></cell><cell></cell></row><row><cell>(c) Replace, Subtract</cell><cell></cell><cell></cell><cell></cell></row><row><cell>(d) Replace, Toggle</cell><cell></cell><cell></cell><cell></cell></row><row><cell>(e) Intersect, Add</cell><cell></cell><cell></cell><cell></cell></row></table><note>A.A...Aw....,* . * . * . , * , . , * , A V . w ......... ..pri.wrsI ....... s?. c!!??!arx. .. . . . . . Toggle . . .n . . . . . . . .* ., .* ., . . . . . . . n w . . . . n .</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="0">-8186-7668-X/96 $5.00 0 1996 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="216">operation system x 2 (memorylmemoryless) x 2 (data dependenvindependent) x 2 @rusMasso)</note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahlberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<title level="m">Visual Information Seeking: Tight Coupling O f Dynamic Query Filters With Starjield Displays. Proceedings Chi &apos;94</title>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Human Inte@zce Guidelines: The Apple Desktop Interface Addison-Wesley</title>
	</analytic>
	<monogr>
		<title level="j">Apple Computer</title>
		<imprint>
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The Many Faces of A</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcgill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Scatterplot Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="807" to="822" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Dynamic Graphics For Statistics Wadsworth &amp; Brooks, California Eick</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S G</forename><surname>Mcgill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">J</forename><surname>Wills</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">High Interaction Graphics European Journal Of Operations Research #</title>
		<imprint>
			<biblScope unit="volume">81</biblScope>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Fotheringham</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Exploratory Spatial Data Analysis And GIs Environment And Planning A</title>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Spider -An Interactive Statistical Tool for the Analysis of Spatial Data Int</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Haslett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wills</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Unwin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Painting Multiple Views O f Complex Objects ECOOP/OOPSLA &apos;90 Proceedings Microsoft</title>
		<editor>McDonald J. A., Stuetzle W. and Buja A.</editor>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">4</biblScope>
		</imprint>
	</monogr>
	<note>Microsoft Windows Online Help Windows &apos;95 OS</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">993) Latest Developments In GISLIS</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean-Claude</forename><surname>Muller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Geographical Information Systems</title>
		<imprint>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="445" to="459" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">XGobi: Interactive Graphics In The X Window System With A Link To S</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Swayne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Buja</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Section on Statistical Graphics</title>
		<meeting>the Section on Statistical Graphics<address><addrLine>ASA, VA</addrLine></address></meeting>
		<imprint>
			<publisher>American Statistical Association</publisher>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The Datadesk Handbook Odesta Corporation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">F</forename><surname>Velleman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">A Critical Look At Some Analyses O f Major League Baseball Salaries American Statistician</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Hoaglin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">F</forename><surname>Velleman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="277" to="285" />
		</imprint>
	</monogr>
	<note>vo1.49 #3</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Lisp-Stat: An Object-Oriented Environment For Statistical Computing And Dynamic Graphics Wiley</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Tierney</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<pubPlace>New York, NY</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
