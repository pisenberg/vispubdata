<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Techniques for Non-Linear Magnification Transformations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">Alan</forename><surname>Keahey</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Indiana University</orgName>
								<address>
									<addrLine>215 Lindley Hall Bloomington</addrLine>
									<postCode>47405</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><forename type="middle">L</forename><surname>Robertson</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Indiana University</orgName>
								<address>
									<addrLine>215 Lindley Hall Bloomington</addrLine>
									<postCode>47405</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Techniques for Non-Linear Magnification Transformations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>This paper presents efjfkient methods for implementing general non-linear magntjication transformations. Techniques are provided for: combining linear and non-linear magntjkations, constraining the domain of magn@cations, combining multiple transformations, and smoothly interpolating between magnified and normal views. In addition piecewise linear methods are introduced which allow greater efjiciency and expressiveness than their continuous counterparts.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Since the introduction of the video display terminal, computer users have had to deal with the problem of limited screen space. This problem is becoming increasingly significant as modern computer systems and applications become more graphics oriented. Although screen sizes of 1280 x 1024 pixels are common, they are still not adequate to display many complex visual scenes.</p><p>Conversely, an argument can also be made that screen sizes have become too large. As resolution increases, more graphical information can be displayed on a single frame, oftentimes beyond an user's ability to perceive. A general purpose mechanism for allowing the user to explicitly enhance visualization of some area(s) of the screen could facilitate better focus on items of interest.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Magnification</head><p>is one tool that can be brought to bear on both of these problems. This paper will discuss general, efficient techniques for performing magnification. All of the examples discussed in this paper were obtained from the FAD (Future Acronym in Development) toolkit being developed by the author which allows highly interactive construction and application of magnifications, as well as a program-*This work was supported by US Dept. of Education award number P2OOA502367.</p><p>mer's interface to a library of transformation routines. All transformations provide interactive frame rates as the user moves the magnification over a domain and adjusts the magnification parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Magnification Transformations</head><p>The available literature on distortion-based magnification abounds with a full range of terminologies to describe the techniques and characteristics of magnification/zoomldistortion/warp/etc. We borrow from Leung and Apperley <ref type="bibr">[lo]</ref>, who make the distinction between transformation functions and magnification functions, the magnification function is the derivative of the transformation function, <ref type="figure">Figure 1</ref> shows a simple linear transformation function on the left, and the corresponding magnification function on the right. It will be shown in this paper that it is useful to be able to translate between these two functions. Related work illustrating a technique for visualizing these transformations has been done by Furnas and Bederson <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Linear Transformations</head><p>The most familiar magnification technique involves the application of linear transformation functions as shown in <ref type="figure">Figure 1</ref>. The result of these transformations is a constant level of magnification across the domain, similar to what one would perceive through an ordinary magnifying glass. This has the advantage of a close analogy to familiar experiences for the user, however certain limitations are inherent:</p><p>l The user is forced to create a mapping between disjoint levels of resolution in the image. While it can be argued that the user will already be somewhat familiar with this task, it can also be argued that very rarely in the real-world does our perception of objects follow this type of behaviour: when viewing a physical object, our levels of perceived detail tend to follow a smooth continuum, rather than jump in and out to different levels of resolution. l If the magnified representation of some area of the screen is to appear in some other part of the screen (i.e. a separate window), then the user will be forced to make abrupt transitions on two cognitive/perceptual levels to tie the representations together: spatial (attention will have to shift from the normal resolution view to the higher resolution view), and resolution (the user will be forced to create a mapping between the displayed levels of resolution).</p><p>l If we use in situ linear magnification techniques, where the magnified image sits on top of the normal resolution image, then we introduce the problem of occlusion.</p><p>Because of the linear nature of this magnification, the magnified representation of an image must necessarily be larger than the non-magnified representation, with the result that the magnified image will block neighboring areas of the non-magnified image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Non-Linear Transformations</head><p>In order to overcome some of the problems with linear magnification, several different non-linear (or distortionbased) magnifications have been developed. These systems all share the properties of enhanced local resolution with some preservation of global context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1.">Fisheye Zoom</head><p>Thefisheye lens is one mechanism for dealing with the problems incurred by linear magnification. In this schema, the user is provided with a view which is distorted in a manner similar to that produced by a very wide-angle camera lens. Furnas popularized this idea in 1986 <ref type="bibr" target="#b2">[3]</ref>, and it has been used in other systems such as Sarkar and Brown [ 151. Many different methods can be used to implement the fisheye lens effect through simple geometric transformations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2.">Hyperbolic</head><p>Hyperbolic geometries provide a natural means for producing local resolution enhancement and global context. This approach allows infinite Euclidean space to be mapped into a finite disk in a continuous, non-occluding manner so that the space is "bigger" near the center of the disk, and "smaller" near the periphery. Examples of work using such geometries can be found in <ref type="bibr" target="#b8">[9]</ref> and [ 121.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.2.3.3D Pliable Surfaces</head><p>Perspective projections of curved 3D surfaces can be used to create non-linear magnification effects <ref type="bibr" target="#b1">[2]</ref> which allow for complex magnifications with multiple foci, and provides a potentially useful analogy for describing the magnification to the user. However, additional computational overhead is incurred in the 3D contouring and projection of essentially 2D data with this system, and special care must be taken to ensure that the projection of the surfaces does not present problems with occIusion. The techniques we present guarantee non-occlusion with simple 2D mathematics, and do not require special graphics hardware for interactive speeds. Furthermore, these methods scale up directly to viewing 3D data, although issues of occlusion may arise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.4.">General Non-Linear</head><p>The above examples are special cases of the class of nonlinear transformations. There have been a number of papers describing different approaches to this, a survey of many of these can be found in <ref type="bibr">[lo]</ref>. The remainder of this subsection will describe some techniques for non-linear transformations. l One Dimensional: A desirable property for a 1D base function for non-linear transformations is a smoothly varying slope over some domain such that some segment(s) of the curve will have slope &gt; 1 (areas of magnification) and some other segment(s) of the curve have slope &lt; 1 (areas of demagnzjication or minzjkation). In addition, the function chosen should be such that a parameter exists for increasing the slope of the function in some areas, and will also cause a corresponding decrease of the slope in other areas. These requirements on the function reflect the common sense notion that "you can't get something for nothing". Every extra level of magnification must incur a corresponding decrease in magnification at some other location if the range boundaries are not to exceed the domain boundaries (which is a requirement for non-occluding magnification).</p><p>Several different choices exist for a 1D base transformation function. Sarkar and Brown <ref type="bibr" target="#b14">[15]</ref> use the function G(z) = $$ to perform this transformation. G(z) is well behaved and has desirable non-linear characteristics over the domain [0, 11, so that G(z) : [0, l] + [0, 11. Although this function is by itself relatively inexpensive computationally, all coordinates to be transformed by this function must first be normalized or constrained to the [0, l] domain.</p><p>Alternatively, it is possible to use a function which is well behaved over an infinite domain h(z) : R + (-C, C). There are many possible functions which can be used to accomplish this, such as the hyperbolic tangent function h(z) = tan/r(z). To this function we can add a parameter ,0 which controls the degree of magnification, so that h(z,/3) = tanh(z@. h(s) is well behaved across all domains, and there is no need to normalize the domain coordinates to some specific range before applying the magnification. Note that several functions exist which can produce a similar effect to that of tanh(z), such as a modified logistic function 2.0 N? P) = (1.0+e-28*) -1.0) which is computationally less expensive on many machines. It will also be shown in section 5.1 that piecewise linear functions can be used to provide a reasonable approximation. <ref type="figure" target="#fig_1">Figure  2</ref> shows a comparison of the fisheye and tanh transformation functions. <ref type="figure" target="#fig_2">Figure 3</ref> shows the tanh transformation function and its associated magnification function.  What is still required is a mechanism for moving the center of magnification across the domain. This is easily achieved: if we want ~0 to be the center of magnification, we simply replace h(z) with (h(z -x0) + ~a). and the center of maximal magnification will translate to the desired location.</p><p>As will be shown in the following section, a 1D function can be used as the base function for transfotmations in two or more dimensions. It can also be used for magnification in one dimension only; Keahey and Marley <ref type="bibr" target="#b6">[7]</ref> have shown that using such a "magnification bar" can be superior to scrolling for viewing highly structured text documents. o Two Dimensional:</p><p>By applying these simple 1D transformation functions to 2D coordinate spaces in various ways, many different effects can be produced. <ref type="figure" target="#fig_3">Figure 4</ref> shows a few of the possible effects of applying such transformations to a regular grid of two dimensional points (as described below).</p><p>Orthogonal: this is the result of applying the 1D transformation to the CC and y coordinates of a point separately, thus making the magnification in one dimension orthogonal to magnification in other dimensions. This transformation preserves horizontal and vertical lines within the domain, and allows for independent control of the magnification parameters for the II: and y axes. It does not preserve angles relative to the center of magnification, however.</p><p>Radial (Fisheye): this effect can be produced by transforming each point in the domain as follows:</p><p>1. Given a center point of magnification H and a point to transform P, let p = P -H 2. Find the radius component of the polar coordinates of p so that r = 6-Y p2 + p2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">The new coordinates are then H + Fp</head><p>This transformation preserves angles relative to the center of the magnification. Additionally, the fisheye effect is familiar to most users, and provides a ready analogy for the user to relate to. There is only a single magnification parameter, which controls degree of magnification in all directions. The result is the same as the polar transformation described in <ref type="bibr" target="#b5">[6]</ref>, except that no computationally expensive trig functions are needed for explicit polar-rectangular coordinate conversion.</p><p>Bi-Radial: this is a combination of the radial and orthogonal transformations. The transformation is achieved by making the direction of transformation the same as in the radial case, however the magnitude is weighted by the x and y components of the distance from the center of magnification as in the orthogonal transformation. This transformation preserves angles relative to the center of magnification, and provides some degree of independence for x and y magnification parameters. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Hybrid Transformations</head><p>This section introduces techniques for combining desirable properties from linear and non-linear magnifications within a single transformation. Related work on combining these properties can be found in <ref type="bibr" target="#b1">[2]</ref> and <ref type="bibr" target="#b15">[16]</ref>, although the methods used in these works are very different from those presented here. In particular we note the efficiency and simplicity of our methods, and that no special graphics hardware is required for interactive speeds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.1.">Combined Linear/Non-Linear</head><p>An advantage of linear transformations is that they produce distortion-free zooming (when the aspect ratio is maintained). For example, a user viewing textual data would prefer to see the letters at the area of maximal magnification without the distortions presented by non-linear transformations. This is relevant with a technique used by the author <ref type="bibr" target="#b7">[8]</ref> where arbitrary images (often containing text) are texture-mapped to a grid which is transformed via the techniques presented in this paper. As the grid points are transformed, the image is transformed along with them.</p><p>We can combine the advantages of linear and non-linear transformations by linearly transforming all points within a certain area A, and all points not falling within A are interpolated into the area surrounding the linearly magnified area of A and subsequently transformed with a suitable non-linear transformation. Note that the maximum degree of magnification that can be used in the linearly magnified area is constrained by: 1) the size of the domain to be magnified (inversely proportional), and 2) the size of the target domain (directly proportional). <ref type="figure">Figure 11</ref> shows what a combined linear/non-linear transformation might look like on a regular grid of points, and <ref type="figure" target="#fig_4">Figure 5</ref> shows two examples of this type of transformation. In the left image, a round area is used for the linear magnification, with the surrounding points being treated by a radial non-linear magnification. In the right image, a rectangular area is used for the linear magnification and the surrounding points are transformed by an orthogonal non-linear magnification. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.2.">Constraining Transformations</head><p>Often it is the case that we do not want the transformation to apply to the entire source domain, but would rather perform non-occluding magnification on some sub-area of the domain, constraining the transformed points from that sub-area to the same sub-area. This allows for a localized, non-occluding magnification which can be moved over the source domain. This localization offers the benefits that the global context now remains more static, and the boundaries of that context remain fixed even as the center of the magnification is changed. <ref type="figure" target="#fig_5">Figure 6</ref> shows examples of applying these constrained domains to the texture mapping example described above (note that the linear/non-linear transformation is used within the constrained domain), compare these with <ref type="figure" target="#fig_4">Figure 5</ref>.</p><p>The mechanism for performing these constrained domain transformations is similar to that used for the combined linear/non-linear transformations described in section 2.3.1, except that we perform the non-linear transformation inside the sub-area of the domain, and all points outside the domain remain untransformed. Note that it is often desirable to map the points inside the sub-area to some regular domain (e.g. <ref type="bibr">[-1, l]</ref> x [-1, 11) before performing the actual transformation on them, and then map the transformed points back into the original sub-area. These mappings are often easier to perform if we use a transformation function with a fixed range (such as R --+ (-l,l)). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.3.">Continuous/Discrete Domains</head><p>For tasks such as graph visualization, the domain consists of discrete objects in a continuous coordinate space, and (in general) adjacencies between nodes can be maintained through rendering of edges directly between then, regardless of the type or level of distortion introduced by the transformation. For this reason, graph visualization tasks are very amenable to non-linear transformation techniques, and there are many graph visualization systems which take advantage of this [ 133 [ 151.</p><p>For discrete domains (such as the texture mapping example described in section 2.3.1), adjacency requirements are more of a concern. This is particularly the case when linear/non-linear combinations or constrained boundaries are introduced. In these cases, boundaries between regions of different transformations must be carefully thought out to preserve adjacency information. The basic task is to ensure that all mappings between regions generate boundary conditions which are consistent with the other transfomration functions that are used. Referring to <ref type="figure">Figure 7</ref>, we can say that the boundary conditions at the perimeter of region A should be the same for both f(A) and g(-A) <ref type="figure">Figure 7</ref>. Boundary Conditions</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Compound Transformations</head><p>Early work on static transformations with multiple areas of magnification began with <ref type="bibr" target="#b4">[5]</ref>. This section will consider dynamic methods for combining transformations from multiple individual transformations. These techniques fall into three general categories, each with their own distinct questions and characteristics: 1) restricting the transformations so they do not overlap, 2) globally combining the transformations, and 3) applying the transformations in succession. The images in <ref type="figure" target="#fig_6">Figure 8</ref> are the result of applying instances of these three approaches to a regular two dimensional grid.</p><p>Maximal Ray Clipping: In this schema, each point in the domain is transformed only by the transformation whose center of magnification is closest to that point. After the transformation has been performed, the point is clipped back along the ray between itself and the transformation center (if necessary) until the clipped point is again closer to the original transformation center than to any other transformation center. This produces a partitioning of the domain space similar to Voronoi diagrams from computational geometry, so that each transformation has its own "domain of influence". The visual result of this method is similar to that produced by the vector blending method in <ref type="bibr" target="#b1">[2]</ref>, except that with this system the boundaries between transformations are independent of the degree of magnification, and each region can be magnified or demagnified without altering the partitioning of the space.</p><p>Weighted Averaging: This is achieved by independently applying each transformation to a point in the original domain, and then making the final transformed point the weighted average of the independent transformations. The weights are inversely proportional to the distance between the center of magnification and the point in the original domain. This is similar to the arithmetic mean used in <ref type="bibr" target="#b5">[6]</ref> and [ 111, except that here the weights compensate for the reduction in magnification caused by the averaging, thus enhancing both degree and localization of the individual transformations.</p><p>Composition: Here we apply each transformation in sequence to the points in the domain. This raises issues of what order the transformations should be applied in, since the magnifications will in general be non-commutative. The system used to produce the images below allowed for this through an interface to a stack of transformations, and all transformations were applied to the domain in order from the bottom to the top of the stack. The effect of this (when magnifications with constrained domains are used) is that of a stack of lenses layered on top of the display, each of which can be controlled independently. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Filtering Transformations</head><p>Independent of the complexity of the transformations employed, it is often useful to have a single mechanism for controlling the degree to which all warping transformations take effect. This can allow the user to smoothly shift between the warped and unwarped views of the space. Such functionality. can be provided through a simple filter applied to the transformed and untransformed points, which provides a variable weighting of the points. Let s be the weight attached to the source point P, and d be the weight attached to the transformed point Q. We make the conditions that 0 5 s 5 landd = l-s. ThefilteredpointisthensP+dQ. <ref type="figure" target="#fig_7">Figure 9</ref> shows an example of changing the single filter parameter to alter the effect of several transformations simultaneously. This simple method provides the user with an effective means of realizing the relationship between normal and distorted views. In addition, this technique can greatly facilitate construction of the mappings described in sections 2.3.1 and 2.3.2, points can be mapped to the extreme bound-aries of a region, and the filter will smooth out the spacing between them in a non-linear fashion.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Piecewise Transformations</head><p>In addition to the continuous transformations described above, it is also possible to approximate these transformations using piecewise linear functions. Such functions offer the potential for performance gains, and also allow for a more general class of transformations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.l.lD Piecewise Transformations</head><p>These transformations involve piecewise linear approximations of the single-variable transformation basis functions which are used to drive the higher-order (2D and 3D) transformations (as described in section 2.2.4). As an example of this, a piecewise approximation of tanh(z) can be used to replace that computationally expensive function call with a simple table lookup and a linear interpolation. Since we can easily parameterize the resolution of the piecewise approximation', it is possible to produce a step function that is arbitrarily close to the continuous one, at a reduced computational cost. <ref type="table">Table 1</ref> shows some timing results ' for the simple radial transformation using the 1D basis functions shown in <ref type="figure">Figure 10</ref>. mation time, and that there is no time increase for the piecewise function as the number of components in the approximation is increased. However, the expressive power of the fisheye basis transformation is limited to altering the degree of curvature of the function based on a single parameter. With piecewise functions on the other hand, it is possible to transform points with 1D transformations of arbitrary complexity at no extra computational cost.</p><p>We can see a simple example of the additional expressiveness of the piecewise transformation, by considering the methods used for producing the linear/non-linear combined transformations discussed in section 2.3.1. Using a continuous warping function such as tanh or the fisheye transformation, it is necessary to treat points inside the area of linear magnification as a special case. However piecewise linear transformations can automatically provide the desired area of flat magnification. <ref type="figure">Figure 11</ref> shows a comparison of the results of these transformations (the piecewise version was obtained by using the piecewise radial transformation with 6 segments). <ref type="table" target="#tab_1">Table 2</ref> shows some timing results for the different methods (the final entries in this figure and table will be described in the following section). Note that the times for the piecewise function are identical to the times for the simpler step radial function in <ref type="table">Table 1</ref>. These data clearly show a performance potential for the piecewise transformation.  <ref type="table">Table 1</ref> shows the time for the piecewise approximations to be slightly slower than the fisheye transfor-'These results were obtained on aR4400 processor with the unix times0 command. Times shown are average times (in seconds) for computing a transformation on a single point. Normalized times reflect the difference between the transformation time for the distortion function and a "Null" transformation which returns the original point, thus eliminating overhead common to all transformations.</p><p>In addition to the performance gains offered by such functions however, piecewise functions generalize much more readily to arbitrary shapes. In general we can say that a suitable piecewise transformation function is one composed of linear segments having zero-order parametric continuity Co (i.e. the endpoints of adjacent segments meet). The degree of magnification provided by the function is directly proportional to the slope of the segment at that point. There are several ways in which such functions can be constructed. The simple piecewise functions used in this paper were all generated through routines which sample a continuous function at a parameterized resolution to obtain the resulting piecewise function.</p><p>It is also possible to provide an interface which allows a user to drag control points on the piecewise transformation function and thus design customized functions with multiple areas of magnification. Not all functions constructed in this manner will be useful, the loose restriction of Co continuity will allow the user to construct wildly distorting transformations with sharp transitions rather than smooth curves. This problem can be alleviated by using spline functions with higher degrees of continuity to construct a "transformation curve", and then sampling the spline function to obtain an approximating piecewise linear function.</p><p>Piecewise transformations can also be constructed through manipulation of the values of the magnification function (which is the derivative of the transformation function). By placing a grid over some domain and assigning suitable magnification values (perhaps corresponding to a degree of interest) for each cell in grid, we can integrate over the magnification values to obtain the corresponding transformation function. This allows the user to construct a transformation function without having to be aware of the slope/magnification relation, instead the user is able to construct such a function by simply expressing interest in certain areas of the domain. Since we are integrating the magnification values to obtain the transformation function, we automatically obtain Co continuity in the resulting transformation function. As with the transformation functions, this process is also amenable to the use of spline functions for direct construction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.2.2D Piecewise Transformations</head><p>In the previous subsection, we explored methods for using piecewise linear functions to approximate the 1D basis functions described in section 2.2.4. In this subsection, we will examine a more powerful set of piecewise transformations, where an approximation is made of a complete two dimensional transformation.</p><p>The most straightforward method to construct a 2D piecewise linear transformation of this type is to sample an existing transformation with a regular grid of two dimensional points to construct a grid of the transformed points. After this grid has been computed, any number of points can be transformed through table lookup and linear interpolation on the x and y coordinates independently. The accuracy of the piecewise approximation is controlled by parameterizing the resolution of the "sampling grid' that is used. <ref type="table" target="#tab_1">Table 2</ref> shows that even for slightly complicated transformations such as the Flat/Radial combination <ref type="figure">(Figure 1 l)</ref>, construction of a 2D piecewise transformation can result in significantly faster transformation times than for the procedural fisheye technique. As with the 1D piecewise transform, the time required for the complex piecewise transformation remains constant with increasing complexity of the function, and increasing grid size (within memory and cache constraints). Note however that the 1D piecewise approach is the fastest of the three, requires much less memory than the 2D, and would be a better choice for this particular transformation.</p><p>When we moved from continuous basis transformation functions to their 1D piecewise transformation counterparts, we found that a new level of expressiveness became possible. Similarly, we can express an even richer set of transformations with a single 2D piecewise transformation function than with a continuous 2D transformation. There are several ways in which this potential increase in expressiveness can be realized. One method that offers large performance benefits is the ability to combine multiple transformations (as described in section 3) and express them in terms of a single 2D piecewise transformation. This can be achieved in a manner similar to that described above for construction from a single existing transformation, the difference being that the entire set of transformations is applied to the sampling grid before it is used to construct the single 2D piecewise transformation grid. The timing results shown in <ref type="table">Table 3</ref> indicate better than a magnitude of order increase in performance when comparing the procedural (fisheye) and 2D piecewise approaches to producing the transformation shown in <ref type="figure" target="#fig_1">Figure 12</ref>.  <ref type="table">Table 3</ref> Because of the overhead involved in construction of 2D piecewise transformations, they are best suited to tasks which are dynamic in time and placement rather than in Function Time Normalized Null 4.59e-06 0.0 Fisheye 7.10e-05 6.64e-05 2D Piecewise l.O2e-05 5.61e-06 <ref type="table">Table 3</ref>. Times for Multiple and 2D Piecewise shape. Once computed, these 2D transforms can be translated over a domain (or the domain "underneath" the transform can change through time) efficiently without recomputing the transformation grid. Whenever the shape of the transformation changes however, it becomes necessary to recompute the transformation grid, thus 1D piecewise or continuous functions might be better suited to those applications where the shape of the transformation changes frequently.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>We have shown several techniques for constructing and using non-linear magnification, and that it is possible to construct sophisticated transformations by building up from simpler ones. A hierarchy of transformations emerges from these constructions which allows for categorization of new classes of transformations. Some of the construction tools that we have described include: combination with linear magnifications, constrained transformation domains, combining multiple transformations, and enhanced control of the overall degree to which transformations should take effect. All of these methods use simple and efficient two dimensional mathematics to produce occlusion-free magnification.</p><p>We have also shown how piecewise linear transformations can be used to approximate continuous non-linear transformations of one or two dimensions. Timing data clearly indicate a potential for increased efficiency with these piecewise Gansformations. In addition, a greater degree of expressiveness becomes possible with these functions, which provides greater flexibility for the designer of more sophisticated magnification systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Further Work</head><p>General methods for enforcing the consistency of domain boundary conditions in aggregate transformations should be addressed for domain constraints and combinations of transformations. More work is currently being done on effective techniques for constructing the piecewise linear transformations. We are investigating interactive methods for construction of these transforms which will be more natural for an user to deal with. Also, several issues arise in the conversion between the transformation and magnification grids for the 2D piecewise functions. Different conversion techniques exist, each giving different results. A significant area of work centers on the question of how to best utilize the additional expressiveness possible with these piecewise transformations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure</head><label></label><figDesc>Figure 1. Transformation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Fisheye and Tanh Basis Functions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>Tanh Transformation/Magnification</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 .</head><label>4</label><figDesc>Orthogonal, Radial and Bi-radial</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 .</head><label>5</label><figDesc>Combined Linear and Non-Linear</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 .</head><label>6</label><figDesc>Constrained Domains</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 .</head><label>8</label><figDesc>Clipped, Average, and Composition</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 .</head><label>9</label><figDesc>Filtering for s = 1 .O, 0.65,0.35</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 16 Figure 11 .</head><label>101611</label><figDesc>.1 D Radial: tanh, piecewise n = 8,Flat/Radial: tanh, 1 D, 2D Piecewise Note that</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 12 .</head><label>12</label><figDesc>Multiple Transform for</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>Timings for Flat/Radial Transform</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 1996 IEEE Symposium on Information Visualization (INFOVIS '96) 0-8186-7668-X/96 $10.00 © 1996 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 1996 IEEE Symposium on Information Visualization (INFOVIS '96)</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Pad++: A zooming graphical interface for exploring alternate interface physics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Bederson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Hollan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UIST &apos;94 Proceedings</title>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">3D pliable surfaces: For the effective presentation of visual information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Carpendale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cowperthwaite</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fracchia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UIST &apos;95 Proceedings</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="217" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Furnas</surname></persName>
		</author>
		<title level="m">Generalized fisheye views. Human Factors in Computing Systems, CHI &apos;86</title>
		<imprint>
			<date type="published" when="1986-04" />
			<biblScope unit="page" from="16" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Space-scale diagrams: Understanding multiscale interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Fumas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Bederson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of CHI &apos;95 Human Factors in Computing Systems</title>
		<meeting>CHI &apos;95 Human Factors in Computing Systems</meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A polyfocal projection for statistical surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kadmon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Shlomi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cartograph. J</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="36" to="41" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A simple algorithm for drawing large graphs of small screens</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kaugars</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Reinfelds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Brazma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ofGraph Drawing &apos;94</title>
		<meeting>ofGraph Drawing &apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">894</biblScope>
			<biblScope unit="page" from="278" to="282" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Viewing text with non-linear magnification: An experimental study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Keahey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marley</surname></persName>
		</author>
		<idno>459</idno>
		<imprint>
			<date type="published" when="1996-04" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, Indiana University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Non-linear image magnification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Keahey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">L</forename><surname>Robertson</surname></persName>
		</author>
		<idno>460</idno>
		<imprint>
			<date type="published" when="1996-04" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, Indiana University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A focus+context technique based on hyperbolic geometry for visualizing large hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lamping</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Pirolli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHI &apos;95 Proceedings</title>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A review and taxonomy of distortion-oriented presentation techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Apperley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Computer-Human Interaction</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="126" to="160" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Multi-viewpoint perspective display methods: Formulation and application to compound graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Misue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sugiyama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Human Aspects in Computing: Design and Use of Interactive Systems and Information Management</title>
		<imprint>
			<publisher>Elsevier Science Publishers</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="834" to="838" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visualizing the structure of the world wide web in 3D hyperbolic space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Burchard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VRML &apos;95 Proceedings</title>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Exploring large hyperdocuments: Fisheye views of nested networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">G</forename><surname>Noik</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Hypertext &apos;93: ACM Conference on Hypertext and Hypermedia</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The document lens</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UIST &apos;93: Proceedings of the ACM Stmposium on User Inter$ace Software and Technology</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page">108</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Brown</surname></persName>
		</author>
		<title level="m">Graphical fisheye views. Communications of the ACM</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="73" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Stretching the rubber sheet: A metaphor for visualizing large layouts on small screens</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Snibbe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Tversky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Reiss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">UIST &apos;93, Proceedings of theACM User Integace Sofbvare and Technology</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Data-base navigation: An office environment for the professional</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Spence</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Apperley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behaviour and Information Technology</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="43" to="54" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
