<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Smooth Surface Extraction from Unstructured Point-based Volume Data Using PDEs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Rosenthal</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lars</forename><surname>Linsen</surname></persName>
						</author>
						<title level="a" type="main">Smooth Surface Extraction from Unstructured Point-based Volume Data Using PDEs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>PDEs</term>
					<term>surface extraction</term>
					<term>level sets</term>
					<term>point-based visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Smooth surface extraction using partial differential equations (PDEs) is a well-known and widely used technique for visualizing volume data. Existing approaches operate on gridded data and mainly on regular structured grids. When considering unstructured point-based volume data where sample points do not form regular patterns nor are they connected in any form, one would typically resample the data over a grid prior to applying the known PDE-based methods. We propose an approach that directly extracts smooth surfaces from unstructured point-based volume data without prior resampling or mesh generation. When operating on unstructured data one needs to quickly derive neighborhood information. The respective information is retrieved by partitioning the 3D domain into cells using a kd-tree and operating on its cells. We exploit neighborhood information to estimate gradients and mean curvature at every sample point using a four-dimensional least-squares fitting approach. Gradients and mean curvature are required for applying the chosen PDE-based method that combines hyperbolic advection to an isovalue of a given scalar field and mean curvature flow. Since we are using an explicit time-integration scheme, time steps and neighbor locations are bounded to ensure convergence of the process. To avoid small global time steps, one can use asynchronous local integration. We extract a smooth surface by successively fitting a smooth auxiliary function to the data set. This auxiliary function is initialized as a signed distance function. For each sample and for every time step we compute the respective gradient, the mean curvature, and a stable time step. With these informations the auxiliary function is manipulated using an explicit Euler time integration. The process successively continues with the next sample point in time. If the norm of the auxiliary function gradient in a sample exceeds a given threshold at some time, the auxiliary function is reinitialized to a signed distance function. After convergence of the evolvution, the resulting smooth surface is obtained by extracting the zero isosurface from the auxiliary function using direct isosurface extraction from unstructured point-based volume data and rendering the extracted surface using point-based rendering methods.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>With the permanently improving digital technologies, the amount of generated, collected, and stored data increases steadily. While costs for computation power, data storage, and data collection decline, more and more data has to be evaluated. When operating on cluster or shared-memory machines, numerical simulations of physical phenomena can produce huge data sets. For flexibility, some of these simulations are preferred to be carried out on an unstructured point-based data structure rather than a grid. For example, in astrophysics particle simulations are quite frequently used with the number of particles ranging up to several millions, each storing multiple scalar values. Another example of large unstructured point-based volume data generation are the deployment of sensor systems with large numbers of sensors.</p><p>An additional attractive property of unstructured point-based data approaches is that they naturally include all grid-based configurations. An unstructured point-based data visualization approach can always be applied to a gridded data set by neglecting the grid connectivity.</p><p>Surface extraction methods based on partial differential equations (PDEs) have a large variety of applications and, in particular, are a well-known technique for segmentation of scalar volume data. Many algorithms and approaches with different modifications of the main idea exist. Most of them address a specific problem or a specific type of gridded data sets. Typically the algorithms operate on hexahedral cells and a given initial surface is modified to explicitly or implicitly minimize a given energy functional.</p><p>Even though all these known algorithms cover a wide area of prob-</p><p>• Paul Rosenthal is with Jacobs University Bremen, E-mail: p.rosenthal@jacobs-university.de.</p><p>• Lars Linsen is with Jacobs University Bremen, E-mail: l.linsen@jacobs-university.de. lems, to our knowledge no algorithm exists that directly operates on unstructured point-based volume data, where scalar function values are given at points in a three-dimensional domain that have an arbitrary distribution and no grid connectivity. If this type of data has to be processed, it is typically resampled over a regular structured grid using scattered data interpolation techniques. Such an interpolation technique introduces resampling inaccuracies that increase the uncertainty or error in the resulting visualization. We propose a PDE-based surface extraction method that directly operates on a large unstructured point-based volume data set, i. e. we are neither resampling the data over a structured grid nor generating a global or local polyhedrization. Instead, we determine some neighborhood information for the sample points, initialize an auxiliary function on the sample points, and process this function according to its approximated and interpolated properties like gradient or mean curvature. For our surface extraction method we use hyperbolic advection to an isovalue of a given scalar field and mean curvature flow. In the context of level-set methods, the auxiliary function is typically referred to as level-set function.</p><p>To ensure numerical stability of the chosen explicit time integration scheme and thus convergence of the overall evolution process we choose appropriate neighbors for the derivative calculation and small enough time steps. The drawback of small global time steps can be circumvented by using asynchronous local integration. After convergence of the process, the zero isosurface to the auxiliary function is extracted in form of a point cloud surface representation and visualized via point-based rendering techniques using splats.</p><p>The main ideas of our smooth surface extraction method and the structure of the entire pipeline are introduced in Section 3. For storing the sample points we use a spatial decomposition based on a threedimensional kd-tree, as described in Section 4. The approximation of gradient and mean curvature requires the computation of nearest neighbor informations for each sample point. These are computed in a preprocessing step and stored during the whole evolution process. In every step and for every sample point the gradient of the auxiliary function and the mean curvature is approximated using a fourdimensional least-squares method, as described in Section 5.</p><p>While the reinitialization of the auxiliary function is described in Section 6, the evolution approach is explained in detail in Section 7. Considerations about stability and time integration are presented in Section 8. Section 9 explains the last step in our pipeline, the zero isosurface extraction. Theoretical and practical results, including analysis of error and computation times, are shown in Section 10.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Common ways to deal with unstructured point-based volume data are to resample the data using scattered data interpolation techniques or to compute a polyhedral grid that connects the unstructured data points. Afterwards segmentation methods like isosurface extraction, regiongrowing methods, and also PDE-based methods like level-sets or finite elements can be applied to the gridded data to generate the desired visualizations. Level-set methods, in particular, tend to operate on regular hexahedral grids what facilitates discrete derivative computations.</p><p>Scattered data interpolation is a well-studied field. We refer to one of many surveys on this topic for further details <ref type="bibr" target="#b9">[10]</ref>. Recently, Park et al. <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b25">26]</ref> have shown that scattered data reconstruction for large data sets can be achieved at interactive or near-interactive rates when discretizing the approach and resampling over a regular grid. Unfortunately, such resampling steps always introduce inaccuracies. In our case, when observing data sets with highly varying point density, the interpolation error would be enormous when using regular grids that fit today's memory constraints. Adaptive grids can reduce the error, but the more adaptive it gets the more complicated the processing becomes, which raises the desire to directly operate on the unstructured point-based volume data.</p><p>Level-set methods go back to Sethian and Osher <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b29">30]</ref>, who first described the evolution of a closed hypersurface. As one can see, the general approach is younger than classical surface extraction and scalar volume data processing techniques. Nevertheless, due to their flexibility already a large community is using and developing levelset methods. Many different approaches exist and the range of application areas is wide. Still, to our knowledge, all existing level-set algorithms require some kind of underlying grid and connectivity information among the sample points.</p><p>Breen et al. <ref type="bibr" target="#b1">[2]</ref> presented a general framework for level-set segmentation of a large variety of regular data sets. Museth et al. <ref type="bibr" target="#b19">[20]</ref> use a level-set method to segment non-uniform data sets, and Enright et al. <ref type="bibr" target="#b4">[5]</ref> apply a level-set approach to an octree-based adaptive mesh. Beside these, many other approaches, e.g. <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b32">33]</ref>, exist that target a huge variety of level-set segmentation tasks on different structured data sets. We want to explicitly mention the particle level-set methods <ref type="bibr" target="#b12">[13]</ref>, as they use free particles during the level-set computations. However, in contrast to our approach, particle level-set methods still require an underlying grid or mesh. We present an approach that operates directly on unstructured point-based volume data.</p><p>Some level-set approaches such as active contours <ref type="bibr" target="#b18">[19]</ref> require an explicit representation of the initial surface, which is deformed until it converges to the desired surface. Our approach, instead, changes the scalar values in the sample points over time such that the surfaces are giving implicitly. In particular, we do not need to reconstruct the scalar field at any positions other than the sample points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">GENERAL APPROACH</head><p>Given a set of unstructured sample points x i ∈ D ⊂ R 3 in space and a volumetric scalar field f : D → R with bounded domain D that is given at these sample locations, we want to extract a smooth isosurface Γ iso ⊂ D with respect to a given isovalue f iso .</p><p>We first need to build a data structure that stores and handles neighborhood information. This is done using a three-dimensional kd-tree. In a preprocessing step, we apply a standard algorithm <ref type="bibr" target="#b10">[11]</ref> on kd-trees for computing the n nearest neighbors for each sample. We chose n = 26 inspired by the regular case on a structured equidistant hexahedral grid, where every sample x has 26 nearest neighbors in the L ∞ -metric.</p><p>Afterwards an auxiliary function ϕ is initialized as a signed distance function for every sample. We choose a radial function as initial func-tion such that the initial isosurfaces are spheres. The auxiliary function is adapted in an iterative process steered by the PDE. If the norms of the auxiliary function gradients exceed a given threshold at any time in the process, a reinitialization step is applied to this function. This keeps the auxiliary function close to a signed distance function, where distances are measured with respect to the isosurface, and assures good numerical behavior of the function during the PDE-based process.</p><p>During the adapting process, the gradient ∇ϕ of the auxiliary function ϕ and the mean curvature κ ϕ are approximated only for the sample points. The approximation is computed using a four-dimensional least-squares approach. Having all necessary informations collected, a time step is performed with respect to the equation</p><formula xml:id="formula_0">∂ ϕ ∂t = a ( f − f iso − ϕ) + bκ ϕ |∇ϕ| ,<label>(1)</label></formula><p>which models hyperbolic normal advection <ref type="bibr" target="#b21">[22]</ref>, weighted with factor a &gt; 0, and mean curvature flow, weighted with factor b &gt; 0.</p><p>Since we are using an explicit Euler time discretization for updating the function at the sample points, the time steps are bounded by the Courant-Friedrichs-Lewy condition <ref type="bibr" target="#b2">[3]</ref> to permit numerical stability. One can follow a global or a local strategy for updating the level-set function values.</p><p>If one chooses one global time step for all sample points, the step is bounded by the most restrictive stability condition of the sample points. The required function properties are fast to compute, but for most samples the time steps are smaller than required.</p><p>Instead, one can use adaptive time integration <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b23">24]</ref>. Here, one has a local time step for every sample. Thus, the stability condition of a sample does not affect the time steps of other sample points. Since calculations per sample point are more complicated and time consuming this method only pays off for data sets with highly varying point density.</p><p>In both cases, the auxiliary function is deformed at the sample points over time until it reaches steady state, i. e., until the function values do not change more than a given threshold from one time step to the subsequent one. After convergence the isosurface to the isovalue zero is extracted from the generated scalar field over the sample points. This surface has then the desired properties of Γ iso . Note that the surface does not need to be extracted during the PDE computations. It is given implicitly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SCATTERED DATA STORAGE</head><p>For fast calculations and access to the sample points some preprocessing steps are required. For each sample we calculate the 26 nearest neighbors with respect to the Euclidean distance. This neighbor information is used later on to approximate geometric properties of the auxiliary function.</p><p>To store the scattered data points including space coordinates, data function value, and auxiliary function value we use a threedimensional kd-tree T . This data structure helps saving computation time. In order to save storage space the samples are not directly stored in the kd-tree but in a vector of sample point locations P and in a vector of values V . Vector V stores all the function values. The nodes of the kd-tree only link to P and V .</p><p>Using vector P, the kd-tree T is build recursively. We start with depth 0 and T = / 0 and corresponding vector P. Then, for every depth i in the kd-tree and vector P ′ , which is a subvector of P, we sort P ′ in x i mod 3 -direction, where x 0 , x 1 and x 2 denote the three dimensions. A node is inserted into T , P ′ is split in two half-sized vectors P ′ 1 and P ′ 2 and the pivot-value of the splitting is stored in the inserted node. If P ′ is odd-sized, a link to the midpoint is also stored in the node. While proceeding recursively with the subvectors P ′ 1 and P ′ 2 , we get two children for the just inserted knot. If a subvector is empty the recursion stops.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CALCULATING FUNCTION PROPERTIES</head><p>To process the auxiliary function following hyperbolic normal advection and mean curvature flow, as modeled in Equation <ref type="formula" target="#formula_0">1</ref>, we have to calculate the gradient and mean curvature in each sample point and for every time step.</p><p>Because of the unstructured distribution of the samples, we are not able to use any grid-based approach for calculating function gradients or mean curvature. Instead we use a four-dimensional least-squares approach to approximate the gradient ∇ϕ of the auxiliary function ϕ and the mean curvature κ ϕ . During the calculations only a nearestneighbors computation of the sample points is needed. Furthermore, no information about the scalar field other than at the sample points is needed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Gradient Calculation</head><p>Let ϕ : R 3 ⊃ D → R be a differentiable function, then the graph of ϕ is the submanifold graph(ϕ) ⊂ R 4 defined as</p><formula xml:id="formula_1">graph(ϕ) := {(x, ϕ(x)) : x ∈ D} .</formula><p>The gradient ∇ϕ(x) in every point x can be derived by projecting the normal n(x, ϕ(x)) of the tangent hyperplane to graph(ϕ) in x to the volumetric domain. We obtain that</p><formula xml:id="formula_2">∇ϕ(x) = −pr R 3 (n(x, ϕ(x))) ,</formula><p>where pr R 3 : R 4 → R 3 denotes the orthogonal projection to the three first coordinates. One-and two-dimensional illustrations of this geometrical consideration are presented in <ref type="figure" target="#fig_0">Figures 1 and 2</ref>. </p><formula xml:id="formula_3">n(x, ϕ(x)) ϕ(x) x pr R (n(x, ϕ(x))) ∇ϕ(x) graph(ϕ)</formula><formula xml:id="formula_4">ϕ(x) x ∇ϕ(x) graph(ϕ) n(x, ϕ(x)) T (x,ϕ(x)) graph(ϕ) pr R 2 n(x, ϕ(x)) Fig. 2.</formula><p>Graph of a two-dimensional function ϕ with tangent plane T (x,ϕ(x)) graph(ϕ), normal n(x, ϕ(x)) to the graph, and gradient ∇ϕ(x).</p><p>Considering the nearest neighbors of x in R 3 , the tangent hyperplane T (x,ϕ(x)) graph(ϕ) ⊂ R 4 is approximated using a fourdimensional least-squares fitting through the neighboring samples with associated function values. The normal of the resulting hyperplane is projected to R 3 to get the function gradient.</p><p>This procedure finally results in a closed formula for the gradient approximation. For a one-dimensional function ϕ, represented through the points (x 1 , ϕ 1 ), . . . , (x n , ϕ n ), we get</p><formula xml:id="formula_5">dϕ dx = n n ∑ i=1 x i ϕ i − n ∑ i=1 x i n ∑ i=1 ϕ i n n ∑ i=1 x 2 i − n ∑ i=1 x i 2 .<label>(2)</label></formula><p>This formula is a generalization of several well-known gradient approximation methods. For example, using points (x, ϕ 1 ) and (x + h, ϕ 2 ) leads to the standard forward differencing</p><formula xml:id="formula_6">dϕ dx = ϕ 2 − ϕ 1 h .</formula><p>Also central differencing is a special case of Equation (2). Using points (x, ϕ 1 ), (x + h, ϕ 2 ), and</p><formula xml:id="formula_7">(x − h, ϕ 0 ) leads to dϕ dx = ϕ 2 − ϕ 0 2h .</formula><p>Such a closed formula can also be derived for approximations of gradients in higher dimensions. It turns out, that the chosen least-squares approach also generalizes the known forward and central differencing schemes on grids in higher dimensions. The formulae with the closed forms for our application in 3D are given in the appendix. This least-squares approach results in a consistent gradient approximation: If the distance to the used neighbors converges to 0, the computed hyperplane converges to the tangent hyperplane to the graph of the function. Hence, the approximated gradient converges towards the exact gradient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Mean Curvature Calculation</head><p>The calculation of the mean curvature κ ϕ requires some more considerations. We follow the ideas described by Osher and Fedkiw <ref type="bibr" target="#b21">[22]</ref>. First, we note that</p><formula xml:id="formula_8">κ ϕ = ∇ • ∇ϕ |∇ϕ| .</formula><p>More precisely, we have</p><formula xml:id="formula_9">κ ϕ = ∇ (∇ϕ) 1 |∇ϕ| 1 + ∇ (∇ϕ) 2 |∇ϕ| 2 + ∇ (∇ϕ) 3 |∇ϕ| 3 with ∇ϕ |∇ϕ| = (∇ϕ) 1 |∇ϕ| , (∇ϕ) 2 |∇ϕ| , (∇ϕ) 3 |∇ϕ| .</formula><p>Thus, we can reduce the problem of mean curvature calculation to the problem of three gradient calculations for the three dimensions of the normalized gradient of ϕ.</p><p>The normalized gradient of ϕ can be approximated for every sample, as described in Section 5.1. Then, the gradient to every function</p><formula xml:id="formula_10">(∇ϕ) i |∇ϕ| : R 3 → R , i = 1, 2, 3 ,</formula><p>is approximated using again a four-dimensional least-squares approach. Afterwards the ith components of gradients ∇</p><formula xml:id="formula_11">(∇ϕ) i |∇ϕ| , i = 1, 2, 3</formula><p>, are taken and summed up to get an approximation to the mean curvature κ ϕ . Due to using only multiple consistent gradient calculations, the consistency of this approach for mean curvature approximation is obvious.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">REINITIALIZATION</head><p>As described by Peng et al. <ref type="bibr" target="#b27">[28]</ref>, the quality of the PDE-process significantly degrades if the auxiliary function ϕ is not close to a signed distance function of the isosurface. In our approach the function is initialized as a signed distance function to the isosurface. Unfortunately the PDE process cannot maintain this property.</p><p>Hence, we have to reinitialize the auxiliary function to a signed distance function to the new isosurface if the norms of the gradients of the function exceed a certain threshold. For this reinitialization we choose a PDE approach solving the special Eikonal equation</p><formula xml:id="formula_12">∂ ϕ ∂t = sign(ϕ)(1 − |∇ϕ|) .<label>(3)</label></formula><p>This approach is much faster than exact calculation of the signed distance function. As we use an explicit Euler time integration for the reinitialization process, Equation <ref type="formula" target="#formula_12">3</ref>leads to the time development equation</p><formula xml:id="formula_13">ϕ i+1 = ϕ i + ∆t • sign(ϕ i )(1 − |∇ϕ i |) .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">SMOOTH ISOSURFACE EXTRACTION</head><p>As described in Section 3, our goal is to extract a smooth isosurface Γ iso ⊂ D ⊂ R 3 with respect to an isovalue f iso of f :</p><formula xml:id="formula_14">R 3 ⊃ D → R.</formula><p>For solving this problem we choose a PDE formulation which is a combination of two well-known approaches. The hyperbolic advection <ref type="bibr" target="#b21">[22]</ref> ∂ ϕ ∂t + α|∇ϕ| = 0 models the transport of the interface in normal direction with speed α. We want to extract an isosurface from the given data set, so our goal is to minimize</p><formula xml:id="formula_15">E = D |ϕ − ( f − f iso )|dx .</formula><p>This leads to the evolution equation</p><formula xml:id="formula_16">∂ ϕ ∂t + (ϕ − ( f − f iso ))|∇ϕ| = 0 .<label>(4)</label></formula><p>A second property we want to consider is the smoothness of the resulting surface Γ iso . Thus, our second goal should be the minimization of the surface area of Γ, i. e., we want to minimize</p><formula xml:id="formula_17">|Γ| = D δ (ϕ)|∇ϕ|dx ,</formula><p>where δ denotes the one-dimensional Dirac δ -function with</p><formula xml:id="formula_18">δ (x) = d dx H(x)</formula><p>and H being the one-dimensional Heaviside function, defined as</p><formula xml:id="formula_19">H(x) = 1 for x ≥ 0 0 for x &lt; 0 .</formula><p>These considerations lead to the model of mean curvature flow <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9]</ref>, characterized by</p><formula xml:id="formula_20">∂ ϕ ∂t = κ ϕ |∇ϕ| ,<label>(5)</label></formula><p>where κ ϕ denotes the mean curvature to the level set. Combining hyperbolic normal advection (4) and mean curvature flow (5), we get the evolution equation</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>∂ ϕ ∂t</head><p>= a ( f − f iso − ϕ) + bκ ϕ |∇ϕ| with scaling parameters a, b &gt; 0, where gradient ∇ϕ and mean curvature κ ϕ are computed as described in Section 5. This equation is solved to steady state using</p><formula xml:id="formula_21">ϕ i+1 = ϕ i + ∆t • ∂ ϕ i ∂t ,<label>(6)</label></formula><p>i. e. an explicit time discretization of order one.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">STABILITY AND TIME INTEGRATION 8.1 Stability</head><p>According to the Lax-Richtmyer equivalence theorem <ref type="bibr" target="#b31">[32]</ref> convergence of a finite difference scheme is equivalent to consistency and stability. As mentioned in Section 5.1 our gradient and mean curvature approximations are consistent. The stability of our differential schemes and following constraints to the time step sizes will be now observed.</p><p>For simplicity, we describe our analysis for the two-dimensional hyperbolic normal advection case, i. e.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>∂ ϕ ∂t</head><p>= a|∇ϕ| , a &gt; 0 .</p><p>Applying our finite difference scheme, derived in Section 5.1, and explicit Euler time integration we get an evolution equation</p><formula xml:id="formula_22">ϕ i+1 (x) = (E(∆t)ϕ i )(x) ,<label>(7)</label></formula><p>for each sample x ∈ R 2 with discrete solution operator E. We use the von Neumann stability analysis <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b33">34]</ref>, which makes use of spatial Fourier transforms <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b3">4]</ref>, to verify stability of the time evolution Equation 7. Von Neumann's theorem states that the evolution process is stable with respect to the maximum norm, iff</p><formula xml:id="formula_23">Ẽ (ξ ) ≤ 1 , for all ξ ∈ R ,</formula><p>whereẼ denotes the Fourier transform of E. For observing two neighbors per sample point (x, y) for the gradient approximation we can assume the situation (x, y, f 1 ), (x +1, y, f 2 ), (x + ∆x, y + ∆y, f 3 ) without loss of generality. In this case, von Neumann stability analysis leads to the following conditions assuring stability</p><formula xml:id="formula_24">λ y − ∆y λ x ∆x ≤ 1 ∆t (8) (1 − ∆y) λ x ∆x + λ y ≤ 1 ∆t (9) ∆y λ x ∆x ≤ λ y (10) λ x ∆x ≥ 0 ,<label>(11)</label></formula><p>where</p><formula xml:id="formula_25">λ x = a |∇ f | ∂ ϕ ∂ x and λ y = a |∇ f | ∂ ϕ ∂ y .</formula><p>One easily sees, that Equations <ref type="bibr" target="#b7">(8)</ref> and (9) can be maintained by choosing a small enough time step ∆t. Contrary to this, the last two conditions affect the relation between partial derivatives of ϕ and ∆x, ∆y. From a descriptive point of view, they assure the upwinding of the process and describe two sectors in which the second neighbor is allowed to be to assure stability.</p><p>In our approach, where the domain is R 3 , the same considerations lead to similar conditions and restrictions for the time step and sample locations. Therefore, we are able to process the auxiliary function assuring stability by choosing appropriate neighbors and a small enough time step.</p><p>In practice, we observed that when choosing the 26 nearest neighbors and small enough time steps ∆t in Equation 6, we never ran into stability problems. To derive an estimate for a time step ∆t we transferred the considerations by Osher and Fedkiw <ref type="bibr" target="#b21">[22]</ref> to our case. The condition for the hyperbolic normal advection becomes</p><formula xml:id="formula_26">∆t</formula><formula xml:id="formula_27">a | f − f iso − ϕ| d min |∇ϕ| ∂ ϕ ∂ x 1 + ∂ ϕ ∂ x 2 + ∂ ϕ ∂ x 3 &lt; 1 ,</formula><p>where d min denotes the Euclidian distance to the nearest neighbor, i. e. the radius of the minimal domain of dependence. The condition for the whole evolution becomes</p><formula xml:id="formula_28">∆t</formula><formula xml:id="formula_29">a | f − f iso − ϕ| d min |∇ϕ| ∂ ϕ ∂ x 1 + ∂ ϕ ∂ x 2 + ∂ ϕ ∂ x 3 + 6b d 2 min &lt; 1 .</formula><p>Although there is no evidence that this criterion ensures stability, it worked out well for all the practical cases we considered. While from a theoretical point of view, we can ensure stability by choosing appropriate neighbors and time steps with respect to Equations <ref type="bibr" target="#b7">(8)</ref> to <ref type="bibr" target="#b10">(11)</ref>, for practical purposes it is beneficial to use a larger number of neighbors, as larger number of neighbors (26 in our examples) ensure better gradient approximations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Synchronous Time Integration</head><p>Time steps have to be small enough to ensure stability, i. e., the physical domain of dependence is required to lie in the domain of dependence of the finite difference scheme. All these considerations are done in a fixed sample point at a certain point in time. If we want to apply a global time step for all sample points, it is bounded by the most restrictive stability condition when considering all points. Thus, if the sample points have a highly varying distribution or if the underlying scalar field has big local variations, time steps for all points may be bounded by the rather restrictive stability condition of a few points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Asynchronous Time Integration</head><p>To alleviate this potential drawback, one can use asynchronous time integration. Here, like in global time integration, all sample points start at the same point in time. Then for each sample point one time step is computed, only bounded by the local stability condition. As shown in <ref type="figure" target="#fig_1">Figure 3</ref> most of the sample points are now asynchronous. To compute the next step for any of the sample points, one would have to evaluate the function values at other sample points at the same point in time.</p><p>Fortunately, using the linear Euler time integration we can circumvent this time consuming step. If we save for every sample point not only its current function value and point in time but also the previous function value and point in time, we are able to reconstruct all function values between the previous two points in time by linear interpolation. In <ref type="figure" target="#fig_2">Figure 4</ref>, the asynchronous time integration process is visualized. After having computed the first time step, the time line is set to the earliest subsequent point in time. Afterwards the function values of the neighbors are linearly interpolated at this point in time. This interpolation can be performed for all neighbors, since we are always updating the nearest point in time, i. e., we are processing the earliest sample point. Hence, for all other sample points we can access stored values for a future point in time and a past point in time with respect to the current time line. With the interpolated properties, the auxiliary function at the current sample point is integrated in time with the local time-step restriction and the time line proceeds to the next point in time.</p><p>If at any time the norm of the auxiliary function gradient exceeds the given threshold, the time line is stopped, all sample points are interpolated to the current point in time, and the reinitialization process is started. During reinitialization the time steps are also bounded by a stability condition and asynchronous time integration is applied in the same way as described before.</p><p>The whole evolution process stops, if the function values of the sample points change no more with respect to a certain tolerance, i. e. when the process reaches steady state. In this case, the function values of the sample points are interpolated to the current time line and we get a synchronous auxiliary function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">ISOSURFACE EXTRACTION AND RENDERING</head><p>To obtain the smooth isosurface to the initial data set, the zero isosurface of the auxiliary function after convergence is extracted. This is done using an isosurface extraction approach for unstructured pointbased volume data presented by Rosenthal and Linsen <ref type="bibr" target="#b28">[29]</ref>. An appropriate neighborhood is generated for each sample out of the kd-tree structure. For fast access to the nodes of the kd-tree and efficient calculation of the neighborhood, an efficient indexing scheme has been introduced.</p><p>Exploiting the indexing scheme for fast neighbor computation, isopoints are linearly interpolated between neighboring samples with different auxiliary function signs, where the neighborhood approximates a natural neighborhood. The surface normals to the isopoints are interpolated using a four-dimensional least-squares approach. As a result we get the isosurface represented as a point cloud including surface normals.</p><p>Since no connectivity of the generated points of the point cloud is known, a point-based rendering is favorable. The only information we have, are the interpolated function values and normals of the surface points as well as the nearest neighbors. From this information we can generate a splat-based representation of the isosurface using a leastsquares approach. The resulting splats are rendered using a pointbased raytracing technique <ref type="bibr" target="#b15">[16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">RESULTS AND DISCUSSION</head><p>We applied the presented approach to a variety of data sets to verify our method. For performance analysis we applied it to a resampled unstructured point-based data set of 4M randomly distributed samples, generated from the regular Hydrogen data set of size 128 × 128 × 128. An illustration of the evolution process for this data set is shown in <ref type="figure" target="#fig_3">Figure 5</ref>.</p><p>To compare the computation times, we downsampled the data set to different sizes. These and the following computation times were measured on a 2.66 GHZ XEON processor. The runtime analysis for the preprocessing is presented in <ref type="table" target="#tab_1">Table 1</ref> The runtimes for the isopoint extraction were also analyzed regarding the Hydrogen data set. A summary of the results including the</p><p>Step 0</p><p>Step 1</p><p>Step 2</p><p>Step 3</p><p>Step 4</p><p>Step 5</p><p>Step 6</p><p>Step 7</p><p>Step 8 number of samples, number of extracted zero-level-set points, calculation time for the neighborhood information, and calculation time for the point extraction is shown in <ref type="table">Table 2</ref>. Because of some tuning in the implementation, we achieved significantly faster results than those stated by Rosenthal and Linsen <ref type="bibr" target="#b28">[29]</ref>.  <ref type="table">Table 2</ref>. Isopoint extraction times for the hydrogen data set. The number of extracted surface points and extraction times refer to the zero isosurface to the auxiliary function after convergence of the evolution process.</p><p>The whole method applied to the 4M hydrogen data set, including preprocessing, evolution of the auxiliary function with synchronous time integration, and isopoint extraction lasted 22 minutes. A detailed analysis of the computation times of the evolution process and the reinitialization is given in <ref type="table">Table 3</ref>. We observed that an asynchronous update step is significantly slower than a synchronous one. Thus, using an adaptive time integration scheme only pays off in case of heavily varying sample density.</p><p>aux. function evolution reinitialization synchr. int. 59k samp./sec 88k samp./sec asynchr. int.</p><p>2k samp./sec 46k samp./sec <ref type="table">Table 3</ref>. Computation times comparison for the evolution and the reinitialization process with synchronous and asynchronous time integration. The times are specified in thousand processed sample points per second.</p><p>Finally we applied our method to a real-world example of an unstructured point-based volume data sets, provided by astrophysical particle simulations of Stephan Rosswog, Jacobs University, Bremen, Germany. In the simulation, a set of particles representing a White Dwarf passes a black hole and is torn apart by the strong gravity.</p><p>The data sets represent a snapshot of this simulation at a certain point in time, where several physical properties are given. Two smooth isosurfaces to different isovalues were extracted from a density data set with 500k sample points. They are shown in <ref type="figure" target="#fig_4">Figure 6</ref>. The whole process with asynchronous time integration lasted 68 minutes.</p><p>To compare our PDE-based surface extraction approach to direct isosurface extraction in terms of quality of the extracted surface, we extracted an isosurface from the 500k White Dwarf data set with both algorithms. A visualization of the extracted point clouds is presented in <ref type="figure">Figure 7</ref>. The output generated by the PDE-based approach does not exhibit any outliers and results in a much smoother surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="11">CONCLUSION AND FUTURE WORK</head><p>We have presented a smooth surface extraction method that can directly be applied to unstructured point-based volume data sets. No global or local three-dimensional mesh generation or reconstruction over a regular grid is applied. The presented approach is able to extract surfaces with respect to normal advection to a scalar field and mean curvature flow.</p><p>In a preprocessing step, the samples are stored in a kd-tree and for every sample the nearest neighbors are calculated. Afterwards, an auxiliary function is initialized as a signed distance function. Subsequently, the evolution of this function begins.</p><p>The needed properties of the auxiliary function, like gradient or mean curvature, are approximated using four-dimensional leastsquares approaches and the function is processed according to hyperbolic normal advection and mean curvature flow. If the auxiliary function departs from a signed-distance function, a reinitialization is performed. For time integration of the evolutions, a synchronous or an asynchronous approach are applied assuring stable time steps. The auxiliary function is processed until it reaches a steady state.</p><p>To visualize the computed surface, a point cloud representing of the zero isosurface to the auxiliary function is extracted. A point-based rendering technique using splats is executed on this point cloud. To analyze our method, we applied it to several data sets.</p><p>In terms of future work a localization of the algorithm, similar to the ideas by Peng et al. <ref type="bibr" target="#b27">[28]</ref>, as well as an integration of the reinitialization step into the processing of the auxiliary function, as proposed by Lefohn et al. <ref type="bibr" target="#b14">[15]</ref>, could be considered to speed up the calculations. Also, the nearest neighbor calculation can be improved using faster algorithms <ref type="bibr" target="#b16">[17]</ref>. A general question would be, if it is reasonable to use higher-order time discretization schemes for the evolution process like the ones proposed by Gottlieb et al. <ref type="bibr" target="#b11">[12]</ref>. Finally, the rendering engine should be improved, since the splatting approach used has problems with handling sharp edges <ref type="bibr" target="#b26">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A GRADIENT CALCULATION IN R 3</head><p>For the partial derivative of the function ϕ : R 3 → R, represented through the points (x i , y i , z i , ϕ i ), i = 1, . . . , n, in y-direction we get ∂ ϕ ∂ y = <ref type="figure">Fig. 7</ref>. Comparison between direct isosurface extraction on the left side and smooth isosurface extraction on the right side for the 500K White Dwarf simulation data set. To illustrate the significant advantage of the PDE-based approach over direct isosurface extraction, we include a close-up view on the surface and show a rendering of the surface points with very small splats.</p><formula xml:id="formula_30">X 1 n ∑ i=1 x i ϕ i + X 2 n ∑ i=1 y i ϕ i + X 3 n ∑ i=1 z i ϕ i + X 4 n ∑ i=1 ϕ i Y ,</formula><p>where</p><formula xml:id="formula_31">X 1 = n ∑ i=1 x i y i   n n ∑ i=1 z 2 i − n ∑ i=1 z i 2   + n ∑ i=1 x i z i n ∑ i=1 y i n ∑ i=1 z i − n n ∑ i=1 y i z i + n ∑ i=1 x i n ∑ i=1 y i z i n ∑ i=1 z i − n ∑ i=1 y i n ∑ i=1 z 2 i X 2 = n ∑ i=1 x 2 i   n ∑ i=1 z i 2 − n n ∑ i=1 z 2 i   + n ∑ i=1 x i z i n n ∑ i=1 x i z i − n ∑ i=1 x i n ∑ i=1 z i + n ∑ i=1 x i n ∑ i=1 x i n ∑ i=1 z 2 i − n ∑ i=1 x i z i n ∑ i=1 z i X 3 = n ∑ i=1 x 2 i n n ∑ i=1 y i z i − n ∑ i=1 y i n ∑ i=1 z i + n ∑ i=1 x i y i n ∑ i=1 x i n ∑ i=1 z i − n n ∑ i=1 x i z i + n ∑ i=1 x i n ∑ i=1 x i z i n ∑ i=1 y i − n ∑ i=1 x i n ∑ i=1 y i z i X 4 = n ∑ i=1 x 2 i n ∑ i=1 y i n ∑ i=1 z 2 i − n ∑ i=1 y i z i n ∑ i=1 z i + n ∑ i=1 x i y i n ∑ i=1 x i z i n ∑ i=1 z i − n ∑ i=1 x i n ∑ i=1 z 2 i + n ∑ i=1 x i z i n ∑ i=1 x i n ∑ i=1 y i z i − n ∑ i=1 x i z i n ∑ i=1 y i and Y = n ∑ i=1 y i z i 2   n n ∑ i=1 x 2 i − n ∑ i=1 x i 2   + n ∑ i=1 x i z i 2   n n ∑ i=1 y 2 i − n ∑ i=1 y i 2   +   n ∑ i=1 x i y i 2 − n ∑ i=1 x 2 i n ∑ i=1 y 2 i     n n ∑ i=1 z 2 i − n ∑ i=1 z i 2   + n ∑ i=1 y i n ∑ i=1 z 2 i n ∑ i=1 x 2 i n ∑ i=1 y i − n ∑ i=1 x i n ∑ i=1 x i y i + n ∑ i=1 x i n ∑ i=1 z 2 i n ∑ i=1 x i n ∑ i=1 y 2 i − n ∑ i=1 x i y i n ∑ i=1 y i + 2 n ∑ i=1 x i n ∑ i=1 x i z i n ∑ i=1 y i n ∑ i=1 y i z i − n ∑ i=1 y 2 i n ∑ i=1 z i + 2 n ∑ i=1 x i y i n ∑ i=1 y i z i n ∑ i=1 x i n ∑ i=1 z i − n n ∑ i=1 x i z i + 2 n ∑ i=1 y i n ∑ i=1 z i n ∑ i=1 x i y i n ∑ i=1 x i z i − n ∑ i=1 x 2 i n ∑ i=1 y i z i .</formula><p>Analogously, we obtain the partial derivatives in x-and z-direction.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Relation between the normal to the graph and gradient of a onedimensional scalar function ϕ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Sample point time positions before the time integration (marked in red) and after the first time step (marked in green).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Progress of time line through the sample points. The earliest sample point is processed further using the linearly interpolated function values (marked in blue) of its neighbors.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Point-based raytracing of the smooth isosurface extraction process on the Hydrogen data set with 4M randomly distributed sample points. (Data set courtesy of Peter Fassbinder and Wolfgang Schweizer, SFB 382 University Tübingen.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Isosurfaces of the 500k White Dwarf simulation data set. The underlying scalar field represents the density in space. We segmented the data set regarding 40g/cm 3 (surface on the left side) and 100g/cm 3 (surface on the right side). (Data set courtesy of Stephan Rosswog, Jacobs University, Bremen, Germany.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Computation times for the preprocessing of the Hydrogen data set with different sample quantities. The preprocessing includes the generation of the kd-tree and nearest neighbor calculation.</figDesc><table><row><cell>.</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>This work was supported by the Deutsche Forschungsgemeinschaft (DFG) under project grant LI-1530/6-1.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bracewell</surname></persName>
		</author>
		<title level="m">The Fourier Transform and Its Applications. McGraw-Hill Science Engineering</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
	<note>3 edition</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Level set segmentation of biological volume data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Breen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Museth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhukov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Medical Image Analysis</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Kluwer</publisher>
			<date type="published" when="2005" />
			<biblScope unit="volume">I</biblScope>
			<biblScope unit="page" from="415" to="478" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On partial difference equations of mathematical physics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Courant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Friedrichs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lewy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IBM J</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="215" to="222" />
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Fourier Series and Integrals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Dym</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mckean</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1972" />
			<publisher>Academic Press Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A fast and accurate semilagrangian particle level set method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Enright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Losasso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Structures</title>
		<imprint>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="issue">6-7</biblScope>
			<biblScope unit="page" from="479" to="490" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The volume preserving mean curvature flow near spheres</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Escher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Simonett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the</title>
		<meeting>the</meeting>
		<imprint>
			<publisher>American Mathematical Society</publisher>
			<date type="published" when="1998" />
			<biblScope unit="volume">126</biblScope>
			<biblScope unit="page" from="2789" to="2796" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Motion of level sets by mean curvature I</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">C</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Spruck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Diff. Geometry</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="635" to="681" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Motion of level sets by mean curvature II</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">C</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Spruck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. American Math. Soc</title>
		<imprint>
			<biblScope unit="volume">330</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Motion of level sets by mean curvature III</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">C</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Spruck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Geometric Analysis</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<title level="m">Geometric Modeling: Methods and Applications, chapter Scattered Data Interpolation: A Tutorial and Survey</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="131" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An algorithm for finding best matches in logarithmic expected time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Bentley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Finkel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Math. Softw</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="209" to="226" />
			<date type="published" when="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Strong stability-preserving highorder time discretization methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gottlieb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-W</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tadmor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Rev</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="89" to="112" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A lagrangian particle level set method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Hieber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Koumoutsakos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Phys</title>
		<imprint>
			<biblScope unit="volume">210</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="342" to="367" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Partial differential equations with numerical methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Larsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Thome</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Interactive deformation and visualization of level set surfaces using graphics hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E</forename><surname>Lefohn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;03: Proceedings of the 14th IEEE Visualization 2003 (VIS&apos;03)</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page">11</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Splat-based ray tracing of point clouds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Linsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rosenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of WSCG</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1-3</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A fast nearest-neighbor algorithm based on a principal axis search tree</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcnames</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="964" to="976" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">An Adaptive Level-Set Method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Milne</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
		<respStmt>
			<orgName>University of California, Berkeley</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Active contours using a constraint-based implicit representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">S</forename><surname>Morse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Yoo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Subramanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVPR &apos;05: Proceedings of the 2005 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR&apos;05</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="285" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Level set segmentation from multiple non-uniform volume datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Museth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Breen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhukov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;02: Proceedings of the conference on Visualization &apos;02</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="179" to="186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Self-adaptive time integration of flux-conservative equations with sources</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">A</forename><surname>Omelchenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Karimabadi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Phys</title>
		<imprint>
			<biblScope unit="volume">216</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="179" to="194" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Level set methods and dynamic implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Fronts propagating with curvature-dependent speed: Algorithms based on hamilton-jacobi formualtions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="issue">79</biblScope>
			<biblScope unit="page" from="12" to="49" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Computer modeling in cardiac electrophysiology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">F</forename><surname>Otani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Phys</title>
		<imprint>
			<biblScope unit="volume">161</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="21" to="34" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A framework for real-time volume visualization of streaming scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Linsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Tenth International Fall Workshop on Vision, Modeling, and Visualization</title>
		<editor>M. Stamminger and J. Hornegger</editor>
		<meeting>Tenth International Fall Workshop on Vision, Modeling, and Visualization</meeting>
		<imprint>
			<publisher>DFG Collaborative Research Center</publisher>
			<date type="published" when="2005" />
			<biblScope unit="volume">507</biblScope>
			<biblScope unit="page" from="225" to="232" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Discrete Sibson interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">W</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Linsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="243" to="253" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Shape modeling with point-sampled geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pauly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Keiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">P</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="641" to="650" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A pde-based fast local level set method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Merriman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Phys</title>
		<imprint>
			<biblScope unit="volume">155</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="410" to="438" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Direct isosurface extraction from scattered volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rosenthal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Linsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics/IEEE-VGTC Symposium on Visualization</title>
		<meeting>Eurographics/IEEE-VGTC Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="99" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Level Set Methods and Fast Marching Methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Sethian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, UK</pubPlace>
		</imprint>
	</monogr>
	<note>second edition edition</note>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Tree methods for moving interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Strain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Phys</title>
		<imprint>
			<biblScope unit="volume">151</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="616" to="648" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Finite difference schemes and partial differential equations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Strikwerda</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Wadsworth Publ. Co</publisher>
			<pubPlace>Belmont, CA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An adaptive level set approach for incompressible twophase flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Almgren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Colella</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">H</forename><surname>Howell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Welcome</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Phys</title>
		<imprint>
			<biblScope unit="volume">148</biblScope>
			<biblScope unit="page" from="81" to="124" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Thomas</surname></persName>
		</author>
		<title level="m">Numerical Partial Differential Equations</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
