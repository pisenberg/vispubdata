<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Visualization and Analysis of Transitional Flow</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2008-10-19">19 October 2008</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">P</forename><surname>Johnson</surname></persName>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Victor</forename><forename type="middle">M</forename><surname>Calo</surname></persName>
							<email>victor@ices.utexas.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Kelly</forename><forename type="middle">P</forename><surname>Gaither</surname></persName>
						</author>
						<title level="a" type="main">Interactive Visualization and Analysis of Transitional Flow</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2008-10-19">19 October 2008</date>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2008; accepted 1 August 2008; posted online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Applications of Visualization</term>
					<term>Flow Visualization</term>
					<term>Transitional Flow</term>
					<term>Turbulence</term>
				</keywords>
			</textClass>
			<abstract>
				<p>A stand-alone visualization application has been developed by a multidisciplinary , collaborative team with the sole purpose of creating an interactive exploration environment allowing turbulent flow researchers to experiment and validate hypotheses using visualization. This system has specific optimizations made in data management, caching computations, and visualization allowing for the interactive exploration of datasets on the order of 1TB in size. Using this application, the user (co-author Calo) is able to interactively visualize and analyze all regions of a transitional flow volume, including the laminar, transitional and fully turbulent regions. The underlying goal of the visualizations produced from these transitional flow simulations is to localize turbulent spots in the laminar region of the boundary layer, determine under which conditions they form, and follow their evolution. The initiation of turbulent spots, which ultimately lead to full turbulence, was located via a proposed feature detection condition and verified by experimental results. The conditions under which these turbulent spots form and coalesce are validated and presented.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Fully turbulent flow generally occurs at high rates of speed and contains stochastic structures such as eddies and wakes. Laminar flow, on the other hand, is smooth and generally occurs at lower rates of speed. Transitional flow is a mixture of laminar and turbulent flow.</p><p>In the presence of free-stream turbulence, transition to turbulence of a boundary layer is known as bypass transition. At present, there is no satisfactory theory describing all stages of bypass transition. The transition process, however, is governed by the formation and growth of turbulent spots.</p><p>Turbulent spots are sudden bursts of three-dimensional fluctuations that occur in an otherwise orderly, mostly two-dimensional flow region. These spots have a well defined and characteristic form. They grow and drift downstream to coalesce with the fully turbulent boundary layer region. Conditions causing turbulent spots, however, are not well defined and are the subject of study in this work. Current methods for visualizing turbulent fluid flow do not allow the researcher the ability to interactively navigate and manipulate large-scale volumetric turbulent data with the appropriate controls for stopping and investigating both cause and effect of multiple flow conditions. More details regarding turbulent flow can be found in <ref type="bibr" target="#b20">[21]</ref>.</p><p>Our objective is to elucidate the mechanisms which control the transition process. To do so, we seek to locate the instantaneous location of a turbulent spot and determine the flow conditions that lead to its formation. To accomplish this objective, we developed a set of visualization and data analysis/feature detection modules that effectively allow us to study the flow behavior in time-varying, terascale, turbulence datasets using desktop computers. With these tools in place we are able to follow spot formation and validate some of the bypass transition models proposed in previous literature <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b17">18]</ref>.</p><p>Shown in <ref type="figure" target="#fig_0">Figure 1</ref> are isosurface representations of streamwise and spanwise fluctuations of the velocity field that show some characteristic features of this transitional flow. The mean flow direction is from left to right. Velocity fluctuations are instantaneous oscillations with respect to the temporal mean; for example, a positive streamwise fluc-tuation implies that a fluid particle is moving instantaneously faster than the mean.</p><p>In this paper, we present the application of data management, data analysis, and visualization techniques to the investigation of bypass transition. An integrated set of interactive visualization and data analysis modules have been developed to specifically facilitate the rapid investigation of our turbulent flow datasets, but the work is not limited to turbulent flows. This work provides the following contributions:</p><p>• presents an integrated architecture that allows for the interactive exploration of datasets using feature detection conditions that are complex functions of dataset variables. • presents methods for interactively visualizing terascale-sized time-varying datasets in a workstation environment (e.g. particle paths through a terascale-sized time series). • presents a feature detection condition that can be used to predict turbulent spots that lead to transition from laminar to turbulent flow.</p><p>We begin by providing an overview of background material and related work, a brief overview of the datasets under examination, an overview of the visualization and data analysis methods developed, results from our investigation, and conclusions that can be drawn from this work and applied to other domains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND AND RELATED WORK</head><p>In this section we compare our system's capabilities with existing visualization systems, and overview the specific techniques that were developed to facilitate our investigation. ParaView is an open source system created by Kitware in conjunction with Jim Ahrens <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref>. Paraview provides scalable parallel processing tools with an emphasis on distributed memory implementations. The Paraview framework is based on VTK and solves the large data visualization issue with parallel processing, client/server separation, and render server/data server separation. The Paraview system is somewhat constrained by the underlying format of the data. The EnSight visualization software is CEI's commercial solution for data visualization for science and engineering <ref type="bibr" target="#b0">[1]</ref>. Rather than streaming the data into the application, the EnSight 8.2 software decomposes data on the fly. It does not use a tiled approach, but rather decomposes the data based on the underlying structure or format. A number of the CFD related formats are organized hierarchically based on geometric construction and have a strong tie to the CAD formats. These formats do not always allow for efficient data management when performing time-dependent operations such as particle path tracing. EnSight is based on the Server-Of-Servers (SOS) architecture and parallelizes all server-side operations across multiple EnSight servers to handle terabyte datasets <ref type="bibr" target="#b22">[23]</ref>. Although EnSight has the raw visualization capabilities present in our The upper-left region shows free stream turbulence evolution indicated by positive and negative velocity fluctuations represented with blue and magenta isosurfaces, respectively. In the middle, we see the laminar region of the boundary layer characterized by elongated streaks of streamwise velocity fluctuation (elongated cyan and red isosurfaces, which represent slower and faster fluid, respectively). Turbulent spot formation and evolution is visible, which ultimately leads to full turbulence at the right of the volume.</p><p>system, we needed the added flexibility of defining and executing a variety of feature conditions to verify and validate the conditions under which turbulent spots form. VisIt, available through Lawrence Livermore National Laboratories (LLNL) is a free interactive parallel visualization and graphical analysis tool for viewing large-scale scientific data. The system was developed to visualize and analyze the results of terascale simulations. While this system and Lawrence Berkeley National Laboratory's Visapult provide nice mechanisms for dealing with data at very large scales, they did not provide the tools for querying and investigating data at the levels necessary for proving or disproving mathematical theories.</p><p>Our system is specifically designed to enable the interactive, realtime exploration of terascale transitional flow datasets. Additional works that also focused on the visualization of terascale datasets can be found in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b30">31]</ref>. The systems mentioned previously did not provide the full suite of capabilities that we needed to perform our investigation. We specifically focused on optimizing both data management (Sec. 4.1) and caching computations (Sec. 4.1.2). These optimizations allow us, using a desktop computer, to quickly calculate particle paths through terabyte sized datasets, as well as quickly animate a visualization through a time series. Further, we built in capabilities to allow us to test feature detection conditions on the data. Although our application only supports a relatively small set of visualization methods compared to other applications, we found these methods to be sufficient for our investigation. Much of the work in this paper is an extension of methods that have been available for many years. The Field Encapsulation Library (FEL) developed out of NASA Ames addressed the interactive visualization of large-scale, time-varying fluid simulation datasets <ref type="bibr" target="#b23">[24]</ref>.</p><p>Previous efforts for visualizing turbulent flow have focused less on the visualization as a means for detecting the transition region and more on the overall trend of the fluid flow <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b28">29,</ref><ref type="bibr" target="#b13">14]</ref>. The visualization solution for the problem presented in this paper is a custom developed application designed specifically to test theories behind bypass transition. Several factors led to this choice. The primary reason is that we were unable to find existing software packages and resources that were able to interactively manipulate and visualize this size of data (∼1TB) <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b0">1]</ref>. A custom application was developed with optimizations built in to allow visualizing and analyzing the full datasets efficiently. The following features have been optimized in our visualization application: streamlines (particle traces in space for a fixed time step); particle paths (particles traced over time); and isosurfaces. This combination of capabilities allows the user to efficiently locate interesting flow features. To analyze bypass transition data, it is very convenient to test functional criteria like the one proposed by Johnson <ref type="bibr" target="#b16">[17]</ref> to find turbulent spot locations. This significantly reduces time-consuming visual experimentation with the data, and made a significant breakthrough for co-author Calo whose research involves the study of transitional flow and turbulent spots. Additionally, this type of transition process is very important for several industrial applications such as the design of cooling devices, gas turbine engines and vehicles <ref type="bibr" target="#b21">[22]</ref>.</p><p>Transition of a laminar boundary layer to fully developed turbulence is a complex phenomenon, particularly in the presence of a turbulent free-stream. The free-stream fluctuations produce highintensity, low-frequency fluctuations inside the boundary layer. These fluctuations can have intensities that are orders of magnitude larger than their free-stream originators. The interaction of the laminar boundary layer with the free-stream turbulence produces streamwise velocity fluctuations inside the boundary layer, which form elongated structures. These structures represent bodies of fluid convected at alternating lower and higher speeds than the mean flow, in the spanwise direction. When these elongated structures become unstable, a sudden burst of three-dimensional fluctuations occur and a turbulent spot is generated at this random location, while the flow surrounding it remains laminar. The turbulent spots grow transversely and longitudinally while convected downstream. When a spot traveling downstream comes in contact with a neighboring one, they merge and coalesce. Eventually spot growth and merging will turn the full boundary layer turbulent. This process of transition from laminar to turbulent is known as bypass transition, as the free-stream forcing bypasses the eigenmodes' growth of the linearized Navier-Stokes operator (the Tollmien-Schlichting waves) <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DATA</head><p>We have applied our visualization and data analysis methods to highresolution simulations of the laminar-to-turbulent transition in a viscous boundary layer. This boundary layer is produced by turbulent flow past a flat plate at zero angle of attack. The datasets analyzed were computed using an efficient parallel implementation of a secondorder finite difference discretization on a rectilinear structured grid (for details, see <ref type="bibr" target="#b6">[7]</ref> and references therein). Each simulation ran until sta- <ref type="table">Table 1</ref>. Transitional flow datasets used for visualization and analysis. <ref type="table">Total  A 2050 x 182 x 194  2 GB  500  1 TB  B  1026 x 92 x 98  282 MB  1500  400 GB</ref> tistically stationary results were obtained. The output from a simulation includes instantaneous velocity and pressure fields, as well as several statistical quantities. Each dataset was post-processed and the following quantities were output for visualization: instantaneous velocity and pressure, and velocity and pressure fluctuations. The latter quantities were computed by subtracting each field's mean from its instantaneous value. Two simulations were performed to produce datasets for analysis. The first included about 288,000,000 unknowns for a single time step size of over 2 GB. Approximately 500 time steps were saved to visualize particle trajectories through time and space. This resulted in a total dataset size of approximately 1 TB (Dataset A). The second simulation included approximately 37,000,000 unknowns for a single time step size of approximately 282 MB. 1500 time steps were saved, for a total dataset size of over 400 GB (Dataset B). Specific dataset information is summarized in <ref type="table">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Grid Dimensions Time Step Size # Time Steps</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">METHODS FOR FACILITATING INTERACTIVE EXPLORATION</head><p>OF TURBULENT SPOTS Our set of visualization and data analysis/feature detection modules were developed as a collaborative effort between visualization scientists and computational fluid dynamicists. The size and scale of datasets made this particular problem cumbersome.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Data Management</head><p>Several precedents have been set in the area of data management that encourage the time spent on optimizing the management and manipulation of data <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b10">11]</ref>. These optimizations allow users to easily explore terabyte datasets interactively from their workstations, avoiding the dependence on large-memory multi-processor machines.</p><p>For many types of visualization, it is possible to load entire datasets into available main memory. However, with terascale datasets, this is not always possible without first converting the data into a manageable format. Thus, a more optimal method for managing data is required. Before such a method could be devised, we had to consider typical data access patterns for our research. For the transitional flow datasets, two of the most common visualization operations needed by the fluid dynamicists are isosurfacing and particle tracing. They do not often need to isosurface an entire flow volume; in many cases they can narrow down the area of interest. For the case of transitional boundary layer flow, we know ahead of time that we are primarily interested in the region proximal to the wall. This reduces the data we are interested in to about 70% of the full dataset as most degrees of freedom are located in the wall proximity. Thus, we can narrow our focus to the geometric regions of interest in the dataset, and load only that into memory. By similar reasoning, the same is true for particle tracing. For particle paths, there is an additional consideration. In this case, we only need a small geometric region of data from each time step. How small this region is depends on the speed of the particle with respect to the time elapsed between time steps of data. If particles move a great distance between time steps, the size of this region tends to be larger. Conversely, if the particles move only a short distance between time steps, the size of this region tends to be smaller. The latter situation is true for particles flowing through the boundary layer, as the particle velocity at the wall is zero and falls off in the shape of a parabolic curve. For this reason, loading in smaller geometric regions of data is even more advantageous for particle path advection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Data Tiling</head><p>The considerations outlined previously led to the development of a data tiling system for managing the datasets. Tile dimensions are given preset values based on heuristics obtained from the data, but the user Input: variable, time, x, y, z Output: variable value / * get the tile number for the tile containing the point (x, y, z) * / tile number = get tile number(x, y, z) ; / * load the tile if it isn't already * / if tile is loaded(time, tile number) == false then tile load(time, tile number) ; num loaded tiles = num loaded tiles + 1 ; end / * set the age of this tile to 0 * / tile set age(time, tile number, 0) ; / * return the variable's value * / return tile get value(time, tile number, variable, x, y, z) ; Algorithm 1: The algorithm for retrieving variable values using the data tiling scheme is shown. Tiles are loaded on demand, and their age is reset to zero upon access. A counter keeps track of the total number of loaded tiles.</p><p>Global variables: num loaded tiles, max number of loaded tiles struct data tile { time tile number tile age data type * data } is also able to specify the tile dimensions for best performance. The choice of these dimensions can be motivated by both knowledge of the data access patterns (e.g., visualization tasks) and experimentation. The data tiling system allows the application to load data "on-demand" -that is, when a value is requested at a given location, the appropriate tile will be loaded if it is not already in memory. This algorithm is shown in Algorithm 1. Recall that the initial reason for data tiling was the inability to load the entire dataset into available memory. Thus, we have provisions in the data tiling system to ensure our memory usage never exceeds the amount available on the platform it is running on.</p><p>Further, we try to minimize disk usage since it impacts performance significantly. Therefore, we add two more parameters to the data tiling system: maximum number of resident tiles and tile age. The current number of resident tiles is incremented and decremented as tiles are loaded and unloaded. The tile age for each tile is incremented at every frame, and reset to zero on a tile access. The complete data structures for the tiling scheme is shown in <ref type="figure" target="#fig_1">Figure 2</ref>. Then, whenever the current number of resident tiles exceeds its maximum value, the oldest tiles are purged from memory. These two added parameters guarantee that data is only unloaded when necessary, and that the least likely reused data is first to be purged. Note that each tile has a constant byte size, so we are able to indirectly specify the available memory to the application through the maximum number of resident tiles parameter. The algorithm for memory management of the tiles is shown in Algorithm 2.</p><p>Data tiling with small tile sizes is especially effective in speeding up particle trace computations. For streamlines, small tiles from an individual time step are loaded on demand during the calculation. Given that a streamline will only traverse a small portion of the data volume at any timestep, only a small portion of the data needs to be loaded. A smaller data tile size causes the application to load less unnecessary data and speeds up the calculation since disk usage decreases significantly. This concept is shown for a two-dimensional example in <ref type="figure" target="#fig_2">Figure 3</ref>. The performance benefit is even greater for particle path computations. In this case, particles are being propagated <ref type="figure" target="#fig_2">Fig. 3</ref>. A two-dimensional example of data tiling. The red line is an arbitrary particle trace, and the gray areas indicate loaded data. Smaller tile dimensions (right) are more efficient than larger tile dimensions (left). through the time series. The portion of the data volume traversed in each time step is even smaller. For these reasons, a small tile size optimizes disk usage. <ref type="table">Table 2</ref> shows performance results for various tile sizes in a particle path computation. The data tiling optimization makes it possible to calculate particle traces through large amounts of data at interactive frame rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Caching Computations</head><p>There are many operations which tend to be performed repeatedly on a fluid simulation dataset. One of the most common and predictable is isosurfacing. Isosurfacing requires that all data within a volume of interest be loaded and processed piece by piece, thus being a data (I/O) and processor (CPU) intensive operation. Reducing how often this operation takes place increases interactive performance dramatically. For the transitional flow datasets, we assumed that users would need the ability to repeatedly display and interact with isosurfaces at different isovalues. The user has the flexibility to decide at any given time what isovalue to calculate. If the corresponding isosurface has already been calculated at some previous session on that dataset, then it is cached and can be loaded from file on disk. If it has not been calculated, our modified version of Marching Cubes is used to compute that isosurface and the isosurface is then cached on disk. This algorithm is detailed in Algorithm 3.</p><p>Saving the isosurface data to disk was of great benefit. Several parameters uniquely identify an isosurface: tile number, time, variable, isovalue and triangle list. Isosurfaces are saved to a filename composed of tile number, time, variable and isovalue for later use. On future isosurface calculations, this file is loaded if present; otherwise isosurfacing proceeds as normal. Caching isosurface computations increases performance by eliminating redundant computations and by reducing data loading. Caching computations has many of the same benefits as preprocessing the data, albeit with some differences. On Input: time, variable, isovalue Output: isosurface for the active volume / * iterate through all tiles in the active volume * / for all tiles in the active volume do / * if we've got the isosurface cached * / if cached isosurface exists(tile, time, variable, isovalue then / * load the cached isosurface * / load cached isosurface(tile, time, variable, isovalue); / * draw the isosurface * / draw isosurface(tile, time, variable, isovalue); else / * compute the isosurface * / compute isosurface(tile, time, variable, isovalue); / * draw the isosurface * / draw isosurface(tile, time, variable, isovalue); / * cache isosurface for later use * / cache isosurface(tile, time, variable, isovalue); end end Algorithm 3: The algorithm for drawing an isosurface in the active volume for a given time, variable and isovalue is shown. For each tile in the active volume, the cached isosurface is drawn if it exists. Otherwise, the isosurface is computed for the tile, drawn and cached to disk for later retrieval.</p><p>the first use of the visualization application, users will have to wait for computations to occur. However, users have complete freedom in determining on-the-fly what is of interest to them in the data-something that strictly preprocessing does not allow. Caching isosurface computations also makes quick re-exploration of data possible, as well as interactively traversing a time series.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Visual Inspection Methods</head><p>As requested by the fluid dynamicists, three fundamental visualization algorithms are made available to visualize the transitional flow: cutting planes, isosurfaces and particle traces. We have extended the common visualization techniques to operate effectively and efficiently for our purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Cutting Planes</head><p>Cutting planes are perhaps the simplest visualization algorithm and are not a new visualization method. However, they are still immensely useful in examining data, and are a staple for fluid dynamicists trying to understand fluid flow behavior. In our system, the user is able to add an arbitrary number of x-y, y-z and x-z cutting planes to the visualization. Cutting planes are rendered as OpenGL textures for increased performance with a level of detail specified by the user <ref type="bibr" target="#b25">[26]</ref>. Further, the cutting planes can be rendered with transparency using a (GL SRC ALPHA, GL ONE) OpenGL blending function, which does not require sorting. This allows us to render cutting planes in combination with other rendering methods as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Isosurfaces</head><p>Isosurfaces are a primary method of visualizing data in this application. They are calculated using a modified Marching Cubes algorithm <ref type="bibr" target="#b18">[19]</ref>. Isosurfaces are calculated per tile at two resolutions. The data is first processed cell by cell at low resolution to determine what particular cells contribute to the isosurface. The cells that do contribute to the isosurface are then processed at a higher resolution to get a smoother surface. These resolutions are chosen by the user through the visualization application's user interface. A user can choose a very coarse first resolution with a finer second resolution to facilitate quick global exploration of the data. Finally, vertex normals are calculated for smooth shading. For optimal performance, isosurfaces are calculated using logical coordinates of the dataset, rather than physical coordinates. This eliminates interpolation of the data if integer resolution values are used, substantially decreasing calculation time. It should be noted that users should use a first resolution of 1 in each direction if they wish to guarantee accurate isosurfaces. Resolutions greater than 1 can lead to missed triangles, although this was not a noticeable problem for us.</p><p>Isosurfaces can be rendered with transparency. For intuitive viewing, an OpenGL blending function of (GL SRC ALPHA, GL ONE MINUS SRC ALPHA) is used. This blending function generally requires that triangles be sorted and possibly split, as well as rendered in back-to-front order. This method produces a perfectly blended result, but takes a significant amount of processing time. Further, the operation depends on camera location which makes dynamically moving through the volume extremely expensive.</p><p>An alternative method requires no preprocessing of the triangles and has little impact in the rendered result. Thus, the method is suitable for interactive viewing. Isosurfaces are rendered in two passes from inner-most to outer-most. In the first pass, the isosurface is rendered only in the depth buffer, and not the color buffer. Then, in the second pass the depth testing function is set to "equal" and blending is enabled. The isosurface is then rendered into the color buffer, but only where it previously passed the depth test. The result is that the non-occluded part of the isosurface is visible to the user, while it is still blended against the rest of the rendering. Thus, the sorting and splitting of triangles has in effect been done in hardware. The drawback is that only the front portion of the isosurface is visible; i.e. the user cannot see through the front of the isosurface to its back side. This drawback is acceptable for this application.</p><p>The user interface of the visualization application allows specification of the isosurface rendering order. For concentrically layered isosurfaces, the inner-most one should be rendered first. Isosurfaces that have no apparent relation to each other (i.e. isosurfaces of two different variables) should be rendered at the same time such that they can be depth tested against each other before being blended. The practical usefulness of this method is that layers of isosurfaces can be rendered and blended together quickly. This can simulate results that would be achieved with volume rendering, but with much better performance. It is important to note that this fast blending method works for all isosurfaces, but is best for concentric isosurfaces. In the case of our fluid flow datasets, we can easily predict the concentricity of the velocity fluctuation isosurfaces described in Sec. 5.2.</p><p>To further increase performance, all isosurfaces are rendered using OpenGL vertex buffer objects (VBOs). We found that VBOs offered a significant performance gain over immediate mode rendering, vertex arrays and display lists.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Particle Traces</head><p>In fluid flow datasets, particle traces are perhaps the most important type of visualization to the user <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b5">6]</ref>. On the one hand, it is certainly one of the most intuitively understandable methods. On the other hand, it is computationally and memory intensive for large datasets. The visualization application supports two types of particle traces which can be rendered in two different ways. The first type of particle trace is a streamline. In this method, particles are propagated forward or backward from their seed location according to the current time step's velocity field. Thus, streamlines only represent the flow behavior at that instant in time. The user can optionally animate the streamlines through the time series to see how the instantaneous velocity field evolves.</p><p>The second type of particle trace is a particle path. In this method, particles are propagated forward or backward from their seed locations through time-that is, through multiple time steps of the dataset. Thus, a particle path may make use of the entire time-series of data. Particle paths represent the true motion of particles seeded at a specific location at a specific instant in time. These particle traces are calculated quickly, due to the data tiling optimizations (Sec. 4.1.1).</p><p>Both types of traces can be rendered as either animated spheres or tubes. The choice of which rendering method to use depends on what the user wants to learn. The animated sphere method gives the user an added sense of time, while the tube method lets the user see what is happening at a glance.</p><p>Particle traces are calculated by numerically integrating a particle's initial position through time, where the time derivative of position (velocity) is retrieved from the dataset. A standard fourth-order Runge-Kutta integrator is used. In the case of streamlines, only a single time step is required for the calculation. For particle paths, multiple time steps are required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">A Feature Detection Condition</head><p>In this work, we have facilitated the interactive visualization and analysis of transitional flow datasets. The primary goal of the visualization methods was to support the interactive navigation of the simulated data to better understand what conditions could possibly lead to the transition of flow from laminar to turbulent. We provided the ability for users to calculate and explore feature detection conditions that are complex functions of dataset variables. One particular feature detection condition that turned out to be visually verifiable is that hypothesized by Johnson <ref type="bibr" target="#b16">[17]</ref>. The condition itself is a fairly simple relationship between the streamwise velocity and streamwise velocity fluctuation at a point.</p><formula xml:id="formula_0">U ′ = − U 2<label>(1)</label></formula><p>Johnson <ref type="bibr" target="#b16">[17]</ref> proposes that a turbulent spot is generated when transient separation occurs in a laminar boundary layer. This criterion is based on a simple model, which considers the distortion of laminar streamlines produced by the velocity fluctuations in the lower boundary layer region. With the visualization capabilities we provided, we were able to test this condition to see that it does in fact hold true at a transition point. Rearranging, (1) we can form a new derived variable.</p><formula xml:id="formula_1">F = −2 U ′ U<label>(2)</label></formula><p>Isosurfacing F = 1 allows us to see the regions in the flow where the hypothesized condition is true. Displaying this feature detection isosurface along with velocity fluctuation isosurfaces yields favorable results. <ref type="figure">Figure 7</ref> shows five snapshots of the evolution of laminar streamlines as they approach a turbulent spot. Note that the streamwise direction represents 25% of the original volume lengthwise to isolate and focus on the region of interest. Each snapshot is depicted from a top view (left) and a lateral view (right). The horizontal plane is colored by spanwise fluctuations with intensity lower than 8%, and its height coincides with that of the particles' seeding location (about 15% of the boundary layer thickness). The cyan isosurfaces represent Johnson's condition as expressed in <ref type="bibr" target="#b1">(2)</ref>. The particles are seeded upstream (blue, green and red) of the most upstream isosurfaces in a horizontal plane. The upper layer of snapshots show the initial configuration of the particles (the stream-wise extent of the particles is approximately equal to their width).</p><p>Notice that significant changes in the configuration of the flow occur as the laminar streamlines approach the upstream isosurface of the feature detection condition. As particles traverse the streamlines there is a significant wall-normal displacement of the flow. In particular, the slowest streak is ejected away from the wall. As hypothesized in <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b15">16]</ref>, when the streamlines separate from the wall they decelerate, and then eventually stall leading to transition. The particle evolution indicates that as the slow streak is ejected from the wall, the faster streaks originally located on its side rush in to fill the void. Interestingly as the initially slow streak is ejected away from the wall it overtakes the initially faster streaks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Application Performance</head><p>The performance of the visualization application was evaluated in two areas: computational speed and rendering speed. These evaluations give a measure of how quickly users can process a dataset and how <ref type="table">Table 2</ref>. Performance of particle path calculations for varying tile sizes. A particle is seeded within the boundary layer and propagated through 1,000 time steps of Dataset B (282 MB per time step, 276 GB time series). Interactive frame rates are achieved for small tile sizes. interactively they can view the results. The results were obtained by running the system on a Dell Precision 690 workstation with 16GB of memory and an NVIDIA GeForce 8800 GTX.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Particle Path Calculations</head><p>One of the most data intensive operations that can be performed on a dataset is calculating particle paths. In order to integrate a particle's position through time to form the particle path, the velocity at each position and time along the path must be retrieved. Thus, the time series of data is required for the operation. In the least efficient method, entire time steps of data would be loaded during the calculation as the particle moves through time. Both disk usage and memory usage limitations make this method infeasible. In fact, many visualization packages do not support particle paths for this reason. In a more efficient method, smaller pieces of each time step of data would be loaded during the calculation. This is the method used in our visualization application, and was one of the main motivations behind the data tiling optimizations (Sec. 4.1.1). The performance of particle path calculations were evaluated to determine the effects of varying tile sizes. In this evaluation, a single particle is seeded within the boundary layer early in the time series. The particle is then propagated a fixed number of time units. The process is repeated for several tile sizes, and the results are shown in <ref type="table">Table 2</ref>. <ref type="table">Table 2</ref> shows that the particle path calculation achieved the best performance for the smallest tile size, as expected. Although the largest number of tiles were loaded, the least amount of memory was used. The small tile size allowed the application to load less unnecessary data, which led to memory and disk usage decreases. The overall disk usage reduction led to a quicker processing time and an interactive frame rate during particle path calculations. We see that the particle path performance is dominated by disk usage, which explains the benefits of the data tiling optimizations. Further, without the data tiling optimizations, particle path calculations would be impractical due to the excessive memory usage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Rendering Performance</head><p>Maintaining interactivity was crucial to allow users to explore their data in real time. <ref type="table">Table 3</ref> shows that throughout the visualization, a high frame rate is maintained, and a high level of interactivity is achieved. The optimizations outlined previously drastically improved performance. Most notably, the isosurface rendering which represents the bulk of the rendering is efficiently rendered with OpenGL Vertex Buffer Objects (see Sec. 4.2.2).   <ref type="table">-second  1  19  4a  28  4b  40  5a  26  5b  36  6  24  7</ref> 31 (each view)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Velocity Fluctuation Isosurfaces</head><p>In <ref type="figure" target="#fig_0">Figure 1</ref>, the fluid flows from left to right. The volume is limited to a subset that represents 70% of its original length in the streamwise direction to allow some of the most characteristic features of this transitional boundary layer to be seen. The spanwise and wallnormal directions are kept unmodified. <ref type="figure" target="#fig_0">Figure 1</ref> shows a snapshot of the streamwise and spanwise velocity fluctuation isosurfaces. At the top left corner we see uniformly distributed nearly spherical dark blue and purple isosurfaces. These structures represent positive and negative spanwise fluctuations with magnitudes of 5%. They indicate that the synthetic turbulence generated at the inlet is homogeneous. In addition, they show the decay of free-stream turbulence as it is transported downstream by the flow, evidenced by the reduction in size and number of the isosurfaces.</p><p>The interaction of the free-stream turbulence with the boundary layer produces streamwise velocity fluctuations in the laminar region. By isosurfacing these velocity fluctuation values, we find the characteristic streamwise streaks of a laminar boundary layer subject to freestream turbulence perturbations. In the vicinity of the wall (bottom of the figure), <ref type="figure" target="#fig_0">Figure 1</ref> shows these elongated structures with red and cyan isosurfaces. Additionally, <ref type="figure" target="#fig_4">Figure 4a</ref> shows a close up of fast and slow streamwise velocity streaks in the flow. Three distinct regions are easily observable in the flow shown in <ref type="figure" target="#fig_0">Figure 1</ref>. The upstream region is the laminar region, which is characterized by the orderly, elongated streaks of the streamwise velocity fluctuations. Once these structures break down, they form localized regions of three-dimensional fluctuations which are known as turbulent spots. In order to visualize these turbulent spots we can isosurface either the vertical or spanwise velocity fluctuation components, as is done in <ref type="figure" target="#fig_4">Figure 4b</ref>.</p><p>The transitional region begins where the first spots are generated. In this region, the orderly laminar streaks break down forming turbulent spots at random locations. The surrounding region remains laminar, as is clearly observed in <ref type="figure" target="#fig_0">Figures 1 and 4a,b</ref>. Notice that in <ref type="figure" target="#fig_0">Figure 1</ref>, the three spots shown are not aligned in the spanwise direction. Additionally, their sizes are significantly different. The incipient spot is the smallest, while the spot immediately downstream is larger. As these turbulent spots are convected downstream they grow, and when they come in contact with one another they coalesce. Eventually these turbulent spots cover all of the boundary layer. At this point transition to turbulence is complete. This point onward marks the fully turbulent region, shown in <ref type="figure" target="#fig_5">Figure 5a</ref>,b. In this region there is no significant evolution of the flow features, and thus it is truncated in <ref type="figure" target="#fig_0">Figure 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">The Transition Location</head><p>We have located the turbulent spot by visual inspection of the velocity fluctuation isosurfaces. Now, we must attempt to categorize the behavior of the flow around it. What causes the transition to occur? What conditions hold true at the transition location? The answers to these questions are rooted in the physics of the problem, but we can use visualization to help us arrive at them.</p><p>As mentioned earlier, transition is initiated when the first turbulent spots are generated. In the laminar region, the flow is smooth and contains streamwise fluctuations which vary slowly in the spanwise direction. When transition occurs, spanwise and wall normal fluctuations are generated as the orderly flow breaks down into localized turbulence. A good way to detect this behavior is to seed either vertical or horizontal lines of particles and look for particle traces crossing paths-that is, fluid with different momentum mixing. With visual experimentation, this behavior was in fact located. It is worth noting, however, that quite a bit of time was spent. Although the velocity fluctuation isosurfaces give the region in which the behavior is likely to occur, they do not give an exact location. <ref type="figure" target="#fig_6">Figure 6</ref> shows the transition point at which particles in the flow exhibit the particle fluid mixing. Further analysis needs to be done to eliminate the visual experimentation necessary to locate the transition point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>A visualization application has been developed with optimizations allowing for the exploration of datasets on the order of 1TB in size. The application allows us to explore these large datasets effectively and reliably on desktop computers. With our visualization tools, we have been able to identify important features of the transitional boundary layer flow. These features include the initial characteristics of the synthetic free-stream turbulence, the elongated streamwise velocityfluctuation structures (slow and fast streaks) in the laminar region, turbulent spots in the transitional region and full turbulence beyond transition. Further, we were also able to experimentally locate the transition location preceding a turbulent spot and follow fluid particles as they are engulfed by the turbulent spot.</p><p>A model proposed for the bypass transition process has been used to identify the transition location. The feature detection isosurfaces are instrumental in finding interesting flow features and reducing experimentation with data. Additionally, the flow features identified corroborate a hypothesis proposed in previous turbulent flow literature.</p><p>Although our primary task was the visual interrogation of transitional flow datasets, we can easily use our modules for the visual interrogation of any simulation dataset. The system loosely integrates a set of data management, visualization and feature detection methods that can immediately be used on any rectilinear dataset. These modules can be used separately or as packaged in our system. Keeping them loosely coupled provides for a much easier transition or integration into existing visualization systems. We have worked with ParaView  and VisIt and many of our methods can be integrated in a straightforward manner. <ref type="figure">Fig. 7</ref>. Showing Dataset A: Snapshots from a top view (left) and lateral view (right) of particles ejected away from the wall near a feature detection condition derived from a model proposed by Johnson <ref type="bibr" target="#b16">[17]</ref>. This momentum mixing will feed the downstream turbulent spot. The cutting plane shows spanwise velocity fluctuations. Note the streamwise direction is compressed to 25% its original length.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>The transitional flow volume (Dataset B).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Global variables and data structures for the data tiling scheme are shown. The number of loaded tiles is tracked. A user-defined maximum number of loaded tiles constrains memory usage. The data structure for a loaded tile consists of the time (corresponding to the given timestep of data), tile number, tile age and the loaded data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Table 3 .</head><label>3</label><figDesc>Rendering performance for several figures included in the text.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure # Frames-per</head><label></label><figDesc>Figure # Frames-per-second 1 19 4a 28 4b 40 5a 26 5b 36 6 24 7 31 (each view)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>Close up of a turbulent spot in Dataset B, colored as in Figure 1. Upper figure (a) shows streamwise velocity fluctuations; these elongated structures represent slow (blue) and fast (red) streaks. Lower figure (b) shows wall-normal velocity fluctuations. Notice that the surrounding region remains laminar.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Close up of the fully turbulent region in Dataset B, colored as in Figure 1. Upper figure (a) shows streamwise velocity fluctuations. Lower figure (b) shows wall-normal velocity fluctuations. As the fluid becomes fully turbulent there is no significant difference between the structures formed by streamwise and wall-normal fluctuations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>In Dataset A: A horizontal line of particles are seeded in front of a spanwise velocity fluctuation isosurface. Transition behavior is observed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>The algorithm for data tiling memory management is shown. This algorithm is called once per frame. The age for currently loaded tiles is incremented. If the number of loaded tiles exceeds a preset maximum value, the tiles least recently accessed are purged from memory.</figDesc><table><row><cell>/ * increment age of all loaded tiles</cell><cell>* /</cell></row><row><cell>for all loaded tiles do</cell><cell></cell></row><row><cell>tile increment age(time, tile number) ;</cell><cell></cell></row><row><cell>end</cell><cell></cell></row><row><cell>/ * check to see if we've got more tiles</cell><cell></cell></row><row><cell>loaded than allowed...</cell><cell>* /</cell></row><row><cell>if num loaded tiles &gt; max number of loaded tiles then</cell><cell></cell></row><row><cell>/ * sort the array of loaded tiled by</cell><cell></cell></row><row><cell>tile age</cell><cell>* /</cell></row><row><cell>tiles sort by age() ;</cell><cell></cell></row><row><cell cols="2">/ * free oldest tiles until we're within</cell></row><row><cell>tile limits</cell><cell>* /</cell></row><row><cell>while num loaded tiles &gt; max number of loaded tiles do</cell><cell></cell></row><row><cell>tile free(oldest tile) ;</cell><cell></cell></row><row><cell>num loaded tiles = num loaded tiles -1 ;</cell><cell></cell></row><row><cell>end</cell><cell></cell></row><row><cell>end</cell><cell></cell></row><row><cell>Algorithm 2:</cell><cell></cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>This work is a true collaborative effort between computational and visualization scientists. We would like to thank the Texas Advanced Computing Center and the Institute for Computational Engineering and Sciences at The University of Texas at Austin for funding this work.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://www.ensight.com" />
		<title level="m">Ensight</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Large-scale data visualization using parallel data streaming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Brislawn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Geveci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">C</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Papka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput. Graph. Appl</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="34" to="41" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A parallel approach for efficiently visualizing extremely large time-varying datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Law</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Papka</surname></persName>
		</author>
		<idno>LAUR-00-1620</idno>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
		<respStmt>
			<orgName>Los Alamos National Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">High frequency surface heat flux imaging of bypass transition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Anthony</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">V</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Lagraff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Turbomachinery</title>
		<imprint>
			<biblScope unit="volume">127</biblScope>
			<biblScope unit="page" from="241" to="250" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Real-time out of core visualization of particle traces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bruckschen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Kuester</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Parallel and Large-Data Visualization and Graphics</title>
		<meeting>IEEE Symposium on Parallel and Large-Data Visualization and Graphics</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="45" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Numerical algorithms in CFD post-processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Buning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics and Flow Visualization in Computational Fluid Dynamics. von Karman Institute for Fluid Dynamics Lecture Series 1989-07</title>
		<imprint>
			<date type="published" when="1989-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Residual-based multiscale turbulence modeling: Finite volume simulations of bypass transition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">M</forename><surname>Calo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<pubPlace>Stanford</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Department of Civil and Environmental Engineering</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualization: A dataflow toolkit for visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Dyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput. Graph. Appl</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="60" to="69" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Interactive terascale particle visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ellsworth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Moran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization 2004 Conference</title>
		<meeting>IEEE Visualization 2004 Conference</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="353" to="360" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A mass conservative flow field visualization method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="749" to="756" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Distributed data management for large volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Atchley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Kohl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;05: Proceedings of the conference on Visualization &apos;05</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="183" to="190" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Stochastic coherent adaptive large eddy simulation method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">V</forename><surname>Vasilyev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physics of Fluids</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="2497" to="2513" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A data model for scientific visualization with provisions for regular and irregular grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lucas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Collins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;91: Proceedings of the 2nd conference on Visualization &apos;91</title>
		<meeting><address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="298" to="305" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Visualization of turbulent flow with particles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J S</forename><surname>Hin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;93: Proceedings of the 4th conference on Visualization &apos;93</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="46" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Bypass transition phenomena studied by computer simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Jacobs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Durbin</surname></persName>
		</author>
		<idno>TF-77</idno>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
		<respStmt>
			<orgName>Department of Mechanical Engineering, Stanford University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>Flow Physics and Computation Division</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Simulations of bypass transition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Jacobs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Durbin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">428</biblScope>
			<biblScope unit="page" from="185" to="212" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A bypass transition model for boundary layers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">W</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ASME Journal of Turbomachinery</title>
		<imprint>
			<biblScope unit="volume">116</biblScope>
			<biblScope unit="page" from="759" to="764" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Bypass transitional flow calculations using a navier-stokes solver and two-equation models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">W</forename><surname>Liou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">H</forename><surname>Shih</surname></persName>
		</author>
		<idno>TR WU-522-31-23-00</idno>
		<imprint>
			<date type="published" when="2000-04" />
		</imprint>
		<respStmt>
			<orgName>NASA</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;87: Proceedings of the 14th annual conference on Computer graphics and interactive techniques</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Advanced visualization technology for terascale particle accelerator simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Schussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kwok</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Qiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ryne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE Conference on Supercomputing</title>
		<meeting>ACM/IEEE Conference on Supercomputing</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="46" to="53" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">An Introduction to Turbulent Flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mathieu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Scott</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Cambridge Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The role of laminar-turbulent transition in gas turbine engines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Mayle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ASME Journal of Turbomachinery</title>
		<imprint>
			<biblScope unit="volume">113</biblScope>
			<biblScope unit="page" from="509" to="537" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Ensight&apos;s parallel processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Misegades</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Field encapsulation library the fel 2.2 user guid</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Moran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Henze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ellsworth</surname></persName>
		</author>
		<idno>TR NAS-00-002</idno>
		<imprint>
			<date type="published" when="2000-01" />
		</imprint>
		<respStmt>
			<orgName>NASA</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Boundary layer theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Schlichting</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Gersten</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">OpenGL Programming Guide: The Official Guide to Learning OpenGL, Version 2</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shreiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Woo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Neider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Davis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>Addison-Wesley Professional</publisher>
		</imprint>
	</monogr>
	<note>fifth edition</note>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">The Paraview Guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Squillacote</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<publisher>Kitware, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Query-driven visualization of large data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Stockinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shalf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">W</forename><surname>Bethel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;05: Proceedings of the conference on Visualization &apos;05</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="167" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Interactive poster: Illustrating different convection velocities of turbulent flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Urness</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Interrante</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Longmire</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Marusic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ganapathisubramani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;04: Proceedings of the conference on Visualization &apos;04</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page">598</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A parallel visualization pipeline for terascale earthquake simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Welling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE Conference on Supercomputing</title>
		<meeting>ACM/IEEE Conference on Supercomputing</meeting>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Parallel hierarchical visualization of large time-varying 3d vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM/IEEE Conference on Supercomputing</title>
		<meeting>ACM/IEEE Conference on Supercomputing</meeting>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
