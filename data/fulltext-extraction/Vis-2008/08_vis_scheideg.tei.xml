<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Revisiting Histograms and Isosurface Statistics</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><forename type="middle">E</forename><surname>Scheidegger</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">M</forename><surname>Schreiner</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Duffy</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hamish</forename><surname>Carr</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cláudio</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
						</author>
						<title level="a" type="main">Revisiting Histograms and Isosurface Statistics</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:49+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Isosurfaces</term>
					<term>Histograms</term>
					<term>Coarea Formula</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Recent results have shown a link between geometric properties of isosurfaces and statistical properties of the underlying sampled data. However, this has two defects: not all of the properties described converge to the same solution, and the statistics computed are not always invariant under isosurface-preserving transformations. We apply Federer&apos;s Coarea Formula from geometric measure theory to explain these discrepancies. We describe an improved substitute for histograms based on weighting with the inverse gradient magnitude, develop a statistical model that is invariant under isosurface-preserving transformations, and argue that this provides a consistent method for algorithm evaluation across multiple datasets based on histogram equalization. We use our corrected formulation to reevaluate recent results on average isosurface complexity, and show evidence that noise is one cause of the discrepancy between the expected figure and the observed one.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>In scientific and medical visualization, we commonly represent physical quantities as continuous functions defined over a continuous domain. These are constructed by resampling observed points using some reconstruction kernel defined on the underlying space or on the connectivity of a geometric grid. When visualizing data, we work directly on the continuous function, which is mathematically and computationally convenient.</p><p>Since humans are not good at assimilating large quantities of numerical data, visualization seeks to map numerical properties of this continuous function to visual properties such as colour, brightness and saturation or to geometric properties such as boundaries and edges. Thus, one of the first steps in visualization is to define a mapping from the function to visual properties. Defining this mapping often depends on understanding the frequency and possibly the spatial distribution of the numerical values.</p><p>Historically, function distributions have been computed with histograms, which simply count the number of samples with each function value. However, recent work by Carr et al. <ref type="bibr" target="#b2">[3]</ref> has shown that there are serious problems in using histograms as representations of function distributions. In particular, histogram computation assumes that the reconstruction uses a box filter (or nearest neighbor interpolation).</p><p>Using this observation, Carr et al. <ref type="bibr" target="#b2">[3]</ref> proposes several alternative statistics that converge faster than histograms. These are based on interpreting the isosurface areas as measurements of higher-order interpolants on the domain. In addition, the authors related their statistics (and, implicitly, the histogram) to the algorithmic complexity of isosurface rendering, demonstrating a larger (O(N 0.82 )) experimental result than the O(N 2/3 ) previously predicted <ref type="bibr" target="#b6">[7]</ref>. While the proposed statistics certainly converge faster than histograms, two problems can be identified. First, these converge to a slightly different result than histograms. Second, the mathematics suggest some counter-intuitive results about the average complexity of isosurfaces in the domain. Here, we use the term "convergence" to mean that as we use increasingly finer grids, the computed functions approach some limit function.</p><p>• Carlos E. Scheidegger, John Schreiner, and Cláudio T. <ref type="bibr">Silva</ref>  In this paper, we address these issues by revisiting the development of the isosurface statistics using a celebrated result in geometric measure theory: Federer's Coarea Formula <ref type="bibr" target="#b11">[12]</ref>. This formula allows one to relate integrals over level sets of a function to integrals over the domain on which the function is defined. Crucially, it has the effect of normalizing isosurface statistics to the packing density of the isosurfaces, allowing us to correct the problems identified and propose improved solutions. Moreover, this formula gives us additional results. In particular, we show that in a particular case, histogram equalization can be used as a normalization to get the O(N 2/3 ) result originally predicted. Throughout the paper, we use the term "level set" mostly interchangeably with isosurface, but will choose the term "level set" when we want to disregard the particular isovalue associated to the set of points in the preimage.</p><p>Our contributions are as follows. We build on the work of Carr et al. <ref type="bibr" target="#b2">[3]</ref>, and introduce a more mathematically grounded approach based on Federer's Coarea Formula (FCF). It clarifies the subtle relation between histograms and isosurface areas, and, crucially, shows the role of gradient magnitudes in that relationship. It also provides a well-founded way to compute expectations over all isosurfaces in a volume. Practically, we suggest using the cell span as an approximation for gradient magnitude, and provide experimental evidence for the validity of this approximation. Finally, we revisit Carr et al.'s study on average isosurface complexity and study the effect of volume noise in those estimates. This paper is organized as follows. Section 2 briefly reviews relevant previous work, while Section 3 summarizes the contents of the previous result <ref type="bibr" target="#b2">[3]</ref>. We then introduce the FCF in Section 4, and use this mathematical tool to develop an improved formulation of isosurface statistics in Section 5, based on dividing the statistics by the local gradient magnitude of the continuous function. In Section 6, we extend the application of the FCF to the computation of average isosurface complexity, and show that there exist transformations that preserve level sets, but change the original isosurface statistics (we will make this notion precise). We also show how to compute the average complexity in a way that implicitly accounts for any such transformations, and explain the discrepancy in the original results. In Section 7 we confirm that the average isosurface complexity of a function, when sampled increasingly finely in a domain, is O(N 2/3 ). We also revisit the experiments of Carr et al. <ref type="bibr" target="#b2">[3]</ref> in light of the corrected integral formulation. In our experiments, we find an even higher average complexity, of O(N 0.96 ). Finally, we show that noise seems to largely explain this high figure, by performing a set of experiments on synthetic data. We then summarize our results in Section 8 and speculate on future directions of research in Section 9.  <ref type="bibr" target="#b2">[3]</ref>. Note that the histogram's convergence is much poorer than the isosurface area; furthermore that the latter apparently converges to a slightly different result: at maximum resolution, the peaks are concave cusps for the histogram, but convex cusps for the isosurface area.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PREVIOUS WORK</head><p>Histograms are ubiquitous in plotting, and also in computer graphics and visualization. It is one of the oldest techniques available for displaying data <ref type="bibr" target="#b5">[6]</ref>, and is often used as the basis of techniques such as histogram equalization <ref type="bibr" target="#b4">[5]</ref>, which defines a non-linear transfer function that attempts to distribute the intensity in an image uniformly over the range. Fundamentally, the histogram is a bar graph used to represent the distribution of function values in a population. In this bar graph, the independent variable represents the possible values of a set of observations, and the dependent variable represents the number of observations with a given value.</p><p>In computer graphics, histograms are often computed for sample values in a dataset. The histograms themselves are then used for equalization <ref type="bibr" target="#b4">[5]</ref>, transfer function construction <ref type="bibr" target="#b8">[9]</ref> and detection of important isovalues <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b15">16]</ref>.</p><p>Isosurfaces are level sets of a function, and are commonly extracted and rendered using geometric approximations of the surface <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b16">17]</ref>. Much subsequent work has gone into accelerating their constructionsee <ref type="bibr" target="#b13">[14]</ref> for a recent review. Crucially, most of the acceleration work has exploited the relationship between k, the output complexity (number of triangles) in the isosurface, and N, the input complexity (number of samples) in the data. A dimensionality argument has been used to estimate that k ≡ O(N 2/3 ) <ref type="bibr" target="#b6">[7]</ref>, but this estimate was not then tested rigorously.</p><p>Geometric statistics have also been used in visualization, principally in the form of the contour spectrum <ref type="bibr" target="#b1">[2]</ref>, which computes geometric and topological properties of isosurfaces and displays them in an interface to provide cues to interesting isovalues that can be used for guiding users during visualization.</p><p>Carr et al. <ref type="bibr" target="#b2">[3]</ref> showed that histograms, isosurface complexity and geometric statistics were intimately related, and gave experimental results on the average complexity of isosurfaces in a range of freely available datasets, with surprising results. Since the present paper revises and extends these results, we defer full discussion of this work to the following section.</p><p>Our work depends heavily on a classic result in geometric measure theory-Federer's Coarea Formula, which describes the relationship between integrals defined on level sets and integrals on the space in which the level sets are defined. For an introduction to the topic, see Morgan's book <ref type="bibr" target="#b11">[12]</ref>. To the best of our knowledge, the Coarea Formula has only very recently been presented to the computer graphics community by Mullen et al. <ref type="bibr" target="#b12">[13]</ref>. We will return to this topic in Section 4.</p><p>As we were preparing the final version of our paper for print, we learned of Bachthaler and Weiskopf <ref type="bibr" target="#b0">[1]</ref>, which appears in the same volume. Both papers are based on similar mathematical ideas, but use completely different derivations. Also, the applications proposed in each paper are quite different. In this work, we use the case where integrals are defined over manifolds of codimension one. We, note, however, that the co-area formula works for general dimension and codimension. Their derivation, which works for general dimension and codimension when q(x) = 1 (see Section 4), is then used to define continuous scatterplots <ref type="bibr" target="#b0">[1]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">REVIEW OF HISTOGRAMS AND ISOSURFACE STATISTICS</head><p>In the previous section, we identified the convergence of results on histograms, geometric isosurface statistics and algorithmic complexity. We now delve further into this convergence by reviewing the previously published results of Carr et al. <ref type="bibr" target="#b2">[3]</ref>.</p><p>Briefly, the paper points out that a histogram can be expressed as:</p><formula xml:id="formula_0">H(h) = ∑ f (x i )=h 1<label>(1)</label></formula><p>while the distribution of the function could be defined as:</p><formula xml:id="formula_1">π f (h) = f −1 (h) 1 dS (2)</formula><p>where f : R ⊂ R 3 → R is a scalar field whose image is in the range</p><formula xml:id="formula_2">[h 0 , h 1 ]. A preimage f −1 (h)</formula><p>is an isosurface of f , and h is an isovalue. As we will see shortly, Equation 2 is subtly incorrect, but the underlying point is clear: that the histogram is closely related to integrals defined over the isosurface at the function value h. It is this particular equation that we re-examine carefully, present a theoretical correction, and show experimental evidence for its superiority in terms of convergence to the histogram. The Equation 2 result was then expanded to show that the histogram in fact assumes a nearest neighbour interpolant. Since isosurfaces explicitly represent the interpolant in the geometric extraction process, it follows that geometric statistics of the isosurfaces were better representations of function distributions. This was demonstrated by examining plots of histograms and isosurface statistics as the sampling density increased, in which it was clear that histograms had much poorer convergence properties. <ref type="figure" target="#fig_0">Figure 1</ref> shows the convergence of histograms on the left and isosurface statistics on the right; it also shows one of the errors in the paper-that the isosurface area in fact converges to a different result from the histogram. ways so that its relation to the original function is clear. Notice that the histogram peaks where the function derivative is low, and troughs where the derivative is high. If π f didn't contain a term to account for the gradient magnitude, the histogram would be flat.</p><p>Having illustrated the convergence properties, the paper then illustrated the difference between the two sets of statistics for non-analytic data sets, describing consistent trends over a large number of freely available data sets. In this work, we show that using the isosurface area is not in fact the correct solution in that it does not converge to the same result as the histogram.</p><p>Finally, the paper measured the average isosurface complexity for all of the data sets on a log-log plot and demonstrated that the experimental complexity for uniform sampling in the range showed a O(N 0.82 ) relationship between k and N rather than the O(N 2/3 ) previously predicted <ref type="bibr" target="#b6">[7]</ref>. With the machinery we introduce in this paper, we revise this result as well. For a single volume sampled increasingly densely, we can analytically show the O(N 2/3 ) result. However, for the same set of datasets collected on the internet as used in Carr et al. <ref type="bibr" target="#b2">[3]</ref>, we find a relationship closer to O(N 0.96 ).</p><p>We note that we are not advocating the use of a different range mapping for determining important isosurfaces, or that the distributions computed by Carr et al. <ref type="bibr" target="#b2">[3]</ref> are more or less effective at informing the user about the volume. We are interested in finding histogram substitutes that converge as fast as previous proposals, while matching the histogram distribution in the limit. As we will show, this leads more generally to a mathematically sound way of determining integrals over all isosurfaces of a volume, when the particular isovalues of each isosurface are not important.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">REVISITING HISTOGRAMS AS DISTRIBUTIONS</head><p>We begin by presenting Federer's Coarea Formula, the primary mathematical tool used in this work. The original result is extremely general in nature, and requires a level of sophistication that will be unnecessary for our purposes (see, e.g., Morgan's book <ref type="bibr" target="#b11">[12]</ref>). We instead follow Mullen et al.'s presentation of the formula <ref type="bibr" target="#b12">[13]</ref>, who recently introduced the Coarea Formula to the computer graphics community as a useful geometry processing tool. In this particular setting, the formula converts integrals over a range of level sets to integrals over the domain where the level sets are defined:</p><formula xml:id="formula_3">R f −1 (h)∩R q(x) dS dh = R q(x)|∇ f (x)| dV (3)</formula><p>where q : R → R is any scalar function defined over the same domain as f , and f is a Lipschitz function. Note that in order to be consistent with the notation from Carr et al., the notation used in this paper is slightly different from Mullen et al.</p><p>In words, the formula says that if we want to integrate a certain function over a range of level sets of f , we can instead integrate the function directly over the domain of f , provided we compensate for the local density of isosurfaces. We will use this formula to provide an appropriate definition of the distribution function on a continuous domain. We would like to define a distribution function π f (h), that gives a measure of the "size" of the set of points for which f (x) = h. We first define the cumulative distribution function:</p><formula xml:id="formula_4">C f (h) = P[ f (x) &lt; h] = h 0 ≤ f (x)≤h 1 dV h0≤ f (x)≤h 1 1 dV = 1 V h 0 ≤ f (x)≤h 1 dV<label>(4)</label></formula><p>We will assume without loss of generality that V = 1. Given this definition of C f as an integral over a subset of the domain R, we will use Federer's Coarea Formula to rewrite it in terms of integrals on the level sets. By defining q(x) = |∇ f (x)| −1 , and restricting the set of isovalues we are integrating over, we can write:</p><formula xml:id="formula_5">h h 0 f −1 (h) |∇ f (x)| −1 dS dh = h 0 ≤ f (x)≤h 1 dV<label>(5)</label></formula><p>This can be directly substituted into C f :</p><formula xml:id="formula_6">C f (h) = h 0 ≤ f (x)≤h 1 dV = h h 0 f −1 (h) |∇ f (x)| −1 dS dh<label>(6)</label></formula><p>By the Fundamental Theorem of Calculus, π f = C f :</p><formula xml:id="formula_7">π f (h) = f −1 (h) |∇ f (x)| −1 dS<label>(7)</label></formula><p>Note that this is in contrast with how π f is defined by <ref type="bibr" target="#b2">[3]</ref> (in this paper, Equation 2). As we will show, when this inverse gradient magnitude term is accounted for in the computations, the isosurface statistics investigated in that work converge to the same results as the histograms. One way of connecting the two results is to note that Carr et al.'s original formulation generates correct results whenever the volume satisfies a particular case of the Eikonal equation: |∇ f (x)| = k for some nonzero constant k.</p><p>To highlight the relationship between the gradient magnitude of a function and its histogram, we show two examples. In <ref type="figure" target="#fig_1">Figure 2</ref> we show a simple one-dimensional example where we restrict ourselves to a one-to-one function. Notice that the histogram of a continuous function measures the density of values in the domain that attain a certain value in the image. Differentially, however, the density of the domain is inversely proportional to the derivative of the function at a point, since it is given by the "amount" of domain in an infinitesimally small slab of range values. If the derivative of the function (or more generally, its gradient magnitude) was not taken into account, we would expect the histogram of a one-to-one function to be constantwhich cannot possibly be true in general. In <ref type="figure" target="#fig_2">Figure 3</ref>, we illustrate the co-area formula in two dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">REVISITING ISOSURFACE STATISTICS AS DISTRIBUTIONS</head><p>With the correction presented above, we introduce an improved substitute for histograms which, unlike that presented in <ref type="bibr" target="#b2">[3]</ref>, converges to the histograms themselves. Instead of computing isosurface area directly, we need to weigh the area contributions by the inverse gradient magnitude of the level set. We also propose an approximation for the gradient magnitude at a level set that is easy to compute.</p><p>In <ref type="figure" target="#fig_5">Figure 4</ref>, we show the histogram of an analytic spherical distribution f (x) = |x| 2 . Note that, unlike the one presented in <ref type="bibr" target="#b2">[3]</ref>, we are using squared distances from the origin, and that the gradient of this function is not constant across the volume. The previous formulation does not converge to the histogram distribution, while our improved formulation does. The same approximations previously proposed, which use triangle count and active cell count as surrogates for isosurface area, also perform well when similarly corrected.</p><p>Carr et al. show that it is possible to use much cheaper alternatives such as active edge and active cell counts as a very good replacement for the potentially expensive isosurface extraction. In our case, there is an added complication that arises from the gradient magnitude in the correction term. In particular, we want to compute the correction without having to refer to the original spatial distribution of values in the volume. If that is possible, we can improve the efficiency of the computations in the same way that using active cell counts can be used as an approximation of triangle counts. We use the span: the difference between maximum and minimum value in the cell. The cell span is an admittedly crude approximation of the gradient magnitude. For example, assume cell width of 1 and linear tensor interpolation. Depending on the geometric configuration of the values on the cell corners, the cell span might be off by up to a factor of √ D, since the maximum and minimum values might occur across a main diagonal of the D-dimensional cell. For D = 3, the cell span will overestimate the gradient magnitude in a cubic cell by ≈ 1.28 on average, if we consider all value configurations of extremal values being as likely to occur as one another. However, the histogram is by definition normalized, and since that factor is constant across all isovalues, it cancels out. We have found this potentially crude approximation to be essentially indistinguishable from using more sophisticated approximations. Throughout the paper, we use this cell span approximation. <ref type="figure" target="#fig_3">Figure 5</ref> shows the new histogram substitutes for a set of different volumes. These plots show the same general behavior as <ref type="figure" target="#fig_5">Figure 4</ref>: the new formulation converges faster than histograms, and it does so to the histogram distribution, unlike the previous proposal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">AVERAGE ISOSURFACE COMPLEXITY</head><p>In this section, we investigate the average complexity of an isosurface in a volume. We use isosurface area as our measure of complexity, for the same reasons as Carr et al. <ref type="bibr" target="#b2">[3]</ref>: it is mathematically convenient and, in most isosurface extraction algorithms, directly related to triangle count, which is arguably the most importantly computational unit to analyze in these algorithms.</p><p>The notion of average isosurface complexity is a delicate one. In particular, when computed naïvely, the average isosurface complexity  might be different for two volumes that share exactly the same set of isosurfaces. In this section, we present a slightly different formulation that is invariant to these transformations.The straightforward way of defining the average isosurface complexityÃ( f ) is to simply evaluate the integralÃ</p><formula xml:id="formula_8">( f ) = 1 h 1 − h 0 h 1 h 0 f −1 (h) 1 dS dh (8) = 1 h 1 − h 0 R |∇ f (x)| dV,<label>(9)</label></formula><p>where Equation 8 is the formulation used in <ref type="bibr" target="#b2">[3]</ref>, and Equation 9 is a direct application of the FCF. However, we can definef (x) = g( f (x)), for some function g : R → R that is smooth and monotonically increasing. Notice that |∇f (x)| = g ( f (x))|∇ f (x)|, and soÃ( f ) =Ã(f ), even though f andf share the exact same set of isosurfaces ( f −1 (h) = f −1 (g(h))). IfÃ( f ) is to be a measure of the average complexity of the level sets, we would like it to be invariant under transformations that preserve the level sets. These transformations preserve the level sets in the sense that every set of points in the preimage of the function f and value h (that is, the isosurface of f with isovalue h) exist in the functionf , as the preimage of some value, namely g(h) (that is, the isosurface off with isovalue g(h)), and vice-versa. <ref type="figure" target="#fig_4">Figure 6</ref> illustrates this preservation of level sets. In what follows, we describe how to changeÃ so that this is indeed the case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Computing with histograms</head><p>In Section 4, we showed that the histogram of isosurface areas involves the integral of the inverse gradient magnitude over the level sets for it to be the real distribution function. We now show how this distribution function must be accounted for when computing averages over all isovalues. We use the standard definition of an average over a parameter with non-uniform probabilities:</p><formula xml:id="formula_9">A( f ) = h 1 h 0 π f (h)a f (h) dh (10) a f (h) = f −1 (h) 1 dS (11)</formula><p>When the average is defined in this way, any transformation g applied to f will be exactly accounted for by π g• f , so we will have A( f ) = A(f ). Additionally, if g is specifically defined to be the histogram equalization function of f :</p><formula xml:id="formula_10">g(h) = h h 0 π f (h) dh<label>(12)</label></formula><p>then the naïvely computed average areaÃ( f ) will be exactly equal to the average area A( f ) that compensates for the density, since π g• f will be constant. There are several ways to numerically estimate the value of Equation 10 via Monte Carlo integration. It can most directly be written as:</p><formula xml:id="formula_11">A( f ) ≈ h 1 − h 0 n n ∑ i=1 π f (h i )a f (h i )<label>(13)</label></formula><p>where n is the number samples h i taken uniformly in the range</p><formula xml:id="formula_12">[h 0 , h 1 ].</formula><p>However, π f may be difficult to evaluate in practice for arbitrary functions f . Instead, we could first perform histogram equalization, to produce a functionf with a constant πf . In this case, we can approximate A( f ) as:</p><formula xml:id="formula_13">A( f ) =Ã(f ) ≈ 1 n n ∑ i=1 af (h i )<label>(14)</label></formula><p>This is a much simpler computation, but still assumes that histogram equalization can be done easily and robustly. However, histogram equalization on quantized data will often produce an imperfectly equalized result. If we can create the samples h i proportionally to π f , we can avoid having to either evaluate π f or perform histogram equalization. This is easy to do, and we approximate A( f ) as:</p><formula xml:id="formula_14">A( f ) ≈ 1 n n ∑ i=1 a f ( f (x i ))<label>(15)</label></formula><p>where x i is a random point uniformly chosen from R. That is, if we choose the values h to average by evaluating f at a random point, rather than choosing it randomly between h 0 and h 1 , we can implicitly account for the non-uniform distribution of isosurfaces, and have the computation be invariant under any transformation g of the ranges. Interestingly, this tells us how we should compute any average over isosurfaces. In the context of this paper, we have defined a(h) to be the area of the isosurface with isovalue h. However, a could be any function of the isosurface, such as the execution time of some algorithm on f −1 (h), or the maximum gradient magnitude at points in f −1 (h). Then when computing the averages of these functions over all isovalues h, the distribution function must be taken into account appropriately.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">FORMAL COMPLEXITY</head><p>We now turn to the question of average isosurface complexity over the volume. For the moment, we will look at the average isosurface area as a convenient proxy for the correct notion, which involves a sampled volume and the average active cell count.</p><p>We have rigorously defined A( f ) in such a way that it is invariant to transformations of its range, so we can now investigate how it changes as a function of a uniform scale of s. We define a new function f s :</p><formula xml:id="formula_15">R s → R, where f s (x) = f (x/s) and R s = {x|x/s ∈ R}.</formula><p>We note that π f s = π f since it is a simple uniform scaling. Additionally,</p><formula xml:id="formula_16">f −1 s (h) 1 dS = s 2 f −1 (h) 1 dS (16)</formula><p>since dS is a 2-form. Therefore, the average area of the isosurfaces of f s is:</p><formula xml:id="formula_17">A( f s ) = h 1 h 0 π f s (h)a f s (h) dh = h 1 h 0 π f (h)s 2 a f (h) dh = s 2 A( f )<label>(17)</label></formula><p>Since the volume of the domain will increase by N = s 3 , we have the scaled volume's average area growing exactly by N 2/3 , as suggested by Itoh and Koyamada <ref type="bibr" target="#b6">[7]</ref>. Note, however, that this is when considering a single function f . As Carr et al. <ref type="bibr" target="#b2">[3]</ref> suggest, it is possible to find pathological cases where the average area relative to the volume increases as O(N), when the functions are not just scaled versions of some base f . For example, this will happen when f is a checkerboard defined over all R 3 , and f N is defined to be f (not scaled, but extended over a larger region).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Revisiting the experiments</head><p>In addition to these theoretical results, we would also like experimental confirmation of the formal complexity of isosurfaces. In practice, the scalar functions are typically represented by a finite set of samples, which are subject to quantization and aliasing artifacts, and the isosurfaces are often approximated piecewise linearly by triangles. To test the formal complexity that is seen in practice under these circumstances, we have revisited the experiments in <ref type="bibr" target="#b2">[3]</ref> using the appropriate definition for π f . We can use any of the previously described methods of accounting for π f when numerically estimating the average isosurface complexity. To avoid numerical artifacts of histogram equalization of quantized volumes, we use Equation 15. <ref type="figure" target="#fig_6">Figure 7</ref> shows the results of the experiments performed. We have used approximately 80 different datasets for these experiments. We have found that the average triangle count across all isosurfaces, using the appropriately defined notion above, grows at around N 0.96 , when N is the number of samples in the volume, close to the pathological O(N) cases. This figure is even higher than the experiments of <ref type="bibr" target="#b2">[3]</ref>, which found the relationship to be approximately N 0.82 . The difference in the results comes from compensating for the local density of isovalues when computing the average surface areas. Notice that the overall slope is bigger than the slope of the fits particular to any modality. A full investigation of the reason is not possible without a much bigger set of volumes than what we had available. However, we speculate that this is caused partly by a combination of outliers, a simplified growth model (the real data probably does not follow a power law exactly) and disparity of the volume sizes: the simulated data sets were typically smaller than the measured and medical data sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Noise and average complexity</head><p>The new figure seems to indicate that the average isosurface on datasets used in practice is close to what has been considered a pathological case, which is unexpected. In this section, we show that noise seems to be a main cause of this inflated complexity. We start by showing, in <ref type="figure" target="#fig_0">Figure 10a</ref>-c, the effect of increasing noise on a spherical isosurface. As the noise level increases, the surface essentially fills an increasingly thick region around the original isosurface. <ref type="figure" target="#fig_0">Figure 10d</ref> shows a typical random isosurface extracted during the computation of the results in <ref type="figure" target="#fig_6">Figure 7</ref>. Note that almost the entire volume is similarly punctuated by small individual connected surface components that arise from the presence of noise in f .</p><p>We know from Section 7 that a single volume, when sampled with increasingly dense points, will result in a O(N 2/3 ) average complexity. However, volume noise is usually modeled as being independent of the sampling resolution, so as we increase the sampling density, the volume is no longer the same. The results of our experiments are shown in <ref type="figure" target="#fig_7">Figure 8</ref>. In that experiment, we computed the average isosurface complexity for a series of synthetic sphere and Marschner-Lobb datasets, of increasing resolution, and examined the effects of additive gaussian noise on the complexity. As can be seen, a noiseless sphere has an average complexity close to O(N 2/3 ), while all of the volumes quickly approach complexity O(N) as the noise increases.</p><p>Additionally, aliasing seems to play a similar role to noise in the observed complexity. By removing the Marschner-Lobb resolutions that are prone to aliasing (all volumes with less than 40 3 samples), the graph of the growth exponent as a function of the noise level is noisier due to fewer data points, but there is a trend that starts at O(N 2/3 ), and approaches O(N) asymptotically. When volumes that have aliasing effects are used, the order of growth seems to be inflated because as the sample size increases, more of the higher frequency geometry is resolved, resulting in an increased number of triangles.</p><p>Since most of the datasets we collected were quantized to 8 or 16 bits, we also experimented with varying the quantization level of a particular dataset and computing the average order of growth. This experiment is presented in <ref type="figure" target="#fig_8">Figure 9</ref>. The experiment setup is similar to the previous one, but instead of increasing the noise level, we increase the quantization. If quantization by itself were a significant factor, then the plot would show a decreasing trend as we use more bits to store the data. We did not observe, however, such a trend. There are theoretical issues of examining severely quantized volumes with our approach based on the co-area formula (see Section 8), so a deeper investigation is necessary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">DISCUSSION</head><p>The formulation we propose in this work converges to the histogram distribution much faster than directly evaluating the histogram. Recently, there has been work in using local histograms for scientific visualization <ref type="bibr" target="#b10">[11]</ref>. The results presented here should be attractive in these scenarios. Local histograms have less available data, and so are potentially much noisier than their global counterparts, making smoother histogram substitutes such as the ones we present an attractive possibility.</p><p>Section 6.1 focused on how to perform integrals of isosurface area and triangle count over all isosurfaces in the volume in a way that is invariant to range transformations. More generally, however, the techniques presented can be seen as a way to compute expectations of random variables on isosurfaces that is invariant to the transformations. The three methods we propose (Equations 13, 14 and 15) can be used to evaluate expectations of any random variables, by simply using a different a f (h). For example, comparisons of running times for isosurface extraction algorithms can use this formulation to sensibly measure the average time for a given volume.</p><p>The gradient magnitude correction we introduce must be treated carefully in situations where the volume gradient is zero. Volume quantization, in particular, tends to generate such volumes. While the Coarea formula ceases to be directly applicable in those cases, we believe that discrete counterparts of the formula (or volume perturbations in the spirit of Simulation of Simplicity <ref type="bibr" target="#b3">[4]</ref>) could make computation of π f meaningful in these scenarios. Additionally, some datasets include regions where there are clear discontinuities in the data (wave simulations with shocks are the canonical example). We have not experimented with these datasets, although it certainly warrants further investigation.</p><p>One limitation of the presented formulation is that, in a precise sense, it regards every isosurface as equally important. We know, however, that many scientific visualization techniques exploit particular relationships between the isovalues and the underlying volume <ref type="bibr" target="#b7">[8]</ref>. This means that while our method provides a mathematically sound method for computing integrals over all isosurfaces, the user might actually be interested in weighting them in a semantically meaningful way. How to integrate these two aspects remains an exciting avenue for future investigation. Additionally, we emphasize that we are not claiming that Carr et al. <ref type="bibr" target="#b2">[3]</ref>'s formulation is more or less effective at informing the user. That is a very important question that merits careful future examination.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSIONS AND FUTURE WORK</head><p>In this paper, we study the relationship between histograms and isosurfaces statistics following on the footsteps of Carr et al. <ref type="bibr" target="#b2">[3]</ref>. We identify shortcomings of their theoretical framework, and using the Coarea formula from geometric measure theory, we are able to correct their method to correctly accounts for the non-constant gradient magnitude across a volume. This corrected formulation maintains its superior convergence rate over histograms, while now converging to the actual  histogram. We have also shown that it is possible to define average isosurface complexity in a way that is invariant to transformations that change the gradient magnitude but preserve level sets. This formulation explains some of the unexpected results obtained experimentally, and provides an analytical demonstration that the complexity of average isosurfaces in a single volume scales as O(N 2/3 ), confirming, for a particular scenario, the previous estimate of Itoh and Koyamada <ref type="bibr" target="#b6">[7]</ref>.</p><p>In future work, we would like to investigate more deeply the influence of volume artifacts such as noise, quantization and aliasing in the average isosurface complexity. The Coarea Formula naturally generalizes to arbitrary dimensions and codimensions. We want to investigate extensions of this work for joint histograms of multidimensional mappings, and the relation of our derivation to the recent work of Bachthaler and Weiskopf <ref type="bibr" target="#b0">[1]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>REPRODUCIBILITY</head><p>All of the work in this paper is fully reproducible with publicly available datasets and open-source software.</p><p>The datasets and software are available at (c). This effect can also be seen when extracting isosurfaces from typical publicly available experimental volumes (d). Notice that noise makes the volume essentially pathological.</p><p>http://www.sci.utah.edu/˜cscheid/vis2008/histograms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>Convergence properties of histograms (left) and isosurface area (right), from Carr et al.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 :</head><label>2</label><figDesc>A histogram of a continuous, one-to-one function. The histogram is side-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 :</head><label>3</label><figDesc>Illustrating the coarea formula. The coarea formula allows us to go from an integral on the level sets of a (sub-)region R to an integral on the region itself. Even though isovalues of the level sets are uniformly spaced, changes in the gradient magnitude cause the level sets to have different local densities. It is exactly this change in density that is accounted for in the co-area formula by the |∇ f (x)| term. The dashed cross-section of the domain is plotted in the bottom.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 :</head><label>5</label><figDesc>Histograms and Corrected Isosurface Statistics. Notice that the unweighted isosurface areas show fast convergence, but produce different results from the histogram. The corrected term we introduce in this paper keeps the fast convergence, while still approaching the histogram distribution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 :</head><label>6</label><figDesc>Some transformations that preserve all level sets of a given volume change the value ofÃ. The Coarea formula tells us thatÃ (defined in the text) is in essence the integral of the gradient magnitude. It is clear, then, thatÃ( f ) =Ã(g • f ), even though every level set in f also exists and g • f . In other words, the curves are generally shifted vertically (except for the fixed points of g), but each curve traces the same values in the domain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 4 :</head><label>4</label><figDesc>Isosurface statistics for a spherical function distribution with non-constant gradient magnitude. Our improved isosurface statistics converge to the histogram even in the case of nonconstant gradient magnitudes in the domain. Notice although both weighted and unweighted triangle areas are smooth curves, indicating fast convergence, only the gradient weighted areas (and its approximations) converge to the histograms.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 :</head><label>7</label><figDesc>Plot of input sample size versus average triangle count. Our experiments show an even higher power (O(N 0.96 )) than previously reported (O(N 0.82 )).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 :</head><label>8</label><figDesc>Plot of noise level versus average complexity. Noiseless volumes have average complexity close to O(N 2/3 ), and noise moves the complexity towards the O(N) asymptote. Notice that aliasing causes a higher initial complexity measurement.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 :</head><label>9</label><figDesc>Quantization level versus average complexity, with no noise. Quantization does not seem to influence the order of growth in either direction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 :</head><label>10</label><figDesc>Example isosurface extracted from a distance function f (x) = |x| with added gaussian noise with standard deviation increasing from 1 (a), to 3 (b), and 30</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>are with the Scientific Computing and Imaging Institute, University of Utah. E-mail: {cscheid, jmschrei, csilva}@sci.utah.edu.</figDesc><table /><note>• Brian Duffy and Hamish Carr are with the UCD School of Computer Science &amp; Informatics, University College Dublin, Ireland. E-mail: {B.Duffy, hamish.carr}@ucd.ie. Manuscript received 31 March 2008; accepted 1 August 2008; posted online 19 October 2008; mailed on 13 October 2008. For information on obtaining reprints of this article, please send e-mailto:tvcg@computer.org.</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We would like to thank Peer-Timo Bremer, Valerio Pascucci and Ajith Mascarenhas and the anonymous reviewers for insightful discussions and helpful comments that helped us to substantially improve this paper. Carlos Scheidegger is supported by an IBM Ph.D. Student Fellowship. Brian Duffy is supported by an Ad Astra Scholarship from UC Dublin. This research has also been funded the Department of Energy SciDAC (VACET and SDM centers), the National Science Foundation (grants CNS-0751152, CCF-0528201, OCE-0424602, CNS-0514485, IIS-0513692, CCF-0401498, OISE-0405402, CNS-0551724), Science Foundation Ireland, and IBM Faculty Awards (2005, 2006,  and 2007).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bachthaler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<title level="m">Continuous scatterplots. IEEE Transactions on Visualization and Computer Graphics (Proceedings of Visualization 2008)</title>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The contour spectrum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="167" to="173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">On histograms and isosurface statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Duffy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Denby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics (Proceedings of IEEE Visualization</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="1259" to="1265" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Simulation of simplicity: A technique to cope with degenerate cases in geometric algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Mucke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Computational Geometry</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page" from="118" to="133" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Woods</surname></persName>
		</author>
		<title level="m">Digital Image Processing</title>
		<meeting><address><addrLine>Englewood-Cliffs, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice-Hall Inc</publisher>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
	<note>2nd ed. edition</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The history of histograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ioannidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Very Large Databases (VLDB) 2003</title>
		<meeting>Very Large Databases (VLDB) 2003</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Automatic isosurface propagation using an extrema graph and sorted boundary lists</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Itoh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Koyamada</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="319" to="327" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Semi-automatic generation of transfer functions for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Durkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Interactive volume rendering using multi-dimensional transfer functions and direct manipulation widgets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="255" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH 1987</title>
		<meeting>ACM SIGGRAPH 1987</meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Local histograms for design of transfer functions in direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lundstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Ljung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ynnerman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1570" to="1579" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Geometric Measure Theory -A Beginner&apos;s Guide</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Morgan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Elsevier</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A variational approach to eulerian surface processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mullen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mckenzie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH 2007)</title>
		<meeting>ACM SIGGRAPH 2007)</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page">66</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A survey of the marching cubes algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Newman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers And Graphics</title>
		<imprint>
			<biblScope unit="page" from="854" to="879" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fast detection of meaningful isosurfaces for volume data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pekar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wiemker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hempel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="223" to="230" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Salient iso-surface detection with model-independent statistical signatures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Tenginakai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="231" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wyvill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mcpheeters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wyvill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Structure for Soft Objects. Visual Computer</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="227" to="234" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
