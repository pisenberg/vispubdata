<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Visual Steering -Rapid Visual Prototyping of a Common Rail Injection System</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE Computer Society</roleName><forename type="first">Krešimir</forename><surname>Matković</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mario</forename><surname>Jelović</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Helwig</forename><surname>Hauser</surname></persName>
						</author>
						<title level="a" type="main">Interactive Visual Steering -Rapid Visual Prototyping of a Common Rail Injection System</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Interactive computational steering</term>
					<term>interactive visual analysis</term>
					<term>simulation</term>
					<term>common rail injection system</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Interactive steering with visualization has been a common goal of the visualization research community for twenty years, but it is rarely ever realized in practice. In this paper we describe a successful realization of a tightly coupled steering loop, integrating new simulation technology and interactive visual analysis in a prototyping environment for automotive industry system design. Due to increasing pressure on car manufacturers to meet new emission regulations, to improve efficiency, and to reduce noise, both simulation and visualization are pushed to their limits. Automotive system components, such as the powertrain system or the injection system, have an increasing number of parameters, and new design approaches are required. It is no longer possible to optimize such a system solely based on experience or forward optimization. By coupling interactive visualization with the simulation back-end (computational steering), it is now possible to quickly prototype a new system, starting from a non-optimized initial prototype and the corresponding simulation model. The prototyping continues through the refinement of the simulation model, of the simulation parameters and through trial-and-error attempts to an optimized solution. The ability to early see the first results from a multidimensional simulation space-thousands of simulations are run for a multidimensional variety of input parameters-and to quickly go back into the simulation and request more runs in particular parameter regions of interest significantly improves the prototyping process and provides a deeper understanding of the system behavior. The excellent results which we achieved for the common rail injection system strongly suggest that our approach has a great potential of being generalized to other, similar scenarios.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION AND RELATED WORK</head><p>Increasing complexity and a large number of control parameters make the design and understanding of complex systems (such as automotive engines) impossible without simulations. Strict emission rules and regulations force car manufacturers to design improved engines, in very short time <ref type="bibr" target="#b1">[2]</ref>. To meet those requirements, car manufacturers use simulations as a cost-efficient, and often the only possible way to design systems with desired characteristics. They use many types of simulation, including Computational Fluid Dynamics (CFD).</p><p>In this paper, we describe results from a recent project where the need for interactive steering emerged. We used interactive visual analysis to support an interactive design process. In contrast to the usual, very time consuming 3D CFD simulation, 1D CFD that is alternatively used in injection system simulation can be computed very fast. It is possible to run tens of thousands of simulations for a large set of parameters. However, the brute force approach, where a simulation runs for all possible parameter combinations, is often not feasible. Instead, interactive simulation steering helped us to insure a reasonably short design time. A pure numerical optimization is sometimes too complex and a user often gets only the final results, without proper insight.</p><p>The background of this work was the task to design an injection system. We developed a steering framework to support this task. Our interdisciplinary project setup provided us with valuable feedback during the design process in terms of the usefulness of the proposed approach and suggested improvements. We started from a simple model and gradually made it more and more complex.</p><p>One of the important parts of the automotive engine system is the injection system. The piezoelectric stack actuator is the main com- ponent of the injection system model <ref type="bibr" target="#b4">[5]</ref>. When an input voltage is applied, the electric field across the ceramic layers of the stack actuator induces a mechanical strain. The strain results in an elongation of the stack that exhibits the rate-independent hysteresis between the electric voltage (force) and mechanical strain (displacement).</p><p>We identified tasks that can be generalized to other problems and illustrated how we designed and tuned the model. The model complexity did not allow us to run all possible simulations at the beginning and to analyze the results. Such an approach would also result in numerous unnecessary simulation runs and would waste time and computational resources. Furthermore, we did not have a complete model at the beginning. It was gradually built as we gained insight during the design process. Our approach, the use of interactive visualization and coordinated multiple views as a steering mechanism for simulation, proved to be very efficient. In this paper we show how the tight integration of visualization and simulation can significantly improve an engineer's workflow as compared to decoupled systems. The excellent results which we achieved for the common rail injection system and the very positive feedback from domain experts strongly suggest that our approach has a great potential and can be generalized to other, similar scenarios.</p><p>The decoupling of simulation and analysis can present significant obstacles and make it very difficult to effectively manage large amounts of simulation data <ref type="bibr" target="#b17">[18]</ref>. We should be able to interactively steer computations, change simulation parameters or representation and immediately see the simulation results. Computational steering and interactive visualization emerged in 1980s and 1990s as some of the most useful visualization paradigms for computational science <ref type="bibr" target="#b2">[3]</ref>.</p><p>Many simulations are computationally intensive and may require interpolation for sensitivity analysis and optimization. Sensitivity analysis and optimization require the domain expert to interpolate the observed simulation data. This interpolating function is a metamodel of the underlying simulation model which is treated as a black box. An example is the Kriging interpolator representing a global metamodel that covers the whole experimental area <ref type="bibr" target="#b18">[19]</ref>. However, we can also iteratively refine the simulation model. That way we can refine both the simulation parameter values and the simulation model.</p><p>The simulation output data is often visualized using scientific visualization methods <ref type="bibr" target="#b5">[6]</ref>. Using visualization and spatial tools to under-stand complex systems is not a new idea. James C. Maxwell, one of the most important physicists of the nineteenth century <ref type="bibr" target="#b21">[22]</ref>, often used visual-spatial thinking. An excellent example of his approach is a construction of 3D clay model of a surface based on Willard Gibbs' work. We've come a long way since those early beginnings. However, thinking about the science is still at the core of scientific visualization <ref type="bibr" target="#b7">[8]</ref>. The most important scientific visualization research problems include perceptual issues, human-computer interactions, global/local visualization, feature detection and visual abstraction, to name a few <ref type="bibr" target="#b7">[8]</ref>.</p><p>Computational steering integrates modeling, computation, data analysis, visualization, and data input components of a simulation <ref type="bibr" target="#b17">[18]</ref>. However, integrating a simulation within a computational steering can be a very difficult problem. We need to address four facets of the problem <ref type="bibr" target="#b8">[9]</ref>: control structures, data distribution, data presentation, and user interfaces. Since computational steering is a highly interactive process, the user interface is a critical component of a computational steering environment <ref type="bibr" target="#b15">[16]</ref>. Kreylos et al. <ref type="bibr" target="#b11">[12]</ref> describe a system for real-time interactive visualization of computational fluid dynamics (CFD) simulations that allows a user to place and manipulate visualization primitives during an ongoing simulation process. Vetter and Reed <ref type="bibr" target="#b22">[23]</ref> described performance monitoring, control, and interactive steering of computational grids. Wenisch et al. <ref type="bibr" target="#b23">[24]</ref> demonstrated computational steering of CFD simulations on distributed computers.</p><p>There is extensive literature about user interface and visualization of simulation data from an engineering perspective. Laramee et al. <ref type="bibr" target="#b12">[13]</ref> use different flow visualization methods to show various aspects of the simulation data to support insight and visual analysis of the coolant flow through the cooling jacket of a car engine. Konyha et al. <ref type="bibr" target="#b10">[11]</ref> use 3D icons to analyze simulation data of chain and belt drives. Matković et al. <ref type="bibr" target="#b14">[15]</ref> describe a method for the analysis of a fuel injection system that provides a highly abstract view of the injection system.</p><p>Using multiple, interactively linked views of the same data set allows the user to productively combine the information gathered from the different views <ref type="bibr" target="#b6">[7]</ref>. Doleisch et al. <ref type="bibr" target="#b3">[4]</ref> use multiple linked views for analysis of CFD simulation data. More advanced multiple view visualization systems can be freely configured <ref type="bibr" target="#b16">[17]</ref> and provide flexible coordination of views <ref type="bibr" target="#b19">[20]</ref>. As the number of linked views and the amount of coordination increases, it may be necessary to visualize the visualization's structure and operation <ref type="bibr" target="#b20">[21]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">COMPUTATIONAL/INTERACTIVE/SIMULATION STEERING</head><p>We used our previously developed coordinated multiple views visualization tool ComVis <ref type="bibr" target="#b14">[15]</ref> and extended its functionality to interface it with the simulation tool HYDSIM which is a part of the AVL Workspace <ref type="bibr" target="#b0">[1]</ref>. In this way a steering framework has been established and used in the project.</p><p>The initial design goal for the visualization tool ComVis was rapid prototyping of new visualization techniques within the scientific context. As a consequence the tool was designed to be flexible in a way that it is easy to add new views and support new data types. The tool is intuitive to use and supports advanced interactions (multiple, iterative brushing). As a result, the tool is easy to use for domain experts from different domains (medical, engineering, etc.), and can use/read generally used data formats to provide access to existing data.</p><p>The simulation tool, HYDSIM, is a modular program for the dynamic analysis of hydraulic and hydro-mechanical systems. It is based on the theory of fluid dynamics (1D) and vibration of multi-body systems (2D). The user defines a model using 2D graph-like structures with icons and connecting elements. The defined model provides a general representation of the system topology. For each element (represented by an icon) the user can specify properties for the particular case. Once the user completes a definition of the model, the simulation provides output parameters values. In a typical workflow, a domain expert analyzes these results and, if necessary, modifies the simulation model and repeats the simulation until the desired results are achieved. Earlier we pursued an alternative approach to compute a very large set of simulations runs at once (offline) and analyze the results afterwards <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b14">15]</ref>. Although this was a significant improvement <ref type="figure">Fig. 1</ref>. An iterative approach to prototyping. A combination of the simulation and visualization tools and related data allows us to design at different levels of abstraction. We distinguish three levels of the interactive steering process depicted with loops A, B, and C. The first loop, loop A, is based on the available simulation results. We explore them, get insight and store results (snapshots). If this is not sufficient, new simulation results can be generated (loop B). The simulation model is still not changed, only parameters are being refined. Finally, it is also possible to change the simulation model (loop C).</p><p>compared to the traditional way, we still had to specify all combinations of input parameters in advance.</p><p>Our new framework makes it possible to define new simulations using the visualization tool. The visualization tool is used for the analysis and steering of the simulation. That makes it easy for the domain expert to generate new simulations and to refine or to filter the simulation dataset. Each simulation has a set of control (input) parameters and a set of output parameters that are computed for a given input. The main idea is to run many simulations with different control parameter settings (they are defined by lower limit, upper limit, and step size), and to use multiple, coordinated views to understand the model and to support the expert in injection system design.</p><p>We provide four basic operations: refining or coarsening some control parameters (changing the step); narrowing down the control parameter interval (changing boundaries); adding new control parameters; and removing some existing control parameters. If we represent data in tabular form, the basic operations correspond to adding and removing rows (refinement and filtering parameters) or adding or removing columns (adding or removing parameters).</p><p>The domain expert estimates the coarse boundaries of the parameters, runs a sufficient number of simulations and sees what parameter values make sense and what values are not allowed based on the output values. In the case of fuel injection systems, the injected fuel mass was one of the output parameters often used to identify parameter values that are not allowed. If there is not enough injected fuel or if there is too much injected fuel, the engine will not run properly.</p><p>We use an iterative approach ( <ref type="figure">Figure 1</ref>). The domain expert uses the simulation tool to create the initial simulation model, specify the initial control parameter values and produce simulation results <ref type="figure">(Figure</ref> 1, steps 1, 2, and 3). Only a part of the injection system is modeled in detail while the rest is replaced with modelled "ideal" values. These ideal values became the target when we refined the model. The goal is to create a simulation model and to determine the control parameter values that produce the simulation results that are as close as possible to the idealized result. We repeat the process at three different levels.</p><p>The user first designs a very simple simulation model and sets the parameters. The user then extends the simulation model and provides the parameters for a more complex model that represents the second level. Finally, the user defines the complete simulation model that makes it possible to go back and forth between different levels (as it is often the case during prototyping) and to change already tuned parameters.</p><p>The domain expert carries out the interactive steering process at three different levels. The first level of iterative prototyping focuses on the already generated simulation results. The expert uses the visualization tool to investigate the simulation results and, by extensive use of brushing and linking, can get insight and create first reports (snapshots) about the current prototype results <ref type="figure">(Figure 1</ref>, steps 4 and 6).</p><p>If the current simulation results are not sufficient, the expert can proceed to the second level. The second level of iterative prototyping involves refining the control parameter values <ref type="figure">(Figure 1</ref>, step 5), generating new simulation results using the current simulation model and then returning to the first level of prototyping. The expert can do it in an interactive way and request new simulation results from the simulation tool. As new simulation results are computed, the data in the visualization tool is automatically updated. During this process visual analysis can proceed and benefit from better data resolution.</p><p>Based on the insight from the data, the expert may decide to refine the simulation model. At the third level of iterative prototyping the expert uses the simulation tool to update the simulation model and then returns to the second level of prototyping. As this is a larger step which makes it necessary to change internal data representation, the expert has to wait until initial setup is completed and the first results for new model are ready. This can take a few minutes. Once the first set of simulation results is computed and the visualization tool updates the internal structure, the whole process becomes interactive again. The simulation results are uploaded on the fly as they are computed.</p><p>In our implementation we always define the model using the HYD-SIM tool. The HYDSIM creates simulation definition files and runs the simulations. As simulations are computed, output files are created, one directory for each simulation run. Our visualization tool, ComVis, reads the first simulation results, builds the internal data model, and visual analysis starts. The visualization tool checks for new output files and loads them when they are available. ComVis offers a possibility to specify new simulation parameters, as well. If the user requests new simulations from the visualization, ComVis creates HYD-SIM input files and starts HYDSIM. HYDSIM generates new output files which are then automatically loaded into the visualization tool. Model changes are done in HYDSIM, and in these cases ComVis has to recalculate internal data structures which usually takes a while (minutes). Once the new model is created, first simulations are computed, the internal data structures needed for visualization are created, and the process continues in a usual way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RAPID VISUAL PROTOTYPING AND THE DESIGN OF A COM-MON RAIL INJECTION SYSTEM</head><p>We used the developed prototyping tool to design a common rail injection system. We selected this task for two reasons, i.e., the availability of fast simulation algorithms and the importance of injection in an overall Diesel engine efficiency and emission characteristic.</p><p>There are many (often conflicting) goals of a Diesel engine design, including high power, good fuel efficiency, meeting emission regulations, low noise levels, and drivability <ref type="bibr" target="#b13">[14]</ref>. The fuel injection system is the key Diesel engine component to achieve the goals. The common rail injection system has several attractive characteristics: injection pressure and quantity can be controlled with a high degree of flexibility, multiple fuel injections are possible within one injection cycle and the time and duration of the injections can be controlled precisely by the engine control unit based on the engine speed and load. These characteristics are key factors in meeting current and future (very demanding) emission regulations.</p><p>The common rail injection system consists of two parts, one hydromechanical and one electronic. The hydro-mechanical part determines the simulation model, while the electronic part determines the actua- The blocks represent logical grouping that has no influence on the model topology. An actual injector, used for each cylinder in a car engine, is shown on the right. The control parameters are depicted in red, and the output parameters in blue. The exact description of the parameters is too long for this caption and can be found in the main text, instead.</p><p>tor control parameters. Our goal is to design both parts by iteratively adjusting the simulation model and the control parameter values.</p><p>We start by providing the end result of the design process ( <ref type="figure" target="#fig_0">Figure 2</ref>). The reason for that is to provide the context and the basic expertise for the system design, something that experts already have. The main assembly components of the injector are the piezo actuator with the hydraulic amplifier (Block III from figure 2), the control valve with a certain control volume (Block II) and the nozzle (Block I). The piezo actuator governs the motion of the control valve. Block IV is the fuel supply from the common rail, which is not analyzed in this work.</p><p>Once the simulation model is created, the expert has to set up the control parameters (the parameters listed in red in <ref type="figure" target="#fig_0">Figure 2</ref>). For each set of the control parameters the output parameters are computed (the parameters listed in blue in <ref type="figure" target="#fig_0">Figure 2</ref>). All of the control parameters in our case are scalar values, and all of the output parameters are time series data. An additional control parameter is the actuator (the topmost element in the <ref type="figure" target="#fig_0">Figure 2</ref>) behavior. We model the actuator curve depicted in <ref type="figure">Figure 3</ref> using a set of scalars, determining the start and duration of the pilot and main injection, their maximum amplitudes, and opening and closing times.</p><p>The model has 11 control parameters and setting them is the main task of the injection system design. The actuator curve parameters are <ref type="figure">Fig. 3</ref>. The actuator, the top most element in the model in <ref type="figure" target="#fig_0">Figure 2</ref>, is modeled using these parameters. This is the only set of control parameters that will be changed during the engine operation. Depending on the operation point (speed and load), the electric managing unit (EMU) will select the shape of actuator curves. <ref type="figure">Fig. 4</ref>. A simplified model used in the first iteration. We use only one section and the rest is represented by an ideal actuator. Once the simplified model is tuned, we gradually extend it to include the rest of the model, as shown in <ref type="figure" target="#fig_0">Figure 2</ref>.</p><p>also set, but they vary, based on the crankshaft load and speed, during the actual engine operation. The electronic control unit (ECU) of a car engine controls these curves. ECU has a lookup map of all possible curves and selects a curve based on the current crankshaft load and speed. If a car runs downhill at a certain speed, the crankshaft load can even be negative, so the actuator curves are chosen accordingly. On the other hand, for a high crankshaft load and a certain speed, the actuator curves and resulting injection have completely different shapes. However, a detailed discussion of injection curve modeling is out of the scope of this paper.</p><p>One design option <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b14">15]</ref> is to run the simulation for all possible combinations of parameters and to explore the system. If we use ten values per control parameter, there are 10 11 possible combinations of control parameter values. Since we can run about ten simulations per minute (for the model in <ref type="figure" target="#fig_0">Figure 2</ref>), we would need 10 10 minutes, or more then 19,000 years to complete all simulation runs. It is clear that such simulation time, even on a large cluster, is not feasible. Instead, we start with a simplified model, use interactive visualization to drill down the control parameter space, and once the initial control parameters are fixed, the simulation model is extended.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">First Model</head><p>We start with a simplified model <ref type="figure">(Figure 4</ref>), Block I from <ref type="figure" target="#fig_0">Figure 2</ref> with the actuator directly added on the top. This is supposed to be a direct actuator with simple characteristics. We tune the nozzle first. We use only four control parameters ( <ref type="table">Table 1</ref>). It takes about 12 minutes to calculate 750 cases (60 simulations per minute for this simpler model). After this setup time, we explore the first data set to achieve a certain amount of injected fuel during the pilot and main injection. The target values were set according to <ref type="table">Table 2</ref>.</p><p>We compute the calculated output parameter injected mass as a function of time. It is a cumulative mass over time. The value at the end corresponds to the totaly injected mass during injection. As we are interested in the injected mass after the first pilot injection and after the main injection, we aggregated the injected mass curves so to have the injected mass after first pilot and the total injected mass. We brush now the scatter plot depicting these two aggregated parameters. <ref type="figure" target="#fig_1">Figure 5</ref> a shows this case.</p><p>At the same time, other coordinated views show the control parameters ( <ref type="figure" target="#fig_1">Figure 5a</ref>, scatter plots in the first column) causing the targeted injected mass. We can clearly see that the wanted injected mass is possible only for some combinations of nozzle diameter (d sac) and angle of needle seat (al pha seat), and for all combinations of flow discharge coefficient (m ju) and turbulent flow coefficient (c turb). We refine the selection by selecting high pressure (as far as possible for the given target) and the desired needle acceleration. <ref type="figure" target="#fig_1">Figure 5b</ref> illustrates the selections (brushes 2 and 3). Note the zoomed-in scatter plot of accelerations which helped in the selection.</p><p>The allowed control parameter space has narrowed significantly ( <ref type="figure" target="#fig_1">Figure 5b</ref>, scatter plots in the first column), and the expert can now select the first parameters ( <ref type="table" target="#tab_2">Table 3</ref>). Note that this is a quite coarse estimation. The parameters are fine-tuned at a later stage. However, even this coarse case shows which input ranges make no sense.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Second Model</head><p>We refine the simplified model <ref type="figure">(Figure 4)</ref> to create a more detailed model containing Block II. The actuator with the control valve is placed on top of Block II now. This actuator is described in <ref type="figure">Figure 3</ref>. We tune this part using the fixed control parameters for Block I. We are interested in the control volume size (CV size) and in the inlet/outlet throttle flow resistance (Z inl and Z out). 1,100 simulations are computed (20 simulations per minute since the simulation time changes with the model complexity). For the same target values as in the first case, we set the control volume size to ten. <ref type="figure" target="#fig_2">Figure 6</ref> shows the parallel  Further refinement of targets using additional brushes for pressure and acceleration helps us to narrow possible parameters and to estimate input parameters for the first step. coordinates view of the control parameters for the target values. If we look at the mass rate curve view now, a new, interesting phenomenon can be observed <ref type="figure" target="#fig_3">(Figure 7)</ref>. Note the width of curves at injections. There are some curves starting later and some starting on time. The actuator on the top is fixed, i.e., it has always the same input curve <ref type="figure">(Figure 3</ref>). This means that some of the parameter combinations can cause an injection delay. Injection delay is the time period between the injection reaction and the actuator action. In our case this is the difference between the start of the pilot (or main) injection as depicted in the curve view and the actuator starting times (P f irst or M f irst). This is a surprising finding, since we did not expect that this delay would show up at this stage of modeling.</p><p>The injection delay is an unwanted behavior and we have to be sure that it does not happen in the final model. Compared to the first, simplified model, the control volume which is placed just above needle top is not directly connected to the actuator any more. It is working in close correlation with two orifices (inlet and outlet) that supply the volume with fuel and drain it. We have to be sure that delay is as small as possible at this stage of modeling.</p><p>The correlation between the mass flow rate through the nozzle (mass rate) curves and the control volume size (CV size) is easy to detect. Simple brushing shows that the larger the control volume size is, the narrower (less injected fuel) the curves are. <ref type="figure" target="#fig_3">Figure 7</ref> depicts the curves selection for the maximum values of CV size. The inlet and outlet flow resistance (Z inl and Z out) are more challenging and to investigate this problem we refine the model. New limits and step sizes are selected using the visualization tool and new simulations are initiated. The control volume size is set to the minimum, CV size 10, and new flow resistance parameters Z inl and Z out are set <ref type="table">(Table 4)</ref>. The simulation tool is started and the visualization gets updated as new simulations are computed. The visualization tool checks if new data is available and automatically loads it. Since we do not change the model in this case, the update of the internal data and its representation is straightforward. During this process we continue the visual analysis and exploration. In this particular case, approximately 1,680 new simulations are computed, and iteratively loaded. Of course, the user can stop the simulation or request another refinement at any time.</p><p>We used the multiple view setup to observe what is happening. The target values for the injected mass, pressure in the SAC volume P sac, and the needle acceleration are set, and flow resistance parameters show a linear dependency. <ref type="figure" target="#fig_4">Figure 8</ref> shows the flow resistance parameters on the top and the mass rate curves in the bottom. Note the much denser parameter space due to the refinement. After a detailed exploration, we are able to remove the influence of the parameters on the delay. We understand what is going on, the delay turns out to be logical, and the parameters are set to 1.6 and 2.6 for Z inl and Z out.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Third Model</head><p>We are ready for the final step now where we further extend the model. It now corresponds to the model in <ref type="figure" target="#fig_0">Figure 2</ref>. Note that the control parameters for Block I and Block II are set (but they can be changed) and we tune the last part now. There are four parameters in the last block: <ref type="table">Table 4</ref>. Refined Control Parameters for Second Model in order to investigate injection delay.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Parameter Range</head><p>Step Z inl 1,0 -2.0 0.025 Z out 2.0 -3.0 0.025  Due to the model complexity we now calculate approximately ten simulations per minute. 900 parameter variations are set and we start <ref type="figure">Fig. 9</ref>. Two scatterplots showing the control parameters for the final model. We further refine the Area Bypass and Area Valve parameters. The red points correspond to selected desired output parameters. <ref type="figure">Fig. 10</ref>. Combinations of the control parameters as created during the iterations. We have a coarse mesh of parameter values at the beginning, and we refine them twice during the process. All combinations of the control parameters are shown here, we can hide unwanted iterations during the analysis, if necessary. the visual exploration. In contrast to the simple parameter refinement, the step change here represents a model change. Internal data structures in the visualization tool have to be changed. This is considered to be a larger step and the user has to wait a few minutes for the first results. Once the simulation software computes the initial results, parameter refinement can be done on the fly. During parameter refinement we continue the visual analysis and the data is automatically updated. The target values for the injected fuel mass (pilot and main) remain the same. The actuator is still fixed. <ref type="figure">Figure 9</ref> shows the parameters after the target values were selected. Two parameters have no significant influence, the target values can be achieved with all possible combinations of the flow resistances Res Bypass and Res Outlet. We set the values to 2.0 and 1.0, respectively. The other two parameters show a far more interesting behavior. A wide range of parameter values are initially investigated. It is successively refined as we realized where we need more information. <ref type="figure">Figure 10</ref> shows the parameters as computed at the end. We use two iterations, we refine the parameters once and then refine a subrange of parameters once more. This represents parameter refinement, and the data in the visualization tool is updated as new simulations are computed. During computation we continue the visual analysis. Output values are used to steer the refinement. Based on the output values we decide where to refine input parameters. <ref type="figure">Figure 11</ref> shows an example of the output parameter values as they are computed in various steps. Resulting outputs from various iterations are highlighted in the figure in order to illustrate results from various iterations. <ref type="figure" target="#fig_0">Figure 12</ref> shows the target injected mass, the corresponding pressure, control parameters, and mass rate curves. Note the scatterplot on <ref type="figure">Fig. 11</ref>. Six scatterplots showing output parameters as computed during six iterations of simulation steering. We can see there are many scattered values in the beginning. We then used interactive brushing in other views to get insight on how these output parameters are changing. Finally we can identify the desirable area, and the simulation results are refined in that area. <ref type="figure" target="#fig_0">Fig. 12</ref>. The final model. The target injected mass on the left is defined using a quite narrow range here. The corresponding pressure, input parameters and mass rate curves are shown. Everything seemed to be correct in this simulation model. the far left showing the same data (also in <ref type="figure">Figure 11</ref>) as the scatterplot from the very first model <ref type="figure" target="#fig_0">(Figure 2</ref>). The scatterplot in <ref type="figure" target="#fig_0">Figure 12</ref> is zoomed in and shows the data from the final iteration only. We are far off the target values at the beginning and by successive refinement and simulation steering we achieve a finer granularity around the target area.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Final Model</head><p>We now set the final control parameters. Any of the data points of the injected mass shown in <ref type="figure" target="#fig_0">Figure 12</ref> can be selected. They all result in a desired behavior. We have to select one set, however, as they can not be changed later. Due to the wanted pressure and needle acceleration, we select the effective flow area at the valve seat -Area Valve and the flow discharge coefficientm ju to be 0.071 and 0.54, respectively. Our injector now is set.</p><p>The actuator on the top used to drive the injection in a real setup was fixed up to now. As stated before, the ECU of the engine will change the actuator during operation. Our parameters, on the other hand, remain the same. They cannot be changed at runtime.</p><p>The last task is to check if the parameters also yield satisfying output for various actuator curves. We vary the actuator settings and again several times refine the parameters. Eventually we are satisfied and want to see all the response curves for all the combinations of actuator parameters (1,600 combinations are chosen).</p><p>To our great surprise, we see that some curves exhibit a very unusual behavior. The curve views in <ref type="figure" target="#fig_5">figure 13</ref> show the response curves for Needle acceleration, and pressures in the nozzle and control volumes, P nozle and P control, with the undesired peaks marked with red ellipses. Those peaks indicate system oscillations at specific points. Any oscillation in system is dangerous and undesired. The amplitude of any oscillation may rise above system limits for some unknown situations.</p><p>Now we have to find the reason for these oscillations in order to predict and avoid such a behavior. Furthermore, especially for the fuel injection system, any kind of secondary oscillations may open the nozzle at the wrong time and lead to fuel inflow in the combustion chamber and an undesirable combustion process.</p><p>To investigate the oscillations further, we isolate the peaks using a line brush in the curve view. The tool allows to simply draw a line across the curves, and all curves crossing the line will be selected. The composite brushing functionality is supported as well.</p><p>The scatter plot in <ref type="figure" target="#fig_5">Figure 13</ref> shows pilot and main injection intervals, P Int and M Int, with the peaks selected. An unexpected and very interesting finding is the pattern at which peaks appear at 3 M Int values. It shows oscillating behavior in the parameter space. We can easily skip those values, and program the ECU not to use these parameter values.</p><p>However, puzzled by this discovery, we want to investigate this phenomenon further. We go back one more time. The parameters with most influence up to now: m ju, Area valve, Area Bypass and M int are varied once more. Undesirable peaks are present again, but the control parameters are chosen to be far away from the settings which caused them. The previously set parameters are changed, and the in- jector is finally set. <ref type="table" target="#tab_3">Table 5</ref> shows the final values of the control parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCLUSION</head><p>The coupling of interactive visualization with the simulation back-end facilitates fast prototyping of a system under development. We start from a non-optimized initial prototype and the corresponding simulation model and through an iterative process, going back and forth between different levels of abstraction, we refine the simulation model and design a system that meets the requirements. In doing so we are significantly reducing the number of simulation runs. The brute force approach requires to run simulations for all possible combinations of the control parameter values which is not computationally feasible. The described approach requires only several thousands simulation runs to find a design that meets the requirements.</p><p>The interdisciplinary setup of this project allowed to develop this steering solution in the context of a real-world problem. It was very rewarding to see how the tool facilitated new discoveries (Section 3.4), even quite surprising ones. The discoveries provided much better insight and allowed us to anticipate and address oscillation problems and thus create a much better design. Engineers still only seldom use interactive visualization and usually analyze simulation results using static 2D charts, depicting few simulation runs simultaneously in most cases. They also use automatic optimization methods, but our approach offers completely new view and insights.</p><p>The three levels of iteration (simulation data, control parameters values, simulation model) provide different levels of interactivity. While viewing the simulation data is done in real-time, changing the simulation model introduces a noticeable delay. However, since we can go back and forth between different levels, instead for waiting for the simulation model update to propagate to the simulation data, we use the simulation data level and continue our analysis until new simulation data are generated. This approach is rather general and applicable to a wide range of design problems.</p><p>We plan to explore a variety of design problems and related solutions to identify some design patterns. We will further improve the interactivity of the developed tool. Some semi-automatic support for drill-down, possibly involving approaches to (semi-) automatically detect a region which seems to be out of the range of interest will be researched as well. Finally, we will explore a collaborative, multi-user version of the tool to "share" the design process among several experts.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>The final injection simulation model and the four main blocks.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 5 .</head><label>5</label><figDesc>Multiple coordinated views show control and output parameters. a) We brush target values for the injected fuel mass. All combinations of c turb and m ju can produce the desired output (second scetterplot) while only some combinations of d sac and al pha seat are possible. b)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 6 .</head><label>6</label><figDesc>Second Model: The parallel coordinates view of the control parameters for the target values. Note that only low CV size values are possible, while there are many combinations of Z inl and Z out which allow the desired output.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 7 .</head><label>7</label><figDesc>Mass rate curves for the second model. a) Many curves of different widths, showing significant delays for some parameter combinations. b) The selection corresponds to the maximum values of CV size, such curves would result in insufficient fuel mass. Note also that pilot injections are completely missing in this selection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 8 .</head><label>8</label><figDesc>The scatterplot shows refined input parameters. We have selected desired output parameters (on views which are not displayed in the image) and the selection is shown in red. The mass rate curves have a desired shape now. The linear correlation of Z inl and Z out is unexpected.the bypass flow resistance (Res Bypass), the outlet flow resistance (Res Outlet), the effective flow area at the bypass seat (Area Bypass), and the effective flow area at the valve seat (Area Valve).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 13 .</head><label>13</label><figDesc>With the final model fixed, the actuator curves are varied. Quite surprisingly, there are unwanted peaks in the output curves for multiple parameters. Red ellipses show these peaks. It is not intuitively clear why and when they occur, and we explored it in more details. The assumption that all parameters are set and that actuator variations are just a routine fails and we had to go several steps back and run new simulations. Corresponding values of M int are shown in the scatter plot on far right. Note the puzzling oscillating behavior.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Krešimir Matković is with VRVis Research Center, Vienna, E-mail: Matkovic@VRVis.at. Denis Gračanin is with Virginia Tech, E-mail: gracanin@vt.edu. Mario Jelović is with AVL AST, Zagreb , E-mail: mario.jelovic@avl.com. Helwig Hauser is with University of Bergen, E-mail: Helwig.Hauser@uib.no. Manuscript received 31 March 2008; accepted 1 August 2008; posted online 19 October 2008; mailed on 13 October 2008. For information on obtaining reprints of this article, please send e-mailto:tvcg@computer.org.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .Table 2 .</head><label>12</label><figDesc>Control Parameters for the first case. Target Parameters for the first case.</figDesc><table><row><cell>Parameter</cell><cell>Min</cell><cell>Max</cell><cell>Step</cell></row><row><cell>d sac</cell><cell>0.7</cell><cell>0.9</cell><cell>0.05</cell></row><row><cell>al pha seat</cell><cell>40</cell><cell>65</cell><cell>5</cell></row><row><cell>c turb</cell><cell>0.8</cell><cell>1.0</cell><cell>0.05</cell></row><row><cell>m ju</cell><cell>0.7</cell><cell>0.9</cell><cell>0.05</cell></row><row><cell>Parameter</cell><cell></cell><cell cols="2">Target range (mg)</cell></row><row><cell cols="2">Pilot in jected mass</cell><cell cols="2">2 -2.5</cell></row><row><cell cols="2">Main in jected mass</cell><cell cols="2">17 -22</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>Control Parameters selected for First Model.</figDesc><table><row><cell>Parameter</cell><cell>Target range (mg)</cell></row><row><cell>d sac</cell><cell>0.75</cell></row><row><cell>al pha seat</cell><cell>50</cell></row><row><cell>c turb</cell><cell>0.9</cell></row><row><cell>m ju</cell><cell>0.7</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 5 .</head><label>5</label><figDesc>Final control parameters. The Block IV parameter values are not analyzed at this stage (listed for the sake of completeness).</figDesc><table><row><cell cols="2">Param. Name</cell><cell>Description</cell><cell cols="2">Final Value</cell></row><row><cell>I 1</cell><cell>d sac</cell><cell>Sac diameter</cell><cell></cell><cell>0 75mm</cell></row><row><cell>I 2</cell><cell cols="2">al pha seat Needle seat angle</cell><cell></cell><cell>50degrees</cell></row><row><cell>I 3</cell><cell>c turb</cell><cell>Turbulent coefficient</cell><cell></cell><cell>0 9</cell></row><row><cell>I 4</cell><cell>m ju</cell><cell cols="2">Flow discharge coefficient at nozzle holes</cell><cell>0 6</cell></row><row><cell>II 1</cell><cell cols="2">CV size Size of control volume</cell><cell></cell><cell>10mm 3</cell></row><row><cell>II 2</cell><cell>Z inl</cell><cell>Inlet flow resistance in control volume</cell><cell></cell><cell>1 6</cell></row><row><cell>II 3</cell><cell>Z out</cell><cell>Outlet flow resistance out of control vol.</cell><cell></cell><cell>2 6</cell></row><row><cell cols="3">III 1 Res Bypass Flow resistance through bypass</cell><cell></cell><cell>2 0</cell></row><row><cell cols="3">III 2 Res Outlet Flow resistance through outlet</cell><cell></cell><cell>1 0</cell></row><row><cell cols="3">III 3 Area Bypass Bypass effective area</cell><cell></cell><cell>0 032mm 2</cell></row><row><cell cols="3">III 4 Area Valve Valve effective area</cell><cell></cell><cell>0 07mm 2</cell></row><row><cell cols="3">IV 1 HPP Length Length of high pressure pipe (fixed)</cell><cell></cell><cell>300mm</cell></row><row><cell>IV 2</cell><cell cols="2">RV Size Common Rail volume size (fixed)</cell><cell></cell><cell>30cm 3</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>Parts of this work have been done through the scope of applied and basic research at the VRVis Research Center (funded by an Austrian governmental research program called Kplus, http://www.kplus.at/) and at the Center for HCI at Virginia Tech (http://www.hci.vt.edu/).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gmbh</forename><surname>Avl List</surname></persName>
		</author>
		<ptr target="http://www.avl.com" />
		<imprint>
			<date type="published" when="2008-06-30" />
		</imprint>
	</monogr>
	<note>Last accessed on</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Passenger car common rail systems for future emissions standards</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Boecking</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Dohle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hammboeckinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kampmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>MTZ</publisher>
			<biblScope unit="volume">66</biblScope>
			<biblScope unit="page" from="552" to="557" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Advancing interactive visualization and computational steering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">D</forename><surname>Simon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computational Science &amp; Engineering</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="13" to="17" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive feature specification for simulation data on time-varying grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Doleisch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mayer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gasser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Priesching</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Simulation and Visualization</title>
		<meeting>of the Simulation and Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="291" to="304" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A lumped parameter electromechanical model for describing the nonlinear behavior of piezoelectric actuators</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Goldfarb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Celanovic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ASME Journal of Dynamic Systems, Measurements, and Control</title>
		<imprint>
			<biblScope unit="volume">119</biblScope>
			<biblScope unit="page" from="478" to="485" />
			<date type="published" when="1997-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Scientific visualization: methods and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename><surname>Van Lengen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 19th Spring Conf. on Computer Graphics</title>
		<meeting>of the 19th Spring Conf. on Computer Graphics</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="23" to="33" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Feature detection in linked derived spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Henze</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Visualization</title>
		<meeting>of the IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="87" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Top scientific visualization research problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="13" to="17" />
			<date type="published" when="2004" />
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Interactive simulation and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="59" to="65" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Interactive visual analysis of families of function graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Konyha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Matković</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gračanin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jelović</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1373" to="1385" />
			<date type="published" when="2006-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Interactive 3D Visualization Of Rigid Body Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Konyha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Matković</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Visualization</title>
		<meeting>of the IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="539" to="546" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Tesdall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">K</forename><surname>Hunter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<title level="m">teractive Visualization and Steering of CFD Simulations In Proc. of the Eighth Eurographics Workshop on Virtual Environments</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Visual Analysis and Exploration of Fluid Flow in a Cooling Jacket</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Doleisch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Visualization 2005</title>
		<meeting>of the IEEE Visualization 2005</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="623" to="630" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Future and potential of diesel injection systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mahr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thiesel 2002 Conference on Thermo-and Fluid-Dynamic Processes in Diesel Engines</title>
		<meeting>the Thiesel 2002 Conference on Thermo-and Fluid-Dynamic Processes in Diesel Engines</meeting>
		<imprint>
			<date type="published" when="2002-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Interactive visual analysis and exploration of injection systems simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Matković</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jelović</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jurić</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Konyha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gračanin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Visualization 2005</title>
		<meeting>of the IEEE Visualization 2005</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="391" to="398" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A survey of computational steering environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mulder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Liere</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="119" to="129" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Snap-together visualization: a user interface for coordinating visualizations via relational schemata</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Working Conf. on Adv. Vis. Interfaces</title>
		<meeting>of the Working Conf. on Adv. Vis. Interfaces</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="128" to="135" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Computational steering: Software systems and strategies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Beazley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computational Science &amp; Engineering</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="50" to="59" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Kriging interpolation in simulation: a survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C M</forename><surname>Van Beers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P C</forename><surname>Kleijnen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 36th Winter Simulation Conf</title>
		<meeting>of the 36th Winter Simulation Conf</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="113" to="121" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Building highly-coordinated visualizations in improvise</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Weaver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Symp. on Inf. Visualization</title>
		<meeting>of the IEEE Symp. on Inf. Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="159" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Visualizing coordination in situ</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Weaver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Symp. on Inf. Visualization</title>
		<meeting>of the IEEE Symp. on Inf. Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="165" to="172" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Images and reversals: James Clerk Maxwell, working in wet clay</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">G</forename><surname>West</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="15" to="17" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Real-time Performance Monitoring, Adaptive Control and Interactive Steering of Computational Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Vetter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Reed</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of High Performance Computing Applications</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="357" to="366" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Computational Steering on Distributed Systems: Indoor Comfort Simulations as a Case Study of Interactive CFD on Supercomputers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wenisch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Van Treeck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Borrmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Rank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Wenisch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. Journal of Parallel, Emergent and Distributed Systems</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="275" to="291" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
