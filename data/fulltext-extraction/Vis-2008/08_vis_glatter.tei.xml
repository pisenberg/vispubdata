<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualizing Temporal Patterns in Large Multivariate Data using Textual Pattern Matching</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2008-10-19">19 October 2008</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Student Member, IEEE</roleName><forename type="first">Markus</forename><surname>Glatter</surname></persName>
							<email>glatter@cs.utk.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Jian</forename><surname>Huang</surname></persName>
							<email>huangj@cs.utk.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sean</forename><surname>Ahern</surname></persName>
							<email>ahern@ornl.gov</email>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jamison</forename><surname>Daniel</surname></persName>
							<email>danieljr@ornl.gov</email>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Aidong</forename><forename type="middle">â€¢</forename><surname>Lu</surname></persName>
							<email>aidong.lu@uncc.edu</email>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">are with Oak Ridge National Laboratory</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Visualizing Temporal Patterns in Large Multivariate Data using Textual Pattern Matching</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2008-10-19">19 October 2008</date>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2008; accepted 1 August 2008; posted online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Multivariate visualization</term>
					<term>Time-varying</term>
					<term>Uncertainty</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Extracting and visualizing temporal patterns in large scientific data is an open problem in visualization research. First, there are few proven methods to flexibly and concisely define general temporal patterns for visualization. Second, with large timedependent data sets, as typical with today&apos;s large-scale simulations, scalable and general solutions for handling the data are still not widely available. In this work, we have developed a textual pattern matching approach for specifying and identifying general temporal patterns. Besides defining the formalism of the language, we also provide a working implementation with sufficient efficiency and scalability to handle large data sets. Using recent large-scale simulation data from multiple application domains, we demonstrate that our visualization approach is one of the first to empower a concept driven exploration of large-scale time-varying multivariate data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Recent advances in the field of query-based visualization have enabled a powerful technique for large data visualization. Using query-based visualization, users can quickly and intuitively explore very large, highly complex multivariate data. However, before query-based visualization can adequately address the needs of exploratory computational science research, several important challenges must be resolved.</p><p>First, although human-domain knowledge is always a driving factor, query-based visualization is commonly guided by trial and error and is often ad hoc. In addition, the approach becomes extremely time consuming when the exponentially large growth of multivariate timevarying simulation data is considered. In this domain, more efficient and versatile user tools are necessary.</p><p>Second, data set sizes and the unstructured data access patterns required in an exploratory usage mode put a strain on today's visualization architectures. Sufficient parallel visualization infrastructure must be developed in a generic and yet optimized manner.</p><p>Third, qualitative concepts involve an innate degree of uncertainty. Visualization methods must be developed to adequately and properly display the uncertainty inherent in the understanding of these scientific phenomena.</p><p>In this work, we use general time-varying multivariate simulation data as the driving applications to investigate ways to address these bottlenecks. Specifically, we aim to discover temporal connections between multivariate patterns of concern. Our test data sets come from two simulations: global climate modeling research that aims at understanding long-term climate change and combustion research that aims at developing breakthroughs to advance fuel efficiency.</p><p>Motivated by the elegance and power of regular expressions and globbing in text string searching, we have developed a text search language using flex and bison for concisely specifying temporal patterns. We borrow heavily from the richness and ease of regular expressions and globbing. Temporal patterns are sequential by nature and can include an arbitrary number of variables in their specification.</p><p>In our system, a user hypothesis needs to be only partially defined, similar to how glob() is used in UNIX. glob() is a classic tool that expands searches for file names according to partially defined patterns (e.g. file??.pdf). Regular expressions allow for partial definitions as well (e.g. file. * \.pdf). Our system accepts a kind of qualitative query that is similar to both globbing and regular expressions. In these queries, wildcards provide a powerful way to represent the existence of non-topical events, whether temporal or multivariate. Queries containing wildcards are then expanded to a number of actual range queries that can be extracted from the data set.</p><p>We find this type of querying capability to be very powerful for visualizing temporal patterns in large simulation data, because it elegantly allows the specification of uncertainty in the time separation within features. Due to the allowed uncertainty and the ensuing overwhelming complexity, a sufficient way to automate the overall querydriven visualization is necessary. By using a formal language approach, we blend rigor with expressiveness and flexibility in querydriven visualization. Queries containing wildcards are then expanded to a number of actual range queries that can be extracted from the dataset. Note that this paper concerns the definition, evaluation, and extraction of these temporal queries and does not present new methods for rendering the results of such queries.</p><p>As common with all formal language approaches, we can make incisive distinctions in temporal data in an unconstrained manner. The more traditional visual subsetting approaches, such as brushing in scatterplots and selecting contiguous ranges in parallel coordinate plots, are naturally intuitive but are often manual and hard to automate. Especially in the case of time-varying multivariate data, manual data selection can be cumbersome and in many cases infeasible.</p><p>To application scientists, this method of specifying temporal patterns to visualize is extremely useful. Often domain knowledge is expressed in a qualitative manner, and domain scientists can be hard pressed to define discrete data queries to extract meaningful subsets of the data. Our approach supports hypotheses that may only be partially defined. Qualitative patterns containing wildcard characters can be entered and are expanded to a set of discrete data queries that are then extracted from the data set. For a scientist, this offers a more natural way of entering qualitative domain knowledge and avoids a potentially lengthy search process guided by trial and error. In addition, we provide ways to compare and relate results from multiple queries in search of broader multivariate patterns.</p><p>The rest of the paper is organized as follows. Related work is discussed in Section 2. Our research undertakings are delineated in Section 3. Results obtained using our methods are presented in Section 4, and discussed in Section 5. We conclude in Section 6 where we also describe further work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Query-Driven Visualization</head><p>Much of the existing work in query-driven visualization is based on database-like compound queries. The supporting data structure may be different: bitmap indexing <ref type="bibr" target="#b6">[7]</ref> or parallel servers using fat tree structures <ref type="bibr" target="#b1">[2]</ref>.</p><p>Queries enable significant data subsetting and facilitate more versatile analyses that might be difficult to perform in a traditional manner that traverses all of the input data. For instance, Gosink et al. showed that distribution function and correlation coefficients can be effectively combined with compound query driven visualizations <ref type="bibr" target="#b2">[3]</ref>.</p><p>Our work provides a novel method of converting partially-defined queries into many specific queries that are then resolved by a range query system. Few existing works address temporal patterns in particular.</p><p>In large data visualization, parallelism is assumed. But load balancing a query-driven visualization system can be rather difficult. For general queries, it is often difficult to predict the specific subset of data returned. The parallel distribution and load balancing scheme for general range queries suggested in <ref type="bibr" target="#b1">[2]</ref> is a very scalable solution. Due to these reasons, we have chosen this implementation as the parallel servers to support our query driven visualization. However, the method we present here is not tied to the fat tree system of Glatter et al. and should be applicable to any range query system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Patterns in Volume Visualization</head><p>Many current works in volume visualization directly require that features be exactly defined before a visualization can be created. As an example, in the extraction of an isosurface, the isovalue is a univariate pattern.</p><p>More sophisticated patterns are often procedurally specified, although interacting with visualizations through graphical user interfaces has been very popular in many areas. For instance, Kniss et al. proposed to use procedurally specified Gaussian functions to describe the parts of multivariate volume that are of interest <ref type="bibr" target="#b4">[5]</ref>. Univariate temporal patterns have also been specified using the procedural approach <ref type="bibr" target="#b7">[8]</ref>.</p><p>These procedural methods are very effective in revealing features that are already understood in detail. However, the specification of high-level features using procedural methods can often become cumbersome.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Visualization Specific Languages</head><p>The use of a mini programming language in the design of visualization user interfaces is not a novel idea. Admirable successes have already been reported by systems such as prefuse <ref type="bibr" target="#b3">[4]</ref> and Scout <ref type="bibr" target="#b5">[6]</ref>.</p><p>Prefuse is a typical example of modern information visualization and analytics. It provides a rich set of information visualization functionality and provides very powerful graphical user interfaces. An SQL-like query language has been implemented within prefuse to enable a powerful method to formally specify interactive information queries <ref type="bibr" target="#b3">[4]</ref>.</p><p>As GPU computing has become very popular for high-performance visualization, many current system capabilities are becoming GPUbased, whether directly or indirectly. Current GPU-based volume rendering systems often offer the ability to do run-time alternation of the shader programs through user interaction. Scout <ref type="bibr" target="#b5">[6]</ref> is a hallmark example of this kind.</p><p>Our intent is to be complementary to existing methods by focusing in an orthogonal direction. Our goal is to develop a textual interface that allows uncertainty to be used in the specification of patterns of interest, particularly ones that are temporal and multivariate in nature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">OVERVIEW</head><p>Our system provides analytic tools to aid scientists in understanding inter-variable relationships and their development over time.</p><p>For instance, in combustion research, scientists are often interested in "precursor" events preceding an event of reignition. We enable the scientist to describe these precursor events as well as the reignition event by using wildcards for the values of multiple variables over time. This allows for a single event description to match several actual events of the same nature that are not identical. For instance, a reignition process as described by the scientist could last only a few time steps or continue to go on for many subsequent time steps, with slightly different values of the given variables. Occurrences of precursor events could then lead to discovery of time-lagged correlations with high statistical reliability.</p><p>In the following sections we will describe our data organization, infrastructure, pattern matching language, and data retrieval in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Data Organization</head><p>In order to query directly for temporal changes in the data set, we precompute the relative change for each variable over time and store it along with the original data value. The pattern matching language described in section 3.2 enables us to query for data locations matching a user-defined data value or range and a user-defined relative temporal change over time. Multivariate queries specifying any number of data values are supported directly.</p><p>Our approach uses an item-based data format in which each item holds a complete set of values, including its three coordinates, time index, and values of all its variables. A data item can be uniquely identified by its spatial coordinates and time index when using a timevarying data set. We do not require specific connectivity requirements, and are thus freed from mesh restrictions. However, the requirement of explicit coordinate fields can increase the size of data sets where coordinate locations are natively implicit. For example, a structured three-dimensional time-varying data set containing a single variable will be increased by a factor of 5. This penalty decreases dramatically as more variables are included, as is frequently the case with typical scientific data sets. A typical two-dimensional climate data set may contain 70 or more variables, for instance, bringing the increase in data size down to less than 5%.</p><p>Further optimizations counterbalance the increase of data set size. First, since our data is no longer grid based, we do not necessarily need to store it entirely, but can select parts of it based solely on item values. We thus allow sparse data sets to be represented very efficiently. As many scientific simulation data sets only use a part of the entire grid, we typically find many elements at the outer boundary of the grid that contain fill values only and no valuable data, and we simply discard these data items. In our experience, this optimization alone often counterbalances the increase in size with many scientific data sets.</p><p>The second optimization we employ is compression. We extended the approach described in <ref type="bibr" target="#b1">[2]</ref> by additionally compressing data items in memory on each data server. Blocks of data items are decompressed when an item inside a data block is accessed. An LRU cache of decompressed data blocks accelerates subsequent reads to the same block. The compression rates vary from data set to data set. For typical data sets, we saw compression ratios of 20:1, while on highly noisy data sets, we could obtain as low as 4:1 compression.</p><p>The way we arrange the values of individual variables in the data items is directly related to the kind of queries we can make. We allow querying for temporal patterns whose location in time and discrete data values are not known a priori. To do so, we store in each data item a sequence of values describing the relative change for each variable from one time step to the next along with its coordinates. To this end, spatial coordinates are the only identifiers of each voxel. On every voxel, all temporal changes and inter-variable differences are treated equally as parts of the multivariate data.</p><p>In addition to the relative change for each item and timestep, we also store the original data values in a separate set of data items. This is required to give our temporal "deltas" a base or absolute reference from which to work. Being able to query both sets of data itemsrelative change and absolute data values -and then combine the results allows for more precise and expressive queries.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Pattern Matching and Syntax</head><p>For querying, we employ range queries, a widely used method for selecting subsets of multivariate data. Even though range queries are usually discrete, our system accepts quantitative queries that match and support a user's unclear or imprecise understanding of data. Thus, we allow a user to issue "fuzzy queries" in order to explore a data set he is not highly familiar with. Range queries may contain wildcard characters such as * and ? that are expanded to generate actual range queries, much like the UNIX function glob() expands wildcards in file??.pdf and regular expressions expand patterns such as file. * \.pdf.</p><p>However, our language has a few non-traditional elements. The first one is T, the temporal mark. A search of [4] * T <ref type="bibr" target="#b4">[5]</ref> * means that we are looking for patterns where an attribute is valued at 4 for zero or more timesteps and then changes to value 5. We use braces around all ranges to avoid ambigious cases such as 45* (meaning either [45]* or <ref type="bibr" target="#b3">[4]</ref>[5]*) The temporal mark is the time of this event's occurrence, and in this case it is chosen to be the instant of the first timestep of the value 5. Our parser extracts the T from the expression and then generates all discrete patterns of interest. The location of T is recorded so as to indicate the precise time of the event's occurrence in further visualizations or data explorations. Multiple T's are ignored. Only the first T in a query is chosen as the temporal mark.</p><p>The second extension in our system is to compute a matching score for results returned by each of the alternative searches. When a user specifies <ref type="bibr" target="#b3">[4]</ref>   <ref type="bibr" target="#b4">[5]</ref> * . This technique enables a user to specify a controllable level of uncertainty and yet can still focus on a very specific target. We use a standard normalized euclidean distance for the data sets used herein. A different distance metric may be supplied by the user, and as such, a metric heavily depends on the data values and their relationship to each other.</p><p>We have implemented our pattern matching language using flex 1 and bison 2 . The main elements of our query language can be found in <ref type="figure">Figures 1 and 2</ref>.</p><p>The following list of examples demonstrates accepted wildcards, special characters, and valid data ranges: â€¢ [0.3 -10e9] * -a data range applied to zero or more sequential timesteps.</p><formula xml:id="formula_0">â€¢ [-</formula><p>â€¢ ?, ? * -wildcard ranges. The first represents the entire range of data values for a single timestep. The second represents the entire range of data values for zero or more timesteps.</p><p>â€¢ T -the (optional) temporal mark. It marks the time index at which the event that is subject of the query occurs.</p><formula xml:id="formula_1">â€¢ [1 -5] * [8]</formula><p>-a query without a temporal mark is also valid. This query adresses all items which values in all timesteps are between 1 and 5, and a value of 8 in the last timestep.</p><p>Data ranges that are appended with a * are called multiranges, as their values can span over multiple timesteps. All other ranges, including ?, are ordinary ranges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Matching and Querying</head><p>In order to query for data elements matching range queries as defined in section 3.2, the queries are expanded to discrete queries much like the UNIX command glob() expands file names such as file??.pdf to matching entries in a directory. As we know the   <ref type="bibr" target="#b4">[5]</ref>.</p><p>Expansion of general range queries to construct discrete range queries may explode the number of actual queries being issued to the data servers. The number of discrete range queries after expansion can be determined as follows. Let t be the number of timesteps in the data set, let m be the number of ordinary data ranges, and let n be the number of multiranges. In our above example, t equals 5, there are m = 3 ordinary ranges ( <ref type="bibr" target="#b1">[2]</ref>, <ref type="bibr" target="#b5">[6]</ref>, and <ref type="bibr" target="#b4">[5]</ref>), and n = multiranges ([3] * and [4] * ). It is clear that the 2 multiranges need to fill up the remaining k = t âˆ’ m = 5 âˆ’ 3 = 2 data ranges to construct a complete set of 5 data ranges for a discrete range query. Mathematically, this is a multiset of cardinality k, with elements taken from a set of cardinality n. The corresponding multiset coefficient and therefore the number of discrete range queries after expansion is defined as</p><formula xml:id="formula_2">n k = n + k âˆ’ 1 n âˆ’ 1 = n + k âˆ’ 1 k .<label>(1)</label></formula><p>This number can potentially get very large, even for low n and k. Our parallel data servers are able to handle a large number of consecutive queries efficiently, and only data items matching one or more queries in the set are retrieved. Each data item is retrieved only once. The position of the temporal mark T for each query is added onto every data item. It marks the timestep in which the event that was subject of the query occurs. If a data item matches more than one of the discrete queries, it contains the data values for the earliest temporal mark at which it occurred (i.e. we are marking only the first occurrence of the user-defined event in the time sequence). In the example, T marks the first timestep with a value of 4 directly following a value of 6, and the temporal mark would be at timestep 2, 3, and 4 for the three given discrete queries. All items coming from one discrete query are given the same time index (e.g. an item returned by the second discrete query of the example gives its spatial location a time index of 3). For multivariate queries, the query string for each variable may be specified separately, and the results are combined upon data retrieval for data items matching all (logical AND) of the multivariate queries at each individual spatial location. This ensures that, upon combining queries, all data items have a full set of data values from the query. Temporal marks in multiple queries can either be included in the intersection (like the spatial location), or a temporal mark from one of the queries can be selected as the temporal mark of the intersecting data items.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>We evaluate our newly developed method using two simulation data sets from different domains. The first data set consists of 71 variables output from a global land surface model running within a general circulation model performing a projection of Earth's climate from the year 2000 to 2099. We are using monthly averaged data with 12 timesteps per year, comprising 1200 timesteps in total on a grid of size 256 Ã— 128. Alongside each variable we store the relative temporal change between consecutive months. This leads to a total data set size of 21 gigabytes.</p><p>The second data set comes from combustion simulation, has a grid size of 480 Ã— 720 Ã— 120 and 5 variables over 122 timesteps. Once again, we also store the relative temporal change between consecutive timesteps together with the original data values for each variable, resulting in a data set of 188 gigabytes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Global Climate Modeling Simulation</head><p>Using the global climate modeling data set, we establish "events" that are defined by one or more variables changing over time at different spatial locations. We mark the time of such events at each spatial location with the temporal mark T, and color individual pixels accordingly (see <ref type="figure">Figure 5</ref>). As we are considering temporal change between consecutive months, colors indicate points in time that are between the months in which the event occurred (i.e. a blue pixel depicts that the event happened in between the January average and the February average). Even though the low temporal resolution of the data is a disadvantage when trying to search for the exact point in time an event occurred, we were able to extract several events of significance.</p><p>In <ref type="figure" target="#fig_6">Figures 3(a)</ref> through 3(c), we display the temporal change of the variable ELAI (Exposed one-sided leaf area index in units of m 2 /m 2 ) over the course of one year. We queried for the following percentage change pattern: [-.4-.4] * T[.4-max]? * , meaning that we are looking for data locations that experience a positive relative change of more than 40% after going through a period of zero or more timesteps where the relative change was low (between âˆ’40% and +40%). The purpose of this query is to find the beginning of the growing season in the Northern Hemisphere. We mark the first timestep in which the larger change occurs and color the pixels matching this query according to the temporal mark T. We chose 40% as the threshold after consulting with a climate scientist as to what rise of ELAI would best represent the event we are looking for as described in the following paragraphs. Please note that the values min and max in the queries are simply used for ease of readability, where min represents the smallest and max the largest floating point number the system can represent.</p><p>We can immediately see how the event we queried for follows a certain path as the year progresses. It begins in the Southern parts of North and Central America and generally advances North month by month. On the Eurasian landmass, a similar progression to the North is visible, as well as a progresssion from Central Europe towards Central Russia and Siberia.</p><p>What we have established here is the progress of spring or rather the beginning of the growing season ("green-up") in the Northern Hemisphere. The leaf area index -which is close to 0 at the beginning of the year in the Northern Hemisphere as there are virtually no leaves exposed in the winter -rises sharply as vegetation starts to flourish, creating leaves and blossoms. As we expect, this event progresses to the North, except where the beginning of spring is delayed (e.g. because of high altitude). One is clearly able to make out the area surrounding the Himalayas as an area of delayed spring. Another interesting feature of this query is the white band connecting the East and West coast in Southern Canada. It appears that spring "skips" over said area. This is due to the fact that this part of Canada -the Northern Boreal Evergreen Forest biome -is home to a different kind of vegetation, dominated by evergreen vegatation that does not significantly change in leaf area index seasonally. The data values of temporal change reveal a rise in the leaf area index in this area, but the index never experiences a change above 40% in a single month. Since our query is explicitly looking for this, we do not report a point in time for these spatial locations. We also noticed that the differences between years are minor and almost imperceptible. The temporal change of the variable ELAI over the course of each year appears to be very stable. <ref type="figure">Figure 4</ref> displays a query that aims to identify the point in time when the first large snowfall between May and December occurs. The query we are using is ???[min-.07] * T[.07-max]? * for the change in variable FSNO (Fraction of ground covered by snow). The leading ??? ensures that we query for the full range of values for the relative change between January and April. This way we are sure not to query for the first large snowfall in the first four months of the year, as we want to see how a snow cover progresses over the course of fall and winter in the Northern Hemisphere. The query then considers only data locations whose snow cover is either reduced or increased by no more than 7%. When we encounter the first temporal change of the snow fraction larger than 7%, we consider it the first large snowfall and mark the timestep with the temporal mark T. We chose 7% as it gives us a good threshold that makes our query resistant to minor changes of the snow fraction which would generate a false and potentially too early temporal mark.</p><p>Again, we can clearly make out the underlying pattern. The snow cover first grows larger by more than 7% in Northern Canada and Siberia, as well as the Himalayas, and then progresses into the warmer regions to the South and, in the case of the Eurasian landmass, to the West. One can also recognize the Rocky Mountains on the West Coast as an area of early snowfall. Most of the U.S., however, never experiences a heavy increase of snow cover by more than 7% in one month, just like Southern Europe and Northern Africa. FSNO is more variable than ELAI, as can be seen in the differences between the three years shown.</p><p>Figures 6 through 8 display a different kind of visualization for multivariate queries. We depict two-bit correlations between variables over the course of one or many months. Specifically, two-bit correlation shows 4 combinatorial scenarios: two variables both changing positively, negatively, or in different directions. The term "two-bit" are derived from the fact that we can use two bits to represent each case.</p><p>In <ref type="figure">Figure 6</ref> we display variables TSA (air temperature 2 meters above ground) and TV (vegetation temperature).</p><p>For , meaning that we query for all data items that experience either a constant increase or constant decrease in value between March and June. We then compute the intersection based on spatial location for the pairs TSA+ and TV+ (set "++"), TSA+ and TV-(set "+-"), TSA-and TV+ (set "-+"), and TSA-and TV-(set "--"). As the original sets with prefixes "-" and "+" for each variable are mutually exclusive, all four intersections are likewise mutually exclusive. Thus we are able to combine them into a single image using a simple color scheme (see legends in <ref type="figure">Figures 6 through 8)</ref>. We compute a score based on the normalized euklidean distance of the temporal change of the values TSA, FCEV, and RAIN, to their respective maximum change or, in case of the "--" set, to their minimum change. We display the resulting score by opacity. Spatial locations with a higher score are more opaque.</p><p>The resulting images can be easily interpreted. Red and blue areas denote areas where both variables' temporal change over one or many months -in the case TSA vs. TV, three months -simultaneously and constantly increased and decreased, respectively. Areas of light green or turquoise signify areas where one variable constantly increases for the duration of the query while the other variable decreased, and vice versa.</p><p>Notably, <ref type="figure">Figure 6</ref> does not contain any areas of light green or turquoise color at all. We can conclude that whenever variable TSA constantly rose from March to June, so did TV (red areas); likewise, a constant decrease in value of TSA in said period is always mirrored by TV (blue areas). This signifies that the variables are strongly positively correlated, as one would expect for the air temperature 2 meters above ground and the vegetation temperature.</p><p>In <ref type="figure">Figure 7</ref>, we correlate variables FCEV (canopy evaporation) and FSH V (sensible heat from vegetation) for the duration of 3 months (March to May). Clearly, we can identify areas of positive correlation, where both variables increase or decrease simultaneously. Simultaneous increase appears almost exclusively in the Northern Hemisphere, while simultaneous decrease is restricted to areas in the Southern Hemisphere. Smaller areas of negative correlation appear all over the map, but the largest areas can be found in or near tropical rainforests in South America, Africa, and South East Asia. This is counter-intuitive for regions where clouds and active precipitation are dominant. <ref type="figure">Figure 8</ref> depicts correlation between variables H2OCAN (intercepted water) and RAIN (atmospheric rain) from August to October. It is noticable that, while we retrieve less data points with a constantly increasing or descreasing value in total than with <ref type="figure">Figures 6 and 7</ref>, positive correlation by far outweighs negative correlation. The negative correlation visible at very high latitudes in Europe is probably caused by the fact that these areas are dominated by grassland, and the concept of "canopy" is not applicable here.</p><p>Our approach also allows the correlation of temporal changes in variables at different times and for different durations. While it appears to make more sense to correlate queries of identical event length and event time, our system is not limited to this.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Turbulent Combustion Simulation</head><p>In the combustion simulation data set, scientists are interested in finding and tracing areas of interest over time. One example of such an area of interest in nonpremixed combustion is extinction of the flame in areas where fuel and oxidizer are in stoichiometric proportions. Under normal circumstances, the spatial locations with a stoichiometric mixture fraction of 0.42 are a good representation of a fully burning flame. However, local extinction can occur in areas where other chemical effects come into play (e.g. local turbulence). One effects that can cause this behavior is a local value of the mass fraction of the hydroxyl radical (OH) below 0.0007 and a high value of the scalar dissipation rate Ï‡. Areas that maintain these characteristics are temporarily extinct, as they do not support the chemical conditions to maintain a burning flame.</p><p>Based on this knowledge, we issue two queries for data items of high Ï‡ values (chi:[18000-33000] * ) and data items of a low reaction of hydroxyl radicals (Y OH: * ?T[0-.0007] * ? * ). We use the temporal mark T to mark the timestep at which each variable enters the range favorable for an extinct flame. A third query containing the original values of the stoichiometric mixture fraction (mixfrac:[.40-.44] * ) retrieves all voxels with a fraction of around 0.42, the perfect mixture fraction for a fully burning flame. <ref type="figure">Figures 9(a)</ref> through 9(c) display the spatial locations of intersection of the queries colored by the temporal mark. In this visualization of a sparse data volume, we are unable to use lighting based on surface normals. <ref type="figure">Figure 9(a)</ref> is rendered using a typical splatting renderer (without shading). To better convey three-dimensional relationships, <ref type="figure">Figures 9(b)</ref> and 9(c) are generated by rendering a lit sphere for each data item. Additionally, we also rendered the spatial locations of the perfect stoichiometric mixture fraction (0.42) in blue for clarity.</p><p>The spatial location and temporal change of these extinction regions can be analysed in a single 3D visualization. Extinct regions can be found strictly along the outside surface of the blue region of perfect stoichiometric mixture. Also, over time, these regions do not move far away from their origin and generally stay near the blue surface region. We are able to present a single 3D visualization that conveys the formation and movement of locally extinct regions over time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Performance</head><p>All timing results have been collected using an AMD 2.6 GHz Opteron cluster connected by InfiniBand DDR 4X network and the climate data set from section 4.1. Measured performance metrics of our system are highly dependent on the data and the query. With most tests that we have run using 20 compute nodes as data servers, the query performance is acceptable for interactive use.</p><p>In <ref type="table">Table 1</ref>, we provide a list of qualitatively different queries and show the number of data blocks accessed on each data server node.   <ref type="table">Table 1</ref>. Performance results on 20 compute servers. "Running time" is the wall clock time between query invocation and receipt of all voxels. "# Voxels considered" is the average number of matching voxels returned by each server. "# Queries generated" is the number of specific queries generated by parsing and interpreting the query specified.</p><p>Due to the great scalability and load balancing using the methods reported in <ref type="bibr" target="#b1">[2]</ref>, each server node loads in approximately the same number of blocks during our tests. On each server node, the cache is sized at 800 megabytes, enough to hold 25 uncompressed blocks. These tests show a spectrum of different cases. The first three queries generate only one specific query each. Starting with a cold cache, the overhead of decompressing data on the fly is paid for each block on each server. The subsequent three queries each generate 71 specific queries. With the data blocks loaded on each server being less than the size of the cache, we can tell that excellent cache reuse has been achieved. Similar scenarios can be observed with queries 7 and 8. Query 9 is a case that demonstrates our caching algorithm performing in a less optimal way. The values of query 9 are estimated from running about 2% of the query and extrapolating the values. As the time per single query and the number of data blocks accessed per query are almost constant, one can reasonably extrapolate the values.</p><p>From this we draw the following conclusion: the conventional LRU caching algorithm we're using is sufficient for many common cases. However, to truly achieve optimal results in general, caching algorithms need to be customized or fine tuned using heuristics that can be derived from domain and knowledge about patterns that typical users would investigate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION AND EVALUATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Integration of Data Management</head><p>Our new approach provides a way to fundamentally use time to describe and extract temporal features. More generally, we aim at offering a more functional and more flexible technique of data selection and reduction. At the systems level, our approach only requires a set of servers that support compound range queries. In this regard, any base line implementations able to extract subsets defined by ranges is sufficient to provide the functionality. However, for large data sets a more sophisticated solution is necessary.</p><p>Efficiency demands a low-latency system that can run several concurrent queries in a combinatorial problem space in parallel on load-balanced data servers. Our implementation uses the scalable data servers described in <ref type="bibr" target="#b1">[2]</ref>. Recent development in other systems (e.g. bitmap indexing <ref type="bibr" target="#b6">[7]</ref>) could also meet these efficiency requirements. In particular, bitmap indexing also extracts subsets of data based on boolean range queries, and can therefore be easily adapted to work with our system. Changing to use one system versus another is very straightforward and should make no differences in functionality.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Query Generation</head><p>Our approach requires the user to express selections in terms of a regular expression. For many users, this may seem more complicatedalbeit more flexible -than querying data in a visual (manual) setting. A best practice to formulate queries is hard to generalize, as useful queries are likely data and application dependent. This is quite similar to the practice of transfer function design. As with transfer functions, a practical way is through progressive refinement.</p><p>In the following example ( <ref type="figure">Figure 10</ref>), we would like to demonstrate how progressive refinement of user queries can lead to the desired results. The user examines the variable TSA (air temperature at ground level in Kelvin) to identify the month when the temperature first rises over the course of a year. The first query a user might try is ? * T[.001-max]? * , indicating that she is interested in locations that exhibit the following behavior: A rise in temperature as indicated (.1% or more) after a period of zero or more months of any behavior. <ref type="figure">Figure 10</ref>(a) is color-coded by the month in which such a rise in temperature can be observed. As one would expect, such a query is more geared to the Southern Hemisphere, as temperatures in the Northern Hemisphere will generally rise between January and February, marking almost the entire North in the respective color. Only the tips of Africa and South America as well as areas occupied by Rain Forrest exhibit a different behavior. In <ref type="figure">Figures 10(b)</ref>, 10(c), and 10(d), the user adjusts the target value to .4%, .8%, and 1.2%, respectively, and a different and potentially more revealing distribution of timemarks can be observed. As exemplarily shown in this example, a user may approach the desired result by progressively refining the query.  Many existing approaches have been developed to describe and extract subsets of data sets (e.g. scatterplots, histograms, and parallel coordinates). Using a parallel coordinates display, a user can manipulate ranges for one or many variables at a time, extracting a single range query. Our technique generates from every expression a number of range queries that are extracted and displayed simultaneously. For example, <ref type="figure">Figure 11</ref>  . Data for all these queries is extracted, ignoring duplicate items as described in section 3.3. All queries are displayed in <ref type="figure">Figure 11(a)</ref>, and selected queries 3 and 6 in <ref type="figure">Figures 11(b)</ref>, and 11(c).</p><p>It is clear that using traditional parallel coordinates and discrete range queries, these results could not have been obtained directly. In this case with 11 queries, one would have to define 11 independent queries and combine the results. With only 11 queries, this can be achieved in a manual process. With a growing number of queries, this approach becomes infeasible. Additionally, independent queries might -and in the case shown here will -return duplicate items that would have to be resolved before being able to display the data as shown in <ref type="figure" target="#fig_6">Figure 3</ref>.</p><p>Scatterplots with a brushing interface allow for a less rigid way of data selection, albeit in a restricted number of dimensions. In all traditional techniques mentioned here, general temporal patterns cannot be extracted.  <ref type="figure" target="#fig_6">Figure  3(a)</ref>, colored by the query number as labeled in <ref type="figure">Figure 11(d)</ref> More comprehensive visualization packages such as Paraview have also addressed time-varying data visualization in a significant way. The most recent example of such effort is <ref type="bibr" target="#b0">[1]</ref>. Previous work in the Paraview domain has not focused on any specific search structures for implementing functions such as to ask for what parts of a temperature field increases by at least 150% between consecutive time steps t 0 and t 1 . Although one can write a filter to manually extract time step t 0 and t 1 , find where the pressure field makes the requested change, and iterate to the next pair of consecutive time steps, this process could quickly become cumbersome and eventually intractable. In this context, Paraview can directly benefit from our work's automation and scalability (our search data structure and automated approach to expand partially defined query patterns).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Known Limitations of Our Approach</head><p>Our approach does have the following limitations. Due to technical considerations described in section 3.1, the data size can increase. In few cases, this increase can be five fold, but can be mitigated by applying data compression and filtering techniques also described in section 3.1. Additionally, the loss of inherent neighborhood information and the sparse data set resulting from a user query limits the use of traditional rendering techniques. As we lack the information to compute gradients in a local neighborhood, shaded visualizations cannot be easily achieved. While this problem has long persisted in sparse volume rendering, our work exposes the need for further research in that area.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS AND FUTURE WORK</head><p>We have demonstrated a system that increases the utility of range query systems. By providing a high-level language for temporal data analysis, we allow scientists to consider their data at a higher level, describing multivariate features of interest in a language that allows the specification of uncertainty. The results show that significant scientific understanding can be achieved across application domains when the richness of data description is increased.</p><p>Our system has the potential to solve many large-scale data understanding problems in scientific simulation. In applications where scientists can only describe results in a "fuzzy" manner, systems that directly measure and express uncertainty have great promise to provide heretofore undiscovered scientific insight.</p><p>Future work includes allowing temporal queries to extend across multiple timesteps. Our current system allows the discovery of temporal events which occur between two successive timesteps. Additional understanding can be achieved by allowing the description and detection of events that cross many timesteps (e.g. "Increase of snowfall of 40% or more over a range of up to 3 months").</p><p>Our pattern matching system decomposes general queries into a series of specific queries that are executed by the fat tree system described in <ref type="bibr" target="#b1">[2]</ref>. But the two systems are not directly coupled. We plan to integrate the FastBit bitmap indexing system <ref type="bibr" target="#b6">[7]</ref> into our system to explore the performance characteristics of the combination.</p><p>Expressive systems such as ours often spur interactive data exploration. Users frequently issue multiple general queries to explore similar temporal features. We plan to apply illustrative visualization methods to effectively display the composition of multiple query results into single views. We expect to achieve this goal by exploring volumetric texture generation and new color design methods.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>/</head><label></label><figDesc>* floating point numbers * / \-?[0-9]+ | \-?"."([0-9])+ | \-?([0-9])+"."([0-9]) * | \-?([0-9])+\.?([0-9]) * [eE]\-?([0-9])+ return VALUE;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .Fig. 4 .</head><label>34</label><figDesc>Northern hemisphere colored by temporal mark T representing the month as labeled in Figure 5. Variation between years highlighted as red circles. (a) Year 2050 of FSNO (b) Year 2051 of FSNO (c) Year 2052 of FSNO Northern hemisphere colored by temporal mark T</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .Fig. 6 .Fig. 7 .Fig. 8 .</head><label>5678</label><figDesc>Legend for 11 month-to-month changes(Figures 3, 4, and 10) Two-bit correlation of TSA and TV Two-bit correlation of FCEV and FSH V Two-bit correlation of H2OCAN and RAIN</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>each variable, we issue 2 queries of the kinds ??[0-max][0-max][0-max]? * (hereafter referred to as TSA+ and TV+) and ??[min-0][min-0][min-0]? * (referred to as TSA-and TV-)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>(a) Image generated using a splatting renderer (with shading disabled).(b) A lit sphere rendered for each individual data item better conveys the threedimensional relationships.(c) Close-up of an extinction regionFig. 9. Extinction regions can be found along the outside surface of the blue region</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>(a) Increase by .1% or more (b) Increase by .4% or more (c) Increase by .8% or more (d) Increase by 1.2% or more Fig. 10. 2m air temperature data of the year 2050, colored by temporal mark T representing the month as labeled in Figure 5</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>5. 3</head><label>3</label><figDesc>Temporal Pattern Matching vs. Traditional Techniques</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>displays a number of traditional parallel coordinates plots with the data of the query [-.4-.4] * T[.4-max]? * , as displayed in Figure 3. This query expands into the following set of discrete queries: T[.4-max]??????????, [-.4-.4]T[.4-max]?????????, [-.4-.4][-.4-.4]T[.4-max]????????, . . . (11 queries in total)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>(a) Year 2050 of ELAI, all discrete queries (b) Year 2050 of ELAI, discrete query #3 (c) Year 2050 of ELAI, discrete query #6 (d) Legend of discrete query numbers Fig. 11. Traditional parallel coordinates plot of the data shown in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>1e15 -1025.7] -data ranges for a single timestep. This range contains a from-value and a to-value. [74.2] has both values being identical (same as [74.2 -74.2]).</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">http://flex.sourceforge.net/ 2 http://www.gnu.org/software/bison/</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>This work was supported by the University of Tennesee, the Oak Ridge National Laboratory, and by the Office of Science of the U.S. Department of Energy under Contract No. DE-AC05-00OR22725.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Time dependent processing in a parallel pipeline architecture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Biddiscombe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Geveci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Moreland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1376" to="1383" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Scalable data servers for large multivariate volume visualization. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Glatter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mollenhour</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1291" to="1298" />
			<date type="published" when="2006-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Variable interactions in query-driven visualization. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gosink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Bethel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1400" to="1407" />
			<date type="published" when="2007-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">prefuse: A toolkit for interactive information visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Landay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of CHI&apos;2005</title>
		<meeting>of CHI&apos;2005<address><addrLine>Porland, OR</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="421" to="430" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Interactive volume rendering using multi-dimensional transfer functions and direct manipulation widgets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization&apos;01</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="255" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Scout: A hardware-accelerated system for quantitatively driven visualization and analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Mccormick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Inman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;04</title>
		<meeting>IEEE Visualization &apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Query-driven visualization of large data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Stockinger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shalf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bethel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization, 2005. VIS 05. IEEE</title>
		<imprint>
			<date type="published" when="2005-10" />
			<biblScope unit="page" from="23" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">High dimensional direct rendering of time-varying volumetric data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Woodring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;03</title>
		<meeting>IEEE Visualization &apos;03</meeting>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
