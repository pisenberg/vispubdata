<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Botanical Visualization of Huge Hierarchies</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>October 22 -October 23, 2001</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ernst</forename><surname>Kleiberg</surname></persName>
							<email>*e.a.m.kleiberg@stud.tue.nl</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Huub</forename><surname>Van De Wetering</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarke</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
							<email>vanwijk@win.tue.nl</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics and Computer Science</orgName>
								<orgName type="institution">Eindhoven University of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">IEEE Symposium on Information Visualization</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Botanical Visualization of Huge Hierarchies</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published">October 22 -October 23, 2001</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>botanical tree</term>
					<term>logical tree</term>
					<term>huge hierarchy</term>
					<term>strands</term>
					<term>tree visualization</term>
					<term>directory tree</term>
					<term>phyllotaxis</term>
				</keywords>
			</textClass>
			<abstract>
				<p>A new method for the visualization of huge hierarchical data structures is presented. The method is based on the observation that we can easily see the branches, leaves, and their arrangement in a botanical tree, despite of the large number of elements. The strand model of Holton is used to convert an abstract tree into a geometric model. Nonleaf nodes are mapped to branches and child nodes to subbranches. A naive application of this model leads to unsatisfactory results, hence it is tailored to suit our purposes better. Continuing branches are emphasized, long branches are contracted, and sets of leaves are shown as fruit. The method is applied to the visualization of directory structures. The elements, directories and files, as well as their relations can easily be extracted, thereby showing that the use of methods from botanical modeling can be effective for information visualization.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>An effective approach to the organization of a large number of items, be it files, staff members or books, is to group them and to repeat this step recursively. As a result, hierarchical data structures are ubiquitous. Small hierarchical structures are very effective to locate information, but the content and organization of large structures is much harder to grasp. A typical use-case is the question 'Why is my disk full?'. To answer this question in an effective and efficient way, the support offered by interactive visualization, showing both the structure as well as the sizes of individual files and directories, is almost indispensable.</p><p>We present a new method for the visualization of huge hierarchical structures. The method is based on a simple intuition. The term tree is standard for hierarchical data. When we observe botanical trees, we find that the leaves, branches, and their arrangement can easily be extracted, in spite of the very large numbers. Hence, what would happen if we try to visualize hierarchical data as botanical trees?</p><p>We explore this intuition as follows. In section 2 we discuss related work, both for tree visualization and tree modeling. In section 3 the strand model of Holton <ref type="bibr" target="#b5">[6]</ref> is described and adopted as a basis for our method. In section 4 this method is tuned to our particular aim. Especially, we show that files can be visualized more effectively as fruit than as leaves. Results are shown and discussed in section 5, followed by the conclusions in section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Many methods have been developed for the display of hierarchical information structures, or, for short, trees. File browsers are the best known example, but they are limited in the number of items that can be shown simultaneously. A second important category are node and link diagrams. Within the graph drawing community <ref type="bibr" target="#b12">[13]</ref> many algorithms have been developed to generate such diagrams in 2D. However, these diagrams do not use display space effectively, hence their applicability is limited to small trees, with at most a few hundred of nodes. The treemap method of Shneiderman <ref type="bibr" target="#b11">[12]</ref> uses a space-filling approach, and can cope with much larger hierarchies. Also, treemaps offer a natural way to visualize additional information via the area of the rectangles. However, the structural information may get lost here, although this can be remedied by adding extra cues <ref type="bibr" target="#b13">[14]</ref>.</p><p>Another escape is to display trees in 3D instead of 2D. We refer to <ref type="bibr" target="#b4">[5]</ref> for an overview. The hope is that the extra dimension would give, literally, more space, and that this would ease the problem of displaying large structures. This is not without problems, however. Occlusion renders parts of the model invisible, the depth of lines is hard to grasp. Hence, real time rotation and extra depth cues are indispensable to understand such 3D visualizations of trees. The best known example for 3D visualization of trees is the cone tree of Robertson <ref type="bibr" target="#b10">[11]</ref>, refined and extended by others to display larger structures <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b1">2]</ref>. However, with these methods the number of elements that can be shown simultaneously in a comprehensible way still seems to be limited.</p><p>We aim at a 3D visualization method that enables the user to understand the structure of large tree structures as well as attributes of data. Our inspiration comes from nature: Botanical trees are large, but the elements and their arrangements can still be extracted. How can we tailor methods from botanical modeling to our purposes?</p><p>The modeling of botanical trees has intensively been studied in the graphics community. Besides for scientific curiosity, it also has direct practical applications. Modeling trees by entering polygons or other geometric objects directly is a tedious job, hence higher level methods are indispensable to generate trees and forests automatically, for instance for animation purposes. As a result of this research, many methods are available to generate images and models of botanical trees, such as fractals <ref type="bibr" target="#b8">[9]</ref>, texture mapping <ref type="bibr" target="#b0">[1]</ref>, and L-systems <ref type="bibr" target="#b9">[10]</ref>. Especially the L-systems and all their extensions are an impressive machinery. L-systems enable the user to model the structure of a wide variety of plants and trees in a compact way. However, for our application this is not so relevant. The structure of the tree to be generated is determined by the data to be visualized, whereas in graphics the task is to generate the structure.</p><p>For our purposes the strand model of Holton <ref type="bibr" target="#b5">[6]</ref>, or a similar model used by Devroye and Pruszewski <ref type="bibr" target="#b2">[3]</ref>, is very convenient. It is particularly suitable because it can be tuned easily to follow the structure of the input hierarchy. Also, the strands enable a simple mapping of the size of elements into the radii of branches.</p><p>In the following sections we elaborate on this. As an example of a large hierarchical structure we use directory trees. The aim is the visualization of both the structural information as well as the content, i.e. file type and size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Method</head><p>We first explain in detail the part of the strand model we use. Next we adapt it to suit the needs for visualizing directory trees.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Strand model of botanical trees</head><p>Strands are used to mimic the internal vascular structure of a botanical tree. The smallest branch is assigned one strand and each other branch has a number of strands that equals the sum of the strands of the sub-branches. In Holton's model <ref type="bibr" target="#b5">[6]</ref> strands are used to determine the tree's structure, branch thickness and length, as well as branching angles between a branch and a sub-branch. Below we give a recursive function for generating a tree model as a set of cylinders. The model is a simplified version of Holton's model, leaving out, for instance, gravity and phototropism.</p><formula xml:id="formula_0">tree(s) stem :=cylinder ((0,0,0), (0,λ,0),ρ); if s 0 =1 then return stem; s 1 :=℘*(s-2) +1; s 2 :=s-s 1 ; α 1 :=α*s 2 /s; α 2 :=α*s 1 /s; r 1 := √ s /s; r 2 := √ s 2 /s; return stem ∪ T (0, λ, 0) • R y (β) • R z ( α 1 ) • S(r 1 ) tree(s 1 ) ∪ T (0, λ, 0) • R y (β) • R z (-α 2 ) • S(r 2 ) tree(s 2 );</formula><p>The function tree(s) results in a model with as stem a cylinder with radius ρ and length λ and containing s &gt; 0 strands. If s is larger than one the returned model contains the stem plus the transformed model of two sub-trees. The number of strands for each sub-tree is computed using some probability function ℘ which depends, for instance, on the recursion level and is chosen such that the total result looks like a real tree. One step of the recursive function tree is shown in figure 1. The transformation of the first sub-tree consists of a scaling (S) with a factor r 1 equal to the square root of the ratio of the corresponding strands. Hence, the area of the cross-section of the cylinder is proportional to the number of strands. After scaling, this sub-tree is rotated with an angle α 1 about the z-axis (R z ); the angles α 1 and α 2 are chosen such that their sum, the angle between the two subtrees, equals a given angle α; furthermore, they are chosen such that the heaviest of the two sub-trees diverts the least from the stem. Both sub-trees are rotated with an angle β about the y-axis (R y ). For β often the angle 360/ϕ is used where ϕ = (1 + √ 5)/2 is the golden section. This is a result of the study of phyllotaxis, the arrangement of leaves on a stem, and is as such also applied in <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b7">8]</ref> for modeling plants and trees. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Strand model of directory trees</head><p>In this section we describe how we can use Holton's model to create a three-dimensional model of a directory tree. The original model generates a binary tree whereas in general a directory tree is not. However, we again obtain a binary tree by visualizing the directories as continuing branches: At each branching point a sub-directory is split off and the other sub-branch is now a continuation of the parent branch. The order in which the sub-directories are split off, is given by their sizes : The largest sub-directories are split off first. The top figure of figure 2 shows a node and link diagram of a directory tree where the numbers indicate the size of files and directories. In the bottom figure the corresponding strand model is shown.</p><p>As in the original model the geometrical properties of a tree are based on numbers of strands, here we define a number of strands for a directory, say dir, as follows:</p><formula xml:id="formula_1">strands(dir) = d∈dl strands(d) + f ∈fl f.size</formula><p>where we use the following data-structures for the directory tree.  Hence, a continuing branch of a large directory has many strands and is represented by a thick and long first segment. This visual cue will help us when browsing a tree looking for space consuming files and/or directories. Below we give the recursive function dtree1(d) for the visualization of a directory tree d. On the deepest level the function leaves is called which returns some geometry representing the file list it gets as a parameter. To navigate through the directory tree we use the pop function on a list which removes the first element of a list and returns this element as its result. </p><formula xml:id="formula_2">s 1 :=strands(d 1 ); s 2 :=strands(d 2 ); G 1 :=R y (β) • R z ( αs 2 /s) • S( √ s 1 /s) dtree1(d 1 ); G 2 :=R y (β) • R z (-αs 1 /s) • S( √ s 2 /s) dtree1(d 2 ); return stem ∪ T (0, λ, 0) (G 1 ∪ G 2 );</formula><p>A first implementation of the function leaves is similar to dtree1: At each recursion level a leaf is split off and a stem and a few triangles depicting a stalk and a blade are generated with the same transformations applied as for the subbranches in dtree1. <ref type="figure" target="#fig_3">Figure 3</ref> shows a result of the above algorithm. From the figure three visualization problems come forward : (1) the continuing branches representing a directory can not be followed easily at a branching point and as a result it becomes unclear which sub-branch represents the parent; (2) directories with many sub-directories and/or files lead to thin and long branches; (3) the leaves tend to clutter and do not give insight. In the following section we tackle these problems. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Refinements</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Continuing branches</head><p>The visualization of a directory by a continuing branch should be clearly visible in the three-dimensional model. In <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b0">1]</ref> sophisticated solutions are given, here we use a simple solution since we are not interested in modeling a tree but in visualizing directory data. We refine our model by adding a smooth transition between two cylinders. This geometric transition is simply created by adding an extrusion, along a suitably chosen spine, of the top circle of the parent cylinder to the bottom circle of the next cylinder in the continuing branch (see <ref type="figure" target="#fig_5">figure 4)</ref>. The difference between the smooth and the abrupt transitions makes clear what the status of each branch is. As an extra cue, branches at different levels in the hierarchy are assigned different colors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Contraction of long branches</head><p>When for each sub-directory or file a separate stem and sub-branch are used, a large number of those leads to a long sequence of stems, visible as a long and thin continuing branch. We improve the behavior of our model in this respect by conditionally removing the stem in the subbranch of the continuing branch. Effectively, this replaces the binary tree with a general tree. The function dtree2(d,e) results in a three-dimensional model of a directory tree d where only a stem is introduced if e ≤ 0. At the highest level dtree2 is called with e = 0 indicating that the stem must be drawn, in the continuation of a branch e is set to εstrands(d) indicating that a stem (in the continuing branch) is only drawn after at least a fraction ε ∈ [0, 1] </p><formula xml:id="formula_3">G 1 :=R y (β)•Rz( αs 2 /s)•S( √ s 1 /s) dtree2(d 1 , 0)); G 2 :=R y (β)•Rz(-αs 1 /s)•S( √ s 2 /s) dtree2(d 2 , f -s 1 ))</formula><p>; if e &gt; 0 then return G 1 ∪ G 2 else return stem ∪ T (0, λ, 0)(G 1 ∪ G 2 ); <ref type="figure" target="#fig_6">Figure 5</ref> shows an example: Long branches are eliminated without sacrificing the clarity of the structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Files as fruit</head><p>To prevent cluttering of leaves we introduce an icon to represent a list of files and their sizes. We model this icon as a fruit consisting of a sphere with spots for each file. The positioning of the, possibly different sized, spots on the sphere is done again with a method from botanical modeling. In <ref type="bibr" target="#b3">[4]</ref> such a method is given, here we use a less involved method given in <ref type="bibr" target="#b7">[8]</ref>. In this last method items are placed on a sphere using a so-called phi-ball, a sphere that is divided in as many horizontal slices as there are items (here files) to be placed. The area of the slices (and equivalently their height) is proportional to the size of the corresponding files. At each of the slices a spot is placed and each slice is rotated β degrees with respect to the slice above it. The spots may be represented by disks with an area in proportion The sphere is positioned in the origin and has radius 1 (see <ref type="figure">figure 6</ref>). Each file's cone has its axis along the z-axis and a hypotenuse with length c equal to the square root of the ratio of the file size and the total size of the file list.  radius can be computed (see <ref type="figure">figure 7)</ref>. A cone is positioned by rotating it along the x-axis over the angle POQ. In the subsequent iterations of the loop a cone is rotated along the y-axis over β degrees. For β the use of 360/ϕ gives good results.</p><p>With the function phiball the function leaves can be reimplemented by adding a stem to a phi-ball resulting in the models in figure 8. The use of cones and their parameterization lead to the effect that large files emerge as large, though bounded cones, whereas small files appear as small disks. Color is used to indicate the file type. The parameter bot is set slightly higher than -1 in these examples to prevent the stem to obscure file cones.</p><p>Showing a list of files by means of fruit as a phi-ball enhanced with cones, turned out to structure the massive information in the visualization of directories. The use of icons for showing the information was advised in <ref type="bibr" target="#b1">[2]</ref> in the context of cone trees. Our solution with phi-balls is also viable in that context. <ref type="figure" target="#fig_10">Figure 9</ref> shows the results of the refined model and can be compared to figure 3. The model represents the C:\Winnt directory on a windows NT machine, the prominently visible ball shows the system32 subdirectory. Each cone with a yellow color on this ball represents a dll file in this folder. The model in this figure is comprehensive and clean compared to the model in figure 3. It is hence feasible to show even larger directory trees in one model. This is shown in <ref type="figure" target="#fig_0">figure 10</ref> where the complete C:\ folder of the same machine is shown. The largest and first sub-directory that is split of in this model is the  Three-dimensional models can only be judged fairly in an interactive environment where an inherent problem as occlusion can be overcome by interaction on the model. All images were generated with an interactive system we have implemented to generate and visualize these models. Realtime performance could be achieved on a modern PC with a 3D-graphics card using some straightforward level of detail methods, such as adaptive accuracy and removal of very small elements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head><p>Hands-on experience with this system indicated that users are intrigued and stimulated by the visualization. Features such as large files (big cones), directories with many and/or large files (big spheres), and directories with a large overall content (thick branches) could easily be spotted. The pattern and color of the cones on the phi-balls provide a direct cue for the distribution and type of files. Finally, the resulting trees effectively show the files, the directories and their arrangements; in contrast to tree maps where this information is harder to extract.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>We have presented a new method for the visualization of huge hierarchical data structures, based on methods from botanical modeling, specifically the strand model of Holton <ref type="bibr" target="#b5">[6]</ref> and the phi-ball of Lintermann et al. <ref type="bibr" target="#b7">[8]</ref>. Naive application of such botanical models gives unsatisfactory results, but we have shown they can be customized to visualize large hierarchical structures in a clear and compact way.</p><p>Two aspects deserve special attention. Firstly, the cone covered phi-ball is an effective icon for the visualization of the properties of a list of items, which we expect to be useful for other applications as well. Secondly, the branches of the tree and the cones on the phi-ball hardly ever collide, despite the fact that no special measures were taken to prevent this. Efficient use of space is an important topic in information visualization. To this end, nowadays mathematical methods (such as hyperbolic scaling), algorithmic methods (such as the tree map algorithm), and physically based models (such as mass-spring models) are used. The methods of botanical modeling and especially the concept of phyllotaxis provide a surprisingly simple and very effective alternative solution.</p><p>We have only just started to apply methods from botanical modeling for information visualization, and expect that many other applications can take advantage of this rich source of inspiration. Using our own work as an example, only a part of Holton's original strand model has been used. Texture and gravity could for instance be used to visualize other aspects of the data, such as the creation date of files and directories; for other types of hierarchies the parametrization of for instance branching angles to the level of hierarchy could be beneficial. In summary, natura artis magistra. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Stem and two sub-branches.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Node and link diagram (t) and corresponding strands model (d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Directory = record dl : list of Directory; fl : list of File; File = record size : integer; type : String;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 .</head><label>3</label><figDesc>Result of dtree1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>dtree1(d) stem :=cylinder ((0,0,0),(0,λ,0),ρ); if d.dl=∅ then return leaves(d.fl); s :=strands(d); d 1 :=d.dl.pop(); d 2 :=d;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 .</head><label>4</label><figDesc>Continuation without (l) and with (r) extrusion.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 .</head><label>5</label><figDesc>Model without (l) and with (r) contraction. of the strands of d is split off. As a result the length of a continuing branch is limited to at most λ/ε. dtree2(d,e) stem :=cylinder ((0,0,0),(0,λ,0),ρ); if d.dl=∅ then return leaves(d.fl); s :=strands(d); d 1 :=d.dl.pop(); d 2 :=d; s 1 :=strands(d 1 ); s 2 :=strands(d 2 ); if e ≤ 0 then f :=ε*s else f :=e;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>1 Figure 6 .Figure 7 .</head><label>167</label><figDesc>Phi-ball construction. Computation of cone parameters. to the size of the corresponding files. However, planar disks pasted on the sphere look irregular. Mapping of disks to the surface of the sphere requires many polygons or an involved texture generation step. The use of cones is more efficient and leads to an attractive result, especially if the dimensions and the position of the cones are chosen such that they are tangent to the sphere. Below a function phiball(fl,bot,top) is given that produces a sphere and cones for each file in the list fl. The bot and top parameters, both in [−1, 1] indicate which part of the sphere is sliced for positioning spots. phiball(fl,bot,top) size := f ∈ f l f.si ze; P :=(0,0,1); O :=(0,0,0); h :=top; G :=∅; for each f ∈ f l Q :=(0,h, √ 1 − h 2 ); c := √ f.si ze/si ze; t := √ c 2 + 1; B :=(0,0,1/t); T :=(0,0,t); G :=R x (-POQ)(cone(B, T, c/t)) ∪ R y (β)G; dh :=(top − bot) f.si ze/si ze; h:=h − dh; return G ∪ sphere(O, 1);</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>From this the top (T ) and base point (B) as well as the cone's</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 .</head><label>8</label><figDesc>Phi-ball with one (l) and many (r) files.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 .</head><label>9</label><figDesc>Final model with contraction, extrusion, and phi-balls. C:\Program Files folder. The large green cone on top of the tree represents a file of more than 500 megabytes in C:\. The total tree consists of 47.551 files in 2.265 folders.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 11</head><label>11</label><figDesc>shows a model of the same directory but with a different setting for α and β. The figures 12 and 13 show the unix directory of one of the authors. The first directory that is split off contains a big sub-branch with mostly blue cones representing postscript and pdf files. The phi-balls with mostly red cones represent directories with image files.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 10 .</head><label>10</label><figDesc>Complete hard disk with α = 45 and β = 360/ϕ.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 11 .</head><label>11</label><figDesc>Complete harddisk with α = 90 and β = 0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 12 .</head><label>12</label><figDesc>Unix home-directory.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 13 .</head><label>13</label><figDesc>Detail of figure 12.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Modeling the mighty maple</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jules</forename><surname>Bloomenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;85 Proceedings)</title>
		<editor>B. A. Barsky</editor>
		<imprint>
			<date type="published" when="1985" />
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="305" to="311" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interacting with huge hierarchies: Beyond cone trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeromy</forename><surname>Carriere</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rick</forename><surname>Kazman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<date type="published" when="1995-10" />
			<biblScope unit="page" from="74" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The botanical beauty of random binary trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Luc</forename><surname>Devroye</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Kruszewski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graph Drawing 95</title>
		<editor>F. Brandenburg</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="166" to="177" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A collision-based model of spiral phyllotaxis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deborah</forename><forename type="middle">R</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Przemyslaw</forename><surname>Prusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Johannes</forename><surname>Battjes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;92 Proceedings)</title>
		<editor>Edwin E. Catmull</editor>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="361" to="368" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Graph visualisation and navigation in information visualisation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Herman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guy</forename><surname>Melançon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M. Scott</forename><surname>Marshall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics</title>
		<editor>B. Falcidieno and J. Rossignac</editor>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Strands, gravity and botanical tree imagery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><surname>Holton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="57" to="67" />
			<date type="published" when="1994-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fractal approaches for visualizing huge hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hideki</forename><surname>Koike</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hirotaka</forename><surname>Yoshihara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1993 IEEE Symposium on Visual Languages</title>
		<meeting>the 1993 IEEE Symposium on Visual Languages</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="55" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Interactive modeling of plants</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Lintermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><surname>Deussen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="56" to="65" />
			<date type="published" when="1999-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The Fractal Geometry of Nature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Benoit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mandelbrot</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1977" />
			<publisher>W.H. Freeman &amp; Company</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">The algorithmic beauty of plants</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Przemyslaw</forename><surname>Prusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aristid</forename><surname>Lindenmayer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><forename type="middle">S</forename><surname>Hanan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Cone trees: Animated 3D visualizations of hierarchical information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><forename type="middle">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jock</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM CHI&apos;91 Conference on Human Factors in Computing Systems, Information Visualization</title>
		<meeting>ACM CHI&apos;91 Conference on Human Factors in Computing Systems, Information Visualization</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="189" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Tree visualization with tree-maps: A 2-D space-filling approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="92" to="99" />
			<date type="published" when="1992-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Graph Drawing: Algorithms for the Visualization of Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Ioannis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Giuseppe</forename><forename type="middle">Di</forename><surname>Tollis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Battista</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tamassia</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Cushion treemaps -visualization of hierarchical information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jarke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Huub</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van De Wetering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 1999 IEEE Symposium on Information Visualization (Info-Vis&apos;99)</title>
		<editor>G. Wills and D. Keim</editor>
		<meeting>1999 IEEE Symposium on Information Visualization (Info-Vis&apos;99)</meeting>
		<imprint>
			<date type="published" when="1999-10" />
			<biblScope unit="page" from="73" to="78" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
