<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Pixel Bar Charts: A New Technique for Visualizing Large Multi-Attribute Data Sets without Aggregation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date>October 22 -October 23, 2001</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Keim</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><forename type="middle">C</forename><surname>Hao</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julian</forename><surname>Ladisch</surname></persName>
							<email>julian@ladisch.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meichun</forename><surname>Hsu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Umeshwar</forename><surname>Dayal</surname></persName>
							<email>dayal@hpl.hp.com</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Institute</orgName>
								<orgName type="institution">University of Constance</orgName>
								<address>
									<settlement>Constance</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">Hewlett Packard Research Laboratories</orgName>
								<address>
									<settlement>Palo Alto</settlement>
									<region>CA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">IEEE Symposium on Information Visualization</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<address>
									<settlement>San Diego</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Pixel Bar Charts: A New Technique for Visualizing Large Multi-Attribute Data Sets without Aggregation</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published">October 22 -October 23, 2001</date>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:47+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Simple presentation graphics are intuitive and easy-to-use, but show only highly aggregated data and present only a very limited number of data values (as in the case of bar charts). In addition, these graphics may have a high degree of overlap which may occlude a significant portion of the data values (as in the case of the x-y plots). In this paper, we therefore propose a generalization of traditional bar charts and x-y-plots which allows the visualization of large amounts of data. The basic idea is to use the pixels within the bars to present the detailed information of the data records. Our so-called pixel bar charts retain the intuitiveness of traditional bar charts while allowing very large data sets to be visualized in an effective way. We show that, for an effective pixel placement, we have to solve complex optimization problems, and present an algorithm which efficiently solves the problem. Our application using real-world e-commerce data shows the wide applicability and usefulness of our new idea.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Because of the fast technological progress, the amount of data which is stored in computers increases rapidly. Researchers from the University of Berkeley estimate that every year about 1 Exabyte of data is generated, with 99.997% available only in digital form. Today, computers typically record even simple transactions of everyday life, such as paying by credit card, using the telephone and shopping in e-commerce stores. This data is collected because business people believe that it is a potential source of valuable information and could provide a competitive advantage. Finding the valuable information hidden in the data, however, is a difficult task. Visual data exploration techniques are indispensable to solving this problem. In most data mining systems, however, only simple graphics, such as bar charts, pie charts, x-y plots, etc., are used to support the data mining process. While simple graphics are intuitive and easy-to-use, they either:</p><p>-show highly aggregated data and actually present only a very limited number of data values (as in the case of bar charts or pie charts), or -have a high degree of overlap which may occlude a significant portion of the data values (as in the case of xy plots). The usefulness of bar charts is especially limited if the user is interested in relationships between different attributes such as product type, price, number of orders, and quantities. The reason for this limitation is that multiple bar charts for different attributes do not support the discovery and correlation of interesting subsets, which is one of the main tasks in mining customer transaction data. For an analysis of large volumes of e-commerce transactions [Eic 99], the visualization of highly aggregated data is not sufficient. What is needed is to present an overview of the data but at the same time show the detailed information for each data item. In this paper, we describe a new visualization technique called pixel bar chart. The basic idea of pixel bar charts is to use the intuitive and widely used presentation paradigm of bar charts, but also use the available screen space to present more detailed information. By coloring the pixels within the different bars according to the values of the data records, very large amounts of data can be presented to the user. To make the display more meaningful, two parameters of the data records are used to impose an ordering on the pixels in the x-and y-directions. Pixel bar charts can be seen as a generalization of bar charts. They combine the general idea of x-y plots and bar charts to allow an overlap-free, nonaggregated display of multi-attribute data. Since pixel bar charts use each pixel to present one data value, they belong to pixel-oriented techniques. Other pixeloriented techniques include the spiral technique <ref type="bibr">[</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">From Bar Charts to Pixel Bar Charts</head><p>A common method for visualizing large volumes of data is to use bar charts. Bar charts are widely used and are very intuitive and easy to understand. <ref type="figure">Figure 1</ref> illustrates the use of a regular bar chart to visualize customer distribution in an e-commerce sales transaction. The height of the bars represents the number of customers for 12 different product categories. Bar charts, however, require a high degree of data aggregation and actually show only a rather small number of data values (only 12 values are shown in <ref type="figure">Figure 1</ref>). Therefore, for data exploration of large multidimensional data, they are of limited value and are not able to show important information such as:</p><p>-data distributions of multiple attributes -local patterns, correlations, and trends -detailed information, e.g., each customer's profile</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Basic Idea of Pixel Bar Charts</head><p>Pixel bar charts are derived from regular bar charts (see <ref type="figure">Figure 1a</ref>). The basic idea of a pixel bar chart is to present the data values directly instead of aggregating them into a few data values. The approach is to represent each data item (e.g. a customer) by a single pixel in the bar chart. The detailed information of one attribute of each data item is encoded into the pixel color and can be accessed and displayed as needed. One important question is: how are the pixels arranged within each bar? Our idea is to use one or two attributes to separate the data into bars (dividing attributes) and then use two additional attributes to impose an ordering within the bars (see <ref type="figure">Figure 2</ref> for the general idea). The pixel bar chart can therefore be seen as a combination of the traditional bar charts and the x-y diagrams.</p><p>Now, we have a visualization in which one pixel corresponds to one customer. If the partitioning attribute is redundantly mapped to the colors of the pixels, we obtain the regular bar chart shown in <ref type="figure">Figure 1a (Figure 1b</ref> shows the equal-height-bar-chart" which we will explain in the next section). Pixel bar charts, however, can be used to present large amounts of detailed information. The one-toone correspondence between customers and pixels allows us to use the color of the pixels to represent additional attributes of the customer for example, sales amount, #of visits, or sales quantity. In <ref type="figure">Figure 3a</ref>, a pixel bar chart is used to visualize thousands of e-commerce sales transactions. Each pixel in the visualization represents one customer. The number of customers can be as large as the screen size (about 1.3 million). The pixel bar chart shown in <ref type="figure">Figure 3a</ref> uses product type as the dividing attribute and number of visits and dollar amount as the x and y ordering attributes. The color represents the dollar amount spent by the corresponding customer. High dollar amounts correspond to bright colors, low dollar amounts to dark colors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Space-Filling Pixel Bar Charts</head><p>One problem of traditional bar charts is that a large portion of the screen space can not be used due to the differing heights of the bars. With very large data sets, we would like to use more of the available screen space to visualize the data. One idea that increases the number of displayable data values is to use equal-height instead of equal-width bar charts. In <ref type="figure">Figure 1b</ref>, the regular bar chart of <ref type="figure">Figure 1a</ref> is shown as an equal-height bar chart. The area (width) of the bars corresponds to the attribute shown, namely the number of customers. If we now apply our pixel bar chart idea to the resulting bar charts, we obtain space-filling pixel bar charts which use virtually all pixels of the screen to display customer data items. In <ref type="figure">Figure 3b</ref>, we show an example of a space-filling pixel bar chart which uses the same dividing, ordering, and coloring attributes as the pixel bar chart in <ref type="figure">Figure 3a</ref>. In this way, each customer is represented by one pixel. Note that pixel bar charts generalize the idea of regular bar charts. If the partitioning and coloring attributes are identical, both types of pixel bar charts become scaled versions of their regular bar chart counterparts. The pixel bar chart can therefore be seen as a generalization of the regular bar charts but they contain significantly more information and allow a detailed analysis of large original data sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Multi-Pixel Bar Charts</head><p>In many cases, the data to be analyzed consists of multiple attributes. With pixel bar charts we can visualize attribute values using multi-pixel bar charts which use different color mappings but the same partitioning and ordering attributes. This means that the arrangement of data items within the corresponding bars of multi-pixel bar charts is the same, i.e., the colored pixels corresponding to the different attribute values of the same data item have a unique position in the bars. In <ref type="figure">Figure 4</ref>, we show an example of three pixel bar charts with product type as the dividing attribute and number of visits and dollar amount as the x and y ordering attributes. The attributes which are mapped to color are dollar amount spent, number of visits, and sales quantity. Note that the pixels in corresponding bars in multiple bar charts are related by their position, i.e., the same data record has the same relative position within each of the corresponding bars. It is therefore possible to relate the different bar charts and detect correlations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Formal Definition of Pixel Bar Charts</head><p>In this section we formally describe pixel bar charts and the problems that need to be solved in order to implement an effective pixel placement algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Definition of Pixel Bar Charts</head><p>For a general definition of pixel bar charts, we need to specify the:</p><p>-dividing attributes (for between-bar partitioning) -ordering attributes (for within-bar ordering) -coloring attributes (for pixel coloring).</p><p>In traditional bar charts there is one dividing attribute which partitions the data into disjoint groups corresponding to the bars. In space-filling bar charts, the bars correspond to a dividing attribute</p><p>x -ordering attribute y -ordering attribute partitioning of the screen according to the horizontal axis (x).</p><p>We may generalize the definition of space-filling pixel bar charts by allowing more than one dividing attribute, i.e. one for the horizontal axis (D x ) and one for the vertical axis (D y ).</p><p>Next, we need to specify an attribute for ordering the pixel in each pixel bar. Again, we can do the ordering according to the x-and the y-axis, i.e., along the horizontal (O x ) and vertical (O y ) axes inside each bar.</p><p>Finally, we need to specify an attribute for coloring the pixels. Note that in multi-bar charts we may assign different attributes to colors in different bar charts, which enables the user to relate the different coloring attributes and detect partial relationships among them. Note that the dividing and ordering attributes have to stay the same in order to do that.</p><p>Let DB = {d 1 , …, d n } be the data base of n data records, each</p><formula xml:id="formula_0">consisting of k attribute values { } i k i i a a d , , 1 K = , l i l A a ∈ ,</formula><p>where A l is the attribute name of value a l . Formally, a pixel bar chart is defined by a five tuple: where C corresponds to different attributes, i.e., number of visits, dollar amount, quantity. </p><formula xml:id="formula_1">&lt;D x , D y , O x , O y , C &gt; where D x , D y , O x , O y , C ∈ {A l , …, A k, } ⊥ ∪ 1 and D x /D</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Formalization of the Problem</head><formula xml:id="formula_2">j i j i d f d f j i DB d d ≠ ⇒ ≠ ∈ ∀ . 1</formula><p>The element ⊥ is used if no attribute is specified. 3. Locality Constraint In dense pixel displays the locality of pixels plays an important role. Locality means that similar data records are placed close to each other. The partitioning in pixel bar charts ensures a basic similarity of the data records within a single bar. In positioning the pixels within the bars, however, the locality property also has to be ensured. For the formalization, we need a function sim</p><formula xml:id="formula_3">(d i , d j ) → [0…1]</formula><p>which determines the similarity of two data records and the inverse function of the pixel placement function f -1 , which determines the data record for a given (x,y)-position on the screen. The locality constraint can then be expressed as Note that in general it is not possible to place all similar pixels close to each other while respecting the dense display and no-overlap constraints. This is the reason why the locality constraint is formalized as a global optimization problem.</p><formula xml:id="formula_4">min )) , 1 ( ), ,<label>( ( )</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Ordering Constraint</head><p>The last constraint which is closely related to the locality constraint is the ordering constraint. The idea is to enforce a one-dimensional ordering in x-and y-direction according to the specified attributes O x = A 1 and O y =A 2 . Formally, we have to ensure</p><formula xml:id="formula_5">x d f x d f a a n j i j i j i ). ( ). ( : .. 1 , 1 1 &gt; ⇒ &gt; ∈ ∀ y d f y d f a a n j i j i j i ). ( ). ( : .. 1 , 2 2 &gt; ⇒ &gt; ∈ ∀</formula><p>Note that ordering the data records according to the attribute and placing them in a row-by-row or column-by-column fashion may easily fulfill each one of the two constraints. Ensuring both constraints at the same time may be impossible in the general case. We can formalize the constraint as an optimization problem: min 2 ) ). , 1 ( ). , (  Note that there may be a trade-off between the x-and the yordering constraint. In addition, the optima for the locality and the ordering constraints are in general not identical. This is due to the fact that the similarity function may induce a different optimization criterion than the x-/y-ordering constraint. For solving the pixel placement problem, we therefore have to solve an optimization problem with multiple competing optimization goals. The problem is a typical complex optimization problem which is likely to be NP-complete and can therefore only be solved efficiently by a heuristic algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">The Pixel Placement Algorithm</head><p>For the generation of pixel bar charts, we have to: (1) partition the data set according to D x and D y ; (2) determine the pixel color according to C 2 ; and (3) place the pixels of each partition in the corresponding regions according to O x , O y . The partitioning according to D x and D y and the color mapping are simple and straightforward to implement, and therefore do not need to be described in detail here. The pixel placement within one bar , however, is a difficult optimization problem because it requires a two-dimensional sort. In the following, we describe our heuristic pixel placement algorithm which provides an efficient solution to the problem. The basic idea of the heuristic pixel placement algorithm is to partition the data set into subsets according to O x and O y , and use those subsets to place the bottom-and left-most pixels. This provides a good starting point which is the basis for the iterative placement of the remaining pixels. </p><formula xml:id="formula_6">{ } { }       = = ∈ ∈ − 1 1 2 1 1 . min . min | ) 1 , 1 ( a d a d d f s Y s d s X s d s</formula><p>Next we place all pixels in the lower and left pixel rows of the bar. This is done as { }</p><formula xml:id="formula_7">w i a d d i f s i X s d s .. 1 . min | ) 1 , ( 2 1 = ∀       = ∈ − { } h j a d d j f s j Y s d s .. 1 . min | ) , 1 ( 1 1 = ∀       = ∈ −</formula><p>3. The final step is the iterative placement of all remaining pixels. This is done starting from the lower left to the upper right. If pixels at positions (i-1, j) and (i, j-1) are already placed, the pixel at position (i, j) is determined as</p><formula xml:id="formula_8">{ } ∅ ≠ ∩       + = ∩ ∈ − j Y i X if a d a d d j i f s s j Y i X s d s 2 1 1 . . min | ) , (</formula><p>Because we have placed the data in a data structures as introduced in step 1, the pixel to be placed at each position can be determined in O(1) time if</p><formula xml:id="formula_9">∅ ≠ ∩ j Y i X . If ∅ = ∩ j Y i X</formula><p>, we have to iteratively extend the partitions X i and Y j and consider</p><formula xml:id="formula_10">j Y X X d i i s ∩ ∪ ∈ + ) ( 1 .</formula><p>If this set is still empty, we have to consider</p><formula xml:id="formula_11">) ( ) ( 1 1 + + ∪ ∩ ∪ ∈ j j i i s Y Y X X d</formula><p>and so on, until a data point to be placed is found. Note that this procedure is quite efficient due to the data structure used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">The Pixel Bar Chart System</head><p>To analyze large volumes of transaction data with multiple attributes, pixel bar charts have been integrated with a data mining visualization system [HDHDB 99]. The system uses a web browser with a Java activator to allow real-time interactive visual data mining on the web.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">System Architecture and Components</head><p>The pixel bar chart system connects to a data warehouse server and uses the database to query for detailed data as needed. The data to build the pixel array is kept in memory to support real-time manipulation and correlation. As illustrated in <ref type="figure">Figure 8</ref>, the pixel bar chart system architecture contains three basic components: 1. Pixel array ordering and grouping A pixel array is constructed from the pixel bar chart five tuple specification. One pixel represents one data record, i.e., a customer. The partitioning algorithm assigns each data record to the corresponding bar according to the partitioning attribute(s). The pixel placement implements a simplified version of the heuristic algorithm presented in subsection 3.4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Multiple linked pixel bar charts</head><p>In multi-bar charts, the position of the pixels belonging to the same data record remains the same across multipixel bar charts for correlation. The colors of the pixel correspond to the value of the selected attributes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Interactive data exploration</head><p>This system provides simultaneous browsing and navigation of multiple attributes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Interactive Data Analysis</head><p>Interactivity is an important aspect of the pixel bar chart system. To make large volumes of multi-attribute datasets easy to explore and interpret, the pixel bar chart system provides the following interaction capabilities: (1) visual querying;</p><p>(2) layered drill-down;</p><p>(3) multiple linked visualizations; and (4) zoom.</p><p>The attributes used for partitioning (Dx, Dy), ordering (Ox, Oy), and coloring (C) can be selected and changed at execution time. For identifying correlations, a subset of data items in a pixel bar chart can be selected to get the pixels corresponding to related attribute values highlighted within the same display. A drill-down technique allows the viewing of all related information after selecting a single data item. When multi-bar charts are presented, pixels reside at the same location across all the charts with different attributes.</p><p>In addition to discovering correlations and patterns, the user may select a single data item to relate all its attribute values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Application and Evaluation</head><p>The pixel bar chart technique has been prototyped in several e-commerce applications at Hewlett Packard Laboratories. It has been used to visually mine large volumes of sales transactions and customer shopping activities at HP shopping web sites.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Customer Analysis</head><p>The pixel bar chart system has been applied to customer buying patterns and behaviors. In <ref type="figure" target="#fig_5">Figure 9</ref>, the pixels of the bar chart represent customers making transactions on the web. In the resulting pixel bar chart, customers with similar purchasing behaviors (i.e., product type, geographical location, dollar amount, number of visits, and quantity) are placed close to each other. A store manager can use the visualization to rapidly discover customer buying patterns and use those patterns to target marketing campaigns.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Client</head><p>By relating the multiple pixel bar charts of <ref type="figure" target="#fig_5">Figure 9</ref>, the user may observe that the top dollar amount customers come back more frequently and purchase larger quantities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Sales Transaction Analysis</head><p>One of the common questions electronic store managers ask is how to use the customer purchase history for improving product sales and promotion. Product managers want to understand which products have the top sales and who are their top dollar amount customers. While regular bar charts provide aggregated information on the number of customers by product type <ref type="figure">(Figure 1</ref>), the corresponding pixel bar charts include important additional information such as the dollar amount distribution of the sales. <ref type="figure">Figure 10</ref> illustrates an example of a multi-pixel bar chart of 405,000 multi-attribute web sales transactions. The dividing attribute (D x ) is again product type; the ordering attributes are number of visits and dollar amount (O x and O y ). The colors (C) in the different bar charts represent the attributes dollar amount, number of visits, and quantity. The following information can be obtained: a) Product type 7 and 10 have the top dollar amount customers (dark colors of bar 7, 10 in <ref type="figure">Figure 10a</ref>).</p><p>b) The dollar amount spent and #of visits are clearly correlated, i.e. for product type 4 (linear increase of dark colors at the top of bar 4 in <ref type="figure">Figure 10b</ref>). c) Product types 4 and 11 have the highest quantities sold (dark colors of bar 4 and 11 in <ref type="figure">Figure 10c</ref>).</p><p>d) By clicking on a specific pixel (A), we may find out that customer A visited 25 times, bought 500 items, and spent $345,000 on product type 5.</p><p>It is further interesting that there are clusters of darker colors in bar 4 of <ref type="figure">Figure 10c</ref>, which means that there are certain ranges of dollar amount sales for which the quantity tends to be higher than in other segments. This observation is unexpected and may be used to identify the clusters of sales transactions and make use of the information to further increase the sales. Note that the information mentioned above cannot be detected by regular bar charts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusion</head><p>In this paper, we presented pixel bar charts, a new method for visualizing large amounts of multi-attribute data. The approach is a generalization of traditional bar charts and x-y diagrams, which avoids the problem of losing information by aggregation or overplotting. Instead, pixel bar charts map each data point to one pixel of the display. For generating the pixel bar chart visualizations, we have to solve a complex optimization problem. The pixel placement algorithm is an efficient and effective solution to the problem. We apply the pixel bar chart idea to real data sets from an e-commerce application and show that pixel bar charts provide significantly more information than regular bar charts.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure</head><label></label><figDesc>Figure 2: A Pixel Bar Chart</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>y are the dividing attributes in x-/y-direction, O x /O y are the ordering attributes in x-/y-direction, and C is the coloring attribute. The multi-pixel bar charts of sales transactions shown in Figure 4, for example, are defined by the five-tuple &lt;product type, ⊥ , no. of visits, dollar amount, C&gt;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 7 :Figure 6 :Figure 5 :</head><label>765</label><figDesc>Ordering attributes on x-and y-axis (e.g., Ox = Dollar Amount, Oy=Quantity) Dividing attributes on x-and y-axis (e.g., Dx = Product Type, Dy= Region) Dividing attribute on x-axis (e.g., Dx = Product Type)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9</head><label>9</label><figDesc>shows the four attributes of 106,199 customer buying records. The four pixel bar charts of Figure 9 are constructed as follows: (1) Product types is the dividing attribute D x; (2) Dollar amount is the x-ordering attribute O x , Region is y-ordering attribute O y for 10 United States region; and (3) Region, dollar amount, number of visits and quantity are the four coloring attribute C. The user may observe the following facts: a) Region attribute There are 10 different colors to represent 10 different regions (labeled 1-10 in Figure 9a) in the United States. The colored wave indicates the number of customers in each region. Region 9 (largest area) is found to have the largest number of customers. Region 7 (smallest area) has the least number of customers across all product types. b) Dollar amount attribute Product type 5 has the most top dollar amount sales (blue &amp; brown). Types 6 and 7 have a very small variance across all regions (solid blue/brown). c) Number of visits attributeThe blue color distribution in product type 4 indicates that customers of this product type come back more often than customers of other product types. d) Quantity attribute The green color of product type 6 indicates that in this category all customers bought the same number of items across all regions. It is also obvious that product type 4 customers have the largest quantities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :Figure 9 :Figure 10 :</head><label>8910</label><figDesc>System Architecture &amp; Components Multi-Pixel Bar Chart for Mining 106,199 Customer Buying Transactions (D x = Product Type, D y = ⊥ , O x =dollar amount, O y =region, C) Multi-Pixel Bar Chart for Mining 405,000 Sales Transaction Records (D x = Product Type, D y = ⊥ , O x =no. of visits, O y = dollar amount, C) b) Color: no. of visits a) Color: dollar amount</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>The basic idea of pixel bar charts is to produce dense pixel visualizations which are capable of showing large amounts of data on a value by value basis without aggregation. The specific requirements for pixel displays are:-dense display, i.e., bars are filled completely -non-overlapping, i.e. no overlap of pixels in the display -locality, i.e., similar data records are placed close to each other -ordering, i.e., ordering of data records according to O x , O y . To formalize these requirements we first have to introduce the screen positioning function Without loss of generality, we assume that O x = A 1 and O y = A 2 . The requirements can then be formalized as: 1. Dense Display Constraint The dense display constraint requires that all pixel rows (columns) except the last one are completely filled with pixels. For equal-width bar charts, the width w of the bars is fixed. For a partition p consisting of |p| pixels, we have to ensure that</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell>f</cell><cell cols="2">:</cell><cell cols="2">A 1</cell><cell cols="3">× K</cell><cell>×</cell><cell cols="2">A k</cell><cell cols="2">→</cell><cell>Int</cell><cell>×</cell><cell cols="5">Int</cell><cell>,</cell></row><row><cell cols="25">which determines the x-/y-screen positions of each data record d i , i.e., ) , ( ) ( y x d f i = denotes the position of data</cell></row><row><cell cols="16">record d i on the screen, and</cell><cell cols="3">d f i ). (</cell><cell>x</cell><cell></cell><cell></cell><cell></cell><cell cols="2">denotes the x-</cell></row><row><cell cols="4">coordinate and , .. 1 w i = ∀</cell><cell cols="17">y the y-coordinate.  f i ). d (  : / .. 1 f with d w p j í ∃ = ∀</cell><cell cols="2">(</cell><cell cols="2">d</cell><cell>í</cell><cell>)</cell><cell>=</cell><cell>( i</cell><cell>,</cell><cell>j</cell><cell>)</cell></row><row><cell cols="25">For equal-height bar charts of height h the corresponding</cell></row><row><cell cols="3">constraint is</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>i ∀</cell><cell>=</cell><cell> .. 1</cell><cell cols="2">p</cell><cell>/</cell><cell cols="2">h</cell><cell> ,</cell><cell>j ∀</cell><cell>=</cell><cell cols="3">.. 1 h</cell><cell>:</cell><cell>d ∃</cell><cell>í</cell><cell cols="2">with</cell><cell>f</cell><cell cols="2">(</cell><cell cols="2">d</cell><cell>í</cell><cell>)</cell><cell>=</cell><cell>( i</cell><cell>,</cell><cell>j</cell><cell>)</cell></row><row><cell cols="13">2. No -Overlap Constraint</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="25">The no-overlap constraint means that a unique position is</cell></row><row><cell cols="25">assigned to each data record. Formally, we have to ensure</cell></row><row><cell cols="25">that two different data records are placed at different</cell></row><row><cell cols="3">positions, i.e.,</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>,</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>:</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>(</cell><cell>)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">(</cell><cell>)</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>The algorithm works as follows: 1. For an efficient pixel placement within a single bar, we first determine the one-dimensional histograms for O x and O y , which are used to determine the α-quantiles of O x and O y . If the bar under consideration has extension w x h pixels, we determine the -quantiles for the partitioning of O y . The quantiles are then used to determine the partitions X 1 , …,X w of O x and Y 1 , …,Y h of O y . The partitions X 1 , …,X w are sorted according to O y and the partitions Y 1 , …,Y h according to O x . 2. We can start now to place the pixel in the lower-left corner, i.e., position (1,1), of the pixel bar:</figDesc><table><row><cell>1</cell><cell>w ,</cell><cell>K</cell><cell>,</cell><cell>(</cell><cell>w</cell><cell>−</cell><cell>) 1</cell><cell>w</cell><cell>-</cell></row><row><cell cols="10">quantiles for the partitioning of O x , and the h h h ) 1 ( , , 1 − K</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">We use a color map, which maps high data values to bright colors and low data values to dark colors.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Thanks to Sharon Beach of HP Laboratories for her encouragement and suggestions, Shu F. W. and Brain O. from HP Shopping for providing suggestions and data. and Graham P. of Agilent Laboratories for his review and comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">DataSpace: 3-D Visualization of Large Databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Anupam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Dar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Leibfried</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Petajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Symp. on Information Visualization</title>
		<meeting>Int. Symp. on Information Visualization<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="82" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Circle Segments: A Technique for Visually Exploring Large Multidimensional Data Sets&apos;, VISUALIZATION &apos;96, HOT TOPIC SESSION</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ankers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">P</forename><surname>Kriegel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Dynamic Queries for Information Exploration: An Implementation and Evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahlberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Williamson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM CHI Int. Conf. on Human Factors in Computing</title>
		<meeting>ACM CHI Int. Conf. on Human Factors in Computing<address><addrLine>Monterey, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="619" to="626" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Shape Coding of Multidimensional Data on a Mircocomputer Display</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Beddow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;90</title>
		<meeting>Visualization &apos;90<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="238" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Visualizing Network Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">J</forename><surname>Wills</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualizations and Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="16" to="28" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Interactive Data Visualization Using Focusing and Linking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Buja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Michalak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;91</title>
		<meeting>Visualization &apos;91<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="156" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Eick: Visualizing Multi-dimensional Data with ADVISOR/2000, Visualinsights</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Stephen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Navigating Large Networks with Hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">J</forename><surname>Wills</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;93</title>
		<meeting>Visualization &apos;93<address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="204" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A Java-based Visual Mining Infrastructure and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dayal</forename><forename type="middle">U</forename><surname>Umesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Becker J ; Inselberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dimsdale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
		<idno>ID 90</idno>
	</analytic>
	<monogr>
		<title level="m">Parallel Coordinates: A Tool for Visualizing Multi-Dimensional Geometry&apos;, Proc. Visualization &apos;90</title>
		<meeting><address><addrLine>San Francisco, CA; San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The Plane with Parallel Coordinates, Special Issue on Computational Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inselberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1985" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="69" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">VisDB: Database Exploration using Multidimensional Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="page" from="40" to="49" />
			<date type="published" when="1994-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Recursive Pattern: A Technique for Visualizing Very Large Amounts of Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">P</forename><surname>Kriegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ankerst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;95</title>
		<meeting>Visualization &apos;95<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Exploring N-Dimensional Databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leblanc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Wittels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;90</title>
		<meeting>Visualization &apos;90<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="230" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A Focus + Context Technique Based on Hyperbolic Geometry for Visualizing Large Hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lamping</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Pirolli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM CHI Conf. on Human Factors in Computing (CHI95)</title>
		<meeting>ACM CHI Conf. on Human Factors in Computing (CHI95)</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="401" to="408" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Iconographic Displays for Visualizing Multidimensional Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Pickett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Grinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Conf. on Systems, Man and Cybernetics</title>
		<meeting>IEEE Conf. on Systems, Man and Cybernetics<address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1988" />
			<biblScope unit="page" from="514" to="519" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Cone Trees: Animated 3D Visualizations of Hierarchical Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM CHI Int. Conf. on Human Factors in Computing</title>
		<meeting>ACM CHI Int. Conf. on Human Factors in Computing</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="189" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brown</surname></persName>
		</author>
		<title level="m">Graphical Fisheye Views&apos;, Communications of the ACM</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="73" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Tree Visualization with Treemaps: A 2D Space-Filling Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="92" to="99" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
