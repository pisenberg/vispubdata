<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Automatic Alignment Of High-Resolution Multi-Projector Displays Using An Un-Calibrated Camera</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuqun</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Douglas</forename><forename type="middle">W</forename><surname>Clark</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Finkelstein</surname></persName>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timothy</forename><forename type="middle">C</forename><surname>Housel</surname></persName>
							<email>thousel@aol.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Li</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Princeton University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Princeton University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Automatic Alignment Of High-Resolution Multi-Projector Displays Using An Un-Calibrated Camera</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.4.0 [Image Processing and Computer Vision]: General -Image Displays; I.4.1 [Image Processing And Computer Vision]: Digitization and Image Capture -Imaging Geometry seamless tiling</term>
					<term>automatic alignment</term>
					<term>projective mapping</term>
					<term>simulated annealing</term>
				</keywords>
			</textClass>
			<abstract>
				<p>A scalable, high-resolution display may be constructed by tiling many projected images over a single display surface. One fundamental challenge for such a display is to avoid visible seams due to misalignment among the projectors. Traditional methods for avoiding seams involve sophisticated mechanical devices and expensive CRT projectors, coupled with extensive human effort for fine-tuning the projectors. This paper describes an automatic alignment method that relies on an inexpensive, uncalibrated camera to measure the relative mismatches between neighboring projectors, and then correct the projected imagery to avoid seams without significant human effort.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Rapid advances in computer technology have made data visualization widely available and indispensable. However, the resolution of the displays, the critical component in visualization, has been lagging far behind other key enabling technologies. Although flat panel devices have become cheaper and better, it is extremely difficult and expensive to produce really high-resolution, large-scale flat panels. Because of the drive electronics that is required on the sides of a panel display, it is also infeasible to put together multiple flat panels side by side without seams.</p><p>Tiling multiple projectors together is a viable way to build a high-resolution, high-brightness, seamless display. But, as such a display system scales beyond three or four projectors, aligning the projectors becomes a challenging issue. A multi-projector display might in principle be perfectly aligned by manual means just once; but in practice physical realities (vibration, lamp-changing, and so on) mean that re-alignment is frequently needed. Aligning the projectors by hand is a time-consuming task that requires both skill and experience. It also requires the use of either sophisticated mechanical devices or electron beam adjustment found only on expensive CRT projectors.</p><p>Alternatively one can employ computer vision and image processing techniques to digitally align the projectors. By warping the images, the computer can correct the projected imagery to account for the physical realities of misalignment <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>. In order to apply the correct amount of digital compensation, the computer has to first measure accurately the actual misalignment.</p><p>The research challenge here is to devise efficient algorithms without using expensive cameras and instruments. One could in theory use a camera with extremely high resolution to measure the misalignment. Unfortunately, such a device is hard to get and can cost even more than the display itself. Commodity video cameras are inexpensive and available everywhere, but they suffer from low resolution. Although calibrating the cameras overcomes this problem, the calibration process itself involves human labor and could become time-consuming.</p><p>We have developed a novel algorithm that uses an inexpensive and uncalibrated camera to align the projectors. Our method avoids camera calibration by taking only relative measurements -for instance, matching a few points and lines between a pair of projectors. Since the camera only has to make "binary" decisions regarding these measurements, it is free to zoom and pan arbitrarily close to the target spot to obtain highly accurate observations. Our alignment algorithm employs the simulated annealing technique to "stitch" the local observations together into a self-consistent global picture, and find a set of projection mappings that are consistent with the observations.</p><p>The rest of the paper describes in detail our automatic alignment method and our experimental results. stage, the calibrated cameras serve as measurement instruments to map pixels from each projector to the points in the global coordinate system.</p><p>Surati and Knight developed an algorithm that uses a camera to map the pixels from each projector to the points in a pre-established global screen coordinate system <ref type="bibr" target="#b15">[16]</ref>. During the calibration stage, a camera is calibrated against a fine grid affixed to the display surface. The grid is physically drawn by a high-precision plotter. A mapping is established between pixels in the camera field and the physical points on the display surface. In the registration stage, each projector projects a regular grid onto the display surface. A computer vision algorithm accurately locates each projected grid point in the camera's field of view. Using the camera-to-display-surface mapping established previously, the projected grid point (or a pixel in the projector) is mapped to a physical point on the display surface with high precision. This method works well for a small-scale display wall. It can deal with arbitrary distortions of the projectors. However, using an absolute measurement grid to calibrate the camera prevents this method from scaling for a large display wall; it is problematic whether one can generate a physical or project a virtual measurement grid that is large enough but still has fine precision.</p><p>Raskar et al. attempted to solve a general case in which the display surface can be arbitrarily complex, for example, the corner of a wall, or a curved screen <ref type="bibr" target="#b3">[4]</ref>. This requires registration of the 3D surface geometry of the screen surface as well as registration of the projected pixels on the display surface. Their algorithm uses known 3D objects such as painted boxes to calibrate the extrinsic and intrinsic parameters of a few fixed cameras. Two calibrated cameras that overlap in their fields of view can observe the same mesh pattern displayed by a projector. The observations from both cameras are correlated using the stereo vision technique; from this correlation the exact location of a projected pixel on the display surface is derived. The location information is in the 3D space and therefore also reveals the surface contour of the screen. The drawback of this approach is again the requirement of camera calibration.</p><p>Our work differs from previous work by the use of an uncalibrated camera to observe misalignment among the projectors. The use of camera calibration implies that the cameras themselves must be fixed and cannot pan and zoom during measurement, for otherwise camera parameters will have to calibrated continuously. It also requires setting up known objects such as as fine-plotted grid and regular 3D objects. Avoiding camera calibration can greatly minimize the amount of human involvement and equipment required in multi-projector alignment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The Automatic Alignment Algorithm</head><p>Our automatic alignment algorithm consists of two stages. In the misalignment measurement stage, the camera observes geometric relationships -point matches and line matches -between adjacent projectors. In the alignment computation stage, we set up a multi-dimensional global minimization problem whose constraints are those observations. The minimization process produces a set of alignment correction functions, one for each projector, that maintain ¦ § and ¦ © continuities across the projectors. <ref type="figure" target="#fig_1">Figure 1</ref> shows a schematic of our alignment system. Our algorithm assumes that projectors are already roughly aligned. This is a reasonable assumption, because coarse alignment can be easily accomplished with an inexpensive projector rack and some manual adjustment. Essentially we assume that the projectors are not so badly misaligned that computational alignment is impossible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Projection function</head><p>Before getting into the details of our alignment algorithm, let us first review the mathematical representation for a multi-projector  " ! # on the global display space. This mapping, or the projection function, is normally accomplished with a lens system. <ref type="bibr" target="#b0">1</ref>  <ref type="figure" target="#fig_3">Figure 2</ref> shows a conceptual diagram of a typical lens system. The projection function can be decomposed into two parts, the projective transformation $ and the non-linear distortion  The projective transformation can be expressed by a 3x3 projection transformation in homogeneous coordinates using 8 free parameters</p><formula xml:id="formula_0">% : 2 &amp; " ! # &amp; ' ( % 0 ) 1 $ 2 ) 1 &amp; 3 " $ 4 5 &amp; 6 7 3 8 % 0 4 9 $ 2 ) 1 &amp; " 3 $ 4 5 &amp; 6 7 7 (x, y) (u, v</formula><formula xml:id="formula_1">@ B A D C E 3 1 F &amp; ' ( G I H P HQ 5 S R ' ( G I H P HQ [1]: $ ) T U ' @ © 7 © W V Y X @ © 7 a W V b X c @ © e d @ d f © g V h X c @ d f a g V i X p G $ 2 4 # U ' @ a 7 © W V Y X @ a 7 a W V b X c @ a e d @ d f © g V h X c @ d f a g V i X p G<label>(1)</label></formula><p>The radial distortion with respect to an optical center q s r t " q v u w and a distortion parameter</p><formula xml:id="formula_2">x is given as % 0 ) 1 &amp; y ! # ' X B x V q v ) V a % 4 5 &amp; y ! # ' ! b X x V ! q s 4 3 V a ' q v ) a X ! q s 4 I a &amp; y ! # ' $ ) " 3 $ 4 &amp; " 7 q v ) q s 4 w ' $ ) T q r " q u 3 " $ 2 4 9 q r " q u 7</formula><p>(2)</p><p>The implementation described in the paper only considers the projective component. However, the algorithm itself can in principle deal with non-linear distortions as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Alignment measurement</head><p>The alignment algorithm observes two types of inter-projector relationships: point matches and line matches. A point match simply states that a pixel &amp; 6</p><p>from one projector locates at the same spot on the display surface as another pixel T 8 " # from an adjacent projector. <ref type="bibr" target="#b2">3</ref> A line match means that a projected line from one projector is co-linear with another line from the neighboring projector.</p><p>The rationale for using point matches is simple: if there are a lot of point matches between any pair of adjacent projectors, the result of alignment computation will yield a set of projection functions that maintain ¦ § continuity across projectors. However, the point matches themselves are insufficient to constrain the system. This is particularly so when the projectors overlap only a small portion of their screens, as in a typical display wall system. The line matches provide further shape constraints, as well as ¦ © continuity across the projectors. Given a sufficient number of point and line matches, there is enough information to figure out the relative position and the orientation of the projectors.</p><p>The line and point matches can be obtained automatically with a camera attached to a computer. <ref type="figure">Figure 3</ref> contains a brief sketch of the measurement algorithm that obtains a point match between point P from projector A and a point Q from projector B. It is essentially a negative feedback loop. The feedback parameter x in the algorithm is determined before hand eiher manually, or automatically by measuring the distance between two pixels in the camera. The algorithm to obtain line matches works in a similar fashion. Each line match consists of a point match between the inner ends of the two line segments and a match between the slopes of the two line segments.</p><p>1. pan the camera to roughly center its FOV on pixel P 2. display a cross centered at P on projector A 3. measure P's location L in the camera 4. take a guess of a pixel Q in projector B return (P, Q) <ref type="figure">Figure 3</ref>: pseudo-code for obtaining a point match <ref type="bibr" target="#b2">3</ref> Note here that we use the fact that adjacent projectors overlap by a small amount.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Alignment computation</head><p>We formulate the problem of figuring out a set of projection functions as a global minimization problem whose constraints are derived from point and line matches. It is straightforward to obtain an initial guess for each projector's position shifts, horizontal and vertical, based on the point match data. Since the projectors are already roughly aligned, this guess produces a good starting point that is close to the globally optimal solution for our problem.</p><p>The constraints for the global minimization problems are produced as follows. Assuming $ A ) y $ A 4</p><p>is the projection function for projector is also computed in the global display space. The goal is to minimize the maximum of the errors over all line and point matches.</p><p>Global minimization over a large number of continuous variables remains a tough problem. However, several effective methods do exist. We chose Simulated Annealing <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b10">11]</ref> as the minimization method. It has been used successfully in many scientific computations with hundreds and even thousands of continuous variables. This technique is a generalization of a Monte Carlo method for examining the equations of state and frozen states of n-body systems <ref type="bibr" target="#b9">[10]</ref>. It mimics the manner in which metals recrystallize in the process of annealing. Among several publicly available implementations, we chose the one provided by Numerical Recipes in C <ref type="bibr" target="#b10">[11]</ref>. The state evaluation function required by the annealing method is the error function that we just described.</p><p>The simulated-annealing method requires representing each projection functions using a vector of continuous variables. During our initial trials, we discovered that an arbitrary projective transformation matrix may not correctly describe a realistic projection device, because a projective matrix allows shear deformation that an actual projector cannot produce. Instead of trying to compute the 8 free parameters in the projection matrix (Equation 1), our minimization routines computes the extrinsic and intrinsic parameters of each projector. A projector can be modeled with 9 parameters, X, Y, Z positions of the projector, its rotations along the three axes, its focal length, and its optical center q r " q s u I</p><p>. The projective function can be uniquely derived from these parameters <ref type="bibr" target="#b0">[1]</ref>. Given </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G E w I u</head><p>if radial distortion is also included). The total degree of freedom in this problem is quite reasonable for the simulated annealing method, as our experiments will shortly show.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Computational re-alignment</head><p>Having the mapping function for a projector, we can apply it to correct the imagery displayed by that projector, simply by re-sampling the image. Given a projector's mapping function $ ) y $ 4</p><p>, and an image source</p><formula xml:id="formula_3">x t y w &amp; " ! # z ' { | } " I</formula><p>, we obtain the intensity value</p><p>x j for a particular pixel &amp; 6</p><p>using the formula</p><formula xml:id="formula_4">x j &amp; " ' x 9 y 3 $ 2 ) 1 &amp; " 3 $ 2 4 9 &amp; " 7<label>(4)</label></formula><p>Many studies have been done on efficient re-sampling of an image. One can use the MMX instructions on a Pentium processor to sample multiple pixels at once. Another interesting approach is to leverage the capability of graphics accelerators. Raskar et al described a method using the texture-mapping hardware found on most graphics accelerators <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b11">12]</ref>. Recently ComView Visual Systems has introduced an ASIC solution that provides both geometric correction and color balancing for multi-projector display systems <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Discussion</head><p>A salient feature of the alignment algorithm just described is that it avoids camera calibration. No human involvement is required to take misalignment measurement other than placing the camera(s) in front of the display wall. This feature is made possible by taking only relative measurements, i.e., point and line matches. Such observations require only local and "binary" decisions that any inexpensive camera will do. Measuring only the point and line matches also makes it easy to overcome the resolution limitation of an off-the-shelf camera. One can simply pan and zoom the camera arbitrarily close to the display surface, or place multiple fifty-dollar cameras close to the display surface. Highly accurate measurements, finer than a pixel, are easily obtained this way. Unlike methods based on camera calibration, this new method is insensitive to change of camera parameters during the zoom and pan motions, and can easily employ many cameras at no additional complexity.</p><p>Our alignment algorithm is much less sensitive to camera distortions than previous methods. For example, it can tolerate any kind of camera distortion while taking point matches, provided that the camera remains steady during measurement. The only additional requirement for obtaining a line match is that camera's field of view (FOV) is free from non-linear distortions -as long as a straight line on the display surface shows up straight in the camera's FOV. <ref type="bibr" target="#b3">4</ref> A naive way to meet this requirement is to use the central area of the FOV. A sophisticated solution is to center the FOV on the adjoining ends of the two matching line segments, such that the line segments pass the optical center of the camera's FOV. This makes the entire camera's FOV usable even in the presence of radial distortion, because a straight line passing through the center of a camera FOV is not bent by radial distortion.</p><p>The drawback of our algorithm is that it relies on a global minimization technique that gives no convergence guarantee. Although the non-convergence situation has not occurred in our experiments, we remain interested in finding a deterministic and more efficient method to calculate the projection functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Implementation and Results</head><p>In this section we evaluate the effectiveness of our alignment algorithm with empirical results as well as a simulation study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Experiment platform</head><p>We conducted experiments on our rear-projection display wall. It consists of 8 Proxima 9200 LCD portable projectors in a 2x4 arrangement <ref type="bibr" target="#b6">[7]</ref>. Each projector is capable of displaying a true resolution of 1024x768. Adjacent projectors overlap between 40 and 70 pixels. The total resolution that our display wall offers comes out to about 3800 pixels wide and 1500 pixels high. The display surface consists of two pieces of black screens, made by Jenmar, Inc., and is 18 feet wide and 8 feet tall.</p><p>The projectors are mounted on mechanical positioning tables that have 6 degrees of freedom. These tables are normally used for time-consuming manual alignment of the projectors. But in our experiments, they provide us with an easy means to "mis-align" the projectors with arbitrary rotations and translations.</p><p>Driving each projector is a 450 MHz Pentium-II PC with an Intergraph graphics accelerator. The PCs are interconnected by two networks: 100 Mb fast Ethernet and Myrinet. Communication within this PC cluster can leverage the very high bandwidth and low latency offered by User-level Virtual-Memory-Mapped Communication over the Myrinet system-area network <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b1">2]</ref>.</p><p>We place a Canon VC-3 video conferencing camera at an 8-feet distance away in front of the display wall. This camera has motorized pan, tilt, zoom and focus, all controllable through the serial port. We wrote our software in Python and C that controls the camera to gather misalignment observations. Video digitization is done by an Integral Video Grabber card.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Empirical results</head><p>Misalignment measurement: On our 8-projector display wall, it takes 33 minutes to collect the point and line matches over a total of 10 overlapped regions. For each pair of adjacent projectors, 10 point matches and 6 line matches are observed. A large amount of time is spent in panning and tilting the camera to zoom onto a spot. Using multiple cameras, each responsible for a sub-area of the display wall, can reduce the measurement time proportionally. Besides, there is no need to correlate observations from different cameras.</p><p>The quality of alignment computation depends critically on the accuracy of the point and line matches. In our experimental setup, the camera can easily distinguish two adjacent pixels from a projector. We use nearest-neighbor fit to match two pixels and two lines. This imples that the worse measurement error for a point match is a half pixel. A more sophisticated algorithm such as weighted average could be used to increase the measurement accuracy.  <ref type="table" target="#tab_3">Table 1</ref> shows the time and quality in the alignment computation, as the number of annealing steps increases, for various projector configurations on our display wall. The quality is expressed in terms of the maximum error between two points in a point match (in pixels). The pixel-level error can be largely attributed to the error in the measurement. <ref type="figure" target="#fig_5">Figure 4</ref> shows the zoomed-in view of actual alignment result of a grid pattern on our 2x4 multi-projector configuration. The color plate shows more results for the 2x4 projector configuration, all are obtained from the 5,000-step alignment computation.</p><p>The quality of simulated annealing depends on the number of steps in the annealing process. The more steps taken, the more gradual the annealing process is and usually the better the alignment result. <ref type="figure">Figure 5</ref> plots the alignment accuracy as a function of total annealing time for a few projector configurations on our display wall. The improvement of accuracy is very gradual, as the number of annealing steps increases; in a few cases, the accuracy    Color plate: On the color plate there are three pairs of images taken of our 2x4 display wall. Each pair consists of a pattern on the misaligned display wall (the "before" shot) and the pattern corrected by our automatic alignment algorithm (the "after" shot). Due to the limited resolution of our digital camera (a Nikon Coolpix 900), we only took pictures at the intersections of four projectors, instead of providing a high-detailed image of the entire display. <ref type="figure" target="#fig_1">Figure 1</ref> on the color plate shows the before and after pictures of a grid pattern. <ref type="figure" target="#fig_3">Figure 2</ref> shows the zoomed-in views. <ref type="figure">Figure 3</ref> demonstrates a high-resolution map being corrected aligned by our automatic algorithm. Note that we have purposely disabled edgeblending which is designed to soften the transitions between adjacent projectors. This is to allow the readers to examine alignment and misalignment in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Simulation results</head><p>In order to evaluate the scalability of our alignment algorithm, we wrote a simple simulator that generates misalignment observations for an arbitrarily configured multi-projector display. The simulation assumes that after rough adjustment of the projectors, imperfect position and orientation of a projector (total 6 degrees of freedom) contribute 10 pixels of misalignment, independently. The variation in zoom distance and focal length is 5 %. In other words, our simulation assumes that the projectors are roughly aligneda quite realistic assumption based on our experience. It is these 10-pixel variations that our automatic alignment algorithm tries to eliminate. <ref type="table">Table 2</ref> shows the quality of alignment computation for various simulated configurations.</p><p>The simulation results confirm that our algorithm can deal with a variety of projector configurations and misalignment situations, for up to 24 projectors, with satisfactory results. Unlike in the experiments, the measurements in the simulation study are precise. The effect of error-free measurements is manifested as generally higher alignment accuracy for the same projector configuration than in the actual experiments.</p><p>The alignment computation time that is required to achieve certain quality, i.e., sub-pixel alignment, generally increases with the number of projectors in the system. Half an hour is sufficient for getting a sub-pixel alignment result on configurations varying from 1x4 to 4x6. However, the alignment computation yields a noticeable error of 3 pixels for the 4x8 configuration even after 96 minutes of computation. For a very large system with 50 or 100+ projectors, the annealing will certainly take hours to achieve alignment at the single pixel level. This is the drawback of our algorithm. A possible solution is to parallelize the computation using the PCs that drive the projectors and the fast network that connects these PCs together. The computational resource in our system scales with the number of projectors. But the challenge is to parallelize the annealing algorithm. We are currently investigating this approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>In this paper, we described an automatic algorithm to align a multiprojector display. Our algorithm uses an uncalibrated camera to ob-tain the inter-projector misalignment information. It then employs a global minimization technique, simulated annealing, to figure out good correction functions to counter the effect of physical misalignment.</p><p>We implemented and experimented our automatic alignment algorithm for an 8-projector display wall. The experimental results show that our algorithm works well in the real setting. We also evaluated our algorithm using data from simulated multi-projector display systems. The simulation results show that our method works for a system with up to 24 projectors. But for systems with more projectors, the simulated annealing process takes a very long time to converge.</p><p>Our alignment algorithm takes only relative measurements that require no camera calibration. It solves the inherent tension between the relatively low resolution of a camera and the very high resolution of a scalable display wall, by allowing the camera to freely zoom in on a measurement target. The result is a highly accurate computational alignment among projectors. In addition, since no camera calibration is required, our algorithm can be fully automated. Although our algorithm currently ignores the radial distortion of a projector, the global minimization technique can be adapted to solve for the radial distortion parameters.</p><p>There is some room left to improve the speed of alignment data collection and alignment computation, as we have not yet tried to optimize these processes. Two possible ways to improve our algorithm are (1) using multiple uncalibrated cameras to speed up the data collection process, and (2) parallelizing the annealing computation over the PC cluster and the ultra-fast network that together drive the display wall.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Camera-based Alignment Data Collection system. Projection can be thought of as a mapping between pixels in projector space and the illuminated dots</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Conceptual diagram of a projection system</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Aligning a grid: before and after pictures Alignment computation: We run the alignment computation algorithm on an 833 MHz Pentium III PC with Rambus memory.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>2 :Figure 5 :</head><label>25</label><figDesc>Alignment computation results on simulation data Alignment computation accuracy vs. total annealing time actually worsens. The very slow improvement could very well be the nature of the simulated annealing technique. The measurement errors and non-linear distortions in the projectors also contribute to the final errors in the alignment computation. Section 4.3 confirms this with error-free measurements from simulated display wall configurations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1 :</head><label>1</label><figDesc>Alignment accuracy and time for various configurations</figDesc><table><row><cell>annealing steps</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table</head><label></label><figDesc></figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">The algorithm presented here could in principle be applied to curved display surfaces as well, in which case, a 2D parametric coordinate system can be used o the display surface.2 This is only an approximation to an actual projection device, as it ignores several distortion effects such as color dispersion.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">This is less stringent than requiring the camera FOV be a linear field.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This project is part of the Princeton Scalable Display Wall project which is supported in part by Department of Energy under grant ANI-9906704 and grant DE-FC02-99ER25387, by an Intel Research Council and Intel Technology 2000 equipment grant.</p><p>We would like to thank Kenneth Steiglitz who discussed with us the alignment algorithm, and Liming Wang who proof-read the final version of the paper. We also would like thank the reviewers who provided much useful feedback on improving this paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A method to align high-resolution multi-projector displays using an uncalibrated camera</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuqun</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Douglas</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Finkelstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Li</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000-03" />
			<pubPlace>Princeton Unversity</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Porting a user-level communication architecture to nt: Experience and performance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuqun</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Stefanos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanjeev</forename><surname>Damianakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiang</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3rd Usenix Windows NT Symposium</title>
		<imprint>
			<date type="published" when="1999-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Utlb: A mechanism for translations on network interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuqun</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Czarek</forename><surname>Dubnicki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Stefanos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Angelos</forename><surname>Damianakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Bilas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 8th International Conference on Architectural Support for Porgramming Languages and Operating Systems (ASPLOS-VIII)</title>
		<imprint>
			<date type="published" when="1998-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Multi-projector displays using camera-based registration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Raskar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;99</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Compute vision guided crossprojector color alignment on multi-projector displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Volodymyr</forename><surname>Kindratenko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Fourth International Immersive Projection Technology Workshop</title>
		<imprint>
			<date type="published" when="2000-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Optimization by simulated annealing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Gelatt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">P</forename><surname>Vecchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">220</biblScope>
			<biblScope unit="page" from="671" to="680" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Jaswinder Pal Singh, George Tzanetakis, and Jiannan Zheng</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuqun</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Douglas</forename><forename type="middle">W</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Perry</forename><surname>Cook</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefanos</forename><surname>Damianakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georg</forename><surname>Essl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Finkelstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allison</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhiyan</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Emil</forename><surname>Praun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rudrajit</forename><surname>Samanta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shedd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>Building and using a scalable display wall system</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Color matching of projectors for multi-projector displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Aditi</forename><surname>Majumder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">He</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herman</forename><surname>Towles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Welch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EuroGraphics</title>
		<imprint>
			<date type="published" when="2000-08" />
			<biblScope unit="volume">19</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">New options and considerations for creating enhanced viewing experiences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theo</forename><surname>Mayer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics</title>
		<imprint>
			<date type="published" when="1997-05" />
			<biblScope unit="page" from="32" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Metropolis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rosenbluth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rosenbluth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Teller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Teller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Chemical Physics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1087" to="1092" />
			<date type="published" when="1953" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<title level="m">Numerical Recipes in C, chapter 10</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="444" to="455" />
		</imprint>
	</monogr>
	<note>2 edition</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Immersive planar display using roughly aligned projectors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Virtual Reality</title>
		<imprint>
			<date type="published" when="2000-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Efficient image generation for multiprojector or multisurface displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cutts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuerzlinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">9th EuroGraphics Rendering Workshop</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The office of the future: A unified approach to image-based modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ramesh</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matt</forename><surname>Cutts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Lake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lev</forename><surname>Stesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 98</title>
		<imprint>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="179" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">High-resolution multiprojector display walls</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">A</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Randall</forename><surname>Frank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><surname>Gaunt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Hobson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brad</forename><surname>Whitlock</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="38" to="44" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A Scalable Self-Calibrating Technology for Large Scale Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rajeev</forename><surname>Surati</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">MIT</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">ComView Visual Systems. Comview viewscreen and viewmaestro product sheets</title>
		<ptr target="http://www.comview-vs.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Visualization research with large displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bin</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claudio</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eleftherios</forename><surname>Koutsofios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shankar</forename><surname>Krishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="50" to="54" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Projected imagery in your office of the future</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fucks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ramesh</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herman</forename><surname>Towles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">S</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="62" to="67" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
