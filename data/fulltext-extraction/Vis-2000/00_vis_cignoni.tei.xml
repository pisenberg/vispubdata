<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Simplification of Tetrahedral Meshes with Accurate Error Evaluation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Costanza</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rocchini</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
							<email>roberto.scopigno@cnuce.cnr.it</email>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Istituto</forename><surname>Scienza</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tecnologia</forename><surname>Dell'informazione -Consiglio</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nazionale</forename><surname>Delle Ricerche</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">CNR Research Park</orgName>
								<address>
									<postCode>S. Cataldo -56100</postCode>
									<settlement>Pisa</settlement>
									<country key="IT">ITALY</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Simplification of Tetrahedral Meshes with Accurate Error Evaluation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Simplicial Complexes</term>
					<term>Mesh Simplification</term>
					<term>Volume Visualization</term>
					<term>Unstructured Grids</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The techniques for reducing the size of a volume dataset by preserving both the geometrical/topological shape and the information encoded in an attached scalar field are attracting growing interest. Given the framework of incremental 3D mesh simplification based on edge collapse, the paper proposes an approach for the integrated evaluation of the error introduced by both the modification of the domain and the approximation of the field of the original volume dataset. We present and compare various techniques to evaluate the approximation error or to produce a sound prediction. A flexible simplification tool has been implemented, which provides different degree of accuracy and computational efficiency for the selection of the edge to be collapsed. Techniques for preventing a geometric or topological degeneration of the mesh are also presented.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Many papers have been published over the last few years concerning the simplification of simplicial complexes. Most of them concern the simplification of 2D simplicial meshes embedded in 3D space, hereafter called surfaces. Only a minor subset are concerned with 3D simplicial decompositions, hereafter called meshes. In particular, we consider in this paper the class of irregular volume datasets, either convex or non convex, with scalar field values associated with the vertices of the tetrahedral cells. Let D = (V, Σ, Φ) be our dataset where V is a set of n vertices, Σ = {σ1, σ2, . . . , σm} is a tetrahedralization of m cells with vertices in V , and Φ = {φ1, φ2, . . . , φm} is a set of functions such that each function φi is defined over cell σi of Σ. All functions of Φ are linear interpolants of the scalar field known at the vertices of V . Given an irregular dataset D, the term simplification refers to the problem of building an approximate representation D of D with a smaller size, built by choosing a set of vertices V (usually V ⊂ V ) and a new triangulation Σ of V that covers [almost] the same domain. This problem has some similarities with scattered data interpolation and thinning techniques <ref type="bibr" target="#b9">[10]</ref>, but the main problem of these approaches is that the shape of the data domain is not taken into account (erroneous interpolation between unconnected data becomes possible). Surface/mesh simplification can be driven by two different objectives: producing a more compact mesh which is sufficiently similar in terms of visual appearance, or to produce a model which satisfies a given accuracy. In the first case the main goal is to reduce visualization time. In the second case, special emphasis is given to data quality and representation accuracy; this is often the case for scientific visualization applications, where the user requires measurable and reliable data quality. Our goal is therefore to design and evaluate different tetrahedral mesh simplification methods in the framework of scientific visualization applications, with a special commitment to the quality of the mesh obtained (considering both geometry and the associated scalar field). The approach adopted lies in the general class of incremental simplification methods: simplification proceeds through a sequence of local mesh updates which, at each step, reduces the mesh size and [monotonically] decreases the approximation precision. Specifically, we adopt an approach based on iterative edge collapse. The main contributions of this paper are as follows:</p><p>• The geometric/topology correctness of the mesh produced. Topology and geometry are preserved, and checks are introduced to prevent possible inconsistencies in the simplified mesh (cell flipping, degeneration, self-intersections);</p><p>• The evaluation of the approximation error. We introduce a characterization of the approximation error, using two conceptually different classes of domain-error and field-error, and propose a new approach for the integrated evaluation of domain-error and field-error;</p><p>• Different criteria to predict and evaluate the approximation error are proposed and compared with the direct evaluation approach. In particular, we propose an extension of the quadrics error metric to the case of field error evaluation on 3D meshes;</p><p>• Finally, the computational efficiency of the techniques proposed is evaluated empirically on sample datasets.</p><p>The work takes also into account the constraints introduced when the goal is the construction of a multiresolution representation of the dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Works</head><p>Many different simplification methods have been developed for the simplification of surfaces. These methods generally try to select the smallest set of points approximating a dataset within a given error. A detailed review of these algorithm is beyond the scope of this document, and for a survey on this subject see <ref type="bibr" target="#b11">[12]</ref>. Very briefly, we can summarize by saying that effective solutions to the simplification problem have often been obtained through incremental techniques, based on either a refinement strategy (refine a coarse representation by adding points <ref type="bibr" target="#b10">[11]</ref>) or a decimation (or coarsening) strategy (simplify the dataset by removing points <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b16">17]</ref>).</p><p>Many of these techniques could be extended to the 3D case, i.e. to volume data simplification. In the following we review the specific results regarding tetrahedral meshes. We do not consider here the many lossless compression solutions that have appeared in the last few years, because the focus here is on simplification and multiresolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Refinement Strategies</head><p>Hamann and Chen <ref type="bibr" target="#b15">[16]</ref> adopted a refinement strategy for the simplification of tetrahedral convex complexes. Their method is based on the selection of the most important points (based on curvature) and their insertion into the convex hull of the domain of the dataset. When a point is inserted into the triangulation, local modifications (by face/edge swapping) are performed in order to minimize a local approximation error.</p><p>Another technique, based on the Delaunay refinement strategy, was proposed by Cignoni et al. <ref type="bibr" target="#b4">[5]</ref>; here the vertex selection criterion was to choose the point causing the largest error with respect to the original scalar field. This technique was successively extended in <ref type="bibr" target="#b5">[6]</ref> to the management of nonconvex complexes obtainable by the deformation of convex domains (e.g. curvilinear grids).</p><p>The refinement-based strategy was also used by Grosso and Greiner <ref type="bibr" target="#b14">[15]</ref>. Starting from a coarse triangulation covering the domain, a hierarchy of approximations of the volume is created by a sequence of local adaptive mesh refinement steps. A very similar approach based on selective refinement, but limited to regular datasets, was presented in <ref type="bibr" target="#b23">[24]</ref>.</p><p>All the techniques based on the refinement strategy share a common problem: the domain of the dataset has to be convex (or at least it has to be defined as a warping of a regular computational grid <ref type="bibr" target="#b5">[6]</ref>). The reason lies in the intrinsic difficulty in fulfilling strict geometric constraints while refining a mesh (from coarse to fine) and using just the vertices of the dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Decimation Strategies</head><p>Renze and Oliver in <ref type="bibr" target="#b18">[19]</ref> proposed the first 3D mesh decimation algorithm based on vertex removal. Given a tetrahedral complex Σ, they evaluate the internal vertices of the mesh for removal, in random order. The re-triangulation of the hole left by the removal of a vertex v is done by building the Delaunay triangulation Σv of the vertices adjacent to v, and searching for, if it exists, a subset of the tetrahedra of Σv whose (d-1)-faces match the faces of Σ. If such a subset does not exist the vertex is not removed. The latter condition may very often hold if the original complex is not a Delaunay one. This method neither measures the approximation error introduced in the reduced dataset, nor tries to select the vertex subset in order to minimize the error. Popovic and Hoppe <ref type="bibr" target="#b17">[18]</ref> have extended the Progressive Meshes (PM) algorithm <ref type="bibr" target="#b16">[17]</ref>, a surface simplification strategy based on edge-collapse, to the management of generic simplicial complexes. However, their work is very general, and it does not consider in detail the impact on the approximation accuracy of a possible scalar field associated with the mesh. The PM approach has been recently extended by Staadt and Gross <ref type="bibr" target="#b21">[22]</ref>. They introduce various cost functions to drive the edge-collapsing process and present a technique to check (and prevent) the occurrence of intersections and inversions of the tetrahedra involved in a collapse action. The approach is based on a sequence of tests that guarantees the construction of a robust and consistent progressive tetrahedralization. A simplification technique based on iterative edge collapsing has also been sketched by Cignoni et al. in <ref type="bibr" target="#b5">[6]</ref>. A technique based on error-prioritized tetrahedra collapse was proposed by Trotts et al. <ref type="bibr" target="#b22">[23]</ref>. Each tetraedron is weighted based on a predicted increase in the approximation error that would result after its collapse; tetraedral cell collapse is implemented via three edge collapses. The algorithm gives an approximate evaluation of the scalar field error introduced at each simplification step (based on the iterative accumulation of local evaluations, following the approach proposed by Bajaj et al. for the simplification of 2D surfaces <ref type="bibr" target="#b2">[3]</ref>, which gives an overestimation of the actual error). The mesh degeneration caused by the modification of the (possibly not convex) mesh boundary and the corresponding error are managed by forcing every edge collapse that involves a boundary vertex to be performed on the boundary vertex, and avoiding the collapse of corner vertices. This approach preserves the boundary in the case of regular datasets, but cannot be used to decimate the boundary of a dataset with a more complex domain (e.g. non rectilinear or not convex, as occurs frequently on irregular datasets).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Incremental Simplification via Edge Collapse</head><p>We adopt an iterative simplification approach based on edge collapse: at each iteration, an edge is chosen and collapsed. The atomic edge collapse action is conceived here as a simple vertex unification process. Given a maximal <ref type="bibr" target="#b0">1</ref>  </p><formula xml:id="formula_0">v s or v d .</formula><p>We introduce the following terminology: given a edge collapse e = (vs, v d ) we define: D(e) the set of deleted tetrahedra incident in e; M (e) the set of modified tetrahedra, i.e. those tetrahedra incident in vs but not in v d . Therefore, an edge collapse step results in some modified and some deleted tetrahedra. The geometric information is simply updated by the unification of the vertex coordinates. The topology update is somehow slightly more complex; relations TV, VT, EV and VE have to be updated after each atomic collapse action.</p><p>The order in which edges are collapsed is critical with respect to the simplified mesh accuracy. The result of the iterative simplification is a sequence Σ0, Σ1, . . . , Σi, . . . , Σn of complexes <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b3">4]</ref>. When the goal is the production of a high quality multiresolution output, the approximation error should increase slowly and smoothly. Analogously to many other simplification approaches, we adopt a heap to store the edges which are to be collapsed. At the beginning, all the edges are inserted in the heap and sorted with respect to an estimated error, known in the following sections as the predicted error (see <ref type="bibr">Section 5)</ref>. The edges in the heap are oriented, that is we have both the oriented edges (vj, vi) and (vi, vj) in the heap, because they identify different collapses. For each simplification step: the edge e with the lowest error is extracted from the heap; the collapse of e is tested, checking the topological and geometric consistency of the mesh after the collapse. If the geo-topological checks are verified, the following actions are performed:</p><p>• the tetrahedra in D(e) are deleted;</p><p>• the topology relation TV is updated, i.e. vs is replaced with v d in all tetrahedra σ ∈ M (e);</p><p>• the VT relation is updated on vertex</p><formula xml:id="formula_1">v d : V T (v d ) = V T (v d ) ∪ M (e) \ D(e);</formula><p>• the VE relation is updated by setting</p><formula xml:id="formula_2">V E(v d ) = V E(v d ) ∪ V E(vs) \ {(vs, v d )};</formula><p>• the EV relation is updated by substituting vs with v d on all the edges in V E(vs);</p><p>• a new estimated error is evaluated for all former edges V E(vs) in the heap.</p><p>Otherwise, we reject the edge collapse and continue with the next edge in the heap. Consistency checks are evaluated before updating the mesh. There are two classes of consistency conditions: topological and geometrical. The first one ensures that the edge collapse will not change the topological type of our complex. The second one ensures geometric consistency, i.e. that no selfintersecting or badly-shaped (e.g. slivery) tetrahedra are introduced by the edge collapse.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Topology Preserving Edge Contraction</head><p>Given an edge collapse, a set of necessary and sufficient conditions that preserves the topological type of our complex has recently been proposed in <ref type="bibr" target="#b8">[9]</ref>. We adopted this approach in our simplification system to guarantee the topological correctness of the simplification process. Let St(σ) be the set of all the co-faces of σ, i.e. St(σ) = {τ ∈ Σ | σ is a face of τ }. Let Lk(σ) be the set of all the faces belonging to St(σ) but not incident on σ (i.e. the set of all the faces of the co-faces of σ disjoint from σ). Let Σi be a 3-simplicial complex without boundary, e = (vs, v d ) an edge of the complex, and Σi+1 the complex after the collapse of edge e. According to <ref type="bibr" target="#b8">[9]</ref>, the following statements are equivalent:</p><formula xml:id="formula_3">1. Lk(vs) ∩ Lk(v d ) = Lk(e)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Σi, Σi+1 are homeomorphic</head><p>It is therefore sufficient to check statement (1) to prove that statement (2) holds, that is to ensure the topological correctness of the current simplification step (see <ref type="figure" target="#fig_0">Figure 1</ref>). If Σi is a complex with boundary (which is the usual case), we can go back to the previous case by ideally adding a dummy vertex w and its cone of simplices to the boundary (i.e. we add a dummy simplex for each boundary 2-face of Σi).The insertion of w and the corresponding simplices allows us to also manage the boundary faces of Σi with the previous checking rule. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Preserving Geometric Consistency</head><p>Three possible dangerous situations should be prevented in the simplification process:</p><p>• tetrahedra inversion;</p><p>• generation of slivery/bad shaped tetrahedra,</p><p>• self-intersection of the mesh boundary.</p><p>The first two situations are easy to check. In the first case it is sufficient to check that each modified tetrahedron in M (e) preserves the original orientation (the first vertex sees the other three ones counterclockwise), or in other words the cell volume does not become negative. In the second case, we reject every collapse that produces one or more tetrahedra in M (e) having an aspect ratio smaller than a given threshold ρ. Note that, in order to allow the simplification of meshes which contain slivery tetrahedra, it is useful to allow the collapse of an edge also if the aspect ratio of modified tetrahedra improves after the collapse. The detection of self-intersections is the most complex subtask, because this is the only case where the effects of an edge collapse can be non-local. After an edge collapse, some boundary faces that are topologically non-adjacent but geometrically close can become self-intersecting. The intrinsic non-locality of this kind of degeneration makes it difficult to efficiently and correctly prevent it without using auxiliary structures. To speedup self-intersection checks (a quadratic problem in its naive implementation) a uniform grid <ref type="bibr" target="#b0">[1]</ref> could be adopted, to store all the vertices of the current boundary of the mesh. For each edge collapse (v s,vd) that involves a boundary edge, we should check whether after the collapse, all the edges on the boundary incident in v d do not intersect the mesh boundary. If an intersection is found, the collapse is aborted and the original state of the mesh before the collapse is restored.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Error Characterization and Evaluation</head><p>When an atomic simplification action is performed, a new mesh Σi+1 is generated from Σi with, in general, a higher approximation error. The approximation error can be described by using two measures: the domain error and the field error.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Domain Error</head><p>The collapse of an edge lying on (or adjacent to) the boundary of the mesh can cause a deformation of the boundary of the mesh. In other words, Σi and Σi+1 can span different <ref type="figure">Figure 2</ref>: Every point which is not contained in the complex is assigned to one or to a group of cells, e.g.:</p><formula xml:id="formula_4">VD(x1) = {σ h }, VD(x2) = {σi}, VD(x3) = {σi, σj, σ k } VD(x4) = {σ k }.</formula><p>domains. This problem has been ignored in many previous solutions. A correct measure of the domain error can be obtained by measuring the symmetric Hausdorff distance between the boundary surface of the input mesh Σ and the boundary of each intermediate simplified mesh Σi. A function for measuring the approximation between two surfaces can be efficiently implemented <ref type="bibr" target="#b6">[7]</ref>. But the overheads become excessive if this function is used to evaluate the accuracy of each simplification step that involves a boundary vertex. A more efficient solution can be implemented by deploying the locality of the simplification action (see Subsection 4.4).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Field Error</head><p>The approximation of the original scalar field defined on Σ with the under-sampled field defined by the simplified complex Σ causes another type of error. Let D = (V , Σ , Φ ) be our approximate representation. Assuming that the two domains Ω and Ω of Σ and Σ coincide, we can measure the error ε f introduced in the representation of the original field as follows:</p><formula xml:id="formula_5">f (D, D ) = max x∈Ω (|Φ(x) − Φ (x)|)</formula><p>But measuring only the maximum difference between the two fields does not give a precise estimation. In fact it can happen that a very small modification of the shape of a single tetrahedron with a large field variation cause a very large error, even if the incorrect volume is almost negligible. For this reason is also useful to measure the average square error q f over the whole domain of the mesh:</p><formula xml:id="formula_6">q f (D, D ) = 1 |Ω| Ω |Φ(x) − Φ (x)| 2 dv</formula><p>If Ω and Ω differ, and this is the case when the simplification of the boundary of the mesh is allowed, we have to reciprocally extend the domains Ω and Ω to compare Φ and Φ in a common space. The main problem is how to evaluate the field of the points belonging to Ω but not to Ω , and viceversa. A possible solution may be to adopt the following definition of the field error:</p><formula xml:id="formula_7">f (D, D ) = max( f (D, D ), D f (D, D ), D f (D, D ))</formula><p>where:</p><formula xml:id="formula_8">f (D, D ) = max x∈ Ω ∩ Ω (|Φ(x) − Φ (x)|) D f (D, D ) = max x∈ Ω\Ω , σ∈V D (x) (|Φ(x) − φ σ (x)|) D f (D, D ) = max x∈ Ω \Ω, σ∈V D (x) (|φσ(x) − Φ (x)|)</formula><p>where VD(x) is the set of cells of Σ that have the minimum distance to the point x (see <ref type="figure">Figure 2</ref>). Note that a set of cells can have the same distance to the same point x (all those cells incident in a given boundary vertex are associated with the same external space partition). In <ref type="figure">Figure 2</ref> we show a 2D example of some VD() sets. There is a strict relation between this partitioning scheme and the Voronoi Diagram <ref type="bibr" target="#b1">[2]</ref> of the simplicial complex Σ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Walking in the Field/Domain Error Space</head><p>One important characteristic of a simplification method is the quality of the multiresolution output produced. The error increase should be as smooth as possible in order to allow the maximal flexibility in the extraction of models at different resolutions. Many incremental simplification methods store the estimated approximation errors in a heap. But following our approach, we have an error pair (field and domain) for each edge collapse. The corresponding 2D error space (field error on the X axis, domain error on the Y axis) is shown in <ref type="figure" target="#fig_1">Figure 3</ref>. Let us suppose that the user fixes a pair of thresholds</p><formula xml:id="formula_9">( max f , max d</formula><p>) for the field and the domain errors. During the simplification process the error moves on a polyline that [hopefully] interconnects the origin with the userspecified maxima. Suppose that the current mesh has an error ( d , f ), shown in <ref type="figure" target="#fig_1">Figure 3</ref> with a circled dot. The other dots in <ref type="figure" target="#fig_1">Figure 3</ref> denote the predicted error pairs for every possible edge-collapse. How do we choose the next edge to collapse? Giving priority to edges with either minimal domain errors or minimal field errors may be a mistake (for example, error pair a in the figure represents the edge with minimal field error, but it has a very high domain error; analogously, error pair b has a minimal domain error but a great field error). A common approach is to use a weighted sum of different error estimates, ε = w1ε1 + .. + w k ε k <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b21">22]</ref>. As an example, a multivariate error cost evaluation was proposed in <ref type="bibr" target="#b21">[22]</ref> in the framework of a tetrahedra mesh simplification solution based on edge-collapse. This measure is a weighted sum of three components:</p><formula xml:id="formula_10">ε = w1ε grad (ei) + w2ε vol (ei) + w3εequi(ei)</formula><p>which evaluate the edge gradient, the change in volume of the updates mesh section and the average length of the edges affected by the collapse. But a solution based on a weighted sum has a drawback: coming back to the example in <ref type="figure" target="#fig_1">Figure 3</ref>, error pair c might have the best weighed sum but also an excessively high field error. Therefore, we do not consider criteria based on weighted sums adequate for the integrated field and domain error evaluation. A better solution is defined as follows. Given a normalized error space with weights w d and w f defined such that:</p><formula xml:id="formula_11">w d max d = w f max f ,</formula><p>we can choose the edge e that has the smallest error ε defined as follows: This strategy can be intuitively interpreted as choosing at each step the first error pair (e.g. point d in <ref type="figure" target="#fig_1">Figure 3</ref>) that is enclosed by a square which grows along the line joining the origin of the error space with point</p><formula xml:id="formula_12">ε = min e∈Heap ( max(w d d (e), w f f (e))).<label>(1)</label></formula><formula xml:id="formula_13">( max d , max f</formula><p>). The same approach can obviously be extended to treat the case of error evaluation functions which consider k variables. When we want to produce (and use) a multiresolution model, it is also useful if both errors can be identified using a single value. In this case, it should exist a precise relation between this value and the real field and warping errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Efficient Error Evaluation</head><p>A tool for the correct evaluation of the accuracy of a simplified mesh, taking into account the field and domain errors, has been developed <ref type="bibr" target="#b7">[8]</ref> following an approach similar to the one used for the evaluation of surface simplification solutions <ref type="bibr" target="#b6">[7]</ref>. It applies Montecarlo sampling on the domains of the original and simplified meshes, evaluating on each sample the relative field difference. The Hausdorff distance between the two domains is evaluated by the same technique of <ref type="bibr" target="#b6">[7]</ref>. However, due to performance reasons, this approach can only be applied as a post-processing step to evaluate post-mortem the quality of the simplified mesh. Conversely, the following subsections introduce two evaluation rules that are simple enough to be used during the simplification process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Efficient Field Error</head><p>The computation of the field error can be simplified by evaluating the difference between the two scalar fields only on the vertices of the original complex:</p><formula xml:id="formula_14">* f (D, D ) = max x∈V (|F (x) − F (x)|)</formula><p>To easily compute * during the simplification process, we need to maintain for each tetrahedron σ ∈ Σ a corresponding subset of deleted points {vi} such that: vi lies inside σ, or vi is associated with σ in the sense of Subsection 4.2 (see the definition of the VD(x) set). A similar approximation has already been used in <ref type="bibr" target="#b5">[6]</ref>, and has been extended here by taking into account the removed vertices which are external to Ω . After each collapse the vertices associated to the modified tetrahedra are redistribute according the local modifications in order to maintain the * error.</p><p>To improve the accuracy of the estimation of the f error we add a small number of random samples inside each tetrahedron of the original mesh, and evaluate the field difference also on these samples. To limit the time and memory overhead introduced by this technique we have found that it is convenient to add points proportionally to the field variation of the original meshes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Efficient Domain Error</head><p>A sufficiently good estimate of the domain error can be obtained by using the following approximation of the Hausdorff distance:</p><formula xml:id="formula_15">* d (Ω, Ω ) = max x∈V −V , x/ ∈Ω d(x, Ω )</formula><p>that is evaluated for all the removed vertices x which are external to the domain Ω . This approximation can be computed efficiently during the simplification process storing for each boundary face of Σ , the list of the corresponding removed vertices not contained in Ω as described in <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Error Prediction</head><p>For each step in the simplification process, we need to choose the edge whose collapse causes the minimal error increase, according to the error definition 1 introduced in Subsection 4.3. A heap is used to hold error-sorted edges. Therefore, we need to know in advance what error is introduced by a single edge collapse. This can be done in two different manners:</p><p>• exact evaluation: the collapse can be simulated on each oriented edge of the complex, producing an evaluation of the approximation error (according to the measures defined in Subsection 4.4);</p><p>• approximate evaluation: faster heuristics can be adopted, to estimate the error that will be introduced by the collapse.</p><p>Note that the use of an approximate evaluation in the error prediction phase (i.e. to update the heap) will not affect the actual evaluation of the error associated with each intermediate mesh Σi, which in any case is operated after each edge collapse by adopting the measures presented in Section 4.4.</p><p>The use of an approximate evaluation can reduce the running time substantially, because when we collapse an edge we need to update the heap error for all the edges incident on v d , and the average number of adjacent edges is around 20-30. Moreover, in many cases it is more important to support the rapid choice of a probable good edge than to select the best edge according to an exact error estimate. An example is when a simplified mesh of a given size is needed, and we do not have a strict commitment to the approximation precision bound. Three different error prediction approaches are described in the following, which can be used to choose the probable best edge.</p><p>Local Error Accumulation. This heuristic measures both the domain and the field errors locally, i.e. with respect to the vertex that has been unified and removed in the current edge collapse action. These error estimates are then accumulated during the simplification process to give an approximate global estimate. Gradient Difference. In order to estimate the error increase, we pre-compute the field gradient ∇v at each vertex v of the input mesh. This can be done by computing the weighted average of gradients in all tetrahedra incident at v. The weight to be associated with the contribution of each tetrahedron σ is given by the solid angle of σ at v. Then, for each vertex v in the mesh, we search the vertex w, among those adjacent to v, such that the difference ∆∇v,w between the gradient vectors ∇v and ∇w is minimal. Value ∆∇v,w gives a rough estimate of how far from linear the field is in the neighborhood of v (in particular, on the edge (v,w) direction). The smaller ∆∇v,w is, the smaller the expected error increase is if v is removed by collapsing it onto w. The value (∆∇v,w • L(e)), where L(e) is the length of the edge to be collapsed, is therefore used as an estimate of the field error. This solution is more precise and more complex in terms of space (because gradients have to be explicitly stored) than the one proposed in <ref type="bibr" target="#b21">[22]</ref>, which takes into account only the difference of the field values on the collapsed edge extremes.</p><p>Quadric Error. Another approximate measure can be defined by extending the quadric error metric introduced by Garland et al. <ref type="bibr" target="#b12">[13]</ref>. This metric was proposed to measure the geometric error introduced on a surface during the simplification process. We use it to measure not only the domain error, but also the field error. The main idea of the quadric error metric is to associate a set of planes with each vertex of the mesh. The sum of the squared distances from a vertex to all the planes in its set defines the error of that vertex. Initially each vertex v is associated with the set of planes passing through the faces incident in v. When, for each collapse of a given vs onto v d , the resulting set of planes is the union of the sets of vs and v d . The most innovative contribution in <ref type="bibr" target="#b12">[13]</ref> (and the main improvement over <ref type="bibr" target="#b19">[20]</ref>) is that these sets of planes are not represented explicitly. Let n v + d = 0 be the equation representing a plane, where n is the unit normal to the plane and d its distance from the origin. The squared distance of a vertex v to this plane is given by:</p><formula xml:id="formula_16">D = (n v + d) 2 = v (nn )v + 2dn v + d 2</formula><p>According to <ref type="bibr" target="#b12">[13]</ref> we can represent this quadric Q, which denotes the squared distance of a plane to a vertex, as:</p><formula xml:id="formula_17">Q = (A, b, c) = (nn , dn, d 2 ) Q(v) = v Av + 2b v + c</formula><p>The sum of a set of quadrics can easily be computed by the pairwise component sum of their terms, therefore for each vertex we maintain only the quadric representing the sum of the squared distances of all the planes implicitly associated with that vertex, which is just ten coefficients.</p><p>In the case of 3D mesh simplification the domain error can be easily estimated by providing a quadric for each boundary vertex of the 3D mesh. Quadrics can also be used to measure the field error. In this case we associate with each vertex v a set of linear functions φ i (that is, the linear functions associated with the cells incident in v), and we measure the sum of squared differences between the linear functions and the field on v. Each linear function can be represented by φ(v) = n v + d where, analogously to the geometric case, n is a 3D vector (not unitary in this case and representing the gradient of the field) and d is a constant (the value of the scalar field in the origin). The management of this kind of quadric is therefore exactly the same as the previous case, but with a slightly different meaning. In this case the quadric represents the sum of squared differences between the linear functions and the field on v. In this way with two quadrics, one for the field and one for the domain error, we can have a measure of both errors, which are then composed as described in Subsection 4.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results</head><p>We have implemented and tested some of the possible combinations of the error evaluation strategies proposed above. We present in the following some results concerning the combinations of different techniques for the error prediction phase and the post-collapse error evaluation phase:</p><p>LN : we use the Local error accumulation for the error prediction phase, and the approximation error obtained after the collapse is Not evaluated (that is, simplification is driven by the mesh reduction factor).</p><p>GN : we use the Gradient Difference for the error prediction phase, and the approximation error obtained after the collapse is Not evaluated.</p><p>QN : we use the Quadric measure of error for the error prediction phase, and the approximation error obtained after the collapse is Not evaluated.</p><p>BF : Brute Force, we apply a full simulation of all possible collapses, using the efficient error evaluation described in Section 4.4.</p><p>BFS : Brute Force with added Samples, a set of random sample points are added in each tetrahedron of the original mesh; the domain and field errors are evaluated on these sample points and on the original mesh vertices.</p><p>These solutions represent various mixes of accuracy and speed. The last one (BFS) is the slowest but the most accurate (especially if a very accurate management of the domain error is requested). But its running times are so high (6x -10x with respect to the running time of the BF method), that the improvement in terms of precision does not justify its adoption in many applications. The first three techniques <ref type="figure">(LN, GN, QN)</ref> do not precisely evaluate the error during the simplification, and therefore we cannot guarantee the mesh approximation to be lower than the given threshold. This allows much faster and lighter algorithms, but also prevents the generation of a high quality multiresolution output.</p><p>We have chosen four datasets to benchmark the presented algorithms: <ref type="figure">Fighter</ref>   The numerical results are presented in <ref type="table" target="#tab_2">Tables 1, 2</ref>, and 3. The code was run on a 450MHz PII personal computer with 512MB RAM and running WinNt. Various mesh sizes are shown in the tables, out of the many different resolutions produced. The tables show the processing time in seconds of each different algorithm <ref type="bibr" target="#b2">3</ref> , and the actual approximation error of each simplified mesh. The errors reported in the tables are the maximum error f and the mean square error q f , which have been evaluated using the Metro3D tool <ref type="bibr" target="#b7">[8]</ref>. Metro3D performs a uniform sampling on the high resolution dataset (i.e. the number of samples taken for each cell is proportional to the cell volume); for each sample point it measures the difference between the fields values interpolated on the high resolution and the simplified mesh.</p><p>Some different simplified representations of the Turbine Blade dataset, produced using the different error evaluation heuristics, are shown in <ref type="figure" target="#fig_2">Figure 4</ref> in Color Plates. The figure also shows how complex simplification is: for example, the Turbine dataset contains some very small regions where the field values change abruptly (near the blue blades the field spans over the 70% of the whole field range). This means that a slightly incorrect collapse action, localized in one of these these regions, may introduce a very large maximal error.</p><p>Having introduced a combined field and domain error evaluation allows us to simplify meshes with very complex domain, preserving its boundary with high accuracy. See an example in <ref type="figure" target="#fig_3">Figure 5</ref> in Color Plates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions</head><p>The main results that we have presented consist of the definition of a new methodology to measure the approximation error introduced in the simplification of irregular volume datasets, used to prioritize potential atomic simplification actions. Given the framework of the incremental 3D mesh simplification based on edge collapse, the paper proposes an approach for the integrated evaluation of the error introduced by both the modification of the domain and the approximation of the field of the original volume dataset. These two different errors, the domain error and field error, are used as components of a unified error evaluation function. Using a multi-variate error evaluation function is not a new idea, but we have shown that the adoption of a simple weighted sum can lead to a non optimal priority selection of the elements to be collapsed. A new error function is devised by considering the two-dimensional (domain, field) error space and introducing an original heuristic. In this framework, we present and compare various techniques to precisely evaluate the approximation error or to <ref type="bibr" target="#b2">3</ref> Times of LN and GN techniques were not reported because they were obtained using a quick modification of the BF code; therefore, the corresponding times are not adequate for a fair comparison. produce a sound prediction. These solutions represent various mixes of accuracy and speed in the choice of the edge to be collapsed. They have been tested on some common datasets, measuring their effectiveness in terms of simplification accuracy and time efficiency. Moreover, techniques for preventing geometric or topological degeneration of the mesh have also been presented.</p><p>After testing these simplification techniques on a set of different datasets, one could feel that the problem of accurate simplification of a tetrahedral mesh is harder than the simplification of standard 3D surfaces. In fact, for most meshes, obtaining high simplification rates introducing a low or negligible error is not easy, even if a slow but accurate error criterion is adopted. Conversely, there are many good techniques that can produce a drastic simplification of 2D surface meshes while maintaining a very good accuracy. This is probably due to the fact that a common habit is to compare the simplification of a standard 2D mesh (pure geometry) against the simplification of a 3D mesh supporting also a scalar field. A more correct comparison would be to consider the performances of simplification codes on 2D meshes which also have an attribute field attached (e.g. vertex colors). Analogously to the results obtained in this work, it has been demonstrated that in the latter case a drastic simplification cannot easily be obtained, unless the color field has a very simple distribution on the surface. Therefore, the quality of attribute-preserving simplification strongly depends on the distribution of the scalar attribute over the mesh and, at the same time, on the mesh structure. In many cases a drastic reduction cannot be obtained unless we decrease the accuracy constraint. Unfortunately, data accuracy is a more critical requirement in scientific visualization than in standard interactive computer graphics: when we visualize scientific results we must be sure that what we are seeing is correct and not only seems correct. For this reason we think that data simplification can be safely used in scientific visualization only if it is coupled with sophisticated dynamic multiresolution techniques that easily/efficiently allow to recover the original data when (and, hopefully, where and how) needed. In this way the user can safely exploit the advantages of simplification technology (less data to be rendered) because he is also able to use locally the original data on request (e.g. in small selected focus regions).     : Different simplified meshes produced from the fighter dataset using the BFS technique; the mesh shown are composed, respectively, of 13,832, 6,916, 2,766 and 1,383 vertices; the corresponding errors are shown in <ref type="table" target="#tab_2">Table 1</ref>. Note how well the boundary is preserved even on the coarsest simplified model.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Topology checks: in the example on the left, the condition Lk(a) ∩ Lk(b) = {x, y} = Lk(ab) indicates a valid collapse. Conversely, an invalid collapse is detected in the configuration on the right because Lk(a) ∩ Lk(b) = {x, y, z, zx} = Lk(ab).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>The domain/field error space. During the simplification process the error walks from the origin towards a user-specified maximal error point.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Different simplified meshes produced from the Turbine Blade dataset. The different meshes shown, of size 10,679 vertices, were produced with the BF, BFS, LN and QD techniques (from top-left, clockwise).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5</head><label>5</label><figDesc>Figure 5: Different simplified meshes produced from the fighter dataset using the BFS technique; the mesh shown are composed, respectively, of 13,832, 6,916, 2,766 and 1,383 vertices; the corresponding errors are shown in Table 1. Note how well the boundary is preserved even on the coarsest simplified model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>3-simplicial complex Σ and an edge e connecting two vertices vs and v d (the source and destination vertices), we impose that vs becomes equal to v d and we consequently modify the complex 2 . This operation causes the edge (vs − v d ) to collapse to the point v d and all the tetrahedra incident on the edge (vs − v</figDesc><table><row><cell>d )</cell></row><row><cell>to collapse to triangles. Again, these new triangles are uni-</cell></row><row><cell>fied with the corresponding identical triangles contained in</cell></row><row><cell>Σ.</cell></row><row><cell>This simplification process is always limited to a local por-</cell></row><row><cell>tion of the complex: the set of simplices incident in</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>(13,832 vertices, 70,125 tetrahedra)   which is the result of an air flow simulation over a jet fighter, courtesy of Nasa; Sf5 (30169 vertices, 151173 tetrahedra) that represents wave speed in the simulation of a quake in the San Fernando valley, courtesy of Carnegie Mellon University (http://www.cs.cmu.edu/∼quake); Turbine Blade (106,795 vertices, 576,576 tetrahedra), dataset courtesy of Avs Inc. (tetrahedralized by O. G. Staadt).</figDesc><table><row><cell cols="8">Fighter Dataset (input mesh: 13,832 vertices 70,125 tetrahedra)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>vert.</cell><cell>input %</cell><cell>f</cell><cell>BF q f</cell><cell>time</cell><cell>f</cell><cell>BFS q f</cell><cell>time</cell><cell>f</cell><cell>LN</cell><cell>q f</cell><cell>f</cell><cell>GN</cell><cell>q f</cell><cell>f</cell><cell>QN q f</cell><cell>time</cell></row><row><cell>6,916</cell><cell>50</cell><cell>40.58</cell><cell>1.34</cell><cell>61.0</cell><cell>17.61</cell><cell>1.54</cell><cell>654</cell><cell cols="2">47.46</cell><cell>1.42</cell><cell cols="2">52.11</cell><cell>1.65</cell><cell>66.70</cell><cell>1.63</cell><cell>27.0</cell></row><row><cell>2,766</cell><cell>20</cell><cell>65.34</cell><cell>2.58</cell><cell>88.9</cell><cell>29.27</cell><cell>2.28</cell><cell>1155</cell><cell cols="2">54.17</cell><cell>2.55</cell><cell cols="2">66.13</cell><cell>1.85</cell><cell>60.99</cell><cell>2.23</cell><cell>39.8</cell></row><row><cell>1,383</cell><cell>10</cell><cell>65.34</cell><cell>2.70</cell><cell>99.9</cell><cell>39.13</cell><cell>2.48</cell><cell>1395</cell><cell cols="2">50.87</cell><cell>3.15</cell><cell cols="2">67.54</cell><cell>1.99</cell><cell>69.20</cell><cell>2.41</cell><cell>45.2</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Results of the simplification of the Fighter mesh. Errors are expressed as a percentage of the field range, times are in seconds.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 2 :</head><label>2</label><figDesc>Results of the simplification of the sf5 mesh. Errors are expressed as a percentage of the field range, times are in seconds.</figDesc><table><row><cell cols="9">Turbine Dataset (input mesh: 106,795 vertices, 576,576 tetrahedra)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>vert.</cell><cell>input %</cell><cell>f</cell><cell>BF q f</cell><cell>time</cell><cell>f</cell><cell>BFS q f</cell><cell>time</cell><cell>f</cell><cell>LN</cell><cell>q f</cell><cell>f</cell><cell>GN</cell><cell>q f</cell><cell>f</cell><cell>QN q f</cell><cell>time</cell></row><row><cell>53,397</cell><cell>50</cell><cell>71.3</cell><cell>0.10</cell><cell>587.3</cell><cell>78.3</cell><cell>0.04</cell><cell>1117.7</cell><cell>78.7</cell><cell></cell><cell>0.23</cell><cell>78.7</cell><cell cols="2">0.09</cell><cell>74.3</cell><cell>1.50</cell><cell>330.2</cell></row><row><cell>21,359</cell><cell>20</cell><cell>78.3</cell><cell>0.63</cell><cell>954.5</cell><cell>78.7</cell><cell>0.18</cell><cell>2859.9</cell><cell>78.7</cell><cell></cell><cell>0.49</cell><cell>78.6</cell><cell cols="2">0.39</cell><cell>81.7</cell><cell>2.85</cell><cell>459.2</cell></row><row><cell>10,679</cell><cell>10</cell><cell>78.7</cell><cell>0.58</cell><cell>1098.9</cell><cell>78.1</cell><cell>0.38</cell><cell>4270.2</cell><cell>78.7</cell><cell></cell><cell>0.79</cell><cell>85.7</cell><cell cols="2">2.40</cell><cell>80.6</cell><cell>4.31</cell><cell>511.8</cell></row><row><cell>5,339</cell><cell>5</cell><cell>78.7</cell><cell>0.86</cell><cell>1193.2</cell><cell>78.7</cell><cell>0.71</cell><cell>5120.9</cell><cell>74.7</cell><cell></cell><cell>1.04</cell><cell>97.3</cell><cell cols="2">7.21</cell><cell>90.9</cell><cell>6.54</cell><cell>539.7</cell></row><row><cell>2,135</cell><cell>2</cell><cell>76.1</cell><cell>1.42</cell><cell>1276.4</cell><cell>24.1</cell><cell>1.25</cell><cell>5222.0</cell><cell>74.4</cell><cell></cell><cell>2.78</cell><cell>97.3</cell><cell cols="2">8.59</cell><cell>97.3</cell><cell>10.26</cell><cell>545.3</cell></row><row><cell>1,067</cell><cell>1</cell><cell>81.3</cell><cell>2.92</cell><cell>1318.8</cell><cell>68.6</cell><cell>4.97</cell><cell>6742.2</cell><cell>80.0</cell><cell></cell><cell>9.14</cell><cell>97.3</cell><cell cols="2">10.74</cell><cell>93.2</cell><cell>11.71</cell><cell>549.3</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 :</head><label>3</label><figDesc>Results of the simplification of the Turbine mesh. Errors are expressed as a percentage of the field range, times are in seconds.</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">I.e., a complex which does not contain dangling non-maximal simplices.2 The position and the field value of the vertex v d can also be changed, obtaining the so-called interpolatory edge collapse. We do not adopt this approach because the choice of the v d optimal location is not easy with most of the error evaluation criteria.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Geometric computing and uniform grid technique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Akman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">R</forename><surname>Franklin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kankanhalli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Narayanaswami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="410" to="420" />
			<date type="published" when="1989-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Power diagrams: Properties, algorithms and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Aurenhammer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Siam J. Comput</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="78" to="96" />
			<date type="published" when="1987-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Error bounded reduction of triangle meshes with multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SPIE</title>
		<imprint>
			<biblScope unit="volume">2656</biblScope>
			<biblScope unit="page" from="34" to="45" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Multiresolution decimation based on global error. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ciampalini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997-06" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="228" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Multiresolution modeling and rendering of volume data based on simplicial complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 1994 Symposium on Volume Visualization</title>
		<meeting>1994 Symposium on Volume Visualization</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="17" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Multiresolution modeling and visualization of volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Comp. Graph</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="352" to="369" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Metro: measuring error on simplified surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rocchini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="167" to="174" />
			<date type="published" when="1998-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Metro 3D: Measuring error on simplified tetrahedral complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rocchini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<idno>B4-35-00</idno>
		<editor>I.E.I. -C.N.R.</editor>
		<imprint>
			<date type="published" when="2000-05" />
			<pubPlace>Pisa, Italy</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Topology preserving edge contraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">K</forename><surname>Dey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">V</forename><surname>Nekhayev</surname></persName>
		</author>
		<idno>RGI-Tech-99</idno>
	</analytic>
	<monogr>
		<title level="j">RainDrop Geomagic Inc. Champaign IL</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Thinning algorithms for scattered data interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Floater</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Iske</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">BIT Numerical Mathematics</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="705" to="720" />
			<date type="published" when="1998-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Automatic extraction of irregular network digital terrain models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Little</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics (Siggraph &apos;79 Proc.)</title>
		<imprint>
			<date type="published" when="1979-08" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="199" to="207" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Multiresolution modeling: Survey &amp; future opportunities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROGRAPHICS&apos;99, State of the Art Report (STAR). Eurographics Association</title>
		<meeting><address><addrLine>Aire-la-Ville</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<idno>Au- gust 1997. ISBN 0-89791-896-7</idno>
	</analytic>
	<monogr>
		<title level="m">GRAPH 97 Conference Proceedings, Annual Conference Series</title>
		<editor>Turner Whitted</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Simplifying surfaces with color and texture using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th Annual IEEE Conference on Visualization (VIS-98)</title>
		<meeting>the 9th Annual IEEE Conference on Visualization (VIS-98)<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="264" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The multilevel finite element method for adaptive mesh optimization and visualization of volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grosso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Luerig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<meeting><address><addrLine>Phoenix, AZ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="387" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Data point selection for piecewise trilinear approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="477" to="489" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 96 Conference Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Progressive simplicial complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics Proc., Annual Conference Series, (Siggraph &apos;97)</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="217" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Generalized unstructured decimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>Renze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Oliver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">&amp;A</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="24" to="32" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Full-range approximation of triangulated polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ronfard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics&apos;96 Proc.)</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="67" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Decimation of triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics (SIGGRAPH &apos;92 Proceedings)</title>
		<editor>Edwin E. Catmull</editor>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Progressive tetrahedralizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">G</forename><surname>Staadt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;98 Conf</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="397" to="402" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Simplification of tetrahedral meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">J</forename><surname>Trotts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Wiley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;98 Conf</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="287" to="295" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Multiresolution tetrahedral framework for visualizing volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97 Proceedings</title>
		<editor>Roni Yagel and Hans Hagen</editor>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
