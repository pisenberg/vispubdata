<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Two-level volume rendering -fusing MIP and DVR</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Helwig</forename><surname>Hauser</surname></persName>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gian-Italo</forename><surname>Bischi</surname></persName>
							<email>bischi@econ.uniurb.it</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Eduard</forename><surname>Gr√∂ller</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Lukas Mroz</orgName>
								<orgName type="institution" key="instit2">VRVis Center Vienna</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of Urbino</orgName>
								<address>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Vienna Univ. of Technology</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Vienna University of Technology</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Two-level volume rendering -fusing MIP and DVR</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.3 [Computer Graphics]: Picture / Image generation-display algorithms</term>
					<term>J.2 [Physical Sciences and Engineering]: Mathematics and statistics</term>
					<term>J.3 [Life and Medical Sciences]: Medical information systems visualization, volume rendering, dynamical systems, medical applications</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this paper we present a two-level approach for fusing direct volume rendering (DVR) and maximum-intensity projection (MIP) within a joint rendering method. Different structures within the data-set are rendered locally by either MIP or DVR on an objectby-object basis. Globally all the results of subsequent object renderings are combined in a merging step (usually compositing in our case). This allows to selectively choose the most suitable technique for depicting each object within the data, while keeping the amount of information contained in the image at a reasonable level. This is especially useful when inner structures should be visualized together with semi-transparent outer parts, similar to the focus-andcontext approach known from information visualization. We also present an implementation of our approach, which allows to explore volumetric data using two-level rendering at interactive frame rates.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>A major step in visualization definitely was to go into rendering of information which itself is of higher dimensionality than the screen where the visualization is displayed <ref type="figure">(Fig. 1)</ref>. Especially in the field of medical data visualization, often 3D data is investigated which exhibits inner structures of special interest. The more information there is, the more difficult the visualization task gets. Depending on the properties of the data as well as depending on the needs of the user, different rendering methods might be the optimal choice.</p><p>One of the standard techniques to display volume data is direct volume rendering (DVR) <ref type="bibr" target="#b4">[5]</ref>, which is based on the composition of visual properties along viewing rays. A crucial step of this technique is the application of transfer functions in order to assign visual properties such as color and opacity to the data-values. Compositing along viewing rays blends all these optical properties into pixel values at the image plane.</p><p>Recently, the design of transfer functions became a research topic on its own <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b3">4]</ref>. It is rather difficult to intuitively set up a proper transfer function. Producing useful images with DVR is even more difficult if there is not a close correspondence between data-value and object type. MRI data-sets, for example, typically contain large differences in data-values for objects of similar type.</p><p>Two solutions might help in such a case. One is to use another rendering method, like maximum-intensity projection (MIP) <ref type="bibr" target="#b12">[13]</ref>. With MIP the most important data-values are depicted instead of areas with specific data-values or gradient information. MIP images contain useful information if data-values directly reflect the importance of the data.</p><p>Another approach to deal with inhomogeneities throughout the 3D data-set is to apply segmentation <ref type="bibr" target="#b19">[20]</ref>. Objects are distinguished in a usually semi-automatic preprocessing step. Thresholding, watershed, and other techniques together with user-interaction yield a so-called object mask describing which data-values and regions belong to a specific object within the data-set. Some application areas such as the numerical investigation of dynamical systems allow fully automatic segmentation of the 3D volume through numerical integration techniques <ref type="bibr" target="#b14">[15]</ref>. For DVR rendering, segmentation information can also be used to apply individual transfer functions to different objects <ref type="bibr" target="#b18">[19]</ref>.</p><p>Surface-based approaches -in contrast to DVR and MIP -are suitable in situations, where actual surfaces are present in the dataset. Basically, there are two approaches to extract and render isosurfaces. One class of techniques deals with the explicit computation of a geometric representation of the iso-surface -the marching cubes algorithm <ref type="bibr" target="#b9">[10]</ref> is a well-known example. The second class deals with depicting the surface by means of a transfer function <ref type="bibr" target="#b8">[9]</ref>. DVR and surface rendering can also be combined into a hybrid technique <ref type="bibr" target="#b6">[7]</ref> depicting both, truly volumetric information, and objects defined by polygonal models.</p><p>Good visualization strongly depends on what data is visualized, what structure this data consists of, as well as on the visualization goals of the user. Depending on these prerequisites several useful approaches exist, and individual decisions (what rendering method to choose) have to be made for specific applications. In this paper we focus on the idea of fusing different rendering methods, utilizing segmentation information and individual rendering of objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Two-level volume rendering</head><p>Expressive results which are gained from volume rendering heavily depend on a proper information-per-pixel ratio. Using DVR, images tend to get over-loaded if too many data-values are combined through compositing. Beyond a certain information-per-pixel ratio, it gets more and more difficult to distinguish all the various objects merged within the final image. On the other hand, being too conservative with volume rendering, i.e., dropping too much information while compositing, the full potential of volume visualization is not exploited. MIP, for example, generates an information-per-pixel ratio equal to one.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">The basic idea and some motivation</head><p>For modeling a volume rendering technique which is based on the idea of integrating just a limited number of data-values within a pixel, we utilize the fact that human observers usually distinguish between objects within 3D scenes. Users tend to see solid objects bounded by opaque or semi-transparent surfaces. They usually detect surfaces which separate 3D space. Even objects with intrinsic 3D characteristics like clouds, fire, aso., are perceived as individual entities. We therefore assume the 3D data-set to consist of several objects of different types. In medical applications a 3D data-set of a human body may consist of background, skin, bones, soft tissue, blood vessels, organs, etc.</p><p>Displaying opaque structures (like the bones within a human body) together with one or two semi-transparent surfaces around (e.g., soft tissue and skin) usually works fine. More than three transparent objects, which are rendered together, one above the other, usually compile to rather blurry images which are quite difficult to interpret.</p><p>The  <ref type="figure">Figure 2</ref>: object segmentation implicitly yields viewing rays to be partitioned into segments (one per object intersection).</p><p>ery object intersected, a single, representative value is computed <ref type="bibr" target="#b0">1</ref> . These object representatives are finally composed into a pixel value by combining them (usually using DVR compositing). Only a small number of data-values are combined for a pixel (one per object), limiting the information-per-pixel ratio to a useful extent.</p><p>To compute the values of an entire intersection segment along the viewing ray, different rendering techniques can be used such as MIP or DVR. Nevertheless, other techniques for object rendering can be used as well, for example, artistic rendering or non-photorealistic volume rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The model</head><p>The model of two-level volume rendering is based on ray casting. A 3D segmentation mask specifies which regions of the data-set belong to which objects. The subdivision of the data-set into objects also segments viewing rays into sets of distinct segments <ref type="figure">(Fig. 2)</ref>. This segmentation of the viewing ray is utilized to combine the data-values along the ray as follows:</p><p>While traversing a viewing ray -for example, back-to-fronttwo tracks of rendering are processed in parallel. For every segment of the ray, local rendering is performed to compute an object representative associated to the segment (rendering on object level). On the scene level a global track of rendering is computed which combines the object representatives to final image values. For an example see <ref type="figure">Fig. 3</ref>. In this case DVR rendering gives good results for ray segments within "blood vessels" and "bones". MIP rendering works best for ray segments in "skin" and "soft tissue" regions. This is mainly due to the fact that MIP generates rather equal transparency regardless of the object thickness.</p><p>At those points along the ray, where the object classification changes, i.e., at the points where viewing rays cross object boundaries, update steps in the global rendering track are performed. We usually use DVR-compositing on the global level. The only exception, where we could experience that MIP is useful instead, is if all objects in the data-set are rendered by the use of MIP themselves, also. In contrast to standard MIP, this "MIP of MIP" approach allows to easily distinguish between different objects within the scene, as different transfer functions and thus colors can be assigned to different objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Realization issues</head><p>Since the model of two-level volume rendering (Sect. 2.2) is based on ray casting, an implementation as image-order technique would be straight-forward. Nevertheless, the idea of two-level rendering has been firstly developed to aid exploration of data from the field of dynamical systems. Interactivity is crucial for exploring and investigating data and especially for finding proper settings for optical properties of objects. Thus we present a fast object-order implementation, based on shear-warp rendering <ref type="bibr" target="#b7">[8]</ref>, instead. For perfor-mance reasons, no interpolation is done in the intermediate image plane -each voxel is projected onto exactly one pixel. During the warp step, bilinear interpolation is used, also considering the scaling component of the projection matrix.</p><p>To allow for efficient skipping of empty space in-between objects, each object within the investigated data is stored separately as an array of all it's member voxels. For each voxel, position and attributes, e.g., data-value and gradient information, are stored. The list is replicated and stored separately for each principal viewing axis ( , , and ) with voxels sorted by the principal viewing coordinate (for reasons of simplicity called in the following, the same procedure is applied to the other main viewing axes). All voxels of an object which share the same coordinate are grouped within a so-called RenderList-entry, the value of is stored with the RenderList-entry instead with all the voxels <ref type="figure">(Fig. 4)</ref>. For rendering, the RenderList-entries of all objects are combined into a single RenderList sorted by . Processing this list sequentially during rendering results, for example, in a back-to-front traversal of the scene. By storing only voxels which belong to objects, empty space in-between is skipped automatically without any effort at all during rendering. For implementing the two-level rendering approach two sets of buffers are used for the intermediate image plane. An object buffer is used for performing rendering within an object, while a global buffer is used to perform inter-object rendering. In addition to intermediate pixel values, each pixel of the object buffer additionally stores the unique ID of the currently front-most object. If a voxel is projected onto the intermediate image, it's ID is compared with the stored ID in the object buffer. If both IDs match, the value in the object buffer is updated using an operation which corresponds to the local rendering mode of the object (either maximum selection or compositing of the voxel value with the buffer content). If the ID of the voxel differs from the ID of the pixel in the buffer, the viewing ray though this pixel must have entered a new object. The content of the object buffer pixel has to be combined with the corresponding global buffer pixel using an operation which depends on the global rendering strategy (MIP or DVR). Afterwards the object buffer pixel is initialized according to the voxel of the new object and the new local rendering mode.</p><p>After all voxels have been projected, the contribution of the front-most segment at each pixel has to be included by performing an additional scan of the buffers and merging the segment values left in the local buffer into the global buffer.</p><p>As the application of clipping planes is a widely used method for enhancing volume visualization, support for this technique has also been included in our object storage scheme. The voxel lists used for rendering allow a very efficient implementation of arbitrary cutting planes. As the order in which voxels of the same depth are rendered to the intermediate image plane is irrelevant, voxels removed by the application of a cutting plane can be simply moved to the end of the voxel array belonging to a RenderList-entry. An end-mark is used to indicate the last visible voxel within a RenderList-entry <ref type="figure">(Fig. 4)</ref>. Removed voxels which are stored after this mark can be ignored during rendering without slowing down the process.  For lighting of the objects the Phong shading model is employed. The gradient vector at each voxel is pre-calculated during the preprocessing step <ref type="bibr" target="#b13">[14]</ref>, converted to polar coordinates and quantized to 12 Bit for limiting the storage requirements. During rendering, this representation of the gradient is used to access a look-up table with shading information. The shading table includes the influence of ambient, diffuse, and specular components of the lighting model. It is quickly recalculated for each new viewing or light position and also after a change of material properties.</p><p>Opacity values for compositing voxels and objects are derived from two sources: first, the ability to change the opacity of a whole object turned out to be useful when adjusting viewing parameters. Secondly, the object-wide opacity can be modulated by a per-voxel opacity which depends on some property of the voxel, like for example data-value, gradient magnitude, or the distance to some other object (see Sect. 3.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Applications and results</head><p>Two-level volume rendering, as described above, is easily applied to various fields of applications. In this paper we describe two applications and show how two-level volume rendering improves the results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Medical data visualization</head><p>Visualization of medical data is one of the most important application fields of volume rendering. DVR is often used to render tissue transitions within medical data-sets, similar to surface-rendering (see <ref type="figure" target="#fig_1">Fig. 5</ref>, left image). Especially through shading, DVR-images very well communicate 3D shape, object inter-relations, and depth information. MIP, on the other hand, allows to well visualize rather complex structures, like blood vessels, organs, etc. Images usually are less over-loaded, compared to DVR, and focus on the important parts of the data. In <ref type="figure" target="#fig_1">Fig. 5</ref> (right image) we show blood vessels together with lower-valued bones by the use of MIP.</p><p>In addition to the well-appreciated advantages of DVR and MIP, some difficulties are associated with both methods: DVR images tend to be over-loaded with content (blurred images). Due to the convolution character of the compositing step, and the high sensitivity of DVR on the transfer function in use, it happens easily that too many data-values are merged into the final image. The use of gradient information as another input to the transfer function <ref type="bibr" target="#b8">[9]</ref> partially improves this situation. For objects with a complex interior structure, nevertheless, it is difficult to avoid this accumulation problem.</p><p>DVR also has problems with data which does not have a close correspondence between data-value and object type. Due to inhomogeneities, in MRI data, for example, values representing one object vary drastically throughout the data-set <ref type="bibr" target="#b5">[6]</ref>. Also, scanning modalities sometimes do not separate all the different objects clearly. MRI, for example, may give similar values for bones and air. Due to the dependency of transfer <ref type="figure">Figure 6</ref>: comparisons between standard DVR (first row) and two-level volume rendering (second row). Left column: two-level volume rendering allows to show blood vessels within the head, even near the skull. Center column: using MIP for the visualization of context (bones, skin) the object of interest (blood vessels plus stenosis) becomes well visible from all viewing directions. Right column: again MIP proves to work fine for context visualization -see also: color plate.</p><p>functions on the data-values (and their gradients), distinction is thus very difficult within the final image.</p><p>MIP images, on the other hand, usually lack depth information. This is due to the weak inter-pixel correlation of neighboring viewing rays. Data-maxima often are detected at significantly different depth locations along neighboring rays. Consequently, MIP images usually look rather flat, and view-point variations (animation, user-interaction) are necessary to re-generate the 3D impression. Also, no occlusion is considered, showing objects, which are actually beyond each other, in an arbitrary order. The application of LMIP (local MIP <ref type="bibr" target="#b15">[16]</ref>) helps a bit. Two-level volume rendering (DVR of MIPs), however, proved to give even better results, since object-order can be restored on the global level.</p><p>With standard MIP usually just one structure is visualized, i.e., the object of interest lacks context information. Furthermore, up to now, MIP did not utilize color for the visualization of medical data. A simple enhancement (shown in <ref type="figure" target="#fig_1">Fig. 5</ref>, right image) is to modulate the color saturation of the pixel in addition to its lightness, when a certain maximum is rendered to the screen. Thereby, objects are more easily distinguished within MIP images.</p><p>Two-level volume rendering allows to overcome these difficulties to a certain extent. Context information, for example, can be dis-played by the use of MIP, and combined with DVR-rendered inner structures. The MIP-representation of the outer hull, i.e., the context, avoids the over-loading problem of DVR as MIP hulls feature rather uniform transparency. Through DVR-rendering the 3D shape of inner structures becomes more visible. In <ref type="figure">Fig. 6</ref>, lower left image, the skull is rendered by the use of MIP, producing rather continuous transparency throughout the image. This enables insight to the blood vessels, which are represented by the use of (local) DVR. Two further comparisons are also depicted in <ref type="figure">Fig. 6</ref>. In general, we found it useful to depict the context of DVR-rendered inner structures by the use of MIP. We also experienced that in the case of rather complex structures, MIP is working fine, whereas for objects with limited spatial frequencies usually DVR works fine.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Dynamical system visualization</head><p>We also successfully applied two-level volume rendering to discrete dynamical systems in 3D. We are interested in the long-term evolution of a discrete dynamical system, which is given as a set of three difference equations , where denotes the time of evolution and is a vector of parameters of the dynamical system.</p><p>A trajectory (or evolution over time) of the system is defined as the sequence of states , starting from a given initial condition , by the repeated application (iteration) of the map , i.e.,</p><p>. Investigating the long-term behavior of such a dy- <ref type="figure">Figure 7</ref>: dynamical systems visualized by the use of two-level volume rendering -see also: color plate.</p><p>namical system, we are firstly interested in attracting sets which are present for a specific parameter setting . Attracting sets might be quite simple, e.g., single points, periodic cycles of limited period, or quasi-periodic trajectories which fill a closed curve, or more complex objects such as chaotic sets, also called strange attractors <ref type="bibr" target="#b1">[2]</ref>. Not only the attractor as the limit of evolution, but also its basin of attraction should be shown. A basin is equal to the set of all starting configurations , which (in the long-term) finally converge to the corresponding attractor. Similar to the attractors themselves, also the basins may have either simple boundaries, just a box, for example, or complex boundaries which may be formed by many disconnected portions and sometimes may even have a fractal structure. A basin is a set which spatially includes the corresponding attractor. When several attractors coexist, it becomes very important to visualize the boundaries which separate the corresponding basins together with the attractors which are nested inside them.</p><p>In our case, two-level volume rendering is successfully used in the scientific investigation of two discrete systems of international interest. The first one is a three-dimensional system which models a triopoly, i.e., an economic system where three producers share the market of a given product -for example, a competition among three companies in an international context (EU / former eastern countries). The question is which company will finally dominate the market, given a particular initial condition (the initial productions of the three companies) and given a certain set of so called reactionfunctions which represent the optimal choices <ref type="bibr" target="#b0">[1]</ref>. In <ref type="figure">Fig. 7</ref> (left image) two-level volume rendering was used to visualize four basins of attraction, three enclosed basins using DVR, and one surrounding basin using MIP. Additionally a so-called critical surface is depicted using MIP. The color of the surface corresponds to the distance to the closest basin boundary. Critical surfaces, which are sometimes responsible for global bifurcations, are basically defined to be the 3D locus where the determinant of the Jacobian matrix of vanishes.</p><p>Another system we are investigating is a three-dimensional noninvertible quadratic, i.e., second degree map, which can be considered as an extension of a broadly used two-dimensional quadratic map <ref type="bibr" target="#b11">[12]</ref>. Such two-dimensional maps have been often used to explain global bifurcations. These are qualitative changes occurring in the structure of the attractors and/or of their basins when the parameters are changed, as a consequence of contacts between particular curves (the so-called contact bifurcations <ref type="bibr" target="#b11">[12]</ref>). Twolevel volume rendering for the visualization of basins and their associated attractors, eases the investigation of bifurcation events in three-dimensional space. A fast visual inspection allows to relate bifurcations to contacts between particular surfaces whose analytic equation is generally unknown. Interactive 3D visualization is crucial for the detection of global bifurcation events in 3D. The central image of <ref type="figure">Fig. 7</ref> shows, for example, an attractor which is close to a contact with the boundary of it's basin. The attractor has been rendered using MIP, the boundary is depicted using DVR. The opacity of the boundary voxels is modulated according to the distance to the closest point of the attractor, clearly showing areas of potential contact. In fact, the use of cutting planes or simple projections does not work in such cases.</p><p>In <ref type="figure">Fig. 7</ref> (right image) MIP was used to render a chaotic attractor. The inner structure of the fractal object becomes visible quite well. Another attractor, also apparent within this parameter setting, is a two-cycle (two points), represented by label "E1". Both basins of attraction are rendered by the use of DVR to better show their 3D shape. They subdivide phase space in a complex way: the basin of attraction corresponding to the simple attractor is a non-connected set, whose distribution in space has a fractal structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">User interaction</head><p>Two-level volume rendering, presented in this paper, has been implemented in an interactive Java <ref type="bibr" target="#b17">[18]</ref> based tool (see <ref type="figure" target="#fig_2">Fig. 8</ref>). The applet provides the user with a set of interactive tools for exploring and visualizing the data. After loading a data-set, it is decomposed into distinct objects. Segmentation information is always present for data originating from dynamical system computations. Medical data-sets may but not necessarily have to contain segmentation information. Non-segmented medical data is automatically decomposed using a simple, threshold-based segmentation.</p><p>All operations which affect viewing parameters and optical properties of objects are performed interactively. Each object can be either shown or hidden for selective visualization of specific features within the scene. In addition to the global rendering mode, the object-level rendering mode as well as the opacity can be selected separately for each object. For each object the color can be set independently of the range of values of the object's voxels. In our implementation we use color mainly to distinguish between objects within the scene, whereas DVR and MIP mainly work on opacities, color saturation and lightness, as well as shading information. Additional information (like gradient magnitude or distance to another object) can be used to modulate either the color or the opacity of an object's voxels. Cutting planes at certain values of , , and can be applied to subsets of objects and manipulated in real-time.</p><p>Using the mouse to directly interact with the scene, further visualization parameters can be influenced: viewing position, zoom factor, position of the light source, material properties, and opacity transfer function. Additionally the windowing metaphor, which is widely employed in medical imaging applications, is used to adjust contrast and emphasize specific data ranges within the color transfer function.</p><p>As empty regions within the volume are not stored in our implementation, we are able to handle 4D data (or even data of higher dimensionality) in a memory efficient way. 4D data is obtained from dynamical system research as parameter variation produces several (10-100) distinct volume data-sets. Further images demonstrating the effects of various parameter settings on the visualization can be found at the web page correlated to this work <ref type="bibr" target="#b2">[3]</ref>. <ref type="table" target="#tab_3">Table 1</ref> shows the rendering times of some of the figures from this paper measured on an AMD Athlon 600 PC. All images are 512x512 in size. Most of the images are single frames from animation sequences which can be found with further results at the web page of this work <ref type="bibr" target="#b2">[3]</ref>. <ref type="figure">Figure 6</ref> shows case studies which demonstrate the advantages of mixing different rendering methods over single-method approaches.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Summary and conclusions</head><p>In this paper we present the idea of merging DVR and MIP into a two-level volume rendering method. Segmentation information is utilized to apply individual rendering techniques to different objects, which additionally are merged into a resulting image through a global rendering step. We applied our new technique in two areas, namely medical data visualization and the visualization of dynamical systems. DVRrendered objects of interest, for example, which are displayed with MIP-rendered context objects proved to be useful in both cases.</p><p>The decision what rendering method to choose strongly depends on what data there is to be visualized, what structure this data consists of (complex, rather simple, etc.), and what the user actually wants to see within the data. Often, even one data-set contains objects, which differ significantly with regard to their inner structure or boundary surface. Our approach allows to take the most appropriate volume rendering method on a object-by-object basis, and globally merge the subsequent result to the final image.</p><p>We also experienced that certain visualization setups are quite common to various application fields. Focus and context, for example, which is well-known from information visualization, also shows up in visualization goals for medical data or data of dynamical systems. Users want to peer inside 3D data to investigate some inner structures, but they also would like to keep surrounding objects integrated within the visualization, for spatial reference.</p><p>While working on the fusion of MIP and DVR, we also learned a lot about the difference between both methods. DVR, for example, usually generates a good 3D impression of the volumetric data. MIP requires interactive rendering or animation sequences to equally communicate the 3D shape and inter-relation of objects within the scene. On the other hand, using DVR for volume rendering, images may be over-loaded with information (if not opaque surfaces are shown, only). Also, setting up a proper transfer function is a difficult job in many cases. MIP, contrarily, usually results in object representations which are featuring a rather continuous object transparency. One conclusion is that using MIP for rendering context information often gives very good results. Finally, the use of MIP allows to better visualize the inner structure of really complex structures (like chaotic attractors). DVR, on the other hand, tends to generate rather blurry images, when little opacity is used.</p><p>Also, being able to implement this new approach of two-level volume rendering as an interactive tool on PC-hardware, allowed to experience the importance of interactive investigation of volumetric data. Being able to vary viewing parameters as well as visualization attributes interactively significantly helps to generate quite useful results.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>joining MIP and DVR -a simple example (bones and vessels: DVR; skin: MIP) -see also: color plate. storage scheme for two-level volume rendering.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 5 :</head><label>5</label><figDesc>two examples of DVR (left image) and MIP (right image) in the field of medical data visualization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 8 :</head><label>8</label><figDesc>the user interface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>figure volume size rendering time 5 left 0.16 s 5 right 0.09 s 6 center 0.18 s 6 right 0.17 s 7 right 0.17 s</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table /><note>rendering times.</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">This approach is somehow similar to "Volumetric Ray Tracing" by Sobierajski and Kaufman<ref type="bibr" target="#b16">[17]</ref>, who aim for photo-realistic rendering of geometric objects together with volumetric objects, including shadows, etc. Contrarily, two-level volume rendering features an extended volume ray casting approach which aims for an optimal information-per-pixel density (instead of photo-realism). Object distinction is realized rather implicitely on a voxel-by-voxel basis (no sorting of hits necessary).</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Acknowledgements</head><p>The authors express their thanks to Helmut Doleisch and Thomas Theu√ül, who both helped with their comments to finish this paper. Acknowledgements also go to VisMed, a FFF-funded project (http://www.vismed.at/), for the collaboration in the field of medical visualization.</p><p>We want to thank the radiologists at the Innsbruck University Clinic for providing the medical data-sets shown in this paper. The work presented in this paper was carried out as part of the BandViz project (http://bandviz.cg.tuwien.ac.at/), which is supported by FWF under project number P 12811.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Multistability in a dynamic cournot game with three oligopolists</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">N</forename><surname>Agiza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G.-I</forename><surname>Bischi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kopel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics and Computers in Simulation</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page" from="63" to="90" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Chaos, strange attractors, and fractal basin boundaries in nonlinear dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Grebogi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Jorke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">238</biblScope>
			<biblScope unit="page" from="256" to="261" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Two-level volume rendering -fusing MIP and DVR</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Mroz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G.-I</forename><surname>Bischi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Gr√∂ller</surname></persName>
		</author>
		<ptr target="http://www.cg.tuwien.ac.at/research/vis/bandviz/two-level/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Generation of transfer functions with stochastic search techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="227" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Ray tracing volume densities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Kajiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH&apos;84</title>
		<meeting>ACM SIGGRAPH&apos;84</meeting>
		<imprint>
			<date type="published" when="1984" />
			<biblScope unit="page" from="165" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Segmentation of brain tissue from magnetic resonance images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kapur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E L</forename><surname>Grimson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">M</forename><surname>Wells</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Iii</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Medical Image Analysis</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="109" to="127" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Mixing translucent polygons with volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kreeger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1999-10" />
			<biblScope unit="page" from="191" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Fast volume rendering using a shear-warp factorization of the viewing transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ph</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lacroute</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings</title>
		<editor>A. Glassner</editor>
		<meeting><address><addrLine>Orlando, Florida</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1994-07-29" />
			<biblScope unit="page" from="451" to="458" />
		</imprint>
	</monogr>
	<note>Proc. of SIGGRAPH &apos;94</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH&apos;87</title>
		<meeting>ACM SIGGRAPH&apos;87</meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="189" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Design galleries: A general approach to setting parameters for computer graphics and animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Andalman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Beardsley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Freeman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gibson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hodgins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mirtich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ruml</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ryall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Seims</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shieber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<editor>Turner Whitted</editor>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="389" to="400" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Chaotic Dynamics in Two-Dimensional Noninvertible Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barugola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Cathala</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>World Scientific</publisher>
			<pubPlace>Singapore</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Real-time maximum intensity projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Mroz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>K√∂nig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gr√∂ller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization &apos;99</title>
		<editor>E. Gr√∂ller, H. L√∂ffelmann, and W. Ribarsky</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="135" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Gradient estimation in volume data using 4D linear regression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cs√©bfalvi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>K√∂nig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gr√∂ller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics</title>
		<meeting>Eurographics</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Dynamics: Numerical Explorations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Nusse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Yorke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">LMIP: Local maximum intensity projection -a new rendering method for vascular visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Sato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shiraga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Nakajima</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Tamura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Assisted Tomography</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Volumetric ray tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Sobierajski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1994 Symposium on Volume Visualization</title>
		<editor>Arie Kaufman and Wolfgang Krueger</editor>
		<imprint>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="11" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sun</forename><surname>Microsystems</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Java</surname></persName>
		</author>
		<ptr target="http://java.sun.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">High quality rendering of attributed volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Tiede</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Schiemann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">H</forename><surname>H√∂hne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1998-10" />
			<biblScope unit="page" from="255" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">3D Imaging in Medicine</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">K</forename><surname>Udupa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Herman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>CRC Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
