<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Topology Preserving and Controlled Topology Simplifying Multiresolution Isosurface Extraction</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Gerstner</surname></persName>
							<email>gerstner@iam.uni-bonn.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
							<email>pajarola@acm.org</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department for Applied Mathematics</orgName>
								<orgName type="institution">University of Bonn</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Information and Computer Science</orgName>
								<orgName type="institution">University of California</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Topology Preserving and Controlled Topology Simplifying Multiresolution Isosurface Extraction</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>G.1.2 [Numerical Analysis]: Approximation-Approximation of Surfaces and Contours I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Curve</term>
					<term>surface</term>
					<term>solid</term>
					<term>and object representations tetrahedral grid refinement</term>
					<term>implicit surface approximation</term>
					<term>level-of-detail</term>
					<term>topological genus</term>
					<term>critical points</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Multiresolution methods are becoming increasingly important tools for the interactive visualization of very large data sets. Multiresolution isosurface visualization allows the user to explore volume data using simplified and coarse representations of the isosurface for overview images, and finer resolution in areas of high interest or when zooming into the data. Ideally, a coarse isosurface should have the same topological structure as the original. The topological genus of the isosurface is one important property which is often neglected in multiresolution algorithms. This results in uncontrolled topological changes which can occur whenever the level-of-detail is changed. The scope of this paper is to propose an efficient technique which allows preservation of topology as well as controlled topology simplification in multiresolution isosurface extraction.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Isosurface extraction is a very common and useful tool for the visualization of volume data. In the last years, the resolution of volumetric data sets has been increasing dramatically. This applies to typical measurement data arising e.g. in medical imaging as well as to output of large-scale numerical simulations.</p><p>The need for multiresolution methods becomes apparent when such large data sets have to be visualized interactively as required by many applications such as computer aided surgery or scientific visualization. Without multiple resolutions, the number of triangles which make up an isosurface can easily exceed the number of triangles that can be rendered at interactive frame rates. Also, the isosurface extraction phase may simply be too slow in order to be able to change the isovalue interactively.</p><p>Multiresolution methods address both of these problems. Basically they enable the user to control the accuracy of the extracted isosurfaces by reducing the mesh complexity (or vice versa). This way, he or she is able to explore large volume data using simplified approximations of the isosurface to view the overall structure of the isosurface, and to use more detailed resolutions when zooming into the data set for an inspection of a particular area. The user can also adjust the isovalue interactively at coarser levels-of-detail.</p><p>The different representations of the isosurface should aid the user in navigating and exploring the data set. They should prevent him or her from missing interesting parts and provide a correct impression of the grand structure of the data. The topological genus of the isosurfaces is certainly one variable the user should have control over.</p><p>A multiresolution isosurface extraction algorithm is called topology preserving if all coarser isosurface approximations have the same topological genus as the highest resolution isosurface. It is called topology simplifying if the genus changes for different LODs. In the latter case, however, the user should be able to control the extent and type of possible topological changes.</p><p>In this paper we present a method which allows preservation and controlled simplification of topology for multiresolution isosurfaces under real-time constraints. We will use a methodology which is based on tetrahedral volume meshes instead of the triangle surface meshes. Although the focus will here be on regular gridded data, the approach can be generalized to curvilinear or unstructured grids generated by bisection in a straightforward manner.</p><p>The remainder of this paper is organized as follows. In Section 2 we review previous work. Section 3 briefly describes the construction of multiresolution isosurfaces based on tetrahedral bisection. Algorithms for topology preservation are then considered in Section 4. Controlled topology simplification methods are discussed in Section 5. The conclusions in Section 6 complete the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Very often, an isosurface represented as a triangle mesh is extracted in a preprocessing step. The extraction can be very time-consuming when standard marching algorithms <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b17">18]</ref> are used. Therefore, a variety of methods have been designed to speed up the extraction step <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b21">22]</ref>, or to limit the extraction to the visible triangles <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b11">12]</ref>. General topological problems in isosurface generation have been addressed in <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b23">24]</ref>.</p><p>One way to turn an isosurface into a multiresolution representation is to apply a mesh simplification algorithm on the extracted triangle mesh. For a detailed overview of the large variety of available methods see the recent surveys of <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b18">19]</ref>. In this context, controlled topology simplification of isosurface meshes has been considered in <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b8">9]</ref>. The whole approach has several disadvantages, though. It requires extraction of the isosurface at the finest resolution first, which makes interactive adjustments of the isovalue impossible unless isosurfaces for all possible isovalues are extracted. Moreover, the construction of a multiresolution triangle mesh hierarchy is generally slow and needs involved data structures. On the other hand, it is possible to extract multiresolution isosurfaces directly from the volume data. Thereby, a multiresolution hierarchy is not inferred on the isosurface itself, but on the underlying 3D data set. A coarser isosurface is simply defined as the isosurface of a less detailed approximation of the data. Isosurface extraction is then usually done in a top-down fashion. Starting with an initial approximation, details are added in areas where an error indicator shows a large local error with respect to the data on the finest resolution. If the error drops below a user-defined threshold, the algorithm stops the refinement locally and extracts the isosurface at the current LOD. In some cases the isosurface does not even have to be stored as a triangle mesh but is directly rendered during the data traversal.</p><p>If the data domain is refined adaptively (i.e. not uniformly) it can happen that the extracted isosurface contains holes (cracks) at transition zones where the mesh resolution changes. Different solutions have been devised for this problem, including remeshing <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b7">8]</ref>, point insertion <ref type="bibr" target="#b19">[20]</ref>, filling, adaptive projection <ref type="bibr" target="#b16">[17]</ref>, and saturation of the error indicator <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7]</ref>.</p><p>In the following, we introduce a straightforward and natural way to incorporate topology questions into adaptive multiresolution isosurface extraction based on the error saturation technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Multiresolution Isosurface Extraction</head><p>In this section, we will shortly explain the construction of multiresolution isosurfaces based on tetrahedral meshes. This has already been described in detail in previous works but for clarity and reader's convenience we repeat the basic steps here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Tetrahedral Bisection</head><p>The multiresolution approach considered here is based on recursive bisection of tetrahedra. This refinement scheme is well known from numerical methods for partial differential equations <ref type="bibr" target="#b14">[15]</ref> and has recently also found its way into computer graphics and visualization <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b22">23]</ref>. In contrast to octree approaches, where a trilinear interpolation is used, the data models of the triangulated isosurface and the volumetric grid coincide (they use both piecewise linear interpolation). Therefore a lot of problems arising from different data models are eliminated. This also includes problems related to the topology of the isosurfaces.</p><p>Let us consider a nested hierarchy of tetrahedral grids T l with level 0 ≤ l ≤ lmax. The tetrahedra are refined by recursive bisection: for a tetrahedron T the midpoint of the longest edge eref(T ) is chosen as a new node xref(T ), and the tetrahedron is split at the face spanned by xref(T ) and the two nodes of T opposite to eref(T ) into two child tetrahedra C1(T ) and C2(T ) ( <ref type="figure" target="#fig_0">Figure 1</ref>). Through recursive application a binary tree hierarchy is inferred on the tetrahedra.</p><p>We assume that the input volume data is arranged in a uniform grid with n 3 nodes, n = 2 k + 1. The initial tetrahedral mesh T 0 consists of the six tetrahedra whose vertices are adjacent corners of the cube and which all share the same diagonal of that cube (see <ref type="figure" target="#fig_1">Figure 2</ref> left). Thus, all refinement vertices xref(T ) will fall onto grid points of the original data set.</p><p>The tetrahedral grid hierarchy does not need to be constructed explicitly. The binary tree of tetrahedra can be traversed implicitly and all required information can be computed on-the-fly using the procedure below. It is initially called for the six tetrahedra on the coarsest mesh T 0 with their longest edge given by (x1, x2):</p><formula xml:id="formula_0">recursive_descent(Coord x1, x2, x3, x4, Int l) { xref=(x1+x2)/2; if (l &lt; lmax) { if ((l mod 3) == 0) { recursive_descent(x1, x3, x4, xref, l+1); recursive_descent(x2, x4, x3, xref, l+1); } else { recursive_descent(x1, x3, x4, xref, l+1); recursive_descent(x2, x3, x4, xref, l+1); } } }</formula><p>Using linear interpolation inside each tetrahedron, a piecewise linear function on T l uniquely described by the data values f (xi) at the corresponding nodes is obtained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Extraction Algorithm</head><p>The adaptive multiresolution isosurface algorithm is based on a depth first traversal of the binary tree. On every tetrahedron for a stopping criterion is checked. If it is true, the algorithms stops and extracts the local isosurface using the look-up table of the marching tetrahedra algorithm <ref type="bibr" target="#b17">[18]</ref>. Otherwise, the two children are visited recursively. If the algorithms stops on a specific tetrahedron T and refines another tetrahedron which shares the refinement edge, an inconsistency occurs at the hanging node xref(T ). This leads to cracks in the isosurface. Therefore, it is necessary to ensure that whenever a tetrahedron is refined, all tetrahedra sharing its refinement edge are refined as well. This can be achieved through definition of error indicators η on the refinement vertices, i.e. η(T ) = η(xref(T )), and choosing η(T ) &lt; ε as a stopping criterion for some user specified threshold value ε.</p><p>If the error indicator fulfills the saturation condition</p><formula xml:id="formula_1">η(T ) ≥ η(Ci(T )), i = 1, 2,</formula><p>for all T ∈ T l with l &lt; lmax, no hanging nodes can occur for all possible values of ε <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b22">23]</ref>. If an error indicator η does not fulfill this condition it can easily be adjusted in a preprocessing step. In a level-wise bottom up traversal of the hierarchy it is possible to construct a minimal saturated error indicatorη by settinḡ η(T ) := max{η(T ),η(C1(T )),η(C2(T ))}.</p><p>Furthermore, the traversal of the binary tree is also stopped locally if the tetrahedron is not a candidate for an intersection with the isosurface. In our case, it is checked whether the current isovalue is contained in the interval consisting of all data values inside the tetrahedron. This information can either be explicitly computed in a bottom-up traversal of the tree <ref type="bibr" target="#b21">[22]</ref> or obtained from already available error indicator values <ref type="bibr" target="#b6">[7]</ref>. This way, the complexity of the extraction algorithm is of the order of the output (i.e. the number of drawn triangles), nearly independent of the size of the input.</p><p>The shape of the extracted isosurfaces will greatly depend on the choice of the error indicator. There is a large variety of geometric error indicators that can be used to control tetrahedral grid refinement for visualization purposes <ref type="bibr" target="#b6">[7]</ref>. However, in general they don't allow to control possible changes in the topological structure of the isosurface, even if a conservative error measurement (e.g. based on the L∞-norm) is used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Critical Points</head><p>One important notion in topology is that of critical points. Critical points can be defined as points in space where an isosurface would change its genus or number of components. Since our data model is piecewise linear, critical points can only arise at vertices of the tetrahedral mesh. Note that this would not be true for octahedral meshes and trilinear interpolation.</p><p>The basic idea to incorporate topology preservation into our multiresolution algorithm is the following assumption: if an adaptive tetrahedral mesh contains all critical points, then any approximate isosurface is of the same genus as the corresponding isosurface on the finest resolution.</p><p>Critical points, however, have to be defined hierarchically based on the tetrahedral bisection hierarchy since non-critical points on the finest resolution can become critical with respect to a coarser resolution <ref type="bibr" target="#b1">[2]</ref>. Therefore, a refinement vertex is called a hierarchical critical point if the genus of an isosurface restricted to all tetrahedra sharing the refinement edge changes when the tetrahedra are refined. If an adaptive tetrahedral mesh contains all hierarchical critical points, topology preservation has been achieved.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Lookup-Tables</head><p>Although hierarchical critical points can be found in a preprocessing step, their identification should be done as efficiently as possible. To extract isosurfaces for isovalues f (xref) − τ and for f (xref) + τ (τ small), and to compare their connectivity would be a tedious and too time-consuming task. However, since the topology of the isosurface only depends on the relative ordering of the data values at the vertices of the tetrahedra surrounding the refinement edge, critical points can be identified quite efficiently based on look-up tables. In <ref type="bibr" target="#b22">[23]</ref>, however, an overly simplified and conservative table has been proposed which generates many unnecessarily refined tetrahedra.</p><p>Let us define the surrounding polyhedron of a refinement edge as the boundary of all adjacent tetrahedra sharing the edge. In our case of regular gridded data sets and recursive bisection, three types of polyhedra will arise: a triangulated cube, an octahedron, and a diamond (see <ref type="figure" target="#fig_1">Figure 2)</ref>. The cube will apply to tetrahedra of levels (l mod 3) = 0, the octahedron to levels (l mod 3) = 1, and the diamond to levels (l mod 3) = 2.</p><p>The m vertices of a surrounding polyhedron are marked with a + sign if the data value at the vertex is larger than the value at the refinement vertex, and with a − sign if it is smaller. The look-up table for each type of polyhedron consists of the 2 m possible cases and contains a bit indicating if the refinement vertex is critical or not. Simplified look-up tables can be constructed by the identification of all symmetry classes for the +/− bit-patterns of the different types of polyhedra and checking for criticality in each of these classes. <ref type="figure" target="#fig_2">Figure 3</ref> shows the resulting 25 classes for the cube. Not shown is case 1 where all vertices have the same sign which would lead to a local minimum or maximum which is always critical. The images show isosurfaces after refinement for an isovalue of f (xref). Critical points arise if two or more components of an isosurface have a (non-manifold) point connection at the refinement vertex in the middle of the cube. This is true for classes 4b, 5a, 5b, 7b, 8b, 12b, and 13. In these cases, changing the isovalue slightly in positive or negative direction would lead to different connectivities of the isosurface components.</p><p>The main symmetry classes are identical to the marching cubes look-up table <ref type="bibr" target="#b13">[14]</ref>, but special care has to be taken to include a few more subclasses. These subclasses arise since the endpoints of the refinement edge (from front-bottom-left to back-top-right) have different connectivity than the other vertices of the polyhedron.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Automatic Construction of Look-up Tables</head><p>Manual construction of look-up tables is of course potentially erroneous since subcases may easily be forgotten or wrongly classified. However, there is an efficient and exact way to construct look-up tables for an automatic identification of critical points automatically. It consists of the following four steps:</p><p>1. construct the edge graph of the polyhedron, 2. delete all edges between a + and a − node from the graph, 3. count the remaining connected components of the graph, 4. if the number of components is 1 or greater than 2, then the refinement vertex is critical.</p><p>As an example, let us consider the case shown for class 13 in <ref type="figure" target="#fig_2">Figure 3</ref>. The vertices of the cube are numbered front to back, bottom to top, left to right. This way, the signs of the vertices are given by − − + + + + −−. Note that the cube is triangulated and therefore every quadrilateral face of the cube has a diagonal edge as depicted in <ref type="figure" target="#fig_1">Figure 2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">edge graph for the cube:</head><formula xml:id="formula_2">− − + + + + − − − × − × × + × × + × × × × + × × + × × × × − × × × × − × × × × × × ×</formula><p>2. delete edges:</p><formula xml:id="formula_3">− − + + + + − − − × − × × + × + × × + × + × × − × × − × × ×</formula><p>3. count components (transitive hull):  The total running time of the algorithm is of order O(2 m • m 2 ) for each type of polyhedron. Of course, this computation has to run only once in case of regular grid refinement. Accordingly, for recursive bisection refinement, critical points will arise in 68/256 cases for the cube, in 8/64 cases for the octahedron, and in 400/1024 cases for the diamond.</p><formula xml:id="formula_4">− − + + + + − − − × − × × + × + × × + × + × × − × × × − × × × ×</formula><p>Critical points located on boundary of the data set do not need any special treatment. The existing lookup-tables can be used if missing vertices (respectively their signs) are mirrored across the boundary. This way, boundary critical points will also be classified correctly.</p><p>Note that this automatic construction of look-up tables is not restricted to regular grids, but can be applied to any irregular tetrahedral mesh generated by edge bisection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Critical Intervals</head><p>A straightforward way to incorporate topology preservation into the multiresolution isosurface extraction algorithm is to set error indicator values at hierarchical critical points to infinity (as proposed in <ref type="bibr" target="#b22">[23]</ref>). However, for a given isosurface only a subset of all critical points is really relevant and many tetrahedra would be refined needlessly.</p><p>Therefore, every critical point will be assigned a critical interval. The critical interval is defined as the range of isovalues for which the isosurface changes topology when the tetrahedra are refined at the critical point. With this information, the extraction algorithm is able to refine only at those critical points whose critical interval contains the current isovalue.</p><p>The for negative signs. Note that refinement edges whose endpoints have different signs never lead to critical points. In order to avoid missing critical points during the tree traversal, critical intervals have to be saturated similarly to the error indicator values. Each tetrahedron is assigned a critical interval which is defined as the critical interval of its refinement vertex. In a level-wise bottom-up traversal of the tetrahedral bisection tree, critical intervals are merged taking the upper and lower bounds of the intervals of the current tetrahedron and its two children.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Examples</head><p>In order to show the performance of the algorithm let us consider the zero set of the algebraic function</p><formula xml:id="formula_5">f (x, y, z) = x 2 + y 2 − ( 1 2 x + 1 2 y − z + 0.01) 2</formula><p>defined on [−1, 1] 3 sampled on a uniform 65 3 grid. This function has a strong diagonal singularity near the origin as can be seen in <ref type="figure" target="#fig_4">Figure 4</ref>. In <ref type="table" target="#tab_1">Table 1</ref> we compare the number of triangles for various geometric error threshold values ε (L∞-norm). Topology preservation will retain the original topology at a low triangle cost since the tetrahedral grid refinement can strongly adapt towards the singularity. Without topology preservation, this delicate structure will become lost for large error thresholds. As a second example we will consider the geometrically more complicated buckyball data set (courtesy of AVS). <ref type="figure" target="#fig_5">Figure 5</ref> shows isosurfaces for different geometric error threshold values and for without topology with topology <ref type="table" target="#tab_1">ε  preservation  preservation  0  59290  59290  1/64  25456  25464  1/16  7124  7528  1/4  1936  3503  1</ref> 374 3095  an isovalue where the data set inhibits a very complex topological structure. The values of ε and the corresponding triangle counts are listed in <ref type="table" target="#tab_2">Table 2</ref>. Without topology preservation the isosurface does not maintain the correct connectivity over different LODs (third image from the left in top row), or even completely falls apart (fourth image in top row). With topology preservation the original topology is exactly retained. In the latter case, however, the amount of geometric simplification is limited due to the high complexity of the topology which the isosurface exhibits nearly everywhere in space. After a certain LOD, increasing the geometric error threshold will not result in lower triangle counts any more. The lower bound will be reached for a tetrahedral mesh that consists of all hierarchically critical points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Performance</head><p>In this algorithm, the extraction speed per triangle is almost as fast as the rendering speed for a triangle on modern graphics workstations. In <ref type="bibr" target="#b5">[6]</ref> a combined extraction and drawing rate of up to 300.000 triangles per second for a single processor and up to 800.000 triangles per second for a multiprocessor machine have been reported. This speed can also be measured for our topologypreserving version since only one additional check (namely if the isovalue is contained in the current critical interval) is necessary for each tetrahedron during the tree traversal. Typical mesh simplification algorithms have lower simplification rates of at least 2-3 orders of magnitude <ref type="bibr" target="#b18">[19]</ref>.</p><p>Let us also take a look at the memory overhead. In addition to the data the error indicator values, the minmax bounds, and the critical intervals have to be stored for each refinement vertex up to the second finest resolution. In some cases, the minmax bounds can be derived from the error indicator and therefore don't need to be stored <ref type="bibr" target="#b6">[7]</ref>. However, with conservative quantization all additional information can be stored with roughly the same memory requirements as the data itself (see <ref type="bibr" target="#b5">[6]</ref>).</p><p>The preprocessing step for the computation of this information requires a single level-wise bottom-up traversal of the whole data set which takes at most a few seconds for the considered examples. If the data set is stored in traversal order, the necessary computations can even be done during the data reading phase.</p><p>As we have seen in the previous example, topology preservation will usually infer a limit on the minimum number of triangles in the isosurface mesh. Depending on the application, it might be desirable to further simplify the resulting triangle meshes leading to controlled changes of genus of the isosurface components.</p><p>While the original -non-topology preserving -multiresolution algorithm simplifies topology naturally, it does so in an uncontrolled fashion. In principle it would be possible to employ controlled topology simplifying triangle mesh reduction schemes such as filtering and resampling <ref type="bibr" target="#b8">[9]</ref>, or α-hulls <ref type="bibr" target="#b4">[5]</ref> in a postprocessing step of the isosurface extraction. However, these algorithms work in a bottom-up fashion on the extracted triangle mesh at the highest resolution and would therefore not meet our real-time performance constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Choices for Simplification</head><p>The topology preserving algorithm described in the previous section can easily be transformed into a controlled topology simplifying one. To this end, let us define a simplification weight w(xref) on all hierarchical critical points which indicates the importance of that particular point. The topology simplifying algorithm will then be able to discard those critical points which are not important, i.e. w(xref) &lt; δ where δ is a user-defined threshold.</p><p>This way, the user has complete control over topology simplification by the specification of a suited weight function w on the critical points together with a threshold δ. The actual values of the weight w at the hierarchical critical points can be precomputed together with the error indicator and the critical intervals.</p><p>An appropriate choice for the weight w strongly depends on the type of application and structure of the data set. Let us consider a few possibilities for the simplification weight:</p><p>• An obvious choice for w would be the size of the critical interval. This requires no extra computational effort in the presented framework. By a multiplication with the maximum gradient of all adjacent tetrahedra, one has an indicator for the amount of topological changes in the isosurface structure introduced by refinement of the tetrahedra surrounding the critical point.</p><p>• Another possibility would be the size of the corresponding local isosurface, i.e. the number of tetrahedra the family of isosurfaces within the critical interval would intersect with. This provides a control mechanism over the local geometric complexity.</p><p>• One could also choose bounds for the distance between isosurface components that are separated by the critical point, which of course makes only sense in the case of saddle points. This allows control of the geometric separation between surface components, i.e. disconnected components could be merged and simplified if the distance between them is small enough.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Example</head><p>An extensive comparison of simplification techniques for different applications would certainly exceed the limits of this paper. Therefore, we will here just consider a simple but characteristic example. Let us look at a typical bio-medical data set, the famous CT scan of a lobster (courtesy of AVS). In <ref type="figure" target="#fig_6">Figure 6</ref> we see that original isosurface (1089004 triangles) is very noisy. The topology preserving algorithm can reduce the number of triangles to 609893, but the noise in the data set will of course remain. Let us therefore define the weight function dependent on the size of the critical interval, w(xref) := |I(xref)|.</p><p>Topology simplification will then reduce these artifacts nicely and maintain the overall topological structure of the animal. The simplified isosurfaces provide visually better representations of the data set with only 367271 triangles for δ = 0.2 and 262357 triangles for δ = 0.7, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Concluding Remarks</head><p>We have shown how topology preservation and controlled topology simplification can be achieved in multiresolution isosurface extraction on hierarchical tetrahedral meshes generated by recursive bisection. Thereby, we did not focus on methods working on the isosurface triangle mesh but on the underlying 3D volume data set itself.</p><p>While we mainly considered tetrahedral meshes based on regular refinement in this paper, our topology considerations apply to more irregular tetrahedral meshes generated by bisection as well. Refinement methods for tetrahedral mesh generation can thereby consider the most critical points for insertion, whereas decimation methods will consider non-critical or less-critical points for removal. With appropriate modifications the methodology could be extended to handle other hierarchical tetrahedral meshes as well although this would probably require an identification of more cases and lookup tables.</p><p>Finally, the proposed methods may not only be important by themselves, but can also be used as a fast preprocessor to other algorithms which rely on a topologically consistent input mesh.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Decomposition of a tetrahedron by recursive bisection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>The three types of surrounding polyhedra which arise during the refinement. Refinement edges are bold-dashed, spoke edges are light-dashed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Topological classes for the cube.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>critical intervals are relatively easy to obtain. They are defined as I(xref) := [f (xref), min{f (x1), f (x2)}] for refinement edges whose endpoints x1 and x2 have positive signs, and as I(xref) := [max{f (x1), f (x2)}, f (xref)]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Isosurfaces of an algebraic function without (upper row) and with (lower row) topology preservation for varying error tolerances.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Isosurfaces of the buckyball data set without (upper row) and with (lower row) topology preservation for varying error tolerances.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Isosurfaces of the lobster data set: original, topology preserving and controlled topology simplified versions (from left to right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Triangle counts for the algebraic function for varying geometric error threshold values ε.</figDesc><table><row><cell>ε</cell><cell>without topology preservation</cell><cell>with topology preservation</cell></row><row><cell>0.0</cell><cell>395798</cell><cell>395798</cell></row><row><cell>0.01</cell><cell>153539</cell><cell>163818</cell></row><row><cell>0.05</cell><cell>29594</cell><cell>110101</cell></row><row><cell>0.1</cell><cell>12552</cell><cell>109981</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Triangle counts for the buckyball data set for varying geometric error threshold values ε.</figDesc><table /><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Automatic Generation of Multiresolution Boundary Representations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Andujar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ayala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Brunet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Joan-Arinyo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sole</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="87" to="96" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Topology Preserving Data Simplification with Error Bounds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="12" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Reconstruction of Topologically Correct and Adaptive Trilinear Isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ganovelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="399" to="418" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">MagicSphere: An Insight Tool for 3D Data Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="317" to="328" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Controlled Simplification of Genus for Polygonal Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;97</title>
		<meeting>IEEE Visualization &apos;97</meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="403" to="412" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Multiresolutional Parallel Isosurface Extraction based on Tetrahedral Bisection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
		<editor>M. Chen, A. Kaufman, and R. Yagel</editor>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer</publisher>
			<biblScope unit="volume">Graphics</biblScope>
			<biblScope unit="page" from="267" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Error Indicators for Multilevel Visualization and Computing on Nested Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Weikard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="363" to="373" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The Multilevel Finite Element Method for Adaptive Mesh Optimization and Visualization of Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grosso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lürig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;97</title>
		<meeting>IEEE Visualization &apos;97</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="387" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Controlled Topology Simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="171" to="184" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Survey of Surface Approximation Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;97 Course Notes</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Isosurface Generation using Extrema Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Itoh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yamaguchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;94</title>
		<meeting>IEEE Visualization &apos;94</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="77" to="83" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">View Dependent Isosurface Extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;98</title>
		<meeting>IEEE Visualization &apos;98</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="175" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Near Optimal Isosurface Extraction Algorithm using the Span Space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="73" to="83" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Local Bisection Refinement for n-simplicial Grids generated by Reflection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maubach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Sci. Comp</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="210" to="227" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">On Generating Topologically Consistent Isosurfaces from Uniform Samples. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Natarajan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="52" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Adaptive Projection Methods in Multiresolutional Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ohlberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="74" to="94" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Surface Mapping Brain Function on 3D Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Payne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Toga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="33" to="41" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Simplification, LOD and Multiresolution Principles and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics &apos;97 Tutorial Notes</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Octree-Based Decimation of Marching Cubes Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shekhar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Fayyad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cornhill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;96</title>
		<meeting>IEEE Visualization &apos;96</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="335" to="244" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Topological Considerations in Isosurface Generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="337" to="375" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Octrees for Faster Isosurface Generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="201" to="227" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Multiresolution Tetrahedral Framework for Visualizing Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;97</title>
		<meeting>IEEE Visualization &apos;97</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An Elaborate Ambiguity Detection Method for Constructing Isosurfaces within Tetrahedral Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Tang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="355" to="364" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
