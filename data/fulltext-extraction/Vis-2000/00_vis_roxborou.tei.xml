<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Tetrahedron Based, Least Squares, Progressive Volume Models with Application to Freehand Ultrasound Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Roxborough</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Arizona State University</orgName>
								<address>
									<postCode>85287-5406</postCode>
									<settlement>Tempe</settlement>
									<region>AZ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Arizona State University</orgName>
								<address>
									<postCode>85287-5406</postCode>
									<settlement>Tempe</settlement>
									<region>AZ</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Tetrahedron Based, Least Squares, Progressive Volume Models with Application to Freehand Ultrasound Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>In this paper we present a new method for the modeling of freehand collected three-dimensional ultrasound data. The model is piece-wise linear and based upon progressive tetrahedral domains created by a subdivision scheme which splits a tetrahedron on its longest edge and guarantees a valid tetrahedrization. Least squares error is used to characterize the model and an effective iterative technique is used to compute the values of the model at the vertices of the tetrahedral grid. Since the subdivision strategy is adaptive, the complexity of the model conforms to the complexity of the data leading to an extremely efficient and highly compressed volume model. The model is evaluated in real time using piece-wise linear interpolation, and gives a medical professional the chance to see images which would not be possible using conventional ultrasound techniques.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction and Background</head><p>Two dimensional ultrasound imaging has been used for over 30 years in medicine. It has the advantages of being inexpensive, non-intrusive, real-time and safe. In conventional 2-D ultrasound echography a clinician uses a hand held probe to acquire a series of grayscale images, known as B-scans. These B-scans are viewed on a CRT as they are being acquired, and may be saved to media for further investigation. In order to get a three-dimensional feel for the patient's interior, the clinician must move the scanner around the area of interest while viewing the monitor. By training and experience the operator is able to mentally construct a 3-D model of the region being scanned, and can concentrate his scanning accordingly. Since the 1970's, there have been attempts to construct ultrasound systems that can give actual threedimensional volumes <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b9">9]</ref>. There are two major approaches for this. One is to construct an actual mechanical device that will acquire all the B-scans into a known volume. The other approach is to allow the clinician to freely probe the patient with a traditional ultrasound machine, while recording each B-scan's position and orientation in space. In this approach, known as freehand 3-D ultrasound, the position and orientation information may be attained by any number of means. There have been systems developed which use mechanical arms, acoustic trackers, image to image registration, and electromagnetic trackers. See <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b9">9]</ref> for surveys of the history of three-dimensional ultrasound. Whichever system is used for freehand 3-D ultrasound, the result of a scanning session is a series of two-dimensional B-scans, along with their corresponding position and orientation (POSE) information. <ref type="figure" target="#fig_0">Figure 1</ref> shows a freehand system that can be inexpensively assembled from readily available hardware and software.</p><p>In this paper we only consider freehand 3-D ultrasound. Each B-scan acquired during a scanning session may be thought of as a collection of grayscale intensity values located in space. In order to model these scans many researchers have imposed a regular rectilinear grid around them, and then filled in individual voxel values from the ultrasound scan information <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b17">17,</ref><ref type="bibr" target="#b13">13]</ref>. One problem with these methods is that one must be able to choose an appropriate voxel size to fit the data. If the voxels are too large then much of the data acquired from the scans is ignored. However, if too small of a size is used then there will be many empty voxels. Since the scanned data will not always fall exactly on a voxel, some method of interpolation must be used in order to assign intensities to each voxel. Various methods used include nearest neighbor interpolation <ref type="bibr" target="#b0">[1]</ref>, radial basis function interpolation <ref type="bibr" target="#b17">[17]</ref>, and distance weighted interpolation <ref type="bibr" target="#b13">[13]</ref>. To avoid the problem of fitting the B-scan data to a regular grid, Prager et al. <ref type="bibr" target="#b15">[15]</ref> developed a system that can produce arbitrary 2-D slices from the B-scans independent of any voxels. Because this method is based upon the intersections of an arbitrary plane with the B-scans it will fail when there are no such intersections. A plane halfway between two parallel B-scans would then show up as empty.</p><p>In this paper we present a new method for the modeling of freehand 3-D ultrasound scanning data. We approach the problem as a trivariate scattered data approximation problem. See <ref type="bibr" target="#b10">[10]</ref> and <ref type="bibr" target="#b12">[12]</ref>. The domain is an arbitrary rectilinear box, which is broken down into a tetrahedral grid. A function approximating the B-scan data is constructed over this mesh. An approximated intensity value can be calculated at any location in the volume by means of linear interpolation within the desired point's enclosing tetrahedron. An iterative process is used to calculate the values at the vertices making up the tetrahedral grid. This method has the advantage that no a priori knowledge is needed about voxel resolution. Standard volume visualization methods can be used to view the model <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b8">8]</ref>, such as ray casting, isosurface extraction, and arbitrary slice plane extraction. The method is adaptive, based upon error tolerance criteria set by the user. This allows hierarchical and multiresolution models to be constructed. Also, the adaptivity property can help to guide the clinician to scan more in regions where more data may be needed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Progressive Tetrahedral Domains</head><p>At all times the domain must be a valid tetrahedrization. A tetrahedrization is valid if the union of all tetrahedra is the domain of interest and any two tetrahedra only intersect at a vertex, edge, face or not at all <ref type="bibr" target="#b11">[11]</ref>. For this method the initial domain is represented as a unit cube consisting of the six tetrahedra resulting from adding an edge from the origin (0, 0, 0) to its opposite corner (1, 1, 1), and adding additional diagonal edges across each of the cube's six faces (See <ref type="figure" target="#fig_1">Figure 2</ref>).  There have been various methods developed for subdividing simplicial grids <ref type="bibr" target="#b16">[16,</ref><ref type="bibr" target="#b7">7,</ref><ref type="bibr" target="#b2">2,</ref><ref type="bibr" target="#b3">3]</ref>. Grosso, et al <ref type="bibr" target="#b5">[5]</ref> used a common splitting technique known as red-green <ref type="bibr" target="#b2">[2,</ref><ref type="bibr" target="#b3">3]</ref>. In this paper we have used a technique based on bisecting a tetrahedron along its longest edge <ref type="bibr" target="#b16">[16,</ref><ref type="bibr" target="#b7">7]</ref>. The longest edge split method was developed by Rivara <ref type="bibr" target="#b16">[16]</ref>. Maubach <ref type="bibr" target="#b7">[7]</ref> has adapted the longest edge split method for the special case of the initial tetrahedral grid described above. This is the subdivision method which we use (See <ref type="figure">Figure  3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 3. A tetrahedron is to be split along its longest edge at the point AD, halfway between vertices A and D.</head><p>The following terminology will be used. Two tetrahdera are neighbors if they share a common face. A split neighbor of a tetrahedron t is a neighbor that shares t's longest edge. Note that there can be at most two split neighbors for any tetrahedron in a proper tetrahedrization. Two tetrahedra are compatibly divisible if they are mutually split neighbors, and if their common edge is the longest edge for both tetrahedra. Every tetrahedron belongs to a generation, where the generation is an integer referring to the tetrahedron's level of subdivision. Each of the six original tetrahedra making up the initial mesh belongs to generation 0. When a tetrahedron of generation n is split, it will produce two tetrahedra each belonging to generation n+1. The tetrahedron to be split is known as the parent, and the two resulting tetrahedra are called its daughters. The two daughters resulting from one parent are twins. Two tetrahedra are congruent if one of them can be made to exactly cover the other after any combination of the following affine transformations are performed: uniform-scaling, translation, rotation. A congruency class is a set of tetrahedra that are all mutually congruent.</p><p>Using the initial subdivision into six congruent tetrahedra described above, and with the longest edge splitting method, the following properties must hold <ref type="bibr" target="#b7">[7]</ref>:</p><p>All tetrahedra of a single generation belong to the same congruency class.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¡</head><p>No matter how many subdivisions are performed, all tetrahedra will belong to one of only three congruency classes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>¢</head><p>These three congruency classes are cyclic. Initially the tetrahedra of generation 0 belong to congruency class 0, those of generation 1 belong to congruency class 1 and those of generation 2 belong to congruency class 2. Then those of generation (0+x) belong to congruency class 0, those of generation (1+x) belong to congruency class 1, and those of generation (2+x) belong to congruency class 2. See <ref type="figure" target="#fig_2">Figure 5</ref>.</p><p>So when a tetrahedron is split, it is bisected into two equalvolume tetrahedra, each of which is congruent to its twin. In order to avoid cracks within the mesh a refinement step must be taken after each tetrahedral bisection. The cracking results when there is a violation of the triangulation criteria stated above for a proper tetrahedrization. A tetrahedron might intersect more than one other tetrahedron across a single face or single edge (See <ref type="figure">Figure 4</ref> ). This will give discontinuities when the function is evaluated across these tetrahedra. To prevent this from occurring Maubach devised a recursive refinement process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 4. The cracking problem. The tetrahedron T A,B,C,D consisting of vertices A,B,C,D has been bisected into the two tetrahedra T A,B,D,AC and T C,D,B,AC when the edge A,C is split at AC. The tetrahedron T A,E,C,D has not been split. This results in T A,E,C,D intersecting with two distinct tetrahedra across the face made up of vertices A,C,D, violating a validtetrahedrization criterion.</head><p>Here is pseudo-code for a routine called Refine adapted from <ref type="bibr" target="#b7">[7]</ref>, which works on a single tetrahedron t, and uses the procedure Bisect(t), which is the simple bisection of t along its longest edge as shown above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Refine(t)</head><p>BEGIN WHILE A split neighbor n i of t is not compatibly divisible DO Refine(n I ) END Bisect(t) FOR Each split neighbor n i of t DO Bisect(n i ) END END This process will terminate, giving a finite number of additional bisections. In addition, the split neighbors of t must be of the same generation of t, or one lower <ref type="bibr" target="#b7">[7]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Calculation of Vertex Values</head><p>The intensity values of the vertices making up the tetrahedrization may be calculated at any time by using a global least square error approximation. Let M = number of B-scan data points, N = number of vertices in mesh, Then the function to be minimized over all vertex intensities I i , is</p><formula xml:id="formula_0">I i = unknown intensity at vertex v i , d j = (x j , y j , z j ) = B-scan pixel location, S(v i ) =</formula><formula xml:id="formula_1">∑ j [∑ i (Ι i φ i (d j )-F(d j ))] 2</formula><p>The normal equations that characterize the optimal solution are</p><formula xml:id="formula_2">AI = b</formula><p>where A is an N x N Gram matrix, with elements</p><formula xml:id="formula_3">A i,j = ∑ k φ i (d k ) φ j (d k )</formula><p>And b is an N x 1 vector with elements</p><formula xml:id="formula_4">b i = ∑ k φ i (d k ) F(d k )</formula><p>and I = (I 1 , I 2 , … , I N ) is the N x 1 vector of unknown vertex intensities.</p><p>The location of any three dimensional point with respect to a given tetrahedron may be represented in barycentric coordinates <ref type="bibr" target="#b11">[11]</ref>.  </p><formula xml:id="formula_5">+ + + = i i i i i i i i i i i i T v T v T v T v T T v T T v T T v T T v j b b b b and v b v b v b v b d where i i i i T T T T v v v v</formula><formula xml:id="formula_6">         = otherwise 0 inside is if ) ( k T v T v T p b p B i k i .</formula><p>Using this definition we now have for the matrix elements above:</p><formula xml:id="formula_7">∑ ∑ ∩ ∈ = ∩ ∈ = = = M v S v S T k k k T v i M v S v S T k k T v k T v j i j i l l i j i l l j l i d F d B b d B d B A )) ( ) ( ( , 1 )) ( ) ( ( , 1 , ). ( ) ( and , ) ( ) ( .</formula><p>Often, in typical applications, there may be approximately a million vertices making up a tetrahedrization. That means the dimensions of the matrix might be on the order of 10^6 by 10^6. Therefore it is impractical to try to solve this system of equations using direct matrix inverse methods. Instead we use a modified version of the Gauss-Seidel iterative method to solve for the vertex values <ref type="bibr" target="#b6">[6]</ref>.</p><p>Although the matrix A might be very large it will be very sparse. The matrix itself never has to be stored. Instead all values may be calculated on an as needed basis, and all information needed to calculate the elements of A and B are stored within the mesh's data structure. By keeping a list with each vertex containing pointers to the tetrahedron which contain the vertex, and storing a list of pointers to the data point structures within each tetrahedron, all needed elements may be quickly calculated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">The Algorithm</head><p>The unit cube is initially subdivided into six congruent and equal sized tetrahedra by adding an edge from the corner at the origin of the cube, (0, 0, 0) to its far opposite corner at <ref type="figure" target="#fig_0">(1, 1, 1)</ref>, plus diagonal edges across each of the cube's faces [ <ref type="figure" target="#fig_1">Figure 2</ref>]. All B-scan values are then added to this cube. In order to place the three-dimensional position values from the ultrasound B-scans into a unit cube simple affine transformations are needed. This just involves uniform scaling and transformation of the sensor's position readings, so that all desired B-scan positions will fall within the unit cube. As each B-scan value is encountered it will be added to one of the six tetrahedra making up the cube. At this point its Cartesian coordinates with respect to the cube will be converted to barycentric coordinates with respect to its enclosing tetrahedron. After adding all the B-scan image values each tetrahedron will contain a list of structures, where the structure contains the four barycentric coordinate values of the data points and the corresponding intensity value. The modeling process is now ready to begin.</p><p>Any position within the mesh may be evaluated by simple interpolation, using barycentric coordinates with respect to the tetrahedron enclosing the position point. The approximated value for a point p within tetrahedron T having barycentric coordinates</p><formula xml:id="formula_8">b 1 , b 2 , b 3 , b 4 is . ) ( 4 1 ∑ = = i i i I b p I</formula><p>The mesh subdivision process is adaptive. This means we only want to split those tetrahedra that need to be split in order to satisfy some tolerance criteria. To decide upon the tetrahedra to be subdivided we do an initial solve of the least squares system, using the Gauss-Seidel method described above. The tetrahedra are then sorted according to their mean square error values, where the mean square error is calculated as In order to avoid excessively solving the least squares system we have found that marking the worst five percent of the tetrahedra to be split works well. These tetrahedra are each bisected, the data points from the parent tetrahedron are added to the proper daughter tetrahedron, then the least squares solution is again calculated. If the global error is within a prescribed tolerance then the process is complete, and the model is done. Otherwise the process is repeated.</p><p>After each set of tetrahedral subdivisions is performed a global root mean square error is calculated. If this error is less than a prescribed tolerance than the model is done. If the given global rms error tolerance is set too low, the subdivisions might never produce a model within the tolerance bound. To prevent this an upper bound on the number of tetrahedra produced should be given. Also, a limit on the smallness of tetrahedra is given, not allowing tetrahedra of more than a prescribed maximum generation to be subdivided. This minimum size of tetrahedra should be set according to the actual resolution achievable by the scanning device. Since the tetrahedron refinement process will only subdivide tetrahedra of the same or lower generation we do not have to worry about inadvertently splitting tetrahedra which do not satisfy the maximum generation bound during the refinement process.</p><p>The following is a pseudo-code description of the algorithm:</p><p>Initialize:</p><p>• set tol = user-defined global rms error tolerance When a parent tetrahedron is split into its twin daughter tetrahedra its data points must be correctly assigned to these children, and the new barycentric coordinates calculated. Due to the fact that a tetrahedron is always bisected across its longest edge into two equal-volume, congruent tetrahedra this is a simple process. <ref type="figure">Figure 6</ref> illustrates how this process works. We only need to compare the two barycentric coordinates corresponding to the vertices on the longest edge, b 0 b k . If b 0 &gt; b k the data point will belong to the daughter tetrahedron coming from the b 0 side of the parent tetrahedron. Otherwise it will belong to the other child tetrahedron. To update the barycentric coordinates within the new tetrahedra, we only need to perform one subtraction and one multiplication. See <ref type="figure">Figure 6</ref> for an illustration of this.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 6. The calculation of new barycentric coordinates for a point P in tetrahedra T A,B,C,D after bisection. If b A &gt; b D P will belong to tetrahedron T A,B,C,AD and will have the new barycentric coordinates (b A -b D ), b B , b C , 2b D . Otherwise it will belong to T D,C,B,AD and have the barycentric coordinates (b D -b A ), b C , b B , 2b A .</head><p>If a vertex has no support, meaning that no data points are contained within any of the tetrahedra sharing that vertex, then during the Gauss-Seidel solution phase there will occur a divide by zero situation. To avoid this we exclude all such vertices from the iterative solution process. This condition may occur when the B-scan data points are not distributed densely enough. We do not choose tetrahedra with fewer than two data points to be split. However, during the refinement process this condition may not be enforced, resulting in occasional unsupported vertices. Also, the volume being scanned does not need to cover the entire unit cube after transformation. During the subdivision process these vertices will not contribute to the solution, and will have no value. In order to have a complete model something must be done. These unsupported vertices could be given intensity values based on a weighted average of the nearest supported vertices. Alternatively, their values could be set by performing another global interpolation method using the supported vertices. We decided to take another approach here. Since ultrasound is used for medical diagnostic purposes it might be dangerous to set these intensity values when there is little actual data around them. So these vertices are marked as "bad". By coloring them red within the unit cube a clinician doing the ultrasound scanning will know to collect more data in those areas, and a new fit can be calculated.</p><p>When visualizing the data as arbitrary planes those parts that have no support can be blacked out. These measures will help prevent unwanted artifacts from showing up during the viewing phase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Results</head><p>We now present some results of our methods applied to actual data. We choose to base our examples presented here on a data set provided by Robert Rohling because this data set is typical of freehand ultrasound data. A similar data set is available at <ref type="bibr" target="#b14">[14]</ref>. The data set used here consists of 462 B-scan images being generated, each of size 84 by 102. (The original data was 335 by 408. We shrunk the image sizes by using a mean filter in because of memory constraints.) Using the position and orientation information from the six degrees of freedom tracker, each grayscale intensity value from the scan images was added to the domain unit cube. Models were then computed using various global rms error tolerances. <ref type="figure" target="#fig_8">Figure 7</ref> demonstrates the adaptive nature of the subdivision process, where the grid is finer where the data is present. In figure 8 five of the original B-scans are shown next to the images extracted from the various models at the exact same positions in space. Notice that the modeling process has smoothed out the noisiness of the original B-scans, acting as a low-pass filter.</p><p>Next we show images which result from taking an arbitrary two-dimensional slice through the model. These images do not need to correspond to any of the original B-scans, but are the result of evaluating the model by interpolating within the tetrahedra. These are images that a medical professional could not have seen without using 3-D modeling methods. In <ref type="figure" target="#fig_10">figure 9</ref> one can plainly see a cut away view of the carotid artery, which would not have been possible with normal 2-D ultrasound echography. From these images it is apparent that 3-D ultrasound could become a very powerful tool in medical diagnostics.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusion</head><p>Three dimensional ultrasound echography is poised to become a common diagnostic tool within the medical community. Freehand methods used to collect the data from existing ultrasound machinery could provide an inexpensive, nonobtrusive means of collecting this data. We have presented a unique way to model this data, using tetrahedral grids. This method has the advantage over other methods of being adaptive to the given data. Therefore no prior knowledge of voxel size is needed, and there is no wasted memory needed to save or transport the 3-D model.</p><p>We have presented this modeling method as a way to model freehand three dimensional ultrasound data. However there is no reason that the same method could not be used on other three dimensional scattered data problems. Some possible applications are seismic, oceanographic or weather data. We have not given any performance data on the present ultrasound application as our implementation is being continuously improved with the target of real-time rates on currently available PC's. .</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Collecting free-hand ultrasound data. In our lab, we use an Ascension Flock of Birds electromagnetic tracker to get position and orientation for each of the B-scans. We use the Stradx software provided by Cambridge University<ref type="bibr" target="#b14">[14]</ref> running on an SGI O2 to simultaneously sample the tracker and to collect an image from the video signal of conventional ultrasound scanning device.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>The unit cube initially subdivided into six congruent tetrahedra.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 .</head><label>5</label><figDesc>A single tetrahedron is bisected three times. Four generations of tetrahedra are shown, with the eight tetrahedra in the final generation being congruent to the original tetrahedron.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>collection of tetrahedra having v i as one of their vertices, φ i = is the piece-wise linear, basis function such that φ ι (v j ) = δ ij = (1, if i=j; 0 if i≠j) F(d j ) = B-scan intensity value at d j .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>In barycentric form the 3-D Cartesian point d j is represented as a linear combination of the four vertices making up any tetrahedron.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>of point d j corresponding to i v with respect to k T . If any of the barycentric coordinates are negative then the point does not lie within the tetrahedron. We may use a slightly modified version of barycentric coordinates as a substitute for the tent function φ that was defined in Cartesian coordinates above. Let</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>D</head><label></label><figDesc>is the number of data points within tetrahedron i T , and ) ( j d I is the interpolated value at j d .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>N</head><label></label><figDesc>is the number of tetrahedra in the mesh, and D is the number of B-scan data points in the mesh.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 .</head><label>7</label><figDesc>The top figure shows a sampling of the actual Bscans within the domain cube. The bottom figure shows the tetrahedral grid after subdividing. There are 26,552 tetrahedra, with 4,861 vertices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 .</head><label>8</label><figDesc>On the left are five actual B-scan images. Next to each is the corresponding image from the model. The rms error is 10.83. The grid contains 252,222 tetrahedra, with 40,578 vertices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 .</head><label>9</label><figDesc>The top image shows the orientation of a slice in relation to the original B-scan images (for clarity only one in four B-scan outlines is shown). On the bottom the slice image is shown. This illustrates the ability to interrogate the data (model) as desired. The original B-scans are collected approximately perpendicular to the carotid artery while the slice here shows an approximate lateral view.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Acknowledgments</head><p>We wish to acknowledge the support of the Office of Naval Research under grants N00014-97-1-0243 &amp; N00014-00-1-0281 and the support of the National Science Foundation under grant IIS 9980166. We also wish to thank Robert Rohling for sharing his data sets.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Barry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">P</forename><surname>Allott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">W</forename><surname>John</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Mellor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Three-Dimensional Freehand Ultrasound: Image Reconstruction and Volume Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Arundel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Thomson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Waterton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ultrasound in Medicine and Biology</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1209" to="1224" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Refinement Algorithms and Data Structures for Regular Local Mesh Refinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Bank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Sherman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Weiser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Computing</title>
		<editor>R. Stepleman</editor>
		<meeting><address><addrLine>Amsterdam</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983" />
			<biblScope unit="page" from="3" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Tetrahedral Mesh Refinement&quot;, Computing</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="355" to="378" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">3-D Ultrasound Imaging: A Review</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fenster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">B</forename><surname>Downey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Engineering in Medicine and Biology</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="41" to="51" />
			<date type="published" when="1996-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The Multilevel Finite Element Method for Adaptive Mesh Optimization and Visualization of Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grosso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lurig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 97</title>
		<meeting>Visualization 97<address><addrLine>Phoenix, AZ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Applied Numerical Methods for Digital Computation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Wolford</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Harper &amp; Row</publisher>
		</imprint>
	</monogr>
	<note>3 rd Edition</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Local Bisection Refinement for N-Simplicial Grids Generated by Reflection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Maubach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Scientific Computing</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="210" to="227" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Visualization of 3D Ultrasound Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">T</forename><surname>Elvins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="50" to="57" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pretorious</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">B</forename><surname>Fenster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Downey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Three Dimensional Ultrasound</title>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Lippincott Williams &amp; Wilkins</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Scattered Data Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="60" to="70" />
			<date type="published" when="1993-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Tools for Triangulations and Tetrahedrazations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
		<editor>Scientific Visualization, G. Nielson, H. Hagen, and H. Muller</editor>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Academic Press</publisher>
			<biblScope unit="page" from="429" to="526" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Volume Modelling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<editor>Min Chen, Arie Kaufman and Roni Yagel</editor>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Springer</publisher>
			<biblScope unit="volume">Graphics</biblScope>
			<biblScope unit="page" from="29" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Incremental Volume Reconstruction and Rendering for 3D Ultrasound Imaging</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ohbuchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SPIE 1808</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="312" to="322" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Prager</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gee</surname></persName>
		</author>
		<ptr target="http://svr-www.eng.cam.ac.uk/~rwp/stradx/" />
		<title level="m">The Stradx 3D Ultrasound Acquisition and Visualisation System</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">3D Ultrasound Without Voxels</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Prager</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Gee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Berman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Medical Image Understanding and Analysis</title>
		<meeting>Medical Image Understanding and Analysis</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="93" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Local Modification of Meshes for Adaptive and/or Multigrid Finite Element Methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Rivara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational and Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="79" to="89" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Radial Basis Function Interpolation for 3-D Ultrasound</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rohling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Berman</surname></persName>
		</author>
		<idno>CUED/F- INFENG/TR327</idno>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
		<respStmt>
			<orgName>Cambridge University Engineering Department</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
