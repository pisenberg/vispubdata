<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Scientific Visualization of Water Quality in the Chesapeake Bay</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Stein</surname></persName>
							<email>rstein@ncsa.uiuc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">M</forename><surname>Shih</surname></persName>
							<email>ashih@ncsa.uiuc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Pauline</forename><surname>Baker</surname></persName>
							<email>baker@ncsa.uiuc.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carl</forename><forename type="middle">F</forename><surname>Cerco</surname></persName>
							<email>cerco@homer.wes.army.mil</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><forename type="middle">R</forename><surname>Noel</surname></persName>
							<email>noel@tempest.wes.army.mil</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">National Center for Supercomputing Applications</orgName>
								<orgName type="institution">University of Illinois at Urbana-Champaign</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">U. S. Army Engineer Research and Development Center</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Scientific Visualization of Water Quality in the Chesapeake Bay</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>This paper describes our experience in designing and building a tool for visualizing the results of the CE-QUAL-ICM Three-Dimensional Eutrophication Model, as applied to water quality in the Chesapeake Bay. This model outputs a highly multidimensional dataset over very many timesteps-outstripping the capabilities of the visualization tools available to the research team. As part of the Army Engineer Research and Development Center (ERDC) Programming Environment and Training (PET) project, a special visualization tool was developed. This paper includes discussions on how the simulation data are handled efficiently, as well as how the issues of usability, flexibility and collaboration are addressed.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>The Chesapeake Bay is the largest and most productive estuary in the United States. With a surrounding population of about 15 million people, and a valuable place in the fishing industry, the Chesapeake Bay is a very important natural resource to the region. Population growth and the development of agriculture and industry in the area surrounding the bay have had a significant impact on this ecosystem.</p><p>Scientists at the U. S. Army Engineer Research and Development Center (ERDC) and the Environmental Protection Agency (EPA) have developed a computational model to help them understand the effects of pollutants and contaminants on the water quality of the Chesapeake Bay. This computational system allows scientists to validate and predict the water quality in the bay through dozens of constituents produced by the simulation.</p><p>Available commercial visualization tools are sometimes tedious to use for handling both the unique data format used by the computational model and the particular needs of the researchers. Therefore, a custom visualization tool was developed to accurately and efficiently deal with the data from this model, and to aid in analysis of the data by applying a set of visualization algorithms. Sample results are presented in this paper.</p><p>Before the development of this tool scientists used standard X-Y line graphs and simple 2-dimensional slices to visualize the model prediction. A previous tool called S.C.I.R.T., the Site Characterization Interactive Research Toolkit, <ref type="bibr" target="#b5">[6]</ref> was the first visualization tool which included 3-dimensional comparisons of model predictions and observed data. However this tool was limited in that it had no way of representing the vector data produced by the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Requirements</head><p>In developing a user-friendly visualization package tailored for the Chesapeake Bay water quality simulation project, we found that the user had several needs. First the tool needed to handle the specific data format of the simulation in a simple and efficient manner, and allow the user to apply a variety of visualization methods to the data. This implies the development and integration of various data conversion utility programs. Another purpose of this tool was the ability to use it for verifying the correctness of the computational model if needed. It should be able to view and analyze the computational domain as well as the physical domain, allowing the user to see areas that are possible errors in the computation. Next, the tool needed to be able to easily generate graphics for the user to include in various papers and presentations. Since members of the team studying this water quality problem were located at various sites across the country, the tool needed to support various methods of collaboration. Lastly, and most importantly, all of this functionality needed to be available to the user in an easily understood interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Numerical Domain</head><p>The numerical domain used in this simulation consists of 10196 grid cells. The computational model outputs more than 100 scalar variables, and more than 10 vector variables. A routine run of the computation covers a whole calendar year generating 365 timesteps, and larger runs have also been made projecting out 10 and 20 years into the future.</p><p>The cells for the simulation are hexahedral in shape and are non-uniform in the x and y dimensions but all cells are uniformly spaced in depth. The grid itself is unstructured in nature, however, the cells are arranged by water columns (i.e. neighbors along the z-axis have the same dimensions in x and y). This is to accommodate the water depth variation at each location. Coordinates of the grid cell vertices are stored as latitudes and longitudes with the depth in meters. The coordinate system was converted into a Cartesian system in meters for the convenience of visualization. Dimensions in X and Y are relatively larger than the one in Z (depth) direction. It thus makes the domain a very thin plate. In order to visualize the data within this domain more meaningfully, allowing the user to control the scaling in each direction was implemented.</p><p>Scalar constituent values are stored at the cell centers. In order to support visualization methods that require a continuous scalar field, such as isosurfacing, these values were also interpolated to the vertices of each cell. Vector constituent fields are supplied from the model, but their values reflect face-centered fluxes entering and exiting the cells. This is complicated by the fact that entering and exiting faces of a particular cell do not necessarily have the same geometry. In order to extract a meaningful vector field on which visualization methods could be applied, the first step is to find the surface normal of each face. This value is then used to decompose each face vector into its components and sum all components across the cell to obtain a correct cell-centered vector value ( <ref type="figure">Figure 1</ref>). In addition, each face-centered value was also normalized by the area of that face. Since the vector field was based on the flux through an individual cell's faces, cells with smaller surface area had vectors with very small magnitude relative to the larger cells, and were therefore difficult to see. Normalizing each vector by the area of the cell allows the scientist to quickly examine the vector field to ensure the correctness of the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1. Cell Centered Vector Field in Physical Domain</head><p>To facilitate visual detection of anomalies in the computational model, the user is allowed to toggle the display between computational and physical domains. The display of the computational domain is simply a grid with the same structure where each cell of the grid is of uniform shape and size. This is desirable since many of the domain cells in the rivers of the bay are very tiny and difficult to see in the physical domain. In the computational domain all cells are the same size so that errors, even in small river cells, are easy to detect <ref type="figure">(Figure 2</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Graphical User Interface (GUI)</head><p>As mentioned above, another important aspect in the design of this tool was that of the user interface. We based the current version of this interface on a library called the Fast Light Toolkit (FLTK) ( <ref type="figure">Figure 6</ref>). FLTK provides a very comprehensive collection of widget classes, such as buttons and sliders, which allows users to build the GUI quickly and easily. It provides a visual programming environment called FLUID. This makes it very easy to design the GUI visually, and to integrate effectively with C++ code.</p><p>Unfortunately, there exists no standard way to interface the graphics window of a VTK based application with FLTK. A subclass of one of the FLTK windowing classes was therefore developed. It allows developers to include the VTK graphics, and track the user's mouse and button events in the FLTK GUI windows. This allows a developer to take the full advantage of both packages <ref type="figure">(Figure 7</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Visualization</head><p>We chose to use VTK (the Visualization Toolkit) for developing the visual representations for the application. VTK is an open-source, freely available software system for computer graphics, image processing, and visualization. It supports hundreds of algorithms in visualization and image processing fields.</p><p>To facilitate the development of a dynamic and flexible visualization application, a general library API called the Visualization Generator (VisGen) was developed.</p><p>The Visualization Generator is a high level component for the development of 3D graphics applications. The VisGen library sits on top of VTK allowing the user to dynamically build VTK graphics pipelines for the production of interactive 3D scientific visualizations. The design of the VisGen is such that the implementation details of VTK are hidden from the novice user, but are available to experienced users for integration into complex applications and working environments.</p><p>The API of the VisGen is designed around a messagepassing scheme where messages pass from the application layer to the VisGen. As a result of these messages, the VisGen produces a set of graphical objects that are available to the application for rendering. Since these messages are simple strings, the API makes it very easy to use applications in a collaborative fashion where application states are shared between multiple users. In addition, this type of messaging also easily supports rapid prototyping of new data, remote visualization, and easy integration with components of the user interface.</p><p>For example, in this application, the FLTK GUI simply generates messages which are processed by VisGen to generate the resulting graphics.</p><p>The application supports a variety of visualization methods applied to both scalar and vector data. These methods include slicing planes, isosurfacing, a representation of the external shell of the domain, and vector fields <ref type="figure">(Figures 8, 11)</ref>. The user is allowed to view the results of any of these methods in both the physical and computational domains. In addition, depending on whether the user specifies cell-centered or vertex-centered data as input to a particular method, an appropriate representation is chosen if possible. <ref type="figure">(Figure 3</ref>.) Due to the actual dimensions of the domain (the main stem of the bay is about 300 km long and 8-48 km wide) the computational grids are relatively coarse. Consequently, the grid sizes may exceed the actual scales of the flow features as each cell face can be larger than 100 square kilometers. Therefore, the use of streamlines for visualizing the vector data may not always return meaningful results. The user can also specify a variety of color maps to apply to the representations allowing them more freedom in the final appearance of the image. In addition, there exists the ability to do custom titling, and color bars denoting the mapping of data to screen color are automatically positioned on the screen as each new dataset is added. For example, <ref type="figure">Figure 9</ref> shows 4 variables, each with their own color legend and <ref type="figure">Figure 10</ref> is a close-up view near the mouth of the bay.</p><p>We also experimented with building some functionality directly in OpenGL. <ref type="figure">Figure 4</ref> shows an initial version of a tool to display the transport flux data. Though the tool provided the functionality of visualizing the vector data, the coding itself was far more complicated and laborious compared to the similar implementation using VTK.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 4. Initial prototype of vector data visualization implemented using OpenGL</head><p>Because of the high level object-oriented nature of the VisGen library that we developed, the user can easily and intuitively add and remove different scalar and vector data fields for analysis. We call these DataNodes. Once a DataNode exists, the user can then apply any of the visualization methods available to this data. This generates a particular representation depending on the method, which is called a VisNode. The user is free to construct any combination of VisNodes and DataNodes to compose the image on the screen and can name each VisNode and DataNode as they like.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Collaboration</head><p>The core members of the research team are located in multiple buildings at their site and they collaborate with members who reside in another state. With the proliferation of the Internet and broadband access, we focus our collaboration efforts around Web-capable solutions to achieve this goal.</p><p>We experimented with sharing the visualization sessions across the network using existing conferencing software. On a notebook computer running Windows 98, NetMeeting was used while SGIMeeting was used on an SGI Octane running IRIX.. This visualization tool can be executed on the SGI and is shared between the PC and SGI workstations using existing software. Since conferencing software provides many salient features such as control authorization, which allows different participants to take control of the visualization tool, collaborative visualization can be achieved seamlessly and efficiently. <ref type="figure" target="#fig_2">Figure 5</ref> demonstrates the synchronized collaboration of the visualization tool.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>. Collaboration between Windows PC and SGI Workstations</head><p>To support the user's need for graphics to use in publications and presentations, we included a variety of ways of exporting the current graphics window. First, and most simply, we provided the ability to save the current screen as a JPEG compressed image. This works nicely so that saved images can be put directly on the web without further conversion.</p><p>We also did some experiments where the application itself acted as a web server. This means that a remote web browser could connect to a special port on the machine running the CbayVisGen and receive the applications current image using standard Server Push mechanism.</p><p>Of particular interest to the user was the ability to capture animations. This was made more difficult by the large number of timesteps in the computation, coupled with the large number of possible scalar and vector fields. Our tool incorporates this ability to play through animations and to capture QuickTime movies directly from the screen, for long numbers of timesteps and large resolutions. We have used the tool to capture animations at a resolution of greater than 1280 x 1024 with more than 365 timesteps.</p><p>Lastly, the tool gives the user the ability to capture the current visualization as a VRML file capable of being viewed in a standard web browser. This lets the user rotate the model of the bay and get a better feel for the spatial relationships. The tool also has the ability to export a file to a high quality renderer called RenderMan. This software can give high quality, production level renderings of these images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Result</head><p>The development of this tool has succesfully allowed the scientists to explore and interact with the output of their data model in a quick and easy manner. They have found this tool very useful in easily constructing visualizations for use in communicating their work to colleagues and sponsers, and in preparing graphics for different papers and sections of books they have written.</p><p>This tool has also proven useful in debugging the model simulation. With this tool, the scientists were able to visualize the transport flux data from the model. This ability was not available in any previously used tools. This new feature allowed them to clarify some doubts they had about boundary conditions near the upper regions of the bay. This tool helped them to understand how this boundary condition was formulated and also how it affected the numerical model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Summary</head><p>In conclusion, we have developed a comprehensive scientific visualization tool to handle the understanding and analysis of water quality in the Chesapeake Bay. Some problematic issues in efficiently handling and processing the data format from the computational model were resolved through this work, Also, a sophisticated system for dynamically generating visualizations of the data has been implemented. In addition, the development of the VisGen library allows for high-level, flexible control of the VTK graphics pipeline. Coupled with an easy-touse interface to the application, this allows the user a lot of control over the graphical representation of the data. Once the user has a representation he/she is pleased with, a wide variety of options are provided for how this can be used in presentation, or for sharing with remote colleagues. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 .Figure 3 .</head><label>23</label><figDesc>Computation vs. Physical Domains Vertex-Centered vs. Cell-Centered Slicing</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5</head><label>5</label><figDesc>Figure 5. Collaboration between Windows PC and SGI Workstations</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 .Figure 9 .Figure 8 .</head><label>698</label><figDesc>Graphical User Interface using FLTK Toolkit Figure 7. Binding Between FLTK and VTK allows the Development of a Comprehensive Package Complex Visual Composition of the Domain Combining a Slice Place of Salinity with Flow Vectors and an Isosurface of Dissolved Oxygen Figure 10. Close-up View near the Bay Mouth Figure 11. Slice and Isosurface Presentation</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>This work was carried out as part of the Programming Environment and Training component of the DoD High-Performance Computing Modernization Program.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://www.fltk.org" />
		<title level="m">Homepage for The Fast Light Toolkit (FLTK)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="http://www.kitware.com/vtk.html" />
		<title level="m">Homepage for The Visualization Toolkit (VTK)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The Design and Implementation of an Object-Oriented Toolkit for 3D Graphics and Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">M</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorenson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="93" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">M</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorenson</surname></persName>
		</author>
		<title level="m">The Visualization Toolkit</title>
		<imprint>
			<publisher>Prentice Hall PTR</publisher>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Three-Dimensional Eutrophication Model of Chesapeake Bay</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carl</forename><surname>Cerco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Cole</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Journal of Environmental Engineering</title>
		<imprint>
			<biblScope unit="page" from="1006" to="1025" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualization of water quality data for the Chesapeake Bay</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Adam</forename><surname>Forgang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">F</forename><surname>Cerco</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="417" to="420" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
