<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Constructing Material Interfaces From Data Sets With Volume-Fraction Information</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kathleen</forename><forename type="middle">S</forename><surname>Bonnell</surname></persName>
							<email>bonnell@cs.ucdavis.edu</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing (CIPIC)</orgName>
								<orgName type="department" key="dep2">partment of Computer Science</orgName>
								<orgName type="department" key="dep3">Davis</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<addrLine>De</addrLine>
									<postCode>95616-8562</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
							<email>schikore@ceintl.com</email>
							<affiliation key="aff1">
								<orgName type="department">Computational Engineering International, Morisville</orgName>
								<address>
									<postCode>27560</postCode>
									<region>NC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
							<email>joy@cs.ucdavis.edu</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing (CIPIC)</orgName>
								<orgName type="department" key="dep2">partment of Computer Science</orgName>
								<orgName type="department" key="dep3">Davis</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<addrLine>De</addrLine>
									<postCode>95616-8562</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Duchaineau</surname></persName>
							<email>duchaine@llnl.gov</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
							<email>hamann@cs.ucdavis.edu</email>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Image Processing and Integrated Computing (CIPIC)</orgName>
								<orgName type="department" key="dep2">partment of Computer Science</orgName>
								<orgName type="department" key="dep3">Davis</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<addrLine>De</addrLine>
									<postCode>95616-8562</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">‡ Center for Advanced Scientific Computing (CASC), Lawrence Liver-more National Laboratory, Livermore</orgName>
								<address>
									<postCode>94551</postCode>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Constructing Material Interfaces From Data Sets With Volume-Fraction Information</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Eulerian flow</term>
					<term>material boundary surface</term>
					<term>barycentric coordinates</term>
					<term>volume fraction</term>
					<term>Voronoi diagram</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a new algorithm for material boundary interface reconstruction from data sets containing volume fractions. We transform the reconstruction problem to a problem that analyzes the dual data set, where each vertex in the dual mesh has an associated barycentric coordinate tuple that represents the fraction of each material present. After constructing the dual tetrahedral mesh from the original mesh, we construct material boundaries by mapping a tetrahedron into barycentric space and calculating the intersections with Voronoi cells in barycentric space. These intersections are mapped back to the original physical space and triangulated to form the boundary surface approximation. This algorithm can be applied to any grid structure and can treat any number of materials per element/vertex.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>There are numerous instances in which it is necessary to reconstruct or track the boundary surfaces (or "interfaces") between multiple materials that commonly result from numerical simulations. Multi-fluid Eulerian hydrodynamics calculations require geometric approximations of fluid interfaces to form the equations of motion to advance these interfaces correctly over time. In typical simulations, the grid cells contain fractional volumetric information for each of the materials. Each cell C of a grid S has an associated tuple (α1, α2, ..., αm) that represents the portions of each of m materials in the cell, i.e., αi represents the fractional part of material i. We assume that α1 + α2 + • • • + αm = 1. Considerations in approacing this problem involve finding a (crack-free) piecewise two-manifold separating surface approximating the boundary surfaces between the various materials, as well as spatial and temporal smoothness.</p><p>To solve this problem, we consider the dual data set constructed from the given data set, as shown in <ref type="figure" target="#fig_0">Figure 1</ref>. In the dual grid, each cell is represented by a point (typically the center of the cell), and each point is associated with tuple (α1, α2, ..., αm), where m is the number of materials present in the data set and α1 + α2 + • • • + αm = 1. Thus, the boundary surface reconstruction problem reduces to constructing the material interfaces for a grid where each vertex has an associated barycentric coordinate representing the fractional parts of each material at the vertex. We use this "barycentric coordinate field" to approximate the material boundary surfaces.</p><p>Important applications of this problem occur for all grid types, e.g., when the data points lie on a rectilinear grid, curvilinear grid, or an unstructured grid. We therefore develop a solution strategy that is tailored to tetrahedral grids, as all other types of grid structures can be converted to this form, as demonstrated by Nielson <ref type="bibr" target="#b0">[1]</ref>. In the case of rectilinear, curvilinear, or even hybrid polyhedral meshes, we preprocess a given grid by subdividing each polyhedral cell into tetrahedra, and apply our algorithm to the resulting tetrahedral grid.</p><p>If we have a data set containing m materials, we process each tetrahedral cell of the grid and map our tetrahedral elements into an m simplex representing m-dimensional barycentric space. Next, we calculate intersections with the edges of Voronoi cells <ref type="bibr" target="#b1">[2]</ref> in the m-simplex. These Voronoi cells represent regions, where one material "dominates" the other materials locally. We map these intersections back to the original space and triangulate the resulting points to obtain the boundary.</p><p>Section 2 describes previous work dealing with material bound-ary surfaces. Section 3 describes the two-material case, which can be viewed as a simple extension of a marching cubes/tetrahedra algorithm <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b4">5]</ref>. Section 4 describes the three-material case. Here, material boundaries are calculated in barycentric space (a triangle) and mapped back to the original data set. The general m-material case is described in Section 5. In this case, intersections are calculated in a barycentric m-simplex and mapped back to the tetrahedra in the data set. Implementation details are described in Section 6. Section 7 presents results for various data sets, and Section 8 provides conclusions and describes possible future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The bulk of research in material interface reconstruction has been conducted in computational fluid dynamics (CFD) and hydrodynamics, where researchers are concerned with the movement of material boundaries during a simulation. The Simple Line Interface Calculation (SLIC) algorithm by Noh and Woodward <ref type="bibr" target="#b5">[6]</ref> is one of the earliest, describing a method for geometric approximation of fluid interfaces. Their algorithm is used in conjunction with hydrodynamics simulations to track the advection of fluids. Working only with two-dimensional grids, their algorithm produces an interface consisting of line segments, constructed parallel or perpendicular to a coordinate axis. Multi-fluid cells can be handled by grouping fluids together, calculating the interface between the groups, subdividing the groups, and iterating this process until interfaces are constructed. Since this algorithm only uses line segments that are parallel to the coordinate axes, the resulting interfaces are generally discontinuous.</p><p>The algorithm of Youngs <ref type="bibr" target="#b6">[7]</ref> also operates on two-dimensional grids and uses line segments to approximate interfaces. In this algorithm, the line segments are not necessarily perpendicular or parallel to a coordinate axis. Instead, the neighbor cells of a cell C are used to determine the slope of a line segment approximating an interface in C. The exact location of the line segment is adjusted to preserve the volume fractions in a cell. Multiple materials are treated by grouping materials and determining interfaces on a twomaterial basis. Again, the interfaces produced by this method are generally discontinuous.</p><p>The algorithm of Gueffier <ref type="bibr" target="#b7">[8]</ref> requires an estimate of the normal vector to the interface in order to reconstruct the interface. He utilizes finite differencing or least-squares methods to approximate this normal and adjusts a line segment perpendicular to this normal to generate a boundary surface in a cell. The surface is generally discontinuous, and it is unclear how multiple materials can be handled, or how one could generalize the algorithm to the case of three-dimensional grids.</p><p>Pilliod and Puckett <ref type="bibr" target="#b8">[9]</ref> compare various volume-of-fluid interface reconstruction algorithms, including SLIC, noting differences in the surfaces reconstructed and demonstrating first-order or second-order accuracy. Their goal is to reproduce a linear interface.</p><p>Nielson and Franke <ref type="bibr" target="#b9">[10]</ref> have presented a method for calculating a separating surface in an unstructured grid where each vertex of the grid is associated with one of several possible classes. Their method generalizes the marching cubes/tetrahedra algorithm, but instead of using a strict binary classification of vertices, it allows any number of classes. Edges in tetrahedral grids whose endpoints have different classifications are intersected by the separating surface. Similarly, the faces of a tetrahedron whose three vertices are classified differently, are assumed to be intersected by the surface in the middle of the face. When all four vertices of a tetrahedron have different classifications, the boundary surface intersects in the interior of the tetrahedron. The resulting "mid-edge", "mid-face" and "midtetrahedron" intersections are triangulated to form the surface.</p><p>Our algorithm generalizes the above schemes. We utilize a grid that has a barycentric coordinate associated with each vertex. This allows us to generate material boundaries directly from the intersections calculated in "barycentric space." Our algorithm handles multiple materials and can reconstruct layers and "Y-type" (nonmanifold) interfaces with equal ease. Our algorithm does not rely on application-specific knowledge of hydrodynamics or other simulation codes, but solves the problem from a purely mathematical viewpoint.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE TWO-MATERIAL CASE</head><p>Consider an unstructured two-dimensional grid S of triangles, where each vertex of S has an associated barycentric coordinate α = (α1, α2, ..., αn). Let T be a triangle of S, and assume that there are two distinct indices i1 and i2, such that for each vertex v of T , its associated barycentric coordinate has the property that αi 1 + αi 2 = 1, and αi = 0 when i = i1, i2. Then we assume that exactly two materials are contained in the triangle T .</p><p>In this case, we define the material boundary to be the set of points where αi 1 = αi 2 = 1 2 . 1 Using linear interpolation, we can find the point on each edge where αi 1 = αi 2 = 1 2 , and by computing these points on all edges of T , we can use a contouring algorithm to draw the boundary contour.</p><p>For unstructured three-dimensional grids of tetrahedra, the twomaterial case reduces to an isosurface calculation, determining the isosurface α1 = <ref type="bibr" target="#b0">1</ref> 2 , which can easily be implemented by a marching tetrahedra method <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">THE THREE-MATERIAL CASE</head><p>Let T be a triangle of S, and assume that there are three distinct indices i1, i2, and i3, such that for each vertex v of T , its associated barycentric coordinate has the property that αi 1 + αi 2 + αi 3 = 1, and αi = 0 when i = i1, i2, i3. In this case, we assume that potentially three materials are contained in the triangle T .</p><p>Without loss of generality, we will assume that n = 3, i1 = 1, i2 = 2, and i3 = 3. Thus, each vertex of T has an associated 3-tuple α = (α1, α2, α3), where α1 + α2 + α3 = 1. Here, α1 is the fraction of material m1, α2 is the fraction of m2, and α3 is the fraction of m3, respectively. The coordinate (α1, α2, α3) lies on the equilateral triangle with vertices (1, 0, 0), (0, 1, 0), and (0, 0, 1), as shown in <ref type="figure">Figure 2</ref>. We partition this triangle into three regions, defined by the Voronoi cells V1, V2, and V3, see <ref type="figure">Figure 3</ref>. The Voronoi cells Vj are bounded by the edges of the triangle, and the three line segments l12, l13, and l23, where α1 = α2 and α3 ≤ 1 3 , α1 = α3 and α2 ≤ <ref type="bibr" target="#b0">1</ref> 3 , or α2 = α3 and α1 ≤ 1 3 , respectively. For two-dimensional triangular grids, we map the associated barycentric coordinates of a triangle T onto a triangle T in barycentric space. We use the intersections of the edges of T with the edges of the Voronoi cells in the barycentric triangle to define material interfaces in T . These intersections are then mapped back to points in T , using the same linear parameters to determine the intersections on the edges of T . There are three cases:</p><p>• The triangle T does not intersect l12, l13, or l23. In this case, we assume that no material boundary exists in T .</p><p>• The triangle T intersects at least one of the line segments l12, l13, or l23, and the center c of the barycentric triangle does not lie inside T . In this case, we calculate intersections on the edges of T , corresponding to the intersections of T with l12, l13, and l23, respectively. (The triangle T may intersect at most two of these lines.) The material boundary line segments</p><formula xml:id="formula_0">¢ ¡ ¤ £ ¦ ¥ § ¡ © ¥ § ¡ ! # " $ &amp; % ( ' ) % 0 ' § 1 § 2 3 &amp; 4 ( 5 § 6 7 5 ) 4 9 8 @ B A 9 C ) D 0 C ) D 9 E</formula><p>Figure 2: Domain triangle in barycentric m1m2m3-space. inside T are then defined as the line segments that connect the corresponding edge intersections in T . <ref type="figure">Figures 4a and 4c</ref> illustrate these cases.</p><formula xml:id="formula_1">½ ¼ ¼μ ¼ ½ ¼μ ¼ ¼ ½µ Ð½¾ Ð¾¿ Î ½ Î ¾ Î ¿ Ð ½¿</formula><p>• The point c lies inside T . In this case, we calculate three edge intersections for T , corresponding to the intersections of T with l12, l13, and l23, respectively, and a point in the interior of T , corresponding to the point c in T . The material boundary line segments are defined as the three lines connecting the edge intersections and the face point. <ref type="figure">Figure 4b</ref> illustrates this case.</p><p>If one of the αi values is zero for each of the three vertices of a triangle, then all points map to an edge of the barycentric triangle. Thus, the situation reduces to the two-material case. If only one material is present at all three vertices, then no intersections are calculated.</p><p>For three-dimensional tetrahedral grids, we use the associated barycentric values of the vertices of each face of a tetrahedron T and map the tetrahedron to an image T of T in barycentric space. Intersections are calculated separately for each face of T and mapped back to T . There are three cases:</p><p>• No edge of the tetrahedron T intersects the line segments l12, l13, or l23. In this case, no material boundaries exist in the tetrahedron T .</p><p>• The edges of the tetrahedron T intersect at least one of the line segments l12, l13, or l23, but the point</p><formula xml:id="formula_2">( 1 3 , 1 3 , 1</formula><p>3 ), the center of the barycentric triangle, does not lie inside any of the faces of T . In this case, we calculate the intersection line segments for each triangular face of T and determine a triangulation from these segments by following the marching tetrahedra algorithm <ref type="bibr" target="#b4">[5]</ref>. <ref type="figure">Figures 5a and 5b</ref> illustrate the possible cases. • The center point of the barycentric triangle lies inside two faces of T . In this case, two faces have a single material boundary line segment connecting two edge intersection points, and two faces have three material boundary line segments meeting in the interior of two faces. We map the intersections back to the tetrahedron T , using linear interpolation. Using the material boundary line segments for each face, and the line segment connecting the two points in the interior of two faces of T , we can determine a valid triangulation of the boundary surface. <ref type="figure">Figure 5c</ref> illustrates this case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE GENERAL CASE</head><p>In the case of four materials, we can assume that each vertex of a triangle T has an associated barycentric coordinate given by a fourtuple α = (α1, α2, α3, α4), where α1 + α2 + α3 + α4 = 1, and αi ≥ 0. By considering the tetrahedron having vertices (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), and (0, 0, 0, 1) in four-dimensional space, we can construct a partition of this tetrahedron similar to the threematerial case. Again, we use the Voronoi cells for the decomposition of the barycentric tetrahedron. The boundaries of these cells include parts of the faces of the tetrahedron and six planar pieces, which are defined by α1 = α2, α1 = α3, α1 = α4, α2 = α3, α2 = α4, and α3 = α4. This Voronoi partition is shown in <ref type="figure" target="#fig_2">Figure 6a</ref>. For two-dimensional grids, we map the four-dimensional barycentric coordinates associated with the vertices of a triangle T into a triangle T in barycentric space. We use a clipping algorithm to generate the intersections in the triangle T , clipping against the six planes defining the boundaries of the Voronoi cells of the barycentric tetrahedron. The tetrahedron is stored in a binary space partitioning (BSP) tree, and we apply the clipping algorithm described by Samet <ref type="bibr" target="#b10">[11]</ref> . Once the intersections are determined by the clipping algorithm, the material boundary line segments can be determined for the triangle T .</p><p>For three-dimensional tetrahedral grids, we use a similar clipping algorithm for the image T of a tetrahedron T . This enables us to calculate the boundary surfaces inside the tetrahedron T , which we then map back to the tetrahedron T in physical space.</p><p>In the general case of m materials, we map a tetrahedron T to a tetrahedron T in an m-simplex in barycentric space. The msimplex is partitioned into Voronoi cells whose boundaries consist of the faces of the m-simplex and the m 2 hyperplanes defined by αi = αj, where i = j and 1 ≤ i, j ≤ m. The material boundaries for T are calculated by using a clipping algorithm and then are mapped back to physical space to form the material boundaries inside T . We utilize a BSP algorithm to perform the clipping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DISCUSSION</head><p>The algorithm runs in effectively the same time as does the marching cubes/tetrahedra algorithm. We traverse the cells of a grid and calculate, for each cell, a polygonal representation of the material boundaries. Most grid cells in common examples contain only one material, and boundaries do not exist in these cells. We note that the algorithm can miss material boundaries in tetrahedra. In any isosurface-type algorithm, it is possible for the isosurface to enter a tetrahedron, but only intersect one edge. In this case, the algorithm cannot detect the material boundary from only the information at the vertices.</p><p>In the three-material case, we have chosen the point c = ( 1 3 , 1 3 , 1 3 ) as the "center" of the barycentric triangle. This assumes that there are three distinct sectors in the barycentric triangle, subdividing the triangle in a "Y" fashion, and that a cell of infinitesimally small size contains about one-third of each material in the cell. This is not always the case. For example, consider a "T intersection," where any small cell would contain one-half of one material and one-quarter of the other two materials. We can adjust our segmentation of the barycentric triangle so that the point c is at an arbitrary location in the triangle, and the edges that determine the intersections can be adjusted appropriately. This can be done by sampling in a larger neighborhood of a specific cell to understand how to weigh the materials about the "Y point." This is a global process: neighboring cells must agree with the change in order to maintain continuity.</p><p>In the four-material case, the center of the tetrahedron can also be adjusted. However, this implies that the "center" vertices on the faces must also be adjusted so that the separating surfaces remain planar. In the m-material case, similar considerations also hold when adjusting the center of the m-simplex.</p><p>Our algorithm can be considered as a direct generalization of the Nielson-Franke algorithm <ref type="bibr" target="#b9">[10]</ref>. Each vertex of a grid S has an associated barycentric coordinate α = (α1, α2, ..., αm), and by restricting material fractions such that exactly one αi = 1, we obtain the case where each vertex is only associated with one material. In this case, our algorithm produces the results produced by the Nielson-Franke algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS</head><p>We have implemented this algorithm and used it to generate material interfaces for a variety of data sets. <ref type="figure" target="#fig_3">Figure 7</ref> illustrates the material interfaces for a data set consisting of three materials. The boundary of the region containing material 1 has a spherical shape, and the other two material regions are formed as concentric layers around material 1 -forming two material interfaces. The original grid is rectilinear-hexahedral consisting of 64 × 64 × 64 cells. We constructed the dual grid, and then split each dual cell into six tetrahedra, see Nielson <ref type="bibr" target="#b0">[1]</ref>, creating 1,572,864 tetrahedra. Approximately 30% of the tetrahedra containing the material boundaries contain two boundary surfaces. <ref type="figure" target="#fig_4">Figure 8</ref> shows the material interfaces for a three-material data set of a simulation of a ball striking a plate consisting of two materials. The original data set is rectilinear-hexahedral and has a resolution of 53 × 23 × 23 cells. Again, we created the dual grid, and split each dual cell into six tetrahedra, creating 28,037 tetrahedra. The data set is time-varying and four time-steps are shown.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSIONS</head><p>We have presented a new algorithm for material boundary surface reconstruction from data sets containing material volume-fraction information. We transform a given grid to a dual grid, where each vertex has an associated barycentric coordinate that represents the fractions of each material present. After tetrahedrizing the dual grid, we construct the material interfaces by mapping each tetrahedron to barycentric space, calculating the intersections with Voronoi cells in barycentric space. These intersection points are mapped back to physical space and triangulated to form the resulting boundary surface.</p><p>The algorithm can treat any number of materials per cell, and since it is based on tetrahedral grids, it can be used with any grid structure.</p><p>Concerning future work, we would like to insert a "measure-andadjust" feature to the algorithm. Once an initial boundary surface approximation is calculated, we calculate (new) volume fractions for cells directly from this boundary surface. This will enable us to calculate the difference between the original volume fractions and the volume fractions as implied by our initial boundary surface approximation. It is then possible to adjust our material interfaces to minimize the volume fraction deviations.</p><p>We also plan to extend this algorithm to multidimensional grids.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Grid and dual grid: The original grid (dashed lines) is replaced by a dual grid (solid lines), obtained by connecting the centers of the original elements. Barycentric coordinates are associated with each vertex of the dual grid. The barycentric coordinates represent the fractions of each material present in the original grid cells.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :Figure 4 :Figure 5 :</head><label>345</label><figDesc>Partitioning the barycentric triangle into regions. The point c is the point ( 1 3 , 1 3 , 1 3 ), the center of the triangle. l12, l13, and l23 bound the Voronoi cells Vj in the interior of the triangle. Mapping intersections from barycentric space to the triangle T : The images on the left show the triangle T in barycentric space, and the images on the right show the material boundary line segments mapped from barycentric space to the original triangle T in physical space. Examples of material boundary surface determination for tetrahedral grids.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 6 :</head><label>6</label><figDesc>Voronoi cell decomposition in the four-material case: The figure illustrates a three-dimensional projection of the barycentric tetrahedron from four-dimensional space. The tetrahedron is segmented into four Voronoi cells in (a). In (b), a tetrahedron, mapped from physical space, is shown inside the barycentric tetrahedron.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 7 :</head><label>7</label><figDesc>Boundary surfaces of two materials formed as two concentric spherical "shells".</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 :</head><label>8</label><figDesc>Simulation of a projectile striking a thick plate. The picture in the upper-left corner shows the initial configuration, and the following sequence of pictures shows the boundary surfaces as the projectile penetrates the two-material plate.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>Brain data set. The material boundary surfaces are shown in red, green and yellow. The polygons forming the material boundaries are clipped to show the interior of the data set. Two views of the material boundary surfaces are shown in (a) and (b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9</head><label>9</label><figDesc>illustrates the material interfaces for a human brain data set. The original grid is rectilinear-hexahedral containing 256 × 256 × 124 cells. Each cell contains a probability tuple giving the probability that each material is present at the point. The three types of material are white-matter, grey-matter, and 'other'. The resulting dual data set contains over eight million tetrahedra.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">The rationale behind this decision is that an infinitesimally small cell whose center is on the boundary will contain approximately half of each material.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">ACKNOWLEDGMENTS</head><p>This work was performed under the auspices of the U.S. Department of Energy by Lawrence Livermore National Laboratory under contract no. W-7405-Eng-48. It was also supported by the National Science Foundation under contracts ACI 9624034 and ACI 9983641 (CAREER Awards), through the Large Scientific and Software Data Set Visualization (LSSDSV) program under contract ACI 9982251, and through the National Partnership for Advanced Computational Infrastructure (NPACI); the Office of Naval Research under contract N00014-97-1-0222; the Army Research Office under contract ARO 36598-MA-RIP; the NASA Ames Research Center through an NRA award under contract NAG2-1216;</p><p>the Lawrence Livermore National Laboratory under ASCI ASAP Level-2 Memorandum Agreement B347878 and under Memorandum Agreement B503159; and the North Atlantic Treaty Organization (NATO) under contract CRG.971628 awarded to the University of California, Davis. We also acknowledge the support of ALSTOM Schilling Robotics, Chevron, General Atomics, Silicon Graphics, and ST Microelectronics, Inc. We would like to thank Randy Frank of the Center for Applied Scientific Computing at Lawrence Livermore National Laboratory for supplying several of the data sets presented in this paper. We also thank the members of the Visualization Group at the Center for Image Processing and Integrated Computing (CIPIC) at the University of California, Davis for their support.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Tools for triangulations and tetrahedrizations and constructing functions defined over them</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Visualization: Overviews, Methodologies, and Techniques</title>
		<editor>G. M. Nielson, H. Hagen, and H. Müller</editor>
		<meeting><address><addrLine>Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="429" to="525" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Okabe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Boots</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sugihara</surname></persName>
		</author>
		<title level="m">Spatial Tesselations -Concepts and Applications of Voronoi Diagrams</title>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Marching cubes: a high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;87 Proceedings</title>
		<editor>M. C. Stone</editor>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The asymptotic decider: Removing the ambiguity in marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;91</title>
		<meeting>IEEE Visualization &apos;91</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="83" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Multiresolution tetrahedral framework for visualizing regular volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<editor>R. Yagel and H. Hagen</editor>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1997-11" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">SLIC (Simple line interface calculation)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">F</forename><surname>Noh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Woodward</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Lecture Notes in Physics</title>
		<editor>A. I. van der Vooren and P. J. Zandbergen</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1976" />
			<biblScope unit="page" from="330" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Time-dependent multi-matreial flow with large fluid distortion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Youngs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Numerical Methods for Fluid Dynamics</title>
		<editor>K. W. Morton and J. J. Baines</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1982" />
			<biblScope unit="page" from="273" to="285" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Volume-of-fluid interface tracking with smoothed surface stress methods for three-dimensional flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gueyffier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nadim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scardovelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zaleski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">152</biblScope>
			<biblScope unit="page" from="423" to="456" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Second-order accurate volume-of-fluid algorithms for tracking material interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Pilliod</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">G</forename><surname>Puckett</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
		<respStmt>
			<orgName>Lawrence Berkeley National Laboratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">technical report</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Computing the separating surface for segmented data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;97</title>
		<editor>R. Yagel and H. Hagen</editor>
		<meeting>IEEE Visualization &apos;97<address><addrLine>Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="229" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The Design and Analysis of Spatial Data Structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Series in Computer Science</title>
		<imprint>
			<date type="published" when="1990-04" />
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
	<note>reprinted with corrections ed.</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
