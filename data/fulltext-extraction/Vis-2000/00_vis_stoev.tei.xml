<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Extracting Regions of Interest Applying a Local Watershed Transformation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stanislav</forename><forename type="middle">L</forename><surname>Stoev</surname></persName>
							<email>sstoev@gris.uni-tuebingen.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Straßer</surname></persName>
							<email>strasser@gris.uni-tuebingen.de</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Tübingen</orgName>
								<orgName type="institution" key="instit2">WSI/GRIS</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<address>
									<addrLine>Morgenstelle 10 C9</addrLine>
									<postCode>72076</postCode>
									<settlement>Tübingen</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory">Segmentation; Biomedical Image Segmentation; Watershed Trans-formation</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Extracting Regions of Interest Applying a Local Watershed Transformation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.4.6 [Image processing and computer Vision]: Segmentation</term>
					<term>I.4.6 [Image processing and computer Vision]: Reconstruction</term>
					<term>I.5.3 [Pattern recognition]: Clustering</term>
					<term>J.3 [Life and Medical Sciences]: Medical Information Systems</term>
					<term>Computer Vision</term>
					<term>Image Processing</term>
					<term>Data Visualization</term>
					<term>Volume Visualization</term>
					<term>Feature Extraction</term>
					<term>Morphological</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: The region extraction pipeline: a Selection of a region of interest (ROI). b Performing a simple edge detection. c Flooding the relief applying the proposed local watershed transformation. d The result: a set of basins covering the entire ROI.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction and Related Work</head><p>The extraction of meaningful regions from image and volume data continues to be an important and unsolved topic in the image analysis and image processing area. In the past years, the watershed transformation <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b11">12]</ref> has proven to be a very useful and powerful tool for morphological image segmentation. Since its introduction in <ref type="bibr" target="#b0">[1]</ref>, it is becoming more and more popular in different science areas like biomedical, medical image processing <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b14">15]</ref>, computer vision and segmentation <ref type="bibr" target="#b19">[19]</ref>, even mesh segmentation <ref type="bibr" target="#b6">[7]</ref> etc.</p><p>The idea of the watershed transformation is quite simple. A (gradient magnitude of a) gray-scale image or volume is considered as a topographic relief <ref type="bibr" target="#b18">[18]</ref>. Each pixel in this digital image is assigned during the transformation to the catchment basin of a regional minimum. The catchment basin of a regional minimum is defined as the area, in which the pixels hit by a rain-drop will cause the rain-drop to flow to the regional minimum. In this way, influence zones for each of the (ev. pre-determined <ref type="bibr" target="#b7">[8]</ref>) regional minima are defined. The watershed lines are now the lines separating influence zones from each other.</p><p>An immersion based watershed algorithm was first proposed by Beucher and Lantuéjoul <ref type="bibr" target="#b1">[2]</ref>. In <ref type="bibr" target="#b7">[8]</ref> and <ref type="bibr" target="#b2">[3]</ref> couple of techniques and algorithms related to the problem of watershed computing are described. In his work <ref type="bibr" target="#b7">[8]</ref>, Meyer defines the watershed transformation in the continuous and in the digital space in terms of a distance function, called topographic distance. One of the classical algorithms for computing the watershed transformation for a gray-scale image is also found in this work. The author predetermines the regional minima (single pixels or plateaus) and starts the flooding process at these minima <ref type="bibr" target="#b7">[8]</ref>.</p><p>Another approach for computing the catchment basins is described in <ref type="bibr" target="#b18">[18]</ref>. The authors simulate flooding with water, coming up out of the ground and defining the catchment basins without predetermining the regional minima. This approach processes all image pixels in a sorted order, such that pixels with lower altitude are processed first. The preprocessing step here consists of sort-ing all (pointers to) pixels in an array. Utilizing a First-In-First-Out (FIFO) structure, the pixels at altitude h+1 are processed after those at altitude h. This divides the problem into m subproblems, where m is the number of all present pixel altitudes. Due to the processing of pixels at altitude h in every iteration, the problem is reduced to computing the geodesic skeleton of influence zones (SKIZ).</p><p>In order to achieve a meaningful segmentation, the watershed transformation is in general performed on gradient images. Since in these pre-processed images the gradient maxima are more often than not (watershed) lines, surrounding homogenous regions.</p><p>A disadvantage of the watershed transformation as described in the literature is that it is a global transformation, hence it requires the processing of the entire input data. However, the goal of the segmentation is often the extraction of only a single region of interest (ROI) out of a given image/volume data. Especially when volume data is considered, the process of computing the watersheds is very time and memory consuming step.</p><p>Furthermore, the extraction of a sole catchment basin does not provide sufficient results. Since the global watershed transformation produces in general heavily over-segmented results, a sole catchment basin is often meaningless for the segmentation of a region of interest. On the other hand, the correct contours are most of the time present in the transformed image. Thus, an additional task after applying the global watershed transformation has to be performed: the computed catchment basins have to be merged appropriately. Various approaches for accomplishing this task are described in the literature and are based on gradient-watersheds on graphs <ref type="bibr" target="#b18">[18]</ref>, basin dynamics <ref type="bibr" target="#b12">[13]</ref>, markers <ref type="bibr" target="#b8">[9]</ref>, inclusionary and exclusionary cues <ref type="bibr" target="#b3">[4]</ref>, image component labelling <ref type="bibr" target="#b9">[10]</ref>, and multi scale gradient analysis <ref type="bibr" target="#b4">[5]</ref>. In practice, however, it is very difficult to define sound criteria for all objects in the image. Therefore, the definition of local merging criteria, matching the attributes of a given ROI, yields a sound solution of this problem.</p><p>In this paper, we present a new approach for locally applying the watershed transformation. We first describe how a single basin can be extracted without completely computing the watershedtransformed and without pre-processing the input data. Afterwards, this methods is generalized to the case, where a user makes a coarse region selection, which is flooded and the basins within the selected ROI are merged. These selected basins are now utilized to derive threshold values for a set of merging criteria, which will be discussed later in this work. Thus, a sort of controlled basin growth is performed based on both the regular input data and its gradient magnitude transformed. This makes it possible to precisely define the merging criteria for the object of interest, rather than for the entire input data.</p><p>The remainder of this paper is organized as follows. In the next section we describe how the watershed transformation is applied locally, without pre-processing the input data, in order to extract one single basin. In Section 2.2, the processing of the user input is discussed and how this data is utilized for deriving the thresholds for basin merging. The four merging criteria are described in detail in Section 3, their evaluation in Section 4, and their application during the basin growth in Section 5. Finally, in Section 6 we present results produced with the proposed technique. Sections 7 and 8 include topics of future work and offer concluding comments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Local Watershed Transformation</head><p>Unlike the standard watershed algorithms, the aim of the approach described in this section is to provide a strategy for basin computing, which does not require pre-processing or other global information about the data. Unfortunately, all approaches described in the literature require such pre-processing steps, in order to either sort all pixels of the input image <ref type="bibr" target="#b18">[18]</ref>, to pre-compute the local minima from where the basins are flooded <ref type="bibr" target="#b7">[8]</ref>, or to introduce a metric for pixels with equal altitude: plateau pre-computing <ref type="bibr" target="#b10">[11]</ref>. The last approach seemed to us to be the most suitable for modification toward developing a local working basin extraction technique. Unfortunately, the authors of <ref type="bibr" target="#b10">[11]</ref> concentrate on the parallelization and neither on the local applicability of the proposed approach, nor on the processing of large data sets (i.e. volume data). However, since the plateau computing can be performed only when this is required (i.e. a plateau is reached), we utilize a modified version of this technique in our algorithm. In the pre-processing step required in <ref type="bibr" target="#b10">[11]</ref> the entire input data is traversed. This makes the approach time and memory consuming, when applied on large volume data sets. Moreover, the authors of <ref type="bibr" target="#b10">[11]</ref> do not sort the outdoors of a plateau, before it is flooded, hence an error is introduced compared with the immersion based watershed algorithms (see below). Finally, a second error source is introduced due to the arbitrary choosing of a pixel in case 4 as described in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">The Local Basin Extraction</head><p>During the data processing, a rain-drop-hit is simulated for every pixel. Each rain-drop follows the path toward the line with the steepest descent due to gravity, until a regional minimum is reached. A regional minimum M is a single pixel or a set of pixels with equal altitude, from which it is impossible to reach a point of lower altitude on an always descending path. When such a minimum is reached, the pixels attracted on the path of steepest descent are marked with the label of the latter.</p><p>The reached minimum M is now flooded in the following way. For each of the (yet unmarked) pixels q adjacent to the minimum M , again the steepest path is followed. In case the minimum reached from q is also M , q is assigned to the catchment basin of M denoted by B (see <ref type="figure" target="#fig_0">Figure 2</ref>). In this case, the unprocessed pixels q adjacent to each q are assigned to the set of unprocessed pixels Q.</p><p>These pixels are considered in the next pixel iteration for the current basin. Otherwise, if another local minimum M is reached, M is put on the queue containing the yet unprocessed basins/minima (considered in the next basin iteration). The pseudo-code outline of the algorithm for computing the catchment basin for a given pixel follows:</p><p>0 follow steepest path(p,Mi); /* stores reached minimum in Mi */ 1 Bi ← Mi; /* initialize Bi with the pixels in Mi */ 2 Q ← border(Mi); /* initialize Q with the pixels surrounding Mi */ 3 while (not empty(Q)) 4 q ← pop pixel(Q); 5 q id ← follow steepest path(q); 6</p><p>if (q id == Id(Mi)) 7</p><p>add pixel(Bi,q); /* assigns q to the basin Bi */ 8 get unmarked neighbors(Q, q); /* result-stored in Q */ 9 endif 10 end while;</p><p>The only complex procedure requiring more detailed discussion is the process of following the steepest path toward a local minimum, starting at a given pixel (see line 0 and line 5 above and <ref type="figure" target="#fig_0">Figure 2</ref>). In order to explain the single steps, we assume that we start with pixel p, which has not been processed yet. Thus, four cases can occur (see also <ref type="figure">Figure 3</ref>):</p><p>1. p has no adjacent pixel with lower altitude, hence p is an isolated regional minimum;</p><p>2. p has only one adjacent pixel with lowest altitude q. This is the regular case, where the algorithm follows the steepest path along the shortest topographic distance;</p><p>3. p has at least one adjacent pixel with the same altitude which means that p belongs to a (minimum or non-minimum) plateau;</p><p>4. p has more than one adjacent pixel with lowest altitude qi. In this case the algorithm can not determine which of the adjacent pixels is the one, the raindrop should flow to.  <ref type="figure">Figure 3</ref>: The four cases, which can occur when the steepest path toward a local minimum is followed.</p><p>The first two cases are the trivial ones. When case 1 occurs, a regional minimum is reached and a new Id is assigned to the basin.</p><p>In case 2, the current pixel is assigned to the path and if the lowest neighbor q is not marked yet, it is considered as the next processed pixel: p ← q. If q is already marked, the current path is terminated and its pixels are labelled with the label of q (early path termination).</p><p>In case 3, the reached plateau has to be processed first, since the steepest path can not be unequivocally determined within plateaus. Therefore, when a plateau is reached, its border pixels are determined (see <ref type="figure">Figure 4</ref>). If there are no border pixels with lower alti-  <ref type="figure">Figure 4</ref>: When the plateau with altitude 6 is reached, the algorithm first determines its outdoors and then floods the plateau, wiring the pixels within it. The pixels with the shortest distance and if these are equal, the one with the lowest outdoor is chosen to be processed next.</p><p>tude, the plateau is a minimum plateau and the algorithm proceeds like in case 1. Otherwise, the outdoors 1 of the plateau P are sorted and used as starting points for flooding P , as depicted in <ref type="figure">Figure 4</ref>.</p><p>In order to prevent multiple flooding of the same plateau, the flooding results are saved in a special data structure. In this structure, the pixels are wired, storing for each pixel the distance to the nearest outdoor and the direction of the latter (see <ref type="figure">Figure 4</ref>). This approach is similar to the arrowing technique described in <ref type="bibr" target="#b18">[18]</ref> and <ref type="bibr" target="#b7">[8]</ref>. Later on, when a pixel of a processed plateau is reached, the arrows to the nearest outdoor are followed and no additional computations are performed. Thus, the nearest and lowest outdoor considering p is now set to be the next pixel in the current path and is processed next. If a marked pixel is reached within the plateau, the current path is terminated and labelled with the Id of this pixel (as in case 2).</p><p>When case 4 occurs, the algorithm can not unequivocally decide which pixel should be processed next. In this case, all adjacent lowest pixels are traversed as if they were hit by a rain-drop. Since the lowest pixel pn = p of the current path (p1, . . . , pn) has a greater altitude than the pixels qi and a path always follows the steepest slope, none of the pixels (p1, . . . , pn) is affected while qi are being processed. This allows for the algorithm to remain consistent in this case. Hence, after processing all qi, the pixel qj with the lowest and nearest outdoor is chosen to be the next processed one p ← qj and the computation of the steepest path continues. For pixels qi not belonging to a plateau, the outdoor-distance is considered as one.</p><p>This technique allows us to determine for each pixel the regional minimum it belongs to, without performing a global flooding (typically performed in immersion based watershed transformation) or pre-processing the data. In particular, a rain-drop follows the steepest path toward a local (gradient) minimum. This path is now traversed and its pixels are labelled with the Id of the reached min-imum. Afterwards, the basin is flooded "piercing" its minimum and letting the water come up out of the ground. This procedure is repeated until all boundary pixels of the current catchment basin have adjacent pixels belonging to other basins. In this way, we are able to extract a single catchment basin given an image/volume data set and a starting pixel/voxel. When volume data is processed, 26connectivity grid is used, instead of the 8-connectivity grid applied in regular 2D images. All other steps remain unchanged. Moreover, the proposed approach can be applied even on data structures with higher connectivity in the same way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Flooding the Selected Region</head><p>As introduced above, the proposed approach requires a selection of a region of interest (ROI) from the user. For user convenience, this is performed with the original input image I. In a separate pre-processing step, a simple edge detection based on the standard Sobel edge detector <ref type="bibr" target="#b13">[14]</ref> is applied to the entire input data. This is a straightforward process with insignificant time cost, compared to the global watershed transformation, hence not slowing down the entire process.</p><p>When this is accomplished, the gradient of the input area is flooded, simulating rain-drops starting with an arbitrary pixel within the selected area. Afterwards, the above transformation is repeatedly performed on I until all pixels and basins within the ROI are processed (as shown in <ref type="figure" target="#fig_4">Figure 5</ref> for the 2D case). Since  these basins belong to the same region, due to the user selection, they are used to derive thresholds for the merging criteria. As will be shown in Section 3, both the original image data I and the gradient magnitude image I are applied.</p><p>Unfortunately, there are basins which are not completely, but only partially within the ROI. These basins are processed as follows: For each pixel, not belonging to a basin with local minimum within the selected region, again a rain-falling simulation is started (see also <ref type="bibr" target="#b15">[16]</ref>) and the regional minimum of the new basin is determined as described above (ev. outside the user selection). Each of these minima is used to start a flooding process as described in the Section 2.1. The so computed layer of basins surrounding the user-selected area are utilized to derive a second set of auxiliary thresholds for the merging criteria as will be discussed in Section 3. When this step is completed, all basins which are partially or completely included in the selected region are processed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Merging Criteria</head><p>The most important part of the proposed approach is the suitable definition of the basin-merging criteria, since they define the quality of the segmentation results. As introduced before, various merging criteria are described in the literature. The most prominent ones are based on gradient-watersheds on graphs <ref type="bibr" target="#b18">[18]</ref>, basin dynamics <ref type="bibr" target="#b12">[13]</ref>, and multi scale gradient analysis <ref type="bibr" target="#b4">[5]</ref>. Most of these approaches define appropriate merging criteria based on the basins itself, hence using the information about the gradient image. In contrast, we implemented a method, which uses a combination of the first two approaches, additional information about the original image data I, and the second derivation of the input image I . Thus, a more sound merging condition is introduced. Additionally, it is very difficult, often even impossible, to define a merging criterion matching the attributes of all objects in the input image. Applying a local watershed transformation and merging only basins fulfilling local ROI-specific merging criteria yields significantly better results as will be shown in section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Merging Criterion A</head><p>Now let us consider two adjacent basins as depicted on the left of <ref type="figure" target="#fig_5">Figure 6</ref>. As proposed in <ref type="bibr" target="#b11">[12]</ref> the basin's dynamic introduces a good criterion for merging adjacent basins. The dynamic of a basin is defined by the minimum height, which has to be overcome, in order to reach a basin with lower or equal minimum altitude. Basins with dynamics lower than a given value dt (dynamics threshold) are now merged in larger regions. The usual values of dt are in the interval <ref type="bibr" target="#b4">[5,</ref><ref type="bibr">20]</ref> for 8-bit gray-scale images and depend on the image content and it's noise. Applying this strategy for basin merging helps us to merge insignificant basins, introduced by various noise sources in I and I (see <ref type="figure" target="#fig_9">Figure 9</ref> image b).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Merging Criterion B</head><p>Nevertheless, there are still situations, in which even basins with a great difference between the (mean) gray-values in I have to be merged when only their dynamic is taken into account (as shown on the right of <ref type="figure" target="#fig_5">Figure 6</ref>). To overcome this problem, we applied additionally to the concept of basin dynamics a second criterion. This is based on the mean gray value of the region in I, corresponding to the basin in I . A similar strategy is introduced in <ref type="bibr" target="#b18">[18]</ref>, where the authors use the infimum of the area in I, corresponding to the basin's regional minimum in I . Furthermore, the authors apply a watershed algorithm on a graph with nodes representing the basins and arcs linking adjacent basins. Thereby, the nodes are colored with the infimum value of the basins minimum in I. For our application, however, it turned out that applying the average color ca of the catchment basin in the original image I is a better criterion for basin merging. Unlike <ref type="bibr" target="#b18">[18]</ref>, we compare the values c a and c a of each two adjacent basins in order to determine whether they should be merged or not (|c a − c a | &lt; ct -color threshold). In this way we defined a second criterion for basin merging based on the global basin attributes in I and in I .</p><p>Unfortunately, another problem occurs with these merging criteria: too many basins fulfilling the requirements, but not belonging to the same region are merged. This may significantly worsen the segmentation results (see <ref type="figure" target="#fig_9">Figure 9</ref>, image c). To circumvent this obstacle, we introduced two additional rules for preventing basins from merging.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Merging Criterion C</head><p>The third criterion we applied in our algorithm is based on the characteristics of the dam between two basins BA and BB. During the basin extraction, we record the length, the average color, and the color of the lowest pixel p b on the dam between BA and BB in I . If the altitude difference between the lowest common border pixel p b and the average height of the border ba is greater than a given threshold value bt (border threshold, with values typically within the interval <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b14">15]</ref>  stated in the first two criteria are fulfilled (see <ref type="figure" target="#fig_7">Figure 7)</ref>. In case the basins have more than one common border, the border pieces are processed as if they were connected. This criterion prevents from merging basins, which have similar dynamics due to noisecontaining borders.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Merging Criterion D</head><p>Finally, we introduced a measurement for the steepness of the border between two basins in I . For this, we consider each border pixel p b and the next pixel on the path toward the local minimum p1, as shown in <ref type="figure">Figure 8</ref>. For each such border pixel p b , we determine the pixel p1 and compute the magnitudes of the second derivations p b and p 1 , hence the values of p b and p1 in I . The absolute difference between these values ps = |p b − p 1 | gives a measurement of the gradient's variation in I . If ps is greater than a given threshold st (steepness threshold), for any pixel on the border between adjacent basins, this basins are not merged even if the criteria A-C are fulfilled (see the right of <ref type="figure">Figure 8</ref>). This criterion is applied to each two adjacent basins (for instance A and B in <ref type="figure">Figure 8</ref>). The border steepness of both of them has to be below the given threshold (in general within the interval <ref type="bibr" target="#b4">[5,</ref><ref type="bibr">20]</ref>), in order to merge the basins.</p><p>To summarize, for each extracted basin B, we dispose of and evaluate the following data structure, in order to determine whether  <ref type="figure">Figure 8</ref>: The magnitude of the second derivation is computed at each inner border pixel and at the next pixels on the path toward the basin's minimum (pixels <ref type="bibr" target="#b2">(3,</ref><ref type="bibr" target="#b1">2)</ref> and <ref type="bibr" target="#b2">(3,</ref><ref type="bibr" target="#b2">3)</ref>). If the absolute difference between these two values is greater than a given threshold st, the basins are not merged. On the right, a case is shown in which the steepness of the basin's border prevents from merging two adjacent basins.</p><p>it should be merged with an adjacent one B :</p><p>• the average grey value of the basin in I (criterion B);</p><p>• the lowest and highest altitude of a basin pixel in I (criterion A,C, and D);</p><p>• lowest and average border value for each pair of adjacent basin (B, B ) (criterion C);</p><p>• for each inner pixel of the border and each adjacent basin the maximum ps (criterion D).</p><p>Results of applying the various merging strategies are shown in <ref type="figure" target="#fig_9">Figure 9</ref>. We first show the result of applying the standard global watershed transformation and the application of the criteria A and B.</p><p>Afterwards, the results of applying the local watershed transformation are shown evaluating the criteria A and B in image c and criteria A-D in image d.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Evaluation of the Merging Criteria</head><p>After flooding the ROI selected by the user, we compute the values for the thresholds: T = (dt, ct, bt, st). The value of dt is the value of the greatest dynamic for basins within the selected ROI. ct is defined as the greatest allowed mean color deviation for two adjacent basins. When all basins in the given ROI are computed, the mean color of this regions is used to define the reference grey value. ct is now applied for defining the deviation threshold relative to the reference grey value. bt is initialized with the maximum difference between the average border color and the lowest border pixel for each pair of adjacent basins. Finally, the magnitude of the greatest second derivation of the grey value in I on the inner border is assigned to st (see Criterion D above). In order to determine whether a computed catchment basin matches the initial user selection, we evaluate the following merging rule, applying the thresholds T :</p><p>IF Criterion A AND Criterion B AND Criterion C AND Criterion D THEN Merge Basins(A, B). Since there are basins, which are only partially covered by the selected ROI, these border basins are utilized for deriving an additional threshold set:</p><formula xml:id="formula_0">T = (d t , c t , b t , s t ).</formula><p>When a new basin is extracted, we first check whether the premise of the above rule is true for the threshold set T . If this is the case, the basin is assigned to the initial ROI. Otherwise, the second threshold set T is applied and if the rule's premise is 'false', the basin is definitely marked as not matching the user selection. Finally, if the condition of the above rule is true applying of the second set of thresholds T , the current basin is assigned to the layer of basins surrounding the user selection and processed as described next (see <ref type="figure" target="#fig_9">Figure 9</ref> gray area in image d and <ref type="figure" target="#fig_11">Figure 10</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Basin Growth</head><p>After the user input is processed so far, the algorithm starts with the controlled basin growth. At this stage all basins completely or partially within the selected ROI and a one-pixel thick layer surrounding these basins are processed. When following the path of steepest descent for each of the pixels in this layer, the reached minima are completely outside the given ROI and thus not processed (flooded) yet. The regional minima of these basins, however, are known and the flooding process can be started as described in Section 2.1. In this way, in every basin-iteration a set of basins, surrounding the ones extracted in the previous step are computed.</p><p>Every time a new basin B is extracted, it's attributes are applied for evaluating the merging rule with the threshold set T . If B matches the user selection, that is if the rule's premise is true, it is assigned to the initial ROI. Unprocessed basins, adjacent to B are pushed on a queue M containing the yet unprocessed minima and are flooded in the next basin iteration. Otherwise, if B does not match the user selection, the merging rule is evaluated again with the thresholds T . If the rule's premise is true this time, the basin is assigned to a set of potential candidates for merging Bc. Finally, in case the rule's condition is false for both threshold sets T and T , the current basin is a border basin, not matching the initial user selection (see <ref type="figure" target="#fig_11">Figure 10</ref>). In the following, this algorithm is stated in pseudo-code: The mosaic of un-merged basins in Bc and their adjacency we utilized for the definition of an adjacency graph G. In this graph the nodes correspond to the basins, the arcs link adjacent basins, similar to the approach introduced in <ref type="bibr" target="#b18">[18]</ref>. The nodes within the initial ROI and the ones merged during the basin growth are pooled together in a node U (as depicted in <ref type="figure" target="#fig_11">Figure 10</ref>). The basins, for which the merging rule returns true only for the second threshold set T , are also assigned to the graph. However, they are not merged with the node U , but are connected with each other and with U . Each of these basins contains the attributes listed at the end of Section 3. Thus, in a post-processing step, the user can manually assign basins out of Bc to the initial ROI. Furthermore, the threshold set T can be updated each time a basin is manually assigned to U . This makes a precise final basin-level-adjustment possible, without having to explicitely manipulate single parameters.</p><formula xml:id="formula_1">0 /* M -contains yet unprocessed minima */ 1 do 2 N ← card(M); 3 while (N &gt; 0) 4 N ← N − 1; 5 M ← pop(M);</formula><p>In both cases, the result of the proposed algorithm is a set of connected basins, extending the initial ROI. In other words, the input data is classified and marked in such a way, that there is a (connected) region of interest and an area not belonging to the ROI. In the 3D case, this data can be used to generate a surface surrounding it (see Color plate) for volume-rendering, or for ray-casting <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results</head><p>To demonstrate the power of the proposed approach, we applied it on several images and two volume data sets. Each data set was first pre-processed and the standard Sobel edge detector <ref type="bibr" target="#b13">[14]</ref> was applied on either the image data in the 2D case, or on each slice in the volume data. In the next step, a slice was selected out of the two volume data sets and a region was marked (as depicted in the Color plate). Afterwards, the algorithm described above was applied on a 26-connectivity grid. The computed results, consist of a set of marked pixels. In order to visualize this region, we extracted a surface applying the standard marching cubes algorithm <ref type="bibr" target="#b5">[6]</ref>.</p><p>The image data was processed in a similar way. After selecting a region and applying the proposed technique, the pixels defining the border between the marked region and the unmarked background, were colored red as shown in the lower row in the Color plate. The computation times are displayed in <ref type="table" target="#tab_0">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Future Work</head><p>The approach described above is implemented and works well. However, when the computation is completed, we currently perform surface extraction with the standard marching cubes algorithm <ref type="bibr" target="#b5">[6]</ref>, in order to visualize it. Unfortunately, this introduces 'stairs' in the surface. To solve this problem, we are working on basin extraction combined with surface extraction. Since borders between adjacent basin are in general smooth, this will improve the quality of the generated surface. In addition, the color values on the extracted region border can be used to assign appropriate color values to the surface. This will even increase the (photo-)realistic effect of the computed results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Summary</head><p>In this paper, we presented a new semi-automatic method for extracting regions of interest based on a local watershed transformation. We described how a catchment basin can be computed, given an initial pixel and a data set. The proposed technique does not require pre-processing of the data, while applying a modified rainfalling simulation. Unlike the standard watershed transformation, which floods the entire input data, the presented approach computes and merges only the catchment basins fulfilling a set of criteria. Therefore, we introduced four criteria for merging the catchment basins in a meaningful region, exploiting the attributes of the manually selected ROI. Furthermore, the described technique can be applied more precisely, since it is easier to define merging criteria for basins within one object of interest in the input data, than for the entire data set. The merging rule introduced in this way, utilizes basin attributes like the basin's dynamics, it's average grey-color, and border characteristics like it's steepness and gradient magnitude. This significantly improves the results computed with the proposed technique, offering a reasonable solution of the segmentation problem addressed in the introduction.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>RegionalFollowFigure 2 :</head><label>2</label><figDesc>The pixel p is hit by a rain-drop. The algorithm follows the steepest path toward a local minimum (upper diagram). Afterwards, the basin is flooded with water coming up out of the reached minimum (lower diagram).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>The selected ROI in a simple 2D example, the corresponding gradient magnitude image (lower diagram) and its basins.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>The basin's dynamic is shown on the left. On the right, a case is shown in which the basin's dynamic only does not provide a good merging criterion.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>), the basins are not merged even if the conditions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>The basins are not merged if the gap between the lowest border pixel, defining the dynamic, and the average border altitude is too large as shown on the right.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 :</head><label>9</label><figDesc>Results of applying the watershed transformation. Image a shows the result of applying the standard algorithm, which obviously produces heavily over-segmented images. After merging the basins with the described criteria, more meaningful segmentation is achieved as shown in image b. Image c shows the results achieved with the proposed local watershed transformation, starting with the selected ROI and applying the criteria A and B. Applying all of the proposed criteria (A-D) results in image d. The basins in Bc are also shown in image d.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>6 B</head><label>6</label><figDesc>← flood(M, M); /* basins adjacent to B are added to M */ 7 if (merging rule(T, B)) /* check threshold set T */ 8 assign to ROI(B); 9 else if (merging rule(T , B)) /* check threshold set T */ 10 assign to potential ROI(B); /* assign to Bc*/ 11 endif; 12 end; /* while (N &gt; 0) */ 13 while (card(M) = N) /* until no new basins are added */</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 10 :</head><label>10</label><figDesc>The user selection on the left and the extracted region in the middle. The graph on the right shows (a part of) the (colored) adjacent basins in Bc.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Computation times for the example volumes and images measured on an SGI O2 with 180MHz R5000.</figDesc><table><row><cell>Data set</cell><cell>Data size</cell><cell cols="2">Number of Computation</cell></row><row><cell></cell><cell></cell><cell>regions</cell><cell>time</cell></row><row><cell>Jaw bone</cell><cell cols="2">300x400x50 36542</cell><cell>14.07 sec</cell></row><row><cell>Vessel tree</cell><cell cols="2">512x512x64 54263</cell><cell>21.6 sec</cell></row><row><cell cols="2">Peppers Region A 512x512</cell><cell>2320</cell><cell>2.8 sec</cell></row><row><cell cols="2">Peppers Region B 512x512</cell><cell>3859</cell><cell>3.91 sec</cell></row><row><cell cols="2">Peppers Region C 512x512</cell><cell>3619</cell><cell>3.34 sec</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Outdoor-pixels of a plateau are pixels adjacent to the plateau with altitude lower than the plateau's altitude.</note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Results of applying the proposed local watershed transformation. The surfaces on the right of A and B are extracted with the marching cubes algorithm, after performing the basin growth approach.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Topographic partition of watersheds with digital elevation models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">E</forename><surname>Band</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Water Recources Res</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="15" to="24" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Use of watersheds in contour detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Beucher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lantuéjoul</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Image Processing</title>
		<meeting><address><addrLine>Rennes</addrLine></address></meeting>
		<imprint>
			<publisher>CCETT/IRISA</publisher>
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The morphological approach to segmentation: the watershed transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Beucher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematical Morphology in Image Processing</title>
		<editor>E. R. Dougherty</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Marcel Dekker</publisher>
			<date type="published" when="1993" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="433" to="481" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive morphological watershed analysis for 3D medical images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Higgins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ojard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computerized Medical Imaging and Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4/5</biblScope>
			<biblScope unit="page" from="387" to="395" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Morphological multiscale gradient watershed image analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jackway</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">9th SCIA Scandinavian Conference on Image Analysis</title>
		<editor>G Borgefors</editor>
		<imprint>
			<date type="published" when="1995-06" />
			<biblScope unit="page" from="6" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Marching cubes: a high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;87 Conference Proceedings</title>
		<editor>M. C. Stone</editor>
		<meeting><address><addrLine>Anaheim, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1987-07-31" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Partitioning 3D Susface Meshes Using Watershed Segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><forename type="middle">P</forename><surname>Mangan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEICE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1999-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Topographic distance and watershed lines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Processing</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="113" to="125" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Morphological segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Beucher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Communication and Image Representation</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="21" to="46" />
			<date type="published" when="1990-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Parallel image component labeling with watershed transformations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">N</forename><surname>Moga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gabbouj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="441" to="450" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A parallel watershed algorithm based on rainfalling simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alina</forename><forename type="middle">N</forename><surname>Moga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bogdan</forename><surname>Cramariuc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Moncef</forename><surname>Gabbouj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">European Conference on Circuit Theory and Design</title>
		<meeting><address><addrLine>Istanbul, Turkey</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="339" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Watershed of a continuous function</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Najman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schmitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Signal Processing</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="99" to="112" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Geodesic saliency of watershed contours and hierarchical segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Najman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schmitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1163" to="1173" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">K</forename><surname>Pratt</surname></persName>
		</author>
		<title level="m">Digital Image Processing</title>
		<meeting><address><addrLine>New York / Chichester / Brisbane / Toronto / Singapore</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley-Interscience Publication</publisher>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Watershed-based segmentation of 3D MR data for volume quantization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sijbers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Scheunders</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Verhoye</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Der Linden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Van Dyck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Raman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Magnetic Resonance Imaging</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Rafsi -a Fast Watershed Algorithm Based on Rainfalling Simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Stanislav</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Stoev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 8-th International Conference on Computer Graphics, Visualization, and Interactive Digital Media (WSCG&apos;2000)</title>
		<meeting>8-th International Conference on Computer Graphics, Visualization, and Interactive Digital Media (WSCG&apos;2000)<address><addrLine>Pilzen</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2000-02" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="100" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">High quality rendering of attributed volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulf</forename><surname>Tiede</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Schiemann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karl</forename><forename type="middle">Heinz</forename><surname>Höhne</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>color plate p</note>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m">Proceedings of the 9th Annual IEEE Conference on Visualization (VIS-98)</title>
		<meeting>the 9th Annual IEEE Conference on Visualization (VIS-98)<address><addrLine>New York, Octo</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="18" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Watersheds in digital spaces: An efficient algorithm based on immersion simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><surname>Vincent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pierre</forename><surname>Soille</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE PAMI</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="583" to="598" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The watershed transformation for multiresolution image segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wegner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Harms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Builtjes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Oswald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Computer Science</title>
		<imprint>
			<biblScope unit="volume">974</biblScope>
			<biblScope unit="page" from="31" to="37" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
