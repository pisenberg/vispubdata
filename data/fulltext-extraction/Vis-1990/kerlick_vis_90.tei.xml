<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Moving Iconic Objects in Scientific Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">David</forename><surname>Kerlick</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Tektronix Laboratories Beaverton</orgName>
								<address>
									<region>Oregon</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Moving Iconic Objects in Scientific Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>The visualization and interpretation of multidimensional data in space can be substantially enhanced by the introduction of independently moving visual objects. These bird-oid objects or &quot;boids&quot; [I], derive from: (I) &quot;icons&quot; which are geometric objects whose shape and appearance are related to the field variables, (2) 3-dimensional cursors by which a user interactively picks a point in space, (3) particle traces, which are numerically integrated trajectories in space, (4) moving frames of vectors along space curves, and (5) &quot;actors&quot; which are programming objects which can create and destroy instances of themselves, act according to internal logic, and communicate with each other and with a user. A software prototype in the C++ language has been developed which demonstrates some of the capabilities of these objects for the visualization of scalar, vector, and tensor fields defined over finite elements or finite volumes. Visualization using boids requires fewer rendered graphical primitives, allows a higher degree of interactivity, and permits automated &quot;knowledge navigation&quot; amid data which is organized spatially.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>There has been an explosive increase in the amount of data produced in scientific experiment and engineering simulation. A flow simulation on a supercomputer may carry a dozen variables at each of a million spatial points for thousands of time steps. This increased data volume has prompted research into methods to make the data more available to researchers for analysis. Computer graphics and animation have emerged as enabling technologies for interaction between researcher and data. "Scientific visualization" techniques rely on graphics hardware and software to map data into abstract visualization objects <ref type="bibr" target="#b1">[2]</ref> composed of graphical vectors and polygons and to project them onto a screen at faster and faster rates. A newer technology of direct volume rendering <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref> avoids the construction of a geometric model and instead renders the data as a solid mass of material with spatially varying optical properties.</p><p>Even though the human visual system is capable of a large bandwidth of information transfer, it is no longer reasonable to try to render every piece of data as a graphical object.</p><p>Instead, one should develop technology which enables the researcher to query the data interactively for quantitative and qualitative information, ana to visualize only those features of the data which are of interest. This economizes on the amount of rendering that has to be done and the computation and storage required, and permits fast interaction between scientist and data. The research of the present paper is directed towards this goal.</p><p>Much scientific visualization involves continuous, multivariate fields over space and time. It is impossible to store a continuum,. Rather, one stores a set of values at many discrete points in space, together with rules for constructing the function and its derivatives by means of an interpolant. Such spatially and temporally organized datasets are the domain of application of this paper, though the techniques can be extended to other databases by providing them with a spatial context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Basic Concepts</head><p>Substantial prior work relates to the notions (icons, cursors, trajectories, frames, actors) subsumed in the ideas presented here. The novel element here is the combination of these techniques and their application to the interaction with field data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Icons</head><p>Icons in the context of this paper are geometrical objects which exist in the visual world space of a graphics program, and which encode the dependent (spatial) variables as their position, values of field variables as geometric characteristics such as lengths, angles, or shapes, or as visible attributes like color or opacity.</p><p>Iconic representations of data are familiar from traditional 2-D print graphics <ref type="bibr" target="#b4">[5]</ref>. For example, distinctive marker shapes are used to identify experimental runs, and error bars are used to denote some measure of confidence in the data. A simple icon is the arrow commonly used to represent a vector in two dimensions. The tail of a vector represents its position, and the length and direction of the arrow represents the magnitude and direction, respectively, of the vector field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CH2913-2/90/0000/0124/$01 .OO -1990 IEEE</head><p>The use of iconic representations for large numbers of dependent variables was pioneered by Chemoff <ref type="bibr" target="#b5">[6]</ref>, who used facial caricatures to encode 14-dimensional data in a 2-D scatter plot. Grinstein and Smith <ref type="bibr" target="#b6">[7]</ref> have used large arrays of "zigzag" icons to form a pseudo-texture in 2-D which encodes five or more dependent variables.</p><p>Static 3-D icons have been used by Ellson and Cox <ref type="bibr" target="#b7">[8]</ref> to display the results of a finiteelement simulation of injection molding. They use arrowhead-shaped icons (they call them "glyphs") to represent the variables for each fiiite element in the simulation. Complete one-dimensional parametric plots were incorporated into static icons by Stettner and Greenberg <ref type="bibr" target="#b8">[9]</ref> in a recent application to acoustics.</p><p>Usually, only a few dozen icons can appear in a 3-D image before visual confusion sets in. A simulation may be at tens or hundreds of thousands of points. Therefore, it is necessary to devise some mechanism for choosing the positions at which icons will be presented. This leads naturally to the idea of 3-D cursors (interactive, user specification of position) and of trajectories (positions chosen according to an intemal program).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cursors</head><p>A typical cursor in a 2-D graphics system is a screen object which can be located by pixel coordinates using a mouse, tablet, or other pointing device. By additional transformations, the cursor can be made to inhabit the "world space" of a graphical object in two or three dimensions. Some depth information is required in order to make 3-D cursors work effectively. Depth shading, z-buffering, stereo, and motion, along with readouts of the computational and physical coordinates. Recently, a number of hardware input devices [ 101 have appeared on the market,which are designed to enable the specification of position and orientation in 3-D space. The prototype in this paper has been outfitted with a dial box which controls translation and rotational degrees of freedom, as well as overall scaling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Particle Trajectories</head><p>Particle traces have been used as visualization aids in fluid dynamics experiments for at least a century. In steady flow, a stream of particles (smoke in air or dye in water) admitted to the flow will trace out curves which are everywhere tangent to the local fluid velocity. The set of initial locations where the particles are introduced into the flow is called a rake, after the rake-like device used to introduce the smoke or dye particles.</p><p>In a numerical flow simulation, one calculates particle traces by numerically integrating the velocity field. The P L O n D [ 1 11 program is typical of those used in computational fluid dynamics. It solves the ordinary differential equation for the trace of a test particle: dx/dt = v(x), which is just the condition that the streamlines be tangent to the velocity field. For irregular grids, this equation is solved in curvilinear coordinates. A trail of graphical vectors is produced which represents the motion of test particles in the fluid.</p><p>A present difficulty with many particle tracing programs is that the trajectories constructed from graphical vectors, are difficult to sort by depth. Interactive motion is helpful in disentangling depth information, but in general, techniques like depth shading, drop shadows, animation, and stereo are needed to resolve the picture if several traces are involved. The construction of polygonal ribbons and the stationing of icons along the trajectories are both useful in alleviating this problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Moving Frames of Vectors</head><p>A common notion in local differential geometry is that of a "moving frame" of vectors. A familiar example is the Frenet trihedron of vectors (tangent, normal, and binormal) along a space curve <ref type="bibr" target="#b12">[12]</ref>. In general, the change of frame between two points is dependent upon the path, and this gives rise to an invariant definition of curvature [ 131. Generalizations of this idea to point-and path-dependent transformations form the basis for the "local gauge theories" of particle physics. In the present context, viewing transformations will be used as transfer functions for tensor fields.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Actors</head><p>The "actor" paradigm draws from research in artificial intelligence, and relies on concepts of object-oriented programming <ref type="bibr" target="#b13">[14]</ref>. An actor contains both data and procedures which manipulate it. It can interact with its surroundings and with other actors in order to perform an assigned task. Familiar procedural programs can be partially or completely replaced by interacting actors. In the C++ prototype developed below, there are still procedural elements at work, with the result that one has in effect, an object-oriented extension to a procedural language like SIMLTLA rather than a completely object-oriented system like SMALLTALK <ref type="bibr" target="#b14">[15]</ref>.</p><p>Reynolds <ref type="bibr">[l]</ref> applied the technology of actors to a problem in simulation, namely the simulated behavior of herds and flocks, and introduced the concepts of object-oriented programming to the solution of this problem. These boids had the ability to react to the environment extemal to themselves, including other boids, and they contained an intemal state which govemed both their motion and their visual appearance. These boids interacted with user instructions (in the sense of setting goals), with their environment (avoiding obstacles), and with other boids.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Present Work</head><p>The purpose of the present paper is to demonstrate that this concept is useful and applicable to significant problems in scientific visualization.</p><p>The usefulness of some of the technologies applied here have already been proven in practice. For example, the use of the arrow icon for vectors, or the integration of particle trajectories are commonly used techniques. The use of iconic representations for multiple dependent variables is just emerging. It will be of greater use when an environment for interactively creating icons via a parametric geometry editor is realized.</p><p>The use of 3-D cursos presents the advantage of high interactivity coupled with Quantitative responses to queries about the data. It is always possible to refer back to the original data (usually floating point numbers) which was used to create an interpolated value. This is not the case where flat or volumetric imagery is used for visualization. In that case, the data is first run through a color map which sorts the data into a few color "bins" as in a histogram, after which the original data is not recoverable.</p><p>The utility of programmable actors is yet to be proven in practice. Probably it will require endowing the internal programs with a "critical mass" of knowledge about the specific subject area of the data (e.g. fluid dynamics) in order to let the actors pinpoint "interesting" values or configurations of the data on their own.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Implementation</head><p>The boid paradigm described above, was implemented in a prototype in LISP by Hultquist when he was working with the author <ref type="bibr" target="#b15">[16]</ref>. A more comprehensive prototype visualization environment was created for the Tektronix 4300 series workstations in 1988 and 1989 by a group headed by Robin McLeod at Tektronix Laboratories, and whose members are listed in the Acknowledgements. The color plates and videotape demonstration which accompanies this paper was made using this prototype. Plate 1 shows the initial screen and color map for a datset consisting of a scalar field defied over a set of rectilnear finite elements.</p><p>Besides conventional techniques for generating isosurfaces and level surfaces, this prototype includes the ability to create static icons, to affix them to 3-D cursors, to integrate trajectories, and to attach boids to trajectories. It is written in the C++ language, an object-oriented extension to C, and is thus designed to handle very general types of fields, finite element types, trajectories, boids, and geometric and graphical objects. Objects in C t t are termed "classes." The property of "inheritance" among classes makes it easy to create new boids or add new field or element classes as special cases of existing "abstract" classes.</p><p>The classes defied in the prototype include Elements, Fields, Trajectories, and Boids, as well as various geometrical and graphical objects. Each class contains "methods" which are the allowed operations for the class. Common to all elements are operations which create and destroy instances of themselves, name and describe themselves (including reporting to a screen display), and write their descriptions to a fie.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Elements</head><p>Field data is defined over a class of finite elements, which subsumes the usual types of support for finite-difference methods as well. There are a hierarchy of types. For example a 20-node brick is a subclass of brick which is a subclass of Element. The class Element has methods which:</p><p>return the element node ID of itself and of its neighbors retum the values at its vertices retun the interpolated value and derivatives of a func divide itself up into tetrahedra (for contouring) retum its boundary as a list of triangles retum its coordinates in physical space, and the tion defined over the element Jacobian matrix between computational and physical space intersect itself with a given vector or plane</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fields</head><p>Fields are defined over sets of elements. Their methods include: retuming its base and variable dimensions, retuming its value and first and second derivatives at a point, creating its bounding box,retuming its extreme values, and getting and setting its scale. An important class of derivedfields are employed which represent elements as a set of pointers and operations which are evaluated only when required. For example, divergence, gradient, and curl are implemented this way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Trajectories</head><p>The present code uses a fourth order Runge-Kutta scheme in computational space for numerically integrating velocity fields. This code automatically adapts the step size, based on the discrepancy between one full step and two halfsteps. A specialized routine for solving stiff differential equations is available in cases where the ordinary solver breaks down.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Boids</head><p>The class of Boids has methods which permit it to obtain positional information, and the values of dependent variables which are visualized by parameters in its geometry. It controls its visual attributes like color and visibility in the set of methods for displaying itself. The ability to send messages to other boids will be implemented in a future program.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Examples</head><p>In the following section, some simple boids are demonstrated in the visualization of scalar, vector, and tensor fields in three dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sphere Boid</head><p>This is the simplest boid, which maps the local value of a scalar field into a fmed geometrical object (here a sphere) at the points where it is defied. It is attached to a 3-D cursor, so that the user may interactively select its position using the dial box. Different marker shapes can be used to represent different experimental runs. The color and opacity of the object are mapped using standard transfer functions. In common with other boid types, this boid can generate a numerical readout of its position and the local field values, and print them in a window on the screen. Plate 2 shows a sphere boid in conjunction with a set of isosurfaces. This is shown in motion in the videotape.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Arrow and Dart Boids</head><p>A simple polygonal object is created from a vector field. These boids take their directions from the tangent, normal, and binormal directions calculated from the Frenet trihedron. A pyramid icon is used for the arrow, with the apex pointing in the direction of the vector field, and the base directions parallel to the normal and binormal directions derived from it. Similarly, the paper dart boid has its chord aligned along the vector direction, its span along the normal direction, and its tail along the binormal direction. This is illustrated in <ref type="figure" target="#fig_0">Figure 1</ref>, as well as in Plate 3 and the video. Alternatively, one can use the vorticity (curl of the velocity field) projected onto the plane perpendicular to the tangent vector. This results in boids that spin longitudinally in a swirling flow <ref type="bibr" target="#b15">[16]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ -----</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Flow Ribbons</head><p>Trajectories can be made more visible by the generation of ribbons, which are polygonal strips. Belie <ref type="bibr" target="#b16">[17]</ref> has used such ribbons to describe the fluid flow in the space shuttle main engine. A simple type of ribbon can be created from the dart boid by collecting images of its spanwise edges into a polygonal mesh as shown in <ref type="figure" target="#fig_1">Figure 2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Test Particles</head><p>One can extend the trajectory idea to the solutions of other ordinary differential equations. For example, one can regard the vector field as a force field and solve Newton's equation d2x/dt* = -f(x)/m. Similarly, one can solve the Lorentz Force law, which depends both on position and velocity, for an electromagnetic test particle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Ellipsoid boid for tensor fields</head><p>The visualization of tensor fields can be accomplished with icons. For example, the characteristic ellipsoid of a stress tensor can be rendered <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b17">18]</ref>. The final example in the video, and Plate 4, show a scalar, vector, and tensor field visualized simultaneously. The scalar field is mapped to color, and the gradient of the scalar field is the vector field along which trajectories are generated. Finally, the symmetric tensor field (strain) is mapped into a viewing transformation, with the effect that an initially spherical geometric object is transformed into an ellipsoid whose axes are the principal axes of the strain, and whose axis lengths correspond to the principal strains.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Critical Point Boids.</head><p>In differential geometry, the curvature of a 2-surface embedded in 3-D is representable as a conic called the Dupin indicatrix <ref type="bibr" target="#b12">[12]</ref>. Icons representing the Dupin indicatrix have been applied to a biological example by Todd <ref type="bibr">[</ref> 191 The author has applied 3-D Dupin indicatrices (quadric surfaces) to the graphical classification of 3-D scalar fields <ref type="bibr" target="#b19">[20]</ref>. Since field objects already know how to evaluate their first and second derivatives, these derivatives can be used to construct the gradient vector and the Hessian matrix for a scalar field, and the Jacobian matrix for a vector field. The signs of the eigenvalues of the matrices can be used to classify the point by type, and one of a fmed set of icons can be attached to the point. The entire matrix can be used to transform the boid, as with the ellipsoid. Trajectories are integrals of lines of curvature which generalize "ridges" and "troughs" to 3-D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Planned Enhancements</head><p>In this section we will discuss some planned extensions to the boid concept embodied in the present state of the prototype. The first three examples require straightforward modifications to passive boids. The last two developments will be permitted with the addition of message-passing capabilities between boids.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>New Views</head><p>Implicit in Reynolds's work on boids is the idea of the local viewpoint of the boid, which is used for collision avoidance. It is certainly feasible, and may prove useful, to offer a "boids eye" view of the dataset as viewed by one of the boids, using stereoscopic viewing and other "virtual reality" technologies as they develop. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>sonification</head><p>Recent interest has been shown in the "sonification" of scientific data, that is the application of sounds to represent data, analogous to the mapping of data into visual attributes. One significant limitation on sonification is that it is difficult to locate sound sources if there are many of them. For scientific purposes, it would seem reasonable to attach a "microphone" to an individual cursor of boid, and redundantly map a visual attribute and a sonic one. This has been done in 2-D by <ref type="bibr">Grinstein and Smith [7]</ref>. In 3-D, one envisions a "Geiger Counter" b i d which emits clicks whose frequency depends upon a scalar field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Curved Spaces</head><p>Some other generalizations of trajectories can be taken from differential geometry, such as the construction of geodesic curves, lines of curvature, and associated moving frames. Boids restricted to surfaces can have applications in the evaluation of curvature Computer-Aided Geometric Design of curves and surfaces, as well as modelling electromagnetic "creeping waves" which follow geodesic curves over conductors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Optimization and Search</head><p>Most numerical optimization procedures are based upon a local process, like steepest descent for minimization, whereby one starts from a point in design space, evaluates a set of derivatives at that point, constructs a search direction, and engages in a one-dimensional search in that direction until a minimum is reached <ref type="bibr" target="#b20">[21]</ref>. Then the process repeats. A single boid can be programmed to reach such a local minimum. However, the minimum value reached from a single initial condition may not be globally optimal. Altematively, an entire "flock" of b i d s can be sent out into the dataset, reach local optima, and communicate this result to other members of the flock. Those boids standing at non-global minima can put themselves to sleep, or create new instances of themselves (in the manner of simulated annealing) until a global minimum is found.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Separation surface</head><p>A significant problem in fluid dynamics is the determination of surfaces of separation in viscous flow. A typical separation surface is defied as follows: From every initial point on one side of the separation surface, a trajectory will end up at "downstream infinity." Trajectories emitted from the other side will be captured in a separation bubble. This surface is difficult to define in practice, since it requires the integration of many particle trajectories, and presently it is accomplished by user trial and error with an interactive particle tracer. Programmable boids could be assigned to compute trajectories iteratively (as in "shooting methods" originally used in artillery) and to converge on the separation surface, and thence to display the surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions</head><p>The idea of independently moving, interacting graphical objects has been introduced as a method for the visualization of continuous fields. An object-oriented program has been created which serves as a testbed for the boid concept and its use in scientific visualization. A few simple examples of the technology have been demonstrated, and some significant directions for next steps in research have been outlined. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>A Dart boid takes as its input the tangent vector V 1, and computes the binormal V2 and normal V3 as derived fields.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>A polygonal Ribbon is created by connecting together the trailing edges of a sequence of Dart boids.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Plate 1 .Plate 2 .Plate 4 .</head><label>124</label><figDesc>Main menu of prototype, showing colormap for scalar field on bounding surfaces of the finite element data domain. Plate 3. D a r t boids stationed on trajectories of a velocity field. (Color Plate 53, page 468) (Color Plate 51, page 468) Sphere b i d and set of iso-scalar surfaces. Ellipsoid boids (dimmed due to animation) representing a symmetric tensor field, colored by a scalar field, on trajectories determined by a vector field. (Color Plate 54, page 468) (Color Plate 52, page 468)</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Preliminary work, and a software prototype of some boids were developed by Jeff Hultquist in 1987, based upon a suggestion of the author, while we were both working for the Advanced Computer Graphics Group of NASA Ames Research Center under contract NAS 2-1 1555 to Sterling Software, Inc. A videotape was produced which showed moving frames, paper dart boids, and ribbon generation for a fluid flow example. This was later developed into a programmable visualization environment [ 161. </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">W</forename><surname>Reynolds</surname></persName>
		</author>
		<title level="m">Flock:, Herds, and Schools: A Distributed Behavioral Model, ACM Computer Graphics (SIGGRAPH Proceedings)</title>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visualization in Engineering Mechanics: Techniques, Systems, and Issues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Course</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<date type="published" when="1988-08" />
		</imprint>
	</monogr>
	<note>Atlanta GA</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Display of Surfaces from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">V-BUFFER: Visible Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Keeler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Graphics (SIGGRAPH Proceedings</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">The Visual Display of Quantitative Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Tufte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Graphics Press</publisher>
			<pubPlace>Cheshire, CT</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The Use of Faces to Represent Points in k-Dimensional Space Graphically</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chemoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Jour. Amer. Statistical Assoc</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="361" to="368" />
			<date type="published" when="1973-06" />
		</imprint>
	</monogr>
	<note>See also [5] p 142</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The Perceptualization of Scientific Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SPIE Conference on Extracting Meaning from ComplexDara</title>
		<meeting><address><addrLine>Santa Clara CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990-02-15" />
		</imprint>
	</monogr>
	<note>Paper 1259-22</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualization of Injection Molding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ellson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cox</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Simulation</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">5</biblScope>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Computer Graphics Visualization for Acoustic Simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Stettner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics (SIGGRAPH 1989 Proceedings</title>
		<imprint>
			<date type="published" when="1988-08" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="59" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Waters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
		<title level="m">A 3D Interactive Physically</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Based Micro World</surname></persName>
		</author>
		<title level="m">SPIE Conference on Extracting Meaning from ComplexData</title>
		<imprint>
			<date type="published" when="1990-02-14" />
			<biblScope unit="page" from="1259" to="1269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">PLOT3D Users Manual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>Buning</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
			<pubPlace>NASA Ames Research Center, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Stoker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Geometry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wiley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cartan. E., Ann. Ecole Normale Superieure</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page">325412</biblScope>
			<date type="published" when="1969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Actors -The Stage is Set</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Pugh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="61" to="65" />
			<date type="published" when="1984-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">SMALLTALK-80, The Language and its Implementation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Robson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Numerical Flow Visualization in a Functional Style</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeff</forename><forename type="middle">P M</forename><surname>Hultquist</surname></persName>
		</author>
		<idno>RNR-89-008</idno>
		<imprint>
			<date type="published" when="1989-06" />
		</imprint>
	</monogr>
	<note type="report_type">NASA Ames Applied Research Office Preprint</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Flow Visualization in the Space Shuttle&apos;s Main Engine</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Belie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mechanical Engineering</title>
		<imprint>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1985-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A unified approach to the design of visualization software for the analysis of field problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">R</forename><surname>Dickinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SPIE Proceedings Vol1083</title>
		<imprint>
			<date type="published" when="1989-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Intrinsic Geometry of Biological Surface Growth</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">H</forename><surname>Todd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Biomathematics #</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="page">89</biblScope>
			<date type="published" when="1986" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Graphical Classification of 3-D Fields Using Critical Point Theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Kerlick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">paper submitted to ACM Volume Visualization Conference</title>
		<meeting><address><addrLine>San Diego</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Quasi-Newton methods for linearly constrained optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">E</forename><surname>Gill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Murray</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Numerical Methods for Constrained Optimization</title>
		<editor>P.E. Gill and W. Murray</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F'ress</forename><surname>Academic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">London</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">New</forename><surname>York</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1923" />
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="1" to="25" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
