<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualizing a Scalar Field on an N-dimensional Lattice</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mihalisin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Physics</orgName>
								<orgName type="institution">Temple University</orgName>
								<address>
									<postCode>19002</postCode>
									<settlement>Philadelphia</settlement>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gawlinski</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Physics</orgName>
								<orgName type="institution">Temple University</orgName>
								<address>
									<postCode>19002</postCode>
									<settlement>Philadelphia</settlement>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Timlin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Physics</orgName>
								<orgName type="institution">Temple University</orgName>
								<address>
									<postCode>19002</postCode>
									<settlement>Philadelphia</settlement>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schwegler</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Physics</orgName>
								<orgName type="institution">Temple University</orgName>
								<address>
									<postCode>19002</postCode>
									<settlement>Philadelphia</settlement>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visualizing a Scalar Field on an N-dimensional Lattice</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>A new hierarchical method of plotting is presented which allows one to interactively view millions of data points with up to 10 independent variables.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Recently the need to visualize scientific data involving large data sets and/or high dimensionality has been noted by a variety of authors.1 In this article we will address the problem of visualizing a scalar dependent variable which is a function of many independent variables. In particular, we will be most concerned with cases where the number of independent variables is 3 or greater. Hence, including the single dependent variable, we will be concerned with the problem of "plotting" 4d data and data of dimensionality exceeding 4. Our technique is totally distinct from other multivariate graphic meth0ds.2~3 The technique is confined to the case where each independent variable is sampled in a regular grid or lattice-like fashion, i.e., equal increments. The number and spacing of values may differ for each variable, however, at this point no missing values are allowed. Hence the N independent variable values form a hyper-rectangular lattice in the Ndimensional space within a hyper-rectangular parallelopiped domain. Our technique can be described in either an active or a passive manner. In the active view the points of the N-dimensional independent variables lattice are mapped to a single horizontal axis in a hierarchical manner to be described, while in the passive view an observer samples the points of the Ndimensional lattice in a prescribed fashion and notes the values of the dependent variable. In the passive view a plot of the dependent variable versus a single parametric variable, which is simply the sampling number, forms the multi-dimensional graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Basic Technique</head><p>The primary purpose of this article is to demonstrate that our technique for plotting scalar fields on an Ndimensional lattice can be used for a variety of data visualization tasks such as the location of maxima, minima, saddle poinls, and other features, as well as visually fitting multi-variate data and the visual determination of dominant and weak or irrelevant variables. Hence, we will use a visual means of describing the technique CH2913-2/90/0000/0255/$01 .OO -1990 IEEE 255 for a simple 3d data case and then demonstrate by example how it is extended to higher dimensions rather than presenting a formal mathematical description.  <ref type="figure" target="#fig_0">Fig.1</ref> are three vertically stacked X windows or panels. The problem at hand is to plot the simple function W = x2+y2 over the domain x = -2, -1, 0, 2, 1 and y = -2, -1, 0, 1, 2. The middle and bottom panels show how x and y are sampled. For instance, the middle panel shows white horizontal lines, which should be thought of as rectangles of zero height, on black backgrounds. The white or simply "w" rectangles show x varying from -2 to 2 in a sawtooth fashion with 5 cycles. Note that no numeric scales for either the horizontal or vertical axes will be shown. The bottom panel shows one cycle for the y values again running from -2 to 2. The horizontal axis then corresponds to moving through the 5 by 5 square lattice of x and y by cycling through the 5 x values with y fixed at -2, then incrementing y to -1 and cycling x again and so on. We say that x is the fastest running variable and y is the 2nd fastest. The top panel shows the resulting graph. The dependent variable W is plotted on the vertical and both x and y are on the horizontal as described. First focus your attention on the 25 w rectangles (of zero height). They clearly show that the data consists of 5 parabolic sections, one for each y value. r The splines have been added to guide the eye. The 5 black "background" rectangles correspond to the 5 y values. Their width is determined by the number of x values while their height is AW = Wmm-wdn. Their horizontal location is tied to the value of y and clearly the vertical location of the ith rectangle depends on W(X,yi). That is, the black rectangles circumscribe the data for fixed y but varying x. They should be thought of as data symbols representing data not at a point but over a one dimensional data line. The pattern of black rectangles or simply "b" rectangles also forms a parabola. The technique can be extended to higher dimensions. For example, for a third independent variable z one would sample the data with x as the fastest running variable then y and finally z. Then one would have w rectangles, representing points in the independent variable space, b rectangles (with nested w rectangles) representing lines in the space and then larger white 'rectangles, representing planes in the space, circumscribing the b rectangles. Hence for any dimension one forms an hierarchical horizontal axis and a set of hierarchical nested data driven symbols which represent the dependent variable W at points, along lines, planes, volumes, 4-spaces, etc., in the space of independent variables.</p><p>Before moving to higher dimensionality and large data sets it is useful to consider a variety of functions of 2 independent variables for small data sets in order to establish pattern recognition rules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additive Functions I Vertical or Dependent Variable Offsets</head><p>The example of <ref type="figure" target="#fig_0">Fig.1</ref> is a special case of the more general form W(x,y) = f(x)+g(y). For fixed y = yi, W(X,yi) = W(X) = f(X)+Oi where the offset Oi =g(yi). While Oi clearly affects the vertical location of the i* black rectangle, it does not affect its height AW = functions of an additive form f(x)+g(y) all black rectangles are of the same height given by Af while their vertical locations are driven by g(y). It is useful to think of g(y) as performing transformations on the black rectangles, namely offsetting them vertically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Wma-Wmin</head><formula xml:id="formula_0">= f(x)max -f(x)min = Af. Hence, for</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Multiplicative Functions / Amplitude Modulation / Scaling the Dependent Variable</head><p>Fig2 shows three examples of the form W(x,y) = f(x)* g(y). In each instance g(y) = e-Y. In the top panel f(x) = sin(x), an oscillatory function. In the middle panel f(x) = arctan(x), a monotonic function. In the bottom panel f(x) = e-X a peaked function. In each case the height of the black rectangles decays exponentially due to g(y) since y is the second fastest running or black </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>variable. For fixed y</head><formula xml:id="formula_1">= Yi, W(x,y) = €(X)*Ai where Ai = g(yi). Hence AW = Wma-Wmin = Ai [f(x)max - f(x)dn] = AiAf.</formula><p>Hence generally g(y) amplitude modulates f(x). It is useful to think of g(y) as performing transformations on the black rectangles, namely scaling their heights. shows three examples of functions of the form F(x,y) = F(x*y). In the top panel, F(x,y) = sin(x*y) an oscillatory function with only 2 values of y shown. In the middle panel, F(x,y) = arctan(x*y) a monotonic function with 4 values for y shown. In the bottom 2 panel, F(x,y) = dx*Y) a peaked function with 9 values of y shown. Note that in general both the height and vertical location of the black rectangles may vary or may remain constant depending on the ranges of X*yi and an intrinsic range which depends on the nature of F (for example, the sine's wavelength and the gaussian's location plus or minus a half width or so). Generally, the more robust information content concerning both the x and y dependence of W lies within the black rectangles rather than in their vertical location or extent as was the case for F(x,y) = f(x)+g(y) and F(x,y) = f(x)*g(y) forms respectively. For fixed y = yi the range of Fs argument that is spanned by varying x is AX*yi. Hence y should be thought of as performing transformations on the independent variable x (not the dependent variable W as in the previous two cases), namely, y scales x.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Multiplicative Arguments / Frequency Modulation / Scaling of the Independent Variables</head><p>In the top panel of Fig3 the sine covers one cycle in the first (left) black rectangle and two cycles in the second. In the middle panel one sees a growing fraction of the arctan function's variation as one moves from the first to the last black rectangle. In the bottom panels one sees an increasing fraction of the gaussian as one moves from the central panel to either side. Note that in the middle and bottom panels new pattern aspects arise. In the middle panel the envelope of the black rectangles (indicated by the spline) is arctangent shaped. In the bottom panel the envelope for the bottoms of the black rectangles is of gaussian shape, or equivalently, the pattern left on the white background is gaussian. The top panel would show similar effects if the range AX*Ymin were much shorter than a wavelength and the Ax*ymm were larger or comparable to the wavelength. <ref type="figure" target="#fig_3">Fig.4</ref> shows three examples of F(x,y) = F(x+y). In the top panel W(x,y) = sin(x+y). In the middle panel W(x,y = arctan(xty). In the bottom panel W(x,y) = d x + Y I 2 . Note that here too the heights and locations of the black rectangles may vary depending on the ranges for x and y relative to the intrinsic range scales of the functions. Here, as in the frequency modulation case, it is useful to view y as performing transformations on the independent variable x. Here y is offsetting x. In the frequency modulation case of <ref type="figure" target="#fig_3">Fig.4</ref> y was scaling x. Although the simple phase shift of the sine function in the top panel of <ref type="figure" target="#fig_3">Fig.4</ref> is obvious, it could of course be generalized to the form sin(x+g(y)) and still remain an obvious pattern as long as Ax 2 x.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additive Arguments / Phase Modulations I Offsettting the Horizontal or Independent Variables</head><p>The middle panel shows a shifting arctangent function, namely arctan(x+y). In order to be discernable, Ax for some y must be sufficiently broad (-10) and located near 0 (~10). Similarly, the shifting gaussian in the bottom panel requires an x interval of suitable breadth and location for some y values. Subject to these conditions one could also recognize the generalizations arctan (x+g(y)) and e-(xtg(Y))2.</p><p>4d and the Permute Tool  It is important to note that in the top panel x runs fastest (white) then y (black) and z (white) is the most slowly varying, while in the bottom panel z is the fastest running variable followed by y and finally x is the slowest. That is, we have permuted x and z in relation to how we move through the multi-dimensional space (or equivalently how we set up the hierarchical axis). However, the function W remains W = 2e-Y+z. Although the mathematical structure of W can be deduced from either the top or the bottom panel, the top panel is more easily pattern recognized. Note that the white curves in the top panel are all parabolic, hence x 2 , and that as one moves from one black rectangle to the next (i.e., varies y) within a given large white rectangle (i.e., for fixed z) the heights of the black rectangles decay exponentially, hence -x2e-y. Finally note that all large white rectangles are identical except for being linearly offset in the vertical direction (and of course, in the horizontal), hence W = x2e-y+z. It is important to remember that the multi-dimensional data is presented in 2d not 3d. The 4 large white rectangles do not represent a 3d perspective view! In the bottom panel note that all small white rectangle variation (now z) is linear with the same slope (thus all black rectangles are of the same height) hence z+F(x,y). Next note that vertical positions of the black rectangles decay exponentially (in each large white rectangle) hence z+ e-Y... Finally, note that the heights of the lar e white will see shortly that the permute tool is especially important for higher dimensions and for identifying and isolating irrelevant and dominant variables.</p><p>rectangles vary quadratically, hence W = z+e-f x2. We Large Data Sets: 7d Data and the Subspace Zoom and Clone Tools izontal plus the dependent variable. The fastest running independent variable is white, the second fastest is black, the third is white, etc. Since figures 6 to 11 appear in color at the back of these proceedings with white the fastest running independent variable, blue the second fastest then red, violet, turquoise and yellow, we will refer to these colors in the remainder of the article. The white variable has 9 values, the blue 5, the red 7, the violet 5, the turquoise 6, and the yellow 5 for a total of 47,250 points. This number greatly exceeds the number of horizontal pixels assigned to the upper left panel (-U3 screen or -430 pixels). As a result only the yellow (y) and turquoise (t) rectangles can be displayed. Each of the 5 y rectangles corresponds to a 6d subspace containing the dependent variable (on the vertical) and the 5 remaining independent variables, i.e., w, b, r, v, and t (on the horizontal) with the yellow variable fixed at the appropriate value. Similarly, each t rectangle corresponds to a 4d space, etc. A tool that we have named the subspace zoom tool allows one to point to a particular rectangle and to zoom to the corresponding subspace of one smaller dimension. The zoom can be performed with autoscaling for the vertical or W axis tumed on or off. In <ref type="figure" target="#fig_6">Fig.6</ref> we will locate maxima by using the subspace zoom tool with autoscaling on. If one clicks on the third y rectangle in the top left panel one obtains the top middle panel. If one then clicks on the 6th t rectangle in the top middle panel, one obtains the top right panel. Clicking on either the first or last v rectangle one obtains the bottom left panel. Clicking on the 4th r rectangle one obtains the bottom middle panel. Finally, clicking on either the first or last blue rectangle one obtains the bottom right panel. One can quickly locate maxima in this manner. A similar procedure can be used to locate minima and saddle points.</p><p>In order to display all of the panels on the monitor at once a moveable and scaleable "clone" tool allows us to "clone" the current panel. This tool was used to display each of our subspace zooms shown in Figb.</p><p>In order to visually fit the 7 dimensional data let's repeat the subspace zoom operations just described. We will again start at the upper left panel. Each succeeding panel (reading left to right and top to bottom) will correspond to performing the subspace zoom as before 2 again with the autoscale on. Note that autoscaling of is selected for a zoom if the variations in W are of the 5d, 4d, 3d and 2d subspaces (see vertical offset type (see <ref type="figure" target="#fig_0">Fig.1</ref>) or the amplitude modulation type (see <ref type="figure" target="#fig_1">Fig.2</ref>) but not in the FM <ref type="figure" target="#fig_2">(Fig.3)</ref> or PM <ref type="figure" target="#fig_3">(Fig.4)</ref> cases nor in general for more complex forms. If, however, one inspects the slowest running variable text). <ref type="figure" target="#fig_0">(Color Plate 179, page 479)</ref> Shown in the upper left panel of <ref type="figure" target="#fig_6">Fig.6</ref> is a 7d graph. That is there are 6 independent variables along the hor-in each of the 5 first panels (is., ignoring the lower right panel) one sees: an amplitude modulation of the form -y2 in the first (upper left) panel; a vertical offset of the form arctan(t) in the second panel; an amplitude modulation of the form l+v2 in the 3rd panel; an amplitude modulation of the form e-r2 in the 4th panel; an amplitude modulation of the form l+b2 in the 5th panel; and finally a sin w form in the 6th and last panel. The mathematical function used to generate this data W = -y2 [arctan(t) + (l+v2)(e-$)(l+b2) sin(w)].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Was:</head><p>It is of course important to recognize that in this example there are 6 possible y rectangles that could have been chosen, hence 6 possible 2nd panels. Since there are 5 t rectangles for each y there are 30 possible 3rd panels. Similarly, there are 150 possible 4th panels, 1050 5th panels and 5250 6th panels. We have assumed that a fast scan of all possible 2nd panels showed them to be identical, similarly for the 3rd though the 6th panels. It should be noted that a scan of all possible panels of any type (any subspace dimensionality) is sufficient so long as one can view all nested rectangles within that panel type. In the case of Figd viewing, for example an animation, with autoscaling on, of all 5250 possible 6th panels would be sufficient since each white rectangle (of zero height) represents an individual point in the space while each set of w rectangle in a b rectangle represents a line. Hence this would be a 2d animation. Similarly, viewing an animation of all 1050 5th panels would suffice since w and b rectangles are discernable. This would be a 3d animation. In fact, if the 4th panel were full screen, then viewing an animation of all of its 150 cases would suffice since w, b and r would all be discernible. This would be a 4d animation. We will show an animation example shortly. We will also discuss two other methods for reducing the magnitude of the scanning (animation) task alluded to above. These will prove essential in dealing with larger data sets and/or even higher dimensionality. First, however, we will discuss how the permutation tool can be utilized to assist us in the job of establishing the proper form for F <ref type="bibr">(w,b,r,v,t,y)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Permutation Matrix Tool</head><p>In the last example (see <ref type="figure" target="#fig_6">Fig.6</ref>) there are 6 independent variables. As we saw, the function was displayed in a particular order (remember that we are using the convention that the fastest running variable is w, then b, r, v, t, and y). The function was written as w = -y 2 [arctan(t) + (l+vz)(e-$)(l+b2) sjn(w)]. That is, the variable associated with a negative quadratic was selected to be the slowest, while that associated with the arctan was selected as the second slowest. Consider <ref type="figure" target="#fig_7">Fig.7</ref> which shows a 6 by 6 matrix. Note the solid colors along the diagonal, i.e., w , b, r, v, t and y.</p><p>In this matrix we range over all 30 possible choices for slowest and next slowest variable. Consider a particular diagonal entry, for example, the t entry (or 5,5 entry in the 6 by 6 matrix). All entries in the 5th column have t as the slowest running variable. All entries in the 5th row have t as the second fastest running variable. The same convention is used for 1,l; 2,2; 3,3; 4,4; and 6,6;. Hence if one considers a general entry n, m (column #, row #) the slowest running variable is the variable originally associated with the color in the nth column and the second slowest variable is the variable originally associated with the m* row. <ref type="figure" target="#fig_6">Fig.6</ref> thus corresponds to (6,5). From an examination of all entries it appears that only the original y variable is multiplicative with all other variables. One could then fix the value of this variable via a subspace zoom and generate a 5 by 5 matrix (not shown) from which one would conclude that only the original turquoise variable is additive with all other remaining variables in this subspace. One could then fix the value of this variable via another subspace zoom and generate a 4 by 4 at which point the totally multiplicative nature of the remaining variable functions in this example i.e., (l+v2) (e-r3(1+b2) sin(w) would be apparent.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Identifying Interesting Regions: the General Zoom and Decimate Tools</head><p>The top panel of <ref type="figure" target="#fig_3">Fig.8 shows 4d</ref> data, i.e., 3 independent variables and a scalar dependent variable. The w F i g s Full data set (top), decimated data set (middle) and zoomed view (bottom) (see text). <ref type="figure" target="#fig_0">(Color Plate 121, page 480)</ref> variable has 17 values, the b variable 15, and the r variable 25, for a total of 6375. As a result very little detail is apparent in the top panel. Another tool that has been implemented is a decimate tool that allows one to span the same range for each variable but to sample on a more coarse-grained grid by displaying only every other value or every 3rd, etc. The tool may be applied to as many or as few variables as the user desires. The middle panel of <ref type="figure">Fig.8</ref> shows the result of reducing the red variable to 9 values (i.e., every 3rd) and the blue variable to 6 (i.e., every Yd). The bottom panel shows the results of a applying a general zoom tool where one may look at a contiguous subset of variable values, i.e., a subrange. To the right of the bottom panel are slider-like widgets. These widgets indicate the subrange of each variable that is in view. For example, all 17 values of the white variable are shown. 3 of the 13 values of the blue variable (i.e., the 1st three) and 5 of the 25 values of the red variable (i.e., the 15th through the 19th) are being displayed. turned off. The exponential decay of the heights of the r rectangles (AM) is obvious both in the static top panel view and in the animation frames of the bottom panel, but it has been removed via the autoscaling in the frames of the middle panels. A careful examination of both the static top panel and the unscaled bottom panels' animation frames reveals that the blue gaussians are moving to the right (PM) and broadening (Fh4). These latter points are perhaps more apparent in the scaled animation frames shown in the middle panels where the distracting exponential decay has been removed via the vertical autoscaling. The function used to generate Fig9 is of the form:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Animation Tool</head><p>A robust method for extracting PM and FM (i.e., independent variable offset and scaling) information and mapping it to become new dependent variable(s) has not as yet been implemented. Neither has the ability to collapse 2 or more independent variables to a lesser number, e.g., xy -D x' or x t y --+ x'. These transformations require support for missing values which has not been implemented in our tree arithmetic and permutational algebra.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Wansformations of the Dependent</head><p>Variable and the Expander Tool When plotting 2d data it is often useful to allow transformations of x and/or y. Our earlier discussions have focused on transformations for the dependent and independent variables (i.e., offset and scaling operations) the hierarchical nature of the horizontal axis.  formation tools for the independent variables, since in general they would require support of missing values, we have implemented a means for transforming the dependent variable W. The data used for all the Figs. in this article was generated via an equation parser. The addition of noise, as well as, transformations on the dependent variable w, is accomplished by simply operating on the stream of W values located at the bottom of the tree and replacing the original stream by the modified stream. Shown in <ref type="figure" target="#fig_0">Fig.10 is 4d</ref> data generated by the function</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Noisy Data and Dominant versus Weak Variables</head><p>The top panel of <ref type="figure" target="#fig_0">Fig.10</ref> shows W on the vertical axis while the bottom panel shows</p><p>Note how the log transformation has effectively removed the AM and rendered all variables additive as indicated by the fact that all r rectangles are of the same height. To the right of each panel is shown the result of using yet a final tool that we call the expander. One may use the subspace zoom to select any point in the space. Then the expander tool will expand W about that point by plotting the W variation in all variable directions (in this case w, b and r) using a uniform metric for all variables. This tool is quite useful since a direct visual reading of the metrics for w, b and r and other independent variables is not possible due to Shown in <ref type="figure" target="#fig_0">Figs.11 and 12</ref> are the functions (see top left panels) W = (1t.Olw) + (1+.02b2)e-r2e-v</p><p>where the ranges of w and b are of order 1 so that they are very weak variables in comparison to r and v. To this signal 1% <ref type="figure" target="#fig_0">(Fig.11)</ref> or 10% ( <ref type="figure" target="#fig_0">Fig.12</ref>) gaussian noise was added to simulate more realistic data. One can clearly see the exponential decay associated with v and the gaussian behavior associated with r in both cas-es by viewing the upper left panel of each figure. The middle and right upper panels show the results of performing unscaled subspace zooms to display the magnitude of variations in W due to both b and w and to w alone, respectively. The bottom panels on the other hand show the effect of permutating the two weak variables with the two dominant variables. The right bottom panels show the results of two subspace zooms so that only the dominant variables are displayed. Although the effects of noise, particularly on the new white variable in the lower right panel of <ref type="figure" target="#fig_0">Fig.12</ref> are apparent, its status as a dominant variable as well as its exponential decay form is still evident. Similar statements apply to the new blue variable (the gaussian variable) in the lower right panel of <ref type="figure" target="#fig_0">Fig.12</ref>. We have not implemented a signal averaging tool which could in principle be used to reduce noise by averaging over very weak or irrelevant variables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Programming and Performance Issues and Generalizations of the Technique</head><p>The code is written in C and runs in an X windows environment using X lib for graphics. The basic structure is a balanced tree. A 12.5 ME' SparcStation 1 with 16MBytes RAM and a GX graphics accelerator board provides a fast exploratory data analysis environment for up to 106 data points in a 2 to 10 dimensional independent variable space. For 106 points zooms are executed in less than one second. Animation speeds are highly dependent on window size and subspace dimensionality and range from less than 0.1 second per frame to about 5 seconds per frame for 106 points.</p><p>Permutations, clones, decimations and expansions can take from 5 to 10 seconds for 106 points.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1</head><label>1</label><figDesc>variation, bottom shows y variation. Top panel shows W = x2+y2, middle shows x Shown in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>2Fig. 2</head><label>2</label><figDesc>Amplitude modulation of a) sine (top) b) arctangent (middle) c) gaussian (bottom).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3</head><label>3</label><figDesc>tangent (middle) c) gaussian (bottom). "Frequency modulation" of a) sine (top) b) arc-Fig3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 "</head><label>4</label><figDesc>Phase modulation" of a) sine (top) b) arctangent (middle) c) gaussian (bottom).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5</head><label>5</label><figDesc>Plot of W = x2e-y+z with x fastest and z slowest (top) and with z fastest and x slowest (bottom).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5</head><label>5</label><figDesc>shows the appearance of 4d data following W = x2e-y+z for 5 values of x, 4 values of y and 4 values of z.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 =</head><label>6</label><figDesc>-Y2 [arctan(t) + (1tv2)(e-r * W renders identical results, no matter which rectangle (upper left) and</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7</head><label>7</label><figDesc>All choices for slowest and next slowest variables for the function of Figd (see text). (Color Pleb 120, page 479)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>Shown in the top panel of Fig9 is a 4d graph involving the 3 independent variables w, b and r. The sliderlike widgets next to the top panel indicate that the entire range of w, b and r is being spanned. Originally, there were 20 values for w, 17 for b, and 20 for r for a total of 6800. The w and r variables have been decimated to 5 values each while the number of b's remains at 17 to clearly define the gaussian shape. The middle panels show 5 frames corresponding to animating through the 5 values of the r variable with the vertical autoscaling turned on. The bottom panels show the same animation frames but with the autoscaling Fig9 Plot of W = we-(b-r)2re-r and x,y and z widgets (top), animation frames for varying z with autoscaling on (middle), animation frames for varying z with autoscaling off (bottom). (color Plate 122, page 480)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>= e-w2e-2b2e-3r2 and expansion of W directions at the maximum point (O,O,O) with in x, a linear W scale (top) and a logarithmic W scale (bottom). (Color Plere 123, page 480)having to do with the mathematical form of F(x,y ...).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 11</head><label>11</label><figDesc>Identification of dominant and weak variables Although at this point we have not implemented trans-for 5d data with 1% noise. ( c o j o r p~~t e 124~</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We are currently generalizing the technique to support rotations, independent variable transformations and other operations requiring missing values support. Moreover, we are generalizing the technique to deal with randomly sampled independent variables.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">For an excellent review of multi-variate graphing techniques involving projections, see</title>
	</analytic>
	<monogr>
		<title level="m">Dynamic Graphics for Statistics</title>
		<editor>&amp;. William S . Cleveland and Marylyn E. McGill (Wadsworth &amp; Brooks/Cole</editor>
		<meeting><address><addrLine>Belmont, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">1</biblScope>
		</imprint>
	</monogr>
	<note>Dynamic Graphics for Data Analysis</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">For a non-projective parallel coordinate multi-variate graphing technique, see: A. Inselberg</title>
	</analytic>
	<monogr>
		<title level="m">Rep.G320-2711, IBM Los Angeles Scientific Center</title>
		<meeting><address><addrLine>Los Angeles CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
