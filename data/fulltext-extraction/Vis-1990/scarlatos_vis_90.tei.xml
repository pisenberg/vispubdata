<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">HIERARCHICAL TRIANGULATION USING TERRAIN FEATURES</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lori</forename><surname>Scarlatos</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grumman</forename><surname>Data Systems</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Woodbury</forename><surname>Rd</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>NY</roleName><surname>Woodbury</surname></persName>
						</author>
						<title level="a" type="main">HIERARCHICAL TRIANGULATION USING TERRAIN FEATURES</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:25+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Triangulated Irregular Networks (TINS) have been used for surface approximation in many applications. A hierarchical representation is often desirable if the surface is to be rendered at different resolutions. Past work has emphasized techniques where a coarse triangulation is refined by focusing on plane geometry using very little the surface data, For example, a new point is introduced where the deviation of the surface is maximum and the triangle is subdivided into four others. Variants of Delauney triangulations have also been used. We propose a technique where we look more carefully into the features of the surface to be approximated. For example, if there is a ridge, the original triangle is divided by a l i e along the ridge and one of its vertices is used to subdivided the resulting quadrilateral. In this way the number of very thin triangles (slivers) is significantly reduced. Such triangles produced undesirable effects in animation. In addition the number of levels of the TIN tree is reduced which speeds up searching within the data structure. Tests on data with digital elevation input have confirmed the above theoretical expectations. On eight such sets the average &quot;sliveriness&quot; with the new method was between 1/5 and 1/10 of old triangulations and number of levels was absut one third. There was an increase in the number of descendants at each level but the total number of triangles was also lower. Note: Because of space limitations many details and examples have been omitted from this version of the paper. Interested readers should request from the authors a technical report with the same title providing full details of the method, as well as additional examples of implementation than poresented here.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Triangulation is a popular technique for approximating surfaces. Many cartographic applications rely on triangulated terrain models for simulation, visualization, and analysis. Applications such as the finite element method, medical imaging, and graphics in general (including animation) also utilize triangulated surfaces. Triangulations are popular because triangles are simple geometric objects that are simple to manipulate and render. Triangulated Irregular Networks (TINs) offer additional advantages because they are not bound by regularity constraints. Hence TINs can approximate any surface at any desired level of accuracy with a minimal number of polygons.</p><p>In general treatises on triangulation fall into two groups: those that search for efficient algorithms to tri- angulate a given polygon and those that emphasize the application of the triangulation to approximate surfaces. In the former category, [ 11 outlines a greedy triangulation for polygons using dynamic programming, and <ref type="bibr">[2,</ref><ref type="bibr">3,</ref><ref type="bibr">4]</ref> outline even faster algorithms. Reference <ref type="bibr">[5]</ref> describes an algorithm for triangulating a polygon with the constraint that no obtuse angles are allowed. However, we are more interested in approximating surfaces with triangulation. Since triangulation of a surface is done once and the results are used repeatedly, computational efficiency of the triangulation is not as critical. Instead, we strive to produce the triangulation that best approximates the surface. A good surface triangulation meets given accuracy requirements while minimizing the number of triangles used to model the surface. A good triangulation also minimizes the number of very thin, slivery triangles which produce artifacts in renderings of surface models. Surface triangulation algorithms fall into two sub-categories: those that triangulate a set of isolated points, and those that triangulate a set of connected points (critical lines) by adding nonintersecting connections.</p><p>Triangulation algorithms for isolated points are numerous, although many are a variation on the Delaunay triangulation scheme. References <ref type="bibr">[6,</ref><ref type="bibr">7]</ref> describe only a few of these. Triangulations of both points in a plane and simple polygons is covered in <ref type="bibr">[8]</ref> while a survey of greedy, Delaunay, and optimal triangulations of isolated points (the last of which is still an open problem) is found in <ref type="bibr">[9]</ref> . Other algorithms for triangulating points on the plane can be found in <ref type="bibr">[ 10,</ref><ref type="bibr">111</ref> . Yet many surfaces -especially natural ones -form continuous patterns which aren't adequately represented by isolated points. Because these algorithms ignore the third dimension, they can produce triangle edges that contradict the topology of the actual surface.</p><p>Triangulations of planar graphs -i.e. points with initial connections -are more llkely to produce accurate models because the lines describing surface topology are given. Some papers such as <ref type="bibr">[12,</ref><ref type="bibr">13]</ref> deal with triangulating cross-sections from tomographic scans, although the methods of both of these papers require human intervention when the contours get complex. Other triangulations of cartographic critical lines have been recently published <ref type="bibr">[14,</ref><ref type="bibr">15,</ref><ref type="bibr">7]</ref>.</p><p>CH2913-2/90/0000/0168/$01.00 -1990 IEEE This paper describes a hierarchical triangulation built from a digital elevation model (DEM) in grid form. Each level in the hierarchy corresponds to a different level of detail that approximates the surface within a given tolerance (i.e. maximum error). The top level is the coarsest, containing the smaller number of triangles which approximate the surface within some tolerance t o .</p><p>The i +lrh level is related to the irh level as follows. The number of descendent triangles n can be any integer, possibly 1. Such a hierarchical triangulation allows easy implementation of such operations as zooming when viewing the surface. It also facilitates searching and other geometrical operations such as finding the intersection of two surfaces. Furthermore, it makes realtime simulation and visualization possible for applications that can represent less important areas with less detail in mixed-resolution models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PastWork</head><p>Previous work on triangulations by one of the authors has researched techniques to find critical points and lines <ref type="bibr">[16]</ref> , triangulate them <ref type="bibr">[15]</ref> , and then refine those triangulations to produce a hierarchy of detail levels for fast spatial search with maximum accuracy <ref type="bibr">[17]</ref> .</p><p>These algorithms represent significant improvements over other algorithms, producing good triangulations. However, the above algorithms do not allow for refinement down to a specified level of accuracy.</p><p>Although several refinement techniques have been suggested in the literature <ref type="bibr">[18,</ref><ref type="bibr">19,</ref><ref type="bibr">20]</ref> , these algorithms can introduce artifacts to a terrain model because they consider only the locality of points in a 2D plane instead of actual terrain topology. Consider, for example, DeFloriani's first algorithm for triangle refinement <ref type="bibr">[19]</ref> which splits a mangle by connecting its comers to a selected interior point (usually, the point of maximum distance between the surface and the plane defined by the vertices of the triangle). The algorithm ignores the coherence of cartographic features: valleys or ridges have a linear structure. <ref type="figure">Figure 1</ref> shows the results of ignoring such coherence. We assume that a ridge (its points marked by small circles in (a)) crosses the triangle. (b) shows that the maximum point triangulation will produce an unreasonably large number of triangles. Even worse, the mangles will have very sharp angles, which is an undesirable property <ref type="bibr">[5]</ref> . Such triangulations may cause numerical stability problems in finite element methods and also produce undesirable display artifacts.</p><p>In contrast, if we realize that we deal with a ridge and introduce a dividing line along it as shown in (c) we will end up with fewer triangles, none of them very sharp. We should point out that triangles with very sharp angles may be inevitable for some types of data. For example, if we have a steep cliff we will see large differences in the value between adjacent elevation points. Then triangles with very sharp angles cannot be avoided.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">NewMethod</head><p>A generalization of the critical line method could produce better accuracy with fewer triangles. We have implemented such a strategy as follows. We start with a coarse triangulation produced by techniques outlined in Scarlatos' three papers. Our refinement technique pays particular attention to terrain characteristics, approximating critical lines at each step. To accomplish this, we find for each triangle four error values: one inside the triangle, and one on each of the three edges. <ref type="figure">Figure 2</ref> shows the five ways that a triangle may be refined. In all cases our goal is to approximate the surface form by splitting edges if necessary, thereby reducing the number of splits or refinements required to achieve a desired level of detail. If an isolated peak or pit resides within the triangle, it is split at that central peak or pit point as shown. If a single ridge or channel line travels up to that peak or pit, the triangle is split where that line crosses the edge of the triangle and at the central peak or pit point. If, however, a single ridge or channel line enters the triangle and ends at a saddle point or flat, then the center point is insignificant and the triangle is split by one edge as shown. If a ridge or channel line passes through the triangle, significant errors will be found on two edges of the mangle. A line connecting these points approximates the topographical line, and an additional edge splits the remaining quadrilateral. Finally, if a triangular patch corresponds to a rapidly fluctuating surface, many points are likely to have significant errors. Splitting this type of triangle on all edges segments the high-frequency regions which may then be further refined.</p><p>During triangulation, special care must be taken to avoid quantization artifacts caused by vertices falling between grid points. This topic is discussed in our technical report of the same title.</p><p>We repeatedly split the triangles until they all meet the given accuracy requirements for the current level of detail. This accuracy is checked by projecting all original grid points to the surface of the triangulated model and measure the difference. Intermediate triangles, used to produce but not included in the final triangulation for the current level of detail, are discarded. This reduces the number of levels in the hierarchy and the number of tri-angles within each level, making faster search, display, and processing possible. If polygon constraints are more important than the level of error, we can easily check the polygon count and terminate a level when the limit is approached.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Implementation of the Algorithm</head><p>Here we outline the implementation of the algorithms associated with our method. Each point in the original elevation matrix has an associated ground position (also used as an array index) and elevation. Two global functions, GET-POINT-INDEX and GET-ROW-COL, respectively return a point index given row and column numbers, and row and column numbers given a point index. Each point also is associated with zero, one or two triangles in a Membership list. Triangle vertices are associated with no triangles. If a point is associated with 2 triangles, then it belongs to an edge and a distance to that edge is stored. Otherwise, the point is within a single triangle. Three point indices define a triangle. Each triangle is associated with a level of detail and contains pointers to its parent, its children, its siblings, and its three neighbors (ie the triangles that share its edges). In addition, triangles have temporary structures keeping track of their splitting points, the maximum error found within them, and the number of edges to be split. A flag indicates whether the triangle meets the accuracy standards of the current level.</p><p>The main program retrieves the input data, calls the appropriate triangulation routines, and writes out the results to a data base.</p><p>The level of error within a triangle is found by taking all grid points within the boundaries of that triangle, projecting them to the surface of the triangle, and comparing the results to the original elevation values. Errors are found in four regions on a mangle: on each of the three edges, and within the triangle. The errors found by this routine determine how the triangle will be split (if at all) later on.</p><p>The procedure FIND-SPLITS relies on several local routines to do its work. Routine PROJECT calculates the elevation of a point projected to a given triangle. The procedure SORT uses the quicksort method to reorder LIST and DISTLIST so that the values in DIST-LIST appear in descending order; and the point indices in LIST are the ones corresponding to the appropraite DIST-LIST values.</p><p>Routine SIGNIFICANCE returns TRUE if the given error value is significant enough to merit splitting at the related point. This may be calculated in two ways. Using the fust way, if the given value is greater than the threshholded error for the current level of detail, then that point is significant. Using the other way, if the given value is more than some percentage of the maximum error found within a triangle, then that point is significant. In either case, a point is insignificant if its error falls at or below the threshhold for the current level of detail.</p><p>Although each of the five regular triangulation algorithms is different, they all follow the same pattern of steps.</p><p>There are two important local procedures for adding edges to the triangulation. The first is ADD-EDGE which connects two previously unconnected vertices. MEMBER values are updated for points on and alongside the new line. Endpoints are given null MEMBER values. The second routine, SPLIT-EDGE, splits an existing edge into two new edges, possibly adding a bend in the middle. If the edge has not already been split, it calls ADD-EDGE twice. Otherwise, it finds the new neighbors added by the split and returns those.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GEN-TRIANG generates a new triangle number.</head><p>To save space, the current triangle number is recycled, becoming the first child of T. ADD-TRIANG actually generates the new triangle.</p><p>When a splitting point on one edge is colinear with another edge, special triangulation must take place.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Data Base Structure</head><p>This algorithm produces all of the information required to both render the 3D surface and search for spatial relationships. A header record includes information such as a ground position for the lower-left comer of the triangulation; spacing between posts in the original grid; elevation ranges in the triangulation; number of levels. This is followed by the level records. Each level has a threshhold of allowable error, used to produce the triangulation. It also has a number of points, number of triangles, and a list of triangles. Each triangle is defined by 3 point indices, and has a parent pointer, child pointers, and neighbor pointers. All this is followed by a single point list. Only points that appear in the triangulation are written to the data base; all others are unnecessary. Points are ordered such that if level L uses N points, then it uses points 1, -* . ,N. This reduces retrieval time for a level of detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Results</head><p>To test our algorithm, we implemented and ran it on several test cases. We selected eight (8) areas of interest (AOI) as test data, each covering 75x75 elevation points. These areas, representing various terrain types, come from the Defense Mapping Agency's Digital Terrain Elevation Data (DTED Level I).? A triangulation t DTED Level 1 elevation points are three seconds of an arc employing all 5625 points in an A01 would contain 10,952 triangles. We implemented our algorithm with varying parameters to see which behaved best. The first parameter is how we determine the significance of point p's error ep. Error ep may be considered significant compared to 1) tolerance value ti for level i, so that ep 2 t i , or 2) a percentage N of the maximum error e,-found for current triangle t , so that ep 2 e,-. The second parameter determines when we split a triangle at one edge and a significant center (as shown in <ref type="figure">Figure 2</ref>). Center point c may be considered significant compared to 1) the error e, of splitting point v on the edge of the triangle, so that e, 2 e,, or 2) the significance value used to determine the significance of all other points, as determined by the first parameter. Hence we ran four optional programs. Option 1 uses tolerance to determine significance, and requires a center point to be at least as significant as an edge point in order to be used. Option 2 uses 75% of the maximum error within a triangle to determine significance, and also requires a center point to be at least as significant as an edge point. Options 3 and 4 are like options 1 and 2 respectively, except that a center point's significance is determined by the usual measures. As a basis of comparison, we implemented DeFloriani's first algorithm [ 191 and ran it with the same test data.</p><p>All four options and the basis algorithm were executed on the eight AOIs, producing triangulations with a minimum error of 10 meters. All tests demonstrated that our algorithm works well. <ref type="table" target="#tab_1">Table 1</ref> shows some of our results.</p><p>A better triangulation will produce fewer slivery triangles. The table shows how slivery the resulting triangles were. We measured sliveriness with the following ratio, calculated for each triangle in the triangulation:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Perimeter Area</head><p>(For equilateral triangles this ratio equals 20.78.) We then calculated the average sliveriness for the entire structure, and divided the result by the sliveriness ratio for an equilateral triangle. A lower sliveriness value is better. Note that on the average most of the triangles have much sharper angles than sixty degrees. Using the basis case, some angles are as small as 0.25 degrees. Notice how much better our algorithm performed, using all four options. Options 1 and 2 seem to work about equally well, indicating that the best measure of point significance is determined by data characteristics. Options 3 and 4 consistently performed a little worse.</p><p>This leads us to conclude that a center point should only be included in the division of a mangle if it is more significant than the edge point.</p><p>A better triangulation will permit fast spatial search. The time required for a search is determined by the number of levels that must be searched, and the number of child nodes that must be examined at each level. DeFloriani's algorithm, which always splits a parent triangle into 2 or 3 children, has an average of about 2.5 children per parent node. The number of levels in a hierarchy depend on the number of iteration levels required to build the triangulation. Our algorithm, on the other hand, guarantees a fixed number of levels in the hierarchy, but can split a parent triangle into any number of children. Although one may presume that a very large number of children will be produced, table 7 shows that this is not the case. In this table, the "old" algorithm is the basis case, and the "new" algorithm is our option 1. <ref type="table" target="#tab_2">Table  2</ref> shows that search times using our hierarchy will be as fast as, or faster than, the other. Additional results can be found in our technical report. <ref type="figure">Figure 3</ref> demonstrate the significances of the improvements our algorithm makes. <ref type="figure">Figure 3a</ref> shows a view of A01 1 using the original grid data, represented by 10,952 triangles each. <ref type="figure">Figure 3b</ref> shows the same views of the data triangulated with DeFloriani's algorithm (the basis case), containing 1714 and 2318 triangles respectively for a maximum error of 10 meters. <ref type="figure">Figure 3c</ref> shows the same views of our algorithm (using option l), containing 1836 and 1979 triangles respectively for a maximum error of 10 meters.</p><p>While Delaunay triangulations have been proposed as means for reducing the number of very sharp triangles within hierarchical structures, [20] Delaunay triangulations have serious drawbacks as lscussed in <ref type="bibr">[14]</ref> . In some cases, using Delaunay triangulation to add points can actually increase error levels in the model, even though the model contains more triangles. The algorithm of [51 while it avoids generating obtuse triangles, it generates far too many points and triangles for our purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Conclusions</head><p>We have presented an algorithm that produces a hierarchy of triangulations in which each level of the hierarchy corresponds to a guaranteed level of accuracy.</p><p>Because our algorithm focuses on the topology of a surface, it minimizes the number of triangles, and produces fewer long and slivery triangles, within each level of detail. These features add up to a triangulation that provides great accuracy in a model that can be rapidly searched, rendered, and otherwise manipulated.</p><p>We plan to extend this work by using triangulation for representing other data besides terrain. Finite element methods, for example, use triangulations extensively, yet apart, about 100 meters.</p><p>suffer from Occurrences of slivers. We will consider what the triangulation criteria are for related applications. Other data such as images may also be triangulated. We will address numemus issues in this area, such as how to fuse disparate triangulations such as a terrain model with a Landsat overlay.  * number of levels specified for new algorithm ** number of children assumed to be 2.5 for old algorithm <ref type="figure">Figure 1</ref>: (a) Elevation points along a ridge intersecting the triangle, (b) results of a n g u l ation with respect to maximum error point, (c) results of triangulation using cartographic coherence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Split in center</head><p>Split on 1 edge (significant center) Split on 1 edge (insignificant center)</p><p>Split on 2 edges Split on 3 edges <ref type="figure">Figure 2</ref>: Split strategies for preserving cartographic coherence.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Tolerance is smaller than ti. For each triangle Tj,of the i ' level there exists a set of mangles Tj;', . * , Tj:' at the i + 1' level, such that UT;:' =Ti. k = l</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>The0 Pavlidis State University of New York Dept. of Computer Science Stony Brook, NY 11794</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 Measures of Sliveriness* A01 - A01</head><label>1</label><figDesc></figDesc><table><row><cell></cell><cell>Basis</cell><cell>Option 1</cell><cell>Option 2</cell><cell>Option 3</cell></row><row><cell>1</cell><cell>32.294</cell><cell>5.037</cell><cell>5.071</cell><cell>6.301</cell></row><row><cell>2</cell><cell>52.487</cell><cell>9.864</cell><cell>12.107</cell><cell>1 1.074</cell></row><row><cell>3</cell><cell>35.889</cell><cell>6.047</cell><cell>5.739</cell><cell>6.398</cell></row><row><cell>4</cell><cell>50.682</cell><cell>11.619</cell><cell>11.164</cell><cell>12.581</cell></row><row><cell>5</cell><cell>56.835</cell><cell>15.054</cell><cell>8.521</cell><cell>14.329</cell></row><row><cell>6</cell><cell>40.932</cell><cell>5.461</cell><cell>5.578</cell><cell>7.376</cell></row><row><cell>7</cell><cell>51.261</cell><cell>4.336</cell><cell>5.029</cell><cell>6.089</cell></row><row><cell>8</cell><cell>39.925</cell><cell>5.873</cell><cell>6.1 12</cell><cell>6.805</cell></row><row><cell>-</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="2">Number of</cell><cell></cell></row><row><cell></cell><cell></cell><cell>Levels*</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell cols="2">Old New</cell><cell></cell></row><row><cell></cell><cell></cell><cell>15</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>17</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>17</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>17</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>19</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>18</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>17</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>18</cell><cell></cell><cell></cell></row></table><note>* normalized to 1 for an equilateral triangle</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 Comparison</head><label>2</label><figDesc></figDesc><table><row><cell>of Hierarchies</cell><cell></cell></row><row><cell cols="2">Average Number of Children* *</cell></row><row><cell></cell><cell>-</cell></row><row><cell>Old</cell><cell>New -</cell></row><row><cell>2.5</cell><cell>2.8</cell></row><row><cell>2.5</cell><cell>2.4</cell></row><row><cell>2.5</cell><cell>3.6</cell></row><row><cell>2.5</cell><cell>3.6</cell></row><row><cell>2.5</cell><cell>2.4</cell></row><row><cell>2.5</cell><cell>2.5</cell></row><row><cell>2.5</cell><cell>2.4</cell></row><row><cell>2.5</cell><cell>2.3</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The Design and Analysis of Computer Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Aho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Hopcroft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Ullman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1974" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, Mass</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Triangulating a simple polygon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">R</forename><surname>G M Y</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Preparata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Tarjan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="175" to="180" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A Fast Las Vegas Algorithm for Triangulating a Simple Polygon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Clarkson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Tarjan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Van Wyk</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>preprint</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Triangulating simple polygons and equivalent problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fournier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Montuno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="153" to="174" />
			<date type="published" when="1984-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Nonobtuse Triangulation of Polygons</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">S</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Grosse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">S</forename><surname>Raferty ; Watson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Disrete Comput. Geom</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="167" to="172" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
	<note>The Computer Journal</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Delaunay triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Dwyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="137" to="151" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Preparata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Shamos</surname></persName>
		</author>
		<title level="m">Computational Geometry</title>
		<meeting><address><addrLine>New York, NY</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Survey: systematic triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Watson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Philip</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision, Graphics, and Image Processing</title>
		<imprint>
			<date type="published" when="1984" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="217" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">point set approximates the Optimal triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mirante</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Weingarten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">K</forename><surname>Manacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename><surname>Zobrist</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comuters Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="31" to="34" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
	<note>Information Processing Letters</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Conversion of complex contour line definition into polygonal element mosaics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">N</forename><surname>Christainsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">W</forename><surname>Sederberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIG</title>
		<meeting>SIG</meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A new general triangulation method for planar contours</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">G</forename><surname>Dennehy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ganapathy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Christensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1978" />
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="187" to="192" />
		</imprint>
	</monogr>
	<note>Fitting a Triangulation to Contour Lines</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Compact Terrain Model Based On Critical Topographic Features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">L</forename><surname>Scarlatos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Auto-Carto 9</title>
		<meeting>Auto-Carto 9<address><addrLine>Baltimore, MD</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989-04" />
			<biblScope unit="page" from="146" to="155" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Refined Triangulation Hierarchy for Multiple Levels of Terrain Detail</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">L</forename><surname>Scarlatos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">L</forename><surname>Scarlatos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the I990 ASPRSIACSM Annual Convention</title>
		<meeting>the I990 ASPRSIACSM Annual Convention<address><addrLine>Denver, Colorado; Phoenix, AZ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990-03" />
		</imprint>
	</monogr>
	<note>Proceedings of the IMAGE V Conference. to be published</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Automatic Extraction of Irregular Network Digital Terrain Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Little</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Defloriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Falcidieno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Nagy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Pienovi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 79</title>
		<meeting>SIGGRAPH 79<address><addrLine>Chicago, Illinois</addrLine></address></meeting>
		<imprint>
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
	<note>A Hierarchical Structure for Surface Approximation</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A Pyramidal Data Structure for Triangle-based Surface Description</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Defloriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="67" to="78" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
