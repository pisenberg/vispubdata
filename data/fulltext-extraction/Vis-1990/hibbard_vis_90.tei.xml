<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The VIS-5D System for Easy Interactive Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bill</forename><surname>Hibbard</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Space Science and Engineering Center</orgName>
								<orgName type="institution">University of Wisconsin -Madison</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dave</forename><surname>Santek</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Space Science and Engineering Center</orgName>
								<orgName type="institution">University of Wisconsin -Madison</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">The VIS-5D System for Easy Interactive Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:24+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>The VIS-5D system provides highly interactive visual access to 5-dimensional data sets containing up to 50 million data points. The user has easy and intuitive control over animated 3-dimensional depictions o f multiple interacting physical variables. VIS-5D is runs on the Stardent ST-1000 and ST-2000 workstations and is available as freeware from the Space Science and Engineering Center.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The VIS-SD System We wrote the VIS-SD software system to help earth scientists understand their large and complex data sets. VIS-SD runs on the Stardent ST-1000 and ST-2000 workstations and generates animated 3-dimensional graphics from gridded data sets in real time. It provides a widget-based user interface and fast visual response which allows scientists to interactively explore their data sets. VIS-5D generates literal and intuitive depictions of data, has user controls which are data oriented rather than graphics oriented, and provides the WYSIWYG (what-you-see-is-what-you-get) response familiar to users of word processors and spread sheets. The result is a system which is easy for scientists to use, so that they can become the producers and directors of their own animations. VIS-5D can be applied to any data set in the McIDAS grid file format and containing up to 50 million grid points. Data sets containing hundreds of millions of grid points can be resampled to this 50 million point limit for interactive visualization.</p><p>We were motivated to write VIS-SD by our experiences using our 4-D McIDAS system running on IBM mainframe computers <ref type="bibr">[l]</ref>. The 4-D McIDAS system generates 3dimensional images in about 30 seconds each, with another 30 seconds each to load the images into a workstation for animation. We used this system to produce animated visualizations for many earth scientists. They were constantly wanting to change the animations and frustrated by the turnaround time. They found the video tapes we produced useful for public presentations and for teaching, but not for their own insight into their data sets, which they continued to get from the 2dimensional graphics systems which they could use directly. Thus we wrote the highly interactive VIS-SD system which makes 3-dimensional graphics easy for scientists to use directly [2].</p><p>The VIS-SD system is available from the University of Wisconsin Space Science and Engineering Center as freeware. In addition to the visualization software, it includes tools for managing and analyzing large gridded data sets, a skeleton program for converting external data to the McIDAS grid file formats, documentation on how to use the software, and sample data sets to practice using the software.</p><p>Five-dimensional Data Sets VIS-SD works with data in the form of a 5-dimensional rectangular grid of points. In a FORTRAN or C program these data sets could be declared as arrays with five dimensions. Three of the dimensions are spatial, one is time, and one is used to enumerate multiple physical variables. Thus these data sets sample a spatial volume a t a regular lattice of points, sample dynamics a t multiple steps over a time interval, and include multiple interacting physical variables.</p><p>Although a 5-dimensional grid may seem like a specialized format, it is the usual format for output from atmospheric simulations. It is also a common output format for oceanography and hydrology simulations, and f o r some remote sensing instruments like radars which can scan quickly enough to produce time varying volumetric images. The most general setting for the earth's physical systems is multiple variables over three spatial dimensions plus time. Our 5-dimensional rectangles are just this setting, subject to discrete and uniform sampling of space and time. Thus the data format for VIS-5D is actually widely applicable to earth science data. For meteorological data the spatial dimensions are often latitude, longitude and altitude and the variables might be temperature, pressure, moisture and three wind vector components. For oceanography data the spatial dimensions are latitude, longitude and depth and the variables might be temperature, salinity, density and three ocean current vector components. For hydrology data the variables might be proportions for different rock and soil types, and three ground water flow vector components.</p><p>The VIS-5D system provides a high degree of interaction by storing the entire data set in the main memory of the workstation. Because of its compressed formats, this can be up to 50 million grid points. For example, these 50 million points can be factored as 50 latitudes by 50 longitudes by 20 altitudes by 100 time steps by 10 different physical variables. VIS-5D includes functions for managing much larger disk based data sets, and for resampling them down to smaller extents or to lower resolution in order to f i t the size limit for interactive visualization. A factor of 2 reduction in resolution in time and space yields a 16 times reduction in data volume, which would allow a simulation data set of 800 million points to be reduced to the 50 million point limit.</p><p>The VIS-5D system supports a data format for trajectory paths, which are used to represent wind, ocean currents, ground water flow, and other motion fields, and a global topographical map data set, which is useful for large scale earth based data sets. The system includes a program for calculating trajectories from gridded motion vector fields, and management functions for listing, copying, merging and deleting data sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>What Scientists Need</head><p>We accumulated considerable experience producing visualizations with scientists using our 4-D McIDAS system. Because 4D McIDAS requires an hour or more to produce each new animation sequence, this experience gave us an understanding of which types of changes to an animation sequence earth scientists really care about. These are:</p><formula xml:id="formula_0">A. B.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.</head><p>D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.</head><p>F.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>H.</head><p>change the viewpoint in three dimensions.</p><p>change the combination of simultaneously depicted variables.</p><p>change the depiction of a variable. For an iso-level contour surface this a change to the defining value. For contour lines on a surface this is a change to the position of the surface and the density of the contour lines. For trajectory lines, this is a change the density of the lines or placing trajectories through specific points. change the time dynamics. This includes the choice of whether to enable time stepping, whether to step forward or backward (useful for tracing effects back to their causes), and how fast to step. change the spatial extents of the depicted region.</p><p>calculate new variables from existing variables, including arithmetic, differential and integral operators. make objects semi-transparent. avoid depicting different variables using the same color.</p><p>It is worth noting that the types of controls the scientists care about relate to data rather than graphics. The value system of scientists is very different from the value system of film and television producers. Scientists need to clearly perceive 3-dimensional geometry and time dynamics, and thus require some minimum standards of graphics quality. However, the benefits of advanced photorealistic techniques are often outweighed by the negative impact of their computational difficulty on system response time to user changes. Of course, many of the controls scientists care about are also computationally difficult, and this results in compromises in the user interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The VIS-5D User Interface</head><p>The goal of VIS-SD is to provide the scientist with an easy user interface for controlling the display, and fast visual response to changes. The workstation should feel like a steerable window which the scientist **flys*' through a huge data set, hunting for interesting information hiding in the mass of data.</p><p>VIS-SD is able to present a simple and intuitive interface to the scientist because it deals specifically with the 5-dimensional rectangles of data produced by environmental simulations, because it generates very literal data depictions, and because it concentrates on the data oriented choices which scientists want.</p><p>The figure below shows a scene generated by VIS-SD which is part of a video depicting cold fronts moving across the North Atlantic. The data are taken from a forecast for February 4, 1988 by the European Center for Medium-range Weather Forecasts. The scene shows a topographical map, a transparent specific humidity contour surface a t 6.38 grams per kilogram, and pressure contour lines at an altitude of 0.89 kilometers with a spacing of 5 millibars. The small clock hand in the upper left corner of the 3-D window shows where the scene is within the data set's time span. The highlighted widget buttons on the left show that the map, Q (specific humidity) and P (pressure) are enabled for display. The slider widgets show the level of the Q contour surface, the altitude and spacing of the P contour lines, and the color (white) and transparency (0.55) of the Q contour surface.</p><p>The three spatial dimensions of the data set rectangle are depicted with a single 3-dimensional box, and all the graphical elements depicting the data set are drawn in this common frame. The 3-D box contains either a static depiction of a single time step, or an animated depiction sequencing through the data set's time steps. The graphical elements of the depiction may include a topographical map, trajectory lines, and iso-level contour surfaces and contour lines for the data set's physical variables, all drawn in the common geometry of the 3-D box. The user can rotate, zoom and pan the 3-D box, control the time stepping, and independently enable or disable the depicted graphical elements. This provides a very literal representation of the 5dimensional rectangle; the spatial dimensions are mapped into the 3-D box, the time dimension can be animated, and the physical variables can be viewed in arbitrary combinations.</p><p>The intuitive feel of the user interface is further enhanced by the fast response of VIS-SD to user controls. The 3-D box rotates, the time steps, and the depictions of variables appear and disappear, all within a fraction of a second of the appropriate mouse movement or button click. This immediate visual feedback is a critical element of a word processor's or spread sheet's user interface, and it is even more crucial for scientific visualization systems.</p><p>The McIDAS grid file format includes information specifying the time and location of each grid point, and the names of the physical variables in the data set. VIS-SD uses this information to generate a set of graphical widgets appropriate to the data set, and to automate the management of the components of the data set. For example, VIS-SD creates widgets for each physical variable, labelled with the names taken from the grid file, which are used to independently enable and disable graphical depictions of the variables. It also creates sliders for each variable used to change the values of their iso-level contour surfaces, and to change the altitude and density of their contour lines. A change to a slider value is applied to the appropriate variable for all the data set's time steps.</p><p>Changes to defining levels of contour surfaces and contour lines require a compromise in the user interface, because of the computational difficulty in computing new polygons and vectors for their graphical depictions. Ideally, the graphics would change as the user moved the slider, and VIS-SD does achieve this for changing altitude of contour lines on some data sets. However, new contour surfaces and complex contour line sets may require a couple of seconds for computation. When time dynamics are static, the new surface replaces the old surface as soon as it is computed. When time dynamics are animating, the new surfaces appear asynchronously with the animation sequence, gradually replacing the surfaces for all the data set's time steps.</p><p>VIS-SD provides pop up slider widgets which allow the user to change the color of contour surfaces and lines and the transparency of surfaces. When a data set includes ten different variables, each depicted by both surfaces and lines, it is hard to avoid multiple graphical elements with similar colors. With the color widgets the scientist can adjust the colors as variables are viewed in different combinations. The widget buttons used to enable graphical elements for display are highlighted with the color of the corresponding surface or lines, to help the scientist identify which graphics depict which variables.</p><p>We have avoided other graphical choices in our user interface. For example, there is a single light source which is always placed pointing along the view axis (actually there is a second light source pointing the other direction on the same axis to accommodate either sign of surface normals). The surfaces are drawn according to a Gouraud shading model with fixed properties. In our experience these choices are less interesting to scientists and they tend to clutter up the user interface. Interactive rotation is a very powerful way to understand 3-D geometry, and these other controls offer only marginal improvement. Surface properties like specular highlights may actually be counterproductive' by slowing the response time to interactive rotation. Surface property techniques li,ke texture mapping can be useful when they are used to add data content to the display, although we have not yet included texture mapping into the VIS-5D system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Structure of VIS-SD</head><p>In order to maximize the size of the data set for visualization, VIS-5D uses a compressed format for the raw gridded data and the large polygon and vector lists used to represent contour surfaces and lines. The natural format of these data is 4 byte floating point, but they can be quickly compressed by a linear mapping into 1 or 2 byte integers, depending on the needed resolution. This compression allows a data set of 50 million grid points plus its associated polygon and vector lists to f i t in 128MB of workstation memory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The principal data structures of the VIS-5D visualization program include:</head><p>A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.</head><p>a 5-dimensional array of bytes, containing a compressed version of the raw gridded data. This array is organized into a series of 3-D spatial arrays indexed by time-step and variable. Each variable has a separate linear mapping for compression from its range of values to 1 byte integers. a linear array which is dynamically allocated for the polygon and vector lists used to represent contour surfaces and contour lines. There is a polygon list and a vector list for each combination of time-step and variable (some lists may be empty), and an index by time-step and variable into the linear array. Vertex components are compressed by a linear mapping</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.</head><p>D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.</head><p>H.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>J.</head><p>from the box extents to 2 byte integers, and normal components are compressed by a linear mapping from the interval (-1.0, 1.0) to 1 byte integers.</p><p>vector lists for trajectory lines. Each trajectory is stored as a single polyvector with an index by time-step into the poly-vector. a polygon mesh for the topographical map and vector lists for the map boundary lines. a queue containing time-step and variable indices identifying 3-D grids for which contour surface polygon lists or contour line vector lists need to be computed.</p><p>arrays of values of iso-level contour surfaces and altitudes and densities of contour lines, indexed by variable.</p><p>colors and transparencies for contour surfaces and colors for contour lines, indexed by variable. state information for the display, including the current time-step, whether animation is enabled, whether the map is enabled, whether the trajectories are enabled, and the transformation matrix for the 3-D to 2-D projection. This state information also includes arrays indicating whether contour surfaces and contour lines are enabled, indexed by variable. do forever if the queue contains any contour line requests remove the first request for contour lines decompress the 3-D grid for time-step and variable compute contour lines at altitude and density for variable compress vector list for lines deallocate previous vector list for time-step and variable if there is not adequate free space in the linear array delete the least recently used vector and polygon lists until there is adequate space end if allocate space in linear array and insert vector list add index to vector list for time-step and variable else if the queue contains any contour surface requests remove the first surface request decompress the 3-D grid for time-step and variable compute contour surface at iso-level value for variable compress polygon list for surface deallocate previous polygon list for time-step and variable if there is not adequate free space in the linear array delete the least recently used vector and polygon lists until there is adequate space end if allocate space in linear array and insert polygon list add index to surface list for time-step and variable end if end do forever end thread end fork</p><p>The ST-1000 and ST-2000 execute four fast response is important to VIS-SD, data instruction streams in parallel, so VIS-SD should be accessed from main memory forks into four threads to take advantage rather than disk. VIS-SD allocates a single of this parallelism. The X server is also a large array from which to allocate polygon heavy computing load while VIS-SD is and vector lists in order to control the running and increases parallelism. Because total use of main memory. This way it can avoid paging delays which would occur if allocated memory became significantly larger than physical memory.</p><p>The parallel threads implement critical sections where simultaneous access to common data structures could cause interference. This true for insertion and deletion in the queues, the allocation and deallocation of space in the linear array, and reading and updating the polygon and vector lists and their associated index.</p><p>VIS-SD uses Stardent's XFDI library of 3-D extensions to X for rendering, using a Zbuffer and RGB true color. We also use a modified version of Stardent's LUI widget library, which is part of their Application Visualization System (AVS).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Future Developments</head><p>We have received numerous suggestions for additional functions f o r VIS-5D from scientists, as well as shortcomings which we recognize. Some of these are:</p><p>A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>E.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>F.</head><p>include contour lines drawn on vertical planes which can be arbitrarily positioned. This is currently being developed.</p><p>dynamically calculate trajectories through space-time points specified with a 3-D cursor. This is currently being developed.</p><p>represent planes through 3-D grids with pseudocolored images in addition to the current contour lines. This would be useful for radar data which are less smooth than model data. texture map satellite images onto surfaces in the 3-D box.</p><p>render 3-D grids as transparent fogs, often referred to as volume images. This may be difficult to do with fast enough response for interactive rotation.</p><p>provide interactive analysis operations on the 5-D grid of data, including</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>G.</head><p>arithmetic, differential and integral operations. This is an open-ended area of development, often dependent on the particular source of the data set.</p><p>increase the size of the data sets which can be interactively visualized. This applies to the total 5-D rectangle and the number of grid points in the spatial 3-D box. Assuming the current level of interactivity, this depends on faster workstations, larger memories, and disks fast enough to support interactive access.</p><p>VIS-SD is aimed at 5-D data sets similar to those produced by weather models. We are also interested in developing systems for interactively visualizing and analyzing large image data sets. The same workstation technology which makes VIS-5D possible can also be exploited for radical new ways of processing image data, although the overall structure of such an application may be quite different from VIS-5D.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 (</head><label>1</label><figDesc>Color Plate 14, Page 462)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>ordered lists of variables recording which contour surfaces and lines have been most recently enabled for display. intermediate structures used for computing contour surfaces and contour lines from 3-D grids. VIS-5D runs under Stellix (UNIX System V with Berkeley extensions) and X Windows Version 11 Release 3. The top level pseudo-adjust the projection matrix according to mouse moves toggle map enable/disable if requested toggle trajectory enable/disable if requested toggle contour surface and line enable/disables if requested and re-order lists of toggle time animation enable/disable if requested if time animation is disabled end if change colors and transparencies if requested change contour surface levels if requested change contour line aItitudes and densities if requested variables recording which have been most recently displayed increment, decrement or reset time-step if requested if a contour surface or line recompute is requested for each time-step if time animation is disabled and time-step=current else end if end for add the selected variable and time-step to the head of the queue add the selected variable and time-step to the tail of the queue end if exit visualization program if selected end check for X events and widget callbacks if time animation is enabled end if increment the time-step end do forever end thread threads 2, 3 and 4 (they are identical)</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We wish to thank Dave Kamins and Jeff Vroom of Stardent Computer, Inc., and Mar ie-F r a ncoise Void r o t -Mar t inez of the French Meteorology Office for their help. We also wish to thank the many scientists we have worked with and NASA Marshall Space Flight Center for their support (N AS8-36292).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Visualizing large data sets in the earth sciences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hibbard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Santek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="53" to="57" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Four-dimensional interactive analysis: a tool for the efficient understanding of large data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Tripoli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hibbard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Santek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Preprints, 12th Conference on weather analysis and forecasting</title>
		<meeting><address><addrLine>Monterey</addrLine></address></meeting>
		<imprint>
			<publisher>American Meteorological Society</publisher>
			<date type="published" when="1989" />
			<biblScope unit="page" from="10" to="12" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
