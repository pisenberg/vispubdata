<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Design of an End-User Data Visualization System</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donald</forename><forename type="middle">L</forename><surname>Brittain</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Wavefront Technologies</orgName>
								<address>
									<addrLine>Inc. 530 E. Montecito St</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Josh</forename><surname>Aller</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Wavefront Technologies</orgName>
								<address>
									<addrLine>Inc. 530 E. Montecito St</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Wilson</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Wavefront Technologies</orgName>
								<address>
									<addrLine>Inc. 530 E. Montecito St</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sue-Ling</forename><forename type="middle">C</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Wavefront Technologies</orgName>
								<address>
									<addrLine>Inc. 530 E. Montecito St</addrLine>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>CA</roleName><forename type="first">Santa</forename><surname>Barbara</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Wavefront Technologies</orgName>
								<address>
									<addrLine>Inc. 530 E. Montecito St</addrLine>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Design of an End-User Data Visualization System</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:24+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We describe the architecture of an end-user visualization system that supports interactive analysis of 30 scalar and vector data in a heterogeneous hardware environment. The system supports a variety of visualization methods having applicability in disciplines such as computational fluid dynamics, earth and space sciences, and finite-element analysis. We discuss general concerns with current visualization methods and present how our approach simplifies the visualization process.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>The purpose of this paper is to describe the design and implementation of a comprehensive graphics system for interactive visualization of 3D scalar and vector data. In particular, we will discuss how design goals and hardware constraints lead to a simple, cohesive paradigm for implementing a powerful, flexible, and portable visualization system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Current Visualization Methods</head><p>Popular 3D data visualization techniques range from simple contour pen plots to the colored-surface rendering typified by E A post-processors. More sophisticated visualization movies are created using off the shelf animation and rendering software such as Wavefront Technologies' Advanced Visualizerm. For example, the National Center for Supercomputing Applications used this software to produce an award winning visualization sequence depicting the dynamics of a severe storm [ll.</p><p>Unfortunately, none of these methods provide an interactive way for researchers to analyse their own data.</p><p>Recently, interactive software for volumetric visualization has been introduced by several vendors. For example, Stardent's Application Visualization System <ref type="bibr" target="#b1">[2]</ref> provides a general framework for creating custom visualization environments through the use of traditional and "visual" programming. By com-CH2913-2/90/0000/0323/$01 .OO -1990 IEEE parison, SSV from Sterling Software is tailored to computational fluid dynamics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Design Motivation</head><p>The goal of our visualization system is to provide an interactive environment for end-user visual data exploration.</p><p>Since the main purpose of raw data visualization is to gain insight into the structure of the data itself (or the process, procedure, or trend represented by that data) <ref type="bibr" target="#b2">[3]</ref>, any rendering that yields worthwhile insight is a valuable, and hence valid, representation. Thus it makes sense that a general purpose data visualization system should support multiple rendering methods with each having its own advantages and being complementary to the others.</p><p>In any 3D gmphics system, interactivity of 3D movement is crucial to revealing (on a twodimensional screen) the three-dimensional nature of the visualization. Moreover. when exploring a volume of raw scalar or vector data, interactivity is necessary to reduce the visual analysis time and thereby create a practical tool for working professionals. Thus it is critical to design rendering algorithms that can adapt to the various performance levels available on today's workstation platforms.</p><p>Since different disciplines take advantage of the various visualization methods, it is best to allow the user to have as many "renderings" (cutting planes, iso-surfaces, probes, etc.) as desired on the screen at once.</p><p>Also, since datasets can be quite large and vary in layout, it is necessary to provide for various data formats and allow for direct access to data across a network connection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Design Goals</head><p>Based on the above considerations, we decided on the following design goals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1)</head><p>The system must support a broad range of visualization methods, and it must be simple for the user to work with several methods at once.</p><p>2) The system must support scalar and vector data on regular and irregular gnds, and geometric data for use as "boundary objects". There should be no hardcoded limits on data complexity.</p><p>3) It must be possible for the system to work efficiently in a heterogeneous networked environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4)</head><p>The system must be interactive on a broad range of workstationsfrom 2D bitmapped to 3D accelerated. As long as excessive virtualmemory swapping can be avoided, the system must remain interactive regardless of dataset size or complexity.</p><p>Architecture Implementation of our system was largely constrained by goal 4, as portability and efficiency tend to be at odds with each other.</p><p>Fortunately, we were able to leverage a fair amount of past work for the system's underlying foundation: Wavefront's Advanced Visualizerm and Personal Visualizerm products are based on an internal portable graphics layer <ref type="bibr" target="#b3">[4]</ref>. This layer generalizes 3D hardware to an interface that is ideal for our dynamic applications, yet optimized for each hardware platform. In particular, it largely avoids the inefficiencies of retained-graphics interfaces, such as PHIGS(+) <ref type="bibr" target="#b4">[5]</ref>, for handling constantly changing geometric data. Also, the Personal Visualizerm uses a custom User Interface Management System (UIMS) <ref type="bibr" target="#b5">[6]</ref> that allows interactive graphics programs to be easily configured. Since the features of these existing modules fit our design goals well, we decided to use them in this new visualization system. Goal 1 led us to an architecture that supports an unlimited number of Visualization "tools" in an efficient and consistent manner. We chose this approach over, say, visual programming (which allows various functional components to be combined by the user to create a flow network) since volumetric visualization techniques do not benefit much from recombination and the resulting flow diagrams are often just shallow trees. In addition, the loss in performance on single-processor, smallmemory machines and the additional user interface complexities make the technique less interactive on common 3D workstations.</p><p>We chose instead to use a tool-oriented approach for combining visualization techniques. Each tool is an instance of a visualization method that would be represented by a string of modules in a visual network. Instances of various tools can be copied, grouped, and used in conjunction with one another to best represent the data. Tools are independent of each other and the number of tool instances is unlimited.</p><p>Goals 2 and 3 led us to a distributed database model, where all I/O operations are potentially across a network connection.</p><p>The database of our visualization system is designed to closely fit existing compute environments. Low cost 3D desktop workstations are now in common use, but complex simulations are often run on compute servers across a network. Our database allows remote "data servers" running on other machines to feed volumetric data to a local workstation over a T C P P network. The user can select a server and navigate through the directories on that remote machine.</p><p>For an end-user system, supporting existing data formats is key to user acceptance. However, there are no definitive standards across the wide variety of 3D volumemc data. NCAR's netCDF <ref type="bibr" target="#b6">[7]</ref> is emerging as a possible standard for scientific data, although there is currently no standard convention for use of the netCDF structures. Thus, we support the netCDF format with a definition that fits our system. PLOT3D. a CFD format from Sterling Software, is also supported.</p><p>To allow data importation, we provide specifications for our own ASCII file format, which is flexible enough to fit most applications. We also allow users to write their own direct data file readers, and provide an easy mechanism for those readers to be incorporated into the system.</p><p>The architecture of our system is illustrated below. receive information from this conduit and either pass it along to a particular visualization tool (or the database), or use it to alter the way it is managing the overall visualization system.</p><p>Each tool is an object in the true object-oriented software sense. Thus, a particular cutting plane is an instance of the cutting plane object, and multiple instances may be present at once. This is achieved by having all the state information local to a particular instance, with all code being reentrant and "driven" by this state. In fact, since all took share a common set of base functionality (e.g. to create, destroy or move tool instances), each tool is really derived from a single generic tool object.</p><p>The database access layer is a set of subroutines that provide access to the actual data to be visualized.</p><p>This layer shields the tools from any particular inmemory format of the underlying data, thereby allowing new data organizations and optimization to</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Application Look and Feel</head><p>Application Functionality be made without invalidating the implementations of the tool objects.</p><p>The database U0 modules run as separate processes, possibly on separate machines. These modules are the only ones that know of particular file formats or external storage conventions. In fact, it is feasible to incorporate the data transmission protocol directly in a simulation or data-gathering program so that data is communicated directly to the visualization system without ever touching the disk.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>UIMS / Program Connection</head><p>Although users see the application together with its user interface as a single entity, for the rest of this section we will think of the user interface as being separate from the visualization application itself. When this is complete, the UIMS then traverses the new display list and the cutting plane appears on the screen.</p><p>Each tool maintains its own (sub)display list that the VTM is free to call. In order to make certain that the individual tools' display lists are current, each tool object may be sent any of several update messages or events. These events include ones to indicate that the tool's position or configuration has changed, that it is time for the next dynamic update (as with particles flowing through a vector field), or that raw data has been modified or changed. These events are analogous to the "display damaged" or "redraw" events common in window system programming.</p><p>Thus, each tool is fully autonomous and has no way of querying or influencing the rest of the system. This design keeps individual tools simple and maintainable. Furthermore, new tools may be easily added to the system without disrupting the existing tool implementations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Visualization Tool Selection</head><p>We selected a variety of tools for both exploration and annotation purposes. The tools are general enough to be used on a variety of 3D scalar and vector data. Vector visualization methods, for instance, are the same regardless of whether the field visualized is the wind component of a regular grid hurricane simulation, or the magnetic flux through an FEM model. Whenever possible, the interactivity of the tools is designed to be independent of the data complexity. It is up to the user to choose between tool resolution and interactivity. Tools are also designed to function well with both regular and irregular grids.</p><p>Since rendering times must increase as the user increases the resolution of a particular tool or the overall number of tools used to visualize his data, our system provides two additional ways to preserve interactivity.</p><p>First, we provide a "simplified movement" capability whereby, when active, a tool being moved is represented in a simplified fashion until it reaches its destination. For example, a moving cutting plane is represented by just its boundary in a way analogous to a window system that draws just the outline of windows being moved. (This is accomplished by sending a "simplify" update message to the visualization tool when it is moving.) Second, the system has a mode in which only the current tool is redrawn when it is being movedall other tools are temporarily turned off until the moving tool reaches its destination. At that point, all tools reappear.</p><p>For data exploration, we provide cutting plane tools, isesurfacing tools, particle emission tools, data probes, and point volume tools. Boundary and geometry tools allow for the display of boundary conditions and arbitrary geometry.</p><p>The cutting plane tool serves as a good bridge from traditional 2D visualization techniques into the world of 3D visualization. It can be arbitrarily positioned, and color is derived from an interpolated scalar at that position. In addition, vector fields can be represented as a 2D array of vectors. The sampling resolution of the tool is user-specified.</p><p>The iso-surfacing tool displays a surface representing a constant value of a scalar field. The color of the surface can be determined by another scalar field.</p><p>The particle tool allows vector fields to be visualized by emitting particles randomly from a positioned box. The particles travel over individual paths, integrated fiom the vector field. The motion of the particles gives the user a good feel for the shape and velocity of a vector field. Particle color can also be determined by a scalar field.</p><p>The data probe serves for both exploration and annotation. It can display the interpolated numeric value of a scalar field at any position, or a vector field direction or integrated path. It can also display 3D position, or an arbitrary text string tied to a position in space.</p><p>The point volume tool gives a crude representation of the entire scalar field. It colors points inside the volume based on a scalar color map. This tool can be used to get a quick "coarse look" at all the data, but it is not as informative as true volume rendering. Thus, we also provide a way to perform raycasting volume rendering using a technique similar to the one presented in <ref type="bibr" target="#b7">[8]</ref>.</p><p>The coordinate system tool and ruler tool serve to annotate data being visualized. The ruler allows both marking of distances and position in space. Multiple light tools can also be instanced and positioned to control the lighting of other shaded tools.</p><p>For presentation purposes, the system supports scalable annotation text.</p><p>Any collection of tool instanw can be connected with a group tool. This allows the easy positioning of a combination of tools. For instance, it is useful to position three cutting planes at right angles, and move them as one tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Optimizing Interaction</head><p>The interaction model employed by our visualization system was designed to meet the following criteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1)</head><p>The system should use standard GUI interaction techniques, thus making it as intuitive as possible (and hence quickly useful with little instruction).</p><p>2) The system should allow for efficient creation and manipulation of all visualization tools.</p><p>3) It must be easy to move tools and alter views without traversing multiple layers of menus.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>,</head><p>We meet the above criteria by having a single "current" visualization taol and a single "current" camera. When in viewing mode, all transformations affect the current camera, and when in tool mode, the current tool. Since the change from tool to view mode (and back) is a single button press, this conveniently provides a simple context switch that allows that user to quickly change from moving a tool to moving the camera or eye point. Of course, it is also simple to selezt a new camera or tool as current, although the user will typically switch often between manipulating a particular tool and a single camera when initially exploring what insights that tool provides about his data</p><p>To create a new tool instance, the user can either start from scratch, or clone an existing tool (whereby all its attributes are copied to the new instance). Moreover, the user can group tools so that they move in harmony, making it possible to have custom tool aggregates that suit particular visualization needs or paradigms. Also, the user interface was designed to make it simple to move individual tools in a group without "ungrouping".</p><p>paradigm. This paradigm is based on the instancing of a wellchosen set of general-purpose visualization tools.</p><p>To assure efficient operation across a broad range of hardware platforms, we have implemented the tools so that their interactivity is largely independent of data complexity. To gain portability, the system was built on a platform-independent graphics layer and User Interface Management System.</p><p>Since the system is designed for end-users, its menu layout is optimized for quick learning and ease of use. For efficiency, data may be read across a network from multiple servers, and multiple data formats are supported. Figure i An iso-surface in the cloud water density f i~ id ih displayed with color on its surface, providing d hk,k tip irito the ram water den\)[!: This view also -ori:bw&gt; tht ,ialar contour cutung plane III rain +,.iacr dt'njih from <ref type="figure">Figure 1 (Color Plate 166, page 487)</ref> .</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>application configuration and insulates core functionality from Screen layout and interaction methods. This layer communicates functional information to the underlying application through a well-defined conduit.The Visualization Tool Manager (VTM) serves to</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :Figure 2 :Figure 3 :</head><label>123</label><figDesc>The bounding box displays spatial minima and maxima of a three-dimensional computational grid. The data is a mesh of 64,OOO regularly spaced nodes with two scalar and one v e c t o~ quantity swrcd at each node. It is a single time step taken from a numerical simulation of an intense storm which was developed at the National Center for Supercompuung Applications. A single cutting plane has been placed in the data field and a contour plotting optionselected. (Color Plate 163, page 487) Multiple cutting planes have been cloned w:th two utilizing a color look up into the scalar data field of rrun water density. A third cutting plane provides information on the wind velocity vector field. The viewpoint has been rotated 180 degrees from Figure 1. (Color Plate 164, page 487) Two iso-surfaces in the ram water deu,it I field have been calculated and are di\ph&gt;ed usiw hardware transparency. Perspecuve, top front dn;! right orthographic views of the data arc preaenttstl (Color Plate 165, page 487)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>To see how the user interface and the application work together, let's assume the user wishes to create a cutting plane.When he hits the appropriately labeled butron on the user interface, his request is communicated to the VTM. The VTM then sends a request to the cutting plane object to create a new instance, and parameters for this instance are placed in a VTM tool table. m e VTM then builds a new display list, based on its tool table, that includes all the currently active visualization tools, including the new cutting plane.</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">_ _ _~ ~ -IT</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Study of a Numerically Modeled Severe Storm</title>
	</analytic>
	<monogr>
		<title level="m">Video Visualization</title>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
		<respStmt>
			<orgName>National Center for Supercomputing Applications</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The Application Visualization System: A Computational Environment for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Faulhaber</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kamis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vroom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gurwitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="30" to="42" />
			<date type="published" when="1989-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Visualization in Scientific Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">H</forename><surname>Mccormick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Defanti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1987-11" />
		</imprint>
	</monogr>
	<note>special issue</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Portability of Interactive Graphics Software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Brinain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1990-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">PHIGS+ Function Description Revision 3.0</title>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proc. SIGGRAPH)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">WIMS: A Visual User Interface Management System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Piman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Kimck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Siggraph Symposium on User Interface Software and Technology, (UIST &apos;90)</title>
		<meeting>the ACM Siggraph Symposium on User Interface Software and Technology, (UIST &apos;90)</meeting>
		<imprint>
			<date type="published" when="1990-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">netCDF User&apos;s Guide,&quot; version 1.05, Unidata Program Center</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1990-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">V-BUFFER: Visible Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Keeler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (€&apos;roc. SIGGRAPH)</title>
		<imprint>
			<date type="published" when="1988-07" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="125" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Conclusion We have implemented a powerful end-user visualization system using a simple</title>
		<imprint/>
	</monogr>
	<note>flexible visualization</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
