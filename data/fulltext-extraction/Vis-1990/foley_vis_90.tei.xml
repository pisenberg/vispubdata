<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualization of Irregular Multivariate Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Arizona State University Tempe</orgName>
								<address>
									<postCode>85287</postCode>
									<region>AZ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">A</forename><surname>Lane</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Arizona State University Tempe</orgName>
								<address>
									<postCode>85287</postCode>
									<region>AZ</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visualization of Irregular Multivariate Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:24+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Scientijic data is often sampled at irregular spatial locations because of physical constmints, yet most visualization software applies only to gridded or regular data. W e will discuss effective techniques for representing scalar and vector valued functions that interpolate t o irregularly located data. Special attention will be given to the situations where the sampling domain is a 2D plane, a 9D volume, o r a closed 3 0 surface. The globally defined interpolants can be evaluated on a fine regular grid and they can then be visualized using conventional techniques. Triangular and tetrahedral based visualization techniques are also presented.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>The majority of scientific visualization packages require that the spatial input data be on a regular or rectilinear grid. For example, scalar valued volumetric rendering and contouring packages expect gridded input of the form ( t i , y j , z k , f i j k ) , where i , j and k are bounded in some index set. The purpose of this paper is to describe solutions to the visualization problem when the spatial t , y and z coordinates are not on a regular grid. Data of this type commonly occur in applications where the data site locations are restricted. For example, in geological and environmental applications, chemical concentrations are sampled at varying depths at arbitrarily located wells which are generally not located on a rectilinear grid.</p><p>We first discuss the multiquadric and thin-plate spline methods for interpolating scalar data sampled at arbitrary locations in a plane. Straightforward generalizations will then be made to data sampled in 3D volumetric regions as well as in higher dimensional spaces. These two methods have existed roughly twenty years, yet a fair number of researchers in the scientific visualization community are not aware of these effective and easy to implement methods. We will also present some recently developed techniques for representing and visualizing scalar valued functions based upon data sampled on a closed 3D surface. All of these techniques can also be used to interpolate vector valued data sampled at arbitrary spatial locations.</p><p>Once these interpolating functions have been computed, they can be evaluated over a regular rectilinear grid and the results can be visualized using existing techniques such as those described in Lorensen &amp; Cline <ref type="bibr" target="#b21">[22]</ref>, Levoy <ref type="bibr" target="#b20">[21]</ref>, Sabella <ref type="bibr" target="#b29">[30]</ref>, Upson &amp; Keeler <ref type="bibr" target="#b31">[31]</ref> and Drebin et al. <ref type="bibr" target="#b5">[6]</ref>. The visualization methods presented in Section 3 use triangles and tetrahedra as the basic domain elements, instead of rectangles and cubes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Representation</head><p>Suppose that we are given N distinct points pi in some domain D and N real values f i . We first address the problem of representing or constructing a func-</p><formula xml:id="formula_0">tion F ( p ) defined on all of D that satisfies F ( p i ) = fi for i = 1 , . . .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>, N . Once the interpolating function F ( p )</head><p>has been constructed, it can be evaluated over a regular grid of any resolution and existing visualization packages can be used. However, F ( p ) can be evaluated over a triangular or tetrahedral network and customized graphics procedures can be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Two-dimensional Domains</head><p>If the domain D is a plane, then pi = ( t i , y i ) and the problem is to find a bivariate function F ( t , y ) = F ( p ) that satisfies F ( t i , y,) = fi. The graph of this function is a 3D surface that passes through the 3D points ( t i , y , , fi). A great deal of research has been done in this area and the survey papers <ref type="bibr">Barnhill</ref> Two of the most effective and simplest methods to implement are Hardy's multiquadric method (see <ref type="bibr">Hardy[lS]</ref>) and the thin-plate spline (see Duchon <ref type="bibr" target="#b6">[7]</ref>). The multiquadric method is an infinitely differentiable function of the form  <ref type="figure">Figure 1</ref> is a plot of this interpolant to 10 points that are denoted by boxes with line segments connected to the sampling sites in the z y plane. The graphical methods used for this and other figures will be discussed in Section 3. Other plots of this generally effective method and additional discussion can be found in <ref type="bibr">Franke</ref>  <ref type="bibr" target="#b4">[5]</ref> indicate that the optimal choice depends almost entirely on the function values fi and only a negligible amount on the number or distribution of the data points pi = (xi, yi). A simple approach is to let R2 be some constant c times the area of the bounding rectangle of the points pi. For many data sets where the f, vary smoothly, effective choices for c are in the range 0.1 to 1.0. For rapidly varying f,, the parameter R2 should be relatively small, for example c = lov4 or</p><p>The parameter R2 should also be small if the number of data points is large because otherwise, the linear system of equations may be ill-conditioned. The thin-plate spline is a once differentiable function of the form where di(p) is given in <ref type="bibr" target="#b1">(2)</ref>  </p><formula xml:id="formula_1">i = l i = l i = l</formula><p>This method is known as the thin-plate spline because it is the interpolant that minimizes an integral of the second derivative squared which measures the strain energy in a clamped elastic plate. Figures for the thinplate spline can be found in <ref type="bibr" target="#b12">[13]</ref> and <ref type="bibr" target="#b23">[24]</ref>.</p><p>In the critical testing of methods in <ref type="bibr">Franke[l4]</ref>, the multiquadric and thin-plate spline methods consistently produced visually pleasing results with very small observed errors on known test functions. These methods are not foolproof, however. If the data is poorly scaled or contains rapidly varying fi values, then any bivariate interpolant may have trouble.</p><p>A negative aspect of these methods is that if the number of data points N is large, then storing and solving the linear system of equations can be costly. To remedy this problem, Franke[l3] localized the problem for thin-plate splines. This technique also works for the multiquadric method, or any other interpolant for that matter. This method involves partitioning the data into overlapping subregions, forming local interpolants to the data in each subregion, and then blending the local interpolants so that the resulting function has C' or C2 continuity. Since the blending functions are locally defined, data points in one region have no affect on the interpolant on non-neighboring regions.</p><p>Although the multiquadric and thin-plate spline methods generally produce excellent results on smooth test data, we suggest that other methods be applied to the data and the results should be compared graphically. Potential alternatives that generally yield satisfactory results can be found in <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b28">29]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Three-dimensional Volumetric Domains</head><p>Since the multiquadric and the thin-plate spline methods only depend on Euclidean distance, they easily generalize to multivariate data. For example, if the domain D is a 3D solid, then pi = ( z i , y i , z i ) and the multiquadric equation in (1) can be used with</p><formula xml:id="formula_2">d:(p) = IIp -pill2 = (z -Xi)' + (y -yi)' + ( 2 -zil2.</formula><p>Similarly, the thin-plate spline in (3) only needs to add the term c4z to be used for trivariate functions. </p><formula xml:id="formula_3">+ .75 e z p {-16[(z -.25)' + (y -.25)' + ( z -.25)']} + .5 ezp {-1O[(z -.75)2 + (y -.125)2 + ( z -.5)']} -.25 ezp {-2O[(z -.75)' + (y -.75)']}.</formula><p>The N = 100 and N = 200 points pi = ( z , , yi, z,)</p><p>were randomly generated using a uniform distribution on the unit cube and the scalar values fi were computed as f, = G(p;). The images in </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3.">Three-dimensional Surface Domains</head><p>We will first describe two methods that interPG late to scalar data sampled on the surface of the unit sphere, and then describe a technique that applies to data sampled on more general closed 3D surfaces. Applications of this problem include representing functions which estimate pressure, rainfall, temperature, etc. over the earth based upon a discrete sample of measurements. Another application is the modelling of smooth closed surfaces without having to deal with periodic end conditions.</p><p>Suppose that D is the unit sphere and the scalar values f i are sampled at the points pi E D, where llpill = 1. The two effective and easily implemented interpolants that we describe are of the form is the geodesic distance from p to pi on the sphere.</p><p>Since gi(p) = arccos(&lt; p , p i &gt;),where &lt; p , p i &gt; is the scalar or dot product of the two 3D vectors p and pi, the spherical multiquadric basis functions simplify to These two methods yield similar results on many test data sets, with the spherical multiquadric having a slight edge is accuracy and simplicity of implementation. <ref type="figure" target="#fig_5">Figure 4a</ref> is a visualization of the given data ( p i , fi) on a spherical domain. The lengths of the radial line segments are proportional to fi and the segments originate at the sample points pi on the sphere. The transparent projected surface in <ref type="figure" target="#fig_5">Figure 4b</ref> represents the graph of the interpolant in Foley[S] using the visualization techniques discussed in Section 3 and in Foley et a1. <ref type="bibr" target="#b11">[12]</ref>.</p><formula xml:id="formula_4">Bi(p) = J1+ R2 -2R &lt; plpi &gt;.</formula><p>Other interpolants to data sampled on a sphere that are based on a spherical triangulation of the data sites pi are described in <ref type="bibr">Lawson[20]</ref>, Itenka <ref type="bibr" target="#b27">[28]</ref> and Nielson &amp; Ramaraj <ref type="bibr" target="#b25">[26]</ref>. These are defined piecewise over the spherical triangulation in a manner similar to triangulation based methods on a planar domain.</p><p>For the case where the domain D is a general closed surface, very few techniques have been developed for interpolating scalar valued sampled at points on D. For a convex domain D, Barnhill et a1. <ref type="bibr" target="#b1">[2]</ref> use barrier points inside the convex domain and a modified Shepard's method to solve the problem. Another method which applies to scattered data sampled on a convex domain is given in Barnhill &amp; Ou <ref type="bibr" target="#b2">[3]</ref>. This method forms a piecewise planar convex triangulation of the points pi and the interpolant is defined piecewise over each triangular patch. The domain mapping technique of Foley et al. <ref type="bibr">[ll]</ref> solves the interpcr lation problem on non-convex (and convex) domains. We briefly describe this method in the following paragraphs. Since the graph of the interpolant F ( p ) can be considered a surface defined on the surface domain D, we refer to this as the surface on surface problem.</p><p>The domain mapping method of Foley et al. <ref type="bibr">[ll]</ref> conceptually involves mapping the surface domain D to a sphere, solving the corresponding interpolation problem on the sphere and then mapping back to D for a solution . The surface domain D does not need to be convex, but it is assumed that D is topologically equivalent to a sphere. With the exception of implicitly defined surfaces, a closed surface D is generally defined by a mapping B from a simpler domain A onto D. Special attention is given in <ref type="bibr">[ll]</ref> to the situations where A is a planar rectangle and B is a periodic parametric mapping, and the case where A is a sphere and B is a radial projection. Another case is considered where only discrete points on D are given and D is not known explicitly. This case allows the formation of interpolants to data sampled on implicitly defined surfaces. The domain mapping technique can also be easily applied to any domain D which is a trivariate deformation of the previous cases, assuming that the deformation is a one-to-one and onto transformation. For details on these specific cases, the reader is referred to <ref type="bibr">[ll]</ref>.</p><p>The domain mapping interpolant F ( p ) that satisfies F ( p i ) = fi is constructed using the following steps.</p><p>Step 1: For i = 1 , . . . N , find a; in A such that B(ai) = pi in D .</p><p>Step 2: Find a mapping E from A onto the surface of the unit sphere S so that for s in S and p in D, the mapping p = BE-'(s) is a one-bone map from S onto D.</p><p>Step 3:</p><formula xml:id="formula_5">For i = 1 , .</formula><p>. . , N , compute points s; = E(ai) in S.</p><p>Step Step 5: In fact, if the domain D is only known by the mapping B ( a ) , for a in A , then to actually know that a point p is in D , we must know some point a in A such that B ( a ) = p . In this case, no inversion of the mapping B is necessary and the term "find" in Steps 1 and 5 can be replaced by "let". </p><formula xml:id="formula_6">For p in D ,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.">Vector Valued Interpolants</head><p>Suppose by 500 images. After a lengthy initialization procedure, approximate ray-traced volumetric images can be computed in less than one second on a general purpose graphics workstation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Visualization Algorithms</head><p>As noted earlier, once the interpolant F ( p ) has been constructed, it can be evaluated over a regular rectilinear grid and existing software can be used. Instead of evaluating the function F ( p ) over the entire grid and storing these values, an alternative is to initially compute the coefficients and then evaluate F ( p ) in the rendering process only when needed. There is the usual trade-off between speed and storage with this approach] but the memory saved can be significant. In <ref type="figure" target="#fig_0">Figure 2</ref>, for example, only N = 100 points and 100 coefficients need to be stored to represent the surface, compared t o one million real values for a lOOxlOOxl00 voxel representation.</p><p>Since the interpolant F ( p ) can be evaluated at arbitrary points in the domain D , we are not limited to using a regular grid of data to be visualized. The figures in Section 2 were triangle based for surfaces and tetrahedral based for volumes. In general, we use a fine grained mesh for evaluation, thus it is reasonable to assume that the function is linear over each small triangle or tetrahedra. This is in contrast to regular grids where the function is generally assumed to be bilinear over each rectangle, or trilinear over each voxel. This simplifies forming contour or iso-valued curves and surfaces. Since the function varies linearly] contour curves are line segments on triangle patches and planes on tetrahedral patches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Contours on the Domain</head><p>We first discuss computing contour or iso-value curves and contour shaded regions for planar domains. The extension to surfaces on surfaces and the volumetric contours easily follow. Suppose that we are given contour values C, and the function F ( p ) . The contour or iso-value associated with C, are the set of points p E D that satisfy F ( p ) = C,. When D is the plane or a 3D surface, these are curves, while iso-value surfaces in 3D result when D is a 3D volumetric domain.</p><p>We first triangulate the domain D and we evaluate the function F(vi) at each vertex vi of the triangulation. For each triangle V i V j V k and each contour level C,, there are several possibilities where intersections occur, and the most common intersection situations are shown in <ref type="figure" target="#fig_9">Figure 7</ref>. If the function values at the vertices are all greater than Cm or all less than Cm, then the contour curve does not intersect the triangle. If the function value at one vertex is less than C, and the function values of the other two vertices are greater than C,, then the contour curve intersects two edges of the triangle and we compute the intersection by linear interpolation. This case is illustrated in the upper left of <ref type="figure" target="#fig_9">Figure 7</ref> where F ( v , ) &lt; C,,, &lt; F ( v j ) . U s ing linear interpolation, the intersection point on the edge vivj is computed as The intersection point on the edge vjvk is computed similarly and the line segment connecting these two points represents the contour or iso-value curve on this triangle. The other three cases in <ref type="figure" target="#fig_9">Figure 7</ref> are easily handled with equality comparisons of the function values and the contour value C, . For rapidly varying functions, more than one contour level can intersect a given triangle. To handle this situation, comparison tests must be made until two contour levels C, and C t are found where one is less than the function values at all three vertices and the other is greater. Contour curves can be drawn by applying the previous steps to each triangle for each contour level. Another graphical approach is to render the regions bounded by contours with a distinct color. For example, if C, &lt; F ( p ) &lt; Cm+l, then the point p would have intensity I,. For such renderings, it is very important to compute the contour intersections and split the triangle into two or more pieces. Otherwise, rough jagged edges generally occur near the contour curves. If there are no contour intersections for a triangle, then the entire triangle is rendered using the appropriate intensity I,.</p><p>Contour curves and rendering regions bounded by contours with a fixed color do not give any indication of the behavior of the function between contour levels. The color blended contour regions shown in <ref type="figure" target="#fig_0">Figures 1,  2</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>and 5 show the contour curves and give an indication of the function behavior between contour levels. This is accomplished by linearly interpolating intensities between black and I, for function values between</head><p>Cm and Cm+l. Splitting the triangles when necessary, we can assume that Cm 5 F ( u ) 5 Cm+l for the three vertices U ; , U, and V k . For each vertex U of the triangle, the intensity I ( v ) at v is computed by</p><p>The triangle is then rendered using Gouraud shading.</p><p>For surface domains, the exact same techniques apply since the surface domain can be approximated by a fine triangular mesh. Foley et a1. <ref type="bibr" target="#b11">[12]</ref> discuss the triangular decomposition of a sphere and forming the contour curves and regons on the domain.</p><p>Forming piecewise planar contour or iso-valued surfaces (see <ref type="figure">Figure 3)</ref> for a function defined on a 3D solid can be done in a similar manner. The volume is first tessellated into tetrahedra and F ( p ) is evaluated at each vertex of this tessellation. If F ( u ; ) &lt; C,,, at one vertex and F ( v j ) &gt; C,,, at another vertex of a tetrahedron then the contour surface passes through the tetrahedron. Since four vertices of the tetrahedron and the function values at these four points uniquely determine a linear function of three variables, the contour surface will then be a planar patch. Since this plane intersects one edge of the tetrahedron, it must intersect two or three other edges, resulting in three or four points that fall on the contour plane.</p><p>The images in <ref type="figure" target="#fig_0">Figure 2</ref> use the interactive technique in Nielson &amp; Hamann <ref type="bibr" target="#b24">[25]</ref>. This method evaluates the trivariate function F ( z , y, t) at points on three planes perpendicular to the z, y and z axes. With one of these variables having a fixed constant value, the function is a bivariate function on each plane and the previous contouring techniques are applied. Interactively moving the planes through the volume is one of many techniques for visualizing volumetric data.  <ref type="figure">points ( E , y, F ( z , y)</ref>), where p = ( 2 , y) ranges over the domain. Contour curves and contour regions can easily be rendered on the 3D surface graph by computing the contour and using the corresponding function value for the z-coordinate of the plot. Displaying the surface graph in <ref type="figure">Figure l</ref> a as a transparent object allows the user to view contour regions on the domain at the same time. When analyzing an interpolant to discrete data, it is valuable to plot the discrete data points as "sticks" so that the effectiveness of the interpolant can be evaluated. These "sticks" are simply the 3D line segments connecting the points ( E ; , y;, 0) and (zi , y; , F ( z ; , y;) ) in <ref type="figure">Figure 1</ref>. These line segments also help the viewer associate points on the surface graph with the corresponding points in the planar domain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">The Graph of a Function</head><p>The surface graphs in <ref type="figure">Figure 1</ref> can be interpreted as projecting a distance F ( z , y) perpendicularly from the point <ref type="figure">( E , y)</ref> in the plane. The transparent surface graph in <ref type="figure" target="#fig_5">Figure 4</ref> is the result of projecting a distance proportional to F ( p ) in a direction perpendicular or normal to the sphere at the point p on the sphere. The paper Foley et a1. <ref type="bibr" target="#b11">[12]</ref> describes this technique in detail for a spherical domain. For the non-convex domain in <ref type="figure">Figure 6a</ref>, we projected normal to the surface domain and it is observed that the projected graph has self-intersections. Basically, very little geometric information can be obtained from the surface graph in <ref type="figure">Figure 6a</ref>. In <ref type="figure">Figure 6b</ref>, a radial projection was used from the center of the object and the geometric shape can be interpreted. For convex surface domains, the normal projection is generally preferred. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>CH2913- 2 /</head><label>2</label><figDesc>90/0000/0247/$01 .OO -1990 IEEE where R2 &gt; 0, p = (z, 9) and The coefficients ai are computed by solving the N by N linear system of equations F ( p j ) = f j , for j = 1,. . . , N . In matrix form, the vector a= ( a l , . . . , . N)~ is the solution of Ma = f , where f = ( f i , . . . , f~)~ and the i , j entry of M is</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>and the N + 3 unknown coefficients bi and ci are computed by solving the N + 3 linear equations F ( p j ) = f, for j = 1 , . . . , N ,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2</head><label>2</label><figDesc>illustrates the effectiveness of the trivariate multiquadric method applied to N = 100 and N = 200 data points generated by the function G ( z , y , z ) = .5 ezp {-lo[($ -.25)' + (y -.25)']}</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2</head><label>2</label><figDesc>use the interactive techniques in Nielson &amp; Hamann[25] which contours a trivariate function evaluated on three planes perpendicular to the z , y and z axes. The top figure is from the exact function G(p) and the bottom two images are from the multiquadric interpolant applied to N = 100 and N = 200 random locations. The errors for the interpolant using N = 200 points are very small, while the interpolant to N = 100 points has more observable (yet small) errors. Figure 3 is an i-surface plot of the interpolant to N = 200 points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>N</head><label></label><figDesc>i=l where each B i ( p ) is a smooth basis function defined for all p E D and the ai are unknown scalars. Using the appropriate basis functions Bi (p) defined in the following paragraph, the N unknown coefficients ai can be computed by solving the N linear equations F(pi) = f i for i = 1,. . . , N . If we let M be the N by N matrix whose entries are B i ( p j ) and let f = (fi,. . . , f~)~, then the unknown vector a = (a], . . . , can be computed by solving Ma = f . In Hardy &amp; Goepfert[lS] and Pottmann &amp; Eck[27] the spherical multiquadric basis functions are &amp;(P) = J1+ R2 -PRcos(gi(p)), where 0 &lt; R &lt; 1 is a user defined constant and gi(p)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>4 :</head><label>4</label><figDesc>Construct the scattered data interpolant G(s) on the sphere S which satisfies G(si) = f i , f o r i = l , ..., N .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>find a point a in A such that B ( Q ) = p and define F ( p ) = G ( E ( a ) ) . Steps 1 and 5 are potentially difficult problems for a general domain D because they may involve the inversion of a nonlinear map B. However, for the evaluation of the interpolant F in Step 5 over all of D, as opposed to the evaluation at a single fixed point, the inversion can be avoided by evaluating F ( B ( a ) ) = G ( E ( a ) ) over all Q in A .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figures 5</head><label>5</label><figDesc>and 6 are different visualization techniques described in Section 3 of the domain mapping technique in conjunction with the modified reciprocal multiquadric method on a spherical domain. The apple core shaped surface inFigure 5is the domain D and the two plots contain contour curves and color blended contour regions. A graph of the interpolating function F ( p ) is visualized by the transparent surface projected radially inFigure 6band projected in a direction normal to the domain D inFigure 6a. The line segments connecting the domain D with the transparent surface indicates the sample locations p; on the domain and the relative magnitudes of the values f;.The maximum observed discrete error for this data is approximately 0.023, or about 2.7% using only N = 90 initial data points p i . Several other examples are presented in Foley et al.[ll].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>that vector values A, each with K components, a-fe sampled at discrete points p; in some domain D. If fi = (fi,l, ..., f i ,~) for i = 1 ,..., N , the problem is to construct a vector valued function F ( p ) that satisfies F ( p ; ) = x. The previously described methods extend easily because they are of the form where the Q, are scalar or real values. The vector valued interpolation methods are of the form i = l where the B , ( p ) are the same real valued basis functions and the Ai are unknown vectors of length K . To compute the unknown vector coefficients Ai, we need to solve N linear equations with N ynknown: for each of the K vector components so that F ( p i ) = fi for i = 1, .. . , N . Fortunately, all of these K linear systems of equations have the same N by N coefficient matrix M = [Bj(pi)], for i , j = 1 , . . . , N . If A; = (a,,l,. . . , a ; ,~) , then the A; must satisfy for each k = 1,. . . , K . Solving K linear systems which involve the same coefficient matrix M can be efficiently computed by finding the LU decomposition of M or by computing M -l . Foley et a1.[10] use vector valued interpolation on a sphere to approximate volumetric ray tracing techniques. Each vector component represents a pixel of the image, thus K = 250,000 for interpolation of 500</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 .</head><label>7</label><figDesc>Cases where a contour curve intersects a domain triangle.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>Contour plots are often effective, but they are not always the best way to analyze a function because they do not clearly indicate the geometric shape of a function. The conventional surface graph in Figure l b is the set of</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>The transparent surface graphs in Figures 4 and 6 are computed as the 3D points G(p) = p + N ( p ) L [ F ( p ) -F m i n ] , Fmaz -Fmin where p varies over the surface domain D , L is a positive scale factor, Fmin and Fmaz are the minimum and maximum values of F ( p ) , and the direction of the projection at p is the unit vector N ( p ) . The direction vector N ( p ) for the normal projection in Figure 6a is the outward normal vector to D of unit length at the point p . The radially projected transparent surface graph in Figure 6b uses N ( p ) = ( pc)/llp -cII, where c is center of the bounding box that contains the domain D. For the surface graph on the sphere in Figure 4b, both of these techniques yield the same results. These figures are why we refer to the interpolation problem in Section 2.3 as the surface on surface problem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>[l],Franke[l4] and Franke &amp; Nielson[lG] contain descriptions of many methods that solve this problem.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>The basis functions for the C2 modified reciprocal multiquadric method in Foley[S] are of the form for 0 5 gi(p) 5 3, and for g,(p) &gt; 3, a fifth degree polynomial is used so that B i ( p ) is a C2 function over the entire sphere.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements. We wish to thank the following members of the CAGD group at Arizona State University for their assistance: R. E. Barnhill </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Surfaces in computer aided geometric design: A survey with new results</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Barnhill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1" to="17" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">A new look at higher dimensional surfaces through computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Barnhill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Makatura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Stead</surname></persName>
		</author>
		<editor>G.E. Farin</editor>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="123" to="129" />
			<pubPlace>SIAM, Philadelphia</pubPlace>
		</imprint>
	</monogr>
	<note>Geometric Modeling</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Surfaces defined on surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Barnhill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">S</forename><surname>Ou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="323" to="336" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Interpolation to arbitrary data on a surface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Barnhill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">R</forename><surname>Piper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Rescorla</surname></persName>
		</author>
		<editor>G.E. Farin</editor>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="281" to="289" />
			<pubPlace>SIAM, Philadelphia</pubPlace>
		</imprint>
	</monogr>
	<note>Geometric Modeling</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">The parameter R2 and multiquadric interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Carlson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
		<respStmt>
			<orgName>Lawrence Livermore National L a b e ratory</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">rendering</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Splines minimizing rotationinvariant semi-norms in Sobolev spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Duchon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Multivariate Approximation Theory</title>
		<editor>Schempp, W. and Zeller, K.</editor>
		<meeting><address><addrLine>Basel</addrLine></address></meeting>
		<imprint>
			<publisher>Birkhauser</publisher>
			<date type="published" when="1975" />
			<biblScope unit="page">0</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Interpolation and approximation of three and four-dimensional scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Math. Appls</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="711" to="740" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Interpolation to scattered data on a spherical domain</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
		<editor>M. Cox and J. Mason</editor>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="303" to="310" />
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
	<note>Algorithms for Approximation 11</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Towards animating ray-traced volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Lane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Visualization and Computer Animation Journal</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Interpolation of scattered data on closed surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Lane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="303" to="312" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visualizing functions over a sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Lane</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramaraj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="32" to="40" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Smooth interpolation of scattered data by local thin plate splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Math. Appls</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="273" to="281" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Scattered data interpolation: Tests of some methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Comp</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="181" to="200" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Smooth interpolation to large sets of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Intern. J. Numer Meth. Engrg</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1691" to="1704" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Scattered data interpolation and applications: a tutorial 65-74. and survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric Modeling: Methods and Their Applications</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Multiquadratic equation of topography and other irregular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Hardy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J . GeG phys. Res</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<biblScope unit="page" from="1905" to="1915" />
			<date type="published" when="1971" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Theory and applications of the multiquadric-biharmonic method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Hardy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comp. Math. Appls</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="163" to="208" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Least squares prediction of gravity anomalies, geoidal undulations, and deflections of the vertical with multiquadric harmonic functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Hardy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">M</forename><surname>Goepfert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Geophys. Itesearch Letters</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="423" to="426" />
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">C&apos; Surface interpolation for scattered data on a sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Lawson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rocky Mountain J. Math</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="177" to="202" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Marching cubes: a high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A method for interpolation of scattered data based upon a minimum norm network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Comp</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="253" to="271" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">A survey of applications of an affine invariant norm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematical Methods in CAGD</title>
		<editor>Lyche, T., Schumaker, L.L.</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Techniques for interactive visualization of volumetric data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
	<note>this issue</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Interpolation over a sphere based upon a minimum norm network</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramaraj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="41" to="57" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Modified multiquadric methods for scattered data interpolation over a sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Interpolation of data on the surface of a sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Renka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Math. Software</title>
		<imprint>
			<biblScope unit="page" from="417" to="436" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Algorithm 660: QSHEPPD: Quadratic Shepard method for bivariate interpolation of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Renka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM TOMS</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="149" to="150" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A rendering algorithm for visualizing 3D scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sabella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="51" to="58" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">rendering</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="313" to="322" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Keeler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
