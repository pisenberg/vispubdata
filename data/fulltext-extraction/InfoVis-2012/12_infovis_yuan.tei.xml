<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Intelligent Graph Layout Using Many Users&apos; Input</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Xiaoru</forename><surname>Yuan</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Limei</forename><surname>Che</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yifan</forename><surname>Hu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin</forename><surname>Zhang</surname></persName>
						</author>
						<title level="a" type="main">Intelligent Graph Layout Using Many Users&apos; Input</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>. Two layouts that combine many users' input sub-graphs using our Laplacian Constrained Distance Embedding (LCDE) algorithm. Layout configurations of the input subgraphs are well preserved in the final layouts of the merged graphs. The number under each subgraph is the similarity score between the user layout and the layout of this subgraph in the merging result (G LCDE and G ′ LCDE ).</p><p>Abstract-In this paper, we propose a new strategy for graph drawing utilizing layouts of many sub-graphs supplied by a large group of people in a crowd sourcing manner. We developed an algorithm based on Laplacian constrained distance embedding to merge subgraphs submitted by different users, while attempting to maintain the topological information of the individual input layouts. To facilitate collection of layouts from many people, a light-weight interactive system has been designed to enable convenient dynamic viewing, modification and traversing between layouts. Compared with other existing graph layout algorithms, our approach can achieve more aesthetic and meaningful layouts with high user preference.</p><p>Index Terms-Graph layout, Laplacian matrix, force directed layout, stress model, merging, editing, crowd sourcing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Graphs are used widely to represent physical networks, social connections, or other abstract relationships. Graph drawing algorithms aim at producing pleasant and readable visual representation of graphs. Traditional graph layout methods, such as force-directed or spectral layout algorithms, are all automatic graph layout techniques that take input data and generate one final layout. Several other methods can produce different styles of layouts, but together these may not satisfy the users' special needs. For example, if we want to force a ten-node circle in the layout, or achieve other specific topological structures when visualizing graphs from applications in chemistry or biology , the aforementioned automatic algorithms cannot retain such user defined local structures. In this paper we propose algorithms that facilitate user participation and leverage human intelligence in the process of layout generation. Through an interactive system, we allow users to edit part of a graph by changing node positions. We then merge the users' modification with the original layout in a well-founded manner to obtain a layout with user defined subgraphs as constraints (shown in <ref type="figure" target="#fig_0">Fig. 1</ref>). Here we use the term users in a general sense -the users could be human operators, or graph drawing systems designed to handle certain subgraphs well (for instance, a tree drawing algorithm for drawing tree subgraphs). This approach of multi-agents cooperative graph layout combines the ability of human beings in producing good drawings of small subgraphs, with the power of automated algorithms in getting the overall layout structure right. Our algorithms can incorporate drawings of many subgraphs and give an aesthetic layout of the whole graph, while satisfying the practical needs of the underlying application.</p><p>The remainder of the paper is organized as follows. In the next section, we review related work on constrained layout, divide and conquer approaches and previous studies comparing automatic and manual graph drawing. This is followed, in Section 3, by a detailed discussion of our algorithms. We then give, in Section 4, case studies that apply our algorithms to incorporate user-generated subgraphs of both abstract and real world networks, followed by discussions in Section 5. We conclude with directions for future work in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The area of graph drawing has progressed considerably to the extent that there are now many layout algorithms for different drawing styles, from circular layout <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b18">19]</ref>, to hierarchical layout <ref type="bibr" target="#b13">[14]</ref>, orthogonal layout <ref type="bibr" target="#b14">[15]</ref>, and force-directed layout <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b23">24]</ref>. Efficiency and effectiveness of force-directed algorithms are further improved by the multilevel approach and fast force approximation <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b31">31]</ref>, as well as by parallelization and the use of GPU <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b22">23]</ref>.</p><p>Papadopoulos and Voglis <ref type="bibr" target="#b26">[27]</ref> proposed a divide and conquer strategy for drawing graphs via modular decomposition. The graph is decomposed into modules and laid out, and combined using a modified spring embedder. While the decomposition approach can reveal interesting regular graph structures (e.g., cliques), the spring embedder treats each module as a hyper-node occupying a rectangular area, without considering individual nodes and edges it represents. Consequently the orientation of each module, which may not be optimal in the context of the whole graph, is unchanged in the combination process. Archambault et al. <ref type="bibr" target="#b1">[2]</ref> proposed TopoLayout which recursively detects topological features inside the graph, and uses the appropriate algorithms for each feature, it then employs an overlap removal algorithm to remove overlap between subgraphs. These previous works differ from our work in that we attempt to harness the intelligence of human beings to help construct aesthetic drawings, and that we propose a principled approach of combining multiple subgraph drawings.</p><p>Even with the availability of many layout algorithms, sometimes it is not possible to produce a drawing that satisfies the needs of the end users, in part because aesthetic beauty cannot be captured easily by equations. In addition, there could be constraints relevant to the field of application that current algorithms cannot take care of. In recent years, there have been studies of user generated graphs and how they compare with automatic graph layout. Van Ham and Rogowitz <ref type="bibr" target="#b30">[30]</ref> allowed users to generate their own layouts of small graphs. By examining these manually arranged layouts, they verified common aesthetic standards and found a new criterion -a tendency to arrange the clusters inside convex-hulls. This criterion is also reflected by one of our cases (see <ref type="bibr">Section 4)</ref>. A later work <ref type="bibr" target="#b7">[8]</ref> made another comparison of usergenerated and automatic graph layouts, and concluded that the best of user-generated layouts performed as well as or better than layouts based on physical models. However, with the exception of a few manual layouts, most of the user-generated layouts were not as good as the model-based layouts. This is because people with less graph drawing experience found it difficult to handle graphs of over 50 nodes.</p><p>In order to overcome this barrier, in this paper we allow each user to work on a small part of the graph, which makes it easier for the user to achieve a good layout. We then merge input from multiple users into a layout for the full graph. In this way, we combine the intelligence of users to create a layout which is better than the results from any single automatic algorithm.</p><p>Work on constrained graph layout appeared as early as the 1990's <ref type="bibr" target="#b29">[29,</ref><ref type="bibr" target="#b25">26]</ref>. Tim Dwyer et al. <ref type="bibr" target="#b8">[9]</ref> proposed the DIG-COLA algorithm applied to directed graph drawing. Graph nodes were divided into different layers, and the constraints were introduced to keep these layers separated. Dwyer et al. <ref type="bibr" target="#b9">[10]</ref> attempted to solve constrained graph layout problems with a combination of stress majorization and constrained programming techniques. Constrained optimization also provided the foundation for Dunnart, a constraint-based graph drawing tool <ref type="bibr" target="#b10">[11]</ref>. Further work by Dwyer <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b3">4]</ref> looked at fast handling of simple constraints such as linear or circular constraints. The difference between these approaches and ours is that we are not attempting to satisfy hard constraints, but rather integrate multiple subgraph drawings into one, such that individual drawings are satisfied as much as possible.</p><p>Our work uses previous distance embedding techniques. One of the basic models for distance embedding is the stress model <ref type="bibr" target="#b23">[24]</ref>, which can be solved with the stress majorization technique <ref type="bibr" target="#b19">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ALGORITHMS FOR INCORPORATING MULTI-USER INPUT</head><p>In this section we describe our algorithms for incorporating multi-user inputs. As a starting point, a graph is laid out using a suitable graph layout algorithm. This graph is presented to multiple users/agents, who will inspect the layout, and may choose to change part of the embedding to satisfy their aesthetic preferences or practical needs. The users/agents could be human operators, or graph drawing systems designed to handle certain subgraphs well -for instance, a tree drawing algorithm for drawing tree subgraphs. The challenge is then to incorporate these multi-user inputs so that the subgraph drawings are maintained as much as possible, and at the same time they are pieced together into a good overall layout of the original graph. We first give some definitions. We consider undirected graphs with no loops or multiple edges. Given a graph G = (V, E), with V the set of nodes (vertices) and E the set of edges, we denote the set of nodes connected to node i as N(i). The purpose of graph drawing is to find Cartesian coordinates x i for each node i ∈ V , so that the resulting drawing is aesthetically pleasing.</p><p>Let S be a subset of the vertices of graph G, and G S the subgraph of G induced by S. In our system, a user can define a subgraph by clicking on nodes, or using the lasso to select a group of nodes. The user can then adjust the subgraph layout based on his/her preference. This user defined subgraph layout is saved, along with layouts from other users. For convenience, from now on we use the term subgraph to denote both the subgraph of vertices and edges, as well as the user generated subgraph layout, provided that doing so does not cause ambiguity within the context.</p><p>In the following subsections we first recall the force-directed layout algorithm, then propose two algorithms for merging users' subgraphs. Finally we introduce a measure of similarity between a user input subgraph and the merged layout, which allows us to gauge the extent to which inputs from users are obeyed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Constrained Force-Directed Placement</head><p>This algorithm uses a variant of the Force-Directed Placement <ref type="bibr" target="#b16">[17]</ref> (FDP) algorithm. We give each subgraph layout a score (see Section 4.1 for the scoring system) -if a layout is of good quality, it is given a high score. Layouts with the highest score are used for merging. We calculate the distance of each pair of nodes in the subgraphs, and take these as constraints. We call the resulting algorithm Constrained Force-Directed Placement (CFDP). Specifically, in FDP, each node is influenced by attractive forces which act like springs to pull nodes together, and repulsive forces which keep nodes a reasonable distance away from each other. The forces applied to node i by node j are defined as:</p><formula xml:id="formula_0">f a ( j, i) = ∥x i − x j ∥ 2 K , {i, j} ∈ E; f r ( j, i) = − K 2 ∥x i − x j ∥ , i, j ∈ V,</formula><p>where K is a force coefficient representing the ideal edge length. <ref type="figure" target="#fig_1">Fig. 2</ref>(a) shows a balanced system. For node A, when the distance between nodes A and B equals K, f a = K and f r = −K. <ref type="figure" target="#fig_1">Fig. 2</ref>(b) is a user defined graph. Here node A is pulled far away from B and C by the user, so the attractive force on node A is now stronger</p><formula xml:id="formula_1">, | f ′ a (B, A)| &gt; | f ′ r (B, A)| and | f ′ a (C, A)| &gt; | f ′ r (C, A)|. Therefore, if we (a) (b) (c) (d) Fig. 3.</formula><p>The CFDP algorithm will combine many input graphs. When a subgraph is edited by more than one user, it contains all user inputs equally by default. (a) Initial layout; (b) a user defined graph1; (c) a user defined graph2; (d) the result of merging graph1 and graph2 by the CFDP algorithm.</p><p>use the same force coefficient K for every edge, this is an unbalanced system, in which node A will move away from the user defined position toward its balanced position. In order to maintain the topological structure of the user input, we use the user defined distance to replace the ideal edge length K.</p><formula xml:id="formula_2">f a ( j, i) = ∥x i − x j ∥ 2 udis(i, j) , {i, j} ∈ E S ; f r ( j, i) = − (udis(i, j)) 2 ∥x i − x j ∥ , i, j ∈ V S</formula><p>By replacing force constant K with the user defined distances udis(i, j), if two nodes appear in more than one user input subgraph, the user defined distance will be the average value of all distances in these subgraphs. The CFDP algorithm therefore indirectly maintains multi-user input. When there is no edge between two nodes in a user subgraph, the force coefficient K is replaced by a user defined length only when calculating the repulsive force, since there is no attractive force between the nodes. To further enforce subgraph shapes, we add virtual edges to construct a complete subgraph. In <ref type="figure" target="#fig_1">Fig. 2</ref>(c) we have a graph with 5 nodes and 5 edges, in which a user edits nodes A, B and C. In this subgraph, there is only an edge between B and C, so we have to add two virtual edges AB and AC to form a complete subgraph. We can create virtual edges with the attractive force coefficients corresponding to the physical node distances in the subgraph placement. Even though we add additional constraints to CFDP, for small graphs, its speed is still faster than FDP. This is because we first take each subgraph as one hyper node, and build a hyper graph with hyper nodes and edges which are external to the subgraphs. We then run the FDP algorithm. Finally, we unfold nodes represented by each hypernode with the user defined topological structure, and run the CFDP algorithm. Since the nodes already maintain their user defined relative positions, the iteration process converges relatively quickly.</p><p>CFDP is able to incorporate user defined layouts of subgraphs, however, it does so in an indirect way, via the force coefficients. As shown in <ref type="figure">Fig. 3</ref>, the algorithm will produce a compromised version of layout if the same subgraph is edited by multiple users with different layouts. As a result, it does not always maintain the user input very well. We propose a more principled approach which explicitly incorporates multi-user input in the next subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Laplacian Constrained Distance Embedding</head><p>Since we would like to maintain topological information of the user input subgraphs, if we record the relative position of every pair of nodes, these positions will be maintained even if the subgraph is subject to translation.</p><p>This idea is used in the scientific visualization literature <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b27">28,</ref><ref type="bibr" target="#b32">32,</ref><ref type="bibr" target="#b33">33]</ref>, where the Laplacian vector is used for mesh editing and deformation. In this approach, the Laplace differential between each node and its neighbors is calculated by the formula:</p><formula xml:id="formula_3">δ i = v i − 1 |N(i)| ∑ j∈N(i) v j ,</formula><p>and the technique seeks to preserve this differential for all nodes. However, this approach is not suitable for our purpose, because the Laplace differential is not preserved if the subgraph is rotated. Instead, we seek to preserve the distance between each pair of nodes in the user subgraphs, because by the knowing pairwise distances among all nodes in a subgraph, we can exactly realize the layout of the subgraph.</p><p>We assume an initial layout of the whole graph. We then collect multi-user inputs for the layout of subgraphs. If two nodes appear in a subgraph, their ideal distance is defined by the subgraph layout. If two nodes appear in more than one subgraph, their ideal distance will be the average length in all the subgraphs involved. Otherwise, their ideal distance is the distance in the initial layout. Thus, we can define a stress energy function as</p><formula xml:id="formula_4">E = ∑ i, j∈F w i, j (∥x i − x j ∥ − d i j ) 2 + α ∑ i, j∈V S w i, j (∥x i − x j ∥ − d i j ) 2 (1)</formula><p>Here d i j is the ideal distance of nodes i and j, w i, j is the weighting factor for the edges, and typically equals 1/d 2 i j . Note that here the stress for the original graph is calculated over the set of node pairs F, which should be a superset of E. For example, F could be the set of edges in a triangulation of the nodes, plus the original edges. For simplicity, in this paper we take F = E. Likewise, the second summation in the stress energy could also be over a subset of node pairs, but for simplicity we take it to be over all pairs of nodes in the subgraphs.</p><p>Note that all ideal distances are physical distances based on the layout of the original and user subgraphs, not graph distances. By minimizing the stress energy, we are balancing two requirements: maintaining the original layout, and maintaining the user subgraph layouts. The magnitude of α controls the balance -a large α attempts to maintain the user layout as much as possible.</p><p>To minimize the stress function, we can use the Cauchy-Schwartz inequality to bound the terms in (1), and minimize the resulting quadratic function, as in Gansner et al. <ref type="bibr" target="#b19">[20]</ref>. Here we use an easier and equivalent derivation following <ref type="bibr" target="#b17">[18]</ref>, by using the fact that the minimum for (1) is achieved when its gradient vanishes. Thus, taking the derivative of the function with respect to x i and setting it to zero gives</p><formula xml:id="formula_5">∑ i, j∈E 2w i j (∥x i − x j ∥ − d i j ) x i − x j ∥x i − x j ∥ + α ∑ i, j∈V S 2w i j (∥x i − x j ∥ − d i j ) x i − x j ∥x i − x j ∥ = 0.</formula><p>Moving the nonlinear terms to the right hand side, we get</p><formula xml:id="formula_6">∑ i, j∈E w i j (x i − x j ) + α ∑ i, j∈V S w i j (x i − x j ) = ∑ i, j∈E w i j d i j (x i − x j ) ∥x i − x j ∥ + α ∑ i, j∈V S w i j d i j (x i − x j ) ∥x i − x j ∥ .</formula><p>In matrix form, this is</p><formula xml:id="formula_7">(L w + αL S w )x = (L w,d + αL S w,d )x,<label>(2)</label></formula><p>where the weighted Laplacian matrices L w and L S w are defined as and the matrices L w,d and</p><formula xml:id="formula_8">(L w ) i j =    ∑ {i,l}∈E w il , if i = j −w i j , if {i, j} ∈ E 0, otherwise (L S w ) i j =    ∑ l∈V S w il , if i = j −w i j , if i, j ∈ V S 0, otherwise (a) (b) (c) (d)</formula><formula xml:id="formula_9">L S w,d have elements (L w,d ) i j =      ∑ {i,l}∈E w il d il ∥x i −x l ∥ , if i = j − w i j d i j ∥x i −x j ∥ , if {i, j} ∈ E 0, otherwise and (L S w,d ) i j =      ∑ l∈V S w il d il ∥x i −x l ∥ , if i = j − w i j d i j ∥x i −x j ∥ , if i, j ∈ V S 0, otherwise</formula><p>We use the stress majorization technique <ref type="bibr" target="#b19">[20]</ref> to solve the nonlinear system ( 2). It works as follows: starting from the initial layout of the whole graph as the |V | × 2 matrix x in the right hand side of the linear system (2), we solve the linear system with the given right-hand-side, and insert the solution again into the right hand side. This process is repeated until the layout stabilizes. <ref type="figure" target="#fig_2">Fig. 4</ref> illustrates the two Laplacian matrices. The Laplacian matrix corresponding to the original layout is sparse, while the Laplacian matrix corresponding to a subgraph is dense. However, the dense part of the Laplacian is small, because subgraphs are relative small due to the inability of human users to handle large graphs. Note that for ease of presentation we assume so far that there is only one subgraph G S , the case for multiple subgraphs follows the same approach, except that more small dense matrices are added to the Laplacian of the original graph.</p><p>As the ideal distances come from both the initial layout and the subgraphs, we first scale the subgraphs to the same proportion as its placement in the original layout.</p><p>We call this method Laplacian Constrained Distance Embedding (LCDE). <ref type="figure" target="#fig_3">Figure 5</ref> compares LCDE with CFDP on a small example. It is seen that LCDE preserves user input layouts much better. This is because in CFDP, the user specified subgraph only affects the layout indirectly through the force coefficients. On the other hand, in LCDE, the user input layout is used explicitly in the energy minimization. By including all pairwise distances among nodes in the same subgraph, we ensure that the user input is mostly maintained. layouts generated by LCDE. Compared with layouts from CFDP, those from LCDE are seen to preserve the "hump" shape of the subgraphs much better.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Measuring Similarity</head><p>In order to have a more rigorous measure of (dis)similarity between layouts, we use Procrustes Statistic, which is a well known dissimilarity measure <ref type="bibr" target="#b4">[5]</ref>. This measure attempts to find the best fit between two inputs, after rotation, translation, and scaling. It then takes the difference between the transformed inputs as their dissimilarity. Let one layout be y i , i = 1, 2, . . . , |V |, and another x i , i = 1, 2, . . . , |V |. We would like to find a translation vector b, a scaling value ρ and a rotation matrix T that minimizes:</p><formula xml:id="formula_10">|V | ∑ i=1 ∥y i − (ρT x i + b)∥ 2 .<label>(3)</label></formula><p>The solution to this problem is</p><formula xml:id="formula_11">T = (XY T Y X T ) 1/2 (Y X T ) −1 , ρ = tr((XY T Y X T ) 1/2 ) tr(XX T ) ,<label>(4)</label></formula><p>where X is the 2 × |V | matrix of x i 's. The translation vector is b =</p><formula xml:id="formula_12">1 |V | (∑ |V | i=1 y i − ρT (∑ |V | i=1 x i )).</formula><p>The minimal value of (3),</p><formula xml:id="formula_13">P(X,Y ) = 1 − (tr((X T YY T X) 1/2 )) 2 tr(X T X)tr(Y T Y )<label>(5)</label></formula><p>is known as the Procrustes Statistic. We use 1−P(X,Y ) to measure the similarity of two layouts: a value of 1 indicates that two layouts are identical, and a value of 0 means that they are completely different. This is used for measuring how well the user input subgraphs are preserved in the merged layout, as well as in Section 4.1 as part of a scoring system for measuring user input.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CASE STUDIES</head><p>We designed and implemented an interactive system 1 to leverage users' drawing capabilities. The system provides a subgraph search function, by which a user can choose a subgraph, containing a few nodes up to the whole graph, and adjust its layout. <ref type="figure" target="#fig_4">Fig. 6</ref> shows our interactive graph visualization and manipulation system. The user can search a node by name, or just double click the item listed below the search box, then a subgraph, containing the searched node and its direct neighbor nodes, appears in the window on the right hand side. The users can keep double clicking on the nodes in the graph window to extend the subgraph to include additional nodes connected to the clicked nodes. In this study, we are interested in allowing the user to generate the layout completely unassisted. Thus to prevent users from being influenced by any layout, when they search a node, we only put it in the center of the screen and its neighbors are aligned in a circle <ref type="figure" target="#fig_4">(Fig. 6(a)</ref>). The user can adjust the layout by dragging the nodes on screen with the mouse. Then, when satisfied with the change <ref type="figure" target="#fig_4">(Fig. 6  (b)</ref> and (c)), the user can click on the 'submit' button on the upper right corner. The user defined subgraph layout is uploaded to our system via the Internet. In this way, we can collect many user defined subgraphs for our case study. In this section we apply our algorithms to four data sets: a small abstract graph, some graphs representing biochemical metabolic pathways, a co-authorship network, and a movie graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Small abstract graph</head><p>The first experimental data set is a small abstract graph with 50 nodes and 124 edges, taken from a graph layout comparison study by Dwyer et al. <ref type="bibr" target="#b7">[8]</ref>. In that work, the authors compared the user-generated layout to automatically generated layouts. They asked users to give an aesthetic layout of the graph. This proved to be a very difficult task for <ref type="bibr" target="#b0">1</ref> http://vis.pku.edu.cn/graphviz/GraphViz.html most people, since they were not trained to handle a graph of even 50 nodes. As a result the majority of user generated layouts were found to be inferior to those drawn by a force-directed placement algorithm.</p><p>In our study, there are 18 users, among them 13 users are from our visualization group: one teacher and 8 graduate students with visualization background, and 4 undergraduate students with computer science background. The remaining 5 users contributed anonymously after our online announcement.  We allow users to select many small subgraphs. We found that when there are a few input subgraphs, our algorithms are able to maintain users' input subgraphs well. As seen in <ref type="figure" target="#fig_6">Fig. 7(a)</ref>, we first generated an initial layout by a force-directed layout algorithm. A user searched for three subgraphs and gave them each a nice layout using our interactive system. Two nodes appeared both in subgraph2 and subgraph3. <ref type="figure" target="#fig_6">Fig. 7 (b and c)</ref> are the result of merging the three user subgraphs using CFDP and LCDE algorithm. For subgraph1, the two algorithms both maintain its shape very strictly, which is not surprising since sub-graph1 has only one node connecting to the rest of the graph, so the rest of the graph has less effect on it. For subgraph2 and subgraph3, the CFDP method maintains the general outline with some distortion in the empty circles, this is because subgraph2 and subgraph3 have a common edge with two nodes (conflict nodes), the ideal length is the average of the distance in each subgraph. Due to this change, a perfect circle no longer balances all the forces, so the circles have to deform somewhat to get to a new balanced state. However, the LCDE algorithm keeps the shape of the circles much better, because although there are two ideal lengths of the common edge that appear in the stress function, there are many other virtual edges that act as a scaffolding to make the circles very rigid, and the shape of the circles are mostly maintained.</p><p>From our graph visualization system, we collected 45 subgraphs of the abstract graph data set. On inspection, some of these are poorly laid out. Since we open the system to the public, some users did not have graph layout experience, and had to spend time exploring the interaction system and accumulating experience of making a nice layout. Consequently, it is not unusual for users to submit a poor layout, and we have to filter out such subgraphs. To define what kind of subgraphs could be included, we establish a scoring system. First, we give each subgraph a layout score by comparing it with a layout generated by FDP algorithm using Procrustes Statistic (see Section 3.3).</p><p>In addition to the similarity comparison, we would also like to see few edge crossings, which is not always achieved by the FDP layout. We rank subgraphs based on each measure, then add the rankings together to derive a score.Using our scoring system, we choose the top 23 subgraphs as inputs to our algorithms. Wehn we compare the CFDP and LCDE algorithms' layout with the FDP algorithm, our algorithms are found to give a good graph layout, and at the same time, each user subgraph is found to contribute to the whole layout.</p><p>In <ref type="figure" target="#fig_8">Fig. 8(a)</ref> we list 15 reasonable subgraph layouts collected from many different users. We then give three layouts achieved by the FDP algorithm ( <ref type="figure" target="#fig_8">Fig. 8(b)</ref>), the CFDP algorithm <ref type="figure" target="#fig_8">(Fig. 8(c)</ref>) and the LCDE algorithm( <ref type="figure" target="#fig_8">Fig. 8(d)</ref>). In <ref type="figure" target="#fig_8">Fig. 8(c)</ref> and (d) the sizes of the pink nodes show how many time the nodes have been edited, larger nodes have more edits. As can be seen, CFDP and LCDE produce good layouts. In the part of the graph where there are more user inputs (left of <ref type="figure" target="#fig_8">Fig. 8 (c  and d)</ref>), nodes and edges are evenly spaced out, unlike the FDP layout where one node is very close to two edges. However, the drawings also reveal a limitation of our algorithms. There is a subgraph shown in SG10 − 12, where six nodes form a clique. Even though many users place the nodes in a circle, in both CFDP and LCDE layouts, this clique is not laid-out in a circular fashion. The reason is that different users align these nodes into a circle in different orders, so the distance of a given pair of nodes varies. Since we only have a few of these layouts, even the average edge length varies. We believe with more user inputs, this variation may eventually even out. However, in the case of limited user input, it is difficult to keep a reasonable shape for these cliques. Perhaps one possible remedy is to identify cliques, and always give the user a subgraph where nodes in a clique are in a pre-arranged circle. We intend to investigate this further in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Biochemical metabolic pathway</head><p>We use biochemical metabolic pathway data to demonstrate the proposed graph layout methods in a real-world scenerio. Small metabolic pathways are often published with separated distinct canonical layouts. Though it is meaningful and possible to merge many metabolic pathways into a bigger pathway, it is difficult and tedious to do it by hand. No existing method can automatically achieve this. We use our proposed method in such a scenerio as a first step to such an automatic merging algorithm.</p><p>A small set of classical metabolic pathways are used in the experiment: the photosynthesis pathways, cellular respiration pathways and several other related metabolic processes. Photosynthesis is a process used by plants to capture the sun's energy and store it in biochemical form. Cellular respiration is a set of processes that release stored biochemical energy. They are fundamental metabolic pathways widely accessible in biochemical textbooks. There are usually canonical ways  to illustrate them, such as in the form of a cycle or a stick. We collected several illustrative images of these pathways from Wikipedia pages <ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3</ref> and manually transformed them into metabolic pathway graphs. Since they have shared chemicals, these pathway graphs can be put together and joined to a bigger connected graph. We also added a few other small pathways related to these chemicals. Then we manually obtained coordinates of chemical nodes from the same illustrative images from Wikipedia and transformed them into subgraph layouts. Using the whole graph and the subgraph layout data, we are able to calculate a global layout for the whole merged metabolic pathway. The merging layouts are shown in <ref type="figure">Fig. 9 (a), (b)</ref> and (c) after application of FDP, CFDP and LCDE, respectively. The background shadowed hulls in blue and pink indicate subgraphs SG1 and SG2 from <ref type="figure">Fig. 9 (a)</ref>, respectively. We easily recognize that the symbolic stick of Glycolysis process and cycles of Citric Acid Cycle are kept.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Co-authorship network</head><p>For the InfoVis 2004 contest, the dataset contains complete metadata for all the papers of 8 years of InfoVis Conference and their references. The metadata includes publication titles, authors, keywords, abstract, references and links to original papers when available in the ACM Digital Library. From this dataset, we extract a co-authorship network, and present its largest connected component, which contains 148 nodes and 349 edges. We produce each subgraph layout by automatic algorithms, SG1 is handled by a hierarchical layout algorithm, SG2-SG4 and SG6 by a circular layout algorithm, SG5 and SG7 by a force-directed layout algorithm. We selected these 7 subgraphs by hand, and left some other nodes in the co-authorship network unedited. From <ref type="figure" target="#fig_0">Fig. 10</ref>, we can see that layouts of different styles are merged naturally in one layout and each subgraph layout is kept very well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Movie graph</head><p>We crawled the Douban website for movies and their relations. Douban is a Chinese movie website that provides movie summaries and comments. Douban has a movie recommendation mechanism. This system recommends movies related to any given movie, based on the fact that people who like movie A also like movie B, or C and so on. We collect this relational information to build a graph, where nodes are movies. If movie B is in the recommendation list of movie A and A is also in the recommendation list of movie B, we connect A and B with an edge.</p><p>We made an announcement on Sina Weibo, the Chinese equivalent of Twitter, inviting people to use our graph visualization tool by selecting and layouting subgraphs of the movie graph. Eventually, 131 users submitted subgraph layouts; most of them were students, teachers or others interested in movies or visualization. In our web-based system, users can search a movie by its name, and other movies related to it will show up. Then a user can make a layout for these movies if he is familiar with them. We also provide movie summaries and links to help users to get to know the movies. Users can then upload their layouts, and can also share their results with other users.</p><p>We collected 178 subgraphs from this system, they cover 772 nodes and 1349 edges. We filtered out about 50% of the layouts with low scores. <ref type="figure" target="#fig_0">Fig. 11</ref> lists three examples of excluded subgraphs with very low scores and three included subgraphs with high scores.</p><p>After filtering, we achieved 92 reasonable subgraphs, which form a disconnected super-graph. Then we used the CFDP and LCDE algorithms to combine these subgraphs together and get the results in <ref type="figure" target="#fig_0">Fig. 12. Fig. 12 (a)</ref> shows some of the user input subgraphs; (b) shows a layout generated by the FDP algorithm, (c) and (d) show the layout generated by CFDP and LCDE; (e) shows the layout of corresponding input subgraphs with their movie names for the 3 different layout methods. From the figure, we see that FDP algorithm generated a reasonable layout with a number of clusters. People can see clusters clearly, but it is difficult to see the inner structure of cluster since the  attractive forces pull them too close. The CFDP and LCDE algorithms are both able to achieve a nice layout, as well as maintain user inputs. For example, subgraphs SG1-SG4 are well laided-out by CFDP and LCDE. SG2 is a small cluster disconnected from other nodes, while the other 3 subgraphs are part of user defined subgraphs, for example, SG1 in (e) is the left part of SG1 in (a), SG4 in (e) is the right part of SG4 in (a), the left part of SG1 and SG4 in (a) are also edited by many other users, so their structures cannot be seen clearly. In <ref type="figure" target="#fig_0">Fig. 12</ref> (e), comparing the layouts of SG2 by the three algorithms, we see that both CFDP and LCDE placed sequels of the same movie close to each other, faithfully preserving the input, since in the mind of the user, these sequels are more similar to each other than to other movies.</p><p>Our system provides a platform to help users visually and interactively express their understanding and feeling of movies and their relationship. The CFDP and LCDE algorithms are able to maintain user input layouts, and enable us to collect and integrate users' knowledge to form a knowledge database with visual representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DISCUSSION</head><p>From the four case studies, we see that both CFDP and LCDE algorithms can maintain, to a large extent, the topological structure of users' input subgraphs. CFDP maintains user input indirectly through force coefficients. It is found to be good at maintaining the structures of relatively independent subgraphs, for which forces within a subgraph are less affected by those from other nodes in the whole graph. On the other hand, the LCDE algorithm preserves the topological structure of user subgraphs directly through distance preservation, and is found to preserve subgraph topological structures very well, even when some subgraphs overlap.</p><p>Whichever method is used, a key ingredient of our approach is to leverage humans' innate sense of order, symmetry and aesthetics in drawing small subgraphs, and to utilize automated algorithms to incorporate these desired characters. In cases where layouts from users are good and consistent, we have achieved satisfactory results. Furthermore, in some application areas, such as biology and chemistry, scientists are used to seeing illustrations of certain biochemical reactions in a canonical way. However, even though each reaction graph may be small, a whole biological pathway network can be very large, making it hard for scientists to construct an overview of the whole graph while maintaining the shape of each small graph. Our algorithms are shown to be able to achieve this difficult task successfully. Another application we demonstrated is to combine outcomes from different automatic layout algorithms into one combined layout. For a graph with many clusters, a dense cluster may be arranged more suitably by a circular layout, while a sparse cluster benefits from a hierarchical layout. Taking advantage of the strength of each layout algorithm helped us in producing a better layout, which should allow users to understand and explore the graph more easily.</p><p>In our study, we have implemented a system for collecting many users' inputs. While the system does not support a collaborative multiuser input function, with which many users can work together in one interface at the same time, our web-based user input system does allow a user to edit his own subgraph and then submit it, knowing that his subgraph is eventually merged with other inputs to give a layout of the whole graph. From observing user inputs, we find that the the quality of the input subgraphs can be inconsistent. This represents a challenge to our idea of combining multiple good layouts into a whole. We proposed a scoring system to help weed out poor input. Nevertheless, we would like to investigate better ways to gauge the quality of user input. In addition, as we collect more and more user subgraphs, we can build a subgraph layout database. The most direct way to utilize this database is to apply a user defined layouts of a subgraph to all isomorphic subgraphs in a new graph. Finding isomorphic subgraphs, however, is an NP-hard problem. However, we can learn, for example layout styles, from the database. Even though two subgraphs are not exactly isomorphic, if we can extract same characteristics from them, then one graph can learn from the layout style of the other. This is an interesting direction to pursue for the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION AND FUTURE WORK</head><p>In this paper, we proposed two new methods to combine many users' input subgraphs into a consistent whole. We believe that human beings have a natural sense of order and symmetry, and are able to lay out small graphs well. The algorithms we proposed represent our attempt to harness the abilities of the users. Furthermore, users of graph drawing systems understand their areas of application better, and often like to see certain parts of the graph drawn in a particular way to conform to the conventions of the field. Our algorithms offer a general way to incorporate users' input, and the interactive system we implemented provides a convenient tool for the users to specify their preference and constraints. We also provide a downloadable version of our tool at http://vis.pku.edu.cn/graphvis/igl\_infovis12.</p><p>Our approach has its limitations. When the input is of low quality, or in conflict with each other (as in the case of cliques seen in Section 4.1), we would like to find a better way to exclude poor layouts, resolve the conflicts, and understand users' intentions. Another area of interesting research is in extending our interactive system into an online game, where inputs are scored based on quality measures of the layouts, and users gain points for better layouts. This would encourage mass participations, and with better and more scalable merging algorithms, could provide a powerful layout engine for complex networks.</p><p>Finally, our approach is not restricted to graph layout. The same methodology we proposed can be used for crowd-sourcing multidimensional data analysis, where users can help find low-dimensional embeddings for items (e.g. movies) with multiple attributes. (b) layout generated by FDP algorithm; (c) layout generated by CFDP algorithm; (d) layout generated by LCDE algorithm; (e) comparison of subgraph layout in the large graph generated with different algorithms.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1</head><label>1</label><figDesc>Fig. 1. Two layouts that combine many users' input sub-graphs using our Laplacian Constrained Distance Embedding (LCDE) algorithm. Layout configurations of the input subgraphs are well preserved in the final layouts of the merged graphs. The number under each subgraph is the similarity score between the user layout and the layout of this subgraph in the merging result (G LCDE and G ′ LCDE ).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Force analysis in the FDP algorithm and virtual edges in the CFDP algorithm. (a) A balanced system; (b) an unbalanced system; (c) virtual edges (dashed) added to edited nodes (green).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>An Example of a graph and its associated L w . Second row: when there is a subgraph and its associated matrix L w . (a) a small graph; (b) Laplacian Matrix L w ; (c) the graph after editing, pink nodes are the subgraphs nodes; (d) Laplacian Matrix L w plus a subgraph Laplacian matrix L S w .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Comparison of layouts by CFDP and LCDE. (a): An initial layout by FDP; (b) and (b'): user defined subgraphs with different number of nodes and topological shapes; (c) and (c'): layouts generated by CFDP; (d) and (d'):</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Interface for editing graph layout. (a) The interface provided to the users. Panel to select data sets; search box to identify center node to draw; graph layout editing canvas; submit button; (b) a user defined graph layout; (c) alternative graph layout by another user.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>CFDP and LCDE algorithms result with 3 user input subgraphs. (a) Initial layout and 3 user defined subgraphs; (b) CFDP layout algorithm result; (c) LCDE layout algorithm result.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>(a) The top 15 user input subgraphs from all 45 collected subgraphs. The three layouts below are achieved by (b) FDP, (c) CFDP and (d) LCDE algorithms, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 9 .Fig. 10 .</head><label>910</label><figDesc>Biochemical metabolic pathway. (a) metabolic pathway from a textbook (l), subgraphs from wikipedia (m), the input subgraphs (r). (b) a layout by a force-directed layout algorithm. (c) a layout by the CFD algorithm. (d) a layout by the LCDE algorithm, with numbers indicating similarity scores. Co-authorship network. (a) the subgraph layouts produced by automatic algorithms. (b) a layout by force-directed layout algorithm. (c) is a layout by the LCDE algorithm with subgraph constrains. The numbers around the subgraphs are similarity scores to their input layout.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 11 .</head><label>11</label><figDesc>Examples both not-included and included subgraphs, as determined by our score system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>Zoom in subgraphs comparison with different algorithms Fig. 12. A movie graph with 588 nodes and 1167 edges. (a) Collection of 16 subgraphs among overall 92 subgraph layouts submitted by the users;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>•</head><label></label><figDesc>Xiaoru Yuan, Limei Che, and Xin Zhang are with Key Laboratory of Machine Perception (Ministry of Education), and School of EECS, Peking University. E-mail: {limei.che, xiaoru.yuan}@pku.edu.cn. • Xiaoru Yuan is also with Center for Computational Science and Engineering, Peking University. • Yifan Hu is with AT&amp;T Labs. E-mail: yifanhu@research.att.com. Manuscript received 31 March 2012; accepted 1 August 2012; posted online 14 October 2012; mailed on 5 October 2012. For information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org.</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">http://en.wikipedia.org/wiki/Citric acid cycle 3 http://en.wikipedia.org/wiki/Cellular respiration</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors wish to thank the anonymous reviewers for their comments. This work is supported by National Natural Science Foundation of China Project (No. 60903062 and 61170204), and 863 Program Project 2010AA012400.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Mesh editing based on discrete laplace and poisson models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexa</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH 2006 Courses</title>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="51" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Topolayout: Multi-level graph layout by topological features</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="305" to="317" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Improved efficiency of spring embedders: Taking advantage of gpu programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Chriricota</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization, Imaging, and Image Processing -2007</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="169" to="175" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Multi-circular layout of micro/macro graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Baur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Brandes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th international conference on Graph drawing</title>
		<meeting>the 14th international conference on Graph drawing</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="volume">4875</biblScope>
			<biblScope unit="page" from="255" to="267" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Multidimensional Scaling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Cox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A A</forename><surname>Cox</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Chapman and Hall/CRC</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Circular layout in the graph layout toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Dogrusöz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Madden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on Graph Drawing, GD &apos;96</title>
		<meeting>the Symposium on Graph Drawing, GD &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="92" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Scalable, versatile and simple constrained graph layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="991" to="998" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A comparison of user-generated and automatic graph layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">L</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Quinn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Isenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Information Visualization</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="961" to="968" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Dig-cola: Directed graph layout through constrained energy minimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2005 IEEE Symposium on Information Visualization, (Infovis&apos;05)</title>
		<meeting>the 2005 IEEE Symposium on Information Visualization, (Infovis&apos;05)</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="65" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Constrained graph layout by stress majorization and gradient projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Mathematics</title>
		<imprint>
			<biblScope unit="volume">309</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1895" to="1908" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Dunnart: A constraint-based network diagram authoring tool</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wybrow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 16th international conference on Graph Drawing, GD&apos;08</title>
		<meeting>the 16th international conference on Graph Drawing, GD&apos;08</meeting>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="420" to="431" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Layout with circular and other non-linear constraints using procrustes projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Robertson</surname></persName>
		</author>
		<idno>of GD&apos;09</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th international conference on Graph Drawing</title>
		<meeting>the 17th international conference on Graph Drawing</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">5849</biblScope>
			<biblScope unit="page" from="393" to="404" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A heuristic for graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Congressus Numerantium</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="page" from="149" to="160" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Straight-line drawing algorithms for hierarchical graphs and clustered graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Nagamochi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Algorithmica</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="113" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fast compaction for orthogonal drawings with vertices of prescribed size</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eiglsperger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kaufmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">the 9th International Symposium on Graph Drawing, GD &apos;01</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="124" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Multi-level graph layout on the gpu</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Frishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1310" to="1319" />
			<date type="published" when="2007-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Graph drawing by forcedirected placement. Software: Practice and Experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M J</forename><surname>Fruchterman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Reingold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1129" to="1164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A maxent-stress model for graph layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Pacific Visualization Symposium</title>
		<meeting>IEEE Pacific Visualization Symposium</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="73" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Improved circular layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th international conference on Graph drawing, GD&apos;06</title>
		<meeting>the 14th international conference on Graph drawing, GD&apos;06</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="386" to="398" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Graph drawing by stress majorization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th international conference on Graph Drawing, GD&apos;04</title>
		<meeting>the 12th international conference on Graph Drawing, GD&apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="239" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Drawing large graphs with a potential field based multilevel algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hachul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jünger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 12th international conference on Graph Drawing, GD&apos;04</title>
		<meeting>the 12th international conference on Graph Drawing, GD&apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="285" to="295" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Efficient and high quality force-directed graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematica Journal</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="37" to="71" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Glimmer: Multilevel mds on the gpu</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ingram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Olano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="249" to="261" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An algorithm for drawing general undirected graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kamada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kawai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="7" to="15" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Editing operations for irregular vertices in triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Kobayashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wonka</surname></persName>
		</author>
		<idno>153:1- 153:12</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">An interactive constraint-based system for drawing graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ryall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shieber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th annual ACM symposium on User interface software and technology</title>
		<meeting>the 10th annual ACM symposium on User interface software and technology</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="97" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Drawing graphs using modular decomposition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Papadopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Voglis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th international conference on Graph Drawing, GD&apos;05</title>
		<meeting>the 13th international conference on Graph Drawing, GD&apos;05</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="343" to="354" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Sorkine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lipman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rössl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Laplacian surface editing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2004 Eurographics/ACM SIGGRAPH symposium on Geometry processing, SGP &apos;04</title>
		<meeting>the 2004 Eurographics/ACM SIGGRAPH symposium on Geometry processing, SGP &apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="175" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Constraints in graph drawing algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tamassia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Constraints</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="87" to="120" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Perceptual organization in user-generated graph layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Rogowitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1333" to="1339" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">A multilevel algorithm for force-directed graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Walshaw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Symposium on Graph Drawing, GD &apos;00</title>
		<meeting>the 8th International Symposium on Graph Drawing, GD &apos;00</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="171" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Mesh editing with poisson-based gradient field manipulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-Y</forename><surname>Shum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="644" to="651" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Interactive multiresolution mesh editing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zorin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 24th annual conference on Computer graphics and interactive techniques, SIGGRAPH &apos;97</title>
		<meeting>the 24th annual conference on Computer graphics and interactive techniques, SIGGRAPH &apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="259" to="268" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
