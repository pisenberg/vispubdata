<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Level-of-Detail Rendering of Large Graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Zinsmaier</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrik</forename><surname>Brandes</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><surname>Deussen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hendrik</forename><surname>Strobelt</surname></persName>
						</author>
						<title level="a" type="main">Interactive Level-of-Detail Rendering of Large Graphs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:06+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Graph visualization</term>
					<term>OpenGL</term>
					<term>edge aggregation</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Application of our visualization technique on a hierarchical data set, zooming from overview (left) to a region of interest (right). The density-based node aggregation field (blue color) guides edge aggregation (orange/red color) to reveal visual patterns at different levels of detail.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>We present methods for the interactive visualization of large graphs. We say a graph is large if it fits into video memory but cannot be rendered as node link diagram without significant over-plotting, thus we define size relative to the computing environment. For the interactive exploration of such graphs fast node and edge aggregation is needed in combination with efficient rendering in different levels of detail (LOD). Both is presented in the following. Our techniques enable us to show graphs with up to ∼ 10 7 nodes and up to ∼ 10 6 edges at interactive rates.</p><p>Lampe and Hauser <ref type="bibr" target="#b18">[20]</ref> describe a method for rendering large graphs as density fields based on a GPU implementation of Kernel Density Estimation (KDE). Our method extends their technique for node aggregation by a two-pass seed point rendering that significantly reduces geometry and scales to large graphs. Furthermore we present a fast edge aggregation method that derives start-and endpoints of multi-edge representatives from the underlying node density field in image space. Our method is able to render a graph with a given layout without preprocessing. No auxiliary data structures such as meshes or node hierarchies are needed.</p><p>Our techniques allow to render large graphs on common graphics hardware at interactive rates. In combination with a zoom based user interface and flexible KDE bandwidth manipulations efficient graph exploration is possible as well as interactive and intuitive node labeling. Additionally, our techniques provides flexible mechanisms to define the representation of aggregates by modifying the normalization function and used colors as described below.</p><p>The paper is organized as follows. First we describe and discuss the related work in Section 2. A detailed description of our meth- ods is given in Section 3, performance considerations are discussed in Section 4. An interactive system based on the proposed techniques is described in Section 5. We present its interaction paradigms and some example applications. Finally, we summarize and propose future work in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>We divide the problem of rendering large graphs on (comparatively) small displays into two main problems: dense regions of nodes and cluttering of edges. While the first is the general problem of dense point sets commonly faced in visualization and computer graphics, the second problem is more closely related to structure-aware methods from information visualization and graph drawing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Node Visualization Methods</head><p>Nodes can be displayed as small elements, at minimum a single pixel can represent one node. Nevertheless, clutter and over-plotting are common challenges in point data and scatterplot visualizations. One solution to the problem is to slightly displace the nodes to reduce overplotting on the whole dataset <ref type="bibr" target="#b16">[18]</ref>. Alternatively, optical distortion techniques and zoomable user interfaces can improve the visualization in a local area <ref type="bibr" target="#b4">[6]</ref>. While both methods preserve the distinct node representation they either distort the shape of node groups <ref type="bibr" target="#b16">[18,</ref><ref type="bibr" target="#b4">6]</ref> or display only parts of the dataset <ref type="bibr" target="#b4">[6]</ref>. Density-based visualizations avoid these problems and can be applied to large datasets. Density can be measured by dividing the visualization into bins and counting the number of data points that fall into them. This approach is closely related to histograms and color codes or symbols can be used to represent the local density <ref type="bibr" target="#b6">[8]</ref>. For instance alpha blended scatterplots are an implicit form of this technique with a bin sizes equal to one pixel and a color encoded density representation. However similar to histograms the bin sizes and binning borders introduce a bias to the visualization. Instead of such discrete density representations basis functions can be used to accumulate the point influences into a continuous density field. Leeuw and Liere <ref type="bibr" target="#b25">[28]</ref> propose a GPU-accelerated technique that visualizes accumulated Gaussian basis functions as continuous field similar to a heat map. Cao et.al. <ref type="bibr" target="#b5">[7]</ref> use Kernel Density Estimation on nodes to derive a cluster hierarchy which is input to hierarchical edge bundling <ref type="bibr" target="#b12">[14]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Edge Visualization Methods</head><p>In many cases, graphs are visualized as node link diagrams. In addition to node clutter, such representations suffer also from over-plotting of edges, since such elements cannot be displayed as efficiently. Node layout algorithms serve as a global solution to untangle node link diagrams while distortion techniques provide local improvements, e.g. fisheye lenses <ref type="bibr" target="#b22">[24]</ref> generate more screen space for interesting areas. Furthermore, the drawing paradigm can be altered to be more space efficient. Becker <ref type="bibr" target="#b3">[5]</ref> suggests to draw the links only half the way to their targets. These "half lines" reduce edge clutter and crossings but make tracking edges more difficult.</p><p>Apart from such improvements for edge rendering it is common to shift the focus from single edges to edge aggregates. Such aggregates can be loose edge bundles, edge replacements through meta edges or edge density patterns. In either case single connections become harder to read but overall patterns become more prominent. The aggregation strategies are commonly classified into hierarchical methods, confluent drawing, edge bundling techniques, and density based methods.</p><p>Hierarchical methods define a pyramid of simplified versions of a graph. This pyramid can be constructed by merging nodes based on graph theoretic measures <ref type="bibr" target="#b11">[13]</ref> or geometric clustering <ref type="bibr" target="#b20">[22]</ref>. The edges are merged to meta edges, which are explicitly defined and represented. The approaches are often designed as interactive systems that allow the user to browse different aggregation levels by expanding/collapsing nodes. Reducing the amount of visible elements allows exploration of datasets with several million edges <ref type="bibr" target="#b2">[4]</ref> on current displays. The creation of the aggregates requires offline computations, except for datasets that already contain natural hierarchies.</p><p>Confluent Drawing represents graphs without edge crossings. Dickerson et al. <ref type="bibr" target="#b8">[10]</ref> present for instance a heuristic algorithm that replaces clique and biclique edges with an explicit "traffic circle" aggregation metaphor. However confluent drawing can not be applied on general graphs and "the complexity of deciding whether a general graph is confluent or not still remains an open problem" <ref type="bibr" target="#b8">[10]</ref>.</p><p>Edge Bundling techniques share a common metaphor: they join similar parts of edges to bundles. Single nodes and edges remain in the visualization, while visual bundles highlight higher level patterns. The aggregates are often defined explicit by a hierarchy <ref type="bibr" target="#b12">[14]</ref>, a mesh <ref type="bibr" target="#b7">[9,</ref><ref type="bibr" target="#b17">19]</ref> or based on clustering techniques <ref type="bibr" target="#b10">[12,</ref><ref type="bibr" target="#b9">11,</ref><ref type="bibr" target="#b19">21]</ref>. However, the standard representation here is implicit with loose bundles of variable diameter indicating the aggregates <ref type="bibr" target="#b13">[15,</ref><ref type="bibr" target="#b9">11,</ref><ref type="bibr" target="#b12">14]</ref>. Still there are some exceptions like edge to edge force based implicit bundling strategies <ref type="bibr" target="#b13">[15]</ref> or flow like explicit representations <ref type="bibr" target="#b19">[21]</ref> and clustering based post processing techniques <ref type="bibr" target="#b24">[26]</ref>. Edge bundling scales for graphs of medium size (∼ 1 − 10k edges), the algorithms are designed to optimize bundling with allowance for non realtime execution. Gansner et.al. <ref type="bibr" target="#b10">[12]</ref> use a proximity graph and an "ink saving" measure to allow fast hierarchical edge bundling of large graphs. Recently, Hurter et.al. <ref type="bibr" target="#b15">[17]</ref> described an iterative approach which operates on a hight field created from applying KDE on edge sample points. In each iteration step, the sample points are moved along the gradients towards local maxima. With each repetition, the kernel bandwidth is decreased, which sharpens the density field and results in tighter and more separated bundles.</p><p>Density Based approaches transform the discrete node link diagram into a continuous representation. Leeuw and Liere <ref type="bibr" target="#b25">[28]</ref> represent graphs with node density fields and Lampe and Hauser <ref type="bibr" target="#b18">[20]</ref> extend the method to edges, using line kernels. Density based techniques use a pure implicit aggregation that exists only as visual pattern in the visualization. The implicit aggregation allows fast rendering without preprocessing and the techniques can be applied to streaming data <ref type="bibr" target="#b18">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Discussion of Related Work</head><p>Bundling approaches, like Gansner et.al. <ref type="bibr" target="#b10">[12]</ref> or Hurter et.al. <ref type="bibr" target="#b15">[17]</ref>, reduce visual complexity by grouping edge segments to bundles. Lampe and Hauser <ref type="bibr" target="#b18">[20]</ref> use a line kernel method to visualize an edge density field. Although using different metaphors, these approaches aim at highlighting edge patterns. In contrast, we focus on relationship patterns between node density clusters. And thus extend the well known density representation <ref type="bibr" target="#b18">[20,</ref><ref type="bibr" target="#b25">28]</ref> of point data sets with a closely coupled visualization of inter-cluster connections. FacetAtlas <ref type="bibr" target="#b5">[7]</ref> relates to this idea, but addresses smaller magnitudes of elements.</p><p>Similar to Lampe and Hauser our approach operates in image space for fast processing using OpenGL. The method generates implicit edge aggregates which appear as a series of pixel values and do not link back to the edges they are aggregating. Object space approaches (like <ref type="bibr" target="#b10">[12]</ref>) retain this mapping between explicit edge aggregates and edges and benefit from additional rendering options (e.g. changes of aggregate geometry or per aggregate shading). But image space algorithms can reduce the computational complexity and enable us to achieve the required rendering rates for interactive exploration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">METHODS</head><p>The core of our contribution for visualizing large graphs is a new density-based node and edge-aggregate representation that addresses the cluttering problem. Our approach works completely in image space, does not use complex spatial data structures and utilizes various features of today's graphics hardware.</p><p>We start by describing the generation of continuos node density fields in Subsection 3.1. Such fields provide an overview of large amounts of data without neglecting the influence of a single node. Then we propose a hill climbing approach that uses the obtained node density field to guide the positioning of aggregated edges in combination with the aggregated nodes. Furthermore, Subsection 3.2 addresses a common problem of overdraw-based edge aggregation: colors change at edge crossings and distort the visual appearance. We solve this problem by a new drawing routine that takes edge orientation into account.</p><p>In the following we refer to nodes and node coordinates in object space, while using pixel and pixel positions to describe elements in image space (screen space).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Kernel Density Estimation for Node Aggregation</head><p>As mentioned above, we use density fields to visualize node aggregates. Lampe and Hauser <ref type="bibr" target="#b18">[20]</ref> propose a fast algorithm that generates such fields by utilizing the features of todays graphics hardware. Their approach is inspired by kernel density estimation (KDE) and has the advantage of very naturally aggregating the node details, as Silverman says "..the data will be allowed to speak for themselves..." <ref type="bibr" target="#b23">[25]</ref>. In the following we introduce their method with our adaption and describe our extensions that allow scaling to large node sets.</p><p>The 2D kernel density estimator for n data points x i i ∈ 1, 2, .., n is defined as:</p><formula xml:id="formula_0">f K H (x) = 1 n n ∑ i=1 K H (x − x i )<label>(1)</label></formula><p>with kernel function K H . We adjust the formula such that each point contributes a weight of one at its position and a decreasing influence to its neighborhood. Similar to other publications <ref type="bibr" target="#b18">[20,</ref><ref type="bibr" target="#b25">28]</ref> we choose a 2D Normal Kernel for K with influence matrix H. For simplicity we use an isotrope influence of the kernel in all directions and thus can restrict H to multiples of the identity matrix. A scalar parameter h is used to control the bandwidth of the kernel function. Additive blending of textured rectangles is used to determine f K H (x) for each pixel. Each node coordinate x i is mapped from object space to a pixel position x i in image space. For every node a geometry shader creates a rectangle at position x i . The rectangle is filled with a precomputed floating point texture that approximates the kernel function. The contribution of the nodes to the density field is accumulated with additive blending of the rectangles in the rasterization pipeline ( <ref type="figure" target="#fig_1">Figure 2</ref> (a)). For large node sets, however, the described method is time inefficient because the amount of textured rectangles depends linearly on the number of nodes within the screen area. Therefore, we extend the method and significantly reduce rendering time by binning nearby node coordinates into pixels. Instead of rasterizing multiple rectangles at the same position, a single weighted rasterization step per bin is then sufficient to create the same density field.</p><p>Typically, binning is done using spatial data structures such as a Point Region Quadtree (PRQ) <ref type="bibr" target="#b21">[23]</ref> which provides fast access queries while (offline) construction is cheap <ref type="figure" target="#fig_1">(Figure 2 (b)</ref>). PRQs represent a point aggregation hierarchy by recursively dividing the viewport. When querying the Quadtree, the hierarchy is cut at an appropriate level of detail and the next smaller aggregation level is returned. However, in most cases the Quadtree regions do not exactly fit pixel sizes, thus causing geometric overhead for non-merged nodes. Furthermore, the induced storage requirements for meta nodes add up to significant amounts for large graphs.</p><p>Therefore we propose the Seed Point Method, a technique that uses two render-passes: one to merge the nodes in their pixel-sized bins and one to create the actual density field. In the first pass the node coordinates x i are mapped to pixel positions x i of an Accumulation Field. The Accumulation Field is a frame buffer object (FBO) in screen resolution. Node coordinates that fall into the same pixel position are cumulated by additive blending.</p><p>After the first render pass, the value of each pixel therefore represents the amount of accumulated nodes within its screen space area. The second render pass binds the Accumulation Field as a texture and creates a weighted textured rectangle for every pixel of value ≥ 1 using a Geometry Shader <ref type="figure" target="#fig_1">(Figure 2 (c)</ref>). Doing so, our approach determines for a given viewport resolution the optimal input set to create a density field and minimizes the overhead during the kernel blending. Moreover it does not need any additional storage and fits directly into the OpenGL pipeline. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Hill Climbing for Edge Aggregation</head><p>In the next step we use the node Accumulation Field as input for a new edge aggregation approach that is visually coupled to aggregated node clusters. Our method bases on the idea that the aggregation of edges between peaks of the node field is an intuitive visual metaphor. In contrast to other edge aggregation techniques our technique operates in image space and therefore does not rely on precomputing supporting data structures. We interpret the node density field as height field and use a hill climbing algorithm to move starting and end points of the edges to the highest point of their visual cluster (the local maximum). The edges whose start points fall into the same cluster and whose end points share another cluster are implicitly aggregated. As result, inner-cluster connections are vanished while inter-cluster connections are emphasized. <ref type="figure" target="#fig_2">Figure 3</ref> demonstrates the effect. The graph is shown in the lower part of the figure. The original edges are given in black while the aggregated versions are in orange. The density field is shown as hills in the upper part. The blue points are the aggregate edge points, the orange edges the remaining aggregate edges. The edge points correspond directly to the highest peaks in the node aggregate visualization.</p><p>Generally, hill climbing moves points towards a local maximum which is what we want. If the density field contains several small local maxima within a large plateau, the corresponding "inner-cluster" edges are drawn. To avoid this line clutter within plateaus, the KDE bandwidth h can be adjusted to retrieve less edges.</p><p>As mentioned above, hill climbing is implemented in OpenGL: The Accumulation Field (see Seed Points method) is bound as texture t AF and a fragment shader operates on this texture as shown in algorithm 1. Within the Accumulation Field for every start pixel the associated hilltop-pixel is searched by iteratively tracking 3x3 neighborhoods. As starting points we use every pixel that accumulates at least one node. The result of this step serves as input for a geometry shader that repositions the points on the GPU towards the hilltop positions. The outcome of the process is an edge aggregation texture where each pixel value represents the number of edges that pass through it. It is important to note that the algorithm does not return explicit meta edges but aggregation results for the edges in form of pixel values. Along with these aggregation results, three visualization challenges arise: I) handling of edges that leave the viewport, II) the rendering of approporiate line widths, and III) avoiding visual hotspots on edge crossings. While the first problem only relates to our method, the latter two are of general interest for density based methods. We present solutions for all of them in the following.</p><p>Edges that leave the viewport: In a simple implementation the Accumulation Field would not be defined outside the viewport and thus edges that leave the visible area would not be aggregated. The rendering subsequently becomes unstable and panning operations may alter edge aggregates. These problems are reduced by aggregating nodes beyond the viewport borders: we suggest combining the visible Accumulation Field with an off screen field four times the visible area. Since this context is not visible and only used for aggregation we can work with a reduced resolution of the Accumulation Field outside the screen window. Using half of the resolution outside the visible window only doubles the total node aggregation costs but is already sufficient to stabilize the edge renderings of most graphs against panning and feathering out at the visible borders.</p><p>Rendering of thick edges: Edge coloring based on overdrawing is a common way to visualize aggregate weights in implicit edge representations. In contrast to explicit techniques the geometry of the aggregate cannot be altered here. In particular, it is not possible to render important edge aggregates with thicker lines because they consist of many over-plotted single edges and the rendering pipeline is not able to generate links between edges and aggregates. Therefore all edges are treated equally and are rendered with the same line width.</p><p>We therefore propose a post-processing step using a fragment shader that alters line thickness on the edge aggregate texture and creates the illusion of explicit aggregate definitions. We define a distance function dist(p i , p j ) between two pixels p i and p j and a function width(value(p x )) which maps a pixel value to a specific edge width. To determine the color of a pixel p i the shader inspects a w × w neighborhood S of pixel p i . All pixels p j ∈ S which fulfill the following condition are further considered as candidates for coloring:</p><formula xml:id="formula_1">dist(p i , p j ) ≤ width(value(p j )) 2<label>(2)</label></formula><p>Among the candidates the shader chooses the p j with the highest value to use it for coloring of p i . Using the maximum as selection criterion implies that important lines are rendered on top of others. The parameter w defines the size of the neighborhood and thresholds the maximal line-width. We chose a value of 5 to be sufficient for our approaches. A natural choice for a distance function dist(d i , d j ) would be the Euclidean distance. However, the symmetric character only allows uneven edge widths of one, three, five, etc. Therefore we propose an asymmetric pseudo Euclidean distance function that shifts the edge centers slightly from their intended positions but complements the visualization with even edge widths. <ref type="figure" target="#fig_3">Figure 4</ref> describes the distance functions.</p><p>For example, given a pixel at position (x e , y e ) and an attached edge width of two. Measuring with Euclidean distance, the pixel to the left (x e − 1, y e ) and to the right (x e + 1, y e ) would be colored, resulting in a width of three. Using our pseudo Euclidean distance, only the left pixel (x e − 1, y e ) would be colored. The distance of the right pixel (x e + 1, y e ) is two and therefore it does not satisfy the initial condition of equation 2: 2 ≤ 1.</p><p>Avoiding hotspots on edge crossings: Measuring the overdraw for computing edge widths and colors works well for isolated edges. If multiple aggregates cross the same pixel, however, all involved edges accumulate. Edge crossings therefore become hotspots and produce disturbing artifacts in the visualization. Moreover the density peaks distort the normalization for color mapping and width assignment and constrain the visualization space for actual edges <ref type="figure" target="#fig_5">(Figure 5 left)</ref>.</p><p>We propose to render edges separated by angles to reduce artifacts of edge crossings. The result is a set of textures that is merged with a max value filter to eliminate the crossing artifacts ( <ref type="figure" target="#fig_5">Figure 5</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>middle and right).</head><p>This technique is implemented in OpenGL by adding two render passes. In the first pass the edges of four different angle segments are rendered into the four separate color channels of a texture. The second pass uses a maximum filter to merge the obtained texture with the edge aggregation texture. We suggest using 180 angle segments of one degree (45 texture runs) for an undirected graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">MEASURES &amp; COMPLEXITY</head><p>The presented visualization system is based on image operations that are executed in parallel on the GPU. Moreover, many render operations build upon cheap texture transformations and in particular only three rendering steps depend on the input data. For each node a single point has to be added to the AccumulationField, each edge has to be rendered to the edge aggregation texture and the kernel rectangles have to be created. The last step depends on the number of Seed Points, which is limited by min(#pixels, #nodes). We denote the constant render cost for one Seed Point with R s , for one rectangle with R r and for one edge with R e . The worst case complexity for p pixels, n nodes and m edges is defined as:</p><formula xml:id="formula_2">O(n • R s + min(n, p) • R r + m • R e )<label>(3)</label></formula><p>Thus we are able to maintain a linear dependency towards the size of the input data. Moreover, the architecture of GPUs compensates for growing data sizes through parallelization. In practice, nearly constant render times can be achieved for graphs with up to ∼ 10 6 edges on common hardware ( <ref type="figure">Figure 6</ref>). <ref type="table" target="#tab_0">Table 1</ref> gives an overview of the test datasets and measured results. The US air-traffic and US migration graph are well known examples for edge bundling algorithms. The US census [27] data set provides more migration data with weighted edges and at a bigger scale. Wiki-Vote, Net50 and Net150 are available at the Sparse Matrix Collection [2] and have been laid out with SFDP <ref type="bibr" target="#b14">[16]</ref> to allow fair comparison to results of MINGLE. The 4.5M graph and H3 graph <ref type="figure">(Figure 1)</ref> are artificial test datasets for edge aggregation and the Europe dataset serves as node rendering benchmark. The latter one has been extracted from OpenStreetMap <ref type="bibr" target="#b0">[1]</ref> and includes one point for each tagged building. <ref type="figure">Figure 6</ref> compares the presented approach to the results of MIN-GLE <ref type="bibr" target="#b10">[12]</ref> and KDEEB <ref type="bibr" target="#b15">[17]</ref>, two of the, to our knowledge, fastest algorithms for edge bundling. To allow a comparison to KDEEB on large data sets we include a random graph of the same size as described in <ref type="bibr" target="#b15">[17]</ref>. The random graph is marked explicitly because of it's unusual properties: two times more nodes than edges and quasi-equal node distribution . Overall the diagram shows a roughly linear correlation between the number of edges and the render time for MINGLE. The results for KDEEB are more difficult to interpret but the authors    <ref type="figure">Fig. 6</ref>. Log-log scale comparison of the results reported for MINGLE <ref type="bibr" target="#b10">[12]</ref> and KDEEB <ref type="bibr" target="#b15">[17]</ref> with the presented approach (128px kernel). The GPU implementation allows our approach to maintain nearly constant rendering times below one second up to a graph size of ∼ 10 6 edges on real world data. The two marked data points refer to the artificial random dataset with special properties.</p><p>state that they achieve about the same speed as MINGLE for larger graphs and a linear correlation can thus also be assumed. In contrast, our algorithm achieves nearly constant results for all datasets ≤ 10 6 edges.</p><p>Our test system consists of a high end consumer graphics board (Nvidia GTX590) and an i7 -2600K CPU. The critical factor, however, is the GPU performance and similar results can be achieved with several ATI graphics cards (HD6950 +).</p><p>An analysis of our measurements, the shader code and the outlined data dependencies shows that the rasterization of the kernel rectangles and the render costs for edges have the highest impact on the overall performance and we therefore discuss these factors in the following:</p><p>Kernel Rasterization: The costs for kernel rasterization depend on the number of Seed Points and the size of the rectangles. The amount of Seed Points is difficult to estimate because it depends on the current viewport and the image resolution. The above discussed border of min(#pixels, #nodes) is used as upper limit. In practice, real world datasets normally do not have a uniform node distribution (i.e. not all pixels contain nodes) and the actual number of rectangles is thus often much smaller than the amount of pixels or nodes. In the following we will speak of a weak linear dependency that is relevant for some data sets like the artificial random graph but often overestimates the problem (e.g. Europe data set). We provide measurements of an "overview" and a "bad case" viewport to illustrate the viewport effects on our test data ( <ref type="table" target="#tab_0">Table 1</ref>). The second factor (the size of the rectangles) relates quadratically to the selected bandwidth h and determines the texturing costs for the kernels. <ref type="table" target="#tab_0">Table 1 and figure 6</ref> show results for a small kernel with diameter of 32px and a large variant with 128px.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Rendering of Edges:</head><p>The texture for the edge aggregation is created by the already described angle-separated rendering of all edges of the current viewport. The costs for edge rendering depend linearly on the amount of edges m with a constant factor for the overhead caused by our multi-pass rendering technique.</p><p>Despite the weak (nodes) and strong (edges) linear dependencies on the data size the image based design of our approach allows us to maintain near constant render times for large graphs and also point datasets. At some point, however, the hardware limits are reached and parallelization is no longer able to compensate the growth of data. On today's consumer hardware our approach scales well to graphs with ∼ 10 6 edges or point datasets with ∼ 10 7 nodes. Additionally it would be straight forward to distribute the render steps on multiple GPUs to deal with even bigger problem spaces.</p><p>In this section we describe LaGO (Large Graph Observer), an implementation of our methods and give examples of data sets visualized using the tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">LaGO</head><p>LaGO provides zoom and pan operations to support the interactive exploration of visualized graphs. Similar to related density based approaches <ref type="bibr" target="#b18">[20,</ref><ref type="bibr" target="#b25">28]</ref> the bandwidth parameter h is bound to the viewport to support semantic zooming. For instance increasing the zoom level shrinks the viewport such that a smaller subset of the data is displayed and reduces the bandwidth (world space) to decrease the aggregation level. However, we not only shrink and expand the node clusters but also adjust the closely integrated edge aggregates.</p><p>The interactive exploration leads to large variations of the visualized density values and fixed color mapping cannot address sparse and crowded viewports equally. We therefore provide an automatic normalization of the densities with the maximal value of the current viewport. The normalized density values are in the interval [0..1] and we use them as texture coordinates such that the density to color mapping can be defined with free choosable color schemes.</p><p>The automatic normalization is convenient, however in some cases more control may be desirable for instance to maintain a consistent color mapping during pan operations. We therefore provide an interface for manual fine control that can be used to lock the normalization devisor or to set it to a specific value. If a fixed devisor overshoots the normalization interval the system clips the results and indicates the potentially misleading color-mapping to the user by highlighting the lock symbol.</p><p>The distribution of aggregated items might be uneven and hotspots skew the normalization. We therefore provide a graphical user interface that allows the application of scaling functions to the linear normalized values. Normalization, scaling and the value to color mapping can be used in combination to filter the data and balance weak against strong visualization elements.</p><p>The described viewport control and filter mechanisms allow the exploration of large graphs at variable levels of detail. However apart from geometry and connectivity information graph datasets often contain node names. LaGO therefore provides a detail on demand implementation that allows the interactive labeling of the node density field. The hill climbing approach from the edge aggregation can be used to group the nodes according to their cluster center and provides an intuitive cluster definition for prominent areas in the visualization. The user selects a cluster by clicking onto it and the system retrieves the cluster nodes and sorts them according to their degree or a dedicated weight. Subsequently a list of the most prominent labels is displayed and the user selects labels from the list to annotate the cluster nodes <ref type="figure" target="#fig_7">(Figure 7</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Examples</head><p>US air-traffic data <ref type="figure" target="#fig_7">Figure 7</ref> shows an application of our method to the US air-traffic data set. We selected all flights in the US from July 2011 (≥ 500.000) and boiled them down to 1925 distinct connections. These connections are interpreted as undirected weighted edges to create the visualized graph. The weight of an edge is equivalent to the the number of flights on the connection and the weight of a node is the sum of the connected edge weights. The color scaling for edge and node aggregates is non linear, as can be seen on the scaling bars in the right lower corner. Furthermore the open lock, above the scaling bars, indicates that the automatic normalization of data values is active. The applied color scheme focusses on strong edges, while small edges are attenuated by transparency. The prominent flight hubs (Atlanta, Chicago, LA, San Francisco, East coast) appear immediately and strong connections like LA ⇔ San Francisco are marked by color and width. When zooming in (i.e. reducing the bandwidth) the aggregates split and smaller airports like San Diego in the LA area or Sacramento near San Francisco appear <ref type="figure" target="#fig_8">(Figure 8</ref>). The most detailed view reveals finally the three different airports of the San Francisco Bay Area and their individual connections to LA, which sum up to approximately one percent of all flights in July 2011. In contrast to the edge density visualization of Lampe and Hauser <ref type="bibr" target="#b18">[20]</ref>, the integration of nodes has the advantage that airports and their relative importance can be clearly spotted in our visualization and edge crossings with high densities cannot be misinterpreted as airports. <ref type="figure" target="#fig_6">Figure 9</ref> and figure 10 visualize US migration data. The first data set is commonly used to depict the effects of edge bundling algorithms (e.g. <ref type="bibr" target="#b15">[17]</ref>) and consists of 9,780 unweighted edges. In contrast the second data set is much larger with 545,882 weighted edges and 3075 nodes. It is based on the Census 2000 and contains all county-tocounty migration flows in the United States between 1995 and 2000 <ref type="bibr">[27]</ref>. <ref type="figure" target="#fig_6">Figure 9</ref> shows strong migration flows at the East Coast and in the South West of the United States. Moreover there are strong connections near big cities like Chicago, Denver, Atlanta and Housten. While these patterns get also highlighted in most edge bundling visualizations there remain interesting differences. The presented approach aggregates edges solely based on their start and end points and near parallel edges are therefore often not aggregated. For instance the East to West pattern which is strongly highlighted in bundling approaches like FDEB <ref type="bibr" target="#b13">[15]</ref> and Winding Roads <ref type="bibr" target="#b17">[19]</ref> is less obvious in our visualization. However the clear mapping between aggregates and their start and end clusters makes it easier to verify actual connections like New York ⇔ Florida. The second migration data set ( <ref type="figure" target="#fig_9">Figure  10</ref>) has been rendered with edge weights equal to the number of total movements between the different counties. Interestingly the weights emphasize short cluster connections like those near Los Angeles, Dallas and Boston. One explanation for these patterns could be a tendency towards local movements. For instance nine of the top ten connections are between neighboring counties. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>US migration data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Net 50 data</head><p>To enable a visual comparison with MINGLE; we applied our visualization to the Net50 data set <ref type="figure">(Figure 11</ref>). Our method reveals that the half-ring on the right side (I) connects homogeneously to cluster II. No significant connection from the upper part of the half-ring (I) connects to the lower part of the cluster and apart from one outlier all connections end on the right side of cluster II. The cluster itself has two highly interconnected peaks that seem to be the end points for most of the connections from the rectangular cluster (III). Within cluster III the connections reveal a cross pattern, the edges entering from the right side are connected to the left half of the field and vice versa. Additionally, the small outer clusters on the right side of the half-ring (I) are not equally distributed and the main connections go to the half-ring (I) and not to other parts of the graph. The described patterns are harder to read from the MINGLE visualization <ref type="bibr" target="#b10">[12]</ref> because the x-shaped edge aggregates hinder tracking of connections and pure bundling cannot sufficiently reduce the complexity of dense edge clusters. For instance the homogenous characteristics of the half ring cannot be spotted and cluster II appears as crowded heat balls in the visualization.    <ref type="figure">Fig. 11</ref>. The Net 50 data set with the color scheme provided bottom left. The visualization reveals several interesting properties of the dataset. For instance the homogeneously structure of the connection from the half-ring (I) to cluster II, the edge cross patterns in cluster III or the two highly interconnected central peaks in cluster II. <ref type="figure" target="#fig_1">Figure 12</ref> shows a random graph with 200,000 nodes and 100,000 edges which is similar to an example given in Hurter et.al. <ref type="bibr" target="#b15">[17]</ref>. Two snapshots are given for smaller (left) and larger (right) KDE bandwidth. It can be seen, that in both aggregation levels no obvious pattern occur. Since the graph is random and reflects a quasi-equal distribution, <ref type="figure" target="#fig_1">Fig. 12</ref> can be seen as a valid representation which avoids false positive graph patterns. The graph is also an extreme case for our method as its nodes are nearly equally distributed over the canvas. This reduces rendering speed, because nearly every node occupies an own pixel and therefore becomes a seed point for a KDE texture (see Section 4 and <ref type="table" target="#tab_0">Table 1</ref>). <ref type="figure" target="#fig_1">Fig. 12</ref>. A random graph with 200,000 nodes and 100,000 edges (similar to the example in <ref type="bibr" target="#b15">[17]</ref> ). While bandwidth h is increased no patterns occur; an effect wanted to avoid false positive patterns. <ref type="figure" target="#fig_2">Figure 13</ref> visualizes the Europe point dataset that has been extracted from OpenStreetMap. The data contains one node for each tagged building in Europe, a total of 37.6 million distinct nodes. The discussed improvements of the node rendering approach allow the interactive exploration of this dataset even on a low end consumer graphics card (ATI HD5770).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Random data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>OpenStreetMap data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION &amp; FUTURE WORK</head><p>We have presented an new approach that integrates node density aggregation and meta edge generation for the visualization of large graphs at different levels of detail. The methods are optimized for fast processing in OpenGL to allow interactive rates when using common graphics hardware. We showed that by using a two-pass rendering method, node aggregation can be accelerated without significant memory cost. The edge aggregation on top of the node density field and the proposed methods for post-processing allow fast rendering of implicit edge aggregates with the look of explicit meta edges.</p><p>The methods are implemented in a software tool that is used for applying our approach to large datasets . The tool allows panning and zooming at interactive rates and is highly configurable w.r.t color mapping and normalization scaling functions.</p><p>For future work, we plan to investigate if for a given zoom level a best kernel size can be estimated dynamically. Therefore we want to conduct a user study to evaluate what will be a best visualization for different zoom levels. We furthermore plan to release a free version of the described software tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Europe</head><p>Arc de Triomphe <ref type="figure" target="#fig_2">Fig. 13</ref>. Interactive zoom into the Europe dataset with 37.6 million nodes that represent all tagged buildings from OpenStreetMap. The highest aggregation level shows interesting data quantity differences at state borders. Zooming into Arc de Triomphe area reveals scenic and architectural patterns (e.g. street structure). <ref type="figure" target="#fig_3">Fig. 14</ref>. Wiki-Vote data set laid out with an MDS algorithm. Note that our rendering reveals a prominent bipartite core rather than producing the usual clutter in the center of a small-world graph.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>•</head><label></label><figDesc>all authors are with University of Konstanz; E-mail: &lt;surname.name&gt;@uni-konstanz.de. Manuscript received 31 March 2012; accepted 1 August 2012; posted online 14 October 2012; mailed on 5 October 2012. For information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Rendering KDE kernel textures for points in a dataset to create a continuous density field. a) the direct approach: place a texture for each point; b) use a pre-calculated Point Region Quadtree to bin points; c) the Seed Point method uses a two-pass rendering to first accumulate points per pixel and secondly uses a geometry shader to render parametrized kernel textures.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>The hill climbing method is shown as a lateral cut of a height field (our interpretation of the node density). The original edge points (indicated in black at the bottom of the figure) are translated to the nearest hilltops (blue). The edges cumulate to aggregates (orange) which connect the cluster centers (hilltops).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Euclidean and Pseudo Euclidean distance functions used for widening edges. The aimed line width in the given example is two, i.e. width(value(red pixel )) = 2. For the symmetric Euclidean distance the left and right pixels are colored (they have distance 1). For the Pseudo Euclidean distance only the left pixel is colored, the right pixel has distance 2 and fails the selection criterion 2 ≤ 2 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>(a) Edge crossings become hotspots and distort the coloring and edge widening. (b) Angle separated rendering removes the artifacts, (c) color scaling and edge widths assignment is corrected.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>US migration data set of recent publications visualized in LaGO.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>US air traffic data set. The node aggregation highlights important flight hubs, while edge aggregation shows e.g. a dense connection between Los Angeles and San Francisco. A click in the Miami area (low right) highlights important nodes and a label list on the top left. From the list the user can choose interesting labels, that are placed within the visualization. The color mapping scale is shown on the bottom right.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Semantic zoom into the San Francisco Bay Area. The leftmost picture displays a high aggregation level where all airports in the region around San Francisco and LA get merged. Zooming in reveals smaller nearby airports like Sancramento and San Diego however the main connection remains between the two big cities. The rightmost picture shows finally the three Bay Area airports and their individual connections.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>US census data set with 545,882 weighted edges depicting the county-to-county migration flow between 1995 and 2000. A zoomed perspective (right lower corner) shows connections between single counties while the overview aggregates nearby clusters and allows the observation of higher level patterns like the connection between New York and Florida.I II III</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Algorithm 1</head><label>1</label><figDesc>Hill climbing in image space Require: texture t AF of the Accumulation Field for all pixel positions p ∈ t AF do p temp ← p if value(p temp ) = 0 then run ← true while run do K ← 3x3 neighborhood of p temp p max ← pixel position in K with highest value if p max = p temp then p temp ← p max</figDesc><table><row><cell>else</cell></row><row><cell>run ← f alse</cell></row><row><cell>end if</cell></row><row><cell>end while</cell></row><row><cell>end if</cell></row><row><cell>assign p temp as hilltop to p</cell></row><row><cell>end for</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Rendering times in seconds. The marked columns (*) have been reported in<ref type="bibr" target="#b10">[12]</ref> (CPU approach) and in<ref type="bibr" target="#b15">[17]</ref> (GPU GTX 580). The remaining columns measure the average GPU time to create an overview of the whole graph (left) for 32px and 128px kernel size. The worst rendering times found by manual inspection are given at the right columns. Resolution is 1500x750 pixel.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>description</cell><cell></cell><cell></cell><cell>overview</cell><cell>bad case</cell></row><row><cell></cell><cell></cell><cell cols="2">dataset</cell><cell cols="2">source</cell><cell>#nodes</cell><cell>#edges</cell><cell cols="3">MINGLE* KDEEB* 32px 128px 32px 128px</cell></row><row><cell></cell><cell></cell><cell cols="2">US air-traffic</cell><cell></cell><cell>[3]</cell><cell>275</cell><cell>1,925</cell><cell>0.1</cell><cell>0.5</cell><cell>0.3</cell><cell>0.3</cell><cell>0.3</cell><cell>0.3</cell></row><row><cell></cell><cell></cell><cell cols="2">US migration</cell><cell></cell><cell>/</cell><cell>1702</cell><cell>9780</cell><cell>1.0</cell><cell>1.5</cell><cell>0.2</cell><cell>0.3</cell><cell>0.4</cell><cell>0.4</cell></row><row><cell></cell><cell></cell><cell cols="2">Wiki-Vote</cell><cell></cell><cell>[2]</cell><cell>8,436</cell><cell>103,660</cell><cell>18.4</cell><cell>/</cell><cell>0.3</cell><cell>0.4</cell><cell>0.3</cell><cell>0.5</cell></row><row><cell></cell><cell></cell><cell cols="2">random graph</cell><cell></cell><cell>/</cell><cell>200,000</cell><cell>100,000</cell><cell>/</cell><cell>18.0</cell><cell>0.4</cell><cell>2.2</cell><cell>0.4</cell><cell>2.2</cell></row><row><cell></cell><cell></cell><cell>net50</cell><cell></cell><cell></cell><cell>[2]</cell><cell>16,320</cell><cell>464,440</cell><cell>87.1</cell><cell>/</cell><cell>0.4</cell><cell>0.4</cell><cell>0.4</cell><cell>0.4</cell></row><row><cell></cell><cell></cell><cell cols="2">US census</cell><cell></cell><cell>[27]</cell><cell>3075</cell><cell>545,882</cell><cell>/</cell><cell>/</cell><cell>0.5</cell><cell>0.5</cell><cell>0.6</cell><cell>0.6</cell></row><row><cell></cell><cell></cell><cell cols="2">net150</cell><cell></cell><cell>[2]</cell><cell cols="2">43,517 1,538,840</cell><cell>355.0</cell><cell>/</cell><cell>0.4</cell><cell>0.4</cell><cell>0.7</cell><cell>0.8</cell></row><row><cell></cell><cell></cell><cell>4.5M</cell><cell></cell><cell></cell><cell>/</cell><cell cols="2">99,965 4,551,564</cell><cell>/</cell><cell>/</cell><cell>1.2</cell><cell>1.2</cell><cell>2.1</cell><cell>2.5</cell></row><row><cell></cell><cell></cell><cell cols="2">Europe</cell><cell></cell><cell>[1]</cell><cell>37,612,093</cell><cell>/</cell><cell>/</cell><cell>/</cell><cell>0.2</cell><cell>0.5</cell><cell>0.4</cell><cell>2.4</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="3">edgetdependence edgetdependence</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">1000</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>net150</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>net50</cell><cell></cell><cell></cell><cell></cell></row><row><cell>timetintseconds</cell><cell>10 100</cell><cell>UStairtraffic</cell><cell>UStmigration</cell><cell>randomtgraph</cell><cell>Wiki-Vote</cell><cell></cell><cell>MINGLE KDEEB LaGO</cell><cell></cell><cell></cell></row><row><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>0.1</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">1eh03</cell><cell>1eh04</cell><cell></cell><cell>1eh05</cell><cell>1eh06</cell><cell>1eh07</cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">numbertoftedges</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We thank Arlind Nocaj, Mirza Klimenta, and Christophe Hurter for support with data sets. This work has been funded in part by Deutsche Forschungsgemeinschaft (DFG) under grant GK-1042, Explorative Analysis and Visualization of Large Information Spaces, Konstanz.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://openstreetmap.de/" />
		<title level="m">Openstreetmap</title>
		<imprint>
			<date type="published" when="2011-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Us</surname></persName>
		</author>
		<ptr target="http://www.transtats.bts.gov/" />
		<imprint>
			<date type="published" when="2012-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">ASK-GraphView: A large scale graph visualization system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Abello</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Krishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="669" to="676" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Visualizing network data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Wilks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="16" to="28" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">User interaction with scatterplots on small screens -a comparative evaluation of geometric-semantic zoom and fisheye distortion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Buering</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gerken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Reiterer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="829" to="836" />
			<date type="published" when="2006-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Facetatlas: Multifaceted visualization for rich text corpora. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gotz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1172" to="1181" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Scatterplot matrix techniques for large n</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">B</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Littlefield</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">L</forename><surname>Nicholson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Littlefield</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">82</biblScope>
			<biblScope unit="issue">398</biblScope>
			<biblScope unit="page" from="424" to="436" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Geometry-based edge clustering for graph visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">C</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1277" to="1284" />
			<date type="published" when="2008-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Confluent drawings: Visualizing non-planar diagrams in a planar way</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dickerson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Goodrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Meng</surname></persName>
		</author>
		<idno type="DOI">2004.10.1007/978-3-540-24595-71</idno>
	</analytic>
	<monogr>
		<title level="m">Graph Drawing</title>
		<editor>G. Liotta</editor>
		<meeting><address><addrLine>Berlin / Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">2912</biblScope>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Skeletonbased edge bundling for graph visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hurter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Cantareiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2364" to="2373" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Multilevel agglomerative edge bundling for visualizing large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Scheidegger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2011 IEEE Pacific Visualization Symposium, PACIFICVIS &apos;11</title>
		<meeting>the 2011 IEEE Pacific Visualization Symposium, PACIFICVIS &apos;11<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="187" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Topological fisheye views for visualizing large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="457" to="468" />
			<date type="published" when="2005-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Hierarchical edge bundles: Visualization of adjacency relations in hierarchical data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Force-directed edge bundling for graph visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="983" to="990" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Efficient and high quality force-directed graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">F</forename><surname>Hu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Mathematica Journal</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="37" to="71" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Graph bundling by kernel density estimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hurter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="865" to="874" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Dayal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Janetzko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Bak</surname></persName>
		</author>
		<title level="m">Generalized scatter plots. Information Visualization</title>
		<imprint>
			<date type="published" when="2010-12" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="301" to="311" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Winding roads: Routing edges into bundles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lambert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bourqui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="853" to="862" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Interactive visualization of streaming data with kernel density estimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">D</forename><surname>Lampe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Pacific Visualization Symp. (PacificVis)</title>
		<meeting>IEEE Pacific Visualization Symp. (PacificVis)</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Flow Map Layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Phan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yeh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Winograd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2005 IEEE Symposium on Information Visualization, 0:29+</title>
		<meeting>the 2005 IEEE Symposium on Information Visualization, 0:29+</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">FADE: Graph Drawing, Clustering, and Visual Abstraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Quigley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GD &apos;00: Proceedings of the 8th International Symposium on Graph Drawing</title>
		<meeting><address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="197" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The quadtree and related hierarchical data structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="187" to="260" />
			<date type="published" when="1984-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Graphical fisheye views of graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI conference on Human factors in computing systems, CHI &apos;92</title>
		<meeting>the SIGCHI conference on Human factors in computing systems, CHI &apos;92<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="83" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Density estimation for statistics and data analysis. Monographs on statistics and applied probability</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Silverman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<publisher>Chapman and Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Image-based edge bundles: Simplified visualization of large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
		<ptr target="http://www.census.gov/population/www/cen2000/ctytoctyflow/" />
	</analytic>
	<monogr>
		<title level="m">County-to-county migration flow files</title>
		<meeting><address><addrLine>U.S. Census Bureau.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010-06" />
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="843" to="852" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Graphsplatting: Visualizing graphs as continuous fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Liere</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>De Leeuw</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="206" to="212" />
			<date type="published" when="2003-04" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
