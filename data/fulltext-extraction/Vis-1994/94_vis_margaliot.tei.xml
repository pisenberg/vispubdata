<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Piecewise-Linear Surface Approximation From Noisy Scattered Samples</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Margaliot</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Dept. of Electrical Engineering Technion -Israel Institute of Technology</orgName>
								<address>
									<postCode>32000</postCode>
									<settlement>Haifa</settlement>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Piecewise-Linear Surface Approximation From Noisy Scattered Samples</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We consider the problem of approximating a smooth surface f (E , y), based on n scattered samples { (E ; , yj, zj)y=l} where the sample values {zi} are contaminated with noise: z; = f(xi, yi) + Q. We present an algorithm that generates a PLS (Piecewise Linear Surface) f&apos;, defined on a triangulation of the sample locations V = {(zi, ~i) ? =~} , approximating f well. Constructing the PLS involves specifying both the triangulation of V and the values off&apos; at the points of V. We demonstrate that even when the sampling process is not noisy, a better approzimation for f is obtained using our algorithm, compared to existing methods. This algorithm is useful for D T M (Digital Terrain Map) manipulation by polygon-based graphics engines for visualization applications.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Let f(z,y) be a smooth surface. <ref type="bibr">Assume</ref>  This problem arises in the reconstruction of terrain surfaces from random DTM's (Digital Terrain Models) extracted by automatic methods, such as matching stereo image pairs (see the many articles on this subject in <ref type="bibr">[l]</ref>). These modern methods obtain terrain</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Craig Gotsman</head><p>Dept. of Computer Science Technion -Israel Institute of Technology Haifa 32000, Israel elevation samples wherever possible, usually at feature points, resulting in a data set consisting of points at essentially random locations in the plane. This contrasts with the traditional manual DTM extraction procedures, where elevation samples are obtained on a regular grid, or at significantly correlated locations in the plane.. Both manual and automatic DTM extraction methods are inaccurate, so noise is inevitably introduced into the elevation samples. We choose to reconstruct the terrain as a PLS, namely, a collection of triangles, as these are standard geometric primitives in modern graphics engine hardware. Terrain visualization with texture-mapped aerial imagery are popular graphics applications in visual simulation environments <ref type="bibr" target="#b1">[2]</ref>. Two issues must be addressed:</p><p>The PLS f' is a collection of triangles in 3D space.</p><p>The topology of the triangulation is identical to the topology of the specific planar triangulation of V used. As there are an exponential (in n ) number of different triangulations of V , each resulting in a different PLS f', it is not obvious which is the best for our solution.</p><p>0 The values zi = f'(zi,yi) at the PLS vertices.</p><p>Since the data is noisy anyway, they do not neccesarily have to coincide with the sampled z;. h a n y researchers have dealt with variants of the optimal surface triangulation problem in the non-noisy case (U = 0). In its most pure form, given an explicit function f(z, y), and a tolerance d, approximate f by a PLS f' with a minimal number of triangles, such that the lp distance between f and f', defined as is no larger than d. <ref type="bibr">Nadler [9]</ref> studied the connection between the the second derivatives of f at a point and the optimal shape of a triangle in that vicinity with respect to the 12 distance. In both cases mentioned above, the objective is clear: the PLS f' should approximate the explicitly given f or its dense sample as closely as possible. Our working point, for which the objective is not as clear, is to triangulate an already sparse sample set of locations V , without removing or adding points. The problem is ill-posed since, theoretically, we have no reason to prefer one triangulation over another. However, we try to minimize some "smoothness" measure, with the hope that since the "true" (but unknown) f was probably smooth, a smoother PLS has a better chance of approximating it well. <ref type="bibr">Rippa [14]</ref> showed that the standard Delaunay triangulation ([lo], Chap. 5) of V, which has many nice mathematical properties, yields suboptimal results in many cases and that long thin triangles (which the Delaunay triangulation avoids) are sometimes good for linear interpolation, contrary to common belief. Dyn et al.</p><p>[5] suggested a method for the iterative improvement of an initial triangulation, using an edge-swapping technique due to Lawson 171, minimizing a cost function measuring function than the one obtained when constraining the PLS vertices. For a PLS f', define its "cost" C(f') as</p><formula xml:id="formula_0">W O = I(f'&gt; + W f ' )<label>(3)</label></formula><p>where I(f') measures the inaccuracy of the fit off' to the sampled data, R(f') measures the "roughness" of f', and X is a weighting factor. The best PLS is the f' minimizing C. This approach is standard for smoothing splines <ref type="bibr" target="#b15">[16]</ref>. For example, in the one-dimensional case, g E C2[0, 11, I is taken to be</p><formula xml:id="formula_1">. n</formula><p>and R is</p><formula xml:id="formula_2">R(g) = 1' g"(x)'dt J O</formula><p>which is an approximation for the .average curvature of the surface. In the case of a PLS, which is twodimensional and possesses noncontinuous derivatives, an expression similar to I is still applicable, but a discrete analog to R must be found. Once the cost function is well defined, an efficient procedure to determine the PLS minimizing it must be described. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">The Cost Function</head><p>What type of PLS is considered "good ? In classic approximation theory, a common answer is: a good surface is one that passes close to the sampled data and is smooth (implicitly we assume that the original sampled function was smooth). Towards this end, we define the following "cost" C(f') of a PLS candidate f'. Given the sample set</p><formula xml:id="formula_3">{(zi,yi, Z i ) r = i } C(f') = W') + X W ' ) I(.Y&gt; = -f ' (~i , Yi&gt;&gt;2</formula><p>the "roughness" of the PLS. All the works mentioned above (except <ref type="bibr" target="#b11">[12]</ref>) deal only with the case of accurate (non-noisy) samples. We extend the procedure of Dyn et. a1 to deal with noisy samples. Additionally, even for the case of accurate samples, we demonstrate that results superior to theirs may be achieved by using our algorithm: not constraining f'(zi,yi) = f(z,,yi) enables the algorithm to reach a better local minimum of the cost for every edge e which is a diagonal of a convex quadrilateral of T, replace e by the other diagonal of the quadrilateral (replacing the two triangles by two others) if this improves the resulting PLS (see <ref type="figure">Fig. 2)</ref>.</p><p>It is not obvious that this algorithm converges.</p><p>However, we have found in all our experiments that this is indeed the case, requiring 6 iterations on the average. We do not know achieved is global.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Determining the "Optimal" A</head><p>The output of our algorithm obviously depends on the value of X used. A large X causes the surface to be smooth, while a small X forces the f'(zi, yi) to be close to zi, strongly constraining the solution. An important practical question is how to determine the optimal value of X so that the resulting PLS f ' will indeed be a good approximation of the original (unknown) surface f (z , y) . Define where zf(X) are the values of the PLS f ' ( z i , y i ) produced by our algorithm when applied with parameter A. If zi were indeed the "true" values f (zi, yj), then e2(X) would be a good estimate of the sample error variance, which we know to be 6'. The optimal X should then be Xopt = arg min H ( X ) , H ( X ) = le2(X) -2 1 . (7)</p><p>An approach similar to this was proposed by Reinsch <ref type="bibr" target="#b12">[13]</ref> in the context of C2 smoothing splines. Finding this A, t requires a search procedure that applies the PLS construction algorithm for different values of A, calculates H ( A) and re-estimates A accordingly. for each input data set wf: constructed three PLS's.</p><p>The first obtained using zi = z; and T = the Delaunay triangulation (,refered to as the Delaunay PLS).</p><p>The second with zi = zi and T = the triangulation obtained by applying the LOP procedure on the Delaunay triangulation as suggested in <ref type="bibr" target="#b4">[5]</ref> (refered to as the LOP PLS). The third is the final PLS obtained using our algorithm (refered to as the Optimal PLS).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experimental Results</head><p>We tested our algorithm on one set of real DTM data and samples of two different "synthetic" test functions f : [0, 112 + R. For the DTM, we started with a set <ref type="figure">{(z;, yj, zj,j)</ref>}~,~=l of 100 x 100 data points on a regular grid in the Dead Sea area <ref type="figure" target="#fig_5">(Fig. 3(a)</ref>). We randomly selected 100 points from this set and added to them Gaussian noise with U = 15m. These 100 samples, and a chosen A, served as input to our algorithm, producing a PLS f' as output. To estimate the PLS quality we calculated the 11 distance Ilff'lll, as in <ref type="bibr" target="#b1">(2)</ref>. The two test functions were taken from <ref type="bibr" target="#b4">[5]</ref>, who adopted them from <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b7">[8]</ref>:</p><formula xml:id="formula_4">I 3 (9z -2)2 + (9y -2)2 Fl(z) = zexp [- 4 ( 9~+ 1 )~ 49 9~+ 1 1 10 + zexp 3 [---- I 1 (92 -7)2 + (9y -3)2 + Texp [- 4 1 -exp[-(9z -4)' -(9y -7)'] 5 - F8(1) = tanh(-3g(z, y)) + 1</formula><p>where:</p><formula xml:id="formula_5">g(z, y) = 0.595576(9 + 3.79762)' -z -10</formula><p>The function F1 is composed of two Gaussian peaks and a sharp Gaussian dip <ref type="figure" target="#fig_5">(Fig. 3(c)</ref>). The function F8 simulates a sharp rise, whose contour lines are the parabolas g(z, y) = const <ref type="figure" target="#fig_5">(Fig. 3(b)</ref>). Each of the functions was sampled on 100 random points distributed uniformly in [0,1]' and contaminated with Gaussian noise of variance U'. These samples, and a chosen A , served as input to our algorithm. Again, the performance of the algorithm was measured by the 11 distance (1). In practice, this integral was computed numerically by Monte-Carlo integration. Note that this can be computed only for synthetically generated samples, such as ours, where f is available. To evaluate our results, and contrast them with those of [5],</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Accurate Data</head><p>Although our algorithm was designed primarily for noisy sample sets, we applied it also on relatively accurate (very small U ) samples of Fl and F8. With this type of input, the LOP procedure on the Delaunay triangulation seems to always improve the PLS, so it is advantageous to swap the steps of our algorithm, such that the first step improves the triangulation, and the second the PLS values at the triangulation vertices. <ref type="figure" target="#fig_7">Fig. 5</ref> demonstrates that when U = 0, although the LOP PLS reduces the distance by 48% relative to the Delaunay PLS (as has been shown already in <ref type="bibr" target="#b4">[5]</ref>), allowing the sample values to move by applying our algorithm with a small value of A, results in a PLS with distance further improved by another 58% (relative to the LOP PLS). This is especially true for functions with a clear prefered direction, such as F8, as the extra freedom allows the triangulation to align itself in this prefered direction. For F1, as demonstrated by <ref type="figure">Fig. 7</ref>, there is no significant improvement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Noisy Data</head><p>The main benefit of our algorithm was in the case of relatively noisy data (approximately 10% error in the elevation values). <ref type="figure" target="#fig_6">Fig. 4</ref> shows our results on the DTM data, and Figs. 8 and 6 show our results on Fl and F8. These are for the optimal values of X, found experiment ally.</p><p>The results of our procedure on the noisy DTM data were not as good as those obtained for the noisy synthetic data. This is probably due to the fact that the original terrain surface is not very smooth, and there are no significant prefered directions.</p><p>For Fl and F8, the LOP PLS is not an improvement over the Delaunay PLS (for F1 it is even worse). In contrast, the optimal PLS produced by our algorithm reduces the distance relative to the Delaunay PLS by 15% and 23% respectively.</p><p>In all cases, the optimal value of X seems to be a little smaller than that predicted by <ref type="bibr" target="#b6">(7)</ref>, as was also observed by Craven <ref type="bibr" target="#b2">[3]</ref> in the case of C2 smoothing splines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Summary and Conclusions</head><p>We have presented an algorithm generating a good piecewise-linear approximation of a surface over some triangulation from noisy samples. The algorithm produces the best results in one of the following cases:</p><p>1. The sampled function has a clear prefered direction (like Fg): It seems that the flexibility in the PLS values at the triangulation vertices enables the LOP to perform more edge swaps than when the heights are constrained to fixed values. These additional swaps improve the PLS. This is true even when there is no noise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head><p>The noise is significant: The first LOP damages the PLS quality because this procedure is very sensitive to the sample values, which are very inaccurate. Using our algorithm when first adjusting the PLS heights reduces some of the noise. enabling the LOP to perform better.</p><p>There are a few possible variations on our algorithm, including the type of metric used to measure the distance, the traversal order of the PLS vertices during the first step of the algorithm and the traversal order of PLS convex quadrilaterals during the second step of the algorithm. The exact threshold of Q before which the samples are considered relatively accurate, therefore beneficial to reverse the order of the algorithm steps, is not yet clear.     distance = .071). (e)-(f) Optimal PLS at X = .01 (I1 distance = .055).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>we are given n noisy samples { ( Z i , yj, ~i ) ? =~} of f at scattered locations V = { (~; , y ; ) r =~} , such that z; = f(zj , y;) +ti, where t; are independent identically distributed zero-mean Gaussian random variables with known variance u2. We wish to construct a PLS (Piecewise Linear Surface), sometimes called a TIN (Triangulated Iregular Network), f', defined on some triangulation of V . The PLS f' should approximate the original surface f ( z , y ) as closely as possible, i.e. the distance IIff'll should be minimal, for some norm 11. 11.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>The rest of this paper is organized as follows: Section 2 elaborates on the cost function C , Section 3 describes the optimization procedure minimizing C and Section 4 deals with determining the scalar parameter X present in C. The results of numerical experiments are reported in Section 5. In Section 6 we summarize and conclude.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>A</head><label></label><figDesc>measures the infidelity of the PLS fit to the sampled data, and R ( f ' ) is a measure of the PLS roughness, defined as follows: Let t l = {pl,p2,p3} and t2 = {p2,p3,p4} be two triangles of the PLS f ' , with common edge pzp3 (seeFig. 1). Let ni be the vector normal to t i , i = 1,2. ,and A B N ( e ) of edge e = pzp3 be the Angle Between the Normals nl and n2. Then R(f') = e ) may be thought of as an estimate of the discrete curvature of the surface f' at that edge. The relative importance of the two components of the cost function is controlled by the positive scalar parameter A. For X = 0, the infidelity of the PLS f ' to the sampled data dominates, so any PLS with f'(zi,yi) = zi minimizes C. For very large A, the roughness of the surface dominates, so any constant-valued PLS minimizes C.P2 &amp; P4where &amp;={the edges of f' incident on (zi,yj)} and f'(zi,yi) = zi. Note that the second term of h(z) implicitly depends on z . The z minimizing the onedimensional function h ( t ) may be found by standard numerical optimization procedures. We used the simple golden section method ([ll], Chap. 10). It is easy to see that assigning this value to zf improves the PLS.To improve the triangulation of V , we use the same LOP (Lawson Optimization Procedure) used in [5]:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>P1PlFigure 1 :</head><label>1</label><figDesc>Two triangles of a PLS and their normals.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 :( 2 )A</head><label>22</label><figDesc>Swapping edges in 3 The Optimization Algorithm Our algorithm generates an initial PLS and iteratively improves it. The PLS f2 is an improvement of PLS fi if C ( f 2 ) &lt; C(f1). The input to the algorithm is {(zi, yi, Z~) Y =~} -the set of data samples, and Xthe smoothing parameter. The output of the algorithm is Ta triangulation of V = {(z,, Y~)Y=~}, and {(z&amp;} -the values of the PLS at the points of V . An outline of the algorithm is : Generate an initial PLS. Repeat (I) Improve the PLS values at points of V (keeping the triangulation f ixed) . Improve the triangulation of V (keeping the PLS values at V fixed) .Until (there is no change in the PLS)The initial PLS f' is T = the Delaunay triangulation of V , and z: = zi,i = 1 ,..,la. To improve the PLS values at the set of vertices V , we systematically scan the vertices and set zi to be the z minimizing h ( z ) = ( t iz )~ -t A</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>"Figure 3 :</head><label>3</label><figDesc>Test cases: (a) DTM. (b) Fs. (c) F l .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>PLS's on a 100-point sample of DTM data (Fig. 3(a)) with n = 15m: (a)-(b) Delaunay PLS (11 distance = 13.3). (c)-(d) LOP PLS (I1 distance = 14.0). (e)-(f) Optimal PLS at X = 150 ( I 1 distance = 12.8).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :</head><label>5</label><figDesc>PLS's on a 100-point sample of F8 with U = 0: (a)-(b) Delaunay PLS (11 distance = ,050). (c)-(d) LOP PLS ( I 1 distance = ,026). (e)-(f) Optimal PLS at X = .005 (11 distance = ,011).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>PLS's on a 100-point sample of F8 with U = . l : (a)-(b) Delaunay PLS (I1 distance = .098). (c)-(d) LOP PLS ( I 1 distance = .097). (e)-(f) Optimal PLS at X = .01 (11 distance = ,075).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :Figure 8 :</head><label>78</label><figDesc>PLS's on a 100-point sample of Fl with U = 0: (a)-(b) Delaunay PLS ( I 1 distance = ,019). (c)-(d) LOP PLS ( I 1 distance = ,017). (e)-(f) Optimal PLS at X = .0001 ( I 1 distance = .017). PLS's on a 100-point sample of F1 with U = .l: (a)-(b) Delaunay PLS ( I 1 distance = .065). (c)-(d) LOP PLS ( I 1</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The second author wishes to thank Nira Dyn and David Levin for helpful discussions on the subject of the paper. The DTM data used in our experiments was produced and kindly made available by John Hall of the Israel Geological Survey.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Special issue on softcopy photogrammetric workstations. Photogrammetric Engineering and Remote Sensing</title>
		<imprint>
			<date type="published" when="1992-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Photorealistic terrain imaging and flight simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="10" to="12" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Smoothing noisy data with spline functions: Estimating the correct degree of smoothing by the method of generalized cross validation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Craven</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wahba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerische Mathematik</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="377" to="403" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Optimal triangular mesh generation by coordinate transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">F</forename><surname>D'azevedo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Sci. Stat. Comput</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="755" to="786" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Data dependent triangulations for piecewise linear interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dyn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rippa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IMA Journal of Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="137" to="154" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Scattered data interpolation: Tests of some methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Computation</title>
		<imprint>
			<biblScope unit="page" from="38" to="181" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Transforming triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Lawson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Math</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="365" to="372" />
			<date type="published" when="1972" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Knot removal for para-Computer metric B-spline curves and surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lyche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Morken</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="217" to="230" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Piecewise linear best 12 approximation on triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Nadler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Approximation Theory V</title>
		<editor>C.K. Chui, L.L. Schumaker, and J.D. Ward</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1986" />
			<biblScope unit="page" from="499" to="502" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Computational Geometry: A n Introduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Preparata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Shamos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<title level="m">Numerical Recipes in C (Second Edition)</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Least squares fitting by linear splines on data dependent triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Quak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">L</forename><surname>Schumaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Curves and Surfaces</title>
		<editor>P.J. Laurent, A. Le Mbhautb, and L.L. Schumaker</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="387" to="390" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Smoothing by spline functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Reinsch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerische Mathematik</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="177" to="183" />
			<date type="published" when="1967" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Long and thin triangles can be good for linear interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rippa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Numer. Anal</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="257" to="270" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Decimation of triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;92</title>
		<meeting>SIGGRAPH&apos;92</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Spline Models for Observational Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wahba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Society for Industrial and Applied Mathematics</title>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
