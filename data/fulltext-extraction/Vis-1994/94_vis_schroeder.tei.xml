<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Implicit Modeling of Swept Surfaces and Volumes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Corporate</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Research</forename><forename type="middle">&amp;</forename><surname>Development</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steve</forename><surname>Linthicum</surname></persName>
						</author>
						<title level="a" type="main">Implicit Modeling of Swept Surfaces and Volumes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Computational geometry</term>
					<term>object modeling</term>
					<term>geometric modeling</term>
					<term>volume modeling</term>
					<term>implicit modeling</term>
					<term>sweeping</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Swept surfaces and volumes are generated by moving a geometric model through space. Swept surfaces and volumes are important in many computer-aided design applications including geometric modeling, numerical cutter path generation, and spatial path planning. In this paper we describe a numerical algorithm to generate swept surfaces and volumes using implicit modeling techniques. The algorithm is applicable to any geometric representation for which a distance function can be computed. The algorithm also treats degenerate trajectories such as self-intersection and surface singularity. We show applications of this algorithm to maintainability design and robot path planning.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.0">Introduction</head><p>A swept volume is the space occupied by a geometric model as it travels along an arbitrary trajectory. A swept surface is the boundary of the volume. Swept surfaces and volumes play important roles in many computer-aided design applications including geometric modeling, numerical control cutter path generation, and spatial path planning.</p><p>In geometric modeling swept curves and surfaces are used to represent extrusion surfaces and surfaces of revolution [1] <ref type="bibr">[2]</ref>. More complex geometry can be generated by using higher order sweep trajectories and generating surfaces <ref type="bibr">[3]</ref>. In robot motion planning, the swept volume can be used to evaluate safe paths [4][5] or establish the footprint of a robot in a workcell. Numerical control path planning uses swept volumes to show the removal of material by a tool <ref type="bibr">[6]</ref>.</p><p>Swept surfaces and volumes can also be applied to resolve maintainability issues that arise during the design of complex mechanical systems. The designer needs to be able to create and visualize the accessibility and removability of individual components of the system. Typical questions related to maintainability include:</p><p>Can a mechanic remove the spark plugs? Is there room for an improved power supply? What is the impact on the maintenance of a system if new components are included?</p><p>In maintenance design, the swept surface of the part to be removed is called the removal envelope. The removal envelope is the surface that a component generates as it moves along a safe and feasible removal trajectory. A safe trajectory is one that a component can follow without touching other components of the system. A feasible trajectory is one that can be performed by a human. Lozano-Perez [7] calls the calculation of safe trajectories the Findpath problem. Although this trajectory may be automatically calculated, restrictions on the trajectory's degrees of freedom <ref type="bibr">[8]</ref>, or the geometry of the obstacles [9] prohibit practical application to realworld mechanical systems. The technique presented here assumes that a safe and feasible trajectory is already available. For our application, we rely on computer-assisted trajectory generation using commercial computer-aided design [ 101 or robot simulation software.</p><p>In the next section we review related work on swept volumes and implicit modeling. Then we describe the algorithm in detail along with a discus-sion of error and time complexity. Examples from maintainability and robot motion simulation illustrate the effectiveness of the algorithm in application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.0">Background</head><p>Literature from two fields: spatial path planning and implicit modeling contribute to swept volume generation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Path Planning</head><p>Weld and Leu [ 111 present a topological treatment of swept volumes. They show that the representation of a swept volume in R n generated from a n-dimensional object is reduced to developing a geometric representation for the swept volume from its (n-I )boundary. However, they point out that the boundary and interior of the swept volume are not necessarily the union of the boundary and interior of the (n-I)boundary. That is, there may exist points on the boundary of the swept volume that are interior points of the (n-1)-boundary of the swept volume. Likewise, boundary points of the object may contribute to the interior of the swept volume. This unfortunate property of swept volumes limits conventional precise geometric modeling to restricted cases. <ref type="bibr">Martin and Stephenson [12]</ref> recognize the importance of implicit surface models for envelope representation but seek to provide a closed solution. They present a theoretical basis for computing swept volumes, but note that complicated sweeps may take an unrealistic amount of computer time.</p><p>Wang and Wang [6] present a numerical solution that uses a 3D z-buffer to compute a family of critical curves from a moving solid. They restrict the generating geometry to a convex set, an appropriate restriction for their numerical control application. Other numerical techniques include sweeping octrees <ref type="bibr">[5]</ref>. Swept octrees produce very general results at the cost of the aliasing effects due to octree modeling.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Implicit Modeling</head><p>Surface models are extracted using standard iso-surface techniques such as marching cubes <ref type="bibr">[16]</ref>. If the field values are distance functions to the closest point on the model, offset surfaces can be created by choosing a non-zero iso-surface value [ 141.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.0">Algorithm</head><p>The goal of the algorithm can be described as follows. Given a geometric model and a trajectory defined by a sequence of continuous transformations, generate the swept volume, the volume occupied as the model travels along the trajectory, and the swept surface, the boundary of the swept volume.</p><p>The swept surface algorithm is implemented in three basic steps <ref type="figure">(Figure 1</ref>). 1. Generate an implicit model from the original geometric model. We use implicit techniques that assign a distance value from each voxel to the surface of the object. The geometric model may be of any representational form as long as a distance function can be computed for any point. 2. Sweep the implicit model through the workspace. The workspace is a volume constructed to strictly bound the model as it travels along the sweep trajectory. The sweeping is performed by repeatedly sampling the implicit model with the workspace volume as it is transformed along the sweep trajectory. The end result is a minimum distance value at each voxel in the workspace volume.</p><p>3. Generate the swept surface using the iso-surface extraction algorithm marching cubes. The value d of the iso-surface is a distance measure. If d = 0 , the surface is the swept surface. For d f 0 , a family of surfaces offset from the swept volume is created.</p><p>A detailed examination of each of these steps follows. Geometric representations often consist of combinations of geometric primitives such as polygons or splines. In these casesfo must be computed as the minimum distance value as follows. Given the n primitives G = <ref type="bibr">(g,,g,, ...,g,)</ref> defining the n distance values <ref type="bibr">( d l , d,, ..., d,)</ref> at point p, choose the minimum value.,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Generating the Implicit Model</head><formula xml:id="formula_0">d = f ( P ) = Min(pll, p 2 1 , .'., Id,()</formula><p>For an implicit model, the minimum is equivalent to the union of the scalar field [ 151.</p><p>The implicit model can be generated for any geometric representation for which the distance function f() can be computed. One common representation is the polygonal mesh. ThenfCp) is the minimum of the distances from p to each polygon ( <ref type="figure" target="#fig_0">Figure 2</ref>). For more complex geometry whose distance function may be expensive or too complex to compute, the model can be sampled at many points, and then the points can be used to generate the distance function.</p><p>Figures 6 and 7 illustrate the generation of an</p><formula xml:id="formula_1">d = Min(di,d2)</formula><p>\\ d1 i distance to plane istance to vertex implicit model from a polygonal mesh. <ref type="figure">Figure 6</ref> shows the original mesh consisting of 5,576 polygons. The implicit model is sampled on a volume VI at a resolution of loo3. An offset surface of the implicit model is generated using a surface value d = 0.25 in <ref type="figure">Figure 7</ref>. In this example a non-negative distance function has been used to compute the implicit model. As a result, both an outer and inner surface are generated. Any closed surface will necessarily generate two or more surfaces for some values of d if fo is non-negative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Computing the Workspace Volume</head><p>The workspace volume V , is generated by sweeping the implicit model along the sweep trajectory, and sampling the transformed implicit model. V, must be sized so that the object is strictly bounded throughout the entire sweep. One simple technique to size V , is to sweep the bounding box of the geometric model along the sweep trajectory and then compute a global bounding box. The sweep trajectory ST is generally specified as a series of transformations ST = { rl, r , , . . ., t m } . Arbitrary transformations are possible, but most applications define transformations consisting of rigid body translations and rotations. (The use of non-uniform scaling and shearing creates interesting effects.)</p><p>The implicit model travels along the sweep trajectory in a series of steps, the size of the step dictated by the allowable error (see Discussion). Since these transformations { <ref type="figure">rl, t,,</ref> . , ., rm} may be widely separated, interpolation is often required for an intermediate transformation r' . We recover positions and orientations from the provided transformations, and interpolate these recovered values.</p><p>The sampling of the implicit model is depicted in <ref type="figure">Figure 3</ref>. The values in V , are initialized to a large positive value. Then for each sampling step, each point in V , is inverse transformed into the coordi-a) Inverse transform V , b) Sample VI <ref type="figure">Figure 3</ref>. Sampling the implicit volume.</p><p>nate system of V,. The location of the point within VI is found and then its distance value is computed using tri-linear interpolation. As in the implicit model, the value of the point in V, is assigned the minimum distance. The result is the minimum distance value at each point in V , seen throughout the sweep trajectory.</p><p>An alternative workspace volume generation scheme calculates the distance function fl) directly from the transformed geometric model, eliminating the need for VI entirely. Although this can be efficient whenfo is inexpensive to compute, we have found that in our applications the performance of the algorithm is unsatisfactory. Sampling the implicit model into the transformed workspace volume improves the performance of the algorithm significantly, since the sampling is independent of the number of geometric primitives in the original model, and the cost of tri-linear interpolation is typically much smaller than the cost of evaluatingfl).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Extracting Swept Surfaces</head><p>The last step in the algorithm generates the swept surface from the workspace volume. Since V , represents a 3D sampling of distance function, the iso-surface algorithm marching cubes is used to extract the swept surface. Choosing d = 0 generates the surface of the swept volume, while d # O generates offset surfaces. In many applications choosing d &gt; 0 is desirable to generate surfaces offset from the swept volume by a certain tolerance. As with any iso-surface extraction algorithm, the surfaces often consist of large numbers of triangles. Hence we often apply a decimation algorithm [ 171 to reduce the number of triangles representing the surface.  ries or trajectories that result in surface singularities. Self-intersection occurs when the generating geometry intersects itself as it travels along the sweep trajectory. Surface singularities occur when nonvolume filling geometry is created, for example when a plane travels perpendicular to its normal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.0">Discussion</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Degenerate Trajectories</head><p>The algorithm presented here correctly treats degenerate trajectories. Conventional analytical techniques require sophisticated mathematical techniques that do not yet have general solutions. Our algorithm uses simple set operations that are immune to both types of degeneracies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Error Analysis</head><p>Due to sampling errors and differences in representation, the generated swept surface is an approximation to the actual surface. Sampling errors are introduced at three points: 1) when creating VI from the geometric model, 2) when sampling VI into the workspace volume V,, and 3) when incrementing the transformation along the sweep trajectory ST. Representation errors are due to the fact that the swept surface is a polygonal mesh, while the original representation can be combinations higher-order surfaces or even implicit functions. Here we address sampling errors only, since representational errors depend on the particular geometric representation, which is beyond the scope of this paper.</p><p>The sampling error bounds of the distance function in a 3D volume is the distance from the comer of a cube formed from eight neighboring voxels to its center <ref type="figure" target="#fig_2">(Figure 4)</ref>. Without loss of generality we can assume that the volume size is length L , and that the volume dimensions are nl,n2,n3 = D . It follows that the cube length is then LID. The maximum sampling error e at a voxel is then The error introduced by stepping along ST depends upon the nature of the transformation. Translations give rise to uniform error terms, but rotation gener-P <ref type="figure">Figure 5</ref>. Approximating stepping error.</p><p>ates variable error depending upon distance from center of rotation.The stepping error can be estimated by linearizing the transformation and assuming that the maximum positional change of any point is Ax <ref type="figure">(Figure 5.</ref>). If the actual distance value to some point p in V , is given as 2 , and the distance functions are di and di+ , at the points ti and ti+, along ST, then the maximum error occurs at Ax/2 and is given e = d i -a = d i + , -2 . Since , the error is bounded by</p><p>The value of Ax can be estimated by transforming the bounding box of the model and computing the displacement of the extreme points.</p><p>These error terms can be combined to provide an estimate to the total error:</p><p>The terms L,, L , are the lengths and D,, Dw are the dimensions of the implicit and working volumes, respectively. These terms arise when creating VI from the geometric model and when sampling VI into the workspace volume V ,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Complexity Analysis</head><p>The bulk of computation occurs when sweeping the implicit model through the workspace volume. Generating the implicit model and the final iso-surface are one-time events at the beginning and end of the algorithm.</p><p>Assuming that 8) can be computed in constant time for any point, the implicit model can be generated in time 0 (D:) . If the computation off() is proportional to the number of geometric primitives n in the model, the time complexity i : O <ref type="bibr">(n,D;)</ref>. h e complexity of sweeping is 0 ( nsDw ) where n, is the number of steps in the sweep. The final step, iso-surface extraction, is a function of the size of the working volume o(D,') .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Multiple Surface Generation</head><p>More that one connected swept surface may be created for certain combinations of geometry and isosurface value d. As described previously if f(p) 2 0 for all p , both an inner an outer surface may be generated. If the geometric model is non-convex, then multiple inside and outside surfaces may be created. There will be at least one connected outer surface, however, that will bound all other surfaces. In some applications such as spatial planning and maintainability design this result is acceptable. Other applications require a single surface.</p><p>One remedy that works in many cases is to compute a signed distance function f() where values less than zero occur inside the object. This approach will eliminate any inner surfaces when d &gt; 0 . Generally this requires some form of insiddoutside test which may be expensive for some geometric representations. Another approach to extract the single bounding surface is to use a modified form of ray casting in combination with a surface connectivity algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.0">Results</head><p>Our initial application for swept surfaces was for maintainability design. In this application the swept surface is called a removal envelope. The removal envelope graphically describes to other designers the inviolable space required for part access and removal. We have since used the swept surfaces to visualize robot motion. Three specific examples follow. The first two examples use a trajectory planned using the McDonnell Douglas Human Modeling System.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">FueVOil Heat Exchanger</head><p>The part shown in <ref type="figure">Figure 6</ref> is a fuel/oil heat exchanger used in an aircraft engine. Maintenance requirements dictate that it must be able to be replaced within 30 minutes while the aircraft is at the gate. The implicit model of the heat exchanger is shown in <ref type="figure">Figure 7</ref>. <ref type="figure">Figure 8</ref> shows the resulting swept surface. Both the implicit model and the workspace volume were generated at a resolution of loo3. The sweep trajectory contained 270 steps. The swept surface, generated with an offset of d=0.2 inch, consists of 15,108 triangles. piping that has been rerouted around the removal envelope. The figure demonstrates the small clearances typical in complex mechanical environments.</p><p>Because of tolerances in these systems, we generally choose to create offset swept surfaces. Currently we use no quantitative method to choose the offset value and rely on design experience. <ref type="figure">Figure 10</ref> shows another application of swept surfaces to maintainability design. A proposed design change to the aircraft engine pre-cooler (shown in turquoise) impacted the removal of the number 3 fuel nozzle. The removal path consists of many rotations and is self-intersecting at many points. The fuel nozzle was modeled using 6,100 polygons. The im licit model was generated at a volume total of 600 steps was taken along the sweep trajectory. The offset swept surface of 16,572 triangles was generated with a value d=0.2 inch.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Fuel Nozzle</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Robot Motion</head><p>Swept surfaces are effective tools for visualizing complex robot motion. In <ref type="figure">Figure 11</ref> the swept surfaces of the end effector, hand, wrist, and arm of the robot are shown simultaneously. Each robot part was sampled at 503. The workspace volume was sampled at loo3. The total number of triangles representing the four surfaces was 68 1,800 using a distance value d=l inch (over a workspace volume size Lw = 140 inches .)</p><p>resolution 50 E: and the workspace volume at loo3. A</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.0">Conclusion</head><p>We have demonstrated an algorithm that generates swept surfaces and volumes from any geometric representation for which a distance function can be computed. This includes such common forms as parametric surfaces, polygonal meshes, implicit representations, and constructive solid models. The algorithm treats complex trajectories including selfintersection and surface singularities. We have successfully applied the algorithm to a variety of complex applications including maintainability design and robot spatial planning.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 .</head><label>2</label><figDesc>Computing distance function fo for polygonal mesh.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Degenerate trajectories, as described byMartin  and Stephenson [ 123, </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 .</head><label>4</label><figDesc>Sampling error in 3D volume.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 9</head><label>9</label><figDesc>shows the removal envelope positioned within surrounding parts. Of particular interest is the(See color plates, page CP-4.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>R3 to the surface of the object. To develop the implicit model we compute the functionfo in a 3D volume of dimension ( n l , n,, n 3 ) . For geometric models having a closed boundary (i.e., having an inside and an outside), fo can generate a signed distance; that is, negative distance values are inside the model and positive values are outside of the model.</figDesc><table><row><cell>a) Generate implicit model</cell><cell></cell></row><row><cell>b) Sweep implicit model through</cell><cell></cell></row><row><cell>workspace volume</cell><cell></cell></row><row><cell>c) Generate swept surface via</cell><cell></cell></row><row><cell>iso-surface extraction</cell><cell></cell></row><row><cell>Figure 1. Overview of swept surface</cell><cell></cell></row><row><cell>generation.</cell><cell></cell></row><row><cell>specified distance from the point. The variation of is at a Point and to zero at a</cell><cell>n-dimensional object in R n (we Our approach is similar to Bloomenthal [15]. Any here = )</cell></row><row><cell>the fields is typically a cubic polynomial. Usually (i.e., volume) as described by Bloomenthal [15]. these are On a regu1ar</cell><cell>can be described by an implicit function f(p) where the function Jr) defines the distance of point</cell></row></table><note>- An implicit model specifies a scalar field value at This step converts the geometric model into a each point in space. A variety of field functions are pled distance function in a 3D volume of dimension available depending on the application.'Soft objects ( n l , n2, n3) . We refer to this representation as the created for computer animation [ 131 use a field that implicit model v,.p E</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">(See color plates, page CP-4.)</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Mathematical Elements for Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rogers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Adams</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>McGraw-Hill Publishing Co</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Geometric Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Mortensen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>John Wiley &amp; Sons</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A control-point-based sweeping technique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Coquillart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="36" to="45" />
			<date type="published" when="1987-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Spatial Planning: A configuration space approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lozano-Perez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Computers C</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="108" to="120" />
			<date type="published" when="1983-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">3D visual robot guidance in dynamic environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Celenk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Int&apos;l Conference on Systems Engineering</title>
		<meeting>IEEE Int&apos;l Conference on Systems Engineering</meeting>
		<imprint>
			<date type="published" when="1990-08" />
			<biblScope unit="page">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Geometric modeling for swept volume of moving solids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">P</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">K</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics andApplications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="8" to="17" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An algorithm for planning collision-free paths among polyhedral objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lozano-Perez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Wesley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comm. of the ACM</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="560" to="570" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lengyel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Reichert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">R</forename><surname>Donald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Real-time robot motion planning using rasterizing computer graphics hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="327" to="335" />
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Solving the find-path problem by good representation of free space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Brooks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man, and Cybernetics, SMC</title>
		<imprint>
			<biblScope unit="volume">132</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="190" to="197" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">McDonnell Douglas Corporation, Human Factors Technology. Version 2.1</title>
		<idno>93K0281</idno>
		<imprint>
			<date type="published" when="1993-07" />
		</imprint>
	</monogr>
	<note type="report_type">Report MDC</note>
	<note>McDonnell Douglas Human Modeling System Reference Manual</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Geometric representation of swept volumes with application to polyhedral objects. Int&apos;l</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Weld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Leu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. ofRobotics Research</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="105" to="106" />
			<date type="published" when="1990-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Sweeping of three-dimensional objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">R</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">C</forename><surname>Stephenson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="223" to="234" />
			<date type="published" when="1990-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Animating soft objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>B Wyvill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Mcpheeters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wyville</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="235" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Distance field manipulation of surface models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Payne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Toga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="65" to="71" />
			<date type="published" when="1993-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Polygonization of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bloomenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="341" to="355" />
			<date type="published" when="1988-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Marching cubes: a high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Decimation of triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="65" to="70" />
			<date type="published" when="1992-07" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
