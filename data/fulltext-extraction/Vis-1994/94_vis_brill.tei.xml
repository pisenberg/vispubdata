<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">S t reamball Techniques for Flow Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manfred</forename><surname>Brill</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Computer Science Department</orgName>
								<orgName type="department" key="dep2">Computer Science Department Institute for High Energy Physics (IHEP</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country>Germany Russia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Computer Science Department</orgName>
								<orgName type="department" key="dep2">Computer Science Department Institute for High Energy Physics (IHEP</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country>Germany Russia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Christian</forename><surname>Rodrian</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Computer Science Department</orgName>
								<orgName type="department" key="dep2">Computer Science Department Institute for High Energy Physics (IHEP</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country>Germany Russia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wladimir</forename><forename type="middle">D</forename><surname>Jatschin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Computer Science Department</orgName>
								<orgName type="department" key="dep2">Computer Science Department Institute for High Energy Physics (IHEP</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country>Germany Russia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stanislav</forename><forename type="middle">V</forename><surname>Klimenko</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Computer Science Department</orgName>
								<orgName type="department" key="dep2">Computer Science Department Institute for High Energy Physics (IHEP</orgName>
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country>Germany Russia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">S t reamball Techniques for Flow Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:30+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>W e introduce the concept of streamballs for flow visualization. Streamballs are based upon implicit surface generation techniques adopted from the well-known metaballs. Their property to split or merge automatically in areas of significant divergence or convergence makes them an ideal tool for the visualization of arbitrary complex flow fields. Using convolution surfaces generated by continuous skeletons for streamball construction oflers the possibility to visualize even tensor fields.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Streamlines and stream surfaces</head><p>Streamlines, streaklines, pathlines and timelines play an important role in flow visualization. Most of these 7 terms are directly derived from experimental flow visualization, where the corresponding phenomena are generated by inserting foreign material into the flow and e 0 0 observing it while it moves through the field.</p><p>Streaklines are produced by continuously injecting material like smoke or little hydrogen bubbles into the flow at certain points and watching the resulting clouds of particles.</p><p>Pathlines can be obtained by putting small objects into the flow field and exposing a photograph for a longer time, thus depicting the traces of these objects over time.</p><p>Timelines are given by observing a line of particles flowing with the stream and making snapshots at several time steps.</p><p>0 Streamlines finally are defined as curves tangent to the velocity field in every point.</p><p>For steady flows streaklines, pathlines and streamlines obviously coincide <ref type="bibr" target="#b6">[7]</ref>.</p><p>In computational flow visualization, streak-, path-, time-, and streamlines are often simulated to get an insight into the structure of a flow field. Though these constructions are powerful tools for the investigation of two-dimensional fields, they are not very well suited for the visualization of three-dimensional field data as they heavily suffer from display ambiguities when being displayed in two dimensions on a computer screen. Therefore, streak-, path-, stream-, or timelines are often used to build time surfaces or streak-, path-, and stream ribbons, -tubes, or -surfaces, which in conjunction with standard lighting and shading techniques can provide a much better idea of the overall topology of a 3D flow field. Furthermore, local parameters of the field can be mapped onto these surfaces and thus be displayed together with the field's velocity structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Previous work</head><p>Many new techniques for flow visualization have been presented in the last few years <ref type="bibr" target="#b6">[7]</ref>.</p><p>Schroeder et. al. <ref type="bibr" target="#b7">[8]</ref> introduced the stream polygon technique, where n-sided, regular polygons perpendicular to the local velocity vector are placed along a streamline. Effects like twist or scalar parameters of the field are displayed by accordingly rotating and shearing the polygons or changing attributes like radius or color. By sweeping stream polygons along streamlines, three-dimensional stream tubes can be built.</p><p>Another method is the generation of stream surfaces by connecting adjacent streamlines with polygons. Special care has to be taken whenever divergence of the flow causes adjacent streamlines to separate or convergence causes streamlines to come very close to each other, as the polygonal approximation may become poor in these cases. <ref type="bibr">Helman and Hesselink [4]</ref> proposed an algorithm which connects the critical points of the vector field on the surface of an object to form a two-dimensional skeleton. This skeleton represents the global topology of the flow on the surface. Starting from points on the skeleton, streamlines in the flow around the object are calculated. By tesselating adjacent streamlines, stream surfaces are built. To avoid splitting of the stream surfaces in areas of divergence, the surfaces are recursively refined by introducing additional starting points for the streamline calculations.</p><p>Hultquist <ref type="bibr" target="#b4">[5]</ref> introduced an algorithm which simultaneously traces a set of particles originating from discrete points on some curve through the field and connects the resulting paths with triangles. In this way, an advancing front of a steadily growing stream surface is obtained. Whenever the divergence between two of these particles becomes too big, new particles are inserted into the front; when particles come too close to each other, some of them are removed.</p><p>Van <ref type="bibr">Wijk [9]</ref> proposed the usage of so-called surface particles for flow visualization. With this technique, a big number of particles released from a number of particle sources are traced through the flow field. By positioning the particle sources on a curve and displaying all particles as small geometric primitives shaped and coloured in dependency of certain field parameters, the impression of stream surfaces textured according to local parameters can be given.</p><p>A different approach which guarantees the generation of smooth stream surfaces was also introduced by Van Wijk <ref type="bibr">[lo]</ref>. The central concept of this method is the representation of stream surfaces as implicit surfaces f(.) = C representing the sweep of an initial curve through the field. The shape of the initial curve is defined by the value of f at the inflow boundaries. To calculate f , Van Wijk proposes two methods: solving the convection equation or tracing backwards the trajectories of grid points. The same technique can be used for the construction of time surfaces or stream volumes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Overview</head><p>In this article we present a new method for flow visualization based upon implicit surface generation tech-niques adopted from metaballs. We call the resulting objects streamballs.</p><p>In particular, streamballs are distinguished by their ability to split or merge with each other automatically depending on their distances. By advancing appropriate skeletons through the field and displaying the resulting streamballs, streak-, stream-, path-, and timelines as well as -surfaces, or -volumes can easily be visualized, no matter how complex the given field may be. The mathematical representation of streamballs offers a variety of mapping possibilities for parameters of the flow field.</p><p>Section 2.1 introduces the concept of streamballs defined by a set of discrete centerpoints and their usage in flow visualization. In Section 2.2, the concept of streamballs constructed from continuous twodimensional skeletons, which open up a wider range of visualization possibilities, is introduced. In Section 2.3, some mapping techniques for streamballs are presented. The rendering method that we used is described in Section 2.4. Finally, Section 3 contains a short summary and concluding remarks. the influence of the centerpoints and to avoid the computation of the exponential function, they applied the following polynomial approximation: As two centerpoints come close, their corresponding shells blend smoothly, i.e. the resulting surface is Cm-continuous.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">S t reamballs</head><formula xml:id="formula_0">a&amp;#! -t-bbL$ + + c w + 1 : fi(z) 5 R (2) 0 : f i (~) &gt; R<label>(</label></formula><p>If two or more centerpoints coincide, a single, larger sphere is produced (in fact, if the value of C is chosen properly, the sphere generated by two of such centers will have exactly twice the volume as a sphere produced by one single centerpoint).</p><p>as two centerpoints separate, the blending process is reversed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">Discrete streamballs</head><p>The basic idea for visualizing flow data with streamballs is to use the positions of particles in the flow as centerpoints for implicit surfaces, which then by blending with each other form three-dimensional streamlines, stream surfaces etc. The centerpoints can be looked upon as a discrete skeleton of the surface constructed in this way. Referring both to the term metaballs and to the usage of discrete skeletons we call the resulting three-dimensional objects discrete streamballs.</p><p>To represent a streamline using discrete streamballs we simply distribute a number of centerpoints along this streamline close enough to each other to let the surrounding isosurfaces blend. This blending process is shown in <ref type="figure" target="#fig_1">Figure 1</ref>. By increasing the number of centerpoints si step by step, a continuous, three-dimensional representation of a streamline is produced. To construct stream surfaces, a number of particles originating from different positions on some starting curve are advanced through the flow field. Their positions at several time steps are used as a skeleton for the streamballs. When the particles initially are close to each other, they will produce a continuous and smooth surface, which will split automatically in areas where divergence occurs, and merge automatically in areas of convergence. An example for this can be seen in <ref type="figure">Figure 2</ref>, where the flow around an obstacle, simulated by the combination of a source and a sink, is shown. Notice how the streamballs split around the obstacle and merge again behind it. Color is used to map the velocity of the flow.  <ref type="figure">Figure 2</ref>. Though the time surface splits on the obstacle, the obstacle's shape can clearly be seen.</p><p>Stream volumes of arbitrary initial shape are generated by advancing a cloud of particles through the flow field, which are initially arranged to form the desired shape, and using their positions over time as a skeleton for the streamballs.</p><p>As can be seen from the figures, streamballs have the convenient property to split automatically in areas of significant divergence and to merge with each other in areas where convergence occurs. This behavior is a natural consequence of the properties of metaballs.</p><p>Thus, streamballs will not necessarily produce closed stream surfaces. The way in which streamballs behave in such cases, however, can give valuable information on the structure of the flow. In order to produce closed surfaces nevertheless, one can simply release additional particles in areas of high divergence. Using an exponential influence function, we get</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Streamballs with continuous skeletons</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>FES</head><p>The convolution surface is given by building an isosurface F ( S , x ) = C. To get reasonable computation times, we used an influence function similar to the one we already used for the streamballs with discrete skeletons: and <ref type="bibr" target="#b6">(7)</ref> again with a, b, and c chosen to satisfy the conditions The objects generated in this way preserve all useful</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(3).</head><p>properties of Blinn's implicit surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">Continuous streamballs</head><p>Convolution surfaces with continuous skeletons are a powerful tool for flow visualization. They provide the ability to produce perfectly smooth surfaces around their skeletons.</p><p>With the discrete streamballs, we used a set of particle positions as a skeleton for an implicit surface. Now we use these points to construct a continuous skeleton which in turn generates the implicit surface.</p><p>To represent a streamline, for example, we trace a particle along this streamline through several discrete time steps and connect the single particle positions to build the skeleton of the streamball. The resulting three-dimensional streamline generally will be thinner and more regular than one produced by discrete streamballs using the same points as a skeleton.</p><p>Stream surfaces again are constructed from a set of three-dimensional streamlines which are very close to each other <ref type="figure" target="#fig_4">(Figure 4)</ref>.</p><p>Similarly, time surfaces are built of a number of three-dimensional timelines.  When time surfaces are traced through the field, special attention has to be paid to obstacles to prevent the time surfaces from being pulled "through" the obstacle. This problem can be overcome by controlling the length of the skeleton segments and dividing them if necessary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Mapping of local field parameters</head><p>Streamballs offer a variety of possibilities for the mapping of local field parameters. Besides standard mapping techniques, new mapping techniques based on the mathematical representation of the streamballs can be applied.</p><p>With discrete streamballs, for example, an easy method to map the value of a local parameter along a streamline is to choose the radius of the influence functions of each skeleton point according to the parameter's value at that point. The result is a threedimensional streamline whose diameter corresponds to the magnitude of the parameter to map. In <ref type="figure" target="#fig_5">Figure 5</ref> we used this technique to map the velocity of the flow.</p><p>A similar method has been used for the upper layer of the streamballs shown in <ref type="figure" target="#fig_6">Figure 6</ref> . The radius of the influence function of these streamballs was increased at several discrete positions along the streamline. By choosing the distances of these positions dependent on the absolute value of the velocity of the field, a good idea of this parameter's value along the streamline is given. It can be seen clearly that velocity is lower in front of the obstacle and higher on the side of it. To increase the radius of the influence functions at certain positions, we just placed discrete streamballs, each with a skeleton consisting of exactly one centerpoint, along the streamline.  With this mapping technique local scalar parameters are mapped as roughness of the surface. For this, the amplitude of a three-dimensional oscillating function F ( z ) is modulated by the value of velocity. The potential function of the streamballs then is superimposed by F ( x ) . For simplicity, we choose F to be F ( z ) = sin(flsl)sZn(fix2)sin(f323), <ref type="bibr" target="#b7">(8)</ref> where the fi are (not necessarily different) frequencies.</p><p>As the described mapping techniques influence only the geometry of our streamballs, more common mapping techniques, using e.g. material properties of the <ref type="figure" target="#fig_5">(See color plates, page CP-25.)</ref> surface, can be applied simultaneously. In all our figures we additionally used simple color mapping to depict velocity.</p><p>The streamballs in the middle of <ref type="figure" target="#fig_6">Figure 6</ref> show a different color mapping method. The component of the velocity which describes the deviation of the flow from the central axis is mapped as color spots on the surface of these streamballs. The density of the color spots depends on the absolute value of the considered velocity component.</p><p>Similar to a technique introduced by Hesselink and <ref type="bibr">Delmarcelle [3]</ref>, continuous streamballs can be used for the representation of tensor data. For this purpose the skeleton is directed along a so-called hyperstreamline (a curve tangent to the main eigenvector of a tensor field). At every point of the skeleton a local coordinate system <ref type="figure" target="#fig_0">(&amp; , &amp;, [3)</ref> is used with [I tangent to the main eigenvector el at this point and &amp; and &amp; oriented in the directions of the two eigenvectors e2 and e3 which are perpendicular to the main eigenvector. Choosing the radius of the influence function in the directions of and &lt;3 corresponding to the absolute values of the two eigenvectors e2 and e3, an asymmetrical influence function can be constructed. The resulting isosurface will have an asymmetrical cross section with orientation and diameter dependent on the directions and eigenvalues of these two eigenvectors. Using some mapping technique to show the eigenvalue of the main eigenvector, it is possible to represent not only direction, but even the magnitude of all three eigenvectors at the same time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Rendering</head><p>For rendering, the field function F ( S , z) of the streamballs is evaluated on a regular grid. The isosurface F ( S , z) = C is extracted from this grid by a simplified marching cubes algorithm, and the resulting triangles are rendered using Iris Explorer.</p><p>The modified marching cubes algorithm processes the grid slice by slice, so only two slices have to be held in memory at one time <ref type="bibr" target="#b5">[6]</ref>. As the polynomial influence functions (2) or (6) are used, each part of the skeleton has only a local influence on the field function. Therefore, when computing the values of the field function for a grid point z, F ( S , z ) has to be evaluated only for those parts of the skeleton which are close enough to that grid point to influence the potential field at z. This greatly reduces computation costs.</p><p>For high grid resolutions, as they may be necessary to see fine details, the huge number of triangles generated by the marching cubes algorithm is a con-siderable drawback. For this reason we are working on a fast adaptive triangulation algorithm, which will both reduce the number of field function evaluations and the number of triangles produced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Summary</head><p>The proposed technique proves to be useful for 3D flow visualization in several ways: 0 The representation of streamlines, stream surfaces and stream volumes as well as time surfaces is possible in a quite easy and natural way.</p><p>0 Streamballs split or merge automatically in areas of significant divergence or convergence. Valuable information on the flow is given by the way in which the streamballs divide or blend in these cases.</p><p>0 Due to the underlying mathematical representation, streamballs provide powerful mapping possibilities for flow-related parameters. Hence, they are not only suited for the examination of vector fields, but can even be used for the exploration of the complex structure of tensor fields.</p><p>0 Streamballs can be applied even in cases of very complex flow fields.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>3 )</head><label>3</label><figDesc>Ii(X) = with fi(Z) = 1 1 2 -sill and a, b, and c chosen to satisfy Ii(0) = 1 Ii(0.5) = 0.5 Ii(R) = 0 I,(O) = 0 Ii(R) = 0 The described primitives are commonly known as Metaballs are distin-metaballs or blobby objects. guished by numerous useful properties: A single centerpoint generates a single, spherical surface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>The blending process of the streamballs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>Discrete streamballs flowing around an obstacle. Time surfaces for any given time t = to + At are built by distributing skeleton points on a starting surface at a time t = t o and letting them flow with the (See color plates, page CP-25.) Three snapshots of a time surface hitting an obstacle. field for a time At. Figure 3 simultaneously shows three snapshots of a time surface hitting the same obstacle as in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>(</head><label></label><figDesc>See color plates, page CP-25.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>A stream surface produced by a rake of 100 3D-streamlines in a flow field containing a vortex.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Discrete streamballs in a flow field containing a vortex. Both radius and color show velocity.A different method has been used to map the velocity on the surface of the lower layer of streamballs inFigure 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Different mapping methods using streamballs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>2.1 Streamballs with discrete skeletons 2.1.1 Basic concept In 1982, Blinn [l] introduced</head><label></label><figDesc>the usage of implicit surfaces to display molecular compounds. With his method, a potential field F defined by a finite set S of centerpoints si is used to generate an implicit surface which represents the molecules. At a given point 2 in space, F ( S , x) is given as the describes the shape, ai the size, and wi the strength of the potential field. Based on this field an isosurface F ( S , z ) = C is constructed. For example, if there is only one centerpoint SI and if a1 = &amp; and fl(z) = 1 1 2 -s1(I2, the resulting isosurface will be a sphere whose radius depends on R. G. Wyvill et. al. [ll] used a similar technique to construct what they called soft objects. To localize</figDesc><table><row><cell>sum of weighted influence functions Ii(z) generated by</cell></row><row><cell>each of these centers:</cell></row><row><cell>where f i ( . )</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The research for this project is funded by a grant of the "Stiftung Innovation fur Rheinland-Pfalz" awarded to the University of Kaiserslautern. Wladimir Djatschin is supported by the DAAD.</p><p>Many thanks to Henrik Weimer for programming and helpful discussion.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A Generalization of Algebraic Surface Drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="235" to="256" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bloomenthal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Shoemake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Convolution Surfaces</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="251" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Hesselink: Visualization of Second Order Tensor Fields and Matrix Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92</meeting>
		<imprint>
			<biblScope unit="page" from="316" to="323" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
		<title level="m">Visualizing Vector Field Topology in Fluid Flows, IEEE Computer Graphics &amp; Applications &apos;91</title>
		<imprint>
			<biblScope unit="page" from="36" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Constructing Stream Surfaces in Steady 30 Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P M</forename><surname>Hultquist</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92</meeting>
		<imprint>
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Marching-Cube-Algorithmus zur Oberflachenrekonstruktion medizinischer Daten, Projektarbeit, Fachb. Informatik</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Matzat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename><surname>Van Lengen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
		<respStmt>
			<orgName>Universitat Kaiserslautern</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Van Walsum</surname></persName>
		</author>
		<title level="m">Fluid Flow Visualization, Focus on Scientific Visualization</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="1" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Volpe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<title level="m">The Stream Polygon: A Technique for 3D Vector Field Visualization, Proceedings of Visualization &apos;91</title>
		<imprint>
			<biblScope unit="page" from="126" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<title level="m">Rendering Surface Particles, Prcceedings of Visualization &apos;92</title>
		<imprint>
			<biblScope unit="page">5461</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<title level="m">Implicit Stream Surfaces</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Wyvill: Data structure for soft objects, The Visual Computer ceedings of Visualization &apos;93</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wyvill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mcpheeters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
		<imprint>
			<biblScope unit="page" from="227" to="234" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
