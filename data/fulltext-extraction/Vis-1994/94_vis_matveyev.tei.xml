<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Approximation of Isosurface in the Marching Cube: Ambiguity Problem</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><forename type="middle">V</forename><surname>Matveyev</surname></persName>
							<email>matveyev@desert.ihep.su</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department Institute for High Energy Physics 142284</orgName>
								<address>
									<settlement>Protvino</settlement>
									<region>Moscow Region</region>
									<country key="RU">Russia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Approximation of Isosurface in the Marching Cube: Ambiguity Problem</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>The purpose of the present article is the consideration of the problem of ambiguity over the faces arising in the Marching Cube algorithm. The article shows that f o r unambiguous choice of the sequence of the points of intersection of the isosurface with edges confining the face it is sufficient t o sort them along one of the coordinates. It also presents the solution of this problem inside the cube. The graph theory methods are used to approximate the isosurface inside the cell.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Let there be a rectilinear volume grid whose nodes contain the values of the function F i j k = F ( z , y, 2).</p><p>The problem is to approximate the isosurface s, = ( ( 2 1 Y, . ) : F ( 2 , Yl.&gt; = PI.</p><p>(1)</p><p>In the MC algorithm <ref type="bibr">[l]</ref>, <ref type="bibr" target="#b1">[2]</ref> the isosurface is approximated sequentially in all cells comprising the volume grid and intersecting the specified surface.</p><p>In this case the coordinates of the points of of edges intersecting the isosurface are computed. Then the part of the surface intersecting the given cell is constructed at the points obtained.</p><p>In virtue of symmetry there are only 15 possible types of intersection of the isosurface and the cubic cell.</p><p>The problem is that during approximation of the isosurface there is a possibility for "holes" to appear inside the cells of the volume grid as a result of the wrong connection of the points on the edges of the cells (see <ref type="figure" target="#fig_0">Figure 1)</ref>. Here and in what follows the black points denote the edges outside the isosurface Fnode &gt; P. In the MC method this problem is solved for each cell separately without taking into account the effect of the adjacent cells. Now the problem is to connect the points at the cell edges correctly, in which case the problem of "holes" appearing at the cell edges is solved. To connect the points correctly one may use the value of the function at the edge center <ref type="bibr" target="#b1">[2]</ref>.</p><p>The comparison of the value at the point with the one on the isosurface allows one to conclude whether the given point is inside or outside the isosurface. However this solution does not always yield the correct result (see <ref type="figure">Figure 2</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2: Example of wrong connection</head><p>For the solution of this problem Nielson and Hamann <ref type="bibr" target="#b3">[4]</ref> proposed to use a bilinear representation of the function. In this case the curve describing the intersection of the isosurface with the edge will be a hyperbolic one.</p><p>Defining the value of the function at the point of the intersection of the hyperbola asymptotes we may tell in what sequence it is necessary to connect points at the edge (see <ref type="figure" target="#fig_2">Figure 3)</ref> because this point lies between the isolines at the edge. edge we obtain a linear one. Then using a unity cube for the description of the cell we obtain the following equation:  </p><formula xml:id="formula_0">g = Bs + Bi -B4 -B5, h = B7 + Bs + B4 + B2 -B1 -B3 -Btj -Bs,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Solution at the Cell Edges</head><p>To determine the point of the intersection of the isosurface with the cell edge the MC method uses the linear interpolation. The bilinear interpolation will be a natural representation of the function at the edge. IU <ref type="figure">Figure 5</ref>: Sorting points at the edge When analyzing the function behaviour at the edge we will use the edge projection onto a unity square. Then the function behaviour at the edge is described by the equation in local coordinates U , v :</p><formula xml:id="formula_1">F(u, v) = a + bu + c v + duv, (4) where 0 5 U 5 1, 0 5 v 5 1.</formula><p>depend only on one variable </p><formula xml:id="formula_2">F(u = const, v) = F(v),<label>(5)</label></formula><p>Let 8 values of the function Bi (see <ref type="figure" target="#fig_3">Figure 4)</ref> be specified in the cube nodes. A trilinear interpolation will be a natural description of the function inside the cell. In this case when going over to the face we obtain a bilinear description and when going over to the and, hence, will have not more than one solution on the section from 0 to 1, i.e. not more ihun one intersection with the isosurface.</p><p>Let us sort the points of the intersection of the edges with the isosurface with respect to U and connect them in pairs (see <ref type="figure">Figure 5)</ref>, in which case the condition of "one intersection" will be satisfied.</p><p>In this case for v = const this rule is satisfied automatically.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 6: Inadmissible intersection of the isosurface with edge</head><p>Let us assume that this is not so and the case shown in <ref type="figure">Figure 6</ref> is possible. Let the isosurface with the function value So = {(z,y,z) : F ( z , y , z ) = 0 ) be approximated. As to other cases, they are reduced by the transfer of the coordinates. Then for the points of the intersection of the isosurface with the face edges the following inequalities should hold true:</p><formula xml:id="formula_3">Boo Boo -BlO ' BlO BlO -B11 B11 Bii -Bo1 Bo 1 Bo1 -Boo &gt; Bo 1 Bo1 -Bii Boo Boo -Bo1 Bio Bio -Boo B11 Bii -Bio &gt; (6) &gt; &gt;</formula><p>We obtain from the 1st pair that and from the 2nd one that</p><formula xml:id="formula_4">(8) -Bo1 BlO (Bo1 -Boo)(Bii -Boi) (BlO -Boo)(B11 -BlO).</formula><p>So, we have proved that this case is impossible. Consequently, to connect the points at the edge correctly it is sufficient to sort them along one of the coordinates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Obtaining Points inside the Cell</head><p>Now let us consider the function behaviour inside the cell. As a complexity criteria we use the number of the isosurface intersections with the cube diagonals (see <ref type="figure">Figure 7</ref>).</p><p>In the case of one intersection it is sufficient to have the values of the function in the cell nodes, whereas in the case of two intersections one may introduce an additional point inside the cell that can be the point of the intersection of the diagonals as it was offered in the work by E. Chernyaev and S. Matveyev <ref type="bibr" target="#b4">[5]</ref>.</p><p>However, using the technique offered it is impossible to determine the intersection points for the case presented in <ref type="figure">Figure 2</ref>. The technique offered in the paper by <ref type="bibr">Nielson and Hamann [4]</ref> that consists in obtaining an additional point belonging to the isosurface inside the cell will yield the correct result in cases 7a, b, c <ref type="figure">Figure 7</ref>: Types of intersections with the diagonal In the case of three intersections it becomes impossible to reconstruct the topology using the technique offered. The point is that it is necessary to obtain additional points belonging to the isosurface inside the cube.</p><p>Let us construct on the diagonals of the cube six rectilinear slices, each determined by two diagonals (see <ref type="figure">Figure 8</ref>): s1476 (points B1, B4, B7, B6), S2385, s1278, s3456, s1573 S2684.</p><p>Let us introduce a local variable connected with the position of the point on the diagonal. Then the equations describing the function behaviour on the diagonals B1-B7, B2 -Bat B4 -B6, Hence, on the diagonals the function is specified by a cubic equation and there is a possibility to find the coordinates &lt;i of three intersections with the diagonal of the surface approximated.</p><p>Two cube edges and two diagonals of the cube faces form the edges confining each slice (see <ref type="figure">Figure 8</ref>). The points of the isosurface intersection with the diagonals of the cube edges are found from equations (2) becoming a bilinear one on the edge by introducing the parameter &lt;. On the diagonals of the cube edges the function will have a quadratic dependence on &lt; and, hence, will have not more than two intersections with the isosurface.</p><p>The next step is the correct connection of the obtained points in the planes of the slices.  and for the line v = const it will have a quadratic one, <ref type="figure" target="#fig_0">Figure 10</ref>: Graph for the cell points Hence, the points sorting on the slice with respect to U specifies the correct sequence for their connection. In this case the points lying on the edges (boundary) of the slice should be marked as boundary ones at which there is the transition from one isoline to another one. On the sorted list these points should be at the adjacent places. In the general case, the list is as follows: <ref type="figure" target="#fig_0">b2, b3, ik, ...l i m , b4, . . . , b n -1 , '"1 bn},</ref> where "b"oundary points, 'Ynner points, and the set of the isolines is presented in the form (see </p><formula xml:id="formula_5">{bl, i l , ...,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Approximation of Isosurface inside the Cube</head><p>As a result of previous steps we obtained a large set of points and segments constructed at these points.</p><p>We will consider these points to be the nodes of a graph and segments to be its arcs (see <ref type="figure">Figure lo)</ref>. Here b, denote the points belonging to the boundary of the cell (lying on the faces) and ij denote those inside it.</p><p>Let us construct the adjacency matrix of this graph:</p><p>... Here 0 means the absence of the connection between points i and j and 1 presence of such a connection or the path equal to 1. In this case the elements of the main diagonal and those below it are equal to 0 because it is sufficient for us to take into account only once that the node i is connected with that of j . Now consider the expression <ref type="bibr" target="#b5">[6]</ref> ( <ref type="figure" target="#fig_0">adj(i, 1) and adj(1, j )</ref>   <ref type="figure" target="#fig_0">adj(m, 1) and adj(m, j )</ref> ) .</p><p>( <ref type="figure">adj(i, 2 ) and adj(2, j )</ref> ) or . . .</p><p>The value of this expression is equal to 1 if there is a path of length 2 from the node i to the node j . From here one can find out through which node they are connected.</p><p>It is seen from the matrix that element ( i j ) of matrix adj2 is equal to Boolean product of adjacency matrit by itself adj2 = adj @ adj Now let us find the logical sum of matrixes adj and adj2 : adj12 = adj and adj2</p><p>The element ( i j ) of the matrix adjlz obtained is equal to 1 if the nodes i and j are the vertices of a triangle. The third node can be found from the expression (13) used for the construction of the matrix adj,.</p><p>The matrix of paths equal to 3 is obtained as a result of Boolean product of the adjacency matrix by the one of paths equal to 2:</p><p>adj, = adj @ adjz.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>If matrix adjl3, adj13 =adj and adjs</head><p>contains elements equal to 1 we may mark the nodes approximating the isosurface by quadrangles. Their triangulation is carried out following, for example, the criterion offered by Choi and his ceauthors <ref type="bibr" target="#b6">[7]</ref>. If all elements of matrix adjl3 are equal to 0 this means that triangles are sufficient for approximation and there is no need in further calculations.</p><p>The given procedure will be carried out m times until all the elements of the matrix adjlm are equal to 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions and Acknowledgments</head><p>The present work offers a new approach to the solution of the problem of ambiguity at the cell edge using the MC algorithm. It has been shown that for such a solution it is sufficient to sort the points of the intersection of the isosurface with the edges confining the given face along one of the coordinates and then to connect them in pairs.</p><p>The procedure of approximating the surfaces of a complicated configurations inside a volume cell was presented. It also shows the technique for obtaining inside it the points lying on the surface and for connecting them in the correct sequence. The obtained points and connections between them are presented in the form of a graph. To approximate the isosurface, the graph theory methods are used.</p><p>To conclude, the author would like to express his sincere gratitude to V. Gusev for fruitful discussions and also to L. Milichenko and -1 for them assistance in the preparation of the text of this paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Ambiguity at the Edge</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>y , z ) = a + b x + c y + d z + + exy + fxz + gyz + hxyz, where 0 5 x 5 1, 0 5 y 5 1, 0 5 z 5 1.The constants are defined as</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Two Ways of Connecting the Points at the EdgeAnother problem is that inside the cell it is necessary to obtain the isosurface topologically equivalent to the given one [3],<ref type="bibr" target="#b3">[4]</ref>. The solution to this problem consists in the correct connection of the points in the cell volume and in separating triangles (in the general case of polygons) approximating the isosurface correctly. The possible cases are analyzed in the paper by Nielson and Hamann<ref type="bibr" target="#b3">[4]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>CellFor the straight line U = const equation ( 2 ) will</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>8 5 -Figure 8 :</head><label>58</label><figDesc>B3 are equal to F ( t , t , t ) = a + ( b + c + d ) t + (9) + ( e + f + s)t2 + ht3, F(1 = a + b + ( -b + c + d + e +f)&lt; + +(-ef + g + h)t2 -ht3, F ( t , 1 -t,t) = a + c + (6c + d + e + g ) t + +(-e + fg + h ) t 2 -h t 3 , F ( t , t , 1 -0 a + d + ( b + cd + f + g ) t + +(efg + h)t2 -Configuration of slices</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>Slice s 3 4 5 6 in local coordinates Let us consider the slice s3456 shown in Figure 9. Let us go over to the local coordinate system (ulv) related to this slice. Then for the straight line U = const equation ( 2 ) will have a linear dependence, F(&lt;, const, const) = F(&lt;), F(const, 1 -&lt;,&lt;) = F ( &lt;~) .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>1 il, ..., h } , (b3r ik, -*-, i m , b4}, " -7 { b n -~, ..., bn}.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>1 . . . 1 0 ad.i=[: 0 0 0 ... 0 .;. 1 '1. s)</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1070">-2385/94 $04.00 0 1994 IEEE</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High-Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 87 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Datastructures for soft objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wyvill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mcpheeters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wyvill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="227" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Topological Considerations in Isosurface Generation Extended Abstract</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="79" to="86" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Asymptotic Decider: Resolving the Ambiquity in Marching Cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Vasualizataon&apos;91</title>
		<meeting>Vasualizataon&apos;91</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="83" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The Main Aspects of Visualization of Isosurfaces of Implicitly Specified Function</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">V</forename><surname>Chernyaev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">V</forename><surname>Matveyev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference GraphiCon&apos;92, Theses</title>
		<meeting><address><addrLine>Moscow, P</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="15" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Data Structures for Personal Computers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Langsam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Angenstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tenenbaum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Prentice-Hall, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Triangulation of scattered data in 3D Space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">Y</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">I</forename><surname>Yoon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CAD</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="239" to="248" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
