<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Triangulation and Display of Rational Parametric Surfaces*</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chandrajit</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
							<email>bajaj@cs.purdue.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Sciences</orgName>
								<orgName type="institution">Purdue University West Lafayette</orgName>
								<address>
									<postCode>47907</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Royappat</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Sciences</orgName>
								<orgName type="institution">Purdue University West Lafayette</orgName>
								<address>
									<postCode>47907</postCode>
									<region>IN</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Triangulation and Display of Rational Parametric Surfaces*</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:30+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We present a compiehensive algorithm to construct a topologically correct triangulation of the real affine part of a rational parametric surface with few restrictions on the defining rational functions. The rational functions are allowed to be undefined on domain curves (pole curwes) and at certain special points (base points), and the surface is allowed to have nodal or cuspidal self-intersections. We also recognize that for a complete display some real points on the parametric surface may be generated only by complex parameter values, and that some finite points on the surface may be generated only by infinite parameter values; we show how to compensate for these conditions. Our techniques for handling these problems have applications in scientific visualization, rendering non-standard NURBS, and in finite-element mesh generation.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Points on a parametric surface patch can be generated by sampling the parametric functions over some region of the parameter domain. Because of this, the display of patches of polynomial parametric surfaces is well-understood <ref type="bibr" target="#b15">[16,</ref><ref type="bibr">221</ref>. Some methods address in detail the problem of generating a triangulation on a surface that is sensitive to variations in surface curvature: view-dependent methods <ref type="bibr" target="#b23">[24]</ref> as well as viewindependent <ref type="bibr" target="#b6">[7]</ref>.</p><p>The parametric functions that define a surface can be viewed as a map from R2 into R3. "Domain sam- pling" methods such as the above assume that the parametric functions are defined and continuous in the region of the parameter domain that is being mapped. If the parametric functions are rational, however, they could be undefined at some points in R 2 . Many surfaces (including simple ones such as some quadrics) are given by rational maps which are undefined at domain points and curves. We investigate how to correctly triangulate a portion of a rational parametric surface, given a rational map that defines the surface. Our techniques are applicable whether this portion of the surface is described by a bounded region of the parameter domain, or by a bounding box in R3. In this formulation the problem is of interest to CAD designers as well as scientists interested in surface visualization. The former usually express the rational functions defining the surface in terms of the rational Bezier or B-spline bases with non-negative weights, restricting the rational functions to a standard part of the domain. However, researchers are considering non-standard generalizations to rational patches in which the rational functions are not defined everywhere <ref type="bibr" target="#b24">[25]</ref>, making our techniques relevant. In addition we consider the problem of constructing triangulations on singular rational parametric surfaces, especially surfaces that selfintersect. Constructing triangulations on such surfaces is useful for mesh generation in finite-element analysis.</p><p>A rational parametric surface is defined by the three rational functions:</p><p>where X , Y , Z , W are polynomials with real coefficients and no common factor. Our surface triangulation problem is as follows: Given a bounded region of the domain or a bounding box in R3, compute a topologically correct triangulation of the correspond-ing portion of the surface defined by (1). In this paper we provide all details for the bounding box case of the problem, noting that our techniques apply as well for the bounded region in the parametric domain. We further require the surface triangulation to have all the requisite properties of a simplicial mesh [15], i.e. it must be a triangular mesh whose edges meet only at vertices, without dangling edges, etc.</p><p>In this paper we describe the various subproblems that arise in trying to solve the above problem when we don't place any restrictions on the rational functions ~( s , t),y(s, t ) , z ( s , t ) . We then give a solution for each subproblem, and combine the solutions into a comprehensive algorithm. The subproblems are explained in detail in the full version of the paper <ref type="bibr" target="#b8">[9]</ref>. They are: domain poles, domain base points, surface singularities, complex parameter values, and infinite parameter values. We mention them briefly here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1.</head><p>2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.</head><p>Domain poles. The map yields a divide by zero at points satisfying W ( s , t ) = 0, the poles of the rational functions. These domain poles are algebraic curves. The parametric functions cannot be evaluated at such points and a domain triangulation which intersects these domain pole curves will yield invalid surface triangulations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Domain base points.</head><p>The map is undefined at points satisfying X ( s , t ) = Y ( s , t ) = Z ( s , t ) = W ( s , t ) = 0. There are finitely many such points, called domain base points. It is known that a rational curve on the rational parametric surface is the image of each base point however the points on this curve cannot be directly computed using the given rational functions. Ignoring domain base points can lead to a topologically incorrect surface triangulation.</p><p>Surface singularities. The given rational surface may be singular. Even if the rational map has no poles or base points, mapping an arbitrary domain triangulation onto the parametric surface may yield intersecting surface triangles.</p><p>Complex parameter values. Some real points of the surface are generated only by complex parameter values.</p><p>Infinite parameter values. Some finite points of the surface are generated only by infinite parameter values.</p><p>Note that for modern day graphics display and NURBS rendering, subproblems (4) and (5) need to <ref type="figure" target="#fig_1">Figure 1</ref>: Hyperboloid of 1 sheet with seam curve gaps caused by base points be addressed while subproblem (3) is not essential (although z-buffering still causes wavy lines along polygon intersections due to aliasing). The above problems can be extended to include rational parametric surfaces and rational varieties in higher dimensions, but we don't discuss this here. The general flavor of the methods discussed will still apply, although implementing higher-dimensional methods would require more computational tools.</p><p>The rest of this paper is organized as follows. First in section 2 we discuss two approaches: either directly approximating the surface in the range space of the parametric functions, or computing those portions of the domain that map onto the desired parts of the surface. We argue that the domain-space approach is preferable in this context. Next in section 3 we present techniques for dealing with each subproblem in section 1. In section 4 we then collect these techniques into a comprehensive algorithm for generating topologically accurate surface triangulations and provide practical details and simplifications based on our extensive experimentation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Domain space vs. range space approaches</head><p>One way to construct a triangulation of a parametric surface is to evaluate the parametric functions at various points on the parameter domain, and link to-gether the resulting surface points to form a simplicial mesh. When considering arbitrary rational parametric surfaces, the evaluations of the parametric functions fail at the poles and base points and techniques of this paper are needed to circumvent them.</p><p>Another way to approach the problem is to work directly in the range space of the rational function map. Since we are only interested in portions of a surface inside a bounding box, and poles correspond to surface points at infinity, a range-space method can avoid explicitly evaluating the rational functions at poles. However base points still cause problems.</p><p>The following system of equations is equivalent to W ( s , t ) z -Z ( s , t ) = 0 One can theoretically implicitize the parametric surface by eliminating s, 1 from this system <ref type="bibr" target="#b18">[19]</ref> using several available methods <ref type="bibr" target="#b20">[21]</ref> and then approximate the resulting implicit surface directly. Note that a parametric surface of degree n could have an implicit equation of degree n2. However, implicit surface approximation techniques <ref type="bibr">[ll,</ref> 181 don't handle surface singularities very well, although research is being done to overcome this. Since we would like to display surfaces with complicated singularities and several real sheets, we avoid the range-space approach. We show instead that a careful evaluation of the domain is sufficient to generate an accurate triangulation of the parametric surface.</p><p>(1):</p><formula xml:id="formula_0">W ( S , t ) X -X ( s , t ) = 0, W(s,t)y -Y ( s , l ) = 0,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Techniques for overcoming difficulties</head><p>In this section we outline the basic idea for solving each of the problems addressed above. The complete algorithm is presented in the next section along with implementation specific details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Partition of domain by pole curves</head><p>Rational functions are undefined at points in the domain where their denominator vanishes, and continuous everywhere else. Hence, the pole curve partitions the parameter domain into regions, such that inside each (open) region the functions of the parametric map are defined and continuous. Therefore, our approach to handling pole curves is simple: we partition the domain by the pole curve. In particular, we construct a special triangulation of the domain that respects this partition. In this triangulation, a domain triangle contains pole points only on its boundary and not in its interior. We construct a piecewise-linear topologically correct approximation of the plane algebraic pole curve[6, 101 and then construct a triangulation which conforms to this linear approximation i.e. the triangles abut the linear curve segments at vertices or edges. The conforming triangulation may require additional points to be inserted in the piecewise linear approximation of the curve. Bounds on the numerical approximation (number of bits of precision) required for a topologically correct linear approximation of an algebraic curve is given in <ref type="bibr">[lo]</ref> and are based on the gap theorem of <ref type="bibr" target="#b11">[12]</ref>.</p><p>Once such a triangulation is constructed, we know that each domain triangle maps onto a single-sheeted patch, since there are no pole points in the interior (pole points at a vertex correspond to points at infinity, and therefore the patch may be semi-infinite). A conventional domain sampling technique is used in the interior of the triangle to mesh the patch to any desired precision <ref type="bibr" target="#b23">[24]</ref>. The patch can then be clipped against a bounding box, if necessary. If base points are not present, domain partitioning combined with the handling of infinite parameter values (discussed below) suffices to generate a topologically correct triangulation of the parametric surface, even if it is multisheeted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Base points and seam curve parameterizations</head><p>When base points are present, it is not sufficient to just handle pole curves as gaps may still be present, as in <ref type="figure" target="#fig_1">Figure 1</ref>. The surface approximation will then not be topologically correct, since the surface approximation will be "torn" along the seam curves.</p><p>To handle base points, we must "stitch" the surface up along seam curves. This can be done in the framework of domain partitioning, as follows. We compute all base points and insert them into the domain triangulation as additional verticesthus base points will occur explicitly at the vertices of a domain triangle.</p><p>In general, approaching a base point along different directions in the domain leads to a different surface point (in the limit). Thus a base point "blows up'' onto an entire "seam" curve on the surface [23] -each point of this curve corresponds to a different limit direction at the base point. A consequence of this fact is that a domain triangle with a base point vertex maps onto a four-sided patch on the surface. In general, a triangle with b base point vertices maps onto a ( b + 3)-sided patcha fact exploited in <ref type="bibr" target="#b24">[25]</ref> to represent multi-sided patches over triangular domains.</p><p>Once we have a parameterization of the seam curves, it is easy to generate the patch corresponding to a domain triangle with base point vertices, however many sides it has. Each of the two edges adjacent to a base point vertex corresponds to a particular direction, and therefore to a particular parameter value. The two parameter values then define a segment of the seam curve. This curve segment is the side on the patch that corresponds to the domain base point.</p><p>We now discuss the computation of seam curve parameterizations. Points on a rational parametric surface are given as follows (temporarily using projective coordinates for notational convenience):</p><formula xml:id="formula_1">p X =</formula><p>where p is a non-zero constant of proportionality (we still use an affine domain, which is sufficient as we later show).</p><p>Then, let 0 be a common solution of the curves X = 0, . . . , W = 0. Furthermore, let us suppose that 0 is a point of multiplicity q on each of the curves X = 0,. . . , W = 0, and that the curves have no common tangent at 0. Then the image of the base point 0 is a rational curve of degree q on the surface <ref type="bibr" target="#b22">[23]</ref>.</p><p>In <ref type="bibr">[13,</ref> 141, a method is given to find the parametric equations of this curve. The basic idea is to pass a pencil of lines through the base point and then use the slope of these lines as a parameter, since approaching the base point from each direction leads to a different point on the seam curve. The seam curve equations are not given explicitly, but as quotients of certain polynomials. The algorithm fails when the curves X = 0,. . . , W = 0 have common tangents at 0; in this case the parametric equations given by this algorithm generate only a single point of the seam curve. In <ref type="bibr" target="#b19">[20]</ref> a method is given for parameterizing seam curves that works for all cases (i.e., even when the tangents are equal). However, it is much more expensive than the previous method and not currently practical: multivariate resultants are used to compute a projection onto a plane of all the seam curves simultaneously, yielding a bivariate equation. Along with the projection, a rational map R is computed between the projection and the curves on the surface. A bivariate factorization algorithm (over the complexes) such as <ref type="bibr" target="#b3">[4]</ref> must first be applied to separate out the the prcjections of the individual curves. Each projected seam curve is then parameterized using a general curve parameterization technique <ref type="bibr" target="#b1">[2]</ref>, and finally mapped onto the surface using the rational map M.</p><p>Our solution to the problem is a simplification of of the method of <ref type="bibr" target="#b12">[13]</ref> and stated in the Theorem below which allows us to give an explicit formula for the parametric equations of the seam curve and a "blowing up" of the base point based on affine quadratic t r a n s</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>X ( s , t ) , pY = Y ( s , t ) , p z = Z ( s , t ) , pW = W ( s , t )</head><p>formations [l, 61 for the special case when the tangents at the base point are equal. The affine quadratic transformation we use are of the type T : x = r, y = rs with inverse T-' : r = x , s = y/z with the base point translated to the origin. This transformation is applied to the product of the curves X = 0,. . . , W = 0 whose tangents at the base point are equal. Its affect is to yield a curve with distinct tangents at the base point. The transformation being birational (i.e. rational and with an inverse which is rational) allows one to map the seam curve parameterization for the transformed domain curves back to the original. Only a finite number of these transformations are required to separate the tangents <ref type="bibr">[l]</ref>. Details of its application for tracing through curve singularities is given in [SI. Bounds on the numerical approximation (number of bits of precision) required for the blowing up procedure at the base point are similar to those given for singularity computation in <ref type="bibr">[lo]</ref> and are based on the gap theorem of <ref type="bibr" target="#b11">[12]</ref>. This then together with the explicit formula for the parametric equations of the seam curve given below, solves this base points problem. <ref type="figure">a domain point approaching ( a , b )</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>THEOREM 1 Let ( a , b ) be a base point of multiplicity q . Then for any m E 72, the image of</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Partitioning along surface singu-</head><p>Earlier, we mentioned two reasons why a domain triangulation might not stay a triangulation when it is mapped onto a parametric surface. The first reason was because the domain sampling density was not high enough, and the second reason was because the surface might self-intersect. The first case can be handled by increasing the domain sampling density (either locally or globally, although local curvature-sensitive larities sampling is much preferred since it generates fewer polygons). Several domain sampling techniques already adjust the sampling density due to curvature, so we focus on the second case.</p><p>The domain-partitioning technique lends itself to generating triangulations on singular surfaces. The key idea is to compute those points and curves in the parametric domain that map onto surface singularities, and then partion the domain by these points and curves (as well as by the pole curves). If this is done, no domain triangle will contain in its interior a point that map onto a surface singularity. Hence, triangles on the surface will meet only along their edges or at their vertices, even if the surface is singular.</p><p>Domain curves (and points) mapping onto surface singularities can be computed by solving systems of polynomial equation@, 5, 121. Singularities correspond to domain points where the Jacobian matrix of the rational map does not have full rank. We can compute the symbolic Jacobian matrix and equate its minors to zero, yielding a set of polynomial equations whose common solution are domain points and curves that map onto surface point and curve singularities. Multivariate resultants <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr">211</ref> can be used to project the solutions onto the parameter plane, after which a curve-tracer can be used to compute a linear approximation as for the domain pole curves. For tracing the curve one can use either subdivision methods, e.g. <ref type="bibr" target="#b16">[17]</ref>, or a marching method such as <ref type="bibr">[6, lo]</ref>. Bounds on the numerical approximation (number of bits of precision) required for the singularity tracing computation are given in <ref type="bibr">[lo]</ref> and are based on the gap theorem of <ref type="bibr" target="#b11">[12]</ref>.</p><p>For example, consider the surface given by the the following equations, taking z(s, t ) = X ( s , t ) / W ( s , t ) ,</p><p>etc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>X ( s , t )</head><formula xml:id="formula_2">= s3 + st2 -3s Y ( s , t ) = (s'+t2)2-3(2+t') Z ( s , t ) = s2t + t 3 -3t W ( s , t ) = ( s 2 + t 2 ) 2 + 2(s2 + t 2 ) + 1</formula><p>This is a surface of revolution (see <ref type="figure">Figure 3</ref>) and has a point singularity at the origin. It can be shown that the domain points mapping onto the surface singularity satisfy ( t 2 + s2 -3)(t2 + s') = 0. Thus the circle of radius centered at the origin, and the origin itself both map onto the surface singularity at (O,O, 0). This circle and the origin, partition the parameter domain into regions that meet at the surface self-intersection. By partitioning the parameter domain by treating the curve t 2 + s2 -3 = 0 and the point (0, 0), similar to the domain pole curves, we can construct a triangulation on this surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Computing complex parameter</head><p>We now show one way to compute the complex parameter values that map onto these points. Let the parameters s , t denote complex numbers given as s = a + bi, t = <ref type="figure">c + d i , where a , b, c, d E R</ref>  Note that this particular system has the trivial twodimensional solution b = d = 0 which must be excluded. Thus the marching methods of <ref type="bibr" target="#b5">[6]</ref> cannot be used directly; rather, as for surface singularities, we must use resultants to first compute a projection of the space curve. After deleting the extraneous component due to the trivial solution, we can trace the projected plane curve and finally map it onto the space curve using the inverse of the projection. The points <ref type="figure">( a , b, c , d</ref> ) of the space curve give complex parameter values s = a + bi and t = c + d i that map onto real points of the surface.</p><p>X <ref type="figure">R ( a , b, c, d</ref> ) <ref type="figure">r ( a , b, c , d )</ref> . <ref type="figure">i  Y R ( a , b, c, d</ref> ) <ref type="figure">R ( a , b, c, d</ref> ) <ref type="figure">+ Zr(a, 6, c, d</ref> ) . i </p><formula xml:id="formula_3">+ X</formula><formula xml:id="formula_4">+ Y r ( u , b, c , d ) . i Z</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Mapping infinity using projective reparameterization</head><formula xml:id="formula_5">s = *- 1 -U -v t = *- 1 -U -v V</formula><p>Each reparameterized map needs to be sampled only over the unit triangle of its domain</p><formula xml:id="formula_6">( U 2 0, v 2 0, U + v 5 l )</formula><p>, yielding a triangular patch. The patches meet along their boundaries and together cover the entire surface (including finite points that were generated by infinite parameter values in the original surface). <ref type="figure">Figure 6</ref> shows a member of the Steiner surface family mapped using four reparameterizations. Each piece is the image of a different domain quadrant under the original rational map. Each piece is given a different color.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">The Triangulation Algorithm</head><p>As is common in domain sampling techniques, a triangulation of the parametric domain is mapped onto the surface, yielding a piecewise-linear approximation to it. Triangular surface elements have several advantages, described in detail in <ref type="bibr" target="#b23">[24]</ref>.</p><p>The pole curve partitions the parameter domain into several regions. The rational functions of the map are continuous inside these open regions, and therefore each region maps to a possibly infinite but single sheeted surface patch. The algorithm uses the pole curve and any self-intersection image curves to partition the domain into regions. This is done by generating a piecewise-linear approximation to the pole curve and the surface singularity domain points and curves. A conforming triangulation is then constructed of the curve points, base points and sufficiently many other ordinary domain points. The conforming domain triangulation "respects" the pole curves and selfintersection image curve. In other words, the interior of a domain triangle in this triangulation maps onto a patch of the surface that is single-sheeted and does not intersect itself. <ref type="figure" target="#fig_4">Figure 2</ref> shows a domain triangulation respecting a pole curve. Each domain triangle is allowed to have up to two vertices that are on the pole curve (note that base points are also on the pole curve). Each domain triangle then corresponds to a single-sheeted surface patch.</p><p>We first present the algorithm, and then provide implementation details and examples. proximation to the image curves or points of any surface singularity 4. (GENERATE BASE POINTS) Compute all the base points of the current mapping that lie inside the unit triangle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">(GENERATE DOMAIN POINTS) Generate</head><p>points in the rest of the unit triangle according to some fixed or adaptive sampling scheme.</p><p>We label each kind of point accordingly as pole, singularity, base or ordinary domain point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">. (TRIANGULATE)</head><p>Compute a triangulation of the points thus generated. If the edge of any triangle crosses the pole curve or the singularity image curves, insert the intersection points; if any triangle has three pole vertices, insert its centroid. Treat the four new mappings independently, and for each mapping perform the following steps.</p><p>Mapping each domain triangle is accomplished by walking along its boundary and checking the vertex labels. For clipping, an iteration must be used 2. (GENERATE POLE POINTS) Compute a piecewise-linear approximation to the pole curve of the current mapping inside the unit triangle.  Finally, we could compute surface points corresponding to complex parameter values as explained earlier. Since these points form a one-dimensional family in general (i.e. they are curves), we don't include them in the triangular mesh; they should however be used to augment the surface display in scientific visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">(GENERATE SURFACE</head><note type="other">SINGULARITY</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Details and Implementation Issues</head><p>We now discuss the steps in more detail.</p><p>In step 2, we use an adaptive tracing scheme based on [6] and suign estimates of Lipschitz constants as in In step 4 we find the base points by solving the equations Fi = 0, i = 1,. . . , 4 . This is done by picking two of the equations, finding their common solutions, and then checking whether these are solutions of the other two equations. In [3] and [13] a method based on resultants and birational maps is given for finding all base points and their multiplicities directly.</p><p>In step 5, points on the unit triangle can be generated either uniformly or adaptively spaced. Points that are uniformly spaced in the s and t directions are easily generated. For instance we can generate n(n+ 1)/2 points by taking i+ 1 equally spaced points on each line s + t = i / ( nl), i = 0 , . . . , n -1. The points can also be selected based on local surface curvature, for instance using heuristics that test the local "flatness" of the surface using the tangents at triangle</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1241.</head><p>endpoints.</p><p>For step 6, any triangulation method can be used, although some triangulations such as the Delaunay have convenient properties <ref type="bibr" target="#b14">[15]</ref>. Furthermore for Delaunay triangulations upper bounds are known for the number of additional points required to make the triangulation conform to the linear approximation of the domain pole and singularity curves.</p><p>Step 7 is complicated only because of the many cases involved. We know that each of the current domain triangles maps onto a single-sheeted patch with up to 5 sides. The domain triangle is subdivided if necessary, using an adaptive domain sampling technique <ref type="bibr" target="#b23">[24]</ref> where again estimates of Lipschitz constants are used to decide when a portion of a surface is sufficiently linear to be approximated by a triangular facet.</p><p>Finally, base point vertices need special treatment. A domain triangle with b base point vertices maps onto a patch with b + 3 sides. Three sides of the patch are the images of the domain triangle's three edges, and therefore tracing these sides (for clipping) is not a problem. How to trace the other b sides of the patch is not obvious, and we describe that here. Consider a triangle with a base point vertex p. Suppose p is incident to the edges e l and e 2 . Let the slope of the edges el and e2 be ml and m2 respectively. Approaching p along the line of slope ml leads to one point on the surface, and approaching it along the line of slope m2 leads to another point on the surface. Both these points lie on the seam curve corresponding to the base point. Parameterize the seam curve in terms of m, the slope of lines through the base point. Then the side of the patch that corresponds to the base point vertex can be traced by evaluating the seam curve parameterization at values between ml and m2.</p><p>We have implemented the entire algorithm and tried various techniques for solving the above problems.</p><p>Based on our experiments we feel that the domain partitioning approach is most suitable. Our implementation is in the Ganith system <ref type="bibr" target="#b6">[7]</ref> and was used to generate <ref type="figure" target="#fig_1">Figures 1, 3,6,  4,5, 7</ref>, and 8. The last four show various selfintersecting and multi-sheeted rational parametric surfaces. More information on the software is available via anonymous ftp from ftp.cs.purdue.edu and via World Wide Web access using Mosaic from http:///www.cs.purdue.edu/research/shastra/shastra.html.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>*This research was supported in part</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>COROLLARY 1</head><label>1</label><figDesc>along a line of PROOF. See the full version of the paper[9]. If the curwes X ( s , t ) = 0, . . . , W ( s , t ) = 0 share t tangent lines at ( a , b), then the seam curve ( X ( m ) , Y (m), Z(m), W ( m ) ) has degree q -t . In particular, if X ( s , t ) = 0,. . . , W ( s , t ) = 0 have identical tangents at (a, b), then for all m E R the coordinates ( X ( m ) , . . . , W ( m ) ) represent a single point.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>and i = G.Then the parametric map from C2 + R3 can be expressed asz(s, t ) = . (a + bi, c 3-d i ) y(s,t) = y(u + bi, c + d i ) z ( s , t ) = z ( u + bi, c + d i ) values = = = where X R denotes the real part of z(a + bi, c + d i )and XI denotes its imaginary part, etc.ThenX r ( a , b , c , d ) = 0 , Y r ( u , b , c , d ) = 0 , Z r ( a , b , c , d ) = 0 form a system of three equations in four unknowns whose solutions give parameter values that map to real surface points. In general, such a system has a one-dimensional solution set.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>0000 0</head><label>0</label><figDesc>7. (MAP TRIANGLES)Every triangle can now have up to 2 pole vertices or base point vertices. Map each triangle onto a surface patch and clip it against the bounding box. Various types of patches result depending on the labels of a domain triangle. They are as follows: All vertices are ordinary. The image of the triangle is a finite triangular patch. One vertex is a pole. The image is an infinite triangular patch with one corner at infinity. Two vertices are poles. The image is an infinite triangular patch with two corners at infinity. One vertex is a base point. The base point blows up to a curve on the surface. Approaching the base point vertex along each of its incident edges leads to a different surface point on this curve. Thus, the image is a finite rectangular patch.1 Combinations of ordinary, base points, and pole points. The resulting patch can be finite or infinite, with up to six sides.(RESTRICT T O FINITE DOMAIN) Perform a projective reparameterization so that the entire surface is mapped in four pieces, each over the "unit" trianglespanned by (O,O), (0, l), (1,O).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 :</head><label>2</label><figDesc>Partition of the domain triangulation by a pole curve</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>CUNe._....____ .. ..</figDesc><table><row><cell>Pole curve vertex</cell><cell></cell></row><row><cell>Ordinary vertex</cell><cell></cell></row><row><cell></cell><cell>to locate the intersection(s) of each edge of the</cell></row><row><cell></cell><cell>surface patch with the bounding box. To map</cell></row><row><cell></cell><cell>domain triangles with base point vertices, a pa-</cell></row><row><cell></cell><cell>rameterization of the corresponding seam curve is</cell></row><row><cell>IM-</cell><cell>necessary, as explained previously and elaborated</cell></row><row><cell>AGE POINTS) Compute a piecewise-linear ap-</cell><cell>below.</cell></row></table><note>PLA Of pole</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">t Current Address: Department of Computer Science, Uni-</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Desingularization of Plane Curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Abhyankar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Symp. in Pure Math-(See color plates</title>
		<meeting>of the Symp. in Pure Math-(See color plates</meeting>
		<imprint>
			<date type="published" when="1983" />
			<biblScope unit="page">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Automatic Parameterization of Rational Curves and Surfaces 111: Algebraic Plane Curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Abhyankar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="309" to="321" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Geometric Computations with Algebraic Varieties of Bounded Degree</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Sixth ACM Symposium on Computational Geometry</title>
		<meeting>of the Sixth ACM Symposium on Computational Geometry<address><addrLine>Berkeley, California</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="148" to="156" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Factoring Rational Polynomials over the Complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Canny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Garrity</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Siam J. on Computing</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="318" to="331" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">On the Applications of Multi-Equational Resultants</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Garrity</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
		<idno>CSD-TR-826</idno>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Sciences, Purdue University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Tracing Surface Intersections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hoffmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hopcroft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Lynch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="285" to="307" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The Ganith Algebraic Geometry Toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Royappa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 1st Annual Conference on the Design and Implementation of Symbolic Computation Systems</title>
		<meeting>of the 1st Annual Conference on the Design and Implementation of Symbolic Computation Systems<address><addrLine>Capri, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1990" />
			<biblScope unit="volume">429</biblScope>
			<biblScope unit="page" from="268" to="269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Finite Representations of Real Parametric Curves and Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Royappa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Modeling in Computer Graphics</title>
		<editor>B. Flacidieno, T . Kunii</editor>
		<meeting><address><addrLine>Genova, Italy</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="347" to="358" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Topologically Correct Approximations of Arbitrary Rational PArametric Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Royappa</surname></persName>
		</author>
		<idno>CSD-TR-93-009</idno>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, Purdue University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">NURBS Approximation of Surface-Surface Intersection Curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Computational Mathematics</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="1" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Polygonization of Implicit Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bloomenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="341" to="355" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The Complexity of Robot Motion Planning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Canny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Doctoral Dissertation Award</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>The MIT Press</publisher>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Base Points, Resultants, and the Implicit Representation of Parametric Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Chionh</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
		<respStmt>
			<orgName>University of Waterloo</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Degree, Multiplicities and Inversion Formulas for Rational Surfaces using U-Resultants</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Chionh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Goldman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<date type="published" when="1992-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<title level="m">Algorithms in Combi</title>
		<imprint>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
		<title level="m">Fundamentals of Interactive Computer Graphics</title>
		<imprint>
			<publisher>Addison Wesley Publishing Co</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="523" to="529" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Surface Interrogations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Geisow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ph.D. Dissertation, School of Computing and Accountancy</title>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
		<respStmt>
			<orgName>University of East Anglia. natorial Geometry</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Adaptive Polygonization of Implicitly Defined Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Warren</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="33" to="42" />
			<date type="published" when="1988-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Some Formulae in Elimination</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">S</forename><surname>Macaulay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. London Math. Soc</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="3" to="27" />
			<date type="published" when="1902" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Algebraic and Numeric Techniques in Modeling and Robotics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
		<respStmt>
			<orgName>University of California at Berkeley</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Efficient Techniques for Multipolynomial Resultant Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Canny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Symposium on Symbolic and Algebraic Computation</title>
		<meeting>International Symposium on Symbolic and Algebraic Computation</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="271" to="276" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Real-Time Rending of Trimmed Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rockwood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Heaton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Davis</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of A C M SIGGRAPH &apos;89</title>
		<meeting>A C M SIGGRAPH &apos;89<address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="107" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Introduction to Algebraic Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">G</forename><surname>Semple</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roth</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Oxford University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Applications of Surface Networks t o Sampling Problems in Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Von Herzen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
		<respStmt>
			<orgName>California Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Creating Multisided Rational Bezier Surfaces Using Base Points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="127" to="139" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
