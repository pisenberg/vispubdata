<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Evaluation of Reconstruction Filters for Volume Rendering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">R</forename><surname>Marschner</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><forename type="middle">J</forename><surname>Lobbt</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Program of Computer Graphics</orgName>
								<orgName type="institution">Come11 University</orgName>
								<address>
									<postCode>14853</postCode>
									<settlement>Ithaca</settlement>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of Auckland</orgName>
								<address>
									<settlement>Auckland, New Zealand until August 1994</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">An Evaluation of Reconstruction Filters for Volume Rendering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>To render images from a three-dimensional array of sample values, it is necessary to interpolate between the samples. This paper is concerned with interpolation methods that are equivalent to convolving the samples with a reconstruction filter; this covers all commonly used schemes, including trilinear and cubic interpolation. We first outline the formal basis of interpolation in three-dimensional signal processing theory. We then propose numerical metrics that can be used to measure filter characteristics that are relevant to the appearance of images generated using that filter We apply those metrics to several previously used filters and relate the results to isosugace images of the interpolations. We show that the choice of interpolation scheme can have a dramatic effect on image quality, and we discuss the costhenefit tradeoff inherent in choosing a filter:</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Volume data, such as that from a CT or MRI scanner, is generally in the form of a large array of numbers. In order to render an image of a volume's contents, we need to construct from the data a function that assigns a value to every point in the volume, so that we can perform rendering operations such as simulating light propagation or extracting isosurfaces. This paper is concerned with the methods of constructing such a function. We restrict our attention to the case of regular sampling, in which samples are taken on a rectangular lattice. Furthermore, our analysis is in terms of uniform regular sampling, in which we have equal spacing along all axes, since the non-uniform case can be included by a simple scaling.</p><p>Given a discrete set of samples, the process of obtaining a density function that is defined throughout the volume is called interpolation or reconstruction; we use these terms interchangeably. Trilinear interpolation is widely used, for example in the isosurface extraction algorithms of <ref type="bibr">Wyvill,</ref> et. al. <ref type="bibr">[ 191,</ref><ref type="bibr">and Lorensen,</ref><ref type="bibr">et. al. [ 13,</ref><ref type="bibr">41</ref>, and in many raytracing schemes (e.g., that of <ref type="bibr">Levoy [12]</ref>). Cubic filters have also received attention: Levoy uses cubic B-splines for volume resampling, and Wilhelms and Van Gelder mention Catmull-Rom splines for isosurface topology disam-ric hard @ cs .auckland. ac .nz biguation [ 181. The "splatting" methods of Westover <ref type="bibr">[17]</ref> and Laur &amp; Hanrahan [ 111 assume a truncated Gaussian filter for interpolation, although the interpolation operation is actually merged with illumination and projection into a single fast but approximate compositing process. Carlbom <ref type="bibr" target="#b2">[3]</ref> discusses the design of discrete "optimal" filters based on weighted Chebyshev minimization. All of these schemes fall within the standard signal processing framework of reconstruction by convolution with ajlter, which is the model we use to analyze them.</p><p>The process of interpolation is often seen as a minor aside to the main rendering problem, but we believe it is of fundamental importance and worthy of closer attention. One needs to be aware of the limitations of interpolation, and hence of the images produced, which are usually claimed to represent the original density function prior to sampling. Sampling and interpolation are also basic to volume resampling, and the cost of using more sophisticated interpolation schemes may well be outweighed by the potential benefits of storing and using fewer samples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Reconstruction Theory</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Review of Fourier analysis</head><p>We will review Fourier analysis and sampling theory in two dimensions to make diagrams feasible; the generalization to three dimensions is straightforward. Some initial familiarity is assumed; introductions to this subject can be found in <ref type="bibr" target="#b5">[6]</ref> and <ref type="bibr" target="#b6">[7]</ref>.</p><p>Fourier analysis allows us to write a complex-valued function g : R2 + C as a sum of "plane waves" of the form</p><formula xml:id="formula_0">exp(i(o,x + o y y ) ) .</formula><p>Fp' a periodic function, this can actually be done with a discrete sum (a Fourier series), but for arbitrary g we need an integral:</p><p>The formula to get 2 from g is quite similar:</p><p>One intuitive interpretation of these formulae is that g(w,, oy) measures the correlation over all ( x , y ) between g and a complex sinusoid of frequency (ox, oy), and that g(x,y) sums up the values at (xly) of sinusoids of all possible frequencies (coxlq), weighted by g. We call g the Fourier transform of g, and,lgI the spectrum of g. Since the Fourier transform is invertible, g and g are two representations of the same function; we refer to g as the space domain representation, or just the signal, and 6 as the frequency domain representation. Of particular importance is that the Fourier transform of a product of two functions is the convolukon of their individual Fourier transforms, and vice versa: gh = g*h; g*h = gh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Basic sampling theory</head><p>We represent a point sample as a scaled Dirac impulse function. With this definition, sampling a signal is equivalent to multiplying it by a grid of impulses, one at each sample point, as illustrated in the top half of <ref type="figure" target="#fig_0">Figure 1</ref>.</p><p>The Fourier transform of a two-dimensional impulse grid with frequency fx in x and fy in y is itself a grid of impulses with period f x in x and fy in y. If we call the impulse grid k(x,y) and the signal g(xly), then the Fourier transform of the sampled signal, 3, is &amp;E. Since is an impulse grid, convolving g with E amounts to duplicating at every point of E, producing the spectrum shown at bottom right in <ref type="figure">Figure</ref> 1. We call the copy of g centered at zero the primary spectrum, and the other copies alias spectra.</p><p>If is zero outside a small enough region that the alias spectra do not overlap the primary spectrum, then we can recover S by multiplying gk by a function h which is one inside that region and zero elsewhere. Such a multiplication is equivalent to convolving the sampled data gk with h, the inverse transform of h. This convolution with h allows us to reconstruct the original signal g by removing, orJiltering out, the alias spectra, so we call h a reconstructionJilter. The goal of reconstruction, then, is to extract, or pass, the primary spectrum, and to suppress, or stop, the alias spectra. Since the primary spectrum comprises the low frequencies, the reconstruction filter is a low-pass filter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A -A h</head><p>It is clear from <ref type="figure" target="#fig_0">Figure 1</ref> that the simplest region to which we could limit g is the region of frequencies that are less than half the sampling frequency along each axis. We call this limiting frequency the Nyquist frequency, denoted fN, and the region the Nyquist region, denoted RN. We define an ideal reconstruction filter to have a Fourier transform that has the value one in the Nyquist region and zero outside it.'</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Volume reconstruction</head><p>Extending the above to handle the three-dimensional signals encountered in volume rendering is straightforward: the sampling grid becomes a three-dimensional lattice, and the Nyquist region a cube. See <ref type="bibr" target="#b4">[5]</ref> for a discussion of signal processing in arbitrary dimensions.</p><p>Given this new Nyquist region, the ideal convolution filter is the inverse transform of a cube, which is the product of three sinc functions: h&amp;,y,z) = ( 2 f~)~ sinc(2f~x) sinc(2f~y) sinc(2f~z).</p><p>Thus, in principle, a volume signal can be exactly reconstructed from its samples by convolving with hl, provided that the signal was suitably band-limited2 before it was sampled.</p><p>In practice, we can not implement hl, since it has infinite extent in the space domain, and we are faced with choosing an imperfect filter. This will inevitably introduce some artifacts into the reconstructed function.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Postaliasing</head><p>Postaliasing arises when energy from the alias spectra "leaks through" into the reconstruction, due to the reconstruction filter being significantly non-zero at frequencies above f~. The term postaliasing is used to distinguish the problem from prealiasing, which occurs when the signal is insufficiently band-limited before sampling, so that energy from the alias spectra "spills over" into the region of the primary spectrum. In both cases, frequency components of the original signal appear in the reconstructed signal at different frequencies (called aliases). The important distinction between the two types of aliasing is illustrated in <ref type="figure" target="#fig_2">Figure 2</ref>.</p><p>Sample frequency ripple is a form of postaliasing that arises when the filter's spectrum is significantly non-zero at lattice points in the frequency domain. The zero-frequency, or "DC," component of the alias spectra, which is very strong even for signals with little density variation, then appears in the interpolated volume as an oscillation at the sample frequency. Near-sample-frequency ripple, which occurs when filters are non-zero in the immediate vicinity of frequency domain lattice points, can also be significant.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Smoothing ("blur")</head><p>This term refers to the removal of rapid variations in a signal by spatial averaging. Some degree of smoothing is normal during reconstruction, since practical filters usually start to cut off well before f~. In image processing, excessive smoothing results in a blurred image. In volume rendering, it results in loss of fine density structure. Theoretically, smoothing is a filter defect, but in practice noisy volume data may benefit from some smoothing, since most of its fine structure is spurious. Also, smoothing is often necessary to combat the Gibbs phenomenon (see below).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Ringing (overshoot)</head><p>Low-pass filtering of step discontinuities results in oscillations, or ringing, just before and after the discontinuity; this is the Gibbs phenomenon (see for example <ref type="bibr">[14]</ref>). Severe ringing is not necessary for band-limitedness: <ref type="figure" target="#fig_3">Figure 3</ref> shows two band-limited approximations to a square wave, one generated with an ideal low-pass filter and the other with a filter that cuts off more gradually but with the same ultimate cut-off frequency. Perceptually, the latter seems refer able.^ When a signal is being sampled, we have seen that it must be band-limited if we are to reconstruct it correctly. Natural signals are not generally band-limited, and so must be low-pass filtered before they are sampled (or, equivalently, the sampling operation must include some form of local averaging). The usual assumption is that an ideal lowpass filter, cutting off at the Nyquist frequency, is optimal. However, we have just seen that such a filter causes ringing around any discontinuities, regardless of any subsequent sampling and reconstruction. If we then reconstruct the sampled signal with an ideal reconstruction filter, we will end up with exactly the filtered signal we sampled, which has ringing at the discontinuities. To avoid such problems, either the sampling filter or the reconstruction filter should have a gradual cut-off if the signal to be sampled contains discontinuities.</p><p>sharp cutoff gradual cutoff </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Anisotropy</head><p>If the reconstruction filter is not spherically symmetric, the amount of smoothing, postaliasing, and ringing will vary according to the orientation of features in the volume with respect to the filter. Anisotropy manifests itself as an asymmetry in smoothing or postaliasing artifacts; in the absence of those, anisotropy can not occur. We therefore regard anisotropy as a secondary effect, and do not measure it separately.</p><p>3 B~t the former is the optimal band-limited approximation under the L2 norm, which demonstrates the dangers of assuming that the L2 norm is always appropriate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">cost</head><p>The remaining critical issue in filter design is that of cost. Any practical filter takes a weighted sum of only a limited number of samples to compute the reconstruction at a particular point; that is, it is zero outside some finite region, called the region of support. If a filter's region of support is contained within a cube of side length 2r, we call r the radius of the filter. In this paper, we consider a range of filters of different radii. It is important to realize that larger filters are generally much more expensive: a trilinear interpolation involves a weighted sum of eight samples, while a tricubic filter involves 64. In general, the number of samples involved increases as the cube of the filter radius.</p><p>The effect of filter radius on the run time of a volume rendering program depends on the algorithm. Run times for simple ray tracing algorithms tend to increase with the cost of each density calculation, i. e., as the cube of the filter radius. Run times for splatting algorithms, which precompute the two-dimensional "footprint" of a filter, tend to increase as the square of the filter radius. Lastly, when resampling an image or volume on a new lattice that is parallel to the old lattice, separable filters (see Section 4.1) allow linear time complexity with respect to filter radius, using a multi-pass algorithm that filters once along each axis direction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Filters to be Analyzed</head><p>The filters we wish to analyze fall into two categories, separable and spherically symmetric. However, a subclass of separable filters, the pass-band optimal filters, is defined in a different way from all other filters, and is discussed separately below.</p><p>In the defining equations that follow, we use the notation [PI to be l if P is true and 0 otherwise. All but the first two of the filters below need to be normalized by a constant so that their integral over R3 is equal to one.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Separable filters</head><p>Separable filters can be written</p><formula xml:id="formula_1">h(x,y,z) = h(x) h(y) h,(z).</formula><p>Included in this category are: </p><formula xml:id="formula_2">h,(B,C)(x) = ( 1 2 -9B -6C) Ix I + if 1x1 &lt; 1, (-18 + 12B + 6C) ( X I * + (6 -2B)</formula><p>otherwise.</p><p>This family includes the well-known B-spline ( B = 1, C = 0) and Catmull-Rom spline ( B = 0, C = 0.5). We confine our attention to filters in the range ( B , C ) = (0,O)</p><p>The (truncated) Gaussian filter, which is often used in splatting algorithms for volume rendering:</p><p>to (1,l).</p><p>The cosine bell filter, which has been widely used as a window (see below) in one-dimensional signal processing <ref type="bibr">[ 13,</ref> but can also be used as a reconstruction filter in its own right:</p><formula xml:id="formula_3">h,(xm)(x) = [I4 &lt; xmI(1 +cos(7dxm)).</formula><p>Windowed sinc filters. These filters approximate the ideal sinc filter by a filter with finite support. Simply truncating the sinc at some distance leads to problems with ringing and postaliasing. Instead, the sinc is multiplied by a window function that drops smoothly to zero. This family approximates a sinc filter arbitrarily closely as the radius of the window is increased, We consider only one window, namely a cosine bell that reaches zero after two cycles of the sinc function. The defining equation of the windowed sinc is</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Spherically symmetric filters</head><p>The value of a spherically symmetric filter depends only on the distance from the origin. Such filters can be written</p><p>The two such filters we investigate are: 0 a rotated version of the cosine bell. This is simply a filter whose h, is the same as the separable version's h, above.</p><p>e a spherically symmetric equivalent of the separable windowed sinc, which we call a windowed 3-sinc. where a = r/rm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Pass-band optimal discrete filters</head><p>These filters, described by Hsu and Marzetta <ref type="bibr" target="#b7">[8]</ref> and recommended for use in volume rendering by Carlbom <ref type="bibr" target="#b2">[3]</ref>, are separable. Hence, the following discussion relates to one-dimensional interpolation; the three-dimensional filters are the products of three one-dimensional filters.</p><p>All previous filters are defined by continuous functions; for any given interpolation position, a filter is centered on the point of interest, and its values at sample points provide the weights to apply to the data points. That set of weights can be regarded as a discrete filter that resamples the input data at new sample points displaced by some fixed offset from the original sampling points. Carlbom defines an optimal interpolation filter as a set of such discrete filters, each individually optimized to minimize smoothing. For each interpolation offset, a weighted Chebyshev minimization program <ref type="bibr" target="#b18">[9]</ref> is used to obtain a discrete filter whose Fourier transform has (approximately) a minimum weighted departure from ideal up to some frequency By computing a sequence of these fixed-length optimal discrete filters for offsets in the range 0-1, and interpolating between adjacent members, we can construct an underlying continuous filter. <ref type="figure" target="#fig_5">Figure 4</ref> shows two such underlying fi1te1-s.~ The design method handles only odd-length discrete filters, and thus the underlying filters are asymmetric, unlike all other filters we study.</p><p>A problem with this approach to filter design is that postaliasing is ignored, giving filters that are (in a sense) optimal in the pass band at the expense of relatively poor performance in the stop band.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Definitions</head><p>One of our goals in this research was to obtain some quantitative measures of filter quality. As already indicated, choosing a filter requires trading off benefits and defects according to the the nature of the signal, how it was sampled, how much noise is present, how costly a filter we can tolerate, and what rendering algorithm is being used. For this reason, a single number describing the quality of a filterfor example, the L2 norm of the difference between a particular filter and the ideal filter-is not an appropriate goal. Accordingly, we define separate metrics for the most important filter qualities: smoothing, postaliasing, and overshoot (ringing).</p><p>Formally, we define our smoothing metric, S, of a filter h, to be</p><formula xml:id="formula_4">I "</formula><p>where RN is the Nyquist region, l R~l is the frequency-space volume of RN, and dV is an infinitesimal volume element in 4The discrete filters were computed using the program <ref type="bibr" target="#b18">[9]</ref>, modified as RN. We define our postaliasing metric, T, to be where The smoothing and postaliasing metrics measure the difference between a particular filter and our ideal filter inside and outside the Nyquist region respectively; the difference is measured in terms of energy. (The filter energy in a region is the integral of the square of the filter over that region.) Our overshoot metric, 0, measures how much overshoot occurs if a filter h is used to band-limit the unit step function, ps. More formally, O(h) = max(p,*h) -1, where ps is 1 if x &gt; 0 and 0 otherwise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Computation</head><p>The smoothing and postaliasing metrics are based on the three-dimensional Fourier transforms of the filters. All except the pass-band optimal filters are even functions, for which the transform simplifies to the cosine transform <ref type="bibr">[ 141:</ref> is the complement of RN.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>~(~X I % l~Z )</head><p>= For the separable filters, the transform further simplifies to the product of three one-dimensional transforms.</p><p>For spherically symmetric filters, the threedimensional integral can be simplified <ref type="bibr" target="#b1">[2]</ref> to</p><formula xml:id="formula_5">&amp;(or) = 2 /-rhr(r)sin(orr) dr. o r O</formula><p>The smoothing metric is obtained directly from its definition by numerical integration. The postaliasing metric is computed from the smoothing metric and the total filter energy. We can compute the total energy in the space domain, where the filter has finite support, since Parseval's theorem [ 141 shows that the result is the same in both space and frequency domains.</p><p>Metrics for the pass-band optimal filters were computed from the underlying continuous filters illustrated in <ref type="figure" target="#fig_5">Figure 4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Filter Testing</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">The test volume</head><p>Although numerous datasets are publicly available, we are unaware of any that are correctly sampled from some exactly known signal. This makes it difficult to evaluate reconstruction techniques, since the ultimate measure of the quality of a reconstruction is how closely it approximates the original signal. Accordingly, we use a test signal where 7cr</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>We sampled this signal on a 40 by 40 by 40 lattice in the range -1 &lt; x , y , z &lt; 1, with f~ = 6 and a = 0.25. The function has a slow sinusoidal variation in the z direction and a perpendicular frequency-modulated radial variation. With the given parameters, it can be shown that the onedimensional radial signal has 99.8% of its energy below a frequency of 10, and our analysis suggests that the spectrum of the volume as a whole is similarly band-limited. This makes it acceptable to point sample the function over the range -1 &lt; x,y,z &lt; 1 at 20 samples per unit distance. Note, however, that a significant amount of the function's energy lies near the Nyquist frequency, making this signal a very demanding filter test-all our filters show some perceptible postaliasing and smoothing. <ref type="figure" target="#fig_8">Figure 5</ref> shows a ray-traced image of the test volume's isosurface p(x,y,z) = 0.5. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Test image rendering</head><p>To demonstrate the behavior of the various filters, we display isosurfaces of reconstructed test volumes. It is important that we show the exact shape of the isosurface, including small irregularities that can be seen only with detailed shading. This means we need a gradient that corresponds exactly to the reconstructed density function. The usual schemes for rendering isosurfaces (e. g., Lorensen and Cline [ 131) approximate the gradients using central differences at sample points and then interpolate those gradients; the resulting estimate does not track small-scale changes in the isosurface orientation.</p><p>Since our reconstructed density function is the convolution of the samples with the reconstruction filter, the density gradient is the convolution of the samples with the gradient of the filter. For any differentiable filter h, we can thus obtain an exact formula for the gradient of the reconstructed function, which can be evaluated at any point in the volume.</p><p>For rendering, we use a ray tracer that displays isosurfaces of arbitrary functions by using a root-finding algorithm to locate the first crossing of the isosurface level along each ray.   <ref type="figure" target="#fig_10">Figure 6</ref> shows the smoothing and postaliasing metrics for the trilinear filter, the family of cubic filters, a range of windowed sincs, and three pass-band optimal filters. The metrics for our ideal filter would be (O,O), although, as discussed in Section 3.3, some smoothing is usually required, if only to combat overshoot.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Smoothing and Postaliasing</head><p>Cubic Filters. This family is shown in the figure as a 10 by 10 mesh. The mapping from B-C space to smoothingpostaliasing space is not one-to-one: the (1,l) corner of the mesh is "folded" over. The B-spline smoothes the most heavily, but has low postaliasing, while the Catmull-Rom spline produces much less smoothing but has poor postaliasing properties. The images in Figures 9(a) and 9(b) support these measurements: the B-spline smoothes out the large variations in the signal-the waves get shallower with increasing frequency-and the Catmull-Rom preserves the depth of the waves at the cost of aliasing, which shows up as scalloped crests.</p><p>According to our metrics, the filters along the fold should be best. However, <ref type="figure">Figure 9</ref>(c) shows the test volume reconstructed using one such filter ( B = 0.5, C = 0.85). We can see that, while the overall geometry is reproduced quite faithfully, the surface has a dimpled texture, due to nearsample-frequency ripple. The ripples, although of low amplitude, are of high frequency, and so produce large local variations in gradient, and therefore in shading. It is perhaps a limitation of our postaliasing metric that it weights leakage at all frequencies equally.</p><p>Our experience corroborates the space-domain convergence analysis of <ref type="bibr">Mitchell and Netravali [15]</ref>, which suggests that filters along the line 2C + B = 1 (which includes Catmull-Rom and B-splines as extreme cases) are among the best: we find that these filters have negligible nearsample-frequency ripple. But we see no reason in general to prefer any particular filter along that line a priori, since we must always settle for a tradeoff between smoothing and postaliasing.</p><p>(See color plates, page CP-10.)</p><p>Trilinear filter. The trilinear filter is plotted in <ref type="figure">Figure</ref> 6. It can be seen that its metrics are the same as for a cubic of approximately B = 0.26, C = 0.1. Images for these two filters are shown in <ref type="figure">Figure 9</ref>(d) and 9(e). They look similar, except that the trilinear filter introduces gradient discontinuities, which our metrics do not measure.</p><p>Windowed sinc filter. The metrics for our particular cosine-windowed sinc are shown in <ref type="figure" target="#fig_10">Figure 6</ref> for a range of radii. It can be seen from the figure that these filters are in a sense superior to the entire family of cubics, since for any cubic filter there are windowed sincs with both better postaliasing and better smoothing. However, because of their size, they are much more expensive to use than the cubics.</p><p>Also, because sample-frequency ripple is so offensive, only the labelled points are of interest, since they are the only ones for which the filter's spectrum has zeroes at the nearest lattice points (see Section 3.1).</p><p>The results for a radius of 4.78 are shown in <ref type="figure">Figure 9</ref>(f). The wave structure is free of both scalloping and excessive smoothing. (As in all the images, we must ignore the pronounced effects of filtering the discontinuous outer edge of the volume.) However, the filter's anisotropy causes significant variations in the height of the circular crests: the filter smoothes more in directions near the coordinate axes than along diagonals.</p><p>The results for a radius of 4.28 are similar, but with slightly more postaliasing. Both these filters are roughly two orders of magnitude more expensive (in an O ( 9 ) algorithm) than trilinear interpolation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pass-band optimal filters</head><p>The metrics for three different pass-band optimal filters are shown in <ref type="figure" target="#fig_10">Figure 6</ref>. As expected, their excellent pass band performance (low smoothing) is achieved at the expense of relatively poor postaliasing.</p><p>The 5-point optimal filter is wider than the cubic filters (twice the cost, in an O(?) algorithm) and the 9-point filter is comparable in cost with the windowed sinc of radius 4.78. Also, the pass-band optimal filters are more difficult to calculate and manipulate generally (e.g., to obtain gradients) than other filters, so we do not recommend them for general-purpose reconstruction. Their primary use is probably for image and volume resampling at a fixed offset when minimal smoothing is the goal.</p><p>Other filters. <ref type="table" target="#tab_3">Table 1</ref> shows the smoothing and postaliasing metrics for some representative separable Gaussian and separable cosine bell filters. From the metrics, and from several test images, we conclude that the cubics generally perform better for similar cost and are more flexible. One exception is the cosine bell of radius 1.5, which, as the metr i c~ in <ref type="table" target="#tab_3">Table 1</ref> suggest, produces images similar to a Bspline, but at a lower cost. The filter does introduce slight local gradient variations, but in many rendering contexts these would not be apparent.</p><p>We investigated a range of spherically symmetric filters. However, since the zeroes of their spectra fall on  spherical surfaces, rather than axis-aligned planes, it proved impossible to adequately reject sample-frequency ripple with filters of any reasonable cost. For very high-quality reconstruction, the isotropy of spherically symmetric windowed sinc filters could be a significant advantage. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Overshoot</head><p>Our overshoot metrics for the cubic filters are graphed in <ref type="figure" target="#fig_11">Figure 7</ref>. As discussed in Section 3.3, overshoot is primarily of concern with volumes containing inadequately smoothed discontinuities; filters with high overshoot should be avoided in such cases. <ref type="figure" target="#fig_6">Figure 8</ref> illustrates the effects of reconstructing a point-sampled cube with a B-spline, which has no overshoot, and with the cubic filter most prone to overshoot, B = 0, C = 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions</head><p>Interpolation underpins all volume rendering algorithms working from sampled signals. We have considered the family of interpolation schemes that can be expressed as convolution of a sample lattice with a filter.</p><p>The artifacts resulting from imperfect reconstruction fall into three main categories: smoothing, postaliasing, and overshoot. Since reconstruction is necessarily imperfect, choosing a filter dust involve tradeoffs between these three artifacts.</p><p>We have defined metrics to quantify the characteristics of a filter in terms of these artifacts. In general, the metrics correlate well with the observed behavior of the filters, although the postaliasing metric does not adequately address the troublesome problem of ripple in the reconstructed signal at or near the sample frequency.</p><p>Trilinear interpolation is certainly the cheapest option, and will likely remain the method of choice for time-critical applications. Where higher quality reconstruction is required, especially in the presence of rapidly varying signals, the family of cubics is recommended. Cubics offer considerable flexibility in the tradeoff between smoothing and postaliasing. For applications in which near-samplefrequency ripple could be a problem, we recommend cubics for which 2C+B = 1; otherwise, filters along the "fold" line in <ref type="figure" target="#fig_10">Figure 6</ref> are preferred.</p><p>For the most demanding reconstruction problems, windowed sincs can provide arbitrarily good reconstruction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Their large radii make them extremely expensive in O(?)</head><p>algorithms, such as ray-tracing, but they could certainly be used in an O ( r ) resampling algorithm. The radius should be chosen so that the Fourier transform is zero at the sampling frequency, in order to eliminate sample-frequency ripple.</p><p>Spherically symmetric filters tend to produce samplefrequency ripple, .and do not seem to offer any significant advantages over separable filters for most applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Future work</head><p>Although the metrics presented in this paper provide a useful guideline, we believe they can be improved. In particular, the postaliasing metric could be made more sensitive to the frequencies that produce the most objectionable artifacts.</p><p>Given the better reconstruction techniques outlined in this paper, it should be possible to represent volume data with a sparser sampling lattice. Also, using a precise definition of the reconstructed signal gives us a framework in which to evaluate errors introduced by such subsampling or other forms of data compression.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Two-dimensional sampling in the space domain (top) and the frequency domain (bottom).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Prealiasing (left) and postaliasing (right). reconstruction filters. In particular, Mitchell and Netravali [ 151 identified postaliasing, blur, anisotropy, and ringing as defects arising from imperfect image reconstruction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Band-limited square waves.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Two pass-band-optimal filters 5 Metrics for filter quality</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>described in [ 8 ]</head><label>8</label><figDesc>and (31, and with f,, values of 0.3 and 0.4 for the 5-point and 9-point filters respectively, as in [3].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>( 1</head><label>1</label><figDesc>-sin(nz/2)+a(l + p r ( d m ) ) 2 ( 1 + a ) P(.IYlZ) = I p,(r) = cos(27cf~cos(-)).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 :</head><label>5</label><figDesc>The unsampled test signal.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>"Figure 6 :</head><label>6</label><figDesc>Smoothing and postaliasing metrics.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 7 :</head><label>7</label><figDesc>Overshoot metrics for cubic filters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 8 :</head><label>8</label><figDesc>A point-sampled cube reconstructed with a B-spline (left) and with the cubic (0,l). (See color plates, page CP-10.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 1 :</head><label>1</label><figDesc>Miscellaneous separable filter metrics.</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">Practical reconstruction issuesThe image processing field, which makes extensive use of reconstruction filters for image resampling (e.g., [ 10, 16, 15]), provides a good starting point for analyzing volume 'Other definitions of an ideal filter are possible-for example, a filter *A signal is band-limited if its spectrum is zero outside some bounded h such that h is one inside a circle of radius fn. region in frequency space, usually a cube centered on the origin.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Acknowledgements</head><p>This work was supported by the NSFIARPA Science and Technology Center for Computer Graphics and Scientific Visualization (ASC-8920219). We gratefully acknowledge the generous equipment grants from Hewlett-Packard Corporation, on whose workstations the images in this paper were generated. We especially wish to thank James Durkin for providing support and motivation throughout the research.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Signal Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">G</forename><surname>Beauchamp</surname></persName>
		</author>
		<imprint>
			<pubPlace>George &amp; Allen Un</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Fourier Transforms. win Ltd</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bochner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chandrasekharan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Optimal filter design for volume reconstruction and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ingrid</forename><surname>Carlbom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization &apos;93</title>
		<imprint>
			<date type="published" when="1993-10" />
			<biblScope unit="page" from="54" to="61" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Two algorithms for the three-dimensional reconstruction of tomograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ludke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Crawford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Teeter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Medical Physics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="32" to="327" />
			<date type="published" when="1988-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Multidimensional Signal Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dan</forename><forename type="middle">E</forename><surname>Dudgeon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Russel</forename><forename type="middle">M</forename><surname>Mersereau</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984" />
			<publisher>Prentice-Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Addison Wesley</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics: Principles and Practices</title>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
	<note>2nd Edition</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rafael</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Gonzalez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wintz</surname></persName>
		</author>
		<title level="m">Digital Image Processing</title>
		<meeting><address><addrLine>Reading, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
	<note>2nd Ed</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Velocity filtering of acoustic well logging waveforms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><forename type="middle">L</forename><surname>Marzetta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE ASSP Society Digital Signal Processing Committee, editor, Programs for Digital Signal Processing</title>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="1979" />
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="265" to="274" />
		</imprint>
	</monogr>
	<note>February 1989. FIR linear phase filter design program. pages 5.1-1-5.1-13</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cubic convolution interpolation for digital image processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">G</forename><surname>Keys</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Speech, and Signal Processing</title>
		<imprint>
			<date type="published" when="1981-12" />
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="1153" to="1154" />
		</imprint>
	</monogr>
	<note>ASSP-</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Hierarchical splatting: A progressive refinement algorithm for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Laur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pat</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIG-GRAPH &apos;91 Proceedings)</title>
		<editor>Thomas W. Sederberg</editor>
		<imprint>
			<date type="published" when="1991-07" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="285" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harvey</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;87 Proceedings)</title>
		<editor>Maureen C. Stone</editor>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Continuous and Discrete Signal and System Analysis. Holt, Rinehart and Winston</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Clare</forename><surname>Mcgillem</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">George</forename><surname>Cooper</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Reconstruction filters in computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Don</forename><forename type="middle">P</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arun</forename><forename type="middle">N</forename><surname>Netravali</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;88 Proceedings)</title>
		<editor>John Dill</editor>
		<imprint>
			<biblScope unit="volume">22</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Image reconstruction by parametric cubic convolution. Computer Vision, Graphics, and Image Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Stephen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">A</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schowengerdt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="258" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Footprint evaluation for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;90 Proceedings)</title>
		<editor>Forest Baskett</editor>
		<imprint>
			<date type="published" when="1990-08" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="367" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Topological consideration in isosurface generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jane</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allen</forename><surname>Van Gelder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990-04" />
			<pubPlace>Santa Cruz</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Data structure for soft objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Wyvill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Craig</forename><surname>Mcpheeters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoff</forename><surname>Wyvill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="227" to="234" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Mcclellan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">W</forename><surname>Parks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">R</forename><surname>Rabiner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988-08" />
			<biblScope unit="page" from="221" to="228" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
