<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Direct Interval Volume Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><surname>Ament</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Weiskopf</surname></persName>
						</author>
						<title level="a" type="main">Direct Interval Volume Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:55+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Direct volume rendering</term>
					<term>interval volume</term>
					<term>isosurface</term>
					<term>ray casting</term>
					<term>preintegration</term>
					<term>scale-invariant opacity</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Member, IEEE Computer Society, and Hamish Carr, Member, IEEE isosurface modelled as interval volume standard DVR cranium modelled as interval volume isosurface modelled as interval volume standard DVR Fig. 1. Volume visualization of the head data set. The orange isosurface at the skin level is modeled as an infinitesimally thin interval volume with scale-invariant opacity. Soft tissue (green), brain (red), and dentin (blue) are classified with standard direct volume rendering (DVR). Left: the cranium (white) is also visualized with standard DVR. Opacity depends on the physical length of the ray segments, e.g. the brain area is almost transparent whereas the silhouette of the cranium is opaque. Furthermore, the tooth enamel is not visible at all. Right: the cranium (white) is modeled as an interval volume. Opacity does not depend on physical dimensions. The finite extent of the interval volume is apparent at the semi-transparent silhouette. The surface-like structures of the cranium are visible and the enamel is classified properly. An increase of the extinction coefficient in the left image could remedy these deficiencies but only at the cost of a completely opaque cranium.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Direct volume rendering (DVR) is an established method for exploring complex scalar volume data sets with applications in technical simulations, computational biology, and medicine. Isosurfaces provide a powerful tool for visualizing 2-manifold surfaces in order to analyze the geometry and topology of a scalar field but also to classify different parts of the volume into distinct subsets. There have been efforts to combine these two approaches into a unified rendering context. However, DVR fails to render isosurfaces properly due to assumptions about opacity.</p><p>A more general volumetric primitive is the interval volume <ref type="bibr" target="#b6">[7]</ref>. It describes a subset of the volume with a continuous range of scalar values, i.e. a generalized isosurface with a finite extent in physical space. It provides a versatile tool for solid fitting and for visualizing regions of uncertainty that may occur from limitations of measurement methods or from numerical inaccuracies in simulations. Furthermore, interval volumes extend the property of binary segmentation of isosurfaces to ternary segmentation, offering more sophisticated classification possibilities. An essential property of interval volumes is their ability to describe sharp isosurfaces as well as the entire volume as extreme cases. However, both isosurfaces and interval volumes are hard to render properly using DVR. In particular, oblique views of a surface are more opaque in DVR than perpendicular views: this is a consequence of the optical model of opacity assumed by DVR <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b27">28]</ref>, which scales the opacity to the thickness of the material intersected by a given ray. It has recently been shown <ref type="bibr" target="#b16">[17]</ref> that this opacity scaling can be offset by scale-invariant rendering in the domain of the function, but this model does not account properly for the infinite thinness of the isosurface, and does not model interval volumes. Our primary contribution is to unify classic DVR with scale-invariant rendering of interval volumes and isosurfaces. Our novel unified model supports the following features:</p><p>• Standard DVR with preintegration</p><p>• Finite (partial) interval volumes with scale-invariant opacity</p><p>• Sharp isosurfaces as limits of interval volumes</p><p>• Handling of multiple interval volumes and isosurfaces</p><p>Our secondary contribution addresses the balance between performance and quality. Usually, DVR operates on discrete data and requires reconstruction of samples between the elements. We adopt semi-analytic reconstruction <ref type="bibr" target="#b24">[25]</ref> to guarantee crack-free rendering.</p><p>Here, we present a faster method based on Newton polynomials to accelerate rendering and we describe a GPU implementation, capable of interactive frame rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BASIC TECHNIQUES</head><p>Since the core contribution of this work is to combine isosurfaces and interval volumes in a framework for accelerated direct volume rendering, we start with an overview of DVR, isosurface extraction, and interval volumes. We will assume for the sake of this discussion that the data set takes the form of a regular cubic sampling of a signal function s : R 3 → R. For such data, the two most common types of visualization are isosurfaces and DVR, with a third type of visualization, the interval volume, sharing some aspects of each.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Isosurfaces</head><p>Isosurfaces visualize the data by choosing a single isovalue s iso in the range of s, and constructing a surface from s −1 (s iso ), the set of all points with the value s iso . This surface is then visualized by computing the amount of light reflected from it at various points.</p><p>In practice, while it is feasible to raytrace isosurfaces directly, the availability of cheap triangle-rasterizing hardware has driven the adoption of Marching Cubes <ref type="bibr" target="#b22">[23]</ref>, which approximates an isosurface by constructing triangles separately in each cube of the input mesh. Due to the simplicity and efficacy of this method, many improvements have been suggested, as can be seen in a recent survey paper <ref type="bibr" target="#b26">[27]</ref>.</p><p>This approach has several advantages: it is very effective at visualizing data where there are natural boundaries (e.g. between tissues), it is easy to implement, and it can be made highly efficient. However, these advantages come with several drawbacks: it only ever shows one subset of the data, it shows little or no context for the object of primary interest, it frequently has problems with occlusion, and it requires an effective method for choosing a suitable isovalue.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Interval Volumes</head><p>In a partial solution to some of the drawbacks of isosurfaces, Fujishiro et al. introduced interval volumes <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. Instead of extracting surfaces of the form s −1 (s iso ), which may miss parts of a phenomenon, this approach extracts volumes of the form s −1 ([s i , s j ]): i.e. the set of points whose value falls into a range [s i , s j ].</p><p>Algorithmically, this requires extending Marching Cubes to extract the interval volume as a set of tetrahedra <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b6">7]</ref>, polyhedra <ref type="bibr" target="#b27">[28]</ref>, or α-shapes <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b9">10]</ref>. These volumes are then rendered as translucent or opaque surfaces, with details examined through focussing or clipping.</p><p>Furthermore, interval volumes can be useful for a topological approach to volume traversal, e.g. as shown by Takahashi et al. <ref type="bibr" target="#b37">[38]</ref> or in conjunction with contour trees by Weber et al. <ref type="bibr" target="#b38">[39]</ref>. These latter approaches, however, rely on DVR, which we discuss next before returning to the question of how to render isosurfaces and interval volumes with DVR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Direct Volume Rendering</head><p>In contrast to isosurfaces, which visualize with reflected light, DVR is based on transmitted light. Optical properties such as color and opacity are set for all isovalues, and the amount of light reaching the image plane at a given point is computed by integrating the optical properties along the view ray through that point with the standard volumerendering integral <ref type="bibr" target="#b12">[13]</ref>:</p><formula xml:id="formula_0">C = t 1 t 0c (s(x(t))) exp − t t 0 τ(s(x(t )))dt dt,<label>(1)</label></formula><p>wherec(s) is the transfer function that defines the color associated with each scalar value and τ(s) is the transfer function that specifies the opacity as an extinction coefficient per unit length, and t 0 ,t 1 are the bounds of integration along the view ray. Computationally, we substitute a discrete sum of n samples for this integral:</p><formula xml:id="formula_1">C ≈ n ∑ i=1C i i−1 ∏ j=1 (1 − α j ).<label>(2)</label></formula><p>By allowing different optical properties for different scalar value ranges, DVR allows us to include all of the data in the visualization, improving contextual information and reducing occlusion. However, this increased flexibility is balanced by relatively slow rendering times compared to isosurfaces. Moreover, many phenomena of practical interest involve sharp boundaries, which are easily viewed with isosurfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Isosurface DVR</head><p>Notionally, since an isosurface is a semi-transparent surface with a single isovalue, it can be rendered using DVR simply by setting that isovalue to the desired opacity and all other scalar values to 0% opacity. In practice, however, isosurfaces cannot be modeled with ordinary transfer functions since isosurfaces have an infinitesimally narrow extent in both physical and data space. High-frequency features, like Dirac peaks, in a transfer function induce severe visual artifacts when sampling with an insufficient rate to reconstruct the signal properly along the ray <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4]</ref>. Levoy <ref type="bibr" target="#b21">[22]</ref> noted this and approximated a transition of constant thickness with a gradient-dependent peak in the opacity function. This has the effect of treating the isosurface as a thin shell with varying opacity. However, the opacity still depends solely on the scalar value at the sample point. Thus, an oblique ray, which passes through many sample points, ends up having a higher opacity than a perpendicular ray. And this ends up being inconsistent with the expectation of a homogeneous surface, where the angle of view does not affect the opacity.</p><p>Gradient-dependent rendering was then advanced by Kindlmann and Durkin <ref type="bibr" target="#b13">[14]</ref> and by Kniss et al. <ref type="bibr" target="#b14">[15]</ref>, who used gradient as a second input parameter to the transfer function. While more flexible than Levoy's model, this work makes user-specified classification more difficult due to the increased number of parameters, and does not address the opacity-scaling problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Scale-invariant Opacity</head><p>The problem of varying opacity for isosurfaces in DVR was resolved by Kraus <ref type="bibr" target="#b16">[17]</ref>, who discussed the dependency of the gradient and the physical dimensions. The author demonstrated that the opacity is not invariant under the magnitude of the projected local gradient:</p><formula xml:id="formula_2">∇ t s(x) = ∇s(x) • (x 1 − x 0 ) / x 1 − x 0 .<label>(3)</label></formula><p>This means that integration of different ray segments varies according to their length in physical space, their direction, and according to the topology of the data. In fact, this means that the opacity is scaled and therefore is not entirely under the control of the user with the transfer function. Kraus showed the scaling by transforming the DVR integral from physical domain to data domain:</p><formula xml:id="formula_3">α = 1−exp − t 1 t 0 τ(s(x(t)))dt = 1−exp − s 1 s 0 τ(s) 1 ∇ t s(x)</formula><p>ds .</p><p>(4) In other words, a small magnitude of the projected local gradient in view direction increases the opacity in DVR. This is consistent with the work of Scheidegger et al. <ref type="bibr" target="#b33">[34]</ref>, who demonstrated that the gradient is relevant to the histograms commonly used for designing transfer functions, and linked their work to Federer's coarea formula <ref type="bibr" target="#b5">[6]</ref>.</p><p>Thus, instead of solving the volume rendering integral in the domain of the function, Kraus then solved in the range of the function to achieve scale invariance and isosurfaces with constant opacities:</p><formula xml:id="formula_4">α = 1 − exp − s 1 s 0 τ d (s)ds ,<label>(5)</label></formula><p>where τ d specifies attenuation per unit of scalar data. However, the model of Kraus in Equation (5) does not include interval volumes with invariant opacity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Interval Volume DVR</head><p>In a similar fashion, while it is not hard to see that interval volumes can be rendered during DVR, the details of how to capture the sharpboundary features typically represented has yet to be discussed, and it is one of the contributions of this paper that we show how to do so.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DVR OPTIMIZATION</head><p>As we have just seen, it is feasible to use DVR to render isosurfaces as part of a more complex transfer function. However, DVR has tended to be considerably slower than isosurfacing, so significant effort has been devoted to accelerating it. These approaches can be grouped into three areas: preintegration, sample reduction, and GPU acceleration, each of which focusses on a different bottleneck in the process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Preintegration</head><p>A significant bottleneck in the DVR process is that small steps along a ray, while accurate, are computationally expensive. Moreover, given the relatively small number of possible quantized scalar values and the large number of ray segments, it is inevitable that the same computation is performed many times during a single visualization. Preintegration methods <ref type="bibr" target="#b32">[33]</ref> therefore accelerate DVR by precomputing a look-up table of possible segment values, parameterized by the scalar values at each end of the segment and the length of the segment. Max et al. <ref type="bibr" target="#b25">[26]</ref> showed that linear interpolation is exact for ray traversal inside tetrahedral cells. Röttger et al. <ref type="bibr" target="#b32">[33]</ref> presented preintegration for the projected tetrahedra algorithm <ref type="bibr" target="#b34">[35]</ref>. Lum et al. <ref type="bibr" target="#b23">[24]</ref> added volume lighting to the preintegration tables, while Kraus et al. <ref type="bibr" target="#b18">[19]</ref> contributed a logarithmic scale for the length component of the preintegration table. Röttger et al. <ref type="bibr" target="#b31">[32]</ref> applied preintegration to adaptively sampled meshes, while Lederberger et al. <ref type="bibr" target="#b20">[21]</ref> extended their work to focus the computation where the volume integral changes the most. Finally, Kraus <ref type="bibr" target="#b17">[18]</ref> applied preintegration to two-dimensional transfer functions by employing summed area tables in order to reduce the prohibitive size of naïve lookup tables.</p><p>However, none of the existing preintegration methods is able to render interval volumes and isosurfaces with invariant and unscaled opacity in conjunction with classic DVR sampling, and one of our contributions is therefore to combine pre-integration with scale-invariant isosurface and interval volume DVR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Sample Reduction</head><p>While preintegration is highly effective, it relies on having a piecewise linear approximation of the interpolated function s(x) along each ray segment. Quality then depends on having short enough ray segments that the piecewise linear approximation is accurate. The second optimization therefore considers s(x) analytically to determine how many ray segments are needed. For example, Marchesin and de Verdière <ref type="bibr" target="#b24">[25]</ref> observed that for trilinear interpolation (the standard), the function s(x) is always a cubic polynomial along any ray segment inside a cubic cell. Thus, by reconstructing the cubic polynomial and detecting its local extrema, they were able to apply preintegration to obtain a high-quality approximation at relatively low cost. However, the cost of reconstructing the cubic polynomial was still significant, and the method did not account for isosurfaces or interval volumes with scale-invariant opacity.</p><p>In a similar vein, Parker et al. developed a parallel ray-tracing algorithm that employs analytical techniques to find the exact position of an isosurface inside a trilinearly interpolated rectilinear cell <ref type="bibr" target="#b30">[31]</ref> and in unstructured grids <ref type="bibr" target="#b29">[30]</ref>.</p><p>A different approach to handle sharp Dirac impulses was introduced by Knoll et al. <ref type="bibr" target="#b15">[16]</ref>. The authors analyze the transfer function for sharp peaks prior to rendering and tabulate the isovalues. During rendering, the table is queried for each segment and in case of a positive peak detection, the transfer function is evaluated at the stored isovalue. While this approach achieves isosurfaces of constant opacity, further DVR contributions within a segment are neglected, which is a source of visible artifacts close to the isosurfaces. In addition, rendering time depends on the total number of peaks within one ray segment and the model is also not able to handle interval volumes and to render volumetric primitives in a unified manner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">GPU Acceleration</head><p>The third principal acceleration to DVR is based on the massive parallelism available on GPUs. Engel et al. <ref type="bibr" target="#b4">[5]</ref> presented an implementation of preintegration on graphics hardware by rendering a stack of textured slices. By neglecting attenuation within a ray segment, the authors were able to accelerate the setup of the preintegration table with integral functions.</p><p>With the development of fast and programmable graphics hardware, ray-casting methods strongly benefit from fast texture interpolation and SIMD parallelization. Krüger and Westermann <ref type="bibr" target="#b19">[20]</ref> achieved interactive frame rates with 3D texture support. Röttger et al. <ref type="bibr" target="#b32">[33]</ref> presented a hardware-accelerated ray caster for volume rendering with accurate clipping and over-sampling. Stegmaier et al. <ref type="bibr" target="#b36">[37]</ref> developed a flexible framework with different variants of single-pass ray casting implemented on graphics hardware. The rendering of isosurfaces requires an adequate sampling rate to ensure artifact-free images. Hadwiger et al. <ref type="bibr" target="#b10">[11]</ref> employed adaptive sampling and iterative refinement with a secant method on the GPU. Recently, Singh and Narayanan <ref type="bibr" target="#b35">[36]</ref> published an adaptive marching-points algorithm that traces arbitrary algebraic surfaces up to order 50 on the GPU.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DIRECT INTERVAL VOLUME VISUALIZATION</head><p>We have just seen that scale-invariant opacity, preintegration, sample reduction, and GPU acceleration are powerful methods for making DVR a practical reality. However, these advances have been developed independently, and it yet remains to add interval volume rendering to DVR. An interval volume IV (s i , s j ) is a subset of the volume V ⊂ R 3 with the scalar field s :</p><formula xml:id="formula_5">V → R ranging from s(x) ∈ [s min , s max ] , x ∈ V .</formula><p>We adopt a similar definition from <ref type="bibr" target="#b6">[7]</ref> with:</p><formula xml:id="formula_6">IV (s i , s j ) = x : x ∈ V, s i ≤ s(x) ≤ s j , s min ≤ s i , s j ≤ s max , (6)</formula><p>where s i and s j denote the boundary scalar values of the finite closed interval s i , s j with s i ≤ s j . Based on these facts, an interval volume can be regarded as a generalized isosurface with a finite extent of s j − s i in data space. <ref type="figure" target="#fig_1">Figure 2</ref> illustrates an example of a ray traversal of two interval volumes and one isosurface in physical space. Note that the extent of the red and blue interval volume varies in physical space according to the topology of the data. </p><formula xml:id="formula_7">s 0 s 1 s iso s 2 s 3 s b DVR 0 DVR 1 DVR 2 DVR 3</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Scale-invariant Interval Volume Rendering</head><p>Once we have defined how to add interval volumes to DVR, the next stage is to add scale-invariant opacity. We derive our approach from an isosurface with isovalue s iso and a transfer function in data space modeled with a delta-distribution:</p><formula xml:id="formula_8">τ d (s) = κ • δ (s − s iso ),<label>(7)</label></formula><p>where κ is a scaling coefficient for the extinction of the isosurface. Delta-distributions can be formulated as the limit of a sequence of test functions <ref type="bibr" target="#b8">[9]</ref>. We use the test function:</p><formula xml:id="formula_9">δ ε (s) = 1 ε , |s| ≤ ε 2 0, else.<label>(8)</label></formula><p>Then, the optical depth χ of the isosurface is:</p><formula xml:id="formula_10">χ(s iso ) = lim μ→0 s iso + μ 2 s iso − μ 2 τ d (s)ds = lim μ→0 lim ε→0 s iso + μ 2 s iso − μ 2 κ • δ ε (s − s iso )ds ,<label>(9)</label></formula><p>where we inserted the transfer function from Equation <ref type="formula" target="#formula_8">7</ref>. For a finite interval [s i , s j ] with Δs = s j − s i , we set μ, ε → Δs in Equation <ref type="formula" target="#formula_10">9</ref>and obtain the optical depth of the interval volume:</p><formula xml:id="formula_11">χ([s i , s j ]) = s iso + Δs 2 s iso − Δs 2 κ(s)δ Δs (s − s iso ) ds = s j s i κ(s) 1 s j − s i ds,<label>(10)</label></formula><p>with</p><formula xml:id="formula_12">s i = s iso − Δs 2 , s j = s iso + Δs 2 .</formula><p>We generalized the former scaling coefficient κ to a function κ(s). This novel model is subtly different from Kraus' model according to Equation (5) because our integral in Equation <ref type="formula" target="#formula_11">10</ref>is invariant under changes of the interval boundaries [s i , s j ] and only depends on changes of κ(s). At the same time our model is also independent of physical dimensions as opposed to DVR in Equation (4), i.e. the sampling distance in physical space is not part of our model. From the derivation it follows that our model converges to Kraus' method in the limit of isosurfaces for s j → s i . However, our approach has a significant advantage when it comes to our unified model, where we need to split the volume-rendering integral into distinct parts, which is problematic at isosurfaces.</p><p>For isosurfaces, scale-invariance in data space is trivially obtained because of the inifinitesimally narrow extent in data space. Interval volumes have a finite extent in physical space and in data space. The model that we have introduced so far is independent of physical dimensions but not of data dimensions. Depending on the ray samples s inside an interval volume, the distance traversed in data space may vary significantly between two different rays traversing the same interval volume. We achieve scale-invariance in data space by introducing a monotonic data model for the interval volume [s i , s j ]. In particular, we select a linear model s(ω) = (1 − ω)s i + ωs j , which is the antiderivative of 1/δ Δs . The optical depth then becomes:</p><formula xml:id="formula_13">χ([s i , s j ]) = 1 0 κ(s(ω)) 1 s j − s i ds dω dω = 1 0 κ((1 − ω)s i + ωs j )dω.<label>(11)</label></formula><p>We denote the new extinction coefficient in normalized interval space with τ n and obtain the opacity for the interval volume IV (s i , s j ) with:</p><formula xml:id="formula_14">α (s i ,s j ) IV = 1 − exp − 1 0 τ n ((1 − ω)s i + ωs j )dω ≈ 1 0 τ n ((1 − ω)s i + ωs j )dω. (12)</formula><p>Thus, our model is also able to integrate isosurfaces (s i = s j ) without facing singularities. The emissive color of an interval volume is obtained with a similar derivation as the opacity in Equation <ref type="bibr" target="#b11">(12)</ref>. The color becomes:</p><formula xml:id="formula_15">C (s i ,s j ) IV = 1 0c n ((1 − ω)s i + ωs j )dω × exp − ω 0 τ n ((1 − ω )s i + ω s j )dω dω ≈ 1 0c n ((1 − ω)s i + ωs j )dω. (13)</formula><p>To simplify calculations, we neglect self-attenuation (as in the approximation of Equation <ref type="formula">13</ref>) and consider an interval volume as a generalization of a slab, known from postclassified volume rendering <ref type="bibr" target="#b4">[5]</ref>. <ref type="figure" target="#fig_2">Figure 3</ref> shows how our transfer function is modeled for the three intervals from <ref type="figure" target="#fig_1">Figure 2</ref>. Unlike isosurfaces, finite interval volumes allow partial traversals in data space and therefore require special attention. In the following, we assume s i = s j , as partial traversals are not defined for isosurfaces. We model the partial character of an interval volume with the traversed min-max distance in data space of a ray. For example, in <ref type="figure" target="#fig_1">Figure 2</ref> only half of the blue interval IV (s 2 , s 3 ) is traversed in data space, assuming</p><formula xml:id="formula_16">s s 0 s 1 s 2 s 3 s iso 0 1 α iso ω 0 1 α b ω α r ω 0 1 τ (s(ω)) n DVR 0 DVR 1 DVR 2 DVR 3 τ(s) τ (s(ω)) n τ (s(ω)) n</formula><formula xml:id="formula_17">s b = s 2 + 1 /2 • (s 3 − s 2 ).</formula><p>In the following, we assume a ray segment with front sample s f and back sample s b with s f &lt; s b that passes a connected component of an interval [s i , s j ] in physical space. In general, we define the minimum and maximum:</p><formula xml:id="formula_18">s (s i ,s j ) min = min(s(x(t))), s (s i ,s j ) max = max(s(x(t)))<label>(14)</label></formula><p>for this connected component with s(</p><formula xml:id="formula_19">x(t)) ∈ [s i , s j ].</formula><p>We measure the min-max distance in normalized interval space with:</p><formula xml:id="formula_20">d n (s i , s j ) = s (s i ,s j ) max − s (s i ,s j ) min s j − s i , s i = s j .<label>(15)</label></formula><p>This implies that the connected component of the ray covers the subinterval</p><formula xml:id="formula_21">[s min , s max ] ⊆ [s i , s j ] if s(x(t)) ∈ C 0</formula><p>, which is always the case for uniform grids and trilinear interpolation. With this premise, the generalization of Equations <ref type="bibr" target="#b11">(12)</ref> and <ref type="bibr" target="#b12">(13)</ref> to partial finite intervals yields:</p><formula xml:id="formula_22">α (s i ,s j ) IV d n (s i ,s j ) 0 = d n (s i ,s j ) 0 τ n ((1 − ω)s i + ωs j )dω,<label>(16)</label></formula><formula xml:id="formula_23">C (s i ,s j ) IV d n (s i ,s j ) 0 = d n (s i ,s j ) 0c n ((1 − ω)s i + ωs j )dω.<label>(17)</label></formula><p>Note that if s f &gt; s b the integration limits change to</p><formula xml:id="formula_24">1−d n (s i ,s j ) 1</formula><p>in Equations <ref type="bibr" target="#b15">(16)</ref> and <ref type="bibr" target="#b16">(17)</ref>. With this model, the opacity of partial traversals increases with the width of the traversed subinterval, i.e. d n (s i , s j ).</p><p>As noted in Section 3.2, most DVR is done under the assumption of trilinear interpolation, and the signal function s(x) is therefore a cubic polynomial along the ray segment in each cell of the mesh. Marchesin and de Verdière <ref type="bibr" target="#b24">[25]</ref> showed how to exploit this by finding the coefficients of the cubic polynomial from eight samples along the ray. We observe that in fact, a cubic polynomial is fully determined by any four samples, and can be done most efficiently with polynomials in Newton form:</p><formula xml:id="formula_25">n(λ ) = k ∑ i=0 a i N i (λ ), N i (λ ) = i−1 ∏ j=0 (λ − λ j ),<label>(18)</label></formula><p>with Newton basis polynomials N i . We traverse the uniform grid at the cell faces with a digital differential analyzer (DDA) algorithm <ref type="bibr" target="#b0">[1]</ref> and take 4 equidistant samples in each cell as illustrated in <ref type="figure" target="#fig_3">Figure 4</ref>. With this representation of the signal, at most two local extrema are calculated analytically and the signal is approximated with at most three linear subsegments connecting the extrema in each cell. In this way, it is guaranteed that the signal is sufficiently reconstructed for crack-free isosurfaces and interval volumes.</p><formula xml:id="formula_26">t s( (t)) x t f t b t 1 t 2 x(t) λ 0 1 1 3 2 3 k k+1 k+2</formula><p>A uniform sampling distance Δd = 1 /3(t b − t f ) in the cell leads to:</p><formula xml:id="formula_27">s f = s 0 = s(x(t f = t entry )),<label>(19)</label></formula><formula xml:id="formula_28">s 1 = s(x(t 1 = t entry + Δd)),<label>(20)</label></formula><formula xml:id="formula_29">s 2 = s(x(t 2 = t entry + 2 • Δd)),<label>(21)</label></formula><formula xml:id="formula_30">s b = s 3 = s(x(t b = t exit )).<label>(22)</label></formula><p>Assuming a local parameter λ ∈ [0, 1] in the cell leads to λ 0 = 0, λ 1 = 1 /3, λ 2 = 2 /3 and to the computation of the divided differences:</p><formula xml:id="formula_31">d 01 = 3(s 1 − s 0 ), d 12 = 3(s 2 − s 1 ), d 23 = 3(s 3 − s 2 ),<label>(23)</label></formula><formula xml:id="formula_32">d 012 = 3 2 (d 12 − d 01 ), d 123 = 3 2 (d 23 − d 12 ),<label>(24)</label></formula><formula xml:id="formula_33">d 0123 = d 123 − d 012 .<label>(25)</label></formula><p>The coefficients a i in Equation (18) then become:</p><formula xml:id="formula_34">a 0 = s 0 , a 1 = d 01 , a 2 = d 012 , a 3 = d 0123 . (26)</formula><p>When the reconstruction is done, at most 2 local extrema are calculated analytically with the derivative of the polynomial and the quadratic formula. The local extrema serve as connecting points for a linear approximation of the polynomial as illustrated with the black subsegments in <ref type="figure" target="#fig_3">Figure 4</ref>. At these points, the signal is evaluated efficiently with Horner's scheme <ref type="bibr" target="#b11">[12]</ref>.</p><p>In the DDA traversal loop of each ray, the back sample s k b of cell k is forwarded to the next cell k + 1 and serves as input for the front sample s k+1 f = s k b , which effectively reduces the number of samples to 3 for each cell. Furthermore, according to Equations (23)- <ref type="bibr" target="#b24">(25)</ref>, the divided differences require only five multiplications and six subtractions, which is a significant improvement over the original algorithm <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">INTERVAL VOLUME ALGORITHM</head><p>Having unified the three forms of rendering and shown how to accelerate ray segment computation, we now state an algorithm that implements our model, i.e. we show how rendering is performed with ray casting. We combine our cell-based ray traversal and reconstruction method from Section 5 with data-driven integral splitting to a consistent algorithm. Prior to rendering, two precomputation steps are required. First we analyze the transfer function for interval volumes and build a 2D lookup table, similar to a 2D preintegration table, which is discussed at the end of this section. Second, we preintegrate the transfer function according to our unified model, which is described in detail in Section 6.3. In Algorithm 1 we show the ray-casting loop for one pixel. The outer loop traverses the grid with a DDA algorithm and reconstructs the polynomial in each cell. The local extrema of the cubic polynomial are computed analytically and lead to at most 3 linear subsegments per cell. The inner loop traverses the depth-sorted subsegments and passes them to a second algorithm that is discussed subsequently. After returning from the call, the modified subsegments are used to lookup the color and opacity from the 3D preintegration table of this subsegment. At the end of both loops, colors are composited according to DVR and Equation (2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Ray Traversal and Compositing</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Interval Volume Traversal</head><p>Calling Algorithm 2 would not be necessary if interval volumes and isosurfaces were completely traversed by one of the previously noted linear subsegments because the splitting and the choice of integration is handled during preintegration. However, if an interval volume spreads over more than one subsegment, the traversal must be modified to ensure consistence. According to our model in Equations <ref type="bibr" target="#b11">(12)</ref> and <ref type="bibr" target="#b12">(13)</ref> for interval volumes, a monotonic traversal in data space is required to implement our approach. <ref type="figure">Figure 5</ref> illustrates a ray traversal in data space with five subsegments crossing two interval volumes and one isosurface. The red and blue highlighted parts of the subsegments show the contributions to the interval-volume integrals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>t s( (t))</head><p>x</p><formula xml:id="formula_35">s iso s 0 s 1 s 2 s 3 s b 0 1 ¾ 1 0 ½ 1 2 3 4 5</formula><p>Fig <ref type="figure">. 5</ref>. Traversal of two interval volumes and one isosurface with five linear subsegments. The red interval is traversed by the first three subsegments but only the red parts contribute to the integral. The gray shaded parts violate monotonicity and do not contribute. After the green isosurface is passed, the blue interval is partially traversed. Similar as before, only the blue part of the subsegment contributes.</p><p>The purpose of Algorithm 2 is to modify the subsegments from Algorithm 1 to obtain monotonicity inside interval volumes but to maintain unmodified traversal for the DVR parts. For each data segment (s f , s b ), our 2D interval table stores a pair of values:   <ref type="figure" target="#fig_1">(s 1st , s 2nd )</ref> according to the cases in Equation <ref type="bibr" target="#b26">(27)</ref>. We found a resolution of 256 × 256 for 8-bit data sets to be sufficient with table generation close to real-time. </p><formula xml:id="formula_36">(s 1st , s 2nd ) = ⎧ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎨ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎪ ⎩ (s out , s</formula><formula xml:id="formula_37">s i , s out ), if s f ∈ [s i , s j ], s b / ∈ [s i , s j ], s f &gt; s b or s f / ∈ [s i , s j ], s b ∈ [s i , s j ], s f &lt; s b (s j , s out ), if s f ∈ [s i , s j ], s b / ∈ [s i , s j ], s f &lt; s b or s f / ∈ [s i , s j ], s b ∈ [s i , s j ], s f &gt; s b (s j , s k ), if s f ∈ [s i , s j ], s b ∈ [s k , s l ] (s k , s j ), if s f ∈ [s k , s l ], s b ∈ [s i , s j ],<label>(27)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Interval Volume Preintegration</head><p>Since our rendering integral is based on more terms than previous methods, we must also extend preintegration methods to handle more complex inputs. For each segment in physical space (s f , s b , d), we therefore split the volume rendering integral into: DVR, interval volumes, and sharp isosurfaces.</p><p>We integrate DVR parts of the segment with common methods and switch to our visualization model for interval volumes and isosurfaces. However, if an interval spreads over multiple segments, DVR compositing, as employed in Algorithm 1, introduces attenuation and biases the final opacity of the interval opposed to a single-segment solution. For example, the monotonic traversal of the red interval in <ref type="figure">Figure 5</ref> consists of the two highlighted segments. According to our model, the opacity of the red interval is calculated with Equation <ref type="formula">12</ref>and (s i , s j ) = (s 0 , s 1 ). Without correction, preintegration would yield:</p><formula xml:id="formula_38">α := α (s 0 ,s 1 ) IV 3 /4 0 and α := α (s 0 ,s 1 ) IV 1 3 /4 .<label>(28)</label></formula><p>Standard compositing leads to:</p><formula xml:id="formula_39">α = α + 1 − α α = α (s 0 ,s 1 ) IV = α + α .<label>(29)</label></formula><p>For correct final opacities of interval volumes, we compensate DVR compositing at the preintegration stage with:</p><formula xml:id="formula_40">α = 1 1 − α • α .<label>(30)</label></formula><p>Now, the expected opacity is obtained:</p><formula xml:id="formula_41">α (s 0 ,s 1 ) IV = α + 1 − α α = α (s 0 ,s 1 ) IV 3 /4 0 + α (s 0 ,s 1 ) IV 1 3 /4 .<label>(31)</label></formula><p>In the same fashion, we correct opacities of all segments that start inside an interval at preintegration stage. In this way, we can seamlessly incorporate our interval volume model into DVR compositing and 3D preintegration. . Two cell renderings from three different viewpoints with a comparison of the different models for a green interval volume surrounded by a blue and red isosurface. The top row is rendered with DVR and shows varying opacities with visible artifacts at the transition of the two cells. The right images depict two problems in DVR: first, without signal reconstruction a crack occurs from improper sampling. Second, although reconstruction resolves the crack, the bending of the interval volume is occluded because opacity has accumulated too much. The bottom row is rendered with our model for interval volumes and has scale-invariant opacity. The cell-transition is smooth in the left renderings and the bending is clearly visible in the right image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.4">Interval Volume Clipping</head><p>Volume clipping <ref type="bibr" target="#b39">[40,</ref><ref type="bibr" target="#b40">41]</ref> is a powerful tool to uncover important details of a data set. Previously <ref type="bibr" target="#b6">[7]</ref>, interval volumes served as a primitive to explore a cross section of a volume with a clipping plane.</p><p>Standard DVR fails to render this cross section properly with scaleinvariant opacity. Enclosing the interval with isosurfaces only, as an alternative, lacks thorough classification of the encapsulated volume.</p><p>Clipping an interval volume is equivalent to starting integration inside the interval. We utilize our model for rendering clipped interval volumes, but render the entire interval range instead of using partial traversals because clipping may lead to varying min-max distances of adjacent rays, depending on the sign of the derivative in data space of the first segment. With this premise, we extend our algorithm by setting the derivative to be positive and render the entire range of the interval for the first segment in the case of clipping. In this way, clipped cross sections always appear with constant opacity according to the entire interval.</p><p>In order to detect a clipped interval volume, we extend the range of our interval table</p><formula xml:id="formula_42">from [s min , s max ] × [s min , s max ] to [s min−1 , s max+1 ] × [s min−1 , s max+1 ].</formula><p>With this extension, we test if the first sample s of a ray is inside an interval with two lookups (s, s min−1 ) and (s, s max+1 ).</p><p>The results are either (s i , s out ) and (s j , s out ), if the sample is inside an interval [s i , s j ] or both times (s out , s out ), if the sample is outside.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">IMPLEMENTATION</head><p>We implemented our interval volume algorithm on the GPU with CUDA for per-pixel ray traversal and with OpenGL for final display. Before rendering, we preintegrate our transfer function according to Section 6.3 on the CPU and store the result in a 3D float4 texture with a resolution of 256 × 256 × 32 and a logarithmic scale for the segment length <ref type="bibr" target="#b18">[19]</ref>. In addition, we buildup our interval table by analyzing the 1D transfer function according to Section 6 and tabulate the result in a 2D float2 texture. We also employ empty space skipping with a coarse binary representation of the volume in an additional 3D uchar1 texture that signals if a brick is empty or not, depending on the current transfer function.</p><p>We pass a pixel buffer object from OpenGL to CUDA, that holds the final RGBA values for each processed ray and that is used to generate a screen sized textured quad for displaying the rendered image. Our grid traversal consists of two DDA algorithms. The outer loop processes the coarse empty space skipping volume to accelerate rendering. When a non-empty brick is detected, the inner DDA loop traverses the actual volume data according to Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">RESULTS</head><p>We present results from our implementation on standard PC hardware.</p><p>Our system consists of a 2.33GHz Intel Core2 Q8200 CPU, 4GB of main memory, and an NVIDIA GeForce 9800GT graphics card with 512MB of video memory. All images and performance results were obtained with a resolution of 1024 2 pixels. We demonstrate the quality and performance of our accelerated reconstruction method with comparisons to the original implementation <ref type="bibr" target="#b24">[25]</ref>. We employ an artificial data set of two cells to show the benefits of our contributions by rendering multiple tightly located interval volumes, isosurfaces, and DVR features at high magnifications. Furthermore, we evaluate our model with the real-world data sets from <ref type="table" target="#tab_1">Table 1</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Reconstruction</head><p>Our reconstruction algorithm from Section 5 employs the GPU's texture unit for trilinear interpolation of three samples per cell. In contrast to explicit interpolation <ref type="bibr" target="#b24">[25]</ref> on the GPU with eight samples, we are dependent on the precision of trilinear filtering of the texture unit, but benefit from exclusive performance boosts. We compare the image quality and the performance of both methods to demonstrate the usefulness of our approach. <ref type="figure" target="#fig_8">Figure 7</ref> shows two images with multiple isosurfaces in a small artificial data set of two cells. Both images are split diagonally, to show the differences of quality. The upper left part is a rendering with our method, the lower right part with explicit interpolation respectively. The close-ups show that the silhouettes of the isosurfaces of our method are not exactly as smooth as the reference implementation. Explicit interpolation on the GPU benefits from single or even double precision and is more accurate than texture filtering, which is primarily used for rendering, not numerics. Although CUDA supports 32-bit float textures, the weights of trilinear filtering are stored in a 9-bit fixed point format with 8 bits of fractional value, hence numerical precision is bounded accordingly.</p><p>However, we benefit from the performance of the dedicated texture unit. In <ref type="table" target="#tab_1">Table 1</ref>, we present performance measurements for various data set sizes. We employ rendering times for DDA-based sampling, i.e. only at the cell faces with no reconstruction, as a basic reference. The comparison of both reconstruction methods shows that the overall performance is about twice as high for trilinear filtering than for explicit interpolation. Considering that only few voxels are close enough to the camera to notice the difference in quality, trilinear filtering is a reasonable alternative for a vast majority of the voxels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Interval Volume Rendering</head><p>We present results for multiple scenarios with our unified model. First, we demonstrate the quality of isosurface rendering. <ref type="figure" target="#fig_8">Figure 7</ref> depicts a small data set of two cells with multiple isosurfaces. In the left image, integration is performed in physical space with standard DVR. The isosurfaces are modeled with sharp peaks in the transfer function. It can be observed that opacity is not invariant on the surfaces. For example, at the transition of both cells, opacity depends on the local gradient, which leads to a noticeable bend. In contrast, the right image depicts the same isosurfaces with integration in normalized interval space. Opacity is homogeneous throughout the entire surface.</p><p>Rendering of a finite interval volume is shown in <ref type="figure" target="#fig_7">Figure 6</ref> from three different viewpoints with the same data set as in <ref type="figure" target="#fig_8">Figure 7</ref>. The top row depicts renderings with DVR and varying opacities leading to noticeable artifacts. Without signal reconstruction, improper sampling leads to a visible crack in the structure. The right image incorporates reconstruction but the bending of the interval volume is oc-cluded because opacity depends on the length of the ray segment and has summed up to an almost opaque value. The renderings in the bottom row employ our scale-invariant model for interval volumes. The transitions are smooth and the bending of the interval is clearly visible because opacity remains independent of the length in physical space.</p><p>Beyond artificial examples, we demonstrate our model in <ref type="figure">Figure 8</ref> with the head data set. In the left image, the skull is classified with a constant white interval volume and the surrounding tissue with blue and orange DVR contributions. The series of smaller images depict an imitation of the same adjustment, but with DVR only and by modeling the interval with a local support in the physically-based transfer function. Compared to our model, the DVR examples are not able to visualize the structure of the skull properly while keeping a certain amount of transparency. With our model, the brain area is clearly visible because the intersecting rays traverse the entire interval volume twice in the front and in the back of the cranium. This results in a higher opacity compared to the silhouette. In the latter case, the intersecting rays traverse only parts of the interval and obtain a lower opacity, similar to the first DVR example. Our model shows the surface-like character of an interval volume with proper classification of the cranium, opposed to the DVR samples.</p><p>In <ref type="table" target="#tab_1">Table 1</ref>, we illustrate the impact on performance of our algorithm. We compare our unified model with standard DVR to show the additional expense. The most expensive part of our algorithm is the lookup in the interval table to determine if monotonic traversal is necessary or not. The result from the table is used to decide what part of the current segment may contribute to the final color. For the data sets used in our experiments, performance dropped about 20%-30% compared to standard DVR.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION AND DISCUSSION</head><p>We have introduced a unified model for high-quality rendering of generalized isosurfaces and standard direct volume rendering. Our algorithm implements efficient signal reconstruction, guaranteeing absence of cracks and artifacts caused by improper sampling. Our model renders sharp isosurfaces in the limit of an infinitesimally narrow interval by solving the volume-rendering integral in normalized interval 2x interval volume traversals partial interval volume traversal <ref type="figure">Fig. 8</ref>. Multiple renderings of the head data set. The left image shows a rendering with our model. The skull is classified with a constant white interval volume, depicted in the transfer function with the white box. In addition, two DVR contributions classify surrounding tissue. The structure of the skull is clearly visible with proper classification. The right series of images depicts the same interval volume, but modeled with DVR. The physically-based extinction coefficient of the interval is constantly increased, but either opacity is too small in the foreground or too high at the silhouette of the skull.</p><p>space. We have implemented scale-invariant opacity for finite intervals, reflecting the closeness to sharp isosurfaces and offering the possibility to classify uncertainty in volume data precisely, independent of physical dimensions. Partial traversals are modeled with the minmax distance that a ray traverses in data space which is related to DVR with distance dependent opacity in physical space. Our algorithm is designed for preintegrated direct volume rendering and is suited for efficient GPU processing, capable of interactive frame rates.</p><p>Our acceleration technique for reconstructing the signal shows significant performance improvements compared to explicit interpolation. However, we demonstrated minor limitations concerning the highest possible quality on current graphics hardware, due to the low precision of trilinear interpolation of the texture unit. Future GPU generations might remedy this issue with high-precision filtering, while still being faster than explicit interpolation on the SIMD units. Another strategy could account for view dependency, employing precise interpolation for voxels close to the camera and fast but less accurate filtering for distant cells.</p><p>The visual appearance of isosurfaces in DVR has been the topic of several previous works. A common element of discussion is the dependency of the local gradient and the physical dimensions. In this context, this means that the topology of the data and the sampling distance influence the color and the opacity of an isosurface, which is inconsistent with the results from ray tracing of implicits or from mesh-based rendering methods. In the following, we discuss related works and how we generalized these methods to interval volumes.</p><p>Levoy <ref type="bibr" target="#b21">[22]</ref> used the gradient to render antialiased isosurfaces with a constant thickness of the transition region in physical space that a ray traverses to calculate the opacity and to achieve homogeneous coloring. Although the method renders isosurface-like primitives with a finite yet typically small extent, the desired thickness is defined in physical space and does not reflect the topology of the surrounding data. In contrast, an interval volume defines a finite, often wide, extent in data space that classifies a subset of the volume that is usually not of equal thickness in physical space. Compared to Levoy, our contribution is a method to render data-driven finite intervals with varying dimensions in physical domain but with visual properties close to the ones of isosurfaces.</p><p>Kraus <ref type="bibr" target="#b16">[17]</ref> formulated the volume-rendering integral in data space. Isosurfaces have an infinitesimally narrow extent in data space, hence an integration in this domain always leads to the same opacity and to a homogeneous appearance because data is always constant within an isosurface. For interval volumes, the situation is different because data varies inside an interval volume as a ray traverses it in physical domain, which means that the opacity depends on the path length in data space. This variation in opacity is not controllable by the user as it depends on the point of view and on the topology of the data, leading to an inhomogeneous appearance of the interval volume and possible occlusion important details in the background. We solve this issue with our linear data model for interval volumes and normalize the path length to 1 in interval domain. In this way, we achieve invariant opacity for completely traversed interval volumes and we can model partial traversals consistently with a simple distance in interval space.</p><p>Furthermore, opacity is not invariant in Kraus' model when scaling interval boundaries in the transfer function. For example, the extinction coefficient is scaled with the interval width in data space s j − s i , when assuming a constant transfer function. We address this problem with our rendering model derived from scale-invariant isosurface rendering. We span a finite interval from a Dirac peak with a sequence of rectangle functions to maintain invariance with respect to boundary scaling. In this way, color and opacity only depend on the shape of the transfer function.</p><p>Both previous models are designed to render different target images, each for a specific task. They provide valuable tools for volume exploration and isosurface rendering. Yet, we have demonstrated how these models can be advanced to offer a novel visualization technique that is capable of extending current classification methods.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>•</head><label></label><figDesc>M. Ament and D. Weiskopf are with VISUS (Visualization Research Center), Universität Stuttgart, Allmandring 19, 70569 Stuttgart, Germany. E-mail: {marco.ament,weiskopf}@visus.uni-stuttgart.de. • H. Carr is with the School of Computing, University of Leeds, Leeds, LS2 9JT, United Kingdom. E-mail: h.carr@leeds.ac.uk. Manuscript received 31 March 2010; accepted 1 August 2010; posted online 24 October 2010; mailed on 16 October 2010. For information on obtaining reprints of this article, please send email to: tvcg@computer.org.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Ray traversal of three interval volumes with varying physical dimensions. The red interval IV r (s 0 , s 1 ) is entirely traversed in data space, i.e. the whole range [s 0 , s 1 ]. The green interval IV iso (s iso , s iso ) is a sharp isosurface. The blue interval IV b (s 2 , s 3 ) is only partially traversed in data space, i.e. [s 2 , s b ]. In addition, the ray traverses four DVR segments.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>The DVR transfer function τ is split at interval boundaries. The black DVR parts are specified in the usual manner. The colored intervals are described in their own normalized interval space with τ n .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Traversal of a uniform grid with DDA. The trilinearly interpolated red samples in cell k are used to reconstruct the red cubic polynomial.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Algorithm 1</head><label>1</label><figDesc>Rendering method for each pixel c = 0 {pixel color and opacity} for all DDA segments k of eye ray do if k is first segment then Take sample s 0 at start of segment k else s 0 = s 3 end if Take equidistant samples s 1 , s 2 , s 3 in segment k {Fig. 4} Reconstruct coefficients a 0 , a 1 , a 2 , a 3 {Eqn. (23)-(26)} Analytically compute first derivative of cubic polynomial n(λ ) Analytically compute the roots R of quadratic polynomial n (λ ) Compute sorted set of linear subsegments S with |S | = |R| + 1 c k = 0 {segment color and opacity} for all linear subsegments (λ f , λ b ) in S do s f = n(λ f ) s b = n(λ b ) d = physicalLength(λ f , λ b ) (s f , s b , d) = Algorithm2(s f , s b , d) c f b = tex3D(PreIntegrationTableTex, s f , s b , d) Compositing of subsegment color c f b and segment color c k end for Compositing of segment color c k and pixel color c end for</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>out ), if s f and s b are not in any interval (s in , s in ), if s f and s b are in common interval (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Algorithm 2</head><label>2</label><figDesc>Interval volume traversal in linear subsegment (s f , s b , d) Require: global variable mono as +/-/off flag for monotonic traversal Require: global variable s thres as monotonicity threshold Require: constant variable s out set to out-of-range value (s 1st , s 2nd ) = tex2D(IntervalVolumeTableTex, s f , s b ) if s 1st == s out and s 2nd == s out then {s f , s b outside interval} return (s f , s b , d) else if (s f , s b ) violates monotonicity with respect to s thres then Compute monotonic part (s f ,s b ,d) of this subsegment (s f , s b , d) = (s f ,s b ,d) end if s thres = s b if s 1st != s out and s 2nd == s out then {subsegment crosses s 1st } if mono != off then {subsegment leaves interval} mono = off else {subsegment enters interval} mono = sgn(s b − s f ) end if else if s 1st != s out and s 2nd != s out then {s f , s b in distinct intervals} if sgn(s b − s f ) != sgn(mono) then mono = !sgn(mono) end if end if return (s f , s b , d) end if</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 6</head><label>6</label><figDesc>Fig. 6. Two cell renderings from three different viewpoints with a comparison of the different models for a green interval volume surrounded by a blue and red isosurface. The top row is rendered with DVR and shows varying opacities with visible artifacts at the transition of the two cells. The right images depict two problems in DVR: first, without signal reconstruction a crack occurs from improper sampling. Second, although reconstruction resolves the crack, the bending of the interval volume is occluded because opacity has accumulated too much. The bottom row is rendered with our model for interval volumes and has scale-invariant opacity. The cell-transition is smooth in the left renderings and the bending is clearly visible in the right image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 7 .</head><label>7</label><figDesc>Rendering of two cells with multiple isosurfaces. Both images compare the quality of our accelerated reconstruction (upper left) with the explicit reconstruction (lower right). The smaller images depict magnifications of the silhouettes, outlined in white. Left image: isosurfaces are modeled with standard DVR. Opacity is not invariant and depends on the local gradient, visible at the cell transition and in the right corner. Right image: isosurfaces are modeled with interval volumes and constant opacity.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>where s out and s in are dummy values out of the legal signal range. If both data points s f , s b are outside, Algorithm 2 returns immediately without modification. In all other cases, violence of monotonicity is checked and, if necessary, a monotonic subpart of the segment is computed with the help of the interval boundaries from the table, the direction (+/-) of monotonicity, and with a continuously updated threshold variable s thres . Depending on the different cases in Algorithm 2, the direction of monotonicity is updated accordingly and the modified segment is returned to Algorithm 1 for rendering.The construction of the 2D interval table involves an analysis of the transfer function before rendering in the same manner like preintegration and the table must be recalculated when the transfer function changes. For each data segment (s f , s b ), we loop over all intervals that lie in between and tabulate a pair of values</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Rendering performance in frames per second with varying reconstruction method (none, explicit, ours) and model (DVR only, DVR and IV) for different data sets. All performance measurements employ empty space skipping and early ray termination with a screen resolution of 1024 2 pixels.</figDesc><table><row><cell>Data Set</cell><cell>No Rec. DVR (fps)</cell><cell>Expl. Rec. DVR (fps)</cell><cell>Our Rec. DVR (fps)</cell></row><row><cell></cell><cell>DVR+IV (fps)</cell><cell>DVR+IV (fps)</cell><cell>DVR+IV (fps)</cell></row><row><cell>Aneurism64</cell><cell>33.12</cell><cell>8.35</cell><cell>18.39</cell></row><row><cell>(64 × 64 × 64)</cell><cell>27.40</cell><cell>7.69</cell><cell>13.18</cell></row><row><cell>H-Atom</cell><cell>25.62</cell><cell>5.39</cell><cell>11.41</cell></row><row><cell>(128 × 128 × 128)</cell><cell>20.74</cell><cell>5.09</cell><cell>9.84</cell></row><row><cell>Engine</cell><cell>16.21</cell><cell>2.91</cell><cell>6.73</cell></row><row><cell>(256 × 256 × 110)</cell><cell>9.91</cell><cell>2.57</cell><cell>4.90</cell></row><row><cell>Head</cell><cell>15.39</cell><cell>2.79</cell><cell>6.32</cell></row><row><cell>(256 × 256 × 225)</cell><cell>9.49</cell><cell>2.48</cell><cell>4.76</cell></row><row><cell>Aneurism256</cell><cell>17.75</cell><cell>4.64</cell><cell>10.38</cell></row><row><cell>(256 × 256 × 256)</cell><cell>14.51</cell><cell>4.12</cell><cell>7.57</cell></row><row><cell>Foot</cell><cell>10.53</cell><cell>2.85</cell><cell>4.97</cell></row><row><cell>(256 × 256 × 256)</cell><cell>8.25</cell><cell>2.12</cell><cell>4.03</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was funded by the Deutsche Forschungsgemeinschaft (DFG) as part of the project "Astrographik". We would like to thank the producers and collaborators of http://www.volvis.org for providing us with data sets.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A fast voxel traversal algorithm for ray tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Amanatides</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Woo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics</title>
		<meeting>Eurographics<address><addrLine>Amsterdam, North-Holland</addrLine></address></meeting>
		<imprint>
			<publisher>Elsevier Science Publishers</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="3" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A spectral analysis of function composition and its implications for sampling in direct volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bergner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Muraki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1353" to="1360" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Three-dimensional alpha shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Mücke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="43" to="72" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive high-quality volume rendering with flexible consumer graphics hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics State of The Art Report</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">High-quality pre-integrated volume rendering using hardware-accelerated pixel shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGGRAPH/Eurographics Workshop on Graphics Hardware</title>
		<meeting>the ACM SIGGRAPH/Eurographics Workshop on Graphics Hardware<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Geometric Measure Theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Federer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Interval volume: a solid fitting technique for volumetric data display and analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Maeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="151" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Volumetric data exploration using interval volume</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Maeda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sato</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="144" to="155" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Applied Functional Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Griffel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Dover Publications</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Interval set: A volume rendering technique generalizing isosurface extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="3" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Realtime ray-casting and advanced shading of discrete isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hadwiger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sigg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Scharsach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bühler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="303" to="312" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A new method of solving numerical equations of all orders, by continuous approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">G</forename><surname>Horner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Philosophical Transactions of the Royal Society of London</title>
		<imprint>
			<biblScope unit="volume">109</biblScope>
			<biblScope unit="page" from="308" to="335" />
			<date type="published" when="1819" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Ray tracing volume densities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Kajiya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Von Herzen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="165" to="174" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Semi-automatic generation of transfer functions for direct volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Durkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1998 IEEE Symposium on Volume Visualization</title>
		<meeting>the 1998 IEEE Symposium on Volume Visualization<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Multidimensional transfer functions for interactive volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="270" to="285" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Volume ray casting with peak finding and differential sampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Knoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hijazi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westerteiger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1571" to="1578" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Scale-invariant volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="295" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Pre-integrated volume rendering for multi-dimensional transfer functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE/EG Symposium on Volume and Point-based Graphics</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="97" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Projecting tetrahedra without rendering artifacts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Qiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Acceleration techniques for GPU-based volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="287" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ledergerber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Guennebaud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bächer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<title level="m">MLS ray casting. IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="1372" to="1379" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">High-quality lighting and efficient preintegration for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Joint Eurographics-IEEE TVCG Symposium on Visualization</title>
		<meeting>Joint Eurographics-IEEE TVCG Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">High-quality, semi-analytical volume rendering for AMR data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marchesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">C</forename><surname>De Verdière</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1611" to="1618" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Area and volume coherence for efficient visualization of 3D scalar functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A survey of the marching cubes algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Newman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="page" from="854" to="879" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Interval volume tetrahedrization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="221" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">An evaluation of implicit surface tilers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bloomenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="33" to="41" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Interactive ray tracing for volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-P</forename><surname>Sloan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="238" to="250" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Interactive ray tracing for isosurface rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-P</forename><surname>Sloan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="233" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Smart hardware-accelerated volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Röttger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strasser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on Data Visualisation</title>
		<meeting>the Symposium on Data Visualisation<address><addrLine>Aire-la-Ville, Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>Eurographics Association</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="231" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Hardware-accelerated volume and isosurface rendering based on cell-projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Röttger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Revisiting histograms and isosurface statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">E</forename><surname>Scheidegger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Schreiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Duffy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1659" to="1666" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A polygonal approximation to direct scalar volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="63" to="70" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Real-time ray tracing of implicit surfaces on the GPU</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Narayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="261" to="272" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A simple and flexible volume rendering framework for graphics-hardware-based raycasting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Stegmaier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Strengert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Workshop on Volume Graphics</title>
		<meeting>the International Workshop on Volume Graphics</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="187" to="195" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Interval volume decomposer: a topological approach to volume traversal</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Takahashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Fujishiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Takeshima</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SPIE Visualization and Data Analysis</title>
		<meeting>SPIE Visualization and Data Analysis</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">5669</biblScope>
			<biblScope unit="page" from="103" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Topology-controlled volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Dillard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="330" to="341" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Volume clipping via per-fragment operations in texture-based volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="93" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Interactive clipping techniques for texture-based volume visualization and volume shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="298" to="312" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
