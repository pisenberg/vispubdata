<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Pre-Integrated Volume Rendering with Non-Linear Gradient Interpolation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amel</forename><surname>Guetat</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandre</forename><surname>Ancel</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephane</forename><surname>Marchesin</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jean-Michel</forename><surname>Dischler</surname></persName>
						</author>
						<title level="a" type="main">Pre-Integrated Volume Rendering with Non-Linear Gradient Interpolation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:56+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Ray casting</term>
					<term>pre-integration</term>
					<term>Phong shading</term>
					<term>volume rendering</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Shading is an important feature for the comprehension of volume datasets, but is difficult to implement accurately. Current techniques based on pre-integrated direct volume rendering approximate the volume rendering integral by ignoring non-linear gradient variations between front and back samples, which might result in cumulated shading errors when gradient variations are important and / or when the illumination function features high frequencies. In this paper, we explore a simple approach for pre-integrated volume rendering with non-linear gradient interpolation between front and back samples. We consider that the gradient smoothly varies along a quadratic curve instead of a segment in-between consecutive samples. This not only allows us to compute more accurate shaded pre-integrated look-up tables, but also allows us to more efficiently process shading amplifying effects, based on gradient filtering. An interesting property is that the pre-integration tables we use remain two-dimensional as for usual pre-integrated classification. We conduct experiments using a full hardware approach with the Blinn-Phong illumination model as well as with a non-photorealistic illumination model.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Volume rendering is a well-known method for exploring 3D scalar fields by using a simplified light transport theory. It expresses the color of a pixel as an integral along the viewing ray traversing the volume. However rendering should not only be fast to ensure interactivity, it must also be of good visual quality to avoid artifacts while making internal features well perceptible. In the worst case, artifacts might lead to wrong interpretation of the data. High regular or adaptive sampling rates lead to accurate results but drive accordingly very high computational costs, often limiting framerates, especially for large datasets. By exporting some computations to a pre-processing step, pre-integration is a widely used technique for improving numerical accuracy without increasing the computational requirements (see related works). Since shading is generally considered as an important issue, Lum et al. <ref type="bibr" target="#b7">[8]</ref> suggested to further improve pre-integration by linearly interpolating intensity values between the front and back sample points, thus guaranteeing continuity of shading from one slab to the next. This approach can be considered as a volumetric extension of Gouraud shading on surfaces. Gouraud shading, however, is known to overblur surface aspects, while discontinuities in the derivative are visible. In the case of volume rendering, such effects are less perceptible on iso-surfaces, because gradients are computed densely on a per-voxel basis (when gradients are pre-computed and stored as 3D texture, the GPU also applies a tri-linear filtering, thus interpolating the gradient inside the voxel). In addition, contributions are mixed and accumulated along the ray depending on the opacity, which potentially smoothes results further. Yet, errors in the form of a loss of luminous energy are introduced in two cases: high frequency gradient variations and high frequency shading functions (for example the specular part of lighting models). Unfortunately, it is not possible to perform accurate pre-integration by considering gradients on front and back samples because of practical issues: a table taking the front and back normals into account would require four additional dimensions (two dimensions per normal when representing the vector as Euler angles). Our technique is based on a non-linear shading interpolation between front and back samples, and thus significantly reduces shadingrelated errors. It uses a quadratic curve to interpolate the gradients between the front and back samples. Such an interpolation leads to a cubic polynomial under the integral, which allows accurate computation of two-dimensional pre-integration tables. Our experimental study demonstrates that an interpolation of the gradients along a curve (close to a circle) between samples results in more accurate rendering, especially in the presence of important local gradient variations and / or of high frequency lighting functions. In the case of the Blinn-Phong lighting model, we process specular highlights by replacing the usual cosine lobes by cosine cones. We show that the latter do well preserve visual cues, but are computationally much simpler. Because of improved overall accuracy, our technique can be used to process visual effects related to gradient filtering more efficiently, especially techniques that amplify local gradient variations, for instance to improve small scale details perception. Our approach is furthermore compatible with many other local illumination models, including nonphotorealist techniques, as far as these are related to gradients (normal vectors on surfaces).</p><p>The remaining parts of this paper are structured as follows. We first present related works concerning pre-integrated classification, shading models and gradient filtering for detail enhancement. Section 3 describes some background and motivations. Then, in Section 4, we describe our approach for non-linear interpolation of gradient vectors between two consecutive samples along the ray. In particular, we propose to analyze errors introduced when gradients are just linearly interpolated between front and back samples. Next, we show how our interpolation can be used along with the Blinn-Phong illumination model as well as pre-integrated classification. We also discuss extensions to other local illumination models. Finally, before concluding, results are given in Section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORKS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Pre-integrated classification</head><p>Different strategies for numerically solving the volume rendering integral were discussed by Max et al. <ref type="bibr" target="#b9">[10]</ref>. Their idea was to precompute and tabulate the indefinite rendering integral between values defined at the vertices of the polyhedra for the cell projection method, assuming that the density scalar function varies linearly along the ray. Improvements were further discussed by Williams et al. <ref type="bibr" target="#b19">[20]</ref>. They calculate the volume rendering integral cell by cell assuming that the transfer function varies piecewise linearly along a ray segment within each cell. Later, simplifications were derived by Stein et al. <ref type="bibr" target="#b20">[21]</ref>. They de-velop a faster but less accurate method, where they assume the opacity varies linearly along the ray segment and the color is constantly equal to the average of the color at the front and the back of the ray segment. This was an approximation, since the opacity along a ray segment hides the far color more than the near one, but it was much quicker to evaluate. Roettger et al. <ref type="bibr" target="#b14">[15]</ref> applied this technique as an enhancement to the Projected Tetrahedra algorithm using 3D texture hardware for enabling the use of arbitrary transfer functions and for rendering isosurfaces without reconstructing them geometrically. Compared to Stein, Roettger et al. develop a scheme to approximate the volume rendering integral for different sampling distances which allows one to pre-integrate the contribution of the volume rendering integral within the considered interval by a 2D look-up table instead of a 3D look-up table. Engel et al. <ref type="bibr" target="#b1">[2]</ref> name this technique pre-integration and extend it by computing the colors in the same way as Roettger et al., but considering their modulation by diffuse and specular shading. For the normals, they average the normals of the two subsequent sampling points under consideration. However, to accelerate the computation of the pre-integration tables, they hold the distance between sample points constant and neglect the attenuation within the segment intervals. Later improvements <ref type="bibr" target="#b12">[13]</ref> consider an optimized look-up tablegeneration and final rendering using 2D texture hardware. Roettger et al. <ref type="bibr" target="#b13">[14]</ref> improve the algorithm by introducing super-sampling and accurate clipping in order to achieve a better image quality around high frequency transfer function and data variations. This can also significantly improve shading by doing super-sampling where normal variations are important. An application of pre-integration to Shear Warp algorithms was suggested by Schulze et al. <ref type="bibr" target="#b17">[18]</ref>. They render slabs between adjacent slices instead of individual slices using a buffer slice to store interpolated scalar values of the back slice, and store the result into a 2D lookup table considering a constant distance. They improve image quality at the expense of the algorithm performance. Lum et al. <ref type="bibr" target="#b7">[8]</ref> improved pre-integration for shading by linearly interpolating the lighting in the front and back sample points. Further suggestions were given for computing the pre-integration look-up tables. <ref type="bibr" target="#b10">[11]</ref> restricts transfer functions to piecewise linear functions which allows one to precompute a pre-integration table independent of classification. Recently, El Hajjar et al. <ref type="bibr" target="#b4">[5]</ref> derived a method based on a second order polynomial for pre-integration at constant sampling steps. But they need to use a 3D table even though considering equidistant samples. Providing a better approximation of shading has not been considered by this approach.</p><p>With regard to shading combined with pre-integration, two main strategies can be differentiated: approaches based on super-sampling to compute more samples on high frequency variations and approaches based on illumination interpolation. The former can lead to excessive computations and needs to consider variable sampling distances, e.g. 3D tables, and the latter may introduce numerical errors on regions where the gradient variations are locally important. Our motivation is to provide a method that avoids both drawbacks by considering a true gradient interpolation for computing the tables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Local illumination models</head><p>Local illumination simulates the interaction of light with surfaces. The empirical Phong <ref type="bibr" target="#b11">[12]</ref> illumination model is the most frequently used in volume rendering. It computes the light reflected by a surface as a combination of ambient, diffuse and specular terms where each term is represented as an RGB triplet. The specular term depends on the viewing vector V and on R the direction of a perfect reflection. The Blinn-Phong model proposes to compute more efficiently the specular term by introducing a vector H, which is the halfway between V and L, where the latter represents the light source direction. More recently other local illumination models have been proposed, for instance in the field of non-photorealistic rendering, to provide new graphical effects. Gooch et al. 's model <ref type="bibr" target="#b2">[3]</ref> for instance adds a subtone linearly ranging from a cool (blue) to warm (yellow) color. Such illumination models can be used with direct volume rendering as done in <ref type="bibr" target="#b0">[1]</ref> for instance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Gradient computation and filtering</head><p>For computing gradient approximations a popular technique consists in applying the Sobel operator, e.g. a discrete differentiation of neighboring voxels, but higher order interpolation polynomials can be used instead. However, these are often time consuming and can hardly be computed on the fly in real-time. Gradients are therefore generally pre-computed. Fast hardware compatible higher order interpolation techniques have been explored in <ref type="bibr" target="#b3">[4]</ref>. Other techniques attempt to reinforce the perception of details by adjusting light directions, which can be considered as an adjustment of normal / gradient vectors instead <ref type="bibr" target="#b15">[16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">BACKGROUND AND MOTIVATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Volume Rendering Integral</head><p>The transport theory of light <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b6">7]</ref> is the basis for many volume rendering methods and ends up in following volume rendering integral:</p><formula xml:id="formula_0">I(ρ) = ρ 0 q(t) e −σ (0,t) dt.<label>(1)</label></formula><p>I is the intensity at position ρ along a ray, ρ ∈ [0, B] (in threedimensional space ρ = B is the location of the background). q is the scattering function that can be identified with different models, and σ is the optical depth defined as</p><formula xml:id="formula_1">σ (t 1 ,t 2 ) = t 2 t 1 κ(t ) dt ,<label>(2)</label></formula><p>where κ is the absorption function. For numerical evaluation, this integral defined on the interval [0, B] is further subdivided into small not necessarily equidistant</p><formula xml:id="formula_2">subintervals [t k ,t k+1 ], k = 0,...,N − 1, where t 0 = 0 and t N = B.</formula><p>For the visualization of a continuous scalar field g(x) (x is any point inside the data volume), a classification is further introduced to map scalar values to color c(g) and to absorption κ(g). The scattering function q generally uses c(g), along with a local shading model to compute the color contribution of a point in space according to light sources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Shading with a local surface illumination model</head><p>Shading introduces a color variation according to given light sources. When using the Blinn-Phong lighting model the previous Equation 1 can be written as:  <ref type="bibr" target="#b7">[8]</ref> proposed a solution consisting in linearly interpolating intensity values computed only on the front and back sample points. For this purpose, two tables are used: one fades front sample intensity out, while the other fades the back sample intensity in. Each table represents shading weighted respectively towards front and back samples by a linear ramp. The rendered result is computed as a sum of the contribution of the two samples. Two more tables are necessary if specular highlights are further considered, as well as the usual pre-integrated table for the ambient term. Using a linear ramp is equivalent to interpolating the gradient along a segment between front and back samples. If the angle between two consecutive samples is important, this can introduce shading errors. Our approach aims at avoiding these errors. In what follows, we consider only directional lighting, e.g. the lighting vector L is constant over the whole scene. For illumination, we use the normalized gradient of the scalar density function g(x(t)) on point x at position t upon the ray. To simplify notations because of subdivision into subintervals [t k ,t k+1 ], we further denote g(x(t k + t)) by g(t).</p><formula xml:id="formula_3">I(ρ) = ρ 0 [c(g(t))(K a + K d ( ∇g(t) ∇g(t) • L)) +c s (g(t))K s (H • ∇g(t) ∇g(t) ) n δ ]e −σ (0,t) dt (3) K a , K</formula><p>We also assume the absorption function in Equation <ref type="formula" target="#formula_1">2</ref>, depending on g(t). In what follows, we show how gradients can be non-linearly interpolated between front and back samples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">NON-LINEAR GRADIENT INTERPOLATION BETWEEN SAM-PLES</head><p>Phong normal interpolation on surfaces is a well studied problem <ref type="bibr" target="#b18">[19]</ref>. As discussed in <ref type="bibr" target="#b18">[19]</ref>, a common solution for interpolating between two normals consists in applying a linear interpolation (a weighted sum) followed by normalization. In the case of volume rendering, gradients are generally interpolated and normalized on the fly using the available hardware trilinear filter. With pre-integrated volume rendering, there are two gradients to consider at the front and back of the slab. A solution that consists in using only one of them (or an average of both) to compute shading produces shading discontinuities, which is not desirable. A better solution consists in applying a linear interpolation: </p><formula xml:id="formula_4">N(t) = N b t/D + N f (1 − t/D) with t ∈ [</formula><formula xml:id="formula_5">C = D 0 [c(g(t))(K a + K d • (N b t + N f (D − t)) D • L) +K s (H • (N b t + N f (D − t)) D ) n δ ]e −σ (0,t) dt</formula><p>However, since N b and N f are both normalized, the resulting norm of the interpolated vector N(t) is always lower than one. It is therefore important to introduce a normalization term η(t) = N(t) , as suggested in <ref type="bibr" target="#b18">[19]</ref>, during the integration from front to back, e.g. to divide N(t) by η(t). The equation is then:</p><formula xml:id="formula_6">C = D 0 [c(g(t))(K a + K d • (N b t + N f (D − t)) D • η(t) • L) +K s (H • (N b t + N f (D − t)) D • η(t) ) n δ ]e −σ (0,t) dt</formula><p>Applying a linear interpolation of illumination between front and back samples instead of applying an illumination along an interpolated normalized vector, is equivalent to assuming the term η(t) is always equal to 1 in-between the front and back samples. Subsequently, such an approach necessarily introduces a loss of energy during integration. This loss of energy is proportional to the angle between N b and N f . Indeed, the committed error increases as the dot product between N f and N b becomes smaller, e.g. the angle between both vectors becomes greater. An example of illumination error introduced by assuming η(t) = 1 between two consecutive samples is shown in <ref type="figure" target="#fig_2">Figure 1</ref>. Note that the error is further increased when the illumination model has a high frequency component, like specular lobes. This figure compares the illumination evolution along the ray if correct normalization is used (a), e.g. η(t) = N(t) and if no normalization is used (b), e.g. η = 1. We show the diffuse and specular components, as well as both together. Part (c) is our own solution, as will be explained below. Part (b) corresponds to the approach of Lum et al. <ref type="bibr" target="#b7">[8]</ref>. As can be seen, the  error might become in some cases very high, compared to a correct reference result on (a).</p><p>By dividing N(t) by η(t), the resulting vector no longer moves along a straight line but along an arc of circle, as shown by <ref type="figure" target="#fig_3">Figure 2</ref>. This corresponds to a non-linear interpolation of the gradient vector between front and back samples. As can be seen, the maximum value for η(t) is reached at half way between N f and N b . η(t) can be expressed as follows:</p><formula xml:id="formula_7">η(t) = cos(α) cos(β (t) − α)<label>(4)</label></formula><p>where</p><formula xml:id="formula_8">α = acos(N f • N b )/2.</formula><p>Because of linear interpolation, β (t) is an angle that varies linearly from 0 to 2α, e.g. β = 2αt/D. We note that for an angle of α = 45 • , assuming η = 1 introduces an error that reaches 41% at halfway between N b and N f , since at half-way 1/η = 1/cos(π/4) = 1.414.</p><p>To estimate if it is worth introducing a non-linear interpolation between front and back samples for visualizing volume datasets, we first have to evaluate how large angles between gradients of consecutive sample points are effectively, for a given ray traversal. <ref type="figure" target="#fig_4">Figure 3</ref> shows such an evaluation for the CT head dataset. The angle variation mainly depends on the technique used to compute the gradients, as well as on the sampling distance (the greater the distance, the more the gradients are likely to be different between front and back samples). On this figure the three rows show results for three different gradient computation techniques. The left column shows the rendered dataset. The middle and right visualizes the gradient variation along the ray for respectively 1 voxel sampling step and 0.5 voxel sampling step, for angles α greater than 30 degrees and 45 degrees respectively (this means an angle of 60, respectively 90 degrees between the front and back sample gradients). Dark zones depict the amount of samples that have such angles. That is, the darker the zones are, the more there are consecutive samples with angle greater than 60 and 90 degrees respectively along the ray. The first row uses gradients that were pre-computed using a Sobel operator. The second row illustrates the use of a cubic spline interpolation to compute gradients. Finally, the last row illustrates exaggerated shading as inspired by <ref type="bibr" target="#b15">[16]</ref>. In our case, to exaggerate the perception of details, we have increased for each sample the angle between the actual gradient on this sample with respect to a mean gradient around this sample for a given neighborhood of voxels. That is, calling N m the average gradient around sample (i, j, k) in a given neighborhood and N the gradient on (i, j, k), we replace the latter by</p><formula xml:id="formula_9">N' = N + ε(N − N m )</formula><p>, where ε &gt;= 0 is the amplitude of exaggeration (0 means no exaggeration). For the example of <ref type="figure" target="#fig_2">Figure 1</ref>, we used ε = 1 and a neighborhood of 5 3 voxels. Exaggerated shading improves the perception of small scale details and increases the gradient variation between front and back samples.</p><p>All of these examples show that datasets can contain locally important gradient variations between front and back samples (further increased when the sampling step is high, or when details are exaggerated). For such cases, it seems important to apply a correct gradient interpolation to avoid introducing shading errors.</p><p>To do pre-integrated classification with non-linear gradient variation between front and back samples, a brute force approach could consist in using tables that would be further depending on α. In practice this means using 3D pre-integration tables instead of twodimensional tables, the third index being α. However, 3D tables are not very practical, because they can only hardly be updated at real time rates during transfer function changes, especially if more than a single table must be pre-computed (as for the diffuse and specular terms). In addition, 3D tables are texture memory consuming, while datasets with pre-computed gradients may already require much texture memory. In addition, variable sample steps would become almost impossible to process with GPU hardware, since it would result in 4D tables. For all of these reasons it seems desirable to keep the tables two-dimensional.</p><p>Our solution consists in exploiting the fact that a correctly interpolated normal N(t) moves along a circle (as visible in <ref type="figure" target="#fig_3">Figure2)</ref>. A circle arc can be quite well approximated by a quadratic polynomial function. We propose to use following approximation:</p><formula xml:id="formula_10">η(t) = cos(α) x 2 (cos(α) − 1) + 1 , x = (β (t) − α)/α = 2t/D − 1<label>(5)</label></formula><p>Note that we have for t = 0, β = 0 and η = 1, for t = 0.5D, β = α and η = cos(α) and for t = D, β = 2α and η = 1. These three cases are matching the exact values. By using such a normalization term, the error becomes very low with respect to a real arc of circle, compared to an interpolation along a straight line (e.g. taking η = 1). Indeed, for an angle of 90 • , the maximal error is now about 0.3% (compared to the previous 41% without any normalization). An example of shading variation using such a normalization term is shown on bottom row of Figure1. The difference with the top row (correct interpolation) is negligible.</p><p>Using the previous approximate normalization term, we end up with following final expression for the normalized gradient between front an back samples:</p><formula xml:id="formula_11">∇g(t) ∇g(t) ≈ (1 + (2 t D − 1) 2 (cos(α) − 1))( ∇g(0) ∇g(0) t + ∇g(D) ∇g(D) (D − t)) D • cos(α)<label>(6)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">PRE-INTEGRATED CLASSIFICATION INCLUDING BLINN-PHONG SHADING</head><p>In this section, we describe how pre-integrated volume rendering can be realized by considering the previously defined gradient interpola-tion scheme between the front and back samples. We first consider the Blinn-Phong illumination model. As for classical pre-integration, we assume the scalar values between two consecutive sampling points change linearly. For rendering, we pre-compute gradients from the density function g(t).</p><p>The ambient contribution of the volume rendering integral (equation 3) between two sample points can be computed with traditional pre-integrated volume rendering and needs no further discussion. In the following two subsections we describe respectively the diffuse and specular parts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Diffuse term</head><p>By calling N f and N b the normalized gradients on the two consecutive front and back samples and by using the previous gradient interpolation scheme (equation 6), the corresponding diffuse part of equation 3 for a sampling step of length D is:</p><formula xml:id="formula_12">C d = K d D 0 [c(g(t)) (2t/D − 1) 2 (cos(α) − 1) + 1 cos(α) • (N b t + N f (D − t)) D • L)]e −σ (0,t) dt</formula><p>The variable substitution s := g(t) where g(t) = t(S b − S f )/D + S f and ds = (S b − S f )/D • dt leads to the following pre-integrated formulation:</p><formula xml:id="formula_13">C d (S f , S b ) = K d • d S b S f [c(s ) (2s − 1) 2 (cos(α) − 1) + 1 cos(α) •(N b • Ls + N f • L(1 − s))]e −dσ (S f ,s ) ds (7) with d = D/(S b − S f ) and s = (s − S f )/(S b − S f ) = t/D.</formula><p>Using the following notation:</p><formula xml:id="formula_14">I k (S f , S b ) = d S b S f c(s ) • s k • exp(−dσ (S f , s ))ds</formula><p>(k is an integer exponent value for s) and by separating the constant, linear (s), quadratic (s 2 ) and cubic (s 3 ) terms, the equation becomes:</p><formula xml:id="formula_15">C d = K d (a 0 (L)I 0 + a 1 (L)I 1 + a 2 (L)I 2 + a 3 (L)I 3 )<label>(8)</label></formula><p>where</p><formula xml:id="formula_16">a 0 (L) = N f • L a 1 (L) = N b • L − (1 + r)N f • L a 2 (L) = r(2N f • L − N b • L) a 3 (L) = r(N b • L − N f • L) r = 4(cos(α) − 1) cos(α)</formula><p>All I k terms in this equation depend only on S f and S b , and thus can be calculated and tabulated into 2D look-up tables. During rendering the four tables can be accessed and then the constants a k computed, and finally the sum performed. This yields the diffuse component of shading taking into account an interpolation of the gradient with negligible error compared to an interpolation along a circle even if α is important, e.g. even if N b and N f are very different (for example 90 • ).</p><p>As mentioned in section 3.2, Equation 7 is generally not used as such because of negative dot product values. We must either apply a maximum operator with zero or a mirroring of the gradient to make sure values are positive. For the first case, we have to further introduce a max( , 0) function into the integral, but such a function is not easy to integrate. To circumvent this difficulty, we distinguish three cases:</p><formula xml:id="formula_17">• if N f • L &gt; 0 and N b • L &gt; 0</formula><p>, the previous formulation can be used without max operator. •</p><formula xml:id="formula_18">if either N f • L &lt; 0 or N b • L &lt; 0,</formula><p>we use an approximation that consists in fading in or out the non-negative value, e.g.</p><formula xml:id="formula_19">(N b • Ls + N f • L(1 − s))/η(t) is replaced by N b • Ls or N f • L(1 − s). We thus obtainC d (S f , S b ) = K d N f • L(I 0 − I 1 ) andC d (S f , S b ) = K d N b • LI 1 respectively. • if N f • L &lt; 0 and N b • L &lt; 0, the result is just 0.</formula><p>For the second case, we can just mirror the gradient responsible for the negative value and apply the interpolation as usual. But this will introduce an approximation for slabs where one gradient (whether front or back) is correctly oriented and the other one is inverted with respect to the light. Indeed, on such slabs, an accurate interpolation is no longer a single arc of circle but two arcs of circles, joining at a vector perpendicular to the light (at the location where the gradient becomes inverted, the shading must be null). Applying a straight interpolation with an inverted gradient, thus tends to add some energy in this particular case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Specular term</head><p>Let us now consider the case of specular reflection. Under the same assumptions used to compute the diffuse reflection, the specular part can be written as:</p><formula xml:id="formula_20">C s (S f , S b ) = K s • d S b S f ( (2s − 1) 2 (cos(α) − 1) + 1 cos(α) •(N b s + N f (1 − s)) • H) n δ e −dσ (S f ,s ) ds<label>(9)</label></formula><p>It is difficult to evaluate this integral numerically because of the power n δ . We therefore propose to replace the usual specular lobe by a specular cone. That is, we use the approximation (1 + a) n = 1 + na + o(x). This slightly modifies the shape of the specular highlight without, however, removing visual cues. Calling N • H = cos(θ ), we replace cos(θ ) n δ by 1 + n δ (cos(θ ) − 1). As shown by <ref type="figure">Figure 4</ref>, this approximation does not affect the perception of specular highlights. The left represents the classical lobe and the right the approximated cone. In particular in both cases, the derivative on θ = 0 (e.g. on the maximal value of the highlight) is 0, which ensures a smooth spot. A visual difference is noticeable on a perfect sphere (second row), but this represents an extreme case. Indeed, as soon as there are local geometric variations (see noisy sphere ), the visual difference becomes almost non-perceptible. <ref type="figure" target="#fig_5">Figure 5</ref> shows an example on the skull dataset. The left is rendered with a classical Phong lobe and the right with a cone setting n δ = 20. When zooming in, slight differences are visible, but visual cues remain globally well preserved. The advantage of using a cone instead of a lobe is that it allows for an accurate straightforward integration. <ref type="figure">Fig. 4</ref>. Replacing the specular lobe (left) by a cone (right) for n δ = 10. The visual difference on 3D surfaces is low, and specular hightlights remain well perceptible.</p><p>By using a cone instead of a lobe for the specular term, we obtain:</p><formula xml:id="formula_21">C s (S f , S b ) = K s • d S b S f [1 + n δ ( (2s − 1) 2 (cos(α) − 1) + 1 cos(α) •(N b s + N f (1 − s)) • H − 1)]e −dσ (S f ,s ) ds</formula><p>As for the diffuse case, we introduce the notation:</p><formula xml:id="formula_22">I k (S f , S b ) = d S b S f s k • exp(−dσ (S f , s ))ds</formula><p>and separate the constant, linear (s), quadratic (s 2 ) and cubic (s 3 ) terms. The equation finally becomes: As for the diffuse case, values might become negative depending on the dot product between N(s ) and H and depending on n δ . So, we likewise have to invert gradients or introduce a max( , 0) function to avoid such negative values. The values become negative when the dot product between H and the interpolated gradient N(s ) is lower than thresh = (n δ − 1)/n δ . For the max( , 0) function, we have to distinguish following three cases: </p><formula xml:id="formula_23">C s = K s (I 0 + n δ (a 0 (H)I 0 + a 1 (H)I 1 + a 2 (H)I 2 + a 3 (H)I 3 ) − n δ I 0 (10)</formula><formula xml:id="formula_24">• if N f •</formula><formula xml:id="formula_25">(S f , S b ) = K s (I 0 (1 − n δ ) + n δ N b • LI 1 ) and C s (S f , S b ) = K s (I 0 (1 + n δ (N f • L − 1)) − n δ N f • LI 1 respectively. • if N f • L &lt; 0 and N b • L &lt; 0</formula><p>, the result is different from the diffuse case, just 0, since there might be a highlight in-between the front and back samples. To compute the relative position t where the maximum specular value is reached, we can use the derivative of the cubic form, which is a quadratic form, and solve the corresponding equation of second degree. Note that a similar technique has been used in <ref type="bibr" target="#b8">[9]</ref> in order to find out the maximal shading value of an analytical form. Then, we can check whether the solution t is in [0, 1] or not, and compute the value of the corresponding specular term on t . If it is positive, there is a maximum on t , and subsequently a highlight between the front and back samples. A way of doing integration would consist in fading in the specular value from 0 to t and then fading it out towards 1. But this is an impractical solution, since there would be as many tables as positions of t . Therefore, we propose to introduce an approximation using a single additional table I :</p><formula xml:id="formula_26">I (S f , S b ) = d S b S f (s &lt; 0.5?2s : 2 − 2s) • exp(−dσ (S f , s ))ds</formula><p>The last approximation consists in assuming that the maximum specular value is reached at half-way between the front and back samples, that is for t = 0.5. This will make sure that there will be a visible highlight between the front and back samples, but not at the exact position between the samples, which makes it either a bit too visible or a bit less visible with respect to the actual position on the concerned slab because of occlusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Other shading functions</head><p>The Blinn-Phong lighting model that we used in the previous subsections is not the only available local surface lighting model. Since our technique is based on a gradient interpolation between front and back samples, it can be used a priori with any other lighting model, provided it can be expressed as a polynomial form. In what follows, we take the example of the illustrative Gooch et al. <ref type="bibr" target="#b2">[3]</ref> lighting model. This model modifies Equation 3 as follows:</p><formula xml:id="formula_27">I(ρ) = ρ 0 [( 1 2 (c blue + a • c(g(t))K d )(1 + N • L) + 1 2 (c yellow + b • c(g(t))K d )(1 − N • L) )</formula><p>]e −σ (0,t) dt <ref type="bibr" target="#b10">(11)</ref> where coefficients a and b control the prominence of the object color and strength of luminance shift (for instance a = 0.2 and b = 0.6) and c blue and c yellow determine the subtone.</p><p>In its pre-integrated form, the diffuse part of the previous equation can be written in this case as:</p><formula xml:id="formula_28">C d = a 0 (L)I Gooch 0 + a 1 (L)I Gooch 1 + a 2 (L)I Gooch 2 + a 3 (L)I Gooch 3 with I Gooch k (S f , S b ) = d 2 S b S f (c blue − c yellow + K d c(s )(a − b)) •s k • exp(−dσ (S f , s ))ds</formula><p>Note that for this shading model negative values of the dot product N.L do not need to be processed specifically, since the final resulting shading values are always positive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>We conducted our tests using OpenGL and GLSL with a viewport of 800x800 pixels on an Intel Core 2Quad Q9300, with 4GB RAM and with a Nvidia GeForce GTX 280 graphics board (with 1Gb memory). We implemented a GPU-based ray casting rendering scheme on the fragment shader without optimization except early ray termination. All pre-integration tables use a 16bit unsigned short representation on the GPU memory. In the following, we first discuss visual quality issues and make a comparative study with existing techniques. <ref type="figure" target="#fig_6">Figure 6</ref> shows a set of results obtained for different datasets and pre-integration schemes. From top to bottom, we show the bonsai dataset (256x256x256), the CT Head dataset (256x256x225) and the Knee dataset (379x229x305). The parameters for Phong lighting are Ka = 0, Kd = 1, Ks = 2, n δ = 50 for the bonsai dataset and Ka = 0, Kd = 1, Ks = 3, n δ = 80 for the CT Head and the Knee datasets. For all examples, we use a Phong cone instead of a Phong lobe. The first column (a) shows a reference image obtained without pre-integration and with a true gradient interpolation between front and back samples using a high sampling rate (20 sub-samples). The remaining columns show respectively results obtained using: (b) a constant gradient (the average between front and back gradient values), (c) a linear gradient interpolation (e.g. the approach of <ref type="bibr" target="#b7">[8]</ref>), and (d) our approach (nonlinear gradient interpolation). We also show close up views as well as difference images to the reference (a): low differences result in black color values during ray traversal. As visible in these images, (c) and (d) are systematically closer to the reference compared to (b). With our approach (d) the difference is almost everywhere null (difference images are almost completely black). However, there are a few visible differences on some locations for the Knee dataset. In fact, our approach tends to exaggerate intensity around specular highlights, which is related to the fact that the quadratic curve used for interpolation is not exactly an arc of circle. The normalization term might be too low, which, in turn, results in vectors that have a norm greater than one. Hence, some energy is added. For rendering, we have used respectively a large 2-voxel sampling step (2/256) for the bonsai dataset and a 1-voxel step (1/256) for the CT Head and Knee datasets. At far distance, differences between the three different pre-integration schemes are hardly perceptible. But, on the zooms three types of benefits resulting from using a non-linear gradient interpolation are visible. The first one (first row, bonsai dataset), is that for large sampling steps (here, 2-voxels) remaining stripes are less obvious because of the smoothness of shading. We note that, pre-integration does not necessarily remove all visible stripes, especially for large sampling steps, as it has been shown in <ref type="bibr" target="#b13">[14]</ref>. The smoother shading reduces the visibility of these stripes, compared to constant gradient and linear gradient interpolation. The second benefit (second row, CT Head dataset) is that it reduces a kind of apparent noise that appears when the frequency of specular highlights is high (individual small bright dots), which is also related to an improved global smoothness. Finally, the last, probably most important benefit, is that the contours of specular highlights are more accurately depicted. This is an important issue for the correct visual comprehension of underlying objects shapes. Concerning timings (provided within the figure), our approach is about 10% to 20% slower than a linear gradient interpolation, which we explain by the fact that we must use two more texture accesses (only two additional tables are used, given the fact that for the specular color we use only a single color channel, since we assume the specular color is white).</p><p>In order to better perceive the difference between the three preintegration schemes at global object scale, we further used a dataset with an object of low curvature (accordingly the lighting also changes slowly, along with committed shading errors) and with a thin layer so as to maximize the gradient variation between front and back samples. The engine dataset meets well these criteria. <ref type="figure">Figure 7</ref> illustrates the comparative study for this dataset. The left shows a ground truth result obtained using a very low sampling step of 0.1/256 without pre-integration. Then, we show respectively the gradient variation, our result, the approach of <ref type="bibr" target="#b7">[8]</ref> and pre-integration with constant gradient. The first row is for a sampling step of 1/256 , the second one for a sampling step of 0.5/256. In this case, differences between the pre-integration schemes are better perceivable. These differences decrease as the sampling rate becomes greater, since the variation of the gradients also becomes smaller (due to trilinear interpolation on voxels). Yet, even for a 0.5/256 step, our approach remains closer to the ground truth (see upper right corner of the engine). <ref type="figure">Figure 8</ref> finally shows two examples of illustrative rendering using the Gooch et al. <ref type="bibr" target="#b2">[3]</ref> local shading model using two different datasets: top is the aneurism (256x256x256) dataset and bottom is the CT head dataset. The left shows the reference and the right our result obtained for a sampling step of 0.5/256. Nearly no difference is visible between our result and the reference. For the aneurism the reference (left) has a 1.8 fps framerate for a sampling step of 0.1/256 and our result (right) a 16.3 fps framerate for a sampling step of 0.5/256. For the CT head the reference (left) has a 3.3 fps framerate for a sampling step of 0.1/256 and our result (right) a 18.7 fps framerate for a sampling step of 0.5/256.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS AND FUTURE WORK</head><p>In this paper, it has been shown that non-linear gradient variations along front and back samples can be integrated into the pre-integrated volume rendering framework for improved shading computation accuracy. Improvements are obtained when gradients are strongly varying and/or shading functions have high frequency components. Concerning the specular term of the Phong shading model, we have replaced the lobe by a cone. From a visual point of view the cone is close to the lobe and well preserves similar visual cues. Our technique is also compatible with other local surface shading models, like nonphotorealistic ones, as long as these can be expressed as polynomials.</p><p>Our approach requires more tables than an approach based on shading interpolation (linear gradient interpolation), which requires some more texture accesses in hardware implementations. Performance degradation remains however low. An interesting property is that tables remain two-dimensional, so that they can be straightforwardly updated during transfer function editing.</p><p>Using a non-linear interpolation scheme, as we proposed, does implicitly increase the degree of the signal reconstruction for the shading part. Therefore, such approaches not only avoid visual shading discontinuity bands, but further improve the global smoothness compared to methods that use a constant gradient or a linear gradient interpolation. However, as for all pre-integration techniques, we assume the underlying signal is piecewise linear for computing the occlusion and color components. As it has been already shown in previous works, there might remain visible stripes if the integration step is set too large. Our approach reduces the visibility of these stripes, but does not remove them. To further improve results in such cases, it seems important to improve the reconstruction of the signal in-between front and back samples. However, the problem that must be solved in this case, is the resulting increase of dimensionality. <ref type="figure">Fig. 7</ref>. Rendering of the engine dataset using different pre-integration schemes. Top is for 1 voxel sampling step. Bottom is for 0.5 sampling step. <ref type="figure">Fig. 8</ref>. Two examples of datasets rendered using an illustrative lighting model. Left is reference image (no pre-integration using a high sampling rate) and right is our result using a 0.5/256 sampling step.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>•</head><label></label><figDesc>A. Guetat, University of Strasbourg. • A. Ancel, University of Strasbourg. • S. Marchesin, UC Davis. • J.M. Dischler, University of Strasbourg. Manuscript received 31 March 2010; accepted 1 August 2010; posted online 24 October 2010; mailed on 16 October 2010. For information on obtaining reprints of this article, please send email to: tvcg@computer.org.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>0, D] (t = 0 means front and t = D back) to smoothly vary from the front gradient N f towards the back gradient N b for a slab of size D. The resulting equation is:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 1 .</head><label>1</label><figDesc>Comparing results according to the type of gradient interpolation used between front and back samples. (a) interpolation with normalization (ground truth result). (b) linear interpolation without normalization. (c) non-linear polynomial interpolation (our solution).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 2 .</head><label>2</label><figDesc>Evaluating the normalization term η(t) between front and back gradients.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 3 .</head><label>3</label><figDesc>Gradient variation between consecutive front and back samples for the CT head dataset using three different gradient computation techniques and two different sampling steps (1 and 0.5 voxel).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Comparing a specular lobe (left) with a cone (right) in the case of the skull dataset for n δ = 20. Differences are just noticeable on the zooms, but do not affect global visual cues.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Comparing different pre-integration schemes. (a) accurate gradient interpolation using a high sub-sampling rate between samples and no pre-integration (reference image), (b) constant gradient using the mean between front and back values, (c) linear gradient interpolation, (d) our approach.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>H &gt; thresh and N b • H &gt; thresh, the previous formulation can be used, since all values are positive.</figDesc><table /><note>• if either N f • H &lt; thresh or N b • H &lt; thresh, we use an ap- proximation that consists in fading in or out the non-negative value, e.g. we useC s</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work has been funded by the french national science fundation (ANR) under project ATROCO number ANR-07-MDCO-001.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Volume illustration: non-photorealistic rendering of volume models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rheingans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;00: Proceedings of the conference on Visualization &apos;00</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="195" to="202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">High-quality pre-integrated volume rendering using hardware-accelerated pixel shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HWWS &apos;01: Proceedings of the ACM SIGGRAPH/EUROGRAPHICS workshop on Graphics hardware</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A non-photorealistic lighting model for automatic technical illustration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gooch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Gooch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;98: Proceedings of the 25th annual conference on Computer graphics and interactive techniques</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="447" to="452" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fast and flexible high-quality texture filtering with tiled high-resolution filters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hadwiger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Theussl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Vision, Modeling, and Visualization</title>
		<meeting>Vision, Modeling, and Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Second order pre-integrated volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-F</forename><forename type="middle">E</forename><surname>Hajjar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marchesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-M</forename><surname>Dischler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Mongenet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization Symposium, 2008. PacificVIS &apos;08. IEEE Pacific</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The rendering equation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kajiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGGRAPH Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="143" to="150" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The application of transport theory to visualization of 3d scalar data fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Krueger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="273" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">High-quality lighting and efficient pre-integration for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint Eurographics-IEEE TVCG Symposium on Visualization</title>
		<meeting>the Joint Eurographics-IEEE TVCG Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">High-quality, semi-analytical volume rendering for amr data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marchesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">C</forename><surname>De Verdiere</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1611" to="1618" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Area and volume coherence for efficient visualization of 3d scalar functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGGRAPH Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A fast high accuracy volume renderer for unstructured data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Moreland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Angel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VV &apos;04: Proceedings of the 2004 IEEE Symposium on Volume Visualization and Graphics</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Illumination for computer generated pictures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">T</forename><surname>Phong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="311" to="317" />
			<date type="published" when="1975" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A two-step approach for interactive pre-integrated volume rendering of unstructured grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roettger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VVS &apos;02: Proceedings of the 2002 IEEE symposium on Volume visualization and graphics</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="23" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Smart hardware-accelerated volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roettger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strasser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VISSYM &apos;03: Proceedings of the symposium on Data visualisation 2003</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="231" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Hardware-accelerated volume and isosurface rendering based on cell-projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roettger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VIS &apos;00: Proceedings of the conference on Visualization &apos;00</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Exaggerated shading for depicting shape and detail</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Burns</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Decarlo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1199" to="1205" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A rendering algorithm for visualizing 3D scalar fields. SIG-GRAPH</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sabella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="51" to="58" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Integrating pre-integration into the shear-warp algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Schulze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Lang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VG &apos;03: Proceedings of the 2003 Eurographics/IEEE TVCG Workshop on Volume graphics</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Phong normal interpolation revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Van Overveld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wyvill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="397" to="419" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A volume density optical model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1992 workshop on Volume visualization</title>
		<meeting>the 1992 workshop on Volume visualization</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="61" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A high accuracy volume renderer for unstructured data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="37" to="54" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
