<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">On-Tube Attribute Visualization for Multivariate Trajectory Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Benjamin</forename><surname>Russig</surname></persName>
						</author>
						<author>
							<persName><forename type="first">David</forename><surname>Groß</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Raimund</forename><surname>Dachselt</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Stefan</forename><surname>Gumhold</surname></persName>
						</author>
						<title level="a" type="main">On-Tube Attribute Visualization for Multivariate Trajectory Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-03-27T09:12+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Visualization</term>
					<term>Rendering</term>
					<term>Line Data</term>
					<term>Trajectories</term>
					<term>Multivariate Data</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Fig. 1. Examples of multivariate on-tube visualizations. (a) Vehicles: steering angle is mapped to color (cf. color scale); Triangles show velocity mapped to length and acceleration mapped to color and inversely to base width (wide and purple depict braking actions); thin yellow Rectangles are used to show the throttle amount. (b) Delivery Drones: using color to visualize velocity (yellow = faster); Line plot shows power usage; Circles used as labels to identify drones. (c,d) Fisch Wehr: overview and detail visualizations of streamlines. Color shows velocity (red = faster); a Line plot is used to visualize high pressure areas; Sign glyph shows angular velocity (shape and color). Ambient occlusion emphasizes the vortex structure in (c).</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Modern tracking and sensor technology facilitates the collection of large amounts of movement data to capture the ever increasing complexity of systems with non-stationary entities. Acquiring such trajectory data is common in a number of different fields. Typical data sources include the movement of land <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">24]</ref>, air <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref> and water vehicles <ref type="bibr" target="#b25">[25]</ref>, migratory animals <ref type="bibr" target="#b44">[44]</ref> or entities in scientific simulations <ref type="bibr" target="#b35">[35]</ref>. The path of an object is recorded over time as a sequence of (geo-)spatial positions that form a two-or three-dimensional trajectory.</p><p>Stylized tubes have become the de-facto standard for visualizing this kind of data as demonstrated by a large body of research applying them for this purpose, but they are inherently limited in their capacity to show more than spatial aspects of the data. However, trajectories are often enriched with additional data originating from sensor measurements, manual annotations or contextual cues, or data simply derived from other attributes. Examples include physical properties such as velocity, acceleration and orientation, internal states like battery status and engine load, or semantic data like object type and events. In general, a multitude of additional internal or external attributes specific to certain research fields are possible. As the amount of dense multivariate trajec- tory data increases, data analysts and domain experts employ diverse visualization techniques that help them understand the complexity of the data and gain insights into underlying structures. For analysis tasks like finding anomalies or inspecting trends and correlations with the spatial data, it is essential to visualize a subset of the available attributes simultaneously with the spatial behavior of trajectories. This work extends the idea of using color as a visual attribute by mapping additional data attributes to various representations rendered on the tube surface, including glyphs for discrete samples along the tube and various continuous mappings like heatmaps and plots. We will refer to this concept as On-Tube Visualization throughout this paper. We believe this concept to be extremely powerful in a wide range of scientific fields where trajectories and other line data are commonly studied. Consequently, we must be able to deal with the diverse and sometimes conflicting requirements they pose. Advanced multivariate visualization capabilities need to be integrated without compromising the spatial intuition provided by existing tube-based visualizations. We especially do not want to sacrifice recent advancements in terms of visual fidelity that enable improved spatial perception.</p><p>In this work, we present a domain-agnostic toolbox that offers the flexibility to quickly create use-case driven multivariate trajectory visualizations for both small and large scale data sets, and we lay the technical foundations necessary to achieve this. We provide a smart view-dependent parameterization approach to minimize distortion of glyphs and to maximize their visibility at the same time. Light-weight data management on the GPU and procedural generation of glyphs ensures high performance and enhances the flexibility of the system.</p><p>High quality textures are achieved by generating them on-the-fly in the shading stage. For this, glyph rendering is based on the evaluation of signed distance functions, opening up the use of a near-infinite range of shapes to render glyphs and plots from, while at the same time enabling effects such as pre-filter anti-aliasing and outlines. We limit the performance impact of this procedural approach by employing a deferred shading pipeline, which also enables other advanced per-fragment effects like ambient occlusion to be performed efficiently. Geometry anti-aliasing for deferred shading is supported via standard temporal-and screen-space methods. The geometry pass of the pipeline can be switched to an image-order ray caster that utilizes hardware ray tracing cores, further extending the scalability to massive data sets. To summarize, our main contributions are:</p><p>• A powerful approach to building use-case driven, high quality tubebased visualizations of multivariate line data sets:</p><p>-Efficient: a large number of attributes can be visualized directly in their spatial context, reducing the need for additional views. -Flexible: layers and procedural glyphs allow for quick adaptation to use cases. -Extensible: any glyph or plot that can be expressed in terms of a signed distance function could be incorporated.</p><p>• A high-performance spline tube rendering architecture:</p><p>efficient anti-aliased deferred shading pipeline for spline tubes with ambient occlusion, either using a highly optimized rasterization strategy or hardware RT cores to cast rays, enabling best possible performance for small and large data sets alike requires few pre-computations, all of which are fast (ambient occlusion density field, parameterization, glyph placement, construction of acceleration structure when using hardware RT cores)</p><p>We also provide an interactive prototype that demonstrates both the flexibility and realtime performance of the methods we present. We used this prototype in the validation of our approach with various data sets and found that already few procedural glyphs and plots in combination with the layer concept provide the power to easily create expressive visualizations for many different contexts. Examples of such visualizations can be seen in Fig. <ref type="figure" target="#fig_2">1</ref>. The large configuration space combined with the interactive speeds of all involved calculations make us confident that both visualization researchers and domain experts will benefit from this approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK 2.1 Multivariate Data Visualization</head><p>Ware defines data as a set of entities, their attributes and relations <ref type="bibr" target="#b43">[43]</ref>, with the number of attributes possessed by an entity determining its complexity. Entities with a complexity higher than two are referred to as multivariate data. Finding suitable visual mappings for the given attributes to allow for good perception of value and relations is the main concern of visualizing such data. Different authors have investigated visual properties and their mappings to attributes of varying types. The works from Cleveland and McGill <ref type="bibr" target="#b4">[5]</ref> and Mackinlay <ref type="bibr" target="#b27">[27]</ref> provide the groundwork for the usage of graphical primitives in visual representations of data. Beyond design guidelines, they rank the effectiveness of visual properties in perceptual tasks based on the type of data (quantitative, ordinal, or nominal).</p><p>For the visualization of multivariate data, several surveys and overview works have been conducted <ref type="bibr" target="#b18">[18,</ref><ref type="bibr" target="#b26">26,</ref><ref type="bibr" target="#b45">45,</ref><ref type="bibr" target="#b47">47]</ref>. These reviews provide valuable summaries and categorizations of the various existing techniques and state of the art. Early works like the one by Wing and Chang <ref type="bibr" target="#b45">[45]</ref> have focused on the various aspects of visual encodings. Ward <ref type="bibr" target="#b42">[42]</ref> presents an overview of glyphs that are especially well-suited to represent multivariate data. The author defines glyphs as graphical objects or symbols that represent data entities and map their attributes to graphical properties. Later surveys aim to provide general summaries of the possibilities of high-dimensional data visualization as a whole. Liu et al. <ref type="bibr" target="#b26">[26]</ref> provide a coherent overview including classifications of methods for data transformation, visual mapping and view transformation. Methods for feature classification, fusion visualization and correlation analysis specific to spatial data are presented by He et al. <ref type="bibr" target="#b18">[18]</ref>. Additional to the more general surveys, Zhou and Weiskopf <ref type="bibr" target="#b47">[47]</ref> review methods for the visualization of multivariate particle data sets. They also evaluate the usage of general multivariate visualization methods like scatter plots and parallel coordinates in that context. Staib et al. <ref type="bibr" target="#b35">[35]</ref> employ so-called flow ribbons, which combine animation with abstract views of the data while preserving relation to the spatial domain. For general time-dependent data in multidimensional state spaces, Grottel et al. <ref type="bibr" target="#b11">[11]</ref> adapt well-known tools for multivariate visualization and propose continuous-time scatter plot matrices and parallel coordinates plots. Since these do not visualize time information directly, they further introduce temporal heat maps and combine these modalities into coordinated views. We adapt their temporal heat map as color bands on the tube surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">3D Trajectory Visualization</head><p>A multitude of methods to visualize trajectory data have been proposed, a detailed review of which is given in a recent survey by He et al. <ref type="bibr" target="#b17">[17]</ref>. The spatial extent of three-dimensional trajectories is typically conveyed using lines, tubes, ribbons or consecutive arrangements of primitives, as presented by Buschmann et al. <ref type="bibr" target="#b3">[4]</ref>. Their hardware accelerated attribute mapping enables changes to the visualization parameters in real-time. Data attributes are mapped directly to visual properties of the geometric representations, and texture mapping is used to display additional attributes by varying pattern density, stretch or animation speed. In a follow-up work, they applied this approach to visualize animated air-traffic data <ref type="bibr" target="#b2">[3]</ref>, where arrows depict the movement direction of aircraft. Tominski et al. <ref type="bibr" target="#b37">[37]</ref> propose using stacked trajectory bands to visualize space, time and attribute values simultaneously. They use color mapping to depict attribute values and integrate time through the ordering of bands. For vector fields, Stoll et al. <ref type="bibr" target="#b36">[36]</ref> also utilize color, tube radius and texture mapping to visualize streamline attributes. Both approaches indicate the general direction of movement using arrow textures. Contrary to that, Vrotsou et al. <ref type="bibr" target="#b39">[39]</ref> indicate the direction of paragliding trajectories using tapered segments. Further, they propose simplification methods for the visualized trajectories. One drawback of this approach is that it does not allow for texture mapping in a coherent manner, thus one has to rely only on color mapping.</p><p>For trajectories attributed with orientation values, ribbons are a suitable choice of representation. Ware et al. <ref type="bibr" target="#b44">[44]</ref> use such ribbons to visualize the underwater movement of humpback whales. Texture mapping on the flat sides of the ribbon conveys the swimming direction with a 2D chevron pattern. To visualize the angular velocities, they use 3D sawtooth glyphs that are placed onto the ribbons. More involved use of texture mapping for encoding spatial properties of the trajectories is possible as well, as shown by Ritter et al. <ref type="bibr" target="#b32">[32]</ref>. Here, the density of procedurally generated circle or stroke patterns is varied to indicate relative distances between trajectories or to the viewer.</p><p>Common to all these techniques is a strong focus on the spatial aspects of the data, with usually one or two additional characteristic attributes included for context. On the other hand, methods dedicated to multivariate data visualization have limited capability to provide intuitive spatial insights, especially on larger scales. We see a strong opportunity for improvement here by combining techniques from both fields in an economic manner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Tube Rendering</head><p>Various methods have been proposed to generate tube-like geometry from discrete polyline representations of trajectories. In the standard approach, a fully tessellated tubular mesh is generated around a given trajectory. Cross-section vertex rings located around the sample points are connected to form a generalized cylinder, as described by Ueng et al. <ref type="bibr" target="#b38">[38]</ref> and Zhang et al. <ref type="bibr" target="#b46">[46]</ref>, implying a swept-disc type tube volume which -depending on the use case -requires special care for points with extreme inflection or G 1 -discontinuous segment connections. With shading, realistic results are produced that allow for good depth perception and, with appropriate parameterization, easy texturing.</p><p>As the amount of geometry quickly becomes a bottleneck for large data sets, other approaches use imposters that give the impression of tubes when combined with a lighting approximation <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b28">28,</ref><ref type="bibr" target="#b30">30,</ref><ref type="bibr" target="#b34">34,</ref><ref type="bibr" target="#b36">36]</ref>. Perhaps most relevant to us from this family of methods is work done by Everts et al. <ref type="bibr" target="#b9">[9]</ref>. They present stylized wide lines with depth dependent halos and depth cueing, and later extend this work to allow the mapping of various texture patterns modulated by data attributes <ref type="bibr" target="#b10">[10]</ref>.</p><p>Simple impostors without depth information might fall short of delivering realistic results at geometry intersections. As an alternative, direct ray casting of tubes can be used. Reshetov and Luebke <ref type="bibr" target="#b31">[31]</ref> proposed a fast iterative algorithm for computing the approximate intersection of a ray with a tube following a polynomial curve. Their algorithm is fast and delivers high-quality results using a swept-disc type tube model. Han et al. <ref type="bibr" target="#b16">[16]</ref> introduced a piece-wise linear tube primitive defined as a union of spheres interconnected by tangential cones, and provide a method for efficiently composing this union within a raytracing framework. Being effectively swept-sphere, their model naturally handles junctions and corners. Groß and Gumhold <ref type="bibr" target="#b12">[12]</ref> proposed a rasterization-based pipeline for GPU ray casting of a similar piece-wise linear tube primitive with support for correct transparency and ambient occlusion. They achieve high geometry throughput by using screenspace proxy quadrilaterals for casting rays, while the fast GPU visibility sorting necessary for transparency increases fill-rate utilization. Russig et al. <ref type="bibr" target="#b33">[33]</ref> proposed a swept-sphere Hermite spline tube primitive that can be efficiently ray casted, enabling smooth, continuous tubes similar to <ref type="bibr" target="#b31">[31]</ref>. They also propose a rasterization-based pipeline, but use oriented bounding boxes as proxy geometry, negatively affecting geometry throughput.</p><p>Recently, it has been shown that image-order ray casting has a clear scalability advantage over rasterization. <ref type="bibr">Kanzler et al. [20]</ref> proposed a voxel-based ray-marching pipeline suitable for GPUs that can easily cope with extremely large data sets, although their piece-wise linear tube model cannot generally represent data sets exactly due to the inherent discretization, and is thus best suited for overview visualizations. Kern at al. <ref type="bibr" target="#b22">[22]</ref> compared the efficiency of several image-order ray casting and rasterization-based tube rendering strategies in the context of transparency. Notably, they confirmed that utilizing the hardware ray tracing (RT) cores available in the latest generation of GPUs offers superior performance at scale, especially when only the primary rays are required. Specifically in the context of tubes, Wald et al. <ref type="bibr" target="#b40">[40]</ref> have shown that utilization of hardware RT cores can be optimized even further by exploiting the GPU ray transformation facilities that are used for supporting hierarchies of acceleration data structures to essentially enable free oriented bounding box rejection tests, greatly benefiting user-defined line/curve primitives.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ON-TUBE VISUALIZATION</head><p>To our knowledge, there are currently no methods described in the literature that allow for a significant number of additional scalar attributes to be visualized for multi-variate trajectories without assuming restrictions on their spatial complexity or using additional linked views. On-tube visualization tackles this challenge by making use of the space offered by the tube primitives to display additional visualizations. In this section, we will elaborate on this concept.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Design Goals</head><p>Our main objective is to enable interactive visualization of as many additional scalar variables as possible from highly multivariate 3D trajectories (also called traces) directly in their spatial context. The defining feature of trajectories over more general line data is their parameterization in terms of time. While we explicitly target trajectories, the method should be general enough to be applicable to all kinds of line data from many scientific fields, including those that typically deal with very large data set sizes. For this, rendering performance is as important as aiding structural perception, which are potentially conflicting goals.</p><p>The additional attributes visualized alongside the spatial behavior of a trace should mainly provide better context, but ideally they should also help analysts identify interesting developments in the data that would otherwise remain hidden when inspecting a purely spatial view. Nevertheless, we do target analysis tasks for which spatial aspects are of prime importance, so the added elements must not cause clutter or introduce occlusion issues. Finally, we do not aim for the ability to get exact readings of quantities from the visualization (we feel this is best served by on-demand linked detail views, the integration of which we deem out of scope in this work). They should instead help revealing local trends and anomalies, correlations or divergences between spatial and non-spatial behavior, as well as relative quality. In this work, we develop the technical framework needed to craft such visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Design Rationale</head><p>Tube primitive. The choice of line primitive forms the main dimension of the design space for any 3D trajectory visualization. We consider the use of tubes a premise because of the widespread familiarity many domain experts have with them. We do believe their popularity is warranted though, as they are a direct and intuitive representation of the volume a moving object has covered along its path, and in some fields even directly correspond to the physical object they represent (e.g. blood vessels or nerve fiber tracts). While ribbon-like primitives trivially support correct texturing, they either favor certain viewing directions or require non-trivial view-alignment that can still break down in areas where trajectory and viewing direction become parallel. Nevertheless, we strive in this work to adapt the desirable properties of ribbon parameterization to tube texturing. The curved surface of a tube does pose a challenge when using it as a canvas for visualization, but we feel confident that the surface parameterization we present in Sect. 4.3 sufficiently mitigates the inherent distortions to make the design goals laid out in the previous section achievable.</p><p>The particular choice of tube primitive is limited by the need for a continuous canvas to draw on. The piecewise linear cone-sphere combination prevalent in line data visualizations is problematic here, since it inherently introduces singularities to cylinder-like parameterizations, as the spheres connecting two segments correspond to single points on the axis. On the other hand, recent work has shown that ray casting of tubes extruded from parametric curves can be implemented fast enough for real-time applications, so they are a viable choice <ref type="bibr" target="#b31">[31,</ref><ref type="bibr" target="#b33">33]</ref>. As a curve representation, Hermite splines in particular lend themselves well, as velocity vectors are a common trace attribute, which in turn opens up possibilities of major data-guided reduction for the purpose of rendering (which we did not look at in this work).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Glyph and plot-based visualization.</head><p>Trace data is usually discretized. Attributes are being sampled at finite time or space intervals, and often the rate at which they are being sampled varies. Additionally, some data types such as events are meaningless to interpolate. Glyphs are an adequate tool for such data as they can be placed exactly at the point on the trajectory where the sample was taken. However, care must be taken in the case of on-tube visualization. While the usual considerations discussed in the literature regarding perception of geometric features like size, area or angles apply, the issues they pose are exacerbated by the curved tube surface. Additional limitations apply to the use of orientation: Directions other than forward or backward become somewhat disconnected from the space they are embedded in. Smooth view-alignment of the visualization around the tube inherently requires that there be no preferred reference direction, thus relative directions like "left" or "right", "up" or "down" in texture space do not necessarily agree with the corresponding directions in the original 3D reference frame of the traced object.</p><p>The selection of glyphs we implemented in our prototype takes these considerations into account. In addition, we implemented continuous mappings as an alternative for scalar attributes that are very densely sampled or which are safe to interpolate. Table <ref type="table">1</ref> lists the glyphs and plots we have implemented so far. Our selection is in no way exhaustive and we do not claim an optimal choice at this point. Rather, we regard it as part of a proof-of-concept effort for demonstrating the feasibility and usefulness of on-tube visualization. As we will show in Sect. 4.4, the framework allows for easy integration of new glyph and plot types.</p><p>Layers. We propose to stack glyphs and plots in layers as a way to organize the visualization and group together related attributes or those that are especially well-suited for a certain visualization type. Furthermore, they provide a clear way of defining a z-order for compositing, for which we currently employ simple alpha blending. However, they also provide a clear singular extension point for adding more advanced compositing techniques later on (e.g. into other channels like surface normal or reflectance properties of physically based lighting models).</p><p>Layers also serve to configure the glyph or plot they are set to draw. Table <ref type="table" target="#tab_1">2</ref> lists the general options we currently support.</p><p>Reference grid. To counter both perspective distortions when embedding visualizations in 3D space as well as enabling comparison of glyph proportions over longer distances, we added the option of a reference grid. Since the color channel can easily become overloaded when superimposing several layers, the grid can be purely normal-mapped, or use a tunable combination of color and normal-mapping. Fig. <ref type="figure" target="#fig_0">2</ref> gives a schematic overview of the on-tube visualization concept.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Renderer Design</head><p>We opted to include both object-order and image-order ray casting using the OpenGL rasterization pipeline and the NVIDIA OptiX hardware ray tracing API <ref type="bibr" target="#b29">[29]</ref>, respectively. While ray tracing will scale better for massive data sets, rasterization still has a performance advantage for a relevant range of small to medium data set sizes in our experiments. Thus, we argue that it is an important option to have, even when hardware support for ray tracing is present. quantities (width, height) like speed and acceleration. Sign 1 quantity that oscillates around zero (directly supports negative values), changes shape smoothly from '−'like to '+'-like (see Fig. <ref type="figure" target="#fig_1">3</ref>) Star simple implementation of star coordinates <ref type="bibr" target="#b19">[19]</ref> for multiple comparable scalar attributes (see Fig. <ref type="figure" target="#fig_1">3</ref>). Line plot <ref type="bibr" target="#b35">[35]</ref> maps up to n quantities to thickness of n lines (we currently support n = 1..4), ideal for densely sampled comparable scalar attributes (see Fig. <ref type="figure" target="#fig_1">3</ref>). Temporal heat map <ref type="bibr" target="#b11">[11]</ref> maps up to 4 quantities to tube color. Useful even for a single attribute as it bypasses the limited sampling rate (at the spline nodes) of the tube color visual attribute (see Fig. <ref type="figure" target="#fig_1">3</ref>).</p><p>Table <ref type="table">1</ref>. Glyph and continuous mapping types implemented for this paper and their recommended usage. Each glyph also supports color mapping in addition to its explicitly mentioned visual attributes.</p><p>sampling original<ref type="foot" target="#foot_0">1</ref> , uniform time, equidistant interpolation type nearest, linear, cubic outline on/off, thickness color fixed or color-mapped attribute 1..n fixed value or data source, windowing params For rasterization, we build upon the Hermite spline tube pipeline by Russig et al. <ref type="bibr" target="#b33">[33]</ref> and improve it with established GPU ray casting optimizations to further increase render performance. Regardless of the choice of render method, we expect their swept-sphere tube model to be more robust with real-life trajectory data due to the natural support for G 1 discontinuities and tolerance to areas of extreme inflection that sweeping a sphere offers, but we also include the highly efficient intersection routine by Reshetov and Luebke <ref type="bibr" target="#b31">[31]</ref> when swept-disc tubes are unproblematic and rendering speed is deemed most important.</p><p>Since the shading operations required to realize on-tube visualization can become quite complex depending on the number of layers and glyph types used, we must take care that no unnecessary work is done on fragments that are later discarded. This is not an issue for imageorder ray casting, but cannot be avoided in rasterization unless the work is deferred to a separate shading pass. Since deferred shading prevents use of multi-sampling by the GPU, we use Temporal Anti-Aliasing (TAA, <ref type="bibr" target="#b21">[21]</ref>) as a standard approach.</p><p>Finally, we opted against using two completely separated renderers. OptiX allows for near-seamless integration into the OpenGL-based renderer, which in turn greatly simplifies the overall software architecture by reducing duplicate code. Furthermore, we do not see a clear benefit from simulating global illumination effects other than ambient occlusion, which can be adequately implemented in rasterization. While on-tube visualization targets closer distances, AO is strongly required to aid spatial perception at overview scales (see Fig. <ref type="figure" target="#fig_2">1 (c)</ref>). Future work may investigate combining on-tube-visualizations with transparency, which might warrant a purely ray tracing-based renderer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">CONCEPT AND IMPLEMENTATION</head><p>This section details the technical aspects of our approach. We start with an overview of the rendering process and then discuss the most important components in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Overview</head><p>Our pipeline, as illustrated in Fig. <ref type="figure" target="#fig_3">4</ref>, has two render paths, enabling the use of both rasterization and ray tracing hardware to perform ray casting (the latter we will refer to as the RT path for short). The rasterization path shares all pre-processing steps with the RT path, while the latter additionally requires building an acceleration bounding volume hierarchy (BVH), which is implemented within the OptiX API.</p><p>First, loaded data is converted to an internal representation. We assume spatial trajectories sampled over time with tangent vectors that are automatically estimated with finite differences if not contained in the input data. Tube radius is kept constant to avoid scaling of glyphs. 2  Each trajectory is organized into nodes storing position plus tangent, and Hermite segments indexing their start and end node. An arbitrary number of additional data series is supported. Their sampling is not constrained to the position nodes but can have an independent, often denser and also varying sampling rate. When the RT path is utilized, we need to provide axis-aligned bounding boxes for each segment to the ray tracing API, which we compute from the node data according to the chosen radius (see Sect. 4.2). The rasterization path consumes the node data without further pre-processing in the form of line lists; the necessary proxy geometry (illustrated in Fig. <ref type="figure" target="#fig_4">5 (a)</ref>) is generated on-thefly. Once all geometry is uploaded to the GPU, the scene is voxelized into a density volume, which is later used to apply ambient occlusion (AO) using a technique similar to <ref type="bibr" target="#b6">[7]</ref>. We implemented this process as a highly parallel GPU algorithm to allow for fast re-computation when loading a new data set.</p><p>Glyphs are sampled at discrete time values and are specified in a local 2D coordinate system over the range [−1, 1] 2 . To map the glyphs onto the tube surface, we locate the glyph center based on its time value and our (u, v) surface parameterization. The parameterization is described in Sect. 4.3, and the process of creating and placing glyphs is detailed in Sect. 4.4. Once the parameterization is calculated on the CPU, it is transferred into a GPU-side buffer for access by the shading stage. Glyph data and information about which glyphs overlap a segment are also uploaded to the GPU in two buffers that need updating after every change in the mapping configuration.</p><p>With all pre-processing completed, rendering is started via the chosen render path. Rasterization and RT paths share a common output interface and are thus exchangeable modules for the geometry stage in our deferred shading architecture. The per-pixel attributes surface color (as emitted from the tube primitive), hit position, hit normal, spline tangent, segment index and texture coordinates (calculated with the help of the parameterization within each render path) are stored in a G-Buffer. The shading pass determines the final unlit color for each pixel by drawing up to four glyph layers as well as the optional and potentially normal-mapped reference grid on top of the surface color. Glyph drawing happens by evaluating their signed distance function (see Sect. 4.4). Shading is finalized with local lighting, with the AO term being evaluated globally using the previously computed density volume. The resulting image is then anti-aliased using standard TAA.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Ray Casting</head><p>In the following, we will describe important implementation details for each render path.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Rasterization path.</head><p>As is typical for object-order GPU ray casting, the primitives are approximated by proxy geometry that, in the best case, tightly encloses the silhouette of the original shape. The complexity of this proxy geometry greatly impacts the efficiency of the method, and herein lies the main optimization opportunity compared to <ref type="bibr" target="#b33">[33]</ref>. It is important to note that unlike for the RT path, splitting curves into smaller segments has a direct negative impact on GPU geometry load, so emitting as little proxy geometry as possible is key to make rasterization scale well with data set size.</p><p>Following the original approach, the geometry shader is responsible to generate proxy geometry for the quadratic sub-segments within a Hermite segment. Our major optimization is to compute the extents of a view-aligned oriented bounding box instead of one that is fitted in object-space. This enables using the front-facing side (which will cover 2 We initially set the tube radius to 1 /4 of the average distance between position samples and make this factor user-adjustable. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Compute Shader</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Preprocessing CPU</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Attribute Data Arc Length Parameterization</head><note type="other">Glyph</note><p>where e is the eye position. Using these basis vectors, we construct a 3×3 rotation matrix R = [ x, ŷ, ẑ]. The control points are then transformed into the local coordinate system by moving the centroid to the origin and applying the inverse rotation:</p><formula xml:id="formula_1">b 1,2,3 = R T • (b 1,2,3 − c b ).<label>(2)</label></formula><p>Calculating the bounding box extents can then be performed on b 1,2,3 following the procedure detailed in <ref type="bibr" target="#b33">[33]</ref>, however, only the face normal to the local ẑ direction needs to be emitted. The modified proxy geometry still lies completely in front of the actual primitive geometry. Thus, the conservative depth extension of the rasterization pipeline can be used to reclaim the early-z test. To capitalize on this, primitives are drawn front-to-back by sorting them in visibility order. Sorting is performed whenever the view changes a certain amount using a GPU-based compute shader implementation of a fast parallel radix sort <ref type="bibr" target="#b14">[14]</ref>. We found that 36 degrees of orbital movement around the camera focus are a reasonable threshold for triggering a re-sort. To enable TAA with rasterization, we apply subpixel jitter to the projection matrix each frame using a 2D Halton pattern <ref type="bibr" target="#b15">[15,</ref><ref type="bibr" target="#b21">21]</ref>.</p><p>RT path. Thanks to OpenGL interoperability, OptiX enables accelerated image-order ray casting to be used as a drop-in replacement for the rasterization path in our pipeline. However, it requires axisaligned bounding boxes to be provided when custom primitives are used. We can use the same procedure as outlined above, but we use the world-coordinate system as the target reference frame instead. Ray casting results are transferred into the G-Buffer using fast GPUinternal memory transfers. To enable TAA, we choose jittered sub-pixel locations for casting rays using the same pattern as with rasterization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Spline Tube Parameterization</head><p>For tube surface parameterization, our goals are to minimize distortion and to maximize glyph visibility from an arbitrary viewing direction. There are three major sources of distortion: tube parameterization, tube curvature, and perspective projection. To minimize impact of parameterization, we re-parameterize according to trajectory arc length. The orthogonal direction around the tube could also employ circular arc length as shown in Fig. <ref type="figure" target="#fig_5">6</ref> on the right side, but tube curvature results in a distortion that increases towards the silhouette. We compensate for this with the screen aligned parameterization shown on the left of Fig. <ref type="figure" target="#fig_5">6</ref>. Glyph visibility can be maximized by aligning the v-origin on the surface with the center of arcs corresponding to fixed u parameter values as illustrated by the dark brown dotted line in Fig. <ref type="figure" target="#fig_6">7 (a)</ref>. v coordinate. The center of Fig. <ref type="figure" target="#fig_5">6</ref> illustrates the computation of v on an orthogonal cut through the tube, where the tube tangent points towards the reader. Imagine that the eye is located to the left along the x-axis. We can compute the screen-aligned normalized up direction ûs (see also Fig. <ref type="figure" target="#fig_4">5</ref>) according to ûs ∝ ts × (x s − e).</p><p>(</p><formula xml:id="formula_2">)<label>3</label></formula><p>From the screen aligned up direction, v computes to</p><formula xml:id="formula_3">v = nhit , ûs . (<label>4</label></formula><formula xml:id="formula_4">)</formula><p>v can be easily computed in the fragment shader. u coordinate. To compute the u coordinate from the tube parameter t hit at a hit point, we need fast access to an arc length parameterization s j (t) for each tube segment j, which we assume to be parameterized over t ∈ [0, 1]. We follow the same strategy as proposed by Walter and Fournier <ref type="bibr" target="#b41">[41]</ref>. They observed that the arc length parameterization can be accurately approximated by optionally splitting the domain into two parts and representing each part of the parameterization by a cubic polynomial computed by a fit to four equidistant samples t i of a precise numeric approximation of s(t i ). They propose to split the domain at potential inflection points. Here, we take a more GPUfriendly approach that avoids conditional execution by splitting the domain equidistantly into four spans g j,k=0...3 as illustrated in Fig. <ref type="figure" target="#fig_6">7</ref> (b). To compute the polynomials g j,k (l) in Bernstein basis,</p><formula xml:id="formula_5">g j,k l = (1 − l) 3 • b j,k 1 + 3l(1 − l) 2 • b j,k 2 + 3l 2 (1 − l) • b j,k 3 + l 3 • b j,k 4<label>(5)</label></formula><p>each parameterized over l ∈ [0, 1], we first evaluate s i = s(t = i /12) for i = 0 ...12 using 10-point Gauss-Legendre quadrature. From this the Bernstein coefficients compute to where σ j is the sum over all segments before segment j. Finally, u is computed from</p><formula xml:id="formula_6">b j,k 1 = s 3k + σ j , b j,k 4 = s 3k+3 + σ j (6) b j,k 2 = 1 /6(18s 3k+1 − 9s 3k+2 + 2) + σ j (7) b j,k 3 = 1 /6(−9s 3k+1 + 18s 3k+2 − 5) + σ j . (<label>8</label></formula><formula xml:id="formula_7">)</formula><formula xml:id="formula_8">u = g j, 4t 4(t mod 1 /4) /R, (<label>9</label></formula><formula xml:id="formula_9">)</formula><p>where we divide by tube radius R to ensure that the on-tube glyph coordinate systems illustrated in Fig. <ref type="figure" target="#fig_4">5</ref> (b) are uniformly scaled. We upload the coefficients b j,k 1...4 in one 4x4 matrix per segment to the GPU. Additional Considerations. Even though we do not expect this to negatively impact the effectiveness of on-tube visualizations, we note that Hermite splines are only C 1 continuous at segment transitions, causing the continuity of surface normal and v parameterization to reduce to C 0 . This can lead to noticeable kinks in v-parameter iso lines and mapped glyphs.</p><p>The parameterization currently ignores the end caps at the beginning and end of a trajectory, which can cause artefacts like in Fig. <ref type="figure" target="#fig_8">9</ref>, where the yellow Star glyph axis is mapped to the complete end cap hemisphere due to the u singularity there. The end caps of swept-disc tubes will instead take on a single color as their planar nature causes a singularity in v. We leave the resolution of both effects to future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Attribute Visualization</head><p>As in most visualization tools, we define a windowing function for each mapped attribute based on the value range in the data and an output range defaulting to [0, 1]. The user can adjust both ranges and if desired, reverse the output range for a windowing function with negative slope.</p><p>Glyph placement. Each layer supports a different glyph type. As each glyph combines several attributes that can be sampled differently, we support nearest, linear and cubic interpolation for re-sampling before mapping to visual attributes. While we support placing glyphs equidistant in time or trajectory arc length, we argue for a variable spacing that maximizes space utilization and reduces the need for interpolation, as illustrated in Fig. <ref type="figure" target="#fig_7">8</ref> for a moderately complex setup.</p><p>The basic idea is to instantiate glyphs per layer in a single pass through each trajectory such that no two glyphs overlap on the tube, iterating over all unique timestamps of all attributes (A1,A2,A3 in Fig. <ref type="figure" target="#fig_7">8</ref>) mapped in the current layer. By default, glyphs are placed in a greedy manner: The first glyph is placed at the earliest possible timestamp, and subsequent glyphs are placed at the next timestamp among all involved attributes where no overlap in u-extent with the previous glyph occurs. For equidistant spacing, the glyph locations are simply chosen independently of attribute sample locations. Even without parallelization over trajectories, this O(n) algorithm executes in less than 1 /3 of a second for all but our two largest test cases, where our benchmark configuration (see Sect. 6) causes a noticeable one-time lag of 0.8 and 2 seconds respectively. This would pose a minor annoyance for very large datasets, but an optimized parallel GPU-implementation could drastically reduce execution time.</p><p>Regardless of the chosen placement strategy, the result of the placement algorithm is a) an array of glyph information per layer consisting of glyph center u ctr and extent [u min , u max ] as well as the vector of involved data attribute values with interpolation and windowing applied, and b) annotations for every segment storing a range of indices into a) that mark which glyphs overlap with it. Both arrays are provided in GPU-side buffers for shading. Behavior of the parameterization for some Hermite tube segment j, defined by the tube axis/position curve p j (t) (central dashed line) connecting nodes N 1 , N 2 . The dotted line going through the point x hit marks where v = 0. It bisects all crosssection disk arcs on the tube surface into 2 arcs of equal length (a and b for the disk around x s ). v runs from −1 to 1 between the opposing tube silhouette lines. Note that the screen-space direction of v depends on the screen-space direction of the curve tangent at that point. (b) Arc length approximation. Plot of s j (t) vs. precise measurements of the arc length of some Hermite segment j. The graph is colored according to the polygonal spans g j,k being used in each range of t. The Hermite control point matrix of the curve used for this example is K j = (−1.5, 0, −1) T (−1.5, 0, 12) T (−16, 0, 21) T (2, 0, 1) T Parameters u and v are computed as described in Sect. 4.3 for every ray intersection and are provided to the fragment shader in the G-Buffer (see Sect. 4.1). The shader can now check u min &lt; u &lt; u max on the two closest glyphs associated with the segment to find which, if any, is covering the fragment. The closest glyphs are in turn found on-the-fly via binary search. In case a glyph is found, glyph-local coordinates τ = (u − u ctr , v) are computed and passed on to glyph instance evaluation, which provides color and opacity of the glyph at the fragment. Continuous mappings are handled slightly differently:</p><p>Here, "glyphs" represent control points and have zero width. Thus, the algorithm generates an attribute vector at all unique timestamps. For shading, either two or four adjacent attribute vectors are collected depending on the requested interpolation scheme.</p><p>Procedural glyphs and plots. Fig. <ref type="figure" target="#fig_1">3</ref> shows the two discrete glyphs (Sign and Star) as well as two continuous mappings (Line and Heat map) illustrating the different interpolation strategies. Continuous mappings are evaluated in (u, v) coordinates in the same way as if drawn in a 2D visualization.</p><p>The discrete glyphs are procedurally constructed without generation of any geometry data. Most glyphs are based on evaluation and combination of signed distance functions (SDFs) together with a color selection strategy. SDFs provide algebraic distance from the glyph outline and indicate whether the sampling point is inside through their sign. Drawing of outlines is also straight-forward by selecting the glyph color inside and the outline color around the zero values (see Fig. <ref type="figure" target="#fig_7">8</ref>). For glyph internal antialiasing of color edges we exploit the fwidth and the smoothstep functions of GLSL. In the following, we detail the evaluation of the Sign and Star glyphs, since they exemplify the power and flexibility that SDFs award to the framework.</p><p>Let f − (τ), f • (τ) and f + (τ) be SDFs describing a rectangular shaped minus symbol, a circular shape zero symbol and a cross shaped plus symbol. Simple linear interpolation with parameter α ∈ [−1, 1] allows mapping of a signed attribute:</p><formula xml:id="formula_10">S a (τ) = − a f − (τ) + (a + 1) f • (τ), if a ≤ 0 (1 − a) f • (τ) + a f + (τ) otherwise (<label>10</label></formula><formula xml:id="formula_11">)</formula><p>Perceptual scaling can be added by a simple re-parameterization of α, which we leave for investigation in future work. The Star glyph is an example of a complex cascade of union operations on lines and optionally, a polygon filling the area enclosed by the star coordinates. The union can simply be implemented by a minimum over the SDFs of the composing shapes. We additionally use the distance to the line primitives for selecting different colors per axis and for the interior, as well as for defining a blending area within which these colors should smoothly blend into each other. When rasterization is used, deferred shading effectively limits the performance penalties such complex constructs incur, as the measurements in Sect. 6 confirm. Reference grid. To help judging relative sizes and distances, we implemented a procedural 2-level reference grid. The spacing of the grid lines are user-configurable, but by default they are chosen such that they create square-looking cells, with a multiple of 4 minor ticks for every major tick. For normal mapping, we implemented two relief models. The simpler of the two creates V-shaped troughs, the other attains smooth-looking results via sine-wave shaped normal perturbation at the cost of a small but measurable performance impact (see Sect. 6). The configurations in Fig. <ref type="figure" target="#fig_9">10 (c and f</ref>) show an example of the grid being employed in an on-tube visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Prototype Tool</head><p>To test our approach, we created a prototype implementation capable of loading data sets from various formats. The tool was implemented as a plugin to the CGV-Framework <ref type="bibr" target="#b13">[13]</ref> using the OpenGL API, following the flow detailed in Sect. 4.1. We also already leverage the framework's plugin architecture to enable quick extension with newly supported data formats, and it could be leveraged to enable extension with new glyph and plot types as well.</p><p>Fig. <ref type="figure" target="#fig_8">9</ref> shows a screenshot of the tool interface. Data sets are loaded using the graphical user interface (GUI) or simply via drag &amp; drop, which triggers arc length re-parameterization and voxelization. The GUI is further used to manage glyph and plot layers. To support the large amount of possible visual mapping combinations, the implementation programmatically generates and compiles the fragment shader on demand, which is fast and only necessary when changing layers or glyph types. Glyph placement is also done whenever these actions occur. Value changes like adjusting color maps or mapping parameters are interactive and directly reflected in real-time on the visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CASE STUDIES</head><p>Multivariate trajectory data emerges from a variety of applications. The tool just presented has the potential to create rich and diverse on-tube visualizations for such data. In the following, we examine three use cases, including land and air vehicles and a flow simulation, covering a wide area of possible applications of our approach. The example configurations presented are intended to show the flexibility of the tool; we do not yet claim optimality for the data sets at hand. Car Movement Data. Computerization has transformed the way manufacturers control the state of modern motor vehicles. Nowadays, combustion engines need precise controlling to meet the strict emission regulations imposed by governments. Ongoing digitalization enables the read-out of sensor data and internal state in the form of on-board diagnostics (OBD). The NOx Emissions (NOx = Nitrogen Oxides) data set is a recording of OBD data, originating from a 100 km long test drive through cities, rural areas and over highways. Fig. <ref type="figure" target="#fig_9">10 (a, b and c</ref>)  The widget to the left shows the preset color maps, mostly from <ref type="bibr" target="#b5">[6]</ref>.</p><p>show different glyph configurations applied to this data set. The small box in (b) shows an overview of the whole route.</p><p>In (a), we studied the relations between throttle (white Rectangle height), fuel flow and emissions (blue and red Line plots). Tube color shows velocity, with yellow being faster. Fuel flow usually increases after throttle is applied, which is to be expected, producing a subsequent rise of emissions. However, the bottom row shows significantly more exhaust gases produced for a similar amount of throttle and fuel used. Since the speed is similar, we guess this results from higher engine speed in a lower gear -unfortunately these attributes were not included. Depending on traffic, the driver or automatic transmission could have chosen a higher gear in the bottom scenario to reduce emissions.</p><p>Another mapping was applied in Fig. <ref type="figure" target="#fig_9">10 (b and c</ref>), again showing emissions but this time using both available sensors. A Star is used to allow quick shape-based perception of correlations between throttle amount (red), fuel flow (blue) and emission (grey). The Temporal heat map displays the NOx aftertreatment state (black means active) as a single attribute. Movement direction is depicted by small white Triangles. Color helps to quickly find interesting areas in (b), where a close inspection can be performed. It seems that the fuel flow and subsequently the emissions are delayed, probably because throttle response is not instantaneous. Still, emissions rise with the amount of burned fuel, albeit sometimes with a discrepancy between the two sensors. However, we have also seen areas with longer time spans of throttle applied and no significant fuel flow or NOx gases produced. Overall, aftertreatment happens more often than expected -especially in contrast to the regeneration of the particulate filter -and is usually performed in small intervals, sometimes with very short time in between. Fig. <ref type="figure" target="#fig_9">10 (d)</ref> shows Vehicles, which is another data set of vehicle movement data (see also Fig. <ref type="figure" target="#fig_2">1 (a)</ref>). Here we employed the Temporal heat map to simultaneously show engine rpm, throttle amount and brake action. It is interesting to see that the driver did not break when entering the sharp turn, probably because the car was already driving slow but also there must have been no immediate oncoming traffic on the entered lane. Throttle abruptly stops when preparing a gear change, while engine rpm stayed high until the shift action was executed, as illustrated by the color-coded Circle glyphs. Given that the car just entered a road after a sharp turn, this might not be the best time to interrupt acceleration (cf. the white arrow at the same spot in Fig. <ref type="figure" target="#fig_2">1 (a)</ref>). The sharp white Triangles show the indicator usage, which is visualized using a Star glyph, using its "left" and "right" axes (relative to the tube direction). While this is not a typical use case for a Star glyph, it once more shows the flexibility of our tool and the provided glyph types.</p><p>Drone Movement Data. The Delivery Drones data set compares various speed settings for parcel drones flying along a test trajectory (payload is equal for all drones). An example visualization is shown in Fig. <ref type="figure" target="#fig_2">1</ref> (b), using tube color to map velocity (yellow is faster). A Line plot shows the used current of the battery. We did not aim at a deeper analysis of the data nor did we find special features, yet this example illustrates the use of the Circle glyph as a marker for identification. Further it shows the importance of the outline to visually separate the individual mappings which improves perception. Fluid Simulation Data. The Fisch Wehr data set is a collection of streamlines originating from an etho-hydraulics (comparative behavior research in hydraulics) simulation of a fish friendly wier combined with a turbine generator. The goal is to enable safe up and down passage of small fish over a 1 meter height difference. This requires low velocities and minimal turbulence in the outflow regions of the lower turbine part. Fig. <ref type="figure" target="#fig_2">1 (c</ref>) shows an overview of the whole swirl structure with color coded velocities. White depicts slow velocities, while red shows fast moving currents (3 m/s). The outer part of the swirl is rather slow and can be deemed safe for passage. The turbine outflow shows turbulent areas, which are shown up-close in Fig. <ref type="figure" target="#fig_9">10 (e, f</ref>) (blue arrows loosely depict the outflow walls). A grey Line plot maps the pressure, while the Sign glyph visualizes angular velocity. The outflow region has fluctuating and, as is expected, overall high velocities combined with frequent changes in angular momentum. Note especially (f), where a vortex is formed with strong angular velocities to the left. Based on the visualization we judge that fish may be able to easily swim through the upper part of the structure, yet have trouble migrating upwards when entering the difficult outflow passage.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">PERFORMANCE ANALYSIS</head><p>Performance tests are being conducted to evaluate the real-time capabilities of our approach to render potentially large amounts of segments with complex glyph mappings. The test system was equipped with an Intel Core i9-9900K with 8×3.6 GHz, 64 GB RAM and an NVIDIA GeForce RTX 2080 Ti with 11 GB of VRAM. To evaluate both overview and close inspection scenarios, we use a far and near view configuration -far showing the whole data set in the viewport and near close up views. Average frame times were recorded for a 5 s long full camera rotation around the data set using a Full HD (1920×1080) viewport. Local illumination was enabled for all measurements.</p><p>We first compare the base performance of the different rendering methods without any visualization mappings. To evaluate our improvements to the rasterization path, a comparison to the previous method <ref type="bibr" target="#b33">[33]</ref> using their intersection routine and original OBB proxy without sorting was conducted. Two of the data sets used in the original work were included for reference: HotRoom (convection streamlines) and Furball (synthetic). To test scalability, we additionally included two larger synthetic data sets 2 Mil and 5 Mil which are structurally very similar to Furball. The results are shown in Fig. <ref type="figure" target="#fig_2">11</ref>. Following the re-triggering strategy, our rasterization path performed sorting a total of 10 times for the full camera rotation. Single sorting times per data set Fig. <ref type="figure" target="#fig_2">11</ref>. Average render times (in milliseconds) of the eight evaluated data sets for far and near views using a logarithmic scale. Segment counts are given in parentheses. Numbers for previous state times with early-z culling enabled, while the transparent area depicts frame times without. are plotted in Fig. <ref type="figure" target="#fig_2">12</ref> (right). Our rasterization method tends towards a 3× times speedup over the previous method for sufficiently large data sets, even with conservative depth enabled for both. This can be mainly attributed to reduced geometry load due to the simplified billboard, improving performance especially in zoomed out views of large data sets. Differences between far and near views are far less pronounced and only become noticeable for the 5 Mil data set. We believe this to be the result of the optimized draw order due to visibility sorting in conjunction with early-z culling, which helps reducing the impact of fill rate limitations. Additionally, more consistent frame times over all view directions are achieved. The OptiX render path shows mostly consistent scaling across all data set sizes. However, for smaller data sets up to Hot Room, our rasterization path performs consistently better, with Delivery Drone and Hot Room being a particularly challenging scenario for the former. We believe this is caused by a suboptimal BVH layout due to many small overlapping segments. The Reshetov intersection routine is up to twice as fast as the one by Russig, but shows severely degraded performance in some data sets, which we hypothesize contain adversely shaped segments negatively affecting its convergence. The advantage of rasterization on up-to medium-sized data sets can likely be attributed to overhead caused by BVH traversal. Fisch Wehr marks the breakeven-point, where our rasterization and hardware ray tracing <ref type="bibr">(Reshetov)</ref> achieve almost equal render times. For even larger data sets, the inherent scalability advantage of ray tracing becomes the dominant factor. In general, we believe our rasterization approach to be well-suited to lower-end hardware without RT support.</p><p>With the performance baseline determined, the influence of our shading operations was measured to validate the choice of a deferred pipeline. The results are shown in Fig. <ref type="figure" target="#fig_2">12</ref> (left) for Fisch Wehr; other data sets showed comparable behavior. For the glyph mappings, a complex configuration consisting of 4 layers with Temporal heat map, Line plot, Triangle and 5-axis Star glyph was chosen for a total of 8 mapped attributes (cf. Fig. <ref type="figure" target="#fig_8">9</ref>). A color-and normal-mapped grid was used. Deferred shading shows superior scaling with each additional effect enabled, causing only a slight increase by 12% on average for our test viewport size. We conclude from this that early-z culling cannot fully prevent overdraw, causing forward rendering performance to degrade with each additional effect, resulting in up to 120% increased frame times with all effects enabled.</p><p>Temporal anti-aliasing is applied after the shading pass and takes around 0.9 ms to evaluate for our viewport configuration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION AND OUTLOOK</head><p>The prototype tool shows that the flexibility of our approach enables quick adaptation to multivariate data from diverse fields. In this work it was not our intention to create optimal visualizations for given data and tasks, but to lay the foundations that allow visualization experts in collaboration with domain experts to create effective, tailored on-tube visualizations. For future work, our tool facilitates the rigorous evaluation of such specific solutions. The performance measurements show that our method is applicable to large data sets comprising millions of segments, and that glyphs and plots do not introduce performance issues. This makes us confident that more computationally involved and/or specialized on-tube visualizations can be realized in the future.</p><p>A few issues remain unresolved, however. On-tube visualization in its current form breaks down for trajectories that contain longer stationary periods. Land vehicle trajectories are especially prone to this, and the Vehicles and NOx Emissions data sets contain several such instances. For the future, we propose superimposing these parts with a billboard showing a view-aligned time series plot of the evolution of mapped attributes within the affected period.</p><p>While our parameterization mitigates visibility and length distortion problems associated with texturing a 3D tube for visualization, perceptual issues related to perspective distortions remain unsolved. Here, orthographically projecting glyphs onto the tube in screen space could be a viable alternative in some situations. Additionally, the kinks in the parameterization that can appear at C 2 discontinuities between segments could be eliminated by blending tangents of neighboring segments within a small blending zone when calculating v.</p><p>Finally, we observed that it is still possible to quickly overload visualizations with too many attributes even in just four layers. Utilizing surface features other than color (e.g. normals similar to the reference grid, or physically based material properties) has the potential to push the boundaries a little further, which may warrant an extensive user study verifying the perceptual limits of the layer-based approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>We proposed On-Tube Visualization, a flexible and extensible approach to tube-based multivariate trajectory visualization. We contributed a technical framework realizing this approach based on a high-performance spline tube rendering architecture. We were able to validate the approach by creating useful visualizations for diverse data sets, thereby demonstrating the powerful solution space. Performance measurements confirm that the technical foundation provides a sound basis to apply and further develop the approach in the future, where we hope it will help visualization-and domain experts to fully realize the potential of rich and expressive multivariate trajectory visualizations.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig.2. Schematic view of on-tube visualization including the optional procedural reference grid texture. This example includes: (1) a Line plot in the bottom layer. (2) Triangle glyphs placed as densely as possible at the original sample locations of the mapped attributes. For contrasting the white areas of the color map with the white background, a thick outline is applied. (3) equidistantly spaced Star glyphs sampling additional five data attributes. Compositing is performed by alpha blending the layers in the order of their definition on top of the reference grid.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Example configurations of the more complex glyph types and continuous mappings we implemented. 1st row: Sign glyph with diverging color (see color scale), showing the full value range from -1 to 1. 2nd row: Line plot with nearest, linear and cubic attribute interpolation. 3rd row: five configurations of a 5-axis Star glyph showing the colorization capabilities. 4th row: Temporal heat map, again with the three interpolation modes, showing values from 0 to 1. All interpolation takes place before mapping. Color maps used in 1st and 4th from [6] (berlin, imola).</figDesc><graphic url="image-9.png" coords="4,64.14,138.12,66.16,65.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Circle 1</head><label>1</label><figDesc>generic quantity (radius) or marking of sample positions for other layers. Rectangle 2 generic quantities (width, height) or constant-size tick marks. Triangle indicate movement direction and visualize 2 related</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. Schematic illustration of the data flow and two-pass rendering process with its alternative render paths using either highly optimized rasterization or hardware-accelerated ray tracing. the whole tube) as a view-aligned quadrilateral, reducing the number of emitted triangle strip vertices from 14 to 4. Let b 1 , b 2 , b 3 be the control points of a sub-segment positional Bézier curve, c b their centroid and db ∝ b 3 − b 1 their main normalized direction. The orthonormal basis vectors of a view-aligned coordinate system can then be defined as (• ∝ denoting normalization): ẑ ∝ c b − e , ŷ ∝ d b × ẑ and x ∝ ẑ × ŷ, (1)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>(a) Object-order ray casting. A ray through a fragment of the silhouette quad intersects the tube in x hit , which corresponds to spline point x s on tube center line. Normalized direction vectors are surface normal nhit , spline tangent ts and screen up direction ûs . (b) Glyph mapping. Glyphs are specified over the domain [−1, 1] 2 and mapped to a tube surface location based on our parameterization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Illustration of the two strategies to parameterize tube surface around center curve. Left: equidistant in screen space; right: arc length parameterization.</figDesc><graphic url="image-24.png" coords="6,323.60,75.55,56.31,64.39" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>(a) Parameterization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Fig. 8. Glyph placement at original samples: the first sample among mapped attributes A1, A2 and A3 that corresponds to a point on the trajectory where the glyph would fit decides the location of the glyph. The remaining attributes are interpolated (indicated by the grey arrows) before computing the value for the visual attribute.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Fig. 9. Our tool in action, showing the benchmark glyph configuration on Hot Room (left side is without and right side with AO). To the right is the UI, showing glyph setups for the color and Star layer. Custom color maps can be added directly in the tool using the editor at the bottom.The widget to the left shows the preset color maps, mostly from<ref type="bibr" target="#b5">[6]</ref>.</figDesc><graphic url="image-37.png" coords="8,314.00,161.79,132.18,89.38" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Fig. 10. Various examples of layer configurations supported by our tool. (a, b and c) are from NOx Emissions. (d) shows the Vehicles data set. (e and f) are views on the turbulent region of Fisch Wehr.</figDesc><graphic url="image-38.png" coords="8,445.83,191.54,99.22,89.27" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 .</head><label>2</label><figDesc>Configurable options per layer. We made two exceptions: neither Line plots nor the Star glyph can use a color scale.</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Comparing the influence of AO, glyph and grid mapping on the frame times for Fisch Wehr (averaged over both view configurations). A complex configuration of 4 glyph layers was used with a color-and normal-mapped grid. Right: Sort timings in milliseconds.</figDesc><table><row><cell>ms 3 12 15 9 6</cell><cell>5,4</cell><cell>6,6</cell><cell>10,7</cell><cell>13,9</cell><cell cols="2">5,9 base 6,0 base + AO 6,2 glyphs + AO glyphs + grid + AO 6,3</cell><cell>ms 6 5 4 3 2</cell><cell></cell><cell cols="4">sorting time A -Vehicles B -Delivery Drone C -NOx Emissions D -Hot Room E -Fisch Wehr F -Furball G -2 Mil H -5 Mil</cell></row><row><cell>0</cell><cell></cell><cell cols="2">forward</cell><cell></cell><cell>Fisch Wehr</cell><cell>deferred</cell><cell>1 0</cell><cell>A</cell><cell>B</cell><cell>C</cell><cell>D</cell><cell>E</cell><cell>F</cell><cell>G</cell><cell>H</cell></row><row><cell cols="3">Fig. 12. Left:</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0">In general, only one attribute per glyph can be sampled at its original location. The remaining ones will be interpolated.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work received funding from the Deutsche Forschungsgemeinschaft through DFG grant 389792660 as part of TRR 248, the Clusters of Excellence CeTI (EXC2050/1 grant 390696704) and PoL (EXC2068 grant 390729961), and from the German Federal Ministry of Education and Research via the Center for Scalable Data Analytics and Artificial Intelligence (ScaDS.AI) Dresden/Leipzig (BMBF, 01/S18026A-F).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Semantictraj: A new approach to interacting with massive taxi trajectories</title>
		<author>
			<persName><forename type="first">S</forename><surname>Al-Dohuki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Kamw</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wang</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2598416</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="11" to="20" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Analysis of flight variability: a systematic approach</title>
		<author>
			<persName><forename type="first">N</forename><surname>Andrienko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Andrienko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M C</forename><surname>Garcia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Scarlatti</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2864811</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="54" to="64" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Animated visualization of spatial-temporal trajectory data for air-traffic analysis. The Visual Computer</title>
		<author>
			<persName><forename type="first">S</forename><surname>Buschmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Trapp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Döllner</surname></persName>
		</author>
		<idno type="DOI">10.1007/s00371-015-1185-9</idno>
		<imprint>
			<date type="published" when="2016-03">Mar. 2016</date>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="371" to="381" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Hardware-accelerated attribute mapping for interactive visualization of complex 3d trajectories</title>
		<author>
			<persName><forename type="first">S</forename><surname>Buschmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Trapp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lühne</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Döllner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 International Conference on Information Visualization Theory and Applications (IVAPP)</title>
				<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="356" to="363" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Graphical perception: Theory, experimentation, and application to the development of graphical methods</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mcgill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="issue">387</biblScope>
			<biblScope unit="page" from="531" to="554" />
			<date type="published" when="1984">1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Scientific colour maps (7.0.1). Zenodo</title>
		<author>
			<persName><forename type="first">F</forename><surname>Crameri</surname></persName>
		</author>
		<idno type="DOI">10.5281/zenodo.5501399</idno>
		<imprint>
			<date type="published" when="2021-09">Sept. 2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Interactive indirect illumination using voxel cone tracing: A preview</title>
		<author>
			<persName><forename type="first">C</forename><surname>Crassin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Neyret</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sainz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Eisemann</surname></persName>
		</author>
		<idno type="DOI">10.1145/1944745.1944787</idno>
	</analytic>
	<monogr>
		<title level="m">Proc. Symp. Interactive 3D Graph. and Games</title>
				<meeting>Symp. Interactive 3D Graph. and Games<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page">207</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Fast illustrative visualization of fiber tracts</title>
		<author>
			<persName><forename type="first">J</forename><surname>Díaz-García</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">P</forename><surname>Vázquez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="s">Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
		<idno type="DOI">10.1007/978-3-642-33179-466</idno>
	</analytic>
	<monogr>
		<title level="j">LNCS</title>
		<imprint>
			<biblScope unit="page" from="698" to="707" />
			<date type="published" when="2012">2012</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Depthdependent halos: Illustrative rendering of dense line data</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Everts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bekker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B T M</forename><surname>Roerdink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Isenberg</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2009.138</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1299" to="1306" />
			<date type="published" when="2009-12">Nov./Dec. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Interactive illustrative line styles and line style transfer functions for flow visualization</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">H</forename><surname>Everts</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bekker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B T M</forename><surname>Roerdink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Isenberg</surname></persName>
		</author>
		<idno>CoRR, abs/1503.05787</idno>
		<imprint>
			<date type="published" when="2015-03">Mar. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visual analysis of trajectories in multi-dimensional state spaces</title>
		<author>
			<persName><forename type="first">S</forename><surname>Grottel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heinrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12352</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="310" to="321" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Advanced rendering of line data with ambient occlusion and transparency</title>
		<author>
			<persName><forename type="first">D</forename><surname>Groß</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2020.3028954</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="614" to="624" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">The computer graphics and visualization framework</title>
		<author>
			<persName><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<ptr target="https://github.com/sgumhold/cgv" />
		<imprint>
			<date type="published" when="2022-03">March-2022</date>
			<biblScope unit="page">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fast four-way parallel radix sorting on GPUs</title>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">K</forename><surname>Ha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
		<idno type="DOI">10.1111/j.1467-8659.2009.01542.x</idno>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="2368" to="2378" />
			<date type="published" when="2009-12">Dec. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Algorithm 247: Radical-inverse quasi-random point sequence</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">H</forename><surname>Halton</surname></persName>
		</author>
		<idno type="DOI">10.1145/355588.365104</idno>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="701" to="702" />
			<date type="published" when="1964-12">dec 1964</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Ray tracing generalized tube primitives: Method and applications</title>
		<author>
			<persName><forename type="first">M</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Wald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Usher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.13703</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="467" to="478" />
			<date type="published" when="2019-07">jul 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Diverse visualization techniques and methods of moving-object-trajectory data: A review</title>
		<author>
			<persName><forename type="first">J</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zou</surname></persName>
		</author>
		<idno type="DOI">10.3390/ijgi8020063</idno>
	</analytic>
	<monogr>
		<title level="j">ISPRS International Journal of Geo-Information</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">63</biblScope>
			<date type="published" when="2019-01">Jan. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Multivariate spatial data visualization: A survey</title>
		<author>
			<persName><forename type="first">X</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lin</surname></persName>
		</author>
		<idno type="DOI">10.1007/s12650-019-00584-3</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Visualization</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="897" to="912" />
			<date type="published" when="2019-10">Oct. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Star coordinates: A multi-dimensional visualization technique with uniform treatment of dimensions</title>
		<author>
			<persName><forename type="first">E</forename><surname>Kandogan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE information visualization symposium</title>
				<meeting>the IEEE information visualization symposium</meeting>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2000">2000</date>
			<biblScope unit="volume">650</biblScope>
			<biblScope unit="page">22</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A voxel-based rendering pipeline for large 3D line sets</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kanzler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rautenhaus</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2834372</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="2378" to="2391" />
			<date type="published" when="2019-07">July 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">High quality temporal anti-aliasing</title>
		<author>
			<persName><forename type="first">B</forename><surname>Karis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Real-Time Rendering for Games</title>
				<imprint>
			<publisher>SIGGRAPH Courses</publisher>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A comparison of rendering techniques for 3d line sets with transparency</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kern</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Neuhauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Maack</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Usher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2020.2975795</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="3361" to="3376" />
			<date type="published" when="2021-08">aug 2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Trajectory density projection for vector field visualization</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kuhn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Lindow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Günther</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wiebel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<idno type="DOI">10.2312/PE.EuroVisShort.EuroVis-Short2013.031-035</idno>
	</analytic>
	<monogr>
		<title level="m">Proc. EuroVis -Short Papers. The Eurographics Association</title>
				<editor>
			<persName><forename type="first">M</forename><surname>Hlawitschka</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</editor>
		<meeting>EuroVis -Short Papers. The Eurographics Association</meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Exploring time-dependent traffic congestion patterns from taxi trajectory data</title>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Kang</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICSDM.2015.7298022</idno>
	</analytic>
	<monogr>
		<title level="m">2015 2nd IEEE International Conference on Spatial Data Mining and Geographical Knowledge Services (ICSDM)</title>
				<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="39" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Visualization and visual analysis of vessel trajectory data: A survey</title>
		<author>
			<persName><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhou</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.visinf.2021.10.002</idno>
	</analytic>
	<monogr>
		<title level="j">Visual Informatics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Visualizing high-dimensional data: Advances in the past decade</title>
		<author>
			<persName><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Maljovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2640960</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1249" to="1268" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Automating the design of graphical presentations of relational information</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mackinlay</surname></persName>
		</author>
		<idno type="DOI">10.1145/22949.22950</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="110" to="141" />
			<date type="published" when="1986-04">Apr. 1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Hybrid visualization for white matter tracts using triangle strips and point sprites</title>
		<author>
			<persName><forename type="first">D</forename><surname>Merhof</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sonntag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Enders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Nimsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Hastreiter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Greiner</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2006.151</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1181" to="1188" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<ptr target="https://developer.nvidia.com/rtx/ray-tracing/optix" />
		<title level="m">Optix™ ray tracing engine</title>
				<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="2022" to="2026" />
		</imprint>
		<respStmt>
			<orgName>NVIDIA</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Visualizing whole-brain dti tractography with gpu-based tuboids and lod management</title>
		<author>
			<persName><forename type="first">V</forename><surname>Petrovic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Fallon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Kuester</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2007.70532</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1488" to="1495" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Phantom ray-hair intersector</title>
		<author>
			<persName><forename type="first">A</forename><surname>Reshetov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<idno type="DOI">10.1145/3233307</idno>
	</analytic>
	<monogr>
		<title level="j">Proc. ACM Comput. Graph. Interact. Tech</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2018-08">aug 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Peitgen. Real-time illustration of vascular structures</title>
		<author>
			<persName><forename type="first">F</forename><surname>Ritter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Dicken</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Konrad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Preim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-O</forename></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2006.172</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="877" to="884" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">GPU-based raycasting of hermite spline tubes</title>
		<author>
			<persName><forename type="first">B</forename><surname>Russig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Salm</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<idno type="DOI">10.1109/VIS47514.2020.00012</idno>
	</analytic>
	<monogr>
		<title level="m">2020 IEEE Visualization Conference (VIS)</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="page" from="26" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Efficient visualization of large amounts of particle trajectories in virtual environments using virtual tubelets</title>
		<author>
			<persName><forename type="first">M</forename><surname>Schirski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kuhlen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hopp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Adomeit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Pischinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bischof</surname></persName>
		</author>
		<idno type="DOI">10.1145/1044588.1044615</idno>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGGRAPH Int. Conf. VRCAI</title>
				<meeting>ACM SIGGRAPH Int. Conf. VRCAI<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="141" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Temporal focus+context for clusters in particle data</title>
		<author>
			<persName><forename type="first">J</forename><surname>Staib</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Grottel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<idno type="DOI">10.2312/vmv.20171263</idno>
	</analytic>
	<monogr>
		<title level="j">Eurographics Association</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="85" to="93" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Visualization with stylized line primitives</title>
		<author>
			<persName><forename type="first">C</forename><surname>Stoll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<idno type="DOI">10.1109/VISUAL.2005.1532859</idno>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
				<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="695" to="702" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Stackingbased visualization of trajectory attribute data</title>
		<author>
			<persName><forename type="first">C</forename><surname>Tominski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Schumann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Andrienko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Andrienko</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2012.265</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2565" to="2574" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Efficient streamline, streamribbon, and streamtube constructions on unstructured grids</title>
		<author>
			<persName><forename type="first">S.-K</forename><surname>Ueng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Sikorski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<idno type="DOI">10.1109/2945.506222</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="100" to="110" />
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Simplifly: A methodology for simplification and thematic enhancement of trajectories</title>
		<author>
			<persName><forename type="first">K</forename><surname>Vrotsou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Janetzko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Navarra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Spretke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Mansmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Andrienko</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Andrienko</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2337333</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="107" to="121" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Using hardware ray transforms to accelerate ray/primitive intersections for long, thin primitive types</title>
		<author>
			<persName><forename type="first">I</forename><surname>Wald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Morrical</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zellmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Usher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<idno type="DOI">10.1145/3406179</idno>
	</analytic>
	<monogr>
		<title level="j">Proc. ACM Comput. Graph. Interact. Tech</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2020-08">aug 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Approximate arc length parametrization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Walter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fournier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 9th Brazilian Symposium on Computer Graphics and Image Processing</title>
				<meeting>the 9th Brazilian Symposium on Computer Graphics and Image Processing<address><addrLine>Caxambu, Minas Gerais, Brazil</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-11-01">29 Oct.-1 Nov. 1996</date>
			<biblScope unit="page" from="143" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Multivariate data glyphs: Principles and practice</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-33037-08</idno>
	</analytic>
	<monogr>
		<title level="m">Handbook of Data Visualization</title>
				<imprint>
			<publisher>Springer Berlin Heidelberg</publisher>
			<date type="published" when="2008-12">Dec. 2008</date>
			<biblScope unit="page" from="179" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">Information Visualization: Perception for Design</title>
		<author>
			<persName><forename type="first">C</forename><surname>Ware</surname></persName>
		</author>
		<idno type="DOI">10.1016/C2009-0-62432-6</idno>
		<imprint>
			<date type="published" when="2012">2012</date>
			<publisher>Elsevier Inc</publisher>
		</imprint>
	</monogr>
	<note>3 ed.</note>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Visualizing the underwater behavior of humpback whales</title>
		<author>
			<persName><forename type="first">C</forename><surname>Ware</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Arsenault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Plumlee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wiley</surname></persName>
		</author>
		<idno type="DOI">10.1109/MCG.2006.93</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="14" to="18" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<monogr>
		<title level="m" type="main">A survey on multivariate data visualization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Wing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Chan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006-01">Jan. 2006</date>
			<biblScope unit="page" from="1" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Visualizing diffusion tensor mr images using streamtubes and streamsurfaces</title>
		<author>
			<persName><forename type="first">S</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Demiralp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Laidlaw</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2003.1260740</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="454" to="462" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Multivariate visualization of particle data</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<idno type="DOI">10.1140/epjst/e2019-800158-6</idno>
	</analytic>
	<monogr>
		<title level="j">The European Physical Journal Special Topics</title>
		<imprint>
			<biblScope unit="volume">227</biblScope>
			<biblScope unit="page" from="1741" to="1755" />
			<date type="published" when="2019-03">Mar. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
