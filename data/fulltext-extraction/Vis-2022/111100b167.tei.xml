<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">KTH Royal Institute of Technology</orgName>
								<address>
									<settlement>Stockholm</settlement>
									<country key="SE">Sweden</country>
								</address>
							</affiliation>
						</author>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.2" ident="GROBID" when="2023-03-27T09:22+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>linearized space linearized space Figure <ref type="figure" target="#fig_5">1</ref>. A temporal merge tree map (top) is a static visualization of a time-dependent scalar field (bottom). Our method uses augmented merge trees to map the data samples of each time step to a vertical slice. An optimization scheme is employed to achieve a temporally coherent mapping. The shown Storms data set represents storm activity over Europe in December 1999 and contains 744 time steps, arranged from left to right. Cyclones can easily be identified as dark blue lines and compared with each other wrt. their strength, lifetime, and footprint, while still being shown in the context of the entire data. Temporal merge tree maps can serve as data analysis tools in their own right, or be used to augment animations and other views. With some parallel processing, the above image can be computed in less than 15 seconds.</p><p>Abstract-Creating a static visualization for a time-dependent scalar field is a non-trivial task, yet very insightful as it shows the dynamics in one picture. Existing approaches are based on a linearization of the domain or on feature tracking. Domain linearizations use space-filling curves to place all sample points into a 1D domain, thereby breaking up individual features. Feature tracking methods explicitly respect feature continuity in space and time, but generally neglect the data context in which those features live. We present a feature-based linearization of the spatial domain that keeps features together and preserves their context by involving all data samples. We use augmented merge trees to linearize the domain and show that our linearized function has the same merge tree as the original data. A greedy optimization scheme aligns the trees over time providing temporal continuity. This leads to a static 2D visualization with one temporal dimension, and all spatial dimensions compressed into one. We compare our method against other domain linearizations as well as feature-tracking approaches, and apply it to several real-world data sets.</p><p>Index Terms-Scalar field visualization, augmented merge tree, pixel-based visualization</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Essentially all natural phenomena are time-dependent. This includes the weather, the climate, fluid flows, biological processes, chemical reactions, and so on. Understanding the dynamics of these phenomena is a common goal in data analysis. Time-dependent data can be viewed dynamically or statically. A dynamic visualization employs an animated sequence of images to convey the dynamics of the data in a transient manner. Such animations are commonplace in data visualization and easy to comprehend as the dynamics of the data match the dynamics of the animated visualization. Yet, animations cannot be used in all contexts (e.g., printed on paper) and their transient nature makes it difficult to perceive certain aspects: rapid fluctuations can easily be missed, moving objects are difficult to count, and even the dynamics from different parts of the animation are difficult to compare.</p><p>Static visualizations of dynamic data show all time steps at once, either by superimposing them or by assigning a spatial dimension to time. Depending on the data, this can lead to too much information being shown at once and to real estate being taken away from other visualization aspects. Nonetheless, they are a good complement to dynamic visualizations as they are often able to compensate for the issues with animations mentioned above.</p><p>Approaches for the static visualization of time-dependent scalar fields fall into two categories: domain linearizations and feature tracking methods. Linearizing a domain means to arrange all sample points of the original 2D/3D data in a 1D domain. The temporal dimension can then be placed orthogonally. Previous work uses space-filling curves <ref type="bibr" target="#b10">[11]</ref> to achieve this. Unfortunately, space-filling curves do not keep features intact, which makes certain analysis tasks impossible such as counting the number of features.</p><p>Feature tracking methods follow distinct objects of interest over time and create feature paths/surfaces <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b37">38]</ref> or tracking graphs <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b44">45]</ref>, which can then easily be used for a static visualization. Features are naturally kept intact with these approaches, but information is lost about more general aspects of the data such as how the distribution of the data looks like, i.e., we lose the data context in which these features are living. This happens because (i) data samples not contained in a feature are excluded from further processing, and (ii) data samples within a feature are summarized to a few statistical moments.</p><p>We propose a feature-based domain linearization method. It keeps features intact while keeping their data context by arranging all data samples in the 1D domain. We build upon merge trees, which provide a feature-based hierarchical decomposition of the spatial domain, which we use to convert the original 2D/3D scalar field to a 1D function. Notably, we show that under very mild assumptions the original data and the 1D function are topologically equivalent in the sense that they have the same merge tree that was used for the linearization.</p><p>We create a static, two-dimensional visualization of the entire timedependent data set by placing the temporal dimension orthogonally to the linearized spatial domain. We propose an optimization scheme to synchronize the linearizations of neighboring time steps, i.e., to achieve temporal coherence such that users can visually follow features over time.</p><p>We give the following contributions:</p><p>• a feature-based domain linearization that keeps features intact and preserves their context by involving all data samples (Section 3.1), • a formulation of a discrete optimization problem to address temporal coherence with a practical heuristic to solve this with little computational effort (Section 3.2), • an evaluation and several comparisons to linearization and featurebased methods (Section 4), and • the application of our method to 2D and 3D time-dependent data sets (Section 5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK AND BACKGROUND 2.1 Augmented Merge Trees</head><p>Consider the sublevel sets {x ∈ IR |s(x) ≤ } of a scalar field s : IR IR for an increasing isovalue α: each local minimum gives rise to → a connected component, they merge at saddles until only one component remains, which will finally collapse at the global maximum. We can record this behavior in the join tree data structure as shown in Figure <ref type="figure" target="#fig_2">2</ref>: the minima are the leaves, the saddles are inner parents, and the global maximum is the root. We refer to them as the supernodes of the join tree, which are connected to each other via superarcs. The superarcs represent the connected components of the sublevel sets. All data samples can be assigned to a superarc. Most data samples are regular nodes not giving rise to a topological change. If we opt to store regular nodes in the tree data structure, we call it an augmented join tree. n α n Doing this for a decreasing isovalue gives us the split tree for the superlevel sets. We can refer to both of them as merge trees. We refer to Hamish Carr's excellent PhD thesis for more details <ref type="bibr" target="#b5">[6]</ref>. Figure <ref type="figure" target="#fig_2">2</ref> illustrates these concepts using a small example scalar field, which we continue to use later on for the explanations in Figures <ref type="figure" target="#fig_6">4 and 5</ref>.</p><p>In the remainder of this paper, merge trees are assumed to be binary trees. This means degenerate cases such as plateaus have been dealt with through strategies such as simulation of simplicity <ref type="bibr" target="#b9">[10]</ref> and multisaddles are handled by repeatedly grouping children until a binary tree is obtained. This procedure converts some of the multi-saddle children  from regular nodes to supernodes. The Cylinder data set from Figure <ref type="figure" target="#fig_15">14</ref> features on average one multi-saddle per time step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Visualization and Tracking of (Augmented) Merge Trees</head><p>All tree visualization methods can also be applied to merge trees. A common example is the treemap <ref type="bibr" target="#b33">[34]</ref>, which finds its application in topological landscapes <ref type="bibr" target="#b42">[43]</ref>. Merge trees are an interesting mediator between dimensions: they can be computed for any-dimensional scalar data, and they can be visualized in any-dimensional space. For example, Oesterling et al. <ref type="bibr" target="#b23">[24]</ref> propose 1D topological landscape profiles for multi-dimensional point clouds, where each superarc is represented by a hill-like icon parameterized by size and persistence of that superarc. Similar 1D topological landscape profiles have also been introduced for barrier trees <ref type="bibr" target="#b39">[40,</ref><ref type="bibr" target="#b40">41]</ref> of optimization landscapes and level set trees <ref type="bibr" target="#b16">[17]</ref> of density estimates. Under specific parameter settings and applied to scalar fields, these yield equivalent results to our proposed domain linearization.</p><p>Tracking merge trees over time is a computationally very expensive matter, as described by Oesterling et al. <ref type="bibr" target="#b22">[23]</ref>. Alternative approaches by Lohfink et al. <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b19">20]</ref> and Pont et al. <ref type="bibr" target="#b26">[27]</ref> achieve much faster computation times by employing heuristics to compute tree alignments for a given similarity metric.</p><p>Our approach uses merge trees from every time step as well, but we use a different means to achieve temporal coherence: we formulate it as a discrete optimization problem directly linking the original data and the 1D output data. This serves our visualization purpose more directly and is also very fast to compute. Furthermore, none of the methods from above have been used to create static, two-dimensional visualizations of a time-dependent data set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Feature Tracking</head><p>A plethora of feature tracking methods exist to accommodate different feature and data types. Point-or line-type features could be tracked by solving an ODE called Feature Flow Fields <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b37">38]</ref>, or by applying the Parallel Vectors operator <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b25">26]</ref>. The results of these methods are often superimposed on the original domain for visualization purposes. Region-based features (same dimensionality as the domain) are often tracked by overlap <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b44">45]</ref> or statistical moments such as their histogram <ref type="bibr" target="#b29">[30]</ref>. These result in tracking graphs whose layout in the plane is a topic of research <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b21">22]</ref>. Region-based tracking methods are related to our work in the sense that they often also look at sub/superlevel sets. However, the methods above employ fixed thresholds, while our work uses merge trees describing the topology of sub/superlevel sets over the entire data range without any thresholds.</p><p>One goal of feature-based methods is to drastically reduce the amount of information coming with the original data to a small set of features. Visualizations of feature tracks are therefore often abstract  -such as the Nested Tracking Graphs <ref type="bibr" target="#b21">[22]</ref> -and carry only little information about the data besides the existence and correspondence of features. In contrast, our work aims at showing features together with the entire data context in one image.</p><formula xml:id="formula_0">t 0 t i t n−1 • • • • • • • • • • • • • • • • • • 90 • 90 • 90 • time linearized space</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Data Linearizations</head><p>The highly astonishing fact that there is a 1-to-1 correspondence between the points on the unit line segment and the points in ndimensional space was first observed and proven by Georg Cantor <ref type="bibr" target="#b4">[5]</ref>. Motivated by this result, Giuseppe Peano developed the first spacefilling curve <ref type="bibr" target="#b24">[25]</ref>, which in turn inspired David Hilbert to come up with one of the most widely used space-filling curves in computer science <ref type="bibr" target="#b14">[15]</ref>. Space-filling curves also find their applications in the visualization domain to map a higher-dimensional data set to a 1D domain with the goal of comparing data sets <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b43">44]</ref>. Franke et al. <ref type="bibr" target="#b10">[11]</ref> use them for spatio-temporal visualizations similar to ours and compare several curves with each other for their suitability. Most space-filling curves are purely geometrically motivated and data-unaware. Among the few exceptions are Dafner et al. <ref type="bibr" target="#b6">[7]</ref> and Zhou et al. <ref type="bibr" target="#b45">[46]</ref> who propose data-aware space-filling curves.</p><p>None of the above methods keeps the features of a scalar field intact as we show in Section 4.3.</p><p>Other methods for deriving a linear order work on point sets and use hierarchical clustering <ref type="bibr" target="#b11">[12]</ref> or multi-dimensional scaling <ref type="bibr" target="#b31">[32]</ref>. They are not directly applicable to scalar fields.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">TEMPORAL MERGE TREE MAPS</head><p>We propose a method (Figure <ref type="figure" target="#fig_4">3</ref>) to linearize a scalar field based on its merge tree (Section 3.1). We show that this method preserves the merge tree topology and therefore keeps features intact The mapping of consecutive time steps is optimized towards resembling the dynamics of the scalar field as closely as possible (Section 3.2). The optimized one-dimensional mappings are combined into a pixel-based static visualization (Section 3.3) which we call a temporal merge tree map. We consider the following to be given:</p><p>• A series of n scalar fields s(x,t) with t ∈ [t 0 , . . . ,t n−1 ]. Each time step contains m data samples.</p><p>• An augmented merge tree M ∈ [M 0 , . . . , M n 1 ] for every time step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>−</head><p>We use readily available algorithms in the open-source library Topology Toolkit (TTK) <ref type="bibr" target="#b38">[39]</ref> to compute those.</p><p>Algorithm 1: Traversal of an augmented merge tree M to derive a mapping of positions in nD to 1D. Data: An augmented merge tree M = (N, E)</p><formula xml:id="formula_1">Result: A position x i ∈ [0, . . . , m − 1] for each node in M Function ProcTree(M): the root node is placed at x = 0 x L , x R ← PlaceNode(root, 0, m x , x ProcSuperArc(child super − 1, true) L R ← arc of root, x L , x R ) ProcSuperNode(child supernode of root, x L , x R ) Function PlaceNode(node or supernode, x L , x R , left): if left: x i ← x L ; x L ← x L +1 else: x i ← x R ; x R x R 1 return x L , x ← − R Function ProcSuperArc(superarc, x L , x R ): left ← false for node in superarc: x L , x R ← PlaceNode(node, x L , x R , left) left ← not left return x L , x R Function ProcSuperNode(supernode, x L , x R ): n x ← size of first child superarc and subtree below it C ← x L +n the supernode is placed at x C PlaceNode(supernode, x C , x C , true) x 1 , L x 1 R ← ProcSuperArc(first child arc, x L , x C −1) ProcSuperNode(first child super node, x 1 , L x 1 ) R x 2 , L x 2 R ← ProcSuperArc(second child arc, x C +1, x R ) ProcSuperNode(second child super node, x 2 , x 2 ) L R</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Mapping a Single Time</head><p>Step: R d R → Consider the d-dimensional scalar field s for a given time step with its merge tree M. We want to find a function g : R d → R that maps each original sample location x ∈ R d of the given scalar field s to a one-dimensional sample location x ∈ R in our output scalar field f . This is a linearization of the domain, while the function values of the samples remain the same. Straightforwardly, we use integer locations for the output, i.e, g : R d → [0, . . . , m − 1]. This aids the subsequent conversion into pixels.</p><p>Under very mild assumptions, our newly constructed output scalar field has the same merge tree M as the input scalar field. This means, we see as many maxima in our output as there are in the split tree of our input (or as many minima as there are in the join tree). This is crucial to retaining features described by minima/maxima (cyclones in climate data, vortices in flow data, etc.) in our final results. We show this Merge Tree Identity property in the supplemental material. We derive the mapping g through a depth-first traversal of M. At each stage of the algorithm, we maintain a contiguous output range [x L , x R ] of unassigned sample locations to be used for all upcoming nodes in the tree traversal. The following explanations are accompanied by illustrations in Figure <ref type="figure">4</ref> and pseudocode is given in Algorithm 1.</p><p>Root We start with x L = 0 and x R = m 1. The root is placed at the left side of the output range at x − L (Figure <ref type="figure">4(a)</ref>). Thereafter, our active range of unassigned sample locations is between x L = 1 and x R = m − 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Traversal of a Superarc</head><p>The regular nodes of a superarc are placed in the remaining range [x L , x R ] from the outside inwards in an alternating fashion: the first node is placed on the right at x R , the second node on the left at x L , then back to the right side at x R = x R 1, and so on. (c) The nodes of the left child superarc are placed in an alternating fashion and the recursion ends with the leaf .</p><p>(d) The process repeats recursively until all nodes are placed.</p><formula xml:id="formula_2">x x x C L R 0 m − 1 x x L R 0 m 1 − − 0 x x L R m 1 Figure 4.</formula><p>We linearize each time step of our input scalar field (2D/3D) with the help of its augmented merge tree. The procedure builds on a depth-first traversal of the merge tree. Importantly, under very mild assumptions, the resulting 1D scalar field has the same merge tree as the original data, i.e., we keep features intact during our linearization process. Algorithm 1 and the explanations in Section 3.1 provide further details. This example uses the input data from Figure <ref type="figure" target="#fig_2">2</ref> and we show the resulting 1D scalar field in Figure <ref type="figure" target="#fig_6">5</ref>. choose the starting side randomly, without affecting the property of representing the same merge tree.</p><p>During the traversal, we keep our range [x L , x R ] updated (see functions ProcSuperArc() and PlaceNode() in Algorithm 1). The procedure ends upon reaching the next supernode.</p><p>Entering Recursion at a Supernode All inner 1 supernodes of M have two child superarcs. Hence, we have to place three entities in [x L , x R ]: the two child superarcs and the supernode itself. We need to place the supernode between its two child superarcs to maintain the same topology as in the input data. To see this, recall that the child superarcs represent connected components of super-or sub-level sets that merge or split at the supernode. This can only happen if the supernode is adjacent to both of its children, i.e., between them. Assuming the child to be traversed first has a total of n nodes, the supernode will be placed at x C = x L + n. The child superarcs are then processed recursively: The first child fills the range [x L , x C − 1], and the second child fills the range</p><formula xml:id="formula_3">[x C + 1, x R ]. Figure 4(b) illustrates this.</formula><p>The order of the child superarcs plays an interesting role. Importantly, either order will create a function with the same merge tree as the original data. However, the flexibility in choosing which child to traverse first is what allows for optimizing the mappings between individual time steps with respect to the entire evolution of the data, see Section 3.2.</p><p>Ending Recursion at Leaf Nodes A leaf node terminates the recursion. At this point in the algorithm, only a single space at x L = x R is left open for the leaf to be assigned to. 1 The outer supernodes are the root and the leaves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Mapping all Time</head><p>Steps: R d+1 R 2 → Output: 1D Scalar Field The mapping function g(x) = x assigns each original sample location a 1D location. Its inverse function g −1 (x) = x recovers the original sample location. The output scalar field f : {0</p><p>given by f (x</p><formula xml:id="formula_4">1 , . . . , m − 1} → R is simply ) = s(g − (x</formula><p>)), i.e., we assign each mapped position its original data value. We note that f (x) f (g −1 = (x)) holds, meaning f is a valid linearization of itself. We can visualize f using a straightforward line plot, or apply color coding to obtain a line of colored pixels, see Figure <ref type="figure" target="#fig_6">5</ref>. We will use the latter to assemble many time steps into a static 2D picture in the following. space time t 0 t i t n After compressing the spatial dimensions to 1 through linearization, we can use the second dimension of our display to show time. For example, we can orient the time steps vertically and arrange them from left to right. This provides great insight into the dynamics of the data.</p><p>Features moving in a scalar field are inherently spatially and temporally coherent, i.e., their value and position changes are smooth. This is true for essentially all natural phenomena such as fluid flows, molecular dynamics, the weather and the climate, and so on. When converting these phenomena to data, the spatial and temporal sampling resolutions play a role: features get only represented appropriately if the Nyquist frequency is respected.</p><p>Any dimensionality reduction of the spatial domain restricts the spatial movement of features. This is also the case for our linearization. Furthermore, the following aspects may vary between consecutive time steps: the number and size of features, the hierarchical structure and depth of the merge trees, and features may merge or split. Despite these issues, our goal is to portray the dynamics of the data as accurately as possible. This problem statement is partly related to laying out tracking graphs <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b44">45]</ref>, or any graphs <ref type="bibr" target="#b2">[3]</ref>, in the plane. Note that we explicitly refrain from using tracking information for the merge trees, since this incurs very high computational costs <ref type="bibr" target="#b22">[23]</ref>.</p><p>Luckily, our linearization algorithm from Section 3.1 gives us some freedom in how to arrange the features such that we can maximize spatio-temporal feature coherence: when encountering an inner supernode, we can decide the order in which we are processing its two child superarcs. Figure <ref type="figure">6</ref> illustrates this with a data set containing two subtree regions a and b in t i as child superarcs of the root. The regions slightly move and change their geometry between the time steps t i and t i+1 . Let us denote them as a ′ and b ′ in t i+1 . Without loss of generality, we can fix the traversal of the tree at t i such that a comes before b. Now we have two options for traversing the tree at t i+1 : either b ′ before a ′ (mapping 1), or the other way around (mapping 2). It is crucial to</p><formula xml:id="formula_5">a b a ′ b ′ t i t i+1 original data root t i a b root t i+1 a ′ b ′ a b b ′ a ′ t i t i+1 mapping 1 a b a ′ b ′ t i t i+1 mapping 2</formula><p>Figure <ref type="figure">6</ref>. The traversal order during linearization of two consecutive time steps is chosen such that the overlap in the linearized domain resembles the overlap in the original data. In this example, mapping 2 is preferred over mapping 1.</p><p>understand that we do not actually know the "names" of these regions; each time step has its own merge tree and is linearized independently. However, we do know the amount of overlap that we get with each mapping in relation to the overlap of the regions in the original data. In the original data, the regions a and a ′ as well as b and b ′ overlap substantially. For the linearized data, mapping 2 is the preferred option, since its overlap resembles the overlap in the original data much better than mapping 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Discrete Optimization Problem</head><p>Let S ∈ M t and T ∈ M t+1 be subtrees in the merge trees of two consecutive time steps. We measure their overlap (cf. Silver and Wang <ref type="bibr" target="#b34">[35]</ref>)</p><formula xml:id="formula_6">p(S, T ) = |S ∩ T |<label>(1)</label></formula><p>as the number of nodes (sample points in the data) belonging to both subtrees. We note that this is computable in the original and in the linearized domain independently, and we denote these measures as p nD and p 1D , respectively. We seek to capture the difference in subtree overlap</p><formula xml:id="formula_7">d(S, T ) = p nD (S, T ) − p 1D (S, T ) 2<label>(2)</label></formula><p>between the original data and our mapping. Taking all time steps and all subtrees into account, we measure the sum of overlap differences over all pairs of subtrees in all pairs of consecutive time steps:</p><formula xml:id="formula_8">E = tn−2 ∑ t=t0 ∑ S j ∈Mt ∑ Tk∈Mt+1 d(S j , T k ) .<label>(3)</label></formula><p>This brings us to a discrete optimization problem where E is the objective function to be minimized, and the search space is formed by all possible merge tree traversal orders.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Heuristic Approach to the Discrete Optimization Problem</head><p>Traversal orders are determined by a series of binary decisions: At each inner supernode, we have to decide which child superarc to process first. This means our search space contains a total of 2 N possible configurations, where N is the total number of inner supernodes over all time steps. Such a large search space is impossible to fully enumerate even for moderately sized data sets.</p><p>Local, greedy heuristics give great results for many complex discrete optimization problems. We propose such a heuristic for the above optimization problem. In particular, we exploit the fact that mismatches higher up in a merge tree cause a larger error compared to lower levels just due to their larger size. Intuitively, a misalignment early in the traversal cannot be rectified by changing traversal decisions in the lower parts of the tree.</p><p>We propose the following procedure: We regard the traversal order for one initial merge tree M t as fixed, e.g., using the order in which the arcs are stored in the data structure. Any time step could be chosen here. The traversal of the next merge tree M t+1 is then optimized by starting at its root and establishing a traversal order at each inner supernode. To do so, we compute the contribution of the two children to the overall objective from Equation (3) for both possible traversal orders. The traversal order with the smaller contribution wins. We continue with the inner supernodes at the deeper levels of the tree.</p><p>After determining the traversal order for M t+1 , we continue with M t+2 and so on. Similarly, we can go back in time from M t to M t−1 until the merge trees in all time steps have a fixed traversal order.</p><p>An implementation of this benefits from the following observations. First, we can pre-compute subtree overlaps p nD in the original scalar field by iterating over the data once. Second, as we navigate the search space of traversal orders, overlaps in the linearized domain have to be calculated frequently. We can utilize interval arithmetic to compute this directly without iterating over the data. For this, we use the minimum and maximum position assigned to each subtree and calculate the amount of overlap between S j and T k as the difference between the smaller maximum and the larger minimum.</p><formula xml:id="formula_9">min xmax = min(x max (S j ), x max (T k )) max xmin = max(x min (S j ), x min (T k )) p 1D (S j , T k ) = max(0, min xmax − max xmin +1)<label>(4)</label></formula><p>Lastly, note that the subtree below the root, i.e., the entire tree, can be omitted from these computations. Any other subtree always overlaps with the full domain in its entirety. This naturally holds for both original and linearized data, and the difference makes no additional contribution to the objective function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Assembling the Final Image: Pixel-Based Visualization</head><p>Our final visualization consists of a 2D image representing linearized space in one direction (usually vertical), and time in the other direction (usually horizontal). We use color coding to show the corresponding data values and call this image the temporal merge tree map. See the bottom of Figure <ref type="figure" target="#fig_4">3</ref> for an illustration. If we were to represent every sample point of the original data as a single pixel, the final resolution of the image would be m × n, with m being the number of data points in a time step, and n being the number of time steps. However, m often significantly exceeds the dimensions of a display or a GPU texture size limit, while n is often below those numbers. Along the dimension of linearized space, we use subsampling to reduce the number of pixels to below the GPU texture size limit, which is 4096 on our hardware. Along the dimension of time, if necessary, we use linear interpolation to fill the display.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">EVALUATION AND DISCUSSION</head><p>We start our evaluation by introducing all data sets used in this paper and providing the respective running times of our algorithm (Section 4.1).</p><p>We then analyze the quantitative and qualitative performance of the optimization scheme (Section 4.2). We compare our algorithm with other linearization methods (Section 4.3) and with feature tracking methods (Section 4.4). Finally, we discuss the limitations of our algorithm regarding data size and complexity (Section 4.5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Data Sets and Runtime Performance</head><p>We use the following data sets in this paper:</p><p>Nucleon Padded slice from the nucleon data set used for evaluation by Zhou et al. <ref type="bibr" target="#b45">[46]</ref>. The data set is publicly available in the Open Scientific Visualization Datasets collection <ref type="bibr" target="#b15">[16]</ref> and courtesy of SFB 382 of the German Research Council (DFG).</p><p>Ring Analytical data set created and used for evaluation by Franke et al. <ref type="bibr" target="#b10">[11]</ref>. Parametrized by peak value and standard deviation to generate a Gaussian bell-curve along a circle given by center position and radius. All parameters except the center position vary linearly between start and end.</p><p>Table <ref type="table">1</ref>. Overview of our data sets with their dimensions (x × y × z), time steps (n), persistence threshold p in % of the data range, and number of supernodes in the simplified merge trees (# snodes). The runtimes for the pre-processing (extracting and simplifying the merge trees with TTK <ref type="bibr" target="#b38">[39]</ref>) are summarized as t topo . The runtimes for our method are given in detail for each individual stage: the optimization (t opt ), the linearization (t map ), and the image creation (t img ). All timings are given in seconds and measured single-threaded unless indicated otherwise; times with * are from parallel runs with 18 threads. We use a workstation with two 18-core 2.3GHz Intel Xeon E5-2697 v4 processors and 256GB main memory. The shorter runtimes are obtained by averaging 10 runs. Benzene The electrostatic field around a benzene molecule was calculated using the fractional charges method described in <ref type="bibr" target="#b35">[36]</ref>. The gradient of this field describes the force upon a positive point charge given in a certain location.</p><p>Storms 1-hourly mean sea level pressure anomaly for December 1999. Instantaneous data is obtained from the ERA5 reanalysis data set available at the Copernicus Climate Change Service (C3S) Climate Data Store <ref type="bibr" target="#b13">[14]</ref>. We subtract the mean over 8 days following the data processing procedure used for detection of cyclones by Deroche et al. <ref type="bibr" target="#b8">[9]</ref> and apply a light Gaussian smoothing to the result.</p><p>Cylinder The flow behind a square cylinder has been obtained from a direct numerical Navier Stokes simulation by Camarri et al. <ref type="bibr" target="#b3">[4]</ref>. A uniformly resampled version of this flow from von Funck et al. <ref type="bibr" target="#b41">[42]</ref> has been used to compute the Okubo-Weiss criterion Q = 1 /2(∥Ω vortex acti ∥ 2 − ∥S∥ 2 ), which is a time-dependent scalar field indicating vity for regions with Q &gt; 0 and used in this paper.</p><p>Tangaroa The flow behind a model of the research vessel Tangaroa has been simulated with the Gerris flow solver <ref type="bibr" target="#b27">[28]</ref> by Popinet et al. <ref type="bibr" target="#b28">[29]</ref>. We use the velocity magnitude of a resampled version available from the visualization data set collection at the ETH Computer Graphics Laboratory <ref type="bibr" target="#b12">[13]</ref>.</p><p>Resolutions, simplification thresholds, topological complexity, and runtimes are given in Table <ref type="table">1</ref>. We note that the majority of the runtime is spent in TTK <ref type="bibr" target="#b38">[39]</ref> on the extraction and simplification of the merge trees, which can be sped up significantly by parallelizing over the time steps as we have done for the Tangaroa data set. We obtain a speed-up factor of 8 by running with 18 parallel threads.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Analysis of the Objective Function</head><p>To gain insight into our optimization scheme, we choose a non-trivial data set for which we can expect a certain output. The Benzene data set represents the electrostatic potential around the benzene molecule and exhibits the well-known 6-fold symmetry in the xy-plane. It is a static 3D scalar field and we choose the z-dimension to slice through the data over "time," making this a 2D time-dependent field. Five representative z-slices show the setup in Figure <ref type="figure">7</ref>. At z = 10 we see the strongest values for the electrostatic potential, since this slice cuts directly through the molecule itself. With increasing distance from z = 10, the field becomes weaker in both directions, i.e., we have a "temporal" symmetry besides the spatial 6-fold symmetry.</p><p>We used the join tree to analyze this data, i.e., the leaves of the join tree are the minima of the electrostatic potential.</p><p>The temporal merge tree map in Figure <ref type="figure">7</ref> shows the optimized output of our algorithm and reveals both temporal and spatial symmetries very nicely. The spatial 6-fold symmetry is easily discernible in slices z ≤ 4 where six horizontal blue lines represent the minima that we also see as six distinct blue areas in the z = 2 slice. We see the same behavior in slices z ≥ 16, which successfully reveals the temporal symmetry in the data. It also shows that our optimization scheme handles the near-identical data at either end of the z-dimension in a very consistent manner.</p><p>To quantitatively evaluate the optimization scheme, we set up the following experiment: for each time step, we start the optimization scheme 100 times; each run is initialized with a different starting condition by randomizing the traversal order of the merge tree in that time step. We recorded the objective function value E from Equation (3) for each run and plotted the results in green color in Figure <ref type="figure">8</ref>. We compare this with two other conditions: the dashed line represents the objective function value for the unoptimized version, and the blue dots represent runs where we randomized the traversal order of all merge trees. As we can see, our optimization achieves significantly better objective function values in a consistent manner. This also translates to a higher visual quality: Figure <ref type="figure" target="#fig_9">9</ref>, shows the temporal merge tree maps for the non-optimized and randomized versions, which exhibit less symmetry and more distortions than the optimized version in Figure <ref type="figure">7</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Comparison with other Linearization Methods</head><p>Franke et al. <ref type="bibr" target="#b10">[11]</ref> use space-filling curves to linearize their data for a spatio-temporal summary view. The layout is very much like ours: linearized space and time are the two dimensions of this view. Many different space-filling curves are evaluated for this purpose, particularly   . Result for our method and two different space-filling curves for the Ring data set by Franke et al. <ref type="bibr" target="#b10">[11]</ref>. The data contains a single feature (the ring) growing in size and intensity. Our method captures this well, whereas the Hilbert and Morton curves do not keep the feature intact.</p><p>using the artificial Ring data set. We re-created the experiment in Figure <ref type="figure" target="#fig_10">10</ref> for the Hilbert and Morton curves using the code of the authors (see Figure <ref type="figure" target="#fig_6">5a</ref> in Franke et al. <ref type="bibr" target="#b10">[11]</ref>) and compare it to our result. This data set has a single feature, namely a ring becoming larger over time, but the space-filling curves fail to keep this feature intact and scatter its footprint over the spatial axis: the coherence of the original data is not communicated by the Hilbert and Morton spacefilling curves. On the other hand, our method keeps the feature intact and its growth in intensity and footprint is easy to read from our result.</p><p>Visualization and graphics applications benefit from a form of "data awareness" for domain linearizations. Zhou et al. <ref type="bibr" target="#b45">[46]</ref> propose datadriven space-filling curves aiming to minimize the similarity of data values and location coherency in a neighborhood. Dafner et al. <ref type="bibr" target="#b6">[7]</ref> propose context-based space-filling curves to improve autocorrelation in 2D image and video encoding. We compare them with our method in Figure <ref type="figure" target="#fig_11">11</ref>, where we essentially recreate Figure <ref type="figure">6</ref> from Zhou et al. <ref type="bibr" target="#b45">[46]</ref> using the code of the authors. The lineplots for the linearizations in the top row show that the Hilbert and context-based curves do not retain feature coherence. At first glance, the straightforward scanline method seems to keep the feature intact, but this is circumstantial and on close inspection one can see individual spikes. The data-driven curve of Zhou et al. <ref type="bibr" target="#b45">[46]</ref> manages to keep most larger data values close together, but also exhibits distinct separate peaks. However, the Nucleon data set consists of one large feature with two small maxima on top, which is faithfully reproduced by our method.</p><p>The bottom row of Figure <ref type="figure" target="#fig_11">11</ref> visualizes the traversal order for the different methods using a color coding scheme: blue points are visited first, yellow points are visited last. This reveals very interesting access patterns for the space-filling curves and it also highlights again that our linearization method does not use a space-filling curve: the linearization index jumps through the original data domain. Because of that, applications like image and video encoding are not likely to benefit from our method. Instead, we target applications where feature coherence is important such as the spatio-temporal summary views presented in this paper.</p><p>We provide additional comparisons using other data sets in the supplemental material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Comparison with other Feature-based Methods</head><p>One of the goals of feature tracking methods <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b21">22,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b44">45]</ref> is to reduce the amount of data as much as possible; hence, features are presented without their data context. We elaborate on this difference to our method in Figure <ref type="figure" target="#fig_13">12</ref> where we use 4 different functions that all exhibit the same data range −0.3 ≤ s(x) ≤ 1, but with varying distributions and spatial patterns. Specifically, we compare our method to approaches that use sub/superlevel sets such as Nested Tracking Graphs of Lukasczyk et al. <ref type="bibr" target="#b21">[22]</ref> or Temporal Treemaps of Köpp and Weinkauf <ref type="bibr" target="#b17">[18]</ref>. We use s a = 0.06 and s b = 0.9 to extract superlevel sets in all four examples: the sets are identical in size, i.e., they cover the same area in the data. Hence, methods solely focusing on these features represent them indistinguishably. On the other hand, our method uses merge trees instead of fixed thresholds and maps all data samples to the linearized domain. Hence, the different data distributions (Figure <ref type="figure" target="#fig_13">12</ref>(a) vs. Figure <ref type="figure" target="#fig_13">12(b)</ref>) or the different number of features (Figure <ref type="figure" target="#fig_13">12</ref>(a) vs. Figure <ref type="figure" target="#fig_13">12(c)</ref>) can be distinguished with our method. However, our method is blind to the different spatial distribution of the data between Figures <ref type="figure" target="#fig_13">12(a</ref>) and 12(d).</p><p>Our method can be parametrized to emulate a Nested Tracking Graph <ref type="bibr" target="#b21">[22]</ref> by using a discrete colormap, i.e., a few discrete colors are distributed over the data range. They correspond to the fixed thresholds defining the layers of a Nested Tracking Graph. Figure <ref type="figure" target="#fig_5">13</ref> shows this for the Storms data set: both methods create a similar first-glance impression, but our method clearly shows a better temporal coherence. Methods for increasing temporal coherence of Nested Tracking Graphs exist <ref type="bibr" target="#b17">[18]</ref>, but their computationally more demanding optimization method is unable to deal with the complexity of this data. Our heuristic maintains a satisfactory temporal coherence with a computational effort of less than a second.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Discussion of Data Size and Topological Complexity</head><p>The following aspects play a role in how well our method works for a data set: the spatial size of the data, its temporal size, and its topological complexity. These aspects may also be intertwined, e.g., spatially large data sets tend to be topologically complex as well, but not necessarily.</p><p>All spatial dimensions are compressed into one and displayed vertically. As mentioned earlier (Section 3.3), this often leads to subsampling. Depending on the spatial size of the data and the available vertical space of the display, features with a small spatial footprint may get lost. It is an interesting avenue for future research to investigate adaptive sampling methods, which would need to be synchronized with the adjacent time steps.</p><p>Temporally large data sets do not present a major issue for our method. Since time gets its dedicated dimension, we can accommodate many time steps before running out of horizontal space on a modern display. Simple zooming &amp; panning may then mitigate the issue in most cases.</p><p>Topologically complex data sets pose a perceptual challenge for those feature-based visualization methods aiming to show features as distinguishable entities to the user: we can only distinguish a limited number of features in any given visualization. This applies to our method and the Cylinder data set (see Figure <ref type="figure" target="#fig_15">14</ref> and Section 5) is an example where the topological complexity is too high to reliably distinguish features in the later time steps of the simulation.</p><p>We study the effects of topological simplification using the Tangaroa data set. The results of four different simplification thresholds are shown in Figure <ref type="figure" target="#fig_16">15</ref>: increased simplification leads to less noisy and more distinct structures in the output images, while the overall Gestalt of the data is retained. The unsimplified merge trees of this data set have up to 3655 supernodes, which leads to an unreasonably long running time for the optimization stage. We can see from Table <ref type="table">1</ref> that topological simplification significantly reduces the running times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head><p>The Storms data set visualized in Figure <ref type="figure" target="#fig_5">1</ref> and Figure <ref type="figure" target="#fig_5">13</ref> is a timedependent scalar field derived from atmospheric pressure, which gives us cyclones as low-pressure regions moving over time. It describes the  <ref type="bibr" target="#b45">[46]</ref>. The Nucleon data set consists of one large feature with two small maxima on top. The space-filling curves cannot keep these features intact, but our linearization can. As the traversal orders show, our method is not a space-filling curve, but jumps through the original domain.  storm activity over Europe for the entire month of December 1999 in 1-hourly intervals. This is our data set with the most time steps. December 1999 was a disastrous month for Europe: cyclone Lothar killed 110 people and caused the highest storm damages in recent European history (11 billion Euro), overshadowing the other violent storms in that month such as Anatol and Martin.</p><p>Our temporal merge tree map in Figure <ref type="figure" target="#fig_5">1</ref> shows low pressure systems with blue colors. This reveals the individual storms as dark blue curves very well thanks to our feature-preserving linearization and the optimization of the temporal coherence. The temporal merge tree map facilitates data analysis tasks such as counting storms, comparing their life time or the size of their footprint, and so on.</p><p>We ask the reader to pay attention to December 26 where almost all of the visualization turns blue, indicating a dominance of low-pressure systems at that moment. Similarly, almost the entire map turns red for December 23. These fleeting moments in time are easy to miss in an animation, but are prominently revealed through our visualization. A mere feature tracking would also not be able to reveal these moments as the data context would be discarded.</p><p>The 3D flow around a Cylinder shown in Figure <ref type="figure" target="#fig_15">14</ref> exhibits periodic vortex shedding leading to the well known von Kármán vortex street. The simulation is initiated from an impulsive start-up and the periodic vortex shedding develops with time. This means, the flow becomes increasingly unsteady over time. This is our topologically most complex data set.</p><p>Our temporal merge tree map is able to reveal the different phases Figure <ref type="figure" target="#fig_5">13</ref>. Using a discrete colormap with our method is similar to defining thresholds for Nested Tracking Graphs <ref type="bibr" target="#b21">[22]</ref>. The results bear a resemblance, but our method shows better temporal coherence due to our explicit temporal optimization. Compare these results to our original result for the Storms data set from Figure <ref type="figure" target="#fig_5">1</ref>.</p><p>of the simulation. The fluid is at rest at the beginning of the simulation and a recirculation region slowly builds behind the cylinder. This is the startup phase in which no vortex shedding occurs. Once the recirculation region is large enough, vortices separate from it and are transported downstream. We only see primary vortex structures with almost 2D behavior in this second phase, i.e., their profile remains constant in spanwise direction and they are almost straight tubes parallel to the z-axis. The von Kármán vortex street is fully developed in the third phase. Primary and secondary vortex structures with varying profiles and geometries appear in this phase. Note that we are transforming the 4D space-time domain of this data set to a 2D domain for the visualization. There is no such thing as a free lunch. This example reveals that our ability to see the evolution of features is closely correlated to the topological complexity of the data. The more superarcs we have in the merge trees, the harder it is to identify these individual regions, establish their temporal coherence, and follow them over time. The average amount of superarcs for the three phases is 14, 37, and 241, respectively. Nonetheless, having a static visualization of this data set is highly informative and a very good companion to a spatial volume rendering.</p><p>The 3D flow behind the research vessel Tangaroa shown in Figure <ref type="figure" target="#fig_16">15</ref> captures how a side-on airflow is affected by the vessels' geometry. This is of interest, as the several instruments mounted on the Tangaroa take meteorological measurements which can be influenced by airflow distortions. Our temporal merge tree map reveals one large-scale structure persisting throughout the entire time range. This is the structure right behind and around the vessel. Several structures of various sizes split of and eventually disappear. The largest of these is a feature group detaching from the main one around t = 25 and disappearing through leaving the domain around t = 145. Since our method provides a static overview of all time steps, we can confidently state that this process happens only once and is not akin to a periodic vortex shedding, but rather most likely caused by the initial flow conditions.  Topological simplification leads to a smoother temporal merge tree map for the Tangaroa data set, while retaining the overall Gestalt. Our method reveals two large feature groups splitting from each other at around t = 25, which can also be seen in the volume rendering at t = 100.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS AND FUTURE WORK</head><p>We introduced temporal merge tree maps as a static visualization for time-dependent scalar fields. It is based on a feature-based domain linearization which allows us to compress all spatial dimensions into one, while keeping features intact and preserving the data context. We use this in a 2D layout where the temporal dimension is placed orthogonally to the linearized spatial dimension. We developed a scheme to optimally preserve temporal coherence. We compared our method to related work and applied it to several data sets. While our results show astonishing temporal coherency compared to previous work and taking into account the dimensionality reduction, we can clearly see some temporal discontinuities in the final results. In some cases, there are simply big changes in the data between two time steps. A higher resolution of the data could help in those cases. In other cases, the number of superarcs spikes for some time steps. Currently, we apply topological simplification to each time step individually, which could be responsible for such spikes between time steps. We will leave it to future research to devise a global topological simplification scheme that incorporates all time steps at once. Similarly, it would be interesting to try out other heuristics for solving the discrete optimization problem and to study if the heuristic presented here could improve layouts in feature-based methods. Other avenues for future research include the usage of contour trees instead of merge trees, and context-aware subsampling <ref type="bibr" target="#b0">[1]</ref> for the creation of the final image.</p><p>It is highly interesting to investigate how our concept can be applied to other kinds of data, e.g., vector fields or point clouds, such that we can get the same kind of spatio-temporal insight for that data as we have now for scalar fields with temporal merge tree maps.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Example scalar field and its associated join tree. The different colors represent the superarcs. See also Figures 4 and 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Overview of our method.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>1 −</head><label>1</label><figDesc>Figure 4(a) shows this. Starting on the right side is − an implementation choice: we could just as well start on the left, or even 0 m (a) The root is placed at the left.The regular nodes are placed in an alternating fashion from the outside inwards.(b) At an inner supernode , the remaining space [x L , x R ] is distributed between the left and the right child superarcs, with the supernode in between.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. After the domain linearization (Figure 4), we assign the original data values to the samples. The resulting 1D scalar field keeps features intact and contains all original data samples for data context. Compare to the original data in Figure 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 .Figure 8 .</head><label>78</label><figDesc>Figure 7. Temporal merge tree map for the electrostatic potential of the Benzene molecule when slicing through the z-dimension. The spatial 6-fold symmetry, as well as the temporal symmetry, are well captured. Compare this optimized version with the other ones in Figure 9.</figDesc><graphic url="image-7.png" coords="6,327.03,90.51,207.66,92.02" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>objective function for non-optimized version temporal merge tree map for non-optimized version objective function for worst randomized version temporal merge tree map for worst randomized version</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 9 .</head><label>9</label><figDesc>Figure 9. Non-optimized version (left) and worst randomized version (right) of the temporal merge tree map for the Benzene data set.</figDesc><graphic url="image-19.png" coords="7,150.35,173.82,62.61,76.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 10</head><label>10</label><figDesc>Figure10. Result for our method and two different space-filling curves for the Ring data set by Franke et al.<ref type="bibr" target="#b10">[11]</ref>. The data contains a single feature (the ring) growing in size and intensity. Our method captures this well, whereas the Hilbert and Morton curves do not keep the feature intact.</figDesc><graphic url="image-18.png" coords="7,74.98,173.82,62.61,76.52" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 11 .</head><label>11</label><figDesc>Figure 11. Comparison of our method against several space-filling curves in terms of linearization and traversal order for the Nucleon data set inspired by a similar comparison in Zhou et al.<ref type="bibr" target="#b45">[46]</ref>. The Nucleon data set consists of one large feature with two small maxima on top. The space-filling curves cannot keep these features intact, but our linearization can. As the traversal orders show, our method is not a space-filling curve, but jumps through the original domain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 12 .</head><label>12</label><figDesc>Figure 12. Some feature tracking methods use fixed thresholds to extract sub/superlevel sets and depict them in a tracking graph scaled by size. These four different scalar fields cannot be distinguished by those methods. Since our method uses merge trees to map all data samples, it can distinguish between different data distributions (a vs. b) or a different number of features (a vs. c). It is however blind to changes in the spatial distribution (a vs. d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head></head><label></label><figDesc>(a) Nested Tracking Graph with 9 layers. (b) Temporal Merge Tree Map with a 9-step discrete colormap.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 14 .</head><label>14</label><figDesc>Figure 14. The temporal merge tree map for the Cylinder data set reveals three phases with increasing topological complexity: the startup phase where most of the fluid is still at rest, the initiation of the shedding with just primary vortex structures, and the fully developed von Kármán vortex street. The scalar field is the Okubo-Weiss criterion restricted to values Q &gt; 0.04.</figDesc><graphic url="image-49.png" coords="9,72.89,-75.69,472.74,472.75" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 15 .</head><label>15</label><figDesc>Figure 15. Topological simplification leads to a smoother temporal merge tree map for the Tangaroa data set, while retaining the overall Gestalt. Our method reveals two large feature groups splitting from each other at around t = 25, which can also be seen in the volume rendering at t = 100.</figDesc><graphic url="image-57.png" coords="9,108.31,386.01,126.44,99.03" type="bitmap" /></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The authors wish to thank the anonymous reviewers, Michael Ankele, and Jiahui Liu for valuable feedback. This work was supported through grants from the Swedish Foundation for Strategic Research (SSF, Project BD15-0082) and the Swedish e-Science Research Centre (SeRC). The presented concepts have been implemented in the Inviwo framework.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Seam Carving for Content-Aware Image Resizing</title>
		<author>
			<persName><forename type="first">S</forename><surname>Avidan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<idno type="DOI">10.1145/1275808.12763909</idno>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH 2007 Papers</title>
				<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page">10</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Vortex tracking in scale space</title>
		<author>
			<persName><forename type="first">D</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<idno type="DOI">10.5555/509740.5097792</idno>
	</analytic>
	<monogr>
		<title level="m">Data Visualization 2002. Proc. VisSym 02</title>
				<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Graph theory with applications</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Bondy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><forename type="middle">S R</forename><surname>Murty</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976">1976</date>
			<publisher>Elsevier Science Publishing Co., Inc</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Simulation of the three-dimensional flow around a square cylinder between parallel walls at moderate reynolds numbers</title>
		<author>
			<persName><forename type="first">S</forename><surname>Camarri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M.-V</forename><surname>Salvetti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Buffoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Iollo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">XVII Congresso di Meccanica Teorica ed Applicata</title>
				<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Ein Beitrag zur Mannigfaltigkeitslehre</title>
		<author>
			<persName><forename type="first">G</forename><surname>Cantor</surname></persName>
		</author>
		<idno>1878. 3</idno>
	</analytic>
	<monogr>
		<title level="j">Journal für die reine und angewandte Mathematik (Crelles Journal)</title>
		<imprint>
			<biblScope unit="volume">1878</biblScope>
			<biblScope unit="issue">84</biblScope>
			<biblScope unit="page" from="242" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Topological Manipulation of Isosurfaces. phdthesis, The University of British Columbia</title>
		<author>
			<persName><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<idno type="DOI">10.14288/1.00512872</idno>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Context-based Space Filling Curves</title>
		<author>
			<persName><forename type="first">R</forename><surname>Dafner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Matias</surname></persName>
		</author>
		<idno type="DOI">10.1111/1467-8659.00413</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">7</biblScope>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Multi-Charts for Comparative 3D Ensemble Visualization</title>
		<author>
			<persName><forename type="first">I</forename><surname>Demir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.23464483</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization &amp; Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2694" to="2703" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Three variables are better than one: detection of european winter windstorms causing important damages</title>
		<author>
			<persName><forename type="first">M.-S</forename><surname>Deroche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Choux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Codron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Yiou</surname></persName>
		</author>
		<idno type="DOI">10.5194/nhess-14-981-20146</idno>
	</analytic>
	<monogr>
		<title level="j">Natural Hazards and Earth System Sciences</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="981" to="993" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Simulation of simplicity: A technique to cope with degenerate cases in geometric algorithms</title>
		<author>
			<persName><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">P</forename><surname>Mücke</surname></persName>
		</author>
		<idno type="DOI">10.1145/77635.776392</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="66" to="104" />
			<date type="published" when="1990">1990</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Visual Analysis of Spatio-temporal Phenomena with 1D Projections</title>
		<author>
			<persName><forename type="first">M</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Koch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kurzhals</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.143112</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum (Proc. EuroVis)</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">7</biblScope>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Spatial ordering and encoding for geographic data mining and visualization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gahegan</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10844-006-9952-83</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Intelligent Information Systems</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="243" to="266" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Günther</surname></persName>
		</author>
		<ptr target="https://cgl.ethz.ch/research/visualization/data.php.6" />
		<title level="m">Visualization data</title>
				<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">ERA5 hourly data on single levels from 1979 to present. Copernicus Climate Change Service (C3S) Climate Data Store (CDS)</title>
		<author>
			<persName><forename type="first">H</forename><surname>Hersbach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Berrisford</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Biavati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Horányi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Muñoz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sabater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Nicolas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Peubey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Radu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rozum</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Schepers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Simmons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Soci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-N</forename><surname>Dee</surname></persName>
		</author>
		<author>
			<persName><surname>Thépaut</surname></persName>
		</author>
		<idno type="DOI">10.24381/cds.adbb2d476</idno>
		<imprint>
			<date type="published" when="2018-03-10">2018. 10-Mar-2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Ueber die stetige Abbildung einer Line auf ein Flächenstück</title>
		<author>
			<persName><forename type="first">D</forename><surname>Hilbert</surname></persName>
		</author>
		<idno type="DOI">10.1007/BF011994313</idno>
	</analytic>
	<monogr>
		<title level="j">Mathematische Annalen</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">1891</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Open SciVis Datasets</title>
		<author>
			<persName><forename type="first">P</forename><surname>Klacansky</surname></persName>
		</author>
		<ptr target="https://klacansky.com/open-scivis-datasets/.5" />
		<imprint>
			<date type="published" when="2017-12">December 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Visualization of Multivariate Density Estimates With Level Set Trees</title>
		<author>
			<persName><forename type="first">J</forename><surname>Klemelä</surname></persName>
		</author>
		<idno type="DOI">10.1198/106186004x26422</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational and Graphical Statistics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="599" to="620" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">W</forename><surname>Köpp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2865265</idno>
		<title level="m">Temporal Treemaps: Static Visualization of Evolving Trees. IEEE Transactions on Visualization &amp; Computer Graphics (Proc. IEEE VIS)</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page">7</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Time-Varying Fuzzy Contour Trees</title>
		<author>
			<persName><forename type="first">A.-P</forename><surname>Lohfink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gartzky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wetzels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Vollmer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<idno type="DOI">10.1109/VIS49827.2021.96232862</idno>
	</analytic>
	<monogr>
		<title level="m">2021 IEEE Visualization Conference (VIS)</title>
				<imprint>
			<date type="published" when="2021">2021</date>
			<biblScope unit="page" from="86" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Fuzzy contour trees: Alignment and joint layout of multiple contour trees</title>
		<author>
			<persName><forename type="first">A.-P</forename><surname>Lohfink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wetzels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Lukasczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.139852</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum (Proc. EuroVis)</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="343" to="355" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Dynamic Nested Tracking Graphs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lukasczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Biedert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Maciejewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Leitte</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2019.29343682</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization &amp; Computer Graphics (Proc. IEEE VIS)</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="249" to="258" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Nested tracking graphs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Lukasczyk</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Maciejewski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Leitte</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.131642</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum (Proc. EuroVis)</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="643" to="667" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Computing and visualizing time-varying merge trees for high-dimensional data</title>
		<author>
			<persName><forename type="first">P</forename><surname>Oesterling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Heine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Morozov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-44684-4_52</idno>
	</analytic>
	<monogr>
		<title level="m">Topological Methods in Data Analysis and Visualization IV</title>
				<editor>
			<persName><forename type="first">H</forename><surname>Carr</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Garth</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Visualizing nD Point Clouds as Topological Landscape Profiles to Guide Local Data Analysis</title>
		<author>
			<persName><forename type="first">P</forename><surname>Oesterling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Heine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2012.1202</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization &amp; Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="514" to="526" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Sur une courbe, qui remplit toute une aire plane</title>
		<author>
			<persName><forename type="first">G</forename><surname>Peano</surname></persName>
		</author>
		<idno>1890. 3</idno>
	</analytic>
	<monogr>
		<title level="j">Mathematische Annalen</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="157" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">The parallel vectors operator -a vector field visualization primitive</title>
		<author>
			<persName><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Roth</surname></persName>
		</author>
		<idno type="DOI">10.1109/VISUAL.1999.8098962</idno>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization 99</title>
				<meeting>IEEE Visualization 99</meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Wasserstein distances, geodesics and barycenters of merge trees</title>
		<author>
			<persName><forename type="first">M</forename><surname>Pont</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vidal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Delon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Tierny</surname></persName>
		</author>
		<idno type="DOI">10.1109/tvcg.2021.31148392</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization &amp; Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="291" to="301" />
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Free computational fluid dynamics</title>
		<author>
			<persName><forename type="first">S</forename><surname>Popinet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ClusterWorld</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2004-06">June 2004. 6</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Experimental and Numerical Study of the Turbulence Characteristics of Airflow around a Research Vessel</title>
		<author>
			<persName><forename type="first">S</forename><surname>Popinet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Stevens</surname></persName>
		</author>
		<idno type="DOI">10.1175/1520-0426(2004)021&lt;1575:eansot&gt;2.0.co;26</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Atmospheric and Oceanic Technology</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1575" to="1589" />
			<date type="published" when="2004-10">oct 2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Fast similarity search in scalar fields using merging histograms</title>
		<author>
			<persName><forename type="first">H</forename><surname>Saikia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-44684-4_72</idno>
	</analytic>
	<monogr>
		<title level="m">Topological Methods in Data Analysis and Visualization IV</title>
				<editor>
			<persName><forename type="first">H</forename><surname>Carr</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><surname>Garth</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="121" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Global feature tracking and similarity estimation in time-dependent scalar fields</title>
		<author>
			<persName><forename type="first">H</forename><surname>Saikia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.131632</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="2017-06">June 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">A nonlinear mapping for data structure analysis</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">W</forename><surname>Sammon</surname></persName>
		</author>
		<idno type="DOI">10.1109/T-C.1969.2226783</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computers</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="401" to="409" />
			<date type="published" when="1969">1969</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Visualizing features and tracking their evolution</title>
		<author>
			<persName><forename type="first">R</forename><surname>Samtaney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Cao</surname></persName>
		</author>
		<idno type="DOI">10.1109/2.2994077</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="20" to="27" />
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Tree Visualization with Tree-Maps: 2-d Space-Filling Approach</title>
		<author>
			<persName><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<idno type="DOI">10.1145/102377.1157682</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="92" to="99" />
			<date type="published" when="1992">1992</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Tracking and visualizing turbulent 3D features</title>
		<author>
			<persName><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<idno type="DOI">10.1109/2945.597796</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization &amp; Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">5</biblScope>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Visualization of vector fields in quantum chemistry</title>
		<author>
			<persName><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Steinke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
	<note type="report_type">ZIB Preprint SC-96-01</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Extraction of Parallel Vector Surfaces in 3D Time-Dependent Fields and Application to Vortex Core Line Tracking</title>
		<author>
			<persName><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sahner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<idno type="DOI">10.1109/VISUAL.2005.15328512</idno>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization</title>
				<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005">2005. 2005</date>
			<biblScope unit="page" from="631" to="638" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Feature Flow Fields</title>
		<author>
			<persName><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<idno type="DOI">10.5555/769922.7699382</idno>
	</analytic>
	<monogr>
		<title level="m">Data Visualization 2003. Proc. VisSym 03</title>
				<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="141" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Tierny</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Favelier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">A</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Gueunet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Michaux</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2017.2743938</idno>
		<title level="m">The Topology ToolKit. IEEE Transactions on Visualization &amp; Computer Graphics</title>
				<imprint>
			<date type="published" when="2018">2018</date>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page">6</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">dPSO-Vis: Topology-based Visualization of Discrete Particle Swarm Optimization</title>
		<author>
			<persName><forename type="first">S</forename><surname>Volke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Middendorf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Hlawitschka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kasten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zeckzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.121222</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3pt3</biblScope>
			<biblScope unit="page" from="351" to="360" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Visualizing Topological Properties of the Search Landscape of Combinatorial Optimization Problems</title>
		<author>
			<persName><forename type="first">S</forename><surname>Volke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zeckzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Middendorf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gerik</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-44684-4_42</idno>
	</analytic>
	<monogr>
		<title level="m">Topological Methods in Data Analysis and Visualization IV</title>
				<imprint>
			<publisher>Springer International Publishing</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="69" to="85" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Smoke Surfaces: An Interactive Flow Visualization Technique Inspired by Real-World Flow Experiments</title>
		<author>
			<persName><forename type="first">W</forename><surname>Funck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2008.1636</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization &amp; Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1396" to="1403" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Topological Landscapes: A Terrain Metaphor for Scientific Data</title>
		<author>
			<persName><forename type="first">G</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2007.706012</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization &amp; Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1416" to="1423" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Dynamic Volume Lines: Visual Comparison of 3D Volumes through Space-filling Curves</title>
		<author>
			<persName><forename type="first">J</forename><surname>Weissenböck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Fröhler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Gröller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Kastner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Heinzl</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.28645103</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization &amp; Computer Graphics (Proc. IEEE VIS)</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="1040" to="1049" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Interactive Exploration of Large-Scale Time-Varying Data Using Dynamic Tracking Graphs</title>
		<author>
			<persName><forename type="first">W</forename><surname>Widanagamaachchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Christensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<idno type="DOI">10.1109/LDAV.2012.63789622</idno>
	</analytic>
	<monogr>
		<title level="m">2012 IEEE Symposium on Large Data Analysis and Visualization (LDAV)</title>
				<editor>
			<persName><forename type="first">R</forename><forename type="middle">S</forename><surname>Barga</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Pfister</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">H</forename><surname>Rogers</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">7</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Data-Driven Space-Filling Curves</title>
		<author>
			<persName><forename type="first">L</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2020.3030473</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization &amp; Computer Graphics (Proc. IEEE Vis)</title>
				<imprint>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="1591" to="1600" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
