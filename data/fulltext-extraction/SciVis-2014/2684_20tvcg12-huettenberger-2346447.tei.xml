<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Decomposition and Simplification of Multivariate Data using Pareto Sets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lars</forename><surname>Huettenberger</surname></persName>
						</author>
						<title level="a" type="main">Decomposition and Simplification of Multivariate Data using Pareto Sets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2014.2346447</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Multivariate Topology</term>
					<term>Pareto Set</term>
					<term>Simplification</term>
					<term>Decomposition</term>
				</keywords>
			</textClass>
			<abstract>
				<p>(a) scalar fields (b) reachability graph (c) domain decomposition Fig. 1. An illustration of the reachability graph over a real-world data set with four scalar fields. (a) depicts color maps of the scalar fields. The reachability graph shown in (b) provides the decomposition of the domain indicated by color in (c).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Topological visualization techniques capture extremal structures in data and identify intrinsic features in terms of these structures and associated points, to provide an abstract understanding of data sets.</p><p>Especially in the context of increasingly complex and large data sets that result from modern scientific computing methods, an abstract depiction that reduces the data to important features are of increasing importance. This abstraction however must include all relevant information while concealing the unimportant aspects of the data such that intuitive understanding and insight are still possible.</p><p>Established methods for topological analysis and visualization, such as contour trees, identify critical points and regions as well as their connections. Areas of similar behavior are determined to derive a segmentation of the data domain. For univariate data like scalar or vector fields, i.e. where for each position only one scalar value or vec- tor is given, such methods are already introduced and well studied even in high-dimensional domains, cf. e.g. <ref type="bibr" target="#b1">[2]</ref> for the scalar case.</p><p>A few techniques also exist for the case of multivariate data, where for each position multiple scalar variables are provided. These include Jacobi sets <ref type="bibr" target="#b4">[5]</ref>, joint contour nets <ref type="bibr" target="#b0">[1]</ref>, and Pareto sets <ref type="bibr" target="#b9">[10]</ref>. Some of these techniques are summarized in Section 2 to provide a context to the work of this paper. The application of these techniques is however, as is typical for topological approaches, difficult when the data to be analyzed is noisy or structurally rich; the resulting topological structures can be extremely complex, and adequate insight cannot be drawn from corresponding visualizations.</p><p>A straightforward idea in this setting would be to apply common topological simplification techniques to the individual scalar fields of a multivariate data set before application of multivariate topological analysis. However, such an approach would neglect the functional relationship that might exist between the separate functions, as well as the information given through any multivariate topology. Hence, it appears sensible that structural simplification should be performed on the multivariate structure.</p><p>In this context, we propose an approach to achieve structural simplification of Pareto sets over multivariate data. To this purpose, after recapitulating the basic concepts underlying the Pareto set approach in Section 3, this paper provides the following contributions:</p><p>• We present a scheme, inspired by previous work <ref type="bibr" target="#b9">[10]</ref>, to compute a reachability graph between Pareto sets of a multivariate function (Section 4).</p><p>For information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org. • We describe operations on the reachability graph that simplify its overall structure, discuss the implementation of these changes in terms of the underlying function, and propose a measure that determines an order of simplification steps (Section 4).</p><p>• To obtain a basis for comparative evaluation, we extend an approach on the simplification of Jacobi sets <ref type="bibr" target="#b16">[17]</ref> to multivariate data with an arbitrary number of variables (Section 5).</p><p>We illustrate and compare both simplifications on analytic examples and a typical application from the domain of flow visualization in Section 6, aimed at understanding the differences between vortices as described by multiple scalar indicators. The paper concludes with a discussion of the relative merits of each scheme, as well as an outlook towards promising future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>There is a very large body of work on topological visualization techniques. We therefore focus specifically on surveying topological approaches to univariate and multivariate data that are related to the approach presented in this paper.</p><p>For scalar fields, a common topological representation is the socalled Reeb graph, or, in the case of simply connected domains, the contour tree <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b11">12]</ref>. Both track the evolution of connected components of the isosurfaces or level sets, i.e. changes to the preimages of scalar values in the data range. Individual components give rise to edges in the graph, and birth, death, merging, and splitting of components is represented by critical points, i.e. the graph's nodes. Another approach by Chiang et al. <ref type="bibr" target="#b2">[3]</ref> constructs contour trees through traversal along monotone ascending and descending paths.</p><p>A second framework for the topological analysis of scalar data are Morse-Smale complexes <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b14">15]</ref>. Here, loosely speaking, the data domain is decomposed based on common behavior with respect to gradient ascent or descent. In this context, common behavior means that two points reach the same maximum and minimum if ascending, respectively descending a path parallel to the scalar gradient field.</p><p>For both approaches, simplification techniques have been proposed and studied, with the aim of allowing topological visualization of structurally rich data. In many applications, structural richness may result from noise or sampling inaccuracies, and robust topological visualization should ideally be impervious to such phenomena.</p><p>For example, the concept of persistence in general captures the existence interval of topological features as scalar values change. For two adjacent nodes in a Reeb graph, this corresponds to scalar value difference between the corresponding critical points <ref type="bibr" target="#b6">[7]</ref>. Under the assumption that unimportant features or those resulting from noise have low persistence, i.e. tend to disappear under slight changes to the data, they can then be safely omitted from visualization. Such simplification must be consistent in the sense that it captures the topological structure of hypothetically modified data that is close to the original. Recent work introduced a flooding-based method that "fills" a feature up without introducing new ones <ref type="bibr" target="#b18">[19]</ref>. For further literature towards univariate simplification, start for example with Gyulassy et al. <ref type="bibr" target="#b8">[9]</ref>.</p><p>For multivariate (scalar) data, topological visualization is still in its infancy. A general approach taken is to extend the theoretical framework from the univariate case to multiple scalar fields. Edelsbrunner et al. extended Reeb graphs into Reeb spaces <ref type="bibr" target="#b5">[6]</ref> where the now highdimensional range space is traversed. Another approach by Edelsbrunner and Harer is Jacobi sets <ref type="bibr" target="#b4">[5]</ref> which work with the intersection and restriction of level sets and are based on the folding of smooth mappings <ref type="bibr" target="#b20">[21]</ref>. A general disadvantage of Jacobi sets is that their applicability is limited to the case of k ≤ d functions over a d-dimensional domain. Inspired by mathematical work on optimization problems of Stadler and Flamm <ref type="bibr" target="#b15">[16]</ref>, Pareto sets as a tool for the structural visualization of multivariate data were introduced by Huettenberger et al. <ref type="bibr" target="#b9">[10]</ref>. They are defined for an arbitrary number of functions.</p><p>Schneider et al. proposed a comparison through normalized spatial overlap of the largest contours, sets of maximal contours containing only one critical point each, from the separate functions <ref type="bibr" target="#b13">[14]</ref>. Schneider et al. receive a weighted graph to which they apply graph clustering. This however does not typically result in data simplification or decomposition of the domain.</p><p>Joint contour nets <ref type="bibr" target="#b0">[1]</ref> make use of contour lines to discretize the domain into slabs, which are regions with constant scalar values. Slab adjacency is captured in a graph which provides a useful visualization. As outlined by Carr and Duke in their paper, joint contour nets can implicitly be simplified through the coarseness of the quantized data on which is used to construct the net. So far, this is the only known stategy for simplifying joint contour nets. However, this approach is global and does not admit the simplification of local structures.</p><p>For multiple vector fields, Morse decomposition is proposed by Szymczack <ref type="bibr" target="#b17">[18]</ref> in connection with supertransition graphs. Here, a given grid is refined into smaller subgrids, each represented by a node. Any vector inducing movement from one subgrid to another is recorded as an edge in the graph. Again, the simplicity of the graph can be controlled through the refinement of the subgrids. While this can be applied to almost any problem, a coarser grid might not represent important topological information. A simplification through removal or merge of unimportant information would therefore be desirable.</p><p>An approach by Tricoche et al. <ref type="bibr" target="#b19">[20]</ref> for single vector fields that also works for multivariate data is to identify critical points in each function and then cluster them in the common domain to reduce the structural complexity. The clustering is nonetheless based on geometric distances between the points and not on any topological structure.</p><p>However, so far only limited results have been discussed toward the simplification of multivariate structural visualization. A promising method is the simplification of Jacobi sets through a local difference measure, described by Suthambhara and Natarajan <ref type="bibr" target="#b16">[17]</ref> for two functions f and g on a 2-manifold embedded in R 3 . Their measure is based on ∇ f (x)×∇g(x) to describe the similarity between the two functions. Though, it might be possible to expand this measure to multiple functions, the limitation for Jacobi sets still exists, namely k ≤ d.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PARETO SETS</head><p>In the following, we recapitulate briefly the concepts underlying the Pareto set visualization approach. We largely follow Huettenberger et al. <ref type="bibr" target="#b9">[10]</ref>, who extended the ideas from the work of Stadler and Flamm <ref type="bibr" target="#b15">[16]</ref> to the piecewise linear, simplicial setting.</p><p>Let</p><formula xml:id="formula_0">S be a d-dimensional simplical complex S ⊂ R d , d &gt; 0, and f : S � → R k , k &gt; 0, a multivariate function such that f = ( f 1 ,..., f k )</formula><p>is given at each vertex and extended to S by barycentric interpolation.</p><p>To compare two points x and y in S, a partial ordering is defined in such a way that x (weakly) dominates y </p><formula xml:id="formula_1">(denoted x � y) if f i (x) ≥ f i (y) for all i = 1,...,</formula><formula xml:id="formula_2">P( f ) of f .</formula><p>Note that in a flat region, an open neighborhood U for which f (x) = f (y) for all x, y ∈ U holds, every point is Pareto maximal and also Pareto minimal. This does not provide a conflict with our definitions or the results in the rest of the paper. We, nevertheless, assume in the following all functions to be free of flat regions.</p><p>Additionally, Huettenberger et al. defined the local ascending sets for x ∈ int σ as</p><formula xml:id="formula_3">H + σ (x) := k i=1 { y ∈ σ | f i (x) ≤ f i (y) }.</formula><p>And analogously, the local descending sets H − σ (x). For the special case that x ∈ σ lies on a face of σ we refer to the illustrations in <ref type="figure">Fig. 3</ref> and to the previous work <ref type="bibr" target="#b9">[10]</ref> for further details. In this case σ needs to be extended to a set of simplices. However, for the sake of simplicity, we refrain from additional notation.</p><p>For the remainder of this work, we denote the set of connected components over P( f ) with E( f ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">REACHABILITY GRAPH AND SIMPLIFICATION (RGS)</head><p>To simplify multivariate data, we apply an idea similar, but not equivalent, to contour trees as constructed by Chiang et al. <ref type="bibr" target="#b2">[3]</ref> for univariate scenarios. We extend the ascending and descending sets from simplices to domain-wide connections between Pareto extrema. This results in a global structure, visualized through a graph showing the relations between the elements of E( f ). We discuss the simplification operations for this graph and how those operations are translated to actual modifications to the data. To conclude this simplification idea we define a suitable criterion to find a good sequence of graph operations.</p><p>Ascending and Descending Sets As a reminder, for a (univariate) scalar field s : S � → R over the simplicial complex S, prior work usually aimed for a decomposition of the data into regions of common behavior. Each regular point x ∈ S can be associated with a set of critical points, local minima, maxima, and saddles of s. The graph-based visualization of the decomposition provides an abstract view on the data and supports its simplification.</p><p>We combine this decomposition idea with the Barrier tree method introduced by Stadler and Flamm <ref type="bibr" target="#b15">[16]</ref> to obtain a global structure of a multivariate field and use it as base for the simplification. We therefore extend Stadler and Flamm's definition, given for graphs, to piecewiselinear data to define reachability between Pareto extrema.</p><p>Let now f : S � → R d and x, y ∈ S be two points with x ≻ y. We say that x reaches y, denoted with x y, if there is a continuous path p :</p><formula xml:id="formula_4">[0, 1] � → S such that p(0) = x, p(1) = y, and p(i) ≻ p( j) for 0 ≤ i &lt; j ≤ 1.</formula><p>Note that this definition excludes x x. We further define a global ascending set for x by</p><formula xml:id="formula_5">H + (x) := { y ∈ S | x y }</formula><p>and analogously the global descending set H − (x).</p><p>Note that, if x is regular, H + (x) contains at least one Pareto maximal point, however in general it contains subsets of the Pareto extrema in E( f ). Hence, we use the terminology that x reaches or is reached by a component Y ∈ E( f ) if and only if x y or y x for some y ∈ Y , respectively. We usually have a proper subset relation since a regular point cannot reach or be reached by a Pareto optimum. To see this, assume for a contradiction that x reaches a Pareto optimum y and, without loss of generality, let x ≻ y, then a path p exists such that</p><formula xml:id="formula_6">x = p(0) ≻ p(1) = y but also p(1 − ε) ≻ p(1) for every 1 &gt; ε &gt; 0.</formula><p>Hence for every sufficiently small neighborhood around y we find a z = p(1 − ε) such that z is inside the neighborhood and comparable with y. This is a contradiction to y is Pareto optimal.</p><p>We extend this nomenclature from points to connected components S ∈ E( f ) of the Pareto set and define H + (S) as the union of all H</p><formula xml:id="formula_7">+ (x) for all x ∈ S. If furthermore for two components S, T ∈ E( f ), H + (S) ∩ T � = /</formula><p>0 is true, we extend the above terminology and write S T . Each point x which is not a Pareto optimum is associated with at least one element of E( f ) which reaches or is reached by x. Pareto optima on the other hand do not have comparable points in their vicinity, therefore no continuous path can start from or end at them. Let this indicates an isolated region inside the data which is only reached by this element, for example, when a region of regular points is completely enclosed by Pareto extrema.</p><formula xml:id="formula_8">A(x) := { S ∈ E( f ) | x S } and D(x) := { S ∈ E( f ) | S x },</formula><p>The connected components of the equivalence classes based on those sets provide a decomposition of the domain S. As illustration, <ref type="figure" target="#fig_8">Fig. 8</ref>(c) shows a data set with four functions over a 2-dimensional domain with the Pareto optima, maxima and minima, colored in yellow, green, and red, respectively. For each connected component, ascending and descending sets are uniquely color coded and transparently overlaid, illustrating the separate equivalence classes.</p><p>As you can see in <ref type="figure" target="#fig_8">Fig. 8</ref>(c) and 1(c) the decomposition is very confusing. Hence, analogously to contour trees <ref type="bibr" target="#b2">[3]</ref>, we aim to create an abstract view on the decomposition through a graph-based approach.</p><p>Reachability Graph Given the global ascending and descending sets for each connected component in P( f ) we construct a reachability graph. The graph contains a directed edge from R1 to R2, if and only if R1 reaches R2. Hence, the edge represents the set of all points x ∈ S with R1 ∈ D(x) and R2 ∈ A(x). <ref type="figure" target="#fig_0">Fig. 4</ref> sketches a scenario with four functions, each with a univariate maximum in R2, R4, a minimum in R3, R4, and a saddle in R1. The ascending and descending sets of R1 are colored in red and green, the descending set for R2 is hatched to indicate reachability. The second image shows the reachability graph for this scenario. In later sections, we visually hide edges that are already given transitively, like for example the edge (R5, R2), to clean up the diagram and provide more comprehensible illustrations. Note however that reachability among the connected components is not transitive and we applied this approach in later diagrams only for visual purpose. Our simplification methods consider all edges including those hidden in the visualization.</p><p>So far we are able to classify points as Pareto maximal, Pareto minimal, and Pareto optimal while the elements in E( f ) can only be denoted as Pareto extrema since they typically consist of a mix of these.</p><p>Also note that loops in the graph are possible. Some are based on numerical errors due to the abstracted view of simplical complexes but not all. For a simple example consider the input data as presented in <ref type="figure" target="#fig_2">Fig. 5</ref>, a ring of four vertices As an aside, note that an edge (g, h) in the reachability graph implies that the connected component G reaches H, i.e. that C G,H = {x ∈ S | G ∈ D(x) and H ∈ A(x)} � = / 0 but it is possible that this set consists of multiple connected components in C G,H . Hence, while not in the focus of this paper, a multigraph with multiple edges between the nodes might be a more suited visualization. This and other aspects, like for example a good placement of the edges according to C G,H is a possible topic of future work while for the simplification approach in this paper the graph as presented above is sufficient.</p><formula xml:id="formula_9">{v 1 , v 2 , v 3 , v 4 } con- nected by edges (v 1 , v 2 ), (v 2 , v 3 ), (v 3 , v</formula><p>Graph Simplification Given the reachability graph, there are two types of possible operations that yield simplification of the graph and are therefore suitable to simplify the structure of E( f ). All other operations to a graph structure can be done through a sequence of these two or their reverse actions.</p><p>Merge two adjacent nodes into a new one, "which inherits the old nodes' edges/neighbors.</p><p>Purge a node and remove it and every adjacent edge from the graph.</p><p>In detail, let G = (V, E) be a directed graph with nodes V and edges E ⊆ V × V . To merge a, b ∈ V into some c � ∈ V , we create the new graph To purge a ∈ V , we would create the new graph</p><formula xml:id="formula_10">G ′ = (V ′ , E ′ ) with V ′ = {c} ∩ V</formula><formula xml:id="formula_11">G = (V ′ , E ′ ) with V ′ = V \ {a} and E ′ = {(x, y) ∈ E | x, y � = a}.</formula><p>However, the removal of any node with more than one adjacent edge can result in a disconnected graph, which implies disconnected data. This is something we have to avoid in our simplification approaches. The only allowed purge is the removal of a leaf which is topologically equivalent to a merge operation of the leaf and its adjacent node. Hence, for our graph simplification approach, we only need to discuss the merge of nodes.</p><p>Interpretation A merge operation in the reachability graph can have different interpretations in terms of how the function f is changed such that the new reachability graph is isomorphic to the previous one after the merge operation. For the contour tree in the univariate case there are several ways as, for example, presented by Tierny and Pascucci <ref type="bibr" target="#b18">[19]</ref>. To provide a broad overview, we present three approaches to change f which result in a merge in the reachability graph. Note that more efficient methods are possible but not in the scope of this overview.</p><p>Given an edge (R 1 , R 2 ) connecting two connected components of P( f ) R1 and R2, either R1 or R2 can be removed, or these components are merged through a connecting region of Pareto extrema. <ref type="figure" target="#fig_4">Fig. 6</ref> illustrates the changes to f that are equivalent to a merge in the corresponding reachability graph. Assume that R1 and R2 are elements in E( f ) with the corresponding nodes R 1 and R 2 and an edge (R 1 , R 2 ). The hatched red and green areas are sections of the ascending and descending set of R1, the unhatched are those of R2. The blue encircled region describes the equivalence class of regular point H + (R1) ∩ H − (R2). It contains all ascending paths that start from a point in R1 and end somewhere in R2. To merge the nodes R 1 and R 2 , we either connect R1 and R2 by Pareto extrema or replace either R1 or R2 with regular points. In either case, we are not allowed to create any more connected components in E( f ) or loops in the reachability graph. Otherwise, the changes to f do not correspond to the merge operation in the reachability graph. The functions are modified in such a way that all function values of the points in R2 are iteratively moved towards R1. <ref type="figure" target="#fig_4">Fig. 6(c)</ref> illustrates the idea behind this pushing analogy on a one-dimensional example with two functions (orange and blue) and two Pareto extrema with the same color scheme as in the other images. The function values in the neighborhood of these moved points are interpolated to create the topological behavior as illustrated in <ref type="figure" target="#fig_4">Fig. 6(b)</ref>.</p><p>The second option, removal of R1 to merge (R 1 , R 2 ) in the reachability graph, is symmetric to this illustration. However, these two options are not able to handle loops, i.e. when R1 = R2. Because the removal results in regular points that do not reach Pareto maxima or Pareto minima. This is a contradiction to our above observation.</p><p>Hence, for the third option, i.e. connecting R1 and R2 through additional Pareto extrema, we modify the functions inside the blue circled area in <ref type="figure" target="#fig_4">Fig. 6(a)</ref>. This area contains all ascending paths from any point of R1 to some point of R2. While a single line of Pareto extrema from some point in R1 to another in R2 also connects these components, we are forced to change all points in the encircled regions since we otherwise create loops from this connected component R1/R2 to itself. This is however not topologically equivalent to the merge of (R 1 , R 2 ). Hence, all points inside the blue circled area are changed into Pareto extrema through modification of f .</p><p>While the complete algorithmic explanation to this approach is outside the scope of this paper, consider the above example with four vertices connected in a circle as a simple and compact illustration. The vertices v 1 reach v 3 via a path through v 2 . We choose a point along this path, here v 2 , and change at least two of its function values, here f 0 and f 1 . The first value is decreased below min{ f 0 (v 1 ), f 0 (v 3 )} and the second value is increase above max{</p><formula xml:id="formula_12">f 1 (v 1 ), f 1 (v 3 )}, e.g. f ′ (v 2 ) = (0, 4).</formula><p>The function values for v 1 and v 3 remain unchanged while all other points along the path are linearly interpolated. Note that all points along the path become Pareto extremal.</p><p>We have in summary two important key stones for the application of this idea to our example in <ref type="figure" target="#fig_4">Fig. 6(a)</ref>. First, given the area that contains all ascending paths from one element of E( f ) to the other -the blue circled area in <ref type="figure" target="#fig_4">Fig. 6(a)</ref> -all function values at the boundary of that area and outside are not changed. Second, at least two functions are modified in such a way that their gradient vectors are inverted to each other for all points inside that area.</p><p>Operation Sequence The last step towards a viable simplification method is to determine a suitable order of merge operations such that simplification addresses small-scale regions (e.g. resulting from noise) with preference.</p><p>In the previous paragraph we designed the merge of (a, b) through removal of R2, removal of R1, or through an additional connection between R1 and R2. In the first option, we modified only a very small part of H + (R1) ∩ H − (R2) and all points of R2, in the second option only some points in H + (R1) ∩ H − (R2) and all of R1, and for the new connection we required to change all points in H + (R1) ∩ H − (R2).</p><p>To estimate the amount of change to f required to transform a regular point x into a Pareto optimum, we measure the dominated and/or dominating points with respect to x restricted to a small neighborhood of x, i.e. H + σ (x) ∪ H − σ (x) as defined in Section 3, σ being the simplex containing x. If those points become incomparable to x by small changes to f , x becomes Pareto optimal. As a reminder, since f is assumed to be linear in σ , H + σ (x) is an intersection of k convex half-spaces which are provided through the hyperplanes { y ∈ σ | f i (x) = f i (y) } for 1 ≤ i ≤ k and σ .</p><p>Hence, if x is not Pareto maximal, H + σ (x) \ {x} � = / 0 is a convex polyhedron and the cone at x has an opening angle which reflects the local quantity of dominated points invariant to the size of σ and the actual scalar values from f . We denote this angle with α + σ (x) ∈ [0, π]. If x lies on a face of some simplex, σ becomes a set of simplices to which x is adjacent and α + σ (x) is calculated through the sum of opening angle in those simplices. Again, for the sake of simplicity, we refrain from additional notation.</p><p>We estimate the amount of alteration to f required to transform all points in R = H + (R1) ∩ H − (R2) into Pareto extrema through y∈R α + σ y + α − σ y dA y . However, note that the ascending and descending set for x are point-symmetric at x, therefore α + σ (x) = α − σ (x) holds. Hence, y∈R α + σ y dA y equivalently reflects the alteration to f except for a scalar factor.</p><p>To change a Pareto optimum x into a regular point, an optimization problem must be solved for each point, which is only practical for small problem instances. An obvious upper bound with the same approach as α + σ is to measure all incomparable points with respect to x restricted to a small neighborhood to x. For Pareto optima, this is obviously the complete neighborhood, therefore an upper bound.</p><p>Hence, we augment the reachability graph with the following weights such that we receive a weighted graph G = (V, E, w). For each edge (S, T ) ∈ E, corresponding to components S, T ⊆ E( f ), we define w(s,t) = y∈R α + σ y dA y +min{|S|, |T |} with R ⊆ H + (S)∩H − (T ) as described above.</p><p>With this definition, w(R 1 , R 2 ) is an estimate of the work needed to remove the component R2 in the previous image. Furthermore, as the node R 2 is removed, all incoming and outgoing edges of R 2 become incoming and outgoing edges of R 1 . To adjust the weights without a recalculation of the ascending and descending sets, we add w(R 1 , R 2 ) to every relocated edge weight and sum the weights of multiple edges, if those appear. The weights measure how much the functions at a point have to be changed with respect to the halfplanes to turn a regular point into a Pareto extremum. Note that these weights remain conservative estimations since in our piecewise linear setting the change applied to one point also changes all other points of the same simplex.</p><p>We apply a greedy algorithm to find a sequence of edge merges until a given threshold is reached. In particular, the algorithm chooses the edge with minimal weight, merges the two adjacent nodes as illustrated before by merging one of the connected components into the other. Then the algorithm recomputes the remaining weights and repeats the procedure until no edge with a weight smaller than the given threshold can be found.</p><p>Note that errors in the triangulation are only local, i.e. they usually affect only single simplices and inside those only slightly such that the opening angle α + σ (x) is rather small. Hence, loops, created through these triangulation errors have a small weight and are chosen first by the greedy algorithm to be removed via a merge of the adjacent node with itself.</p><p>Implementation Our current implementation of computing the angle is limited to two dimensional domains, for which we assume a simplicial complex (triangulated grid) with scalar values given at the vertices. We use the same algorithm as <ref type="bibr" target="#b9">[10]</ref> to identify the set of Pareto extrema E( f ).</p><p>We then compute for each component the ascending and descending set using the following algorithm. We begin at the Pareto minima, respectively Pareto maxima, of the components and propagate a front along the ascending, respectively descending, paths, extending it through individual triangles.</p><p>If the front encounters a Pareto extremum and a corresponding edge is not already in the reachability graph, such an edge is added. This is done until every section of the front has stopped at a Pareto extremum. In each triangle, the corresponding section of the global ascending or descending, respectively, set is saved such that in a second step, the weights for each edge can be calculated in each triangle individually <ref type="figure">Fig. 7</ref>. Illustration of the Merge and Purge graph operations similar to Suthambhara and Natarajan <ref type="bibr" target="#b16">[17]</ref>.</p><p>and then be accumulated. Note that the sections of the ascending or descending sets, respectively, in the triangles are defined by at most six points, two along each edge of the triangle; in other words, in the worst case, each triangle is visited by the front three times. This makes the calculation of intersections straightforward.</p><p>Let c := |E( f )| be the number of connected components. As the reachability graph G has at most c 2 edges, the calculation of the ascending and descending sets and their intersection can be broken down to m linear problems in each of n triangles such that we obtain a worstcase running time in O(c 2 mn). Note that this is a pessimistic estimate, as G has typically fewer than c 2 edges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">SIMPLIFICATION BASED ON THE COMPARISON MEASURE CONTOUR TREE (CTS)</head><p>Simplification based on the reachability graph has a major drawback. If the number of elements E( f ) is relatively large, the simplification algorithm discussed in the previous section is costly, since the ascending and descending sets must be calculated for every component. The edge weight w(S, T ), based on the opening angle α + σ (x) can however be used to modify a simplification approach presented by Suthambhara and Natarajan <ref type="bibr" target="#b16">[17]</ref> for the Jacobi set of two scalar functions such that it works for the Pareto set for arbitrarily many functions.</p><p>Suthambhara and Natarajan calculate a local comparison measure that reflects local topological difference between the functions at each point x ∈ S. This measure yields a scalar field f ′ from which a contour tree <ref type="bibr" target="#b1">[2]</ref> is extracted. Each node v ∈ V corresponds to connected components in the level sets: {x ∈ S | f ′ (x) = c v } for some value c v . Each edge (a, b) corresponds to a connected region in {x ∈ S | c a ≤ f ′ (x) ≤ c b } such that the level sets corresponding to a and b are subsets. Suthambhara and Natarajan then proved that the hypervolume of this connected region is a conservative estimate of the change in relationship between the two functions if specific graph operations are applied to the contour tree.</p><p>We therefore extend the approach of <ref type="bibr" target="#b16">[17]</ref> by introducing a similar local comparison measure with the same interpretation as in the work of Suthambhara and Natarajan. Here, we aim to produce a second method for simplification of Pareto sets with reduced computational effort, compare both approaches, and provide a deeper understanding of the connection between Jacobi and Pareto sets.</p><p>Comparison Measure Suthambhara and Natarajan's comparison measure is defined for every point in the domain. It is a scalar invariant value that is also invariant to specific triangulations of the domain, i.e. the size of the simplices. It reflects local topological difference between the underlying functions.</p><p>In the context of the Pareto set approach, strong difference between the functions results in incomparable points, reducing the number of comparable ones and produces Pareto optima.</p><p>Hence, we suggest to replace the measure from <ref type="bibr" target="#b16">[17]</ref> with 2 • (π − α + σ (x)), the function from the previous section which reflects an upper bound for the difference between the separate functions in f .</p><p>As discussed before, α + σ is not defined for every point in S since σ is ambiguous for some x, especially vertices. Following <ref type="bibr" target="#b16">[17]</ref>, we average α at the vertices based on the values in the adjacent simplices.</p><p>Through linear interpolation using these average values at the vertices, we receive a continuous, piecewise linear scalar field κ f for S.</p><p>Note that for the Pareto optimal points for which no cone exists, κ f equals π, which directly implies that Pareto optima are maximal in κ f . We can easily enforce that every element in E( f ) contains at least one Pareto optimum by adding new functions.</p><p>Assume that an element in E( f ) does not contain a Pareto optimum, therefore only contains Pareto maxima and/or Pareto minima. For such a Pareto maximum x with H − σ (x) � = {x}, we add d new functions to f . Every new function is equivalent to f 0 except for a sufficiently small neighborhood U(x)∩H − σ (x) around x. Inside that region, the positions with the function values f 0 (x) in the new functions are moved by a sufficiently small ε such that these positions form a small d-simplex. The other values for the new functions in U(x) ∩ H − σ (x) are set through linear interpolation. Note that for every point inside that simplex and for every direction from that point we have one of the new function for which the function value increases and another new functions for which it decreases. Hence every point inside that simplex is surrounded by incomparable points and is therefore Pareto extremal.</p><p>However, since x is in the connected component and the new Pareto extrema are all adjacent to x, the new functions do not increase |E( f )| and at most enlarge the component including x. Nor do they change κ f drastically and only inside the small neighborhood U(x).</p><p>Hence, we can assume that every element of E( f ) contains at least one maximum with respect to κ f . Furthermore, since all Pareto optima have π as value of κ f , each element in E( f ) can be associated with a unique connected component in the level set {x ∈ S | κ f (x) = π}.</p><p>Note that since the new functions are almost equal to f 0 they can be neglected for the calculation of κ f except for small neighborhoods around some Pareto optima where those function values actually differ from f 0 . Thus almost no extra computational effort is created through those new functions.</p><p>Contour Tree Given κ f , we follow Suthambhara and Natarajan to construct and simplify a contour tree. For the purpose of illustration, <ref type="figure">Fig. 7</ref> presents the graph operations provided in <ref type="bibr" target="#b16">[17]</ref>. The larger blue nodes are associated with connected components in the Jacobi set. Note the similarity of the Merge and Purge operations to the graph simplification applied in Section 4.</p><p>Also note that, under the above assumption, all connected components are associated with leafs in the contour tree such that a merge tree is sufficient for simplification purposes and simpler to compute. Using this insight, as well as the fact that all nodes of interest, i.e. those associated elements of E( f ), are maxima in the merge tree, we employ a simplified version of the greedy algorithm used in <ref type="bibr" target="#b16">[17]</ref>. This algorithm sequentially chooses the graph operation with minimal cost, applies this operation to recalculate the weights and repeats this until the minimal cost is above a given threshold or until a number of operations is reached. However, we adopt the basic idea to merge edges with smallest weight first, as is also done in the previous section. Here, for each edge the integral of κ f over the area swept by the level sets corresponding to an edge in the merge tree are taken as edge weights.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXAMPLES</head><p>We applied the two strategies, reachability graph simplification (RGS, cf. Section 5) and simplification based on the contour tree of κ f (CTS, Section 4) to two data sets to provide a proof-of-concept and an initial comparison between these methods. Computation times for the results shown in the following are in the range of seconds to minutes depending on the size of E( f ), as discussed in Section 4.</p><p>Synthetic Data The first data set is a synthetic example. We select a 4 × 2 set of positions . We calculate f at the vertices of a regularly triangulated grid as input to our algorithms. <ref type="figure" target="#fig_8">Fig. 8</ref> provides an overview of this example. Each function has a maximum in each of the four connected components of P( f ) in the corners, a minimum in each of the connected components in the top and bottom middle, and a saddle in each of the three connected components in the middle row. <ref type="figure" target="#fig_8">Fig. 8(a)</ref> shows contour lines for the f i , color coded in blue, red, green and black, to illustrate their univariate topologies.   <ref type="figure" target="#fig_8">Fig. 8(c)</ref> presents the reachability decomposition based on color coding ascending and descending sets. This depiction also contains the reachability graph from the previous image, but is more difficult to comprehend. This synthetic data has a relatively simple structure. To obtain increased structural richness as a testbed for simplification, we added random noise. At each vertex and for each component, we changed the function values by a uniform random value from the interval</p><formula xml:id="formula_13">A i = {a i, j ∈ [0, 1] d |0 ≤ j ≤ 4} and B i = {b i, j ∈ [0, 1] d |0 ≤ j ≤ 4} for 1 ≤ i ≤ 4 with the restriction that 0 &lt; |a s, j − a t, j | &lt; 0.1 and 0 &lt; |b s, j − b t, j | &lt; 0.1 for 1 ≤ s,t, j ≤ 4. The functions f i are defined as f i (x) := 4 ∑ j=0 e −|a i, j −x|•2 − 4 ∑ j=0 e −|b i, j −x|•2 ,</formula><formula xml:id="formula_14">[−p • δ , p • δ ]</formula><p>, where δ denotes the range of the corresponding component function and p &lt;&lt; 1. <ref type="figure">Fig. 9</ref>(a) and 9(d) show the same synthetic data, both with additional 1.5% noise. Due to the relative flatness of f , even such a low noise level already introduces significant changes to the structure and breaks apart the three connected components in the middle into several smaller components. The six connected components in the top and bottom row remain roughly intact however. Ideally, the simplification procedure would retain these components and remove all other newly introduced components. <ref type="figure">Fig. 9</ref>(b) and 9(c), and 9(e) and 9(f) show the result of the two approaches after a number of simplification steps. In all four images, the value t indicates the number of removed, respectively merged, elements of E( f ). In both approaches, we remove connected components that correspond to purged or merged nodes in the reachability graph or the contour tree of κ f , respectively. Hence, neither the form of the components nor the contour lines change among <ref type="figure">Fig. 9</ref>(a) to 9(c) and 9(d) to 9(f), respectively. Note that both methods are able to remove most of the spurious noise and keep the six connected components in the top and bottom row we identified in the noise-free data in Fi. 8. CTS however removed almost all of the noise-based components too, among them those which we could associate with the three connected compoents in the middle row from <ref type="figure" target="#fig_8">Fig. 8</ref>.</p><p>For the RGS approach, we observe a range of simplification steps for which the desired elements of E( f ) remain. Still, an exact reconstruction of the original synthetic data, i.e. topological equality in the reachability graph, could not be achieved.</p><p>An explanation for the results is two-folded. First, the induced noise results only in small, local maxima in κ f . Hence, the Pareto extrema based on those noise correspond to only low-weighted nodes which are all removed very early in the CTS method. Since we always remove leafs of the contour tree in this method the remaining nodes do not gain weight very fast such that in later simplification steps also Pareto sets which we would consider important are removed. For the RGS approach, on the other hand, the ascending and descending sets of merged Pareto extrema are changed and thereby also all edge weights adjacent to the corresponding nodes in the reachability graph. Hence, in a cluster of noise-based Pareto extrema, like those we see in the middle row of <ref type="figure" target="#fig_8">Fig. 8</ref>, it is more likely that Pareto extrema remain in the data under RGS than under CTS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Can Data</head><p>We have the Can data set as a real-world example which results from a CFD simulation of flow in a fluid-filled cylinder with a rotating lid. Prior work with a similar data set was done by Huettenberger et al. <ref type="bibr" target="#b9">[10]</ref>. The data set is a simple example of flow simulation with the aim to identify vortices using several vortex criteria, more specifically, Q-criterion, λ 2 , vorticity, and pressure. See, for example, Jeong and Hussain <ref type="bibr" target="#b10">[11]</ref> for further details on those criteria. Such simulations are often found in aircraft or car design where the localization of air turbulences and vortices are essential for a fuel efficient design.</p><p>All criteria indicate vortices via extremality, however disagree on the exact location of those vortices. Therefore, the Pareto set provides extremal regions, elements of E( f ), on which all criteria agree. The criteria mentioned above are calculated from the simulation data and together form the multivariate scalar function f . The simplicial complex that serves as input to both simplification schemes is generated as a two-dimensional slice parallel to and containing the cylinder's central axis. As the flow is rotationally symmetric, this is sufficient to identify meaningful structures. The images in <ref type="figure">Fig. 1(a)</ref> illustrate the component scalar fields on the slice. The goal in this context is to visualize common topological behavior, agreement between the fields, to identify vortices from multiple criteria simultaneously (cf. <ref type="bibr" target="#b9">[10]</ref>).</p><p>As for the synthetic data, <ref type="figure">Fig. 1</ref> illustrates the Pareto sets of f for which <ref type="figure">Fig. 1(b)</ref> and 1(c) depict the reachability graph and decomposition. Note how the number of reachability equivalence classes increases dramatically as the number of extrema regions |E( f )| increases. Pareto maximal and minimal components, as classified by the reachability graph, are of main interest since they indicate regions in which all considered criteria suggest vortices to be located. All criteria agree that towards those components their value increase, respectively decrease, and thereby agree on extremality of this region.</p><p>Edges in the graph furthermore provide a domain expert with information how those regions are connected, even interact with each other. The graph aids the experts to understand global structure and directs them to locations, the Pareto extrema, where a detailed look is necessary. Specifically, an edge represents a set of paths between two connected components on which all criteria agree with respect to the ascending and descending direction, respectively.</p><p>It can be observed that this data set is relatively clean and contains little structure. Again, we add noise to gauge the effect of simplification. <ref type="figure" target="#fig_7">Fig. 10</ref>(a) and 10(d) present the Pareto set for modified data with random 0.04-noise. Note how such small degree of noise already produces a large amount of separate extremal regions. <ref type="figure" target="#fig_7">Fig. 10</ref>(b) and 10(c) present the results of RGS for two different numbers of simplification steps, whereas <ref type="figure" target="#fig_7">Fig. 10</ref>(e) and (f) show the outcome of the CTS method. The value t indicates the number of removed, respectively merge, connected components of P( f ).</p><p>As with the previous, synthetic data, we notice that the contour tree approach removes more components than necessary, while in the reachability graph approach noise-based extremal regions remain.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION &amp; FUTURE WORK</head><p>We presented two techniques for simplifying multivariate scalar data based on structures gained through the calculation of the Pareto set.</p><p>The first technique is based on the reachability graph -a weighted graph whose nodes represent connected components of Pareto extrema. Connectivity is determined by the existence of paths along which function values are strictly increasing or decreasing. Edge weights estimate the local stability as measured by the opening angle of the space of incomparable points within a region. For two fields, this measure is a normalized version of Suthambhara and Natarajan <ref type="bibr" target="#b16">[17]</ref>, originally developed for Jacobi set simplification. However, our measure extends naturally to more than two fields and is furthermore resilient to scaling input field values, e.g. resulting from a change in units. The simplification itself greedily merges or purges node pairs or nodes, respectively, in the order of edge weights until a given threshold is reached. The concept of reachability also lends itself to a decomposition of the domain by defining an equivalence relation among regular points from which the same sets of Pareto extrema can be reached.</p><p>The second simplification technique follows more closely along the lines of Suthambhara and Natarajan <ref type="bibr" target="#b16">[17]</ref> in that it computes the contour tree of the stability field computed from the original multivariate data and performs topological simplification on that contour tree. Again we replaced the stability measure of Suthambhara and Natarajan by our opening angle measure to support more than two fields.</p><p>The results of a case-study-based qualitative comparison of both methods revealed that both techniques managed to remove most of the artificial noise that was introduced during our experiments, but the contour-tree-based method removes more connected components than necessary. The different results may be explained by observing that the CTS essentially turns the multivariate problem into a univariate problem using only local information at each point, whereas the reachability graph considers the functions jointly within regions und thus has more information at its disposal. Compared to the contour tree technique, the reachability graph supports loops and can thereby handle errors based on inconvenient triangulation. However, loops remain difficult to interpret, because they never arise in the univariate setting. In addition, the contour tree technique was slightly faster, but, it does not lend itself to a decomposition of the domain. However since these observation are based on few cases we wish to strengthen our findings by studying further examples in the future.</p><p>Both Suthabhara/Natarajan's and our method currently lack precise rules for the change to the input functions such that the simplified combinatorial structure (contour tree and reachability graph, respectively) arises. Suthabhara and Natarajan point out that such a change may be complex and computationally expensive since it must satisfy numerous constraints on the local stability measure. We outlined the feasibility and three models of how to change the functions for our methods, but the study of which model is generally feasible and optimal (e.g. requires minimal changes to the input functions) may depend on the actual application. We thus leave this study for future work.</p><p>Although we presented our work only for two-dimensional domains, the computation and simplification of the combinatorial structures extend naturally to higher dimensions. While the combinatorial stucture can always be shown via graph drawing, for more than two dimensions the presentation of the domain decomposition and its relation to the combinatiorial structure become challenging. Future work will therefore investigate display strategies for three-dimensional data sets, as these are of primary interest in scienfic and engineering applications. For example, we might base multivariate transfer function design for volume rendering on our combintorial structure in analogy to Zhou and Takatsuka <ref type="bibr" target="#b21">[22]</ref>.</p><p>While in this paper our aim was to demonstrate the feasibility of Pareto set simplification, a more in-depth evaluation is desirable. Therefore, future work is underway to assess the benefits and drawbacks of simplified Pareto sets over existing multifield visualization methods. Prior work already hinted at the relation between Pareto and Jacobi sets <ref type="bibr" target="#b9">[10]</ref>, in this paper we found that this similarity extends to topological simplification. We wish to further study those relations; it has the immediate benefit of providing opportunities to transfer research results for both structures and may shed more light on general multifield analysis in the future. Similar benefits may arise through a comparison with Morse-Smale complexes <ref type="bibr" target="#b7">[8]</ref> and joint contour nets <ref type="bibr" target="#b0">[1]</ref>, especially how the quantization of the fields' values interacts with the reachability relation. Because ascending and descending paths are quite unlike steepest ascent and descent the relation to Morse-Smale complexes is not imminent. But Szymczak's work <ref type="bibr" target="#b17">[18]</ref> on piecewise constant vector fields bears some algorithmic similarity to the detection of Pareto sets and may provide a link between the two. This similarity may prove fruitful for further reasearch.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 4 .</head><label>4</label><figDesc>then we define the equivalence relation x ∼ y ⇐⇒ A(x) = A(y) and D(x) = D(y). (1) Note that all Pareto optima are equivalent, since A(x) = D(x) = / 0; for Pareto maxima A(x) = / 0 holds, while for Pareto minima D(x) = / 0 holds. Of further interest are points for which A(x) ∩ D(x) � = / 0, i.e. points that indicate paths from some elements in E( f ) to itself, a loop. Specifically, when A(x) = D(x) only contains a single element of E( f ), An example configuration of Pareto extrema illustrating the reachability graph, the ascending and descending sets of the connected component R1 (shaded red and green), as well as the descending sets of R2 (hatched).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>4 ), and (v 4 , v 1 ). The function values of two functions are printed directly on the vertices while all other points along the edges are linearly interpolated. f (v 1 ) = (1, 1), f (v 2 ) = (2, 2), f (v 3 ) = (3, 3), and f (v 4 ) = (0, 4). Note that v 1 and v 4 , and also v 2 and v 4 are incomparable such that these vertices and all points included in the two edges between them are Pareto extremal and form a connected component in P( f ). However, v 1 reaches v 3 via a path over v 2 such that the resulting reachability graph contains only one node and a loop to itself.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .</head><label>5</label><figDesc>A simple example bivariate data set with four vertices and four edges. Vertex v 1 is a Pareto minimum, colored green, v 3 is Pareto maximal, colored red, and yellow colored vertex v 4 and adjacent edges are Pareto optimal. v 1 , v 3 , and v 4 and all points along the mentioned edges build on connected component S, i.e. one element in E( f ). Note that this component reaches itself reaches itself via the ascending path along the edges (v1,v2) and (v2,v3) which results in a loop.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>\ {a, b} and E ′ = E| a←c,b←c \ {(a, b), (b, a)}. The formula E| a←c,b←c \ {(a, b), (b, a)} means we replace every appearance of a or b in the set of edges E with c and remove every loop we might create through this renaming.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 (</head><label>6</label><figDesc>b) illustrates the removal of R2. It shows the ascending and descending sets of R1. Note how all paths from or to R2 are now reconnected to R1 without creating circular paths or new Pareto extrema.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Illustration of the functional change if an edge corresponding to a connection between R1 and R2 is merged. (a) and (b) show the result of the changes to the ascending and descending sets of R1 while (c) provides implementational ideas through a 1D example.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 8 .Fig. 9 .</head><label>89</label><figDesc>An illustration of the reachability graph over a synthetic data set with four scalar fields. (a) depicts the contours of each of the four scalar component functions. The reachability graph given in (b) provides a decomposition of the domain shown in (c). (a) original data (1.5%-noise, |E( f )| = 210) (b) RGS (t = 100) (c) RGS (t = 199) (d) original data (1.5%-noise, |E( f )| = 210) (e) CTS (t = 110) (f) CTS (t = 200) A comparison of the two Pareto set simplification techniques over synthetic data with 1.5% random noise. The top images (a) and (c) shows reachability-graph (RGS) simplification for two increasing thresholds. The bottom row illustrates the comparison measure contour tree simplification (CTS) for two increasing thresholds (images (e) and (f)). The first images (a) and (d) present the unsimplified data for the methods. and combined to yield f (x) = ( f 1 (x),..., f 4 (x))</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>(a) original data (0.04%-noise, |E( f )| = 264) (b) RGS (t = 150) (c) RGS (t = 221) (d) original data (0.04%-noise, |E( f )| = 264) (e) CTS (t = 159) (f) CTS (t = 226) A comparison of the two Pareto set simplification techniques over synthetic data with 0.04% random noise. The top images (b) and (c) shows reachability-graph simplification (RGS) for two increasing thresholds. The bottom row illustrates the comparison measure contour tree simplification (CTS) for two increasing thresholds (images (e) and (f)). The unsimplified data is presented in the images (a), respectively (d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 (</head><label>8</label><figDesc>b) shows the same data and its reachability graph, together with the Pareto sets of f consisting of minima (green), maxima (red), and optima (yellow). Nodes are placed in the center of gravity of the corresponding component. Note that loops are not shown, and edges that are already given transitively are removed to simplify visual understanding of this example.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>•</head><label></label><figDesc>Lars Huettenberger is with TU Kaiserslautern. E-mail: l huette@cs.uni-kl.de. • Christian Heine is with ETH Zurich. E-mail: cheine@inf.ethz.ch. • Christoph Garth is with TU Kaiserslautern. E-mail: garth@cs.uni-kl.de.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>k. Furthermore, x strictly dominates y (written x ≻ y) if x � y and there is at least one index i such that f i (x) &gt; f i (y). If either x � y or y � x holds, the points x and y are called comparable, and incomparable otherwise. Intuitively, comparability states that, when changing from x to y, all functions f i behave similar -they all either increase or all decrease. Pareto extrema while all other points are considered regular. The definitions are illustrated for k = 2 functions inFig. 2. The set of all Pareto extrema is denoted as the Pareto set</figDesc><table><row><cell>(a)</cell><cell>(b)</cell><cell></cell></row><row><cell>(c)</cell><cell>(d)</cell><cell></cell></row><row><cell cols="2">Fig. 3. Illustration of Pareto extrema and regular points in linearly inter-</cell><cell></cell></row><row><cell cols="2">polated simplices. (a) Dominated and dominating points w.r.t. x in σ are</cell><cell></cell></row><row><cell cols="2">colored green and red, respectively. (b) For x on an edge, both adjacent</cell><cell></cell></row><row><cell cols="2">simplicies are to be considered. Here, x is Pareto maximal; the same</cell><cell></cell></row><row><cell cols="2">holds for every point x ′ on the edge ν. (c) x has both dominating and</cell><cell></cell></row><row><cell cols="2">dominated points and is thus regular; the same is true for every x ′ ∈ ν.</cell><cell></cell></row><row><cell>(d) A Pareto-minimal vertex.</cell><cell></cell><cell></cell></row><row><cell cols="2">either incomparable or weakly dominating and x is a Pareto maximum</cell><cell></cell></row><row><cell cols="2">if those comparable points are all weakly dominated by x.</cell><cell></cell></row><row><cell cols="2">Pareto optima, Pareto minima, and Pareto maxima are collectively</cell><cell></cell></row><row><cell>called</cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="3">This gives rise to a definition of extremal points of f using this</cell></row><row><cell></cell><cell cols="3">dominance relation: a point x is called a Pareto optimum if there exists</cell></row><row><cell></cell><cell cols="3">an open neighborhood U(x) with x ∈ U(x) such that all y ∈ U(x) \ {x}</cell></row><row><cell></cell><cell cols="3">are incomparable. x is a Pareto minimum if all points y ∈ U(x)\{x} are</cell></row><row><cell></cell><cell>f(x)</cell><cell></cell><cell>g(x)</cell></row><row><cell></cell><cell>ascending set</cell><cell cols="2">Pareto-optimal region</cell><cell>ascending set</cell></row><row><cell></cell><cell cols="2">Pareto maximum</cell><cell>Pareto maximum</cell></row><row><cell></cell><cell cols="3">Fig. 2. Pareto set for two 1D functions.</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was funded in part by the DFG International Research Training Group 1131 "Visualization of Large and Unstructured Data Sets" and the Marie Curie Actions within the EU FP7 Programme under grant #304099. We are indebted to our colleagues at TU Kaiserslautern for discussion and feedback, and would also like to express our gratitude for constructive comments from reviewers.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Joint contour nets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Duke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">99</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Computing contour trees in all dimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Axen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="75" to="94" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Simple and optimal outputsensitive construction of contour trees using monotone paths. Computational Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-J</forename><surname>Chiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lenz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Rote</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="165" to="195" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Computing reeb graphs as a union of contour trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Doraiswamy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Natarajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="249" to="262" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Jacobi sets of multiple Morse functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Harer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Foundations of Computational Mathematics</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">312</biblScope>
			<biblScope unit="page" from="37" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Reeb spaces of piecewise linear mappings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Harer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">K</forename><surname>Patel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Computational Geometry</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="242" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Topological persistence and simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Letscher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zomorodian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 41st Annual Symposium on Foundations of Computer Science, FOCS &apos;00</title>
		<meeting>the 41st Annual Symposium on Foundations of Computer Science, FOCS &apos;00<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page">454</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A practical approach to morse-smale complex computation: Scalability and generality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gyulassy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1619" to="1626" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Topology-based simplification for feature extraction from 3d scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gyulassy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Natarajan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Conference on Visualization</title>
		<meeting>IEEE Conference on Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Towards Multifield Scalar Topology Based on Pareto Optimality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Huettenberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Heine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="341" to="350" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">On the Identification of a Vortex</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hussain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">285</biblScope>
			<biblScope unit="page" from="69" to="94" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Efficient computation of the topology of level sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Cole-Mclaughlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="187" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Robust on-line computation of reeb graphs: Simplicity and speed</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scorzelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mascarenhas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2007-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Interactive comparison of multifield scalar data based on largest contours</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Heine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Geometric Design</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note>in press</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Parallel computation of 2d morse-smale complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Shivashankar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Senthilnathan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Natarajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1757" to="1770" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">F</forename><surname>Stadler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Flamm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Barrier Trees on Poset-Valued Landscapes. Genetic Programming and Evolvable Machines</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="7" to="20" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Simplification of jacobi sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Suthambhara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Natarajan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Topological Methods in Data Analysis and Visualization, Mathematics and Visualization</title>
		<editor>V. Pascucci, X. Tricoche, H. Hagen, and J. Tierny</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="91" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Stable morse decompositions for piecewise constant vector fields on surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Szymczak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="851" to="860" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Generalized topological simplification of scalar fields on surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tierny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2005" to="2013" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A topology simplification method for 2d vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Conference on Visualization &apos;00, VIS &apos;00</title>
		<meeting>the Conference on Visualization &apos;00, VIS &apos;00<address><addrLine>Los Alamitos, CA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="359" to="366" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">On Singularities of Mappings of Euclidean Spaces. I. Mappings of the Plane into the Plane</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Whitney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Annals of Mathematics</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="374" to="410" />
			<date type="published" when="1955" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Automatic transfer function generation using contour tree controlled residue flow model and color harmonics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Takatsuka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1481" to="1488" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
