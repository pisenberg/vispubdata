<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualizing 2-dimensional Manifolds with Curve Handles in 4D</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hui</forename><surname>Zhang</surname></persName>
							<email>huizhang@iu.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianguang</forename><surname>Weng</surname></persName>
							<email>wengjg@zju.edu.cn</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guangchen</forename><surname>Ruan</surname></persName>
							<email>gruan@umail.iu.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Pervasive Technology Institute at Indiana University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="laboratory">Zhejiang University of Media and Communication</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">School of Informatics and Computing at Indiana University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Visualizing 2-dimensional Manifolds with Curve Handles in 4D</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2014.2346425</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>math visualization</term>
					<term>4D</term>
					<term>deformation</term>
					<term>Reidemeister theorem</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this paper, we present a mathematical visualization paradigm for exploring curves embedded in 3D and surfaces in 4D mathematical world. The basic problem is that, 3D figures of 4D mathematical entities often twist, turn, and fold back on themselves, leaving important properties behind the surface sheets. We propose an interactive system to visualize the topological features of the original 4D surface by slicing its 3D figure into a series of feature diagram. A novel 4D visualization interface is designed to allow users to control 4D topological shapes via the collection of diagram handles using the established curve manipulation mechanism. Our system can support rich mathematical interaction of 4D mathematical objects which is very difficult with any existing approach. We further demonstrate the effectiveness of the proposed visualization tool using various experimental results and cases studies.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>People generally learn better in a situation that resembles a past experience, and knowledge of shape comes from a combination of sight, touch, and exploration <ref type="bibr" target="#b0">[1]</ref>. Mathematical experience is not an exception. Mathematicians popularize unfamiliar concepts starting with drawing familiar analogous diagrams.</p><p>Our task in this paper is to show how one can fully understand, propose, and trace the evolution of unfamiliar 4D surfaces by decomposing the task into familiar 2-dimensional steps. We typically would like to investigate 4D surfaces, which are an important class in descriptive topology <ref type="bibr" target="#b17">[18]</ref>. Surfaces in 4D play many roles analogues to those of familiar curves in 3D; in particular, spheres are the analogs of closed curves and knots can be generalized to "knotted surfaces" (closed 2D surfaces embedded in 4D). We start from the implementation of a multi-cursor-enabled interface that allows us to take control of one-dimensional curves embedded in 3D space with a set of elementary string interactions. Having established the mechanisms and intuition of this artifice, we proceed to a novel mathematical visualization interface capable of moving two-dimensional surfaces around in 4D space by decomposing the unfamiliar 4D tasks into a sequence of familiar string interactions. In this way, we can proceed to attack families of significant challenges in 4D intuitive visualization such as twisting and turning in four dimensions with feature curve handles, canceling/adding pinch-points in topological constructions, modeling 4D "chain" structures consisting of linked spheres and ribbons, and visualizing the refinement of mathematical curves and surfaces by generating feature-aware snapshots.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">MOTIVATION</head><p>The idea of cross-dimensional understanding has long been a subject of fascination. Carter's How Surfaces Intersect in Space <ref type="bibr" target="#b7">[8]</ref> contains numerous hand-drawn diagrams to unfold the visual secrets of the evolution of 3D and 4D geometric topology with a sequence of feature diagrams in a time-lapse form. <ref type="figure" target="#fig_0">Figure 1</ref> illustrates one such picture story that starts with a set of familiar string interactions: curves in 3D can be transformed into one another by means of such "flat" string interactions applied to their 2-dimensional "knot-crossing" diagrams, mathematically named "Reidemeister moves" (see <ref type="figure" target="#fig_0">Figure 1 1</ref> � and <ref type="bibr" target="#b21">[22]</ref>).</p><p>The interesting part of the story is about the close relation between the evolution of curves and that of surfaces in space. In <ref type="figure" target="#fig_0">Figure 1</ref> 2 � a set of hand-designed diagrams are created by cutting a curved surfaces with parallel cutting planes. The diagrams, called a movie of the surface, exposes cross-sections of the surface and reveals its internal features and structure. <ref type="figure" target="#fig_0">Figure 1</ref> 3 �-4 � disclose the mathematical meaning of these curved surfaces with self-intersections: the 3D figures are used to depict smooth topological disks in 4-dimensional space by giving "broken" surface diagrams, and they are bounded by curves whose 2dimensional "knot-crossing" diagrams indicate which sheet is above another from the projection point into 3-space. (Carter's book thinks of 4-dimensional space as a collection of curves in 3-dimensional space, in a time-lapse form.) With these established mechanisms, Carter's picture story proceeds to indicate how surfaces in 4-space can be evolved into one another: the unfamiliar evolution of a surface in 4D can be proposed and traced by interpolating the successive stages of "moves-to-movies", i.e., the more picture-friendly evolution of a collection of "knot-crossing" diagrams. The interpolations applied to 3D figures indeed depict how surfaces interact with one another in 4dimensions (see e.g., <ref type="bibr">Figure 1 5</ref> �� → 6 �, the 4D evolution is one of the Roseman 4D moves, which illustrates the canceling or adding branch points through a saddle accomplished by a fairly familiar Reidemeister move on its cross-section.)</p><p>In our work, we develop a computer realization of drawings from Carter's book that enhances the user's understanding of topological spaces, in particular, curves embedded in 3D and surfaces embedded in 4D. The key contributions of our work are summarized below:</p><p>• This paper reports the first interactive visualization system that naturally couples the visual metaphors of mathematical entities and intuition-building interactions based on their geometric and topological features. Our interface allows one to propose the evolution of unfamiliar 4D surfaces by decomposing the task into understandable 2-dimensional steps. Each step can be understood and built from familiar atomic pieces. Furthermore, as the mathematical entity changes, its topological change is traced in a time-elapse form.</p><p>• We introduce an innovative "flat" style represenation to describe 3D-embedded curves in 2D (Section 3), and 4D-embedded surfaces in 3D (Section 4). Our representation is simple enough to transform mathematical entities into understandable lower dimensional analogues, and still powerful enough to depict the evolution of curves and surfaces with topology preserving deformations in the full dimensional space.</p><p>• Last, we investigate and implement a family of novel interaction and exploration methods for building mathematical visualization applications involving both static structures, such as 4D "chain" structure, and changing structures requiring interactions, such as reidemeister-type moves for surfaces in four-dimensional, or the  (original drawing by Scott Carter, modified and re-arranged by the authors for pedagogical purposes). 1 : the three types of Reidemeister moves. 2 : a sequence of diagrams are obtained by cutting the curved surface sheet with hyperplanes parallel to the horizon; the curved surface is indeed the 3D representation of a topological disk smoothly embedded in 4-space. 3 4 : the underlying structure of the topological disks is revealed by the "crossing-diagrams" of their boundary curves. 5 � → 6 : depicting and deforming the 4D surface by generating and manipulating the diagram collection obtained along the surface's longitudinal axis (the illustrated evolution of the surface in this specific example causes a hyperbolic confluence of branch points <ref type="bibr" target="#b9">[10]</ref>.)</p><p>Roseman 4D moves (Section 5). Users can propose mathematical moves and understand the evolution of the underlying mathematical structures with various redundant visual cues in our interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">UNDERSTANDABLE 3D EXAMPLE: TOUCHABLE "FLAT" STRINGS</head><p>In this section, we focus on an understandable and familiar 3D visualization task. The aim here is to model and manipulate 3-dimensional curves with touchable strings in 2-dimensional interaction space. We describe the families of methods used to implement the elementary string interaction procedures and user interface elements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Interaction Rules</head><p>For our principal test case of curves positioned in R 3 , we have considered a set of interaction rules that are inspired by hand-designed topological illustrations. For example, our approach models the curves to be infinitely malleable: once shaped they retain the shape. The length is of no concern: sometimes in meters, and sometimes in inches. The evolution in space respects topological constrains: it does not involve cutting the string or passing the string through itself. The interaction is simple and still powerful: each evolution in 3D is proposed by an understandable 2D action. Our fundamental techniques are based on a wide variety of prior art, including 2D Reidemeister move interface for curve manipulation <ref type="bibr" target="#b36">[37]</ref>, sketching based interfaces focusing on mathematical knot construction and manipulation (see, e.g., Cohen <ref type="bibr" target="#b11">[12]</ref>, Scharein <ref type="bibr" target="#b26">[27]</ref>, and Zhang <ref type="bibr" target="#b35">[36]</ref>), and multi-touch variants on graph and curve exploration (see, e.g., Schmidt <ref type="bibr" target="#b27">[28]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Implementation Details</head><p>Our first task is to transform a 3D curve into a hybrid structure that can be simple enough to be represented as a 2D diagram yet powerful enough to extract the curve's 3D topology information. Unlike all previous efforts (see e.g., Scharein's 3D dynamical model <ref type="bibr" target="#b26">[27]</ref> and Zhang's 2D knot representation <ref type="bibr" target="#b36">[37]</ref>), our representation uses a "flat" style topological structure incorporating balanced ternary depth values <ref type="bibr" target="#b4">[5]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Generating the Diagrams</head><p>An initial diagram of a 3D cruve can be obtained by projecting each vertex from R 3 (xyz−space) to R 2 (xy−plane), but various parts of the diagram appear to touch each other due to the projective collapse of the z dimension. Let K = (V, E) represent this initial diagram of a given smooth curve in R 3 , where</p><formula xml:id="formula_0">V = {v 1 , v 2 ..., v</formula><p>n } is the finite set of vertices of the polygon and E is the set of edges {e 1 , e 2 ..., e n }. Our method walks along the planar diagram, and restores the 3D curve's topology by assigning each vertex a ternary "eye-coordinate" or, depth z: z = 1 for vertices on strands crossing over another section, z = −1 for vertices on strands crossing under another, and z = 0 for vertices on un-interrupted strands. Consider <ref type="figure" target="#fig_1">Figure 2</ref> for an illustration of our algorithm. <ref type="figure" target="#fig_1">Figure 2</ref>(a) gives three pieces of smoothly embedded curves in R 3 . <ref type="figure" target="#fig_1">Figure 2</ref>(b) shows the generated flat representation where these curves' salient global structures can be identified and the original topology information is extracted. Let C = {1, 2, ..., n} be the set of indices of all vertices in V. Our ternary "eye-coordinate" representation splits C into three representative subsets:</p><formula xml:id="formula_1">• C + φ = {φ + 1 , φ + 2 , ..., φ + i },</formula><p>the set of indices of the vertices with positive 3D-depth;</p><formula xml:id="formula_2">• C − φ = {φ − 1 , φ − 2 , ..., φ − i },</formula><p>the set of indices of the vertices with negative 3D-depth;</p><formula xml:id="formula_3">• C θ = C − C + φ − C −</formula><p>φ , the set of indices of the vertices with zero 3D-depth.</p><p>In <ref type="figure" target="#fig_1">Figure 2</ref>(b) we draw those vertices in C + φ in blue, C − φ in red, and C θ in grey (selectively). Meanwhile, the diagram is rendered in a pen-and-ink style to create the classical "knot-crossing diagrams" by attaching a thickened curve segment in background color behind each of the curve segments in foreground color <ref type="bibr" target="#b34">[35]</ref>, or, with more difficulty, using a two-pass gap rendering approach <ref type="bibr" target="#b20">[21]</ref>. In this way, we render a two-dimensional projected curve that is broken each time it is occluded by a piece of the whole curve that is nearer to the 3D projection point (e.g., the pieces between vertices in red are occluded by those in blue.) </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Topology-aware Diagram Evolution</head><p>In this section we implement the types of elementary string interactions on the generated diagrams to depict 3D curves' evolution. The fundamental idea of the proposed paradigm is based on a clever but simple geometric construction: the three Reidemeister moves (see e.g., <ref type="figure" target="#fig_0">Figure 1</ref> 1 �). In our implementation we propose an algorithm which consists of three main steps: the determination of the evolved string segment (region of interest, or ROI), string deformation in the least square sense, and topology reconstruction.</p><p>Region of Interest at "Fingertips". We consider topological manipulation of 2D diagrams with multiple virtual mouse cursors, and assume each contact point as a "cursor". One value of doing this is to interface our algorithms and implementations with an abstract input device layer, and can later support both mouse-keyboard and multitouch settings. The identification of ROI starts with the initialization of a set of handle vertices in C θ (see those vertices colored in grey 1 in <ref type="figure">Figure 3</ref>) by matching those vertices in their geometric space to the contact points' pixels in the input device's screen space. In practice, our system recognizes 3-point and 4-point multi-touch gestures by initializing the set of indices of the handle vertices:</p><formula xml:id="formula_4">C s = {s 1 , s 2 , ..., s m },</formula><p>where m = 3 | 4 and C s ∈ C θ . When the user attempts to manipulate the diagram with moves (by touch gesture or, mouse pointer), C s is re-ordered in place such that s 2 (or s 2 s 3 , in a 4-point manipulation) denotes the index of the moving handle vertex and s 1 s 3 (or s 1 s 4 , in a 4-point manipulation) denotes the indices of the boundary (i.e., fixed) vertices. We can thus identify ROI as a polygonal chain R, specified by a sequence of vertices</p><formula xml:id="formula_5">(v s 1 , ..., v s 2 , ..., v s 3 ) or, (v s 1 , ..., v s 2 , ..., v s 3 , ..., v s 4 ) in a 4-point manipulation.</formula><p>With the identified ROI, we next remember within R another set of indices of vertices whose depth values are not zero (see e.g., <ref type="figure">Figure 3</ref>, vertices colored in blue or red):</p><formula xml:id="formula_6">C d = {d 1 , d 2 , ..., d n },</formula><p>where</p><formula xml:id="formula_7">C d = (C + φ ∪C − φ ) ∩ {s 1 , s 1 + 1, ..., s m }.</formula><p>String Deformation. We have implemented an algorithm to deform strings using Laplacian. The string representation can be exploited to allow manipulating the diagram while having the underlying spatial embedding adopt the topology to the deformation. The basic idea is to construct the Laplacian matrix <ref type="bibr" target="#b28">[29]</ref> corresponding to R's link-node structure and set the two types of corresponding control vertices: vertices in C s are used as the shape handle vertices, and those in C d as the depth handle vertices, while nodes in the rest of R are reconstructed in the least square sense. Let x, y, z represent the n × 1 vectors containing the x, y and z coordinates of R's vertices. Our system first constructs the Laplacian matrix L based on the connectivity meshes (in our case, linked nodes), and then adds the following equations of control vertices to solve in the least-square sense in R 3 :</p><formula xml:id="formula_8">x s = x s , s∈ C s y s = y s , s∈ C s z d = z d , d∈ C d ∪ {s 1 ,s m } .</formula><p>While our proposed diagram evolution algorithm can be applied to general topology-preserving curve deformation scenarios, this paper focuses on the six types of Reidemeister-style curve manipulations 2 by restricting the allowed number of vertices in C d . Geometry Reconstruction. After deformation, geometry reconstruction is executed to fix, resolve, and reconstruct the evolved curve's geometry to ensure mathematically valid moves being produced with each touch. The six elementary string moves in our implementation fall into two categories:</p><p>1. moves that have crossings resolved after deformation, including the moves that have all crossings removed after deformation (e.g., type I − in <ref type="figure">Figure 3</ref> We note that it is geometry reconstruction's task to resolve ambiguity raised by moves in the second category by explicitly query users' decision for a crossing sign. Geometry reconstruction process then walks through the diagram and re-assign the ternary depth values for each vertex involved in the deformation. multi-touch. The multi-touch interface frees the user from manually specifying the ROI before starting deformation and makes possible various types of mathematical evolutions of the ROI simply at fingertips.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Curve's Evolution in a Time-lapse Form</head><p>With the string manipulation interface, we can now transform mathematical experience with knots and curves into step-by-step understandable pieces, and thus can afford insight of topological equivalence through the entire connected interactions. <ref type="figure" target="#fig_4">Figure 4</ref> shows an unknotting process where the six types of elementary string interactions are involved in representing the manipulation of a knot. The process begins with the uncrossing (disappearance) of twin crossings at the top <ref type="figure" target="#fig_4">(Figure 4</ref>(b)), followed by the passage over a crossing <ref type="figure" target="#fig_4">(Figure 4(c)</ref>), the disappearance of a pair of twin crossing <ref type="figure" target="#fig_4">(Figure 4(d)</ref>), the disappearance of a small loop <ref type="figure" target="#fig_4">(Figure 4</ref>(e)), and, finally, the disappearance of a pair of twin crossings <ref type="figure" target="#fig_4">(Figure 4(f)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">UNFAMILIAR 4D EXAMPLE: MOVABLE 4D TOPOLOGICAL SURFACES</head><p>We now turn to our main objective, which is to create unique mathematical experience for the 4D world that can begin to make the strange more familiar. Our principal test cases are 4D-embedded 2dimensional manifolds, described by (u, v) parametric space and geometrically shaped to a planar quad (PQ) mesh. The basic idea is to think of a surface in 4-dimensional space as a collection of "flat" diagrams: we cut the 3D figures of 4D topological surfaces with a stack of 3-dimensional "slices", and the intersection is a stack of diagrams that we can manipulate with the mechanisms we just established (see <ref type="figure" target="#fig_0">Figure 1</ref> 2 -6 ). If the surface is positioned appropriately with respect to the "slices", the resultant diagrams for these successive cuts will differ at most by one critical change (e.g., a Reidemeister move, a saddle point, or a local maximum or minimum). These cross-sectional pieces, then, are modeled as touchable diagrams to define the evolution of the surface. We next detail the 3D representation of topological surfaces in 4D, the mechanism of positioning the surface and placing cutting "slices", and the interpolation algorithm for evolving 4D surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Generating 3D Figures of 4D Topological Surfaces</head><p>We used a "flat" style 2D diagram (see <ref type="figure" target="#fig_1">Figure 2</ref>) to represent curves in 3-space. In this section , a similar scheme will be used to describe a class of 2-manifold deformable objects embedded in 4D. The same "flat" style convention is now applied to these surfaces bounded by curves to schematize surfaces in 4-dimensions. With an applied evolution, the surface appears to be self-intersecting in the 3D projection while in fact having no actual intersection of any kind in the 4-space. (c) Crossing diagram drawn on the 4D surface's parametric domain, where each vertexs w-coordinates is mapped to a color-coded balanced ternary value (blue is "in front", or nearer the projection point; red is "behind", or farther from the projection point; and grey means w = 0.) <ref type="figure" target="#fig_5">Figure 5</ref> shows a deformable 4D surface patch embedded in four dimensions. Initially the 4D surface has geometric information only in 3-space, which means the surface is flattened in the fourth dimension initially (i.e., each vertex has a 4D "eye coordinate" or depth w = 0). Therefore the surface behaves just like a piece of 3D surface (see <ref type="figure" target="#fig_5">Figure 5(a)</ref>). When evolved in 4-space, the surface can appear to intersect with itself in the projected 3D space (see <ref type="figure" target="#fig_5">Figure 5</ref>(b)). However, there are no real collisions in 4-space. The crossing-diagram on the the surface's parametric domain, which can be thought of as an unfolded view of the 4D surface (see <ref type="figure" target="#fig_5">Figure 5</ref>(c)), illustrates the secret: the "north" half of the intersection line is "in front" or, nearer the 4D projection point, and the south part of the intersection line is "behind"; the two parts have no intersections of any kind in 4-space.</p><p>Selective vertices are color-coded for 4D depth as shown in Figure 5(c) to illustrate the "flat" style represenation of 4D surfaces. We assign each vertex a ternary "eye-coordinate," or depth w: w = 1 for vertices on patches that are "in front" in the fourth dimension, w = −1 for vertices that are "behind", and w = 0 for vertices on surface patches where there is no self-intersection. Vertices shared by a "front" patch and a "behind" patch are assigned w = 0 (see e.g., in <ref type="figure" target="#fig_5">Figure 5</ref>(c), the two vertices in grey near where the blue and red intersection lines meet).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Elementary 4D-Surface Interactions</head><p>Now we extend our string interaction mechanisms to a 4D topological surface (say M ). For pedagogical purposes, the boundary curves on these 3D figures are planar and restricted to planes. Just as architectural designers use a few curves to dominate the aesthetic characteristic of shapes (see e.g., <ref type="bibr" target="#b37">[38,</ref><ref type="bibr" target="#b23">24]</ref>), we can prescribe a 4D surface's boundary curve and expect the rest of the surface to blend in.</p><p>Boundary Curves as 4D Control Handles. In order to support such curve-based 4D manipulations, we allow the user to select and deform one boundary curve (say K) of a 4D topological surface using the 6 elementary string interactions (see <ref type="figure" target="#fig_6">Figure 6</ref>). A similar but revised topology reconstruction scheme is used: in 3D curve manipulation scenario we removed a small under-crossing arc to indicate which strand is "nearer" the 3D projection point, now on a 4D control handle we are going to remove a small under crossing arc on the boundary curve to indicate which strand is "nearer" the 4D projection point. <ref type="figure" target="#fig_6">Figure 6</ref>(a)-(d) list the four basic surface evolutions where the familiar string interactions are being applied to the surface's boundary curves. After the evolution, the vertices on a 4D curve handle are assigned ternary 4D-depth (the blue handle vertices are "nearer" to the 4D projection point than those red are.)</p><p>Interpolating 3D Shapes and 4D Depth. Let C = {k 1 , k 2 , ..., k n } be the set of indices of all vertices on the boundary curve handle K that is selected and deformed. C consists of two subsets: C φ , the set of indices of the vertices with either positive or negative 4D-depth; and C θ , the set of indices of the vertices with zero 4D-depth. The other three boundary curves are considered fixed during 4D deformations, and we use C � = {l 1 , l 2 , ..., l m } to represent the set of indices of their vertices. Following the same fashion of string deformation, we construct the Laplacian matrix <ref type="bibr" target="#b28">[29]</ref> corresponding to M 's mesh structure and set the two types of corresponding handle vertices: vertices in C ∪ C � are used as shape handle vertices, and those in C φ ∪ C � are used as 4D-depth handle vertices, while nodes in the rest of M are reconstructed in the least square sense. Let x, y, z, w represent the n × 1 vectors containing the x, y, z and w coordinates of M 's vertices. Our system now constructs the Laplacian matrix L, and then adds the following four equations of the control vertices to solve in the least-square sense in R 4 :</p><formula xml:id="formula_9">x s = x s , s∈ C ∪ C' y s = y s , s∈ C ∪ C' z s = z s , s∈ C ∪ C' w d = w d , d∈ C φ ∪ C' .</formula><p>4D Geometry Reconstruction. After the rest of the 4D surface blends in, our algorithm walks through the mesh and re-assign the ternary 4D-depth values for each vertex involved in the deformation. Each elementary move triggered by string manipulations on the 4D surface' boundary curve can be thought of as an evolution of the crossing-map 3 in the evolved surface's parametric space (see <ref type="figure" target="#fig_6">Figure  6</ref>(a 2 )� →(d 2 )). For example, the 4D evolution in <ref type="figure" target="#fig_6">Figure 6</ref>(a 1 ) creates a branch point on the annulus in the geometric space. The evolution can be visualized as an introduction of a v−shape crossing-map in the surface's parametric space. The v−shape intersection consists of a blue north half ("in front" in 4D) and a red south half ("behind" in 4D) which do not intersect with one another in 4-space (see <ref type="figure" target="#fig_6">Figure 6</ref>(a 2 ). The evolution in <ref type="figure" target="#fig_6">Figure 6</ref>(a 2 ) involves two separate surface sheets in geometric space, where the first surface's evolution generates a minimum of the double point curve on the two immersed surfaces. The evolution corresponds to a u−shape crossing-map in the evolved surface's parametric space, and the intersection line is completely in red.</p><formula xml:id="formula_10">(a 1 ) ( b 1 ) ( c 1 ) ( d 1 ) (a 2 ) ( b 2 ) ( c 2 ) ( d 2 )</formula><p>There would be a blue counterpart in the second surface's parametric space if visualized. The color pattern indicates the two surfaces do not interact with each other in 4-space, and the intersection in their 3D figures is just an artifact of projection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Evolving 4D Topological Surfaces</head><p>The key ideas of the overall scenario should now be clear. Our technique for moving 4D topological surfaces is to create a collection of diagrams by cutting the object into parallel slices and then separating the slices from each other along a longitudinal axis to expose the successive stages of its evolved features and structures. The diagrams incorporating responsive features can help the viewer understand and redefine the shape of the surface along the longitudinal axis. The logical series of modeling steps, the problems they induce, and the ultimate resolution of moving topological 4D surfaces are detailed in the following sections.</p><p>Positioning and Slicing the 3D Figures of 4D Surfaces. Just as viewpoint suggestion is important to improve the speed and efficiency of data understanding <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b22">23]</ref>, it is particularly useful that the 3D figure of a 4D topological surface is oriented and sliced "appropriately" so that its important features can be exposed across the generated diagrams. Two rules are adopted when we position the 3D figures:</p><p>1. Suggesting the Longitudinal Axis. As illustrated in <ref type="figure" target="#fig_6">Figure 6</ref>, the longitudinal axis orientation is often chosen to align as much as possible with both the direction of the longest extent capable of producing parallel slices and the direction of the maximum exposure of the intersection curves of the 3D figures. We turn the task of choosing the longitudinal axis into a fairly familiar "view selection" problem <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b22">23]</ref>. We assume the longitudinal axis will be aligned to the z-axis, and cutting planes parallel to the xyplane, and the viewpoint "goodness" measure we use takes into account the total projected area of the 3D figure, and the total projected length of the 3D intersection lines. The measure, corresponding to surface S projected from a chosen angle c, is given by</p><formula xml:id="formula_11">I(S, c) = N l ∑ i=0 L i L t log L i L t + N a ∑ i=0 A i A t log A i A t .</formula><p>Here L i represents the projected length of curve segment i and L t is the total length of the knot curve embedded in 3D; A i represents the projected area of polygon i and A t is the total area of projected 3D surface. In our implementation, the measure is minimum, hence better.  <ref type="bibr" target="#b25">[26]</ref>. The apparent depth order of the evolved arcs indicates which surface sheet is "in front" or "behind" in the fourth dimension.</p><p>2. Generating the Feature Diagrams. As pointed out by Carter <ref type="bibr" target="#b7">[8]</ref>, the cutting planes should be placed along the longitudinal axis so that the resultant diagrams for these successive cuts will differ at most by one critical change (e.g., a Reidemeister move, a saddle point, or a local maximum or minimum). Our basic implementation is inspired by Karpenko and Li's exploded view diagram generation <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b19">20]</ref>: we identify all the change points -i.e., the points where the number of connected components, self-intersections, or sharp curvature extrema of the surface cross-section changes <ref type="figure" target="#fig_7">(Figure 7(a)</ref>); we then place cutting planes halfway between each pair of adjacent change points <ref type="figure" target="#fig_7">(Figure 7(b)</ref>).</p><p>Representing Feature Diagrams using Mesh Vertices. Now the 4D surface is described as a sequence of feature diagrams such that successive terms in the sequence differ at most by a critical point. Each feature diagram is the intersection of the surface with a noncritical plane, and typically consists of a number of intersection points (see <ref type="figure" target="#fig_7">Figure 7</ref>(c)) along the cross-sectional curve meeting the polygon edges on the mesh. Before we manipulate the feature diagram, the feature diagram is turned into a representation using the mesh vertices: if an intersection point is close enough to an existing vertex on the mesh, we replace the intersection with the mesh vertex; otherwise, we re-sample the mesh by adding new rows (or columns) so that we can "link" the intersection to the vertex (see <ref type="figure" target="#fig_7">Figure 7(d)</ref>).</p><p>Evolving 4D Surfaces by Manipulating Feature Diagrams. Now we can evolve the 4D surface by applying the elementary string manipulations on these diagrams along the longitudinal axis, one at each time (see <ref type="figure" target="#fig_7">Figure 7</ref>(e)). One important key to a successful 4D evolution is that "the breaks (of the diagrams along the longitudinal axis) match up" <ref type="bibr" target="#b7">[8]</ref>. Our paradigm can ensure each break match up the rest of cross-sectional pieces to produce a mathematically correct 4D evolution:</p><p>1. Type I − , type II − , type III, and Δ− moves on a feature diagram will guarantee to match up the other breaks, (there is indeed only one allowed "break" choice for these moves.) Examples include the elementary moves illustrated in <ref type="figure" target="#fig_6">Figure 6</ref>(c 1 ) and <ref type="figure" target="#fig_6">Figure  6</ref>(d 1 ).</p><p>2. Type I + and type II + moves introduce two possible "break" choices at the diagram level, however the topology information defined in the neighboring cross-sectional pieces may reduce the uncertainty. In our given example shown in <ref type="figure" target="#fig_7">Figure 7</ref>(e), the Reidemeister-style interaction on the feature diagram in the middle cutting-plane (labeled as 2 ) will automatically conform to the topological constraint showing the correct "break": the shape manipulation on the feature diagram will deform the corresponding vertices on the surface mesh, and the rest of the surface will just blend in, adopting the correct topology defined in the top and bottom cutting planes (see the "breaks" in <ref type="figure" target="#fig_7">Figure 7</ref>(e) 1 3 ); thus the interpolation produces the correct "break" for the feature diagram being manipulated.</p><p>3. If two possible "break" choices do arise when type I + and type II + moves are applied to a feature diagram, our interface will explicitly query the user's decision to resolve the evolving feature diagram's crossing sign which, in turn, defines the 4D surface's topological structure. Examples include, e.g., the elementary moves illustrated in <ref type="figure" target="#fig_6">Figure 6</ref>(a 1 ) and <ref type="figure" target="#fig_6">Figure 6</ref>(b 1 ).</p><p>The proposed evolutions to our 4D double decker example are summarized and illustrated in <ref type="figure" target="#fig_8">Figure 8</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION ENVIRONMENT AND EXPERIMENTAL RE-SULTS</head><p>Our user interface <ref type="figure" target="#fig_8">(Figure 8</ref>) is based on OpenGL and Windows Win-Form API. The software runs on a Dell PC desktop with 3.2GHz Intel Pentium 4 CPU, and can be configured to take multi-touch input to control the virtual cursors with local support of PQ Labs Multi-Touch libraries (see e.g., <ref type="figure" target="#fig_4">Figure 4(a)</ref>). In <ref type="figure" target="#fig_8">Figure 8</ref>(b) we show the regular mouse-keyboard input setting for manipulating feature diagrams in a 4D evolution task. The user can place virtual cursors in our diagram interface using a mouse device. Double clicking on a virtual cursor places a push pin to fix the cursor, much as we long press the cursors to indicate the boundary cursors with a multi-touch gesture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">4D Surface's Evolution in a 2-Dimensional Time-lapse Form</head><p>For the user's point, our 4D surface editing interface exploits a 2dimensional time-lapse form: in one dimension, the 4D entity itself is evolved and tracked in a gallery panel of our interface (see e.g., the blue panel in <ref type="figure" target="#fig_8">Figure 8(a)</ref>); in the other dimension, each entity at each time point is represented using a collection of feature diagrams, obtained from cutting planes placed along the surface's longitudinal axis.</p><p>The user can interactively refine the orientation of 4D surfaces, the placement of cutting planes in the "Geometry space" panel (see e.g., <ref type="figure" target="#fig_8">Figure 8</ref>(a)), and swtich to the "Diagram space" panel where the interface allows interactive manipulation of the selected feature diagrams <ref type="figure" target="#fig_8">(Figure 8(b)</ref>). In addition, our interface provides a visual-analysis view to summarize the evolution of a 4D surface using a 2-dimensional time-lapse form (see <ref type="figure" target="#fig_8">Figure 8(c)</ref>) where the understanding of a 4D surface can be transformed into the analysis based on a 2-dimensional array of feature diagrams.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Experimental Results</head><p>We next introduce a family of use scenarios and application results that have originally motivated and later refined the design of our user interface as well as the kernel implementation. Interacting with 4D surfaces using touchable diagrams can help users to develop a correct interactive experience with the intuitive nature of unfamiliar 4D geometry.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Implementing the Roseman 4D Moves</head><p>Our first case scenario concerns a group of "elementary" but rather complicated 4D moves, often referred to as the Roseman 4D moves. Dennis Roseman <ref type="bibr" target="#b25">[26]</ref> showed that seven moves are sufficient to move embedded surfaces around in 4-dimensional space. These moves are like the Reidemeister moves for knot diagrams. If two surfaces can be deformed in 4-space into one another and they have given 3dimensional diagrams that are different, then their diagrams can be transformed into one another by a sequence of the seven Roseman moves. Even though the seven Roseman moves are considered as "elementary moves" for evolving 4D topological surfaces, they are indeed rather complicated and involve non-rigid deformations applied to curved surface sheets. Visualizing and implementing the Roseman moves is very difficult with any existing 4D visualization approach and thus has only existed in the mathematical drawing's imagination (see <ref type="figure" target="#fig_0">Figure 1)</ref>. By transforming the 4D evolution into a set of Reidemeister-style diagrams, we can begin to appreciate the Roseman moves. In <ref type="figure" target="#fig_10">Figure 9</ref> we show one of the seven Roseman moves that can be modeled and implemented in our interface: the move adds or cancels branch points through a saddle move on the immersed surface, using a type I + move on the second cross-sectional diagram obtained with our interface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Visualizing 4D Structures with Diagrammetric Analogues</head><p>The rigors of the higher dimensional worlds are encapsulated within equations, but our intuition is encapsulated in the much simpler figures. Often in topology, we use lower dimensional diagrams to depict phenomena in higher dimensional space. Some lower dimensional analogues can be used to depict 4D structures in an intuitive way. In <ref type="figure" target="#fig_0">Figure 10</ref> we show how diagrammetric analogues can be used to visualize and manipulate the interactions of surfaces in 4D. <ref type="figure" target="#fig_0">Figure  10</ref>(a) is a "fake" chain structure by threading a ribbon "in front of" a closed 2-sphere embedded in the fourth dimension (the two objects are color-coded for 4D depth); there is no real interaction between the ribbon and the sphere (the ribbon, colored in blue, is "in front" of the 2-sphere, colored in red). The diagrammetric analog shows their structural relationship which is a circle well on top of another one, and of course can be fully de-attached from each other with a type II − move (see e.g., <ref type="figure" target="#fig_0">Figure 10(b)</ref>). A real 4D chain structure can be constructed by threading a ribbon into the 2-sphere, first going "above" in 4D, pulling under, and finally coming out the other side "below" (see e.g., <ref type="figure" target="#fig_0">Figure 10</ref>(c), the ribbon goes inside one side the sphere "blue", and comes out the other side "red"; the "green" sphere remains in the middle in the fourth dimension.) In <ref type="figure" target="#fig_0">Figure 10</ref> a Δ−move is applied to the diagrammetric analogues, much as we physically lift the ribbon in four dimensions <ref type="bibr" target="#b32">[33]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Mathematically Deforming 4D Torus</head><p>Our third case scenario concerns the 4D embedded torus, an object of fundamental interest in 4D visualization (see e.g., <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b32">33]</ref>). The 4D torus is the product of two circles, technically written as T 2 with a standard model given by x(u, v) = (cosu, sinu, cosv, sinv). One interesting feature of the 4D torus is the conflict between its two lines of self-intersection on the orthogonal 3D graphics projection, and its actual smooth topological structure in four dimensions.</p><p>In <ref type="bibr" target="#b32">[33]</ref>, Zhang et al. suggest vertex-based manipulation where the 4D physically based modeling moves the free vertices to restrict the final 4D mesh to the correct topology. However such physically based  <ref type="figure" target="#fig_0">Fig. 11</ref>. Applying a mathematical move to the 4D-embedded torus helps expose the underlying topological structure of the surface. The 3D figure of 4D torus is color-coded for 4D depth, so the slight red bulge that remains in the middle is at a completely different depth from the blue surface; thus we can just push the red bulge through the blue surface with Reidemeister moves on the second cutting plane, yielding the final toroidal shape.</p><p>interactions can be counter-intuitive and difficult to understand. In absence of visual presentations and appropriate interaction support that can take into account the important mathematical features, the user is often left guessing how to interact with the rather complicated mathematical objects. This makes mathematical sense-making difficult.</p><p>In <ref type="figure" target="#fig_0">Figure 11</ref>(b)� →(e) we showcase our mathematically interactive solution with which we can visualize the actual smooth structure of 4D torus using an interactive and more visually friendly method. The middle cutting plane in <ref type="figure" target="#fig_0">Figure 11</ref>(c) reveals the visual secret under the torus' skin, which is a circle times a circle. The two circles are not entangled with each other, which can be visualized clearly as a feature diagram. Furthermore, a sequence of type II moves on the second cross-sectional diagram (see <ref type="figure" target="#fig_0">Figure 11(d)</ref>) can transform the 4D torus to actually eliminate the self-intersections in the 3D projection by altering the 4D surface within allowed deformation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">USER FEEDBACK AND DISCUSSION</head><p>A preliminary user study was performed in order to assess our visualization design and user interface implementation. The objective was to overall evaluate the potential pedagogical usefulness of our interface but also to receive feedback on the fulfillment of our design considerations and gather opinions regarding future development.</p><p>User Experience Evaluation. The study included a predominantly qualitative user experience evaluation, complemented by a minor quantitative questionnaire. Twelve people participated in the study, all associated with Zhejiang University of Media and Communication. Their level of expertise and knowledge ranged from one year in graduate program in mathematics to several years of research experience in mathematical visualization and computer interface design. In the study, a demonstration of our user interface was performed, including a step-by-step walk-through of each interface component, and the three major components of our visualization approach (feature diagram generation, surface evolution via interactive diagrams, illustrative visualization generation in a time-lapse form). Two case scenarios are chosen as evaluation tasks, which the participants experimented and interacted independently. The first task asked participants to use our interface to visualize the 4D "chain" structure, and then tell a false link structure from a true one. The second task asked participants to turn the 4D-embedded torus into the more friendly doughnut-shape. These two case scenarios were used because we would like the participants to compare our diagram based interface and Zhang's earlier 4D visualization efforts using physically based approaches <ref type="bibr" target="#b32">[33]</ref>.</p><p>While carrying out the tasks the participants were encourage to "think aloud", and also explain what they are performing. Our main interest was to gain as much information as possible about how the visualization could support visual thinking when users are working on these mathematical reasoning tasks. After the study participants completed a subjective satisfaction questionnaire. The responses were given on a 5-point rating scale: Strongly unfavorable (1), Unfavorable <ref type="bibr" target="#b1">(2)</ref>, Unsure (3), Favorable (4), and Strongly favorable <ref type="bibr" target="#b4">(5)</ref>. The questionnaire covered the following statements:</p><p>• Overall impression: the overall impression of the mathematical visualization design and implementation.</p><p>• Efficiency for interaction: whether turning 4D manipulation tasks into a sequence of 2D interactions is effective and feasible at all.</p><p>• Learnability: ease of learning the visualization interface for a novice user.</p><p>• Benefit over single pointer interface: whether the multi-cursor design for such mathematical visualization task is superior to the classic single pointer interface.</p><p>• Benefit over pure physical simulation: whether our diagram-driven mathematical interface is superior to the previous physical simulation approaches.</p><p>• Mathematical correctness: whether participants noticed nontopology-preserving results during manipulations.</p><p>The overall assessment is that our visualization design and interface would be useful in visual mathematics and computer interface design. This is illustrated by the numerical ratings in the post-evaluation questionnaire (see <ref type="figure" target="#fig_0">Figure 12)</ref>. Responses for the six statements have an average score of 4.47, with each statement receiving a clearly favorable rating (Learnability statement received the highest rating of 4.91, Benefit over single pointer interface statement received the lowest rating of 3.83). In addition, most participants agreed that our 4D visualization paradigm provided a clearer interface to help understand how materials interact with each other in the 4-dimensional mathematical world. Several participants commented they liked the idea of controlling curves and strings in a computer interface supporting multi-cursor manipulation and multi-touch interaction, as is close to the real life experience of tying shoelaces and ropes with our manual dexterity.  Limitations. Although our 4D visualization interface creates effective results for our principal test cases, our current approach has the following limitations:</p><p>• We use the so-called Least-Square mesh for modeling and deforming 4D surfaces. Although this approach is very simple and can be efficiently solved by using a sparse set of control points with geometry, the results only look visually satisfactory when the starting surface is a nice membrane or thin-plate. A potential enhancement is to add constraint shape optimization in freeform modeling framework <ref type="bibr" target="#b6">[7]</ref>.</p><p>• Our computational method to choose longitudinal axis and place cutting planes is still experimental. We still rely on manual adjustment of the axis and planes, with domain knowledges. Furthermore, one family of 4D knots consists of knotted spheres that are formed by spinning a knotted line segment in the fourth dimension to sweep out the surface (an example is the 4D spun trefoil knot.) Our current algorithms for axis finding and cuttingplane placing do not work well for these 4D-spun entities; domain knowledge is again used when we manually choose knotted line segments as feature diagrams.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">PREVIOUS WORK ON VISUALIZING 3D CURVES AND 4D SURFACES</head><p>Visualizing curves and surfaces in space by drawing pictures started in the last century when mathematicians began to make special efforts to convey their ideas in a highly visual manner (see e.g., Hilbert <ref type="bibr" target="#b15">[16]</ref>, Francis <ref type="bibr" target="#b13">[14]</ref>, Carter <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10]</ref>). Mathematics books contain many hand-drawn illustrations and diagrams, as well as images of hand-built models executed long before the availability of computer graphics. The idea of making computer-generated mathematical pictures of curves and surfaces has developed in many directions with the recent advances in computer graphics technology. Wijk's SeifertView <ref type="bibr" target="#b30">[31]</ref> visualizes the Seifert surface of knots and links for users to understand their shapes and structures. Banchoff pioneers the use of 3D computer-based projections to study 4D objects <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3]</ref>. Carter and Brewer generate nicely rendered figures for many most complicated yet beautiful examples in modern topology, such as the depiction of a 2-dimensional sphere turned inside out and manifolds embedded and evolved in 4-dimensional space <ref type="bibr" target="#b10">[11]</ref>. Other representative efforts include a variety of ways to render topological surfaces embedded in 4-dimensional space (see, e.g., Banks <ref type="bibr" target="#b3">[4]</ref>, Roseman <ref type="bibr" target="#b25">[26]</ref>, Egli <ref type="bibr" target="#b12">[13]</ref>, Li <ref type="bibr" target="#b18">[19]</ref>, and Hanson <ref type="bibr" target="#b14">[15]</ref>).</p><p>Interactive computer graphics has also been introduced to help describe the evolution of mathematical curves and surfaces in space. Weeks' SnapPea software displays and manipulates the over/under crossings of mathematical knots <ref type="bibr" target="#b31">[32]</ref>. Scharein's Knotplot has been widely used to construct and deform mathematical knots physically in 3D <ref type="bibr" target="#b26">[27]</ref>. Zhang's KnotPad suggests a computer interface to deform mathematical knots only with Reidemeister moves <ref type="bibr" target="#b36">[37]</ref>. Others combine haptic interfaces and 3D graphics to simulate the dynamics of 3D curves and 4D knotted surfaces (see, e.g, Phillips <ref type="bibr" target="#b24">[25]</ref>, Spillmann <ref type="bibr" target="#b29">[30]</ref>, and Zhang <ref type="bibr" target="#b33">[34,</ref><ref type="bibr" target="#b32">33]</ref>).</p><p>While the existing efforts have produced many interesting visualizations, those generated mathematical figures and the proposed interaction paradigms by themselves are of limited value. For example, 3D figures of 4D mathematical entities often twist, turn, and fold back on themselves, creating many interesting properties behind the surface sheet <ref type="bibr" target="#b13">[14]</ref>. On one hand, such self-intersecting surfaces are extremely difficulty to draw and manipulate in a self-explanatory way; on the other hand, these "hidden" properties are the keys to understand, propose, and trace the evolution of a mathematical entity within the allowed deformation. No previous effort, to our knowledge, has drawn into focus the natural coupling of appropriate visual representations and rich interactions with these mathematical properties. What is really needed is an enhancement of the existing visualization paradigms that allows structure-aware exploration of the shape itself and intuition-building interactions built from established understandable pieces. Our work presented in this paper answers this question -"How can we code these "hidden" properties into the interactive visualization of mathematical curves and surfaces in space?"</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION AND FUTURE WORK</head><p>In this work, we adopt for the most part a visualization researcher's perspective on the techniques and prospects of interactive visualization in descriptive topology, emphasizing those areas of 3D curves and 4D surfaces where interactive paradigms can transform the way of studying and understanding the higher-dimensional complexity. Toward this goal, we have introduced a family of visualization and interaction methods to help understand the important features hidden behind the surface sheets in 4D entities' shadow images. Our interface allows intuitively controlling the representations of 4D-embedded surfaces in their 3D spaces, by decomposing the unfamiliar 4D manipulation task into a sequence of understandable and familiar steps. By combining graphics, graph visualization, sketching based interface, and multitouch interaction, we not only can make contributions to mathematical visualization by revealing the visual secrets in the classes of geometric and topological problems, but can potentially make a broader impact by addressing the research challenges involved in exploring the space where the flat digital world of surface computing meets the physical, spatially complex, 3D space in which we live. Starting from this basic framework, we plan to proceed to attack more 4D visualization problems such as the interactive manipulation of apparently knotted, but actually unknotted, spheres in 4D. Other planned future work will extend the range of objects for which we can support the interactive visualization of the smooth deformation between Boy and Roman surface, and the evolutions among various 3D figures of the Klein bottle that have given the same surface in 4-space.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Evolving 4D surfaces illustrated by sequences of hand-drawn diagrams</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Turning smoothly embedded curves into flat style diagrams with ternary depth values. (a) Examples of mathematical braids embedded in 3D, though there are obviously many other shapes that could be used. (b) Diagrams in 2-dimensional space, where each vertex's z−coordinates is mapped to a colorcoded balanced ternary value (blue is over, red is under, and grey is flat).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Figure 3illustrates the six elementary moves supported in our interface and highlights all possible distribution of shape handle vertices and depth handle vertices during the deformation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>(a) and type II − in Figure 3(c), whose vertices in C d (in blue or red) turn grey after deformation), and the moves that preserve the same crossing signs after deformation (e.g., type III in Figure 3(e) and Δ−move in Figure 3(f), whose vertices in C d are moved around and adjusted to the new locations); 2. moves that need to resolve crossings after deformation. For example, type I + in Figure 3(b) and type II + in Figure 3(d) are adding new vertices to C d after deformation. (We note that the illustrated type I + and type II + have appeared in only one of the two possible directions that our interface allows.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>(a) multi-touching knots (b) type I − (c) type III (d) type II − (e) typeI − (f) type II − (g) Δ−move Unknotting using a sequence of elementary string moves, supported with</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Turning smoothly embedded 4D surfaces into 3D figures with ternary 4Ddepth values. (a) A flattened 4D surface that appears just like a 3D surface. (b)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Applying elementary string evolutions on a 4D surface's boundary curves. First row: the evolutions in geometric space. (a 1 ) Type I move on boundary curve, which introduces a branch point on the annulus. (b 1 ) Type II move on boundary curves, generating a minimum or a maximum on the double point curve that appears on the immersed surfaces. (c 1 ) Type III move on the boundary curves, bringing in a triple point in the surfaces. (d 1 ) Δ−move applied on the boundary curves, altering the intersection line. Second row ((a 2 )� →(d 2 )): the corresponding evolutions of the crossing-maps in the evolving surface's parametric space.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>(a)-(b) Choosing the longitudinal axis and generating diagrams by placing cutting planes. (c)-(d) Snapping the resultant cross-sectional pieces to mesh vertices. In the example, the cutting plane introduces 5 intersection points (c) and thus five horizontal rows are added to the mesh structure to represent the cross-sectional piece using mesh vertices (d). (e): Evolving a 4D surface with a sequence of three interactive diagrams. The evolution of the feature diagram in the middle cutting plane is shared by both the upper half and the bottom half of a double decker set<ref type="bibr" target="#b9">[10]</ref>.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 .</head><label>8</label><figDesc>Screen images of our interactive 4D visualization interface. The illustrated evolutions that correspond to optimal or saddle critical points of the 1-dimensional double point set of the deformable surfaces. 1 � → 2 : a pair of double point arcs in which the top has a minimal point and the bottom has a maximal point are replaced by a pair of parallel double point arcs that bound two strips. 3 � → 4 : the removal of a closed loop of double points when two surface sheets are pull apart from each other. Both are found in Roseman's list of moves to knotted surfaces</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head></head><label></label><figDesc>(c). The evolutions illustrated involve a saddle and a bubble move applied on the double decker set. The evolution from Figure 8(c) 1 to Figure 8(c) 2 concerns a type II + move applied to the feature diagram in the middle cutting plane; on the immersed surfaces, this diagram manipulation replaces a pair of double point arcs in which the top has a minimal point and the bottom has a maximal point with a pair of parallel double point arcs that bound two strips. Figure 8(c) 3 � → 4 shows the removal of a closed loop of double points when two surface sheets are pulled apart from each other by a fairly familiar type II − move on the feature diagram in the middle cutting plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 9 .</head><label>9</label><figDesc>An interactive visualization implementation of Carter's pictorial analogues shown in Figure 1. Adding ((a)� →(b) or canceling ((b)� →(a) branch points through a saddle move, modeled and implemented by a type I move on the second crosssectional diagram.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 10 .</head><label>10</label><figDesc>Visualizing the 4D "chain" structure with lower dimensional diagrammetric analogues.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Fig. 12 .</head><label>12</label><figDesc>The quantitative results of the user study questionnaire. 5-point rating scale is used from Strongly unfavorable (1) through Unsure (3) to Strongly favorable<ref type="bibr" target="#b4">(5)</ref>.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Note that in the Reidemeister theorem, each move starts with handle vertices that are not on the crossing strands.<ref type="bibr" target="#b1">2</ref> The Reidemeister moves can be applied in two directions each, thus the three Reidemeister moves can be decomposed into six elementary moves in total.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">A crossing-map maps the surface intersection to the surface's parametric space.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Visual thinking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Arnheim</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969" />
			<publisher>Univ of California Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visualizing two-dimensional phenomena in fourdimensional space: A computer graphics approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Banchoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Statistical Image Processing and Computer Graphics</title>
		<editor>E. Wegman and D. Priest</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Marcel Dekker, Inc</publisher>
			<date type="published" when="1986" />
			<biblScope unit="page" from="187" to="202" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Beyond the third dimension: Geometry, computer graphics, and higher dimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">F</forename><surname>Banchoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Scientific American Library</title>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive display and manipulation of two-dimensional surfaces in four dimensional space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Interactive 3D Graphics</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="197" to="207" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Balanced n-ary designs: a combinatorial survey and some new results</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Billington</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ars Combin. A</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="37" to="72" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">View selection for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Bordoloi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization, 2005. VIS 05. IEEE</title>
		<imprint>
			<date type="published" when="2005-10" />
			<biblScope unit="page" from="487" to="494" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An intuitive framework for real-time freeform modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH 2004 Papers, SIGGRAPH &apos;04</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="630" to="634" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">How Surfaces Intersect in Space: An Introduction to</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Carter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Topology. K &amp; E Series on Knots and Everything. World Scientific</title>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">An Exursion in Diagrammatic Algebra: Turning a Sphere from Red to Blue. Series on Knots and Everything</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Carter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011" />
			<publisher>World Scientific Publishing Company Incorporated</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Knotted Surfaces and Their Diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Carter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Saito</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>American Mathematical Society</publisher>
		</imprint>
	</monogr>
	<note>Mathematical Surveys and Monographs</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Reidemeister/roseman-type moves to embedded foams in 4-dimensional space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Carter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An interface for sketching 3d curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Markosian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Zeleznik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hughes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Barzel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SI3D &apos;99: Proceedings of the 1999 symposium on Interactive 3D graphics</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="17" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Moving coordinate frames for representation and visualization in four dimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Egli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Petit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">F</forename><surname>Stewart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="905" to="919" />
			<date type="published" when="1996-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">A topological picturebook</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Francis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Multimodal exploration of the fourth dimension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Geometry and the Imagination</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hilbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cohn-Vossen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>AMS Chelsea Pub</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Exploded view diagrams of mathematical surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Karpenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Mitra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Agrawala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2010-11" />
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="1311" to="1318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Klimenkol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Nikitin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Göbel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Tramberend</surname></persName>
		</author>
		<title level="m">Visualization in topology: assembling the projective plane</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">4-dimensional geometry lens: A novel volumetric magnification approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qin</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1307.0147</idno>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Automated generation of interactive 3d exploded view diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Agrawala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Salesin</surname></persName>
		</author>
		<idno>101:1-101:7</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2008-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Evaluation of stereoscopy and lit shading for a counting task in knot visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">G</forename><surname>Lipari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">W</forename><surname>Borst</surname></persName>
		</author>
		<editor>H. R. Arabnia, editor, CGVR</editor>
		<imprint>
			<date type="published" when="2007" />
			<publisher>CSREA Press</publisher>
			<biblScope unit="page" from="23" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Knot Theory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Livingston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Carus Mathematical Monographs. Mathematical Association of America</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Efficient selection of representative views and navigation paths for volume data exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Moncls</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-P</forename><surname>Vzquez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Navazo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Medicine and Life Sciences II, Mathematics and Visualization</title>
		<editor>L. Linsen, H. Hagen, B. Hamann, and H.-C. Hege</editor>
		<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="133" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Fibermesh: designing freeform surfaces with 3d curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nealen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Igarashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Sorkine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2007-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Simulated knot tying</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Phillips</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Ladd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">E</forename><surname>Kavraki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICRA</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="841" to="846" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Twisting and turning in four dimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Roseman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
		<respStmt>
			<orgName>Department of Mathematics, University of Iowa, and the Geometry Center</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Interactive Topological Drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Scharein</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, The University of British Columbia</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A set of multi-touch graph interaction techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Schmidt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Nacenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Dachselt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM International Conference on Interactive Tabletops and Surfaces, ITS &apos;10</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="113" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Least-squares meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Sorkine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Shape Modeling International</title>
		<meeting>Shape Modeling International</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="191" to="199" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">An adaptive contact model for the robust simulation of knots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Spillmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Teschner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="497" to="506" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Visualization of the genus of knots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization, 2005. VIS 05. IEEE</title>
		<imprint>
			<date type="published" when="2005-10" />
			<biblScope unit="page" from="567" to="574" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Snappea: a computer program for creating and studying hyperbolic 3-manifolds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weeks</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Shadow-driven 4d haptic visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1688" to="1695" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Physically interacting with four dimensions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson ; Bebis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Boyle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Parvin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koracin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Remagnino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Nefian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gopi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Computer Science</title>
		<editor>J. Molineros, H. Theisel, and T. Malzbender</editor>
		<imprint>
			<biblScope unit="volume">4291</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="232" to="242" />
			<date type="published" when="2006" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Haptic exploration of mathematical knots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Thakur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISVC (1)</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="745" to="756" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">A pseudo-haptic knot diagram interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE</title>
		<meeting>SPIE</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="volume">7868</biblScope>
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Knotpad: Visualizing and exploring knot theory with fluid reidemeister moves. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Jing</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2051" to="2060" />
			<date type="published" when="2012-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Intuitive design exploration of constrained meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-C</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y.-L</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pottmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Mitra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advances in Architectural Geometry 2012</title>
		<editor>L. Hesselgren, S. Sharma, J. Wallner, N. Baldassini, P. Bompas, and J. Raynaud</editor>
		<meeting><address><addrLine>Vienna</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="305" to="318" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
