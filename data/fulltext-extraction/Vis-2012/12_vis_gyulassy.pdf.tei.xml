<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.1" ident="GROBID" when="2016-09-09T15:01+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Computing Morse-Smale Complexes with Accurate Geometry (a) (b) (c) (d) (e)</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Attila</forename>
								<surname>Gyulassy</surname>
								<roleName>Peer-Timo</roleName>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Valerio</forename>
								<surname>Bremer</surname>
								<roleName>Member, Ieee</roleName>
							</persName>
						</author>
						<author>
							<persName>
								<surname>Pascucci</surname>
								<roleName>Member, Ieee</roleName>
							</persName>
						</author>
						<title level="a" type="main">Computing Morse-Smale Complexes with Accurate Geometry (a) (b) (c) (d) (e)</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index Terms—Topology</term>
					<term>topological methods</term>
					<term>Morse-Smale complex</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Popular approaches for computing Morse-Smale complexes assign discrete gradient arrows in the direction of steepest descent, aligned with cells of the input mesh. Given a highly resolved sampling of two Gaussians, we show the results of the corresponding complex (a) which demonstrates severe artifacts in the positioning and direction of one-manifolds as can be seen from the level sets, which should be orthogonal. This paper introduces a randomized algorithm that better represents the gradient flow (b); and a deterministic variant that integrates probabilities to achieve near-optimal geometric reconstruction of the MS complex (c). We show the high-quality geometry, as well as the probability fields we compute for a two-dimensional jet (d); and a three-dimensional tetrahedrane molecule (e). Abstract—Topological techniques have proven highly successful in analyzing and visualizing scientific data. As a result, significant efforts have been made to compute structures like the Morse-Smale complex as robustly and efficiently as possible. However, the resulting algorithms, while topologically consistent, often produce incorrect connectivity as well as poor geometry. These problems may compromise or even invalidate any subsequent analysis. Moreover, such techniques may fail to improve even when the resolution of the domain mesh is increased, thus producing potentially incorrect results even for highly resolved functions. To address these problems we introduce two new algorithms: (i) a randomized algorithm to compute the discrete gradient of a scalar field that converges under refinement; and (ii) a deterministic variant which directly computes accurate geometry and thus correct connectivity of the MS complex. The first algorithm converges in the sense that on average it produces the correct result and its standard deviation approaches zero with increasing mesh resolution. The second algorithm uses two ordered traversals of the function to integrate the probabilities of the first to extract correct (near optimal) geometry and connectivity. We present an extensive empirical study using both synthetic and real-world data and demonstrates the advantages of our algorithms in comparison with several popular approaches.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p> Since the development of the first combinatorial algorithms to compute the Morse-Smale (MS) complex from sampled data <ref type="bibr" coords="1,241.83,437.85,9.71,8.02" target="#b0">[1,</ref><ref type="bibr" coords="1,253.19,437.85,6.72,8.02" target="#b2"> 3,</ref><ref type="bibr" coords="1,261.56,437.85,6.72,8.02" target="#b8"> 9,</ref><ref type="bibr" coords="1,269.93,437.85,11.95,8.02" target="#b16"> 17] </ref>it has become widely used in a large variety of applications <ref type="bibr" coords="1,251.27,447.31,9.71,8.02" target="#b4">[5,</ref><ref type="bibr" coords="1,262.47,447.31,6.72,8.02" target="#b6"> 7,</ref><ref type="bibr" coords="1,270.67,447.31,11.21,8.02" target="#b14"> 15,</ref><ref type="bibr" coords="1,31.50,456.77,11.21,8.02" target="#b18"> 19,</ref><ref type="bibr" coords="1,44.05,456.77,11.21,8.02" target="#b21"> 22,</ref><ref type="bibr" coords="1,56.61,456.77,10.65,8.02" target="#b24"> 25]</ref>. Since then most of the algorithmic development has been focused on robust computation, topological consistency, and computational efficiency. As a result there now exist comparatively simple, yet highly efficient, streaming and/or parallel algorithms to compute MS complexes from large data sets <ref type="bibr" coords="1,143.59,494.63,14.19,8.02" target="#b12">[13,</ref><ref type="bibr" coords="1,158.69,494.63,7.90,8.02" target="#b27">[28]</ref><ref type="bibr" coords="1,166.59,494.63,3.95,8.02" target="#b28">[29]</ref><ref type="bibr" coords="1,170.54,494.63,11.85,8.02" target="#b29">[30]</ref>. These algorithms perform very well as long as one is interested in structural topological attributes of the data such as how many critical points exist <ref type="bibr" coords="1,209.38,513.56,14.94,8.02" target="#b21">[22] </ref> or average connectivity of 1-manifold networks <ref type="bibr" coords="1,150.76,523.03,13.74,8.02" target="#b14">[15]</ref>. More recently researchers have also begun to analyze the geometric information of topological features . For example Bennett et al. <ref type="bibr" coords="1,156.84,541.96,10.45,8.02" target="#b1">[2] </ref>compute length scales of local contours and Kasten et al. <ref type="bibr" coords="1,127.65,551.42,14.94,8.02" target="#b18">[19] </ref>find and track two dimensional vortex structures as unstable manifolds in the acceleration magnitude. However , geometric fidelity so far has been mainly ignored when designing algorithms and, as shown in <ref type="figure" coords="1,133.24,579.81,19.67,8.02">Fig. 1</ref> , all existing techniques tend to produce poor geometry even for well-resolved functions. Furthermore, as discussed in more detail in Section 6, incorrect geometry often leads to incorrect connectivity thus casting doubts on subsequent analysis. @BULLET Attila Gyulassy is with the SCI Institute, University of Utah, E-mail: jediati@sci.utah.edu. @BULLET Peer-Timo Bremer is with Lawrence Livermore National Laboratory, E-mail: bremer5@llnl.gov. @BULLET Valerio Pascucci is with the SCI Institute, University of Utah, E-mail: Even more problematic is the fact that traditional approaches will not converge with increasing mesh resolution to the correct solution. In this context it is important to remember that there exists no MS complex for a sampled function since such functions are not " Morse- Smale. " Instead, all algorithms, discrete or otherwise, compute a quasi-MS complex as defined by Edelsbrunner et al. <ref type="bibr" coords="1,483.92,477.45,9.52,8.02" target="#b8">[9]</ref>. Intuitively, a quasi-MS complex is one that is consistent with the underlying theory, i.e., there exists a Morse function with this complex, yet not necessarily matching the flow behavior of the function sampled. In particular, Edelsbrunner et al. introduce a rarely used procedure call a Handle- Slide to correct the connectivity of a quasi-MS complex assuming the ability to perfectly compute the geometry of integral lines. By ignoring geometric fidelity most existing techniques may produce severely incorrect MS complexes making geometric quality a fundamental issue of correctness rather than only of visual improvement. The geometry of the MS complex is defined by integrating gradient lines of the underlying flow which current discrete techniques construct through a local, greedy optimization. However, the locally optimal choice may accumulate an arbitrarily large global error in the integration process and also make the algorithms highly dependent on local mesh orientation. Instead, we propose two new algorithms that both extract significantly better geometry than existing approaches and are guaranteed to converge to the correct geometry and connectivity under subdivision. The first algorithm uses the same algorithmic kernel as the best existing techniques but replaces the local optimization with a carefully designed random selection. It can easily be integrated into existing approaches, on average produces the correct complex, and its standard deviation from the mean converges to zero with increasing mesh size. The second algorithm exploits the fact that typically only small portions of the gradient field matter to the geometry, namely those areas containing cell boundaries. By integrating the local probabilities of the first algorithm we construct a deterministic variant of the algo-rithm that extracts near optimal cell boundaries through a simple region growing approach. Both algorithms are based on the common discrete framework and thus are combinatorial in nature, guaranteed to be topologically consistent, and applicable in any dimension. Our four main contributions are listed briefly below. 1. We introduce a randomized algorithm to compute MS complexes that significantly improves the geometric quality of the result when compared to existing techniques and converges with increasing mesh resolution. The algorithm is simple to implement, efficient, applicable in any dimension, and easily parallelized. 2. We introduce a second deterministic algorithm that directly extracts near optimal geometry without the need for refinement. 3. We provide an extensive empirical study comparing our approach with state of the art techniques using both synthetic and real-world data. 4. We provide a broad range of experiments demonstrating the superior quality and stability with respect to sampling density and mesh orientation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Despite the fact that the initial ideas were already discussed more than a century and a half ago <ref type="bibr" coords="2,109.53,271.55,11.26,8.02" target="#b5">[6,</ref><ref type="bibr" coords="2,120.79,271.55,11.26,8.02" target="#b25">26] </ref>the first practical algorithm to compute MS complexes of two dimensional, piecewise linear functions was introduced fairly recently <ref type="bibr" coords="2,108.34,290.48,9.52,8.02" target="#b8">[9]</ref>. In their seminal paper, Edelsbrunner et al. not only describe the first robust algorithm but also introduce the notion of a quasi-MS complex indicating a complex consistent with the theory yet not necessarily correct. Nevertheless, the algorithm relies on fairly complex data structures to maintain strict separation between one manifolds. Bremer et al. <ref type="bibr" coords="2,84.94,347.54,10.45,8.02" target="#b2">[3] </ref>propose a simpler version of the same idea by demonstrating that by ordering the computations appropriately much of the algorithmic complexity can be avoided. They also introduce the first multi-resolution encoding of the complex. The algorithm proposed in <ref type="bibr" coords="2,56.44,385.40,10.45,8.02" target="#b2">[3] </ref>is interesting in so far it has been the only one capable of producing correct geometry for piecewise linear functions by locally refining the input mesh. However, the 3D version of the same approach <ref type="bibr" coords="2,58.33,413.79,10.45,8.02" target="#b7">[8] </ref>has proven too complex to be practical and instead the focus has shifted to approaches based on discrete Morse theory, as discussed below. Since the initial research, related concepts have seen rapid adoption in a wide variety of scientific applications. Laney et al. <ref type="bibr" coords="2,243.31,451.93,14.94,8.02" target="#b21">[22] </ref>use MS complexes to analyze Rayleigh-Taylor instabilities, Gyulassy et al. <ref type="bibr" coords="2,34.46,470.86,14.94,8.02" target="#b14">[15] </ref>to study the structure of porous media, Bremer et al. <ref type="bibr" coords="2,252.20,470.86,10.45,8.02" target="#b3">[4] </ref>to analyze turbulent combustion simulations, and Kasten et al. <ref type="bibr" coords="2,247.60,480.32,14.94,8.02" target="#b18">[19] </ref>to study vortical structures, to name just a few. In a related field, Koch et al. <ref type="bibr" coords="2,33.24,499.25,14.94,8.02" target="#b20">[21] </ref>used a probablistic method for tractography in diffusion tensor images. This work introduced a randomized approach, taking discrete, axis-aligned steps in tracing out probable diffusion paths, with probabilities weighted by alignment with the local tensor. The most successful algorithms for computing Morse-Smale complexes for large, especially volumetric data rely on a discrete interpretation of Morse theory introduced by Forman <ref type="bibr" coords="2,186.81,556.32,13.74,8.02" target="#b10">[11]</ref>. In this framework, the key challenge is to compute a discrete gradient vector field from which the MS complex can then be extracted in a fairly straightforward manner. Existing techniques share many characteristics yet each computes a discrete gradient vector field in a unique manner. At the core of every algorithm is the choice of discrete gradient vector that best represents the flow behavior of the underlying function and in this aspect all approaches are remarkably similar. Every approach assigns weights to pairings based on the difference in function values of the cells to be paired. Here, we survey each technique highlighting the differences in order of computation and philosophy while pointing out the similarities of the results. Lewiner <ref type="bibr" coords="2,65.39,670.17,14.94,8.02">[23] </ref> presented the first technique for constructing a discrete gradient field that agrees with the flow behavior of a scalar function . In this approach, recently proved to be robust <ref type="bibr" coords="2,211.33,689.10,13.74,8.02" target="#b23">[24]</ref>, the discrete gradient field is represented by a hyperforest. At each iteration of the GREEDY algorithm, the potential pair with maximum weight is selected and paired if it does not create a cycle. In this approach, the weight of a pairing is computed as the difference in function values at the barycenters of the two cells. King et al. <ref type="bibr" coords="2,336.31,53.38,14.94,8.02" target="#b19">[20] </ref>introduced a technique to generate discrete Morse functions on simplicial complexes by modifying the Hasse diagram. The resulting diagram encodes both the discrete gradient arrows and the face relations needed to guarantee the construction of a discrete Morse function. At each step, the EXTRACTRAW algorithm first creates a directed edge in the diagram between a vertex and the edge in the direction of steepest descent, and then assigns pairs in the rest of the lower link. In effect, the " weight " of the initial vertex-edge pairing is given by the difference in function values of the two vertices incident on the edge. An alternative, that scales this weight by one over the length of the edge, is also mentioned. Gyulassy et al. <ref type="bibr" coords="2,353.38,157.93,14.94,8.02" target="#b12">[13] </ref>introduced an algorithm that assigns cells in order of increasing function value and increasing dimension, using the ordering to avoid acyclicity checks. In an extension to the algo- rithm <ref type="bibr" coords="2,306.51,186.32,13.74,8.02" target="#b11">[12]</ref> , simply homotopy expansions are performed to avoid spurious critical points. In this approach, the maximal weight pair is chosen for a cell, with weight being defined as the difference in value between the cell and the lowest vertex of its co-facet pair. This approach is used in <ref type="bibr" coords="2,294.34,224.18,14.94,8.02" target="#b17">[18] </ref>to design a blocked, parallel construction of MS complexes. Reininghaus et al. <ref type="bibr" coords="2,360.56,234.09,15.20,8.02" target="#b26">[27,</ref><ref type="bibr" coords="2,375.76,234.09,11.40,8.02" target="#b27">28] </ref> presented an approach for generating discrete vector fields at multiple scales by computing matchings of a cell graph using the Hungarian method. The mesh is represented using a Hasse diagram, where the weight of each edge is given by its alignment to the gradient direction. Each iteration of the MORSEMATCH- INGSEQUENCE algorithm adds to the current matching the alternating path of heaviest weight. The unpaired cells of the maximum weight matching for any scalar function occur at critical points of the function. Although this technique finds a maximal global weight, the global sum is composed of aggregating local weights, therefore, in effect, gradient pairs are assigned in the steepest direction. Robins et al. <ref type="bibr" coords="2,345.73,338.63,14.94,8.02" target="#b28">[29] </ref>present a technique that computes the discrete gradient on the lower star of a vertex. The PROCESSLOWERSTARS algorithm pairs each vertex with the edge in its lower star that touches the lowest vertex in the lower link. Subsequently, remaining cells in the lower star are paired using simple homotopy expansions, when possible, or assigning critical cells. Effectively, this approach maximizes the weight of a vertex-edge pairing, the weight being the difference in function values of the two vertices incident on the edge. The independent assignment of gradient arrows in this approach allows an embarrassingly parallel implementation. Shivashankar et al. <ref type="bibr" coords="2,370.11,433.72,14.94,8.02" target="#b29">[30] </ref>also present an embarrassingly parallel technique for computing the gradient. First, a discrete Morse function is computed in which every cell is critical. However, the function is defined such that the ASSIGNGRADIENT algorithm simply looks for the co-facet with lowest value to pair a cell. The recursively defined function ensures that a vertex will always be paired with the edge whose other endpoint has lowest value, i.e., in the direction of steepest descent. In summary, while all approaches use slightly different techniques they all assign arrows based on steepest-descent and thus produce very similar geometry. For example, two functions for which all tech- niques <ref type="bibr" coords="2,310.46,538.35,16.23,7.72" target="#b12">[13,</ref><ref type="bibr" coords="2,326.69,538.35,12.18,7.72" target="#b19">20,</ref><ref type="bibr" coords="2,338.87,538.35,12.18,7.72">23,</ref><ref type="bibr" coords="2,351.04,538.35,8.12,7.72" target="#b26">[27]</ref><ref type="bibr" coords="2,359.16,538.35,4.06,7.72" target="#b27">[28]</ref><ref type="bibr" coords="2,359.16,538.35,4.06,7.72" target="#b28">[29]</ref><ref type="bibr" coords="2,363.22,538.35,12.18,7.72" target="#b29">[30]</ref>produce identical discrete gradient fields are (1) distance from a point, f (x) = c||x − p||, and (2) any constant slope, f (x) = cx + b. The differences for more complex functions are minimal , and each technique follows the same pattern of greedy assignment . In the examples in this paper, we use the algorithm of Gyulassy et al. <ref type="bibr" coords="2,304.79,585.59,14.94,8.02" target="#b12">[13] </ref>as a representative of this class of approaches. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">BACKGROUND</head><p> Scalar valued volumetric data is most often available as discrete samples at the vertices of an underlying mesh. Morse theory has been wellstudied in the context of smooth scalar functions, and has been adapted to such discrete domains. We first present some basic definitions from smooth Morse theory, and then present the discrete analogue. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Morse Functions and the MS Complex</head><p>Let f be a real-valued smooth map f : M → R defined over a compact d-manifold M. A point p ∈ M is critical when |∇ f (p)| = 0, i.e. the gradient is zero, and is non-degenerate when its Hessian (matrix of second partial derivatives) is non-singular. The function f is a Morse function if all its critical points are non-degenerate and no two critical points have the same function value. In this case the Morse Lemma states that there exists local coordinates around p such that f has the following standard form: f p = ±x 2 1 ±x 2 2 · · ·±x 2 d . The number of minus signs in this equation gives the index of critical point p. In threedimensional functions, minima are index-0, 1-saddles are index-1, 2- saddles are index-2, and maxima are index-3. An integral line in f is a path in M whose tangent vector agrees with the gradient of f at each point along the path. The integral line passing through a point p is the solution to ∂ ∂t L(t) = ∇ f (L(t)), ∀t ∈ R, with initial value L(0) = p. Each integral line has an origin and destination at critical points of f . Ascending and descending manifolds are obtained as clusters of integral lines having common origin and destination respectively. The descending manifolds of f form a cell complex that partitions M; this partition is called the Morse complex. Similarly, the ascending manifolds also partition M in a cell complex. A Morse function f is a Morse-Smale function if ascending and descending manifolds of its critical points only intersect transversally. An index-i critical point has an i-dimensional descending manifold and a (d − i)-dimensional ascending manifold. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Discrete Morse Theory</head><p> Discrete Morse theory is at the heart of current techniques for efficiently computing Morse-Smale complexes. We provide a brief overview with basic definitions from Forman <ref type="bibr" coords="3,200.63,281.46,13.74,8.02" target="#b10">[11]</ref>, and we refer the reader to this introductory work for an intuitive description. A dcell is a topological space that is homeomorphic to a Euclidean d-ball B d = {x ∈ E d : |x| ≤ 1}. For cells α and β , α &lt; β means that α is a face of β and β is a co-face of α, i.e., the vertices of α are a proper subset of the vertices of β . If dim(α) = dim(β )−1, we say α is a facet of β , and β is a co-facet of α, and denote this α ˙ &lt;β . When necessary to clarify the discussion, we may denote the dimension of a d-cell α with α (d) . The star of a cell α, denoted St(α), is the set of co-faces of α. The lower star of α, denoted St − (α) is subset of St(α) where each element has lower function value. The link of α is the closure of the star, minus the star itself, Lk(α) = St(α) − St(α). Similarly, the lower link of α is Lk − (α) = St − (α) − St − (α) Let K be a regular complex that is a mesh representation of M. The barycenter B : K → M of a d-cell α ∈ K, B(α), is the average of its vertices. A function F : K → R that assigns scalar values to every cell of K is a discrete Morse function if for every α (d) ∈ K, its number of co-facets |{β (d+1) ˙ &gt;α|F(β ) ≤ F(α)}| ≤ 1, and its number of facets |{γ (d−1) ˙ &lt;α|F(γ) ≥ F(α)}| ≤ 1. A cell α (d) is critical if its number of co-facets |{β (d+1) ˙ &gt;α|F(β ) ≤ F(α)}| = 0 and its number of facets |{γ (d−1) ˙ &lt;α|F(γ) ≥ F(α)}| = 0, and has index equal d. A vector in the discrete sense is a pairing of cells α (d) , β (d+1) , where α ˙ &lt;β . We say that an arrow points from α (d) to β (d+1) . The direction of the arrow relates the combinatorial notion of the pairing to the geometric interpretation of the flow, and is given by B(β (d+1) ) − B(α (d) ). Intuitively, this vector simulates a direction of flow. A discrete vector field V on K is a collection of pairs α </p><formula>(d) i , β </formula><p>(d+1) i of cells of K such that each cell is in at most one pair of V . A critical cell is unpaired. Given a discrete vector field V on K, a V -path is a sequence of cells </p><formula>α (d) 0 , β (d+1) 0 , α (d) 1 , β (d+1) 1 , α (d) 2 , . . . , β (d+1) r , α (d) r+1 </formula><p>such that for each i = 0,..., r, the pair α </p><formula>(d) i , β (d+1) i ∈ V , and α (d) i and α (d) </formula><p>i+1 are both facets of β (d+1) i . A V -path is the discrete equivalent of a streamline in a smooth vector field. A discrete vector field in which all V -paths are monotonic in F and do not contain any loops is a discrete gradient field, denoted G, of a discrete Morse function. When constructing a discrete gradient field, we say that G is valid if these two conditions are met. The discrete equivalent of flow in a continuous gradient is taking a step in a V-path, i.e., we say that α (d) i+1 is one step from α </p><formula>(d) </formula><p>i . The critical cell α (d) r+1 at the end of a V-path is the destination of the V-path. We also say α (d) r+1 terminates the V-path. <ref type="figure" coords="3,310.54,137.84,3.32,7.37">2</ref>. For a function with a constant negative gradient (blue arrow), approaches using the locally steepest descent produce identical pairings at all vertices (left). The error of the V-path (red) from the integral line (blue) passing through a vertex a i accumulates with each step. In our randomized approach, a vertex can be paired with any vertical edge with some probability, producing a V-path with lower overall error (right). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Generic kernel for computing discrete gradient fields</head><p> The algorithms surveyed in Section 2, while quite varied in their specific approaches, roughly implement the same underlying functionality . The algorithmic kernel proceeds in the following four steps: 1. Pick a yet unassigned cell 2. Find its potential pairings and assign weights 3. Check for the validity of the pairing 4. Assign gradient arrow of highest weight or declare a critical cell </p><p> Each algorithm may perform these steps in unique ways. For example , Lewiner <ref type="bibr" coords="3,340.89,312.60,14.94,8.02">[23] </ref>picks the cell whose potential pairing has the highest weight, and uses a search structure on a graph representation of the gradient to check that the pairing not create a cycle. In contrast, Shivashankar et al. <ref type="bibr" coords="3,347.31,340.99,14.94,8.02" target="#b29">[30] </ref>first define a discrete Morse function for which the order in which cells are picked is irrelevant. Each cell has one unique possible pair derived directly from the function, and the validity of the pairing is guaranteed by the definition of the function. Gyulassy et al. <ref type="bibr" coords="3,304.82,378.85,14.94,8.02" target="#b12">[13] </ref>picks cells in order of increasing function value and dimension to guarantee that any pairing is valid. Robins et al. <ref type="bibr" coords="3,486.75,388.31,14.94,8.02" target="#b28">[29] </ref>selects any unassigned vertex, pairs it with the edge in the steepest downwards direction , and assigns the rest of the cells in the lower star of the vertex. Acyclicity is guaranteed by simulation of simplicity used in generating the lower link. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RANDOMIZED GRADIENT FIELDS</head><p>One of the most significant drawbacks of existing techniques is their poor geometric approximation of gradients which leads to incorrect connectivity. Due to their local, greedy assignment of gradient arrows they may produce arbitrary large errors even in regions of constant gradients . Consider the example shown in <ref type="figure" coords="3,437.74,496.37,20.21,8.02">Fig. 2</ref>: The (inverse) gradient of a function is indicated by the blue arrow and assumed to be constant for all cells. Current techniques will, at each vertex, determine the locally best pairing, causing all gradient arrows to be chosen horizontally . Thus, the discrete V-path passing through a vertex α i (shown in red) will diverge drastically from the integral line L in f . The fundamental problem is that while each arrow is chosen to minimize the local error, all arrows deviate in the same direction from −∇ f and collectively cause major artifacts. We propose a randomized approach that on average will produce significantly better results. Instead of choosing the locally optimal gradient arrow at α, we pick among all potential valid pairs with a certain probability designed such that the expected V-path will approximate the integral line. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Algorithm</head><p>To construct a randomized gradient field we use the standard discrete kernel discussed in Section 3.3 with a modified pairing. Similar to existing techniques, given an unassigned cell α we compute for each of its co-facets β i a weight for the potential pair α, β i . However, instead of picking the pair with maximal weight, we instead choose at random from the potential pairs, with probabilities assigned proportional to the weights. We pair each vertex with an edge probabilistically using these weights, and use the simple homotopy expansion described by Robins et al. <ref type="bibr" coords="3,314.34,726.96,14.94,8.02" target="#b28">[29] </ref>to complete the pairings for all other cells in the lower star of the vertex. <ref type="figure" coords="4,38.07,167.30,3.32,7.37">3</ref>. On the left, the original grid (black) is uniformly subdivided (gray lines) until the a neighborhood (orange outline) around α i can be modeled using a piecewise constant gradient. The right shows the lower right quadrant of N, the cells that have a non-zero probability of being in a V-path passing through α i . The green dots denote the potential exit point of P α from N, while the blue dot denotes the exit point of I α from N. </p><p>More specifically, let α be a 0-cell, and −∇ f (B(α)) be the negative gradient of f at B(α) the barycenter α. The weight of a potential pair α, β i is defined as the dot-product between the geometric realization of the pair B(β i ) − B(α) and the negative gradient −∇ f (B(α)). Furthermore , all negative weights -indicating invalid pairs -are clamped to zero: </p><formula>w(α, β i ) = max{(B(α) − B(β i )) · (−∇ f (B(α)), 0} (1) </formula><p>Using these weights, the probability of picking α, β i is defined as </p><formula>Pr(α, β i ) = w(α, β i )/ ∑ β j ∈St − (α) w(α, β j ). </formula><formula>(2) </formula><p>Note, that the probabilities are invariant under uniform scaling of both the mesh as well as the gradient magnitudes. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Geometric Convergence</head><p> One of the advantages of our approach is that under subdivision, Vpaths in the resulting gradient field will converge to integral lines in f . We say a V-path containing α converges to the integral line passing through B(α) when the Hausdorff distance between the V-path and integral line goes to zero. It is well known that with increasing mesh resolution a piecewise constant approximation of a gradient field will converge to the continuous gradient. In this section we will show that V-paths of the randomized field will converge to integral lines in a given piecewise constant gradient field and thus ultimately to any gradient field. In contrast, existing approaches do not faithfully reproduce even constant gradients, and thus will produce incorrect results even for well resolved functions. For simplicity let γ = <ref type="bibr" coords="4,112.01,525.98,9.45,7.96">[0,</ref><ref type="bibr" coords="4,122.45,526.13,6.97,8.02" target="#b0"> 1] </ref> 2 be the unit square with a constant </p><formula>dient ∇ f = (− f x , − f y ) </formula><p>and wlg. assume f y &gt; f x &gt; 0. Then the integral line passing through the origin is the line L : y = f y / f x x. Here we will show that if γ is subdivided into a regular n × n grid with gradient arrows assigned as discussed above then after n steps the expected deviation from L is 0 with a standard deviation that behaves like 1/ √ n. Given the assumptions above, when pairing a vertex, only potential pairs in positive x or positive y direction in γ have non-zero weights. All potential pairs in the positive x direction in γ will have a weight of </p><formula>w(α, β x ) = (1, 0) · ( f x , f y ) = f x and </formula><p>all potential pairs in the positive y direction have weight w(α, β y ) = f y . Therefore, the probability of pairing a vertex with its horizontal edge β x is: </p><formula>Pr(α, β x ) = f x f x + f y = f x + f y − f y f x + f y = 1 − Pr(α, β y ). </formula><p>Consider assigning gradient arrows starting at the origin one pair at a time. Each assignment extends the V-path containing the origin by one pair. Each time we step to the right with probability Pr(α, β x ) and step upwards with probability Pr(α, β y ). The number of horizontal steps in n trials follows a binomial distribution with parameters n and Pr(α, β x ). Therefore, the expected number of horizontal steps after n trials is nPr(α, β x ) and the expected number of vertical steps is n − nPr(α, β x ). Normalizing by the grid size, it follows that the expected endpoint of the V-path starting at the origin is Pr(α, β x ), Pr(α, β y ) , right on L. Furthermore, the standard deviation of the binomial distribution normalized by the grid size is Pr(α, β x )Pr(α, β y )/ √ n. The same argument holds for unit cubes of higher dimensions using multinomial distributions. Let the probabilities of pairing an edge in the direction x i be Pr(α, β x i ) then the expected endpoint of the V-path after n steps will be (Pr(α, β x 0 ),..., Pr(α, β x d )) with the standard deviation in dimension i given by (Pr(α, β x i )(1 − Pr(α, β x i ))) / √ n. This proves that with increasing grid resolution, V-paths of a randomized gradient field will converge to integral lines of a given piecewise constant gradient with standard deviation approaching zero. Given that any gradient field can be approximated up to an arbitrarily small error by a piecewise constant field, V-paths in a randomized gradient field will converge to integral lines of the continuous gradient under subdivision. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Randomized Gradient Fields of Sampled Functions</head><p>In practice, we are primarily dealing with sampled functions in which case we must estimate the gradient vector at vertices. There exist two options: First, one can use any of the standard gradient estimation techniques to compute a gradient per vertex and apply the algorithm as described above. Second, one may compute a modified version of the weight that admits gradient discontinuities on the boundary of cells. When using a per-vertex gradient computed with a gradient estimation technique, such as central differences, it is possible that the gradient arrow point in a direction that is locally " uphill " , e.g. in a direction of increasing function value. To avoid potential cycles the weight of each potential pair in the lower star will be set to zero, and the vertex will be marked critical. For simplicity and/or in a parallel environment it may be convenient to compute a gradient per highest dimensional cell (i.e. quads in 2D, voxels in 3D). In this case all lower dimensional cells have multiple gradient vectors assigned to them. In this case Equation 1 must be changed to use the appropriate gradient for each β i . Note that for regular grids the dot product of, for example, an edge in a two dimensional mesh with its two gradients on either side will naturally produce consistent values. In fact, since the probabilities are scale independent one can assume a regular grid with edges of length one in which case weights can be computed as the difference in function values at their endpoints. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">A DETERMINISTIC APPROACH FOR ACCURATE GEOMETRY</head><p>The algorithm discussed above will construct a gradient field that on average is correct and will converge with increasing sampling rates to the gradient of f . However, in practice subdivision is typically infeasible for larger data sets. Therefore, the true value of the randomized gradient field is that it is expected to produce a good approximation of f 's gradient even though the quality of any individual V-path cannot be guaranteed. This lack of guarantees is inconvenient especially for large data sets where the computation cannot be easily repeated but geometric quality is important. In this section we present an extension of randomize gradient fields that leads to a deterministic algorithm guaranteed to extract high quality geometry. The algorithm is based on the insight that the geometry of the MS complex depends only on a small fraction of V-paths, those on the boundaries between ascending and descending manifolds. In particular, one may rephrase the problem of constructing a high quality MS complex as constructing a discrete gradient in which arrows do not cross a-/descending manifold boundaries. To this end we integrate the probabilities defined in Section 4 in order of increasing function value to compute for each cell the probability of its V-path ending at a particular critical cell. We then assign gradient arrows to minimize the number of arrows crossing manifold boundaries. Assigning all gradient arrows of, for example, a two dimensional grid according to their minima distribution leaves exactly those cells unassigned that form the boundary of the ascending manifolds. These cells are filled in by assigning cells according to their saddle distributions. In a second pass we then construct the distributions according to maxima to compute the boundaries between descending manifolds but restrict the computation to be consistent with the first pass. <ref type="figure" coords="5,31.50,169.54,19.78,7.37">Fig. 4</ref> . This figure represents member distributions of cells as a piecharts , i.e., the area of a particular color indicates the probability that the cell will flow to the critical point represented by the color. On the left, there are two minima, a and b, colored blue, and red, respectively. The green arrows indicate the discrete gradient arrows that have non-zero probability of being picked in a randomized approach. At vertex c, all four directions have equal probability of being paired and therefore, the member distributions of the vertices at the other end of each arrow are averaged to get µ c . The image on the right illustrates a scenario where a V-path splits. In this case, µ f represents this split by assigning equal probability to e and d. The shaded area indicates cells that have zero probability of belonging to any V-path terminating at a critical 1-cell. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Computing Membership Distributions</head><p> We represent the probabilities of a (randomized) V-path ending at certain critical cells as a membership distribution µ α : K → R which for each d-cell α and all cells κ ∈ K defines the probability of the V-path containing α to end at κ. Membership distributions are defined recursively starting at critical cells. In the following, let β be a co-facet of α, and Lk − β </p><p>(α) denote the set of d-cells in the lower link of α that are also facets of β . Let Pr denote the selection probability function from Equation 2 in Section 4.1. Then: </p><formula>µ α (κ) =            </formula><p>0 if dim(α) = dim(κ) 1 if α is critical and κ = α 0 if α is critical and κ = α </p><formula>∑ β ∈St − (α) Pr(α, β ) ∑ ρ∈Lk − β (α) µ ρ (κ) |Lk − β (α)| otherwise. </formula><p> The first case reflects the fact that µ α will only be used to assign arrows between d-cells and (d + 1)-cells and thus we are only concerned with the index-d critical cells that can be reached from α. In the second case, α itself is critical, therefore it has probability one since all possible V-paths containing α must terminate there. Consequently, in the third case, if α is critical the probability of reaching any other cell is zero. The final case defines the membership distribution of a cell recursively as the weighted combination of the membership distributions of cells in its lower link. Intuitively, the probabilities indicate the likelihood that a V-path containing α, β exists which when multiplied with the probability that a V-path containing ρ (β 's other facet) ends at κ defines the probability that a path containing α reaches κ via α, β . Summing over all β 's, thus, computes the probability that any V-path containing α terminates at κ. Since the membership distribution of any cell depends only on membership distributions of cells with lower function value, these distributions can be computed efficiently by processing cells in order of increasing value. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Gradient Computation</head><p>The general framework we use for assigning discrete gradient arrows borrows heavily from published techniques <ref type="bibr" coords="5,187.78,660.71,11.73,8.02" target="#b11">[12]</ref><ref type="bibr" coords="5,199.51,660.71,3.91,8.02" target="#b12">[13]</ref><ref type="bibr" coords="5,203.42,660.71,11.73,8.02" target="#b13">[14]</ref><ref type="bibr" coords="5,215.15,660.71,11.73,8.02">23,</ref><ref type="bibr" coords="5,226.88,660.71,11.73,8.02" target="#b28">29]</ref> . For example , we extend a function sampled at vertices to values at every cell to assigning a cell the value of its highest vertex. We use the regiongrowing approach introduced by Gyulassy et al. <ref type="bibr" coords="5,203.74,689.10,14.94,8.02" target="#b12">[13] </ref>to assign discrete gradient arrows on the interior of an ascending manifold. We then perform simple homotopy expansions <ref type="bibr" coords="5,157.29,708.03,14.19,8.02" target="#b11">[12,</ref><ref type="bibr" coords="5,172.43,708.03,10.65,8.02" target="#b28"> 29]</ref> . Indeed, as with every previous technique, we pair a discrete gradient arrow in the direction that maximizes the weight of the pairing. However, the new weight function derived below assumes a particular order of assignment, which requires subtle variations of existing approaches. In our algorithm, we first compute the d-cell to (d + 1) cell arrows on the interior of an ascending (D − d)-manifold, where D denotes the maximum dimension of a cell in the mesh K. We then assign all possible discrete gradient arrows that preserve the simple homotopy type of the ascending manifolds. For volumetric data, we first assign all cells in the interior of ascending three-manifolds, then ascending two-manifolds, etc. until all cells are assigned. <ref type="figure" coords="5,465.41,121.12,21.06,8.02">Fig. 5</ref>illustrates these steps for a simple two-dimensional example. Below we report pseudocode for the corresponding algorithm. In the following, let K be the underlying mesh, F a function mapping a cell to a scalar value, and G the discrete gradient field. The gradient field is defined as a set of pairs of cells, where each pair represents an arrow pointing from the lower to the higher dimensional cell. We pair a cell with itself to denote criticality. We call cells assigned if they can be found in G. </p><formula>1: ComputeGradient(K, F) : 2: G = {} 3: for d ∈ [0, D] do 4: G = AssignArrows(d, K, F, G) 5: G = HomotopyExpand(K, F, G</formula><p>) 6: end for 7: return G The functions AssignArrows() and HomotopyExpand() simply add new pairs to the discrete gradient field G. Weight of a Pairing. In the process of computing the discrete gradient field, our technique assigns a weight to a potential pair α, β i based on (1) the known destinations (critical cells) of V-paths assigned so far in G, and (2) the membership distribution µ α of the lower dimensional cell. Let α be an unassigned d-cell, and C be the set of (d + 1)-cells it can be paired with. Formally, C is the set of unassigned cells in the lower star of α that are its co-facets, i.e., </p><formula>C = {St − (α i )| β ˙ &gt;α, β / ∈ G}. </formula><p>We call C candidates, since pairing α with any cell in C produces a valid gradient field. For each β i ∈ C, we assign a weight to the potential pair α, β i to minimize the number of arrows crossing manifold boundaries. When pairing α, each cell in the lower link γ i ∈ Lk − (α) has already been paired. In fact, γ i is part of V-paths that do not change below γ i with any subsequent gradient arrow assignments , and we can find their terminating critical cells. It is well-known that in dimensions higher than one, V-paths can split, for example, as illustrated in <ref type="figure" coords="5,341.04,446.15,20.73,8.02">Fig. 4</ref>(right). Therefore, let D γ i be the set of critical cells that terminate V-paths flowing through γ i . The weight of α, β i is defined as: </p><formula>w(α, β i ) = ∑ γ∈Lk − (α),γ ˙ &lt;β i ∑ κ∈D γ µ α (κ) (3) </formula><p>Intuitively, this weight represents the likelihood that α belongs to the same ascending manifolds as the facets of β . Therefore, higher weights indicate potential pairs that are less likely to cross boundaries of ascending manifolds. Just as the definition of the distributions, the weight depends on the fact that every d-cell in the sub-level complex of F(α) has been assigned. Therefore every cell in the lower link of α belongs to assigned V-paths terminating at critical cells in G. Processing cells in order of increasing function value as described below guarantees this property. Assigning Gradient Arrows. The following algorithm computes the d-cell to (d + 1)-cell gradient arrows on the interior of an ascending (D − d)-manifold. The unassigned d-cells in K are processed in order of increasing function value, with ties broken by simulation of simplic- ity <ref type="bibr" coords="5,305.89,647.92,13.74,8.02" target="#b9">[10]</ref>. By processing cells in sorted order, in effect, we are growing the spanning trees of d-cells of the sub-level complex of K. As each dcell is visited by the algorithm, its potential pairs, the candidates C are identified. If there are no candidates for pairing, the d-cell is assigned critical. Otherwise, the one maximizing the weight function given in <ref type="figure" coords="6,38.62,152.19,3.32,7.37">5</ref>. A discrete gradient field of a sampled function indicated in gray is computed using the algorithms of Section 5. From left to right: First, we pair vertices and edges according to the maximal weight, then pair edges and faces in a simple homotopy expansion. Second, we pair the remaining edges and cells according to their weight and faces and voxels (not shown) in the corresponding homotopy expansion. Finally, we pair faces and voxels by weight and mark all remaining unpaired voxels as critical. </p><formula>4: for α i ∈ K d do 5: C = {β ∈ St − (α i )| β ˙ &gt;α} 6: if C = / 0 then 7: G = G ∪ α i , α i 8: else 9: β j = argmax β i ∈C (w(α, β i )) 10: G = G ∪ α i , β j 11: </formula><p>end if 12: end for 13: return G The function argmax() simply returns the argument that maximizes its value, i.e., the (d + 1)-cell where the pair {α, β i } has highest weight. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Simple Homotopy Expansion Let </head><p>K n ⊆ K be the subcomplex of assigned cells of K after selecting n pairs. Assigning a gradient arrow adds exactly two cells to this subcomplex. An assignment of a gradient arrow is a simple homotopy expansion if K n is homotopic to K n+1 . In practice, a d-cell to (d + 1)-cell arrow can be inserted without changing the homotopy type of the subcomplex when (1) all faces of the d cell are assigned, and (2) the d-cell is the only unassigned face of the (d + 1)-cell. The only time we prohibit this expansion is when the arrow would point " uphill " , i.e., the value of the d + 1 cell is strictly larger than the value of the d cell in F. 1: HomotopyExpand(d, K, F, G) : 2: H = {α ∈ K| # unassigned facets in G is 1} 3: while H = / 0 do 4: </p><formula>α = PopFirst(H) 5: β = unassigned facet of α 6: if F(α) ≤ F(β ) then 7: G = G ∪ α, β 8: update(H) 9: </formula><p>end if 10: end while 11: return G When a gradient arrow α, β is assigned, the number of unassigned facets of all co-facets of α and β decreases, and update() inserts the co-facets having exactly one unassigned facet into H. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">A Two-Pass Approach</head><p>The algorithm described above only takes the geometric accuracy of ascending manifolds into account. To get both accurate ascending and descending manifolds, we use the result of the first pass to restrict a second pass. In the second pass, we repeat the algorithm on the complement of K using the negative of F with one change: We only consider candidates for pairing cells belonging to the interior of the same dimensional ascending manifold. <ref type="figure" coords="6,144.08,652.70,30.14,8.02">Figure 6</ref>illustrates this approach. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p> In this section we present experiments comparing the geometric quality of the MS complex computed using previous steepest-descent techniques , the new randomized approach, and the two-pass, deterministic variant. We compute and visualize the MS complex from a discrete gradient field using the techniques described by Gyulassy et al. <ref type="bibr" coords="6,255.70,726.96,13.74,8.02" target="#b15">[16]</ref>. For clarity we begin with simple two-dimensional examples. <ref type="figure" coords="6,251.09,736.42,21.79,8.02">Fig. 7</ref><ref type="figure" coords="6,285.12,306.89,18.58,7.37">Fig. 6</ref> . A first pass computes accurate geometry for the ascending manifolds (left). In the second pass (right), arrows in ascending 1-manifolds (pink lines) may only be paired with one another. In each image, the hazy cells indicate the maximum probability of a cell belonging to a particular manifold -the darker the color, the lower the probability. The boundaries between cells in our MS complex naturally occur where probability of membership is lowest. <ref type="figure" coords="6,285.12,671.52,19.70,7.37">Fig. 7</ref>. The top row, (a-c) show the function from <ref type="figure" coords="6,467.53,671.52,19.70,7.37">Fig. 1</ref>, up-sampled four times in each direction. Note that the steepest-descent construction in (a) does not improve with increased mesh resolution. We show five realizations of our randomized approach (b), and our nearoptimal approach (c). In (d-f) we show the same techniques applied to f (x, y) = arctan(−y/|x|) for r 1 &lt; ||(x, y)|| &lt; r 2 . In these examples, the smooth integral line starting at the saddle forms a circle. The same function is used sampled four times finer in each direction in (g-i). </p><formula>(a) (b) (c) (d) (e) (f) (g) (h) (i) </formula><formula>(a) </formula><p>(b) (c) <ref type="figure" coords="7,31.50,224.44,19.49,7.37">Fig. 8</ref>. These images illustrate the dependence of the steepest-descent construction (a) on the mesh orientation, and the resilience of the two proposed techniques (b, c). The same underlying function is re-sampled onto one grid oriented vertically, and another grid rotated 30 degrees from vertical. We overlay the complexes computed for each, aligning them with the orientation of the underlying function. Excluding boundary artifacts, the complexes of the locally maximizing approach (a) vary significantly, the randomized approach (b) displays better behavior, and the complexes of our two-pass approach (c) vary only by the width of a cell. </p><formula>(a) (b) (c) (d) (e) (f) </formula><p>Fig. 9. In (a-c), minima along two " valleys " and maxima along a " ridge " are separated by saddles. While the complex generated by the steepest descent approach (a) is consistent, it connects the saddles and extrema poorly. Our randomized approach performs better (b), and the two-pass approach (c) produces a very accurate solution. In (d-f) we show the resilience of our techniques to flat regions in the data. (d) The region growing variant of the steepest-descent algorithm described by Gyulassy et al. <ref type="bibr" coords="7,284.68,410.95,13.29,7.37" target="#b11">[12] </ref>provides a reasonable approximation to ascending 1-manifolds (pink lines), However, the descending lines simply follow the steepest-descent direction given by simulation of simplicity <ref type="bibr" coords="7,436.13,420.41,12.41,7.37" target="#b9">[10]</ref>. We apply the same order of assignment, but with our randomized kernel (b), resulting in a more intuitive traversal of flat regions. In the two-pass approach, distance (in the number of steps in a V-path) naturally factors into the weight function, steering the geometry of the complex perpendicularly away from the boundary of a flat region. and 1 show how each algorithm responds when the mesh is subdivided . We sample two smooth functions on a regular grid: The first is the sum of two Gaussians; The second is a function with semi-circular integral lines. In both cases existing approaches create severe artifacts in both direction and shape of the one-manifolds. Moreover, the artifacts are unaffected by the increase in resolution. The randomized algorithm, while producing somewhat wavy patterns, already significantly improves the geometry and converges to the correct solution with increasing mesh resolution. The two pass approach extracts the correct geometry up to the resolution of the mesh, and a higher resolution mesh unsurprisingly allows more accurate geometry. <ref type="figure" coords="7,41.46,580.33,21.08,8.02">Fig. 8</ref> shows the resilience of each algorithm to changes in the orientation of the underlying mesh. Here, an underlying function is sampled by two grids, rotated 30 degrees from one another. The computed complexes are overlaid, for each technique, for visual comparison . Again the steepest-descent assignment shows large variations and artifacts, while the randomized approach shows a good correspondence , and the two-pass algorithm extracts identical geometry to the extent possible. In this case, we connect saddles along a perturbed valley to maxima on a perturbed ridge, and saddles from the ridge to the minima. In this case we consider the topological information encoded by an arc of the MS complex to be correct when the critical points at the ends are connected by an integral line in the underlying function. An infinitesimal perturbation of the function can redirect integral lines, therefore any MS complex that is consistent is a valid output (a quasi-MS complex in the sense of <ref type="bibr" coords="7,105.07,736.42,9.41,8.02" target="#b8">[9]</ref>). However, the output ideally should be both consistent and correct for some smooth interpretation of the sampled function. In this sense, our randomized and two-pass techniques produce a far more correct complex. Imaged data is often captured with limited precision or quantized to reduce its size. This often leads to degenerate regions with zero gradients everywhere. Therefore, the behavior of algorithms in such " flat " regions is of significant interest. In <ref type="figure" coords="7,446.54,529.11,20.33,8.02" target="#fig_4">Fig. 9</ref>(d-f) we compare the results of our new algorithms against the best know previous technique of Gyulassy et al. <ref type="bibr" coords="7,382.14,548.04,13.74,8.02" target="#b13">[14]</ref>, where gradient arrows are assigned in a breadth-first order to route V-paths efficiently across flat regions. Finally, <ref type="figure" coords="7,334.46,567.72,26.27,8.02" target="#fig_5">Fig. 10</ref>compares our algorithms against steepest-descent techniques for two volumetric data sets. As before, the steepestdescent algorithm produces significant artifacts as exemplified by the shape of the one-manifolds for the tetrahedrane. Note that in the jet example, the mangled geometry causes entire Morse crystals to disappear leading to significant changes in the structure of the complex. Results were generated on a commodity laptop, with 4Gb main memory and 2.2GHz Intel processor. Our algorithms were implemented in C++. The running time and total memory used for each example is summarized in table 1. The table shows results for both a serial implementation of the randomized approach, as well as the deterministic algoirthm for computing accurate geometry. Storing the membership distributions was responsible for the large memory footprint of the latter approach. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION</head><p> Our results highlight the difficult cases for a local steepest-descent algorithm . In many cases, such an algorithm produces acceptable shows the integrated probability functions for this dataset. The bottom row (e-i) displays the dissipation elements in a cross-flow jet flame. Each element is defined by the boundary of an ascending 3-manifold on the interior of the flame, and the same filters are used to select from each complex computed using steepest-descent (f), randomized (g), and two-pass (h) gradient fields. Several of the ascending 3-manifolds in the complex computed using steepest-descent (f) are missing (arrow), possibly due to handle slides. (i) shows the integrated probabilities for our two-pass approach, with blue indicating low ascending manifold membership probability, and red indicating low descending manifold membership probability. <ref type="figure" coords="8,22.50,369.72,25.68,7.37" target="#tab_1">Table 1</ref>. Run time and maximum memory usage to construct the discrete gradient field using the randomized approach(section 4) and the deterministic one(section 5). The times reported for the randomized approach are for a single thread. sults. In particular, sharp features, such as sharp ridge and valley lines are typically well-represented by a steepest-descent algorithm. In these cases, our approaches perform just as well, since there tends to be little variation in the probable membership of a cell. In practice, we represent membership distributions as a sparse map, and compute them during the region-growing construction. In this case, only the membership distributions on the growing front of our region need to be available. When every d-dimensional neighbor of a d-cell has been assigned, its membership distribution can safely be discarded. In our implementation, the memory requirements of membership distributions is given by a constant times the number of cells crossed by the largest isosurface. The constant is bounded by the maximum number of critical d-cells α could flow to. In equation 3, the set D γ of critical d-cells that terminate the assigned V-paths containing a cell is also computed incrementally. When a gradient arrow is assigned into a pair α, β , D α it is simply the union of D γ for γ ˙ &lt;β . In practice, the running time of our algorithm is C 2 * n log n. The one case our two-pass algorithm does not handle correctly is the interior of a topological strangulation. The geometric accuracy of our approach depends on finding the boundary between distinct regions -in a strangulation, an a-/descending manifold borders itself. In this case, when each potential pairing has equal weight, we resort to steepest-descent. </p><formula>(a) (b) (c) (d) (e) (f) (g) (h) (i) </formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Randomized </head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0" coords="3,294.12,137.84,250.38,7.37;3,294.12,147.30,250.38,7.37;3,294.12,156.77,250.38,7.37;3,294.12,166.23,250.38,8.02;3,294.12,175.70,250.38,7.37;3,294.12,185.16,250.38,7.37"><head>Fig. </head><figDesc>Fig. 2. For a function with a constant negative gradient (blue arrow), approaches using the locally steepest descent produce identical pairings at all vertices (left). The error of the V-path (red) from the integral line (blue) passing through a vertex a i accumulates with each step. In our randomized approach, a vertex can be paired with any vertical edge with some probability, producing a V-path with lower overall error (right). </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="3,27.60,26.46,16.00,7.26;3,140.10,26.18,403.65,7.50"><head>2016 </head><figDesc>IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 18, NO. 12, DECEMBER 2012 </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="4,22.50,167.30,250.38,7.37;4,22.50,176.77,250.38,8.02;4,22.50,186.23,250.38,7.37;4,22.50,195.70,250.38,7.37;4,22.50,205.16,250.38,8.02;4,22.50,214.39,250.38,7.61;4,22.50,224.44,8.01,6.86"><head>Fig. </head><figDesc>Fig. 3. On the left, the original grid (black) is uniformly subdivided (gray lines) until the a neighborhood (orange outline) around α i can be modeled using a piecewise constant gradient. The right shows the lower right quadrant of N, the cells that have a non-zero probability of being in a V-path passing through α i . The green dots denote the potential exit point of P α from N, while the blue dot denotes the exit point of I α from N. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="6,22.50,152.19,513.00,7.37;6,22.50,161.66,513.00,7.37;6,22.50,171.12,513.00,7.37;6,22.50,180.59,272.15,7.37"><head>Fig. </head><figDesc>Fig. 5. A discrete gradient field of a sampled function indicated in gray is computed using the algorithms of Section 5. From left to right: First, we pair vertices and edges according to the maximal weight, then pair edges and faces in a simple homotopy expansion. Second, we pair the remaining edges and cells according to their weight and faces and voxels (not shown) in the corresponding homotopy expansion. Finally, we pair faces and voxels by weight and mark all remaining unpaired voxels as critical. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="7,41.46,660.71,240.42,8.02;7,31.50,670.17,250.38,8.02;7,31.50,679.63,250.38,8.02;7,31.50,689.10,250.38,8.02;7,31.50,698.56,250.38,8.02;7,31.50,708.03,250.38,8.02;7,31.50,717.49,250.38,8.02;7,31.50,726.96,250.38,8.02;7,31.50,736.42,250.38,8.02"><head>Fig. 9</head><figDesc>Fig. 9(a-c) compares the topological correctness of each technique. In this case, we connect saddles along a perturbed valley to maxima on a perturbed ridge, and saddles from the ridge to the minima. In this case we consider the topological information encoded by an arc of the MS complex to be correct when the critical points at the ends are connected by an integral line in the underlying function. An infinitesimal perturbation of the function can redirect integral lines, therefore any MS complex that is consistent is a valid output (a quasi-MS complex in the sense of [9]). However, the output ideally should be both </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="8,22.50,273.95,513.00,7.37;8,22.50,283.42,513.00,7.37;8,22.50,292.88,513.00,7.37;8,22.50,302.35,513.00,7.37;8,22.50,311.81,513.00,7.37;8,22.50,321.28,513.00,7.37;8,22.50,330.74,513.00,7.37;8,22.50,340.21,444.62,7.37"><head>Fig. 10. </head><figDesc>Fig. 10. We show results for two three dimensional datasets. The top row shows the ascending 2-manifolds, arcs, and nodes of the electron probability density function of a tetrahedrane(C4H4) molecule (a). (b) Uses the steepest-descent, (c) the randomized, and (d) the two-pass approach. Note the shape of the arcs, and the gradual decline of the surface of (d) with respect to (b)(circled). Figure 1(e) shows the integrated probability functions for this dataset. The bottom row (e-i) displays the dissipation elements in a cross-flow jet flame. Each element is defined by the boundary of an ascending 3-manifold on the interior of the flame, and the same filters are used to select from each complex computed using steepest-descent (f), randomized (g), and two-pass (h) gradient fields. Several of the ascending 3-manifolds in the complex computed using steepest-descent (f) are missing (arrow), possibly due to handle slides. (i) shows the integrated probabilities for our two-pass approach, with blue indicating low ascending manifold membership probability, and red indicating low descending manifold membership probability. </figDesc></figure>

			<note place="foot" n="8"> CONCLUSION AND FUTURE DIRECTIONS We have presented two new approaches for computing discrete gradient fields that better approximate the gradient flow a scalar function. Our first technique is simple and can be plugged in as-is to parallel computation of the MS complex. Our second technique provides accurate geometry, but at the cost of serial computation. As the MS complex is becoming more widely used in analysis, geometric guarantees become necessary. We will investigate techniques for providing numerical error estimates for analysis performed using the MS complex. The most significant current limitation is the heavier memory footprint of the two-pass approach. Although the two-pass algorithm computation is serial, there are several potential avenues for its parallelization. We are investigating a GPU implementation of the membership distribution computation, maintaining efficiency by only keeping the most probable elements of µ. We plan on addressing the memory limitation initially through a divide-and-conquer approach on a distributed memory system. Alternatively, the complex could be computed in parallel using any previous technique, with a multi-threaded approach applying the two-pass algorithm to &quot; fix &quot; the gradient on independent sub-regions delimited by the boundaries of existing ascending and descending manifolds.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS </head><p>This work is supported in part by NSF OCI-0906379, NSF OCI-0904631, DOE/NEUP 120341, DOE/MAPD DESC000192, DOE/LLNL B597476, DOE/Codesign P01180734, and DOE/SciDAC DESC0007446. </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct coords="9,49.76,71.74,232.12,7.13;9,49.76,80.74,232.12,7.13;9,49.76,89.73,33.87,7.13"  xml:id="b0">
	<analytic>
		<title level="a" type="main">Discrete Morse functions from lexicographic orders</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Babson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Hersh</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions of the American Mathematical Society</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">457</biblScope>
			<biblScope unit="page" from="509" to="534" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,98.72,232.12,7.13;9,49.76,107.71,232.12,7.13;9,49.76,116.70,232.12,7.13;9,49.76,125.69,81.25,7.13"  xml:id="b1">
	<analytic>
		<title level="a" type="main">Feature-based statistical analysis of combustion simulation data</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Bennett</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Krishnamurthy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Liu</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Grout</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Chen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="171822" to="1831" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,134.68,232.12,7.13;9,49.76,143.67,232.12,7.13;9,49.76,152.67,204.08,7.13"  xml:id="b2">
	<analytic>
		<title level="a" type="main">A topological hierarchy for functions on triangulated surfaces</title>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Edelsbrunner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="385" to="396" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,161.66,232.12,7.13;9,49.76,170.65,232.12,7.13;9,49.76,179.64,232.12,7.13;9,49.76,188.63,17.93,7.13"  xml:id="b3">
	<analytic>
		<title level="a" type="main">Analyzing and tracking burning structures in lean premixed hydrogen flames</title>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Weber</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Day</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Bell</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="248" to="260" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,197.62,232.12,7.13;9,49.76,206.61,232.12,7.13;9,49.76,215.60,232.12,7.13;9,49.76,224.60,124.52,7.13"  xml:id="b4">
	<analytic>
		<title level="a" type="main">Interactive exploration and analysis of large scale simulations using topology-based data segmentation</title>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Weber</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Tierny</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Day</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">B</forename>
				<surname>Bell</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="issue">99</biblScope>
			<biblScope unit="page">17</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,233.59,232.12,7.13;9,49.76,242.58,232.12,7.13;9,49.76,251.57,17.93,7.13"  xml:id="b5">
	<analytic>
		<title level="a" type="main">On contour and slope lines. The London</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Cayley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Edinburgh and Dublin Philosophical Magazine and Journal of Science</title>
		<imprint>
			<biblScope unit="volume">XVIII</biblScope>
			<biblScope unit="page" from="264" to="268" />
			<date type="published" when="1859" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,260.56,232.12,7.13;9,49.76,269.55,232.12,7.13;9,49.76,278.54,232.12,7.13;9,49.76,287.53,142.35,7.13"  xml:id="b6">
	<analytic>
		<title level="a" type="main">Molecular shape analysis based upon the morse-smale complex and the connolly function</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Cazals</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Chazal</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Lewiner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th Symposium on Computational Geometry, SCG &apos;03</title>
		<meeting>the 19th Symposium on Computational Geometry, SCG &apos;03<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="351" to="360" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,296.53,232.12,7.13;9,49.76,305.52,232.12,7.13;9,49.76,314.51,203.44,7.13"  xml:id="b7">
	<analytic>
		<title level="a" type="main">Morse-Smale complexes for piecewise linear 3-manifolds</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Edelsbrunner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Harer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Natarajan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th Symposium on Computational Geometry</title>
		<meeting>the 19th Symposium on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,323.50,232.12,7.13;9,49.76,332.49,232.12,7.13;9,49.76,341.48,112.02,7.13"  xml:id="b8">
	<analytic>
		<title level="a" type="main">Hierarchical Morse- Smale complexes for piecewise linear 2-manifolds</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Edelsbrunner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Harer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Zomorodian</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="87" to="107" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,350.47,232.12,7.13;9,49.76,359.46,232.12,7.13;9,49.76,368.46,136.11,7.13"  xml:id="b9">
	<analytic>
		<title level="a" type="main">Simulation of simplicity: A technique to cope with degenerate cases in geometric algorithms</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Edelsbrunner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">P</forename>
				<surname>Mücke</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="66" to="104" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,377.45,232.12,7.13;9,49.76,386.44,124.41,7.13"  xml:id="b10">
	<analytic>
		<title level="a" type="main">A user&apos;s guide to discrete Morse theory</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Forman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Séminare Lotharinen de Combinatore</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,395.43,232.12,7.13;9,49.76,404.42,232.12,7.13;9,49.76,413.41,40.35,7.13"  xml:id="b11">
	<monogr>
		<title level="m" type="main">Combinatorial Construction of Morse-Smale Complexes for Data Analysis and Visualization</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gyulassy</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<pubPlace>Davis</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,422.40,232.12,7.13;9,49.76,431.39,232.12,7.13;9,49.76,440.39,232.12,7.13;9,49.76,449.38,77.26,7.13"  xml:id="b12">
	<analytic>
		<title level="a" type="main">A practical approach to Morse-Smale complex computation: Scalability and generality</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gyulassy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1619" to="1626" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,458.37,232.12,7.13;9,49.76,467.36,232.12,7.13;9,49.76,476.43,232.12,6.86;9,49.76,485.34,215.26,7.13"  xml:id="b13">
	<analytic>
		<title level="a" type="main">Practical considerations in Morse-Smale complex computation</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gyulassy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Topological Methods in Data Analysis and Visualization: Theory, Algorithms, and Applications , Mathematics and Visualization</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="67" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,494.33,232.12,7.13;9,49.76,503.32,232.12,7.13;9,49.76,512.32,232.12,7.13;9,49.76,521.31,77.26,7.13"  xml:id="b14">
	<analytic>
		<title level="a" type="main">Topologically clean distance fields</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gyulassy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Duchaineau</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Natarajan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Bringa</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Higginbotham</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer Graphics and Visualization</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1432" to="1439" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,530.30,232.12,7.13;9,49.76,539.29,232.12,7.13;9,49.76,548.28,232.12,7.13;9,49.76,557.27,17.93,7.13"  xml:id="b15">
	<analytic>
		<title level="a" type="main">Direct feature visualization using Morse-Smale complexes</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gyulassy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Kotava</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Kim</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">D</forename>
				<surname>Hansen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Hagen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PrePrints)</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page">99</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,566.26,232.12,7.13;9,49.76,575.25,232.12,7.13;9,49.76,584.25,232.12,7.13;9,49.76,593.24,69.29,7.13"  xml:id="b16">
	<analytic>
		<title level="a" type="main">Topology-based simplification for feature extraction from 3D scalar fields</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gyulassy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Natarajan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Computer Graphics and Visualization</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="474" to="484" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,602.23,232.12,7.13;9,49.76,611.22,232.12,7.13;9,49.76,620.21,89.22,7.13"  xml:id="b17">
	<analytic>
		<title level="a" type="main">Characterizing the parallel computation of Morse-Smale complexes</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Gyulassy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Peterka</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Ross</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IPDPS &apos;12</title>
		<meeting>IPDPS &apos;12<address><addrLine>Shanghai, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,629.20,232.12,7.13;9,49.76,638.19,232.12,7.13;9,49.76,647.18,232.12,7.13;9,49.76,656.18,81.25,7.13"  xml:id="b18">
	<analytic>
		<title level="a" type="main">Two-dimensional time-dependent vortex regions based on the acceleration magnitude</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kasten</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Reininghaus</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Hotz</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H.-C</forename>
				<surname>Hege</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2080" to="2087" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,665.17,232.12,7.13;9,49.76,674.16,213.39,7.13"  xml:id="b19">
	<analytic>
		<title level="a" type="main">Generating discrete Morse functions from point data</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>King</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Knudson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Neza</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Experimental Mathematics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="435" to="444" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,683.15,232.12,7.13;9,49.76,692.14,232.12,7.13;9,49.76,701.13,127.65,7.13"  xml:id="b20">
	<analytic>
		<title level="a" type="main">An investigation of functional and anatomical connectivity using magnetic resonance imaging</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Koch</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<forename type="middle">G</forename>
				<surname>Norris</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Hund-Georgiadis</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">NeuroImage</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="241" to="250" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,49.76,710.12,232.12,7.13;9,49.76,719.11,232.12,7.13;9,49.76,728.11,232.12,7.13;9,49.76,737.10,77.26,7.13"  xml:id="b21">
	<analytic>
		<title level="a" type="main">Understanding the structure of the turbulent mixing layer in hydrodynamic instabilities</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Laney</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P.-T</forename>
				<surname>Bremer</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Mascarenhas</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Miller</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1052" to="1060" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,294.12,54.06,250.38,7.13;9,312.38,63.05,135.71,7.13"  xml:id="b22">
	<monogr>
		<title level="m" type="main">Constructing discrete Morse functions</title>
		<author>
			<persName>
				<forename type="first">]</forename>
				<forename type="middle">T</forename>
				<surname>Lewiner</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,312.38,72.04,232.12,7.13;9,312.38,81.03,229.32,7.13"  xml:id="b23">
	<analytic>
		<title level="a" type="main">Critical sets in discrete morse theories: relating forman and piecewise-linear approaches</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Lewiner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,312.38,90.02,232.12,7.13;9,312.38,99.02,232.12,7.13;9,312.38,108.01,232.12,7.13;9,312.38,117.00,33.87,7.13"  xml:id="b24">
	<analytic>
		<title level="a" type="main">Applications of forman&apos;s discrete morse theory to topology visualization and mesh compression</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Lewiner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Lopes</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Tavares</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="499" to="508" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,312.38,125.99,232.12,7.13;9,312.38,134.98,219.33,7.13"  xml:id="b25">
	<analytic>
		<title level="a" type="main">On hills and dales. The London</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">C</forename>
				<surname>Maxwell</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Edinburgh and Dublin Philosophical Magazine and Journal of Science</title>
		<imprint>
			<biblScope unit="volume">XL</biblScope>
			<biblScope unit="page" from="421" to="427" />
			<date type="published" when="1870" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,312.38,143.97,232.12,7.13;9,312.38,152.96,232.12,7.13;9,312.38,161.95,232.12,7.13;9,312.38,170.95,147.08,7.13"  xml:id="b26">
	<analytic>
		<title level="a" type="main">Combinatorial 2d vector field topology extraction and simplification</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Reininghaus</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Hotz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Topological Methods in Data Analysis and Visualization: Theory, Algorithms, and Applications, Mathematics and Visualization</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="103" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,312.38,179.94,232.12,7.13;9,312.38,188.93,232.12,7.13;9,312.38,197.92,67.97,7.13"  xml:id="b27">
	<analytic>
		<title level="a" type="main">Fast combinatorial vector field topology</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Reininghaus</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Lowen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Hotz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="1433" to="1443" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,312.38,206.91,232.12,7.13;9,312.38,215.90,232.12,7.13;9,312.38,224.89,232.12,7.13;9,312.38,233.88,37.86,7.13"  xml:id="b28">
	<analytic>
		<title level="a" type="main">Theory and algorithms for constructing discrete Morse complexes from grayscale digital images</title>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Robins</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Wood</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Sheppard</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1646" to="1658" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="9,312.38,242.88,232.12,7.13;9,312.38,251.87,232.12,7.13;9,312.38,260.86,132.38,7.13"  xml:id="b29">
	<analytic>
		<title level="a" type="main">Parallel computation of 2d Morse-Smale complexes</title>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Shivashankar</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Senthilnathan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Natarajan</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
	<note>to. appear</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
