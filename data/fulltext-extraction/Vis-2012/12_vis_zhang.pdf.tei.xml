<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.1" ident="GROBID" when="2016-09-09T15:03+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">KnotPad: Visualizing and Exploring Knot Theory with Fluid Reidemeister Moves</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Hui</forename>
								<surname>Zhang</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Jianguang</forename>
								<surname>Weng</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Lin</forename>
								<surname>Jing</surname>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Yiwen</forename>
								<surname>Zhong</surname>
							</persName>
						</author>
						<title level="a" type="main">KnotPad: Visualizing and Exploring Knot Theory with Fluid Reidemeister Moves</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>Index Terms—Knot Theory, Math Visualization</keywords>
			</textClass>
			<abstract>
				<p>(a) (b) Fig. 1. (a) The supported manipulations in KnotPad are based on the three types of Reidemeister moves. Our tool allows users to produce and trace equivalent knot diagrams through verifying and storying the mathematically valid moves. (b) Screen images of applying the Reidemeister moves to the mathematical link diagrams. Abstract—We present KnotPad, an interactive paper-like system for visualizing and exploring mathematical knots; we exploit topo-logical drawing and math-aware deformation methods in particular to enable and enrich our interactions with knot diagrams. Whereas most previous efforts typically employ physically based modeling to simulate the 3D dynamics of knots and ropes, our tool offers a Reidemeister move based interactive environment that is much closer to the topological problems being solved in knot theory, yet without interfering with the traditional advantages of paper-based analysis and manipulation of knot diagrams. Drawing knot diagrams with many crossings and producing their equivalent is quite challenging and error-prone. KnotPad can restrict user manipulations to the three types of Reidemeister moves, resulting in a more fluid yet mathematically correct user experience with knots. For our principal test case of mathematical knots, KnotPad permits us to draw and edit their diagrams empowered by a family of interactive techniques. Furthermore, we exploit supplementary interface elements to enrich the user experiences. For example, KnotPad allows one to pull and drag on knot diagrams to produce mathematically valid moves. Navigation enhancements in KnotPad provide still further improvement: by remembering and displaying the sequence of valid moves applied during the entire interaction, KnotPad allows a much cleaner exploratory interface for the user to analyze and study knot equivalence. All these methods combine to reveal the complex spatial relationships of knot diagrams with a mathematically true and rich user experience.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Mathematics and physics are two closely related academic disciplines <ref type="bibr" coords="1,31.50,604.53,13.74,8.20" target="#b9">[10]</ref> . For example, studying knot theory, namely the three types of demeister moves, lies at the crossroads of mathematics and physics. In knot theory, one considers two knots are the same if one can distort one knot into the other without breaking it, much as we physically play with a real knotted rope where one part is allowed to cross but not intersect with another. Such equivalence relation is mathematically generated on diagrams and related by a sequence of three Reidemeister moves <ref type="bibr" coords="1,319.78,653.08,13.75,8.20" target="#b11">[13]</ref>. As illustrated in <ref type="figure" coords="1,400.89,653.08,29.28,8.20">Figure 2</ref>, a Reidemeister move refers to one of three local moves on a knot diagram. Each move is performed on a local part of the diagram that is topologically identical to the original part of the diagram illustrated in the figure without changing the rest of the diagram. These three Reidemeister moves are representative and useful in doing combinatorial topology in mathematical knots and links. By applying the Reidemeister moves we can gain insights of the underlying knot topological structure by obtaining a continuous family of embeddings of circles in three-space from one knot to its equivalent. <ref type="figure" coords="2,22.50,209.87,19.21,7.67">Fig. 2</ref>. The Reidemeister moves. Each move operates on a small region of the diagram and is one of three types: (I) Twist and untwist in either direction; (II) Move one loop completely over another; (III) Move a string completely over or under a crossing. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>@BULLET Hui Zhang is with Pervasive Technology Institute at Indiana University</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Due </head><p> to the complexity of knot diagrams and the complex interactions required, it has been very challenging to design a successful interactive system for fluid entry and editing of knot diagrams with support for the Reidemeister moves. Building such an interface is very different from other conventional user interface design, and important unique features for this class of math visualization problems include: @BULLET Precise 3D depth is relatively unimportant. Different from many other conventional visualization systems where one typically has to switch to a set of views for precise depth control, when manipulating knot diagrams only the relative depth ordering (i.e., over/under-crossings) is of interest. For example, the type II Reidemeister move (see e.g., <ref type="figure" coords="2,176.39,374.21,29.29,8.20">Figure 2</ref>(II)) allows one to move one loop either completely over or under another. In such cases, the initial precise 3D depth of the two loops are unimportant as if they were totally flattened and the relative depth order can be created when they are slided through each other. Topological rules indeed allow us to generate such moves that are mathematically true but beyond simple geometric manipulations. @BULLET 3D continuous structure, 2 1 2 D representation, and 2D interaction . While mathematical knots are smooth curves embedded in 3D, classic " knot-crossing diagrams " are commonplace in textbooks. A knot diagram is a planar projection of the 3D knot together with some extra annotations to encode 3D structure (the " 2 1 2 D " method). Studying knot theory is concerned with applying connected Reidemeister moves (i.e., 2D interaction) to transform one knot diagram into another, in which the user usually favors constant visual connection with the diagrams throughout the entire interaction with step-by-step manipulations. @BULLET Non-strictly physical. Although manipulation of knot diagrams appears to be as much physical as that of real ropes in our everyday life. Tasks of applying types of Reidemeister moves to knot diagrams are indeed beyond 3D physics. For example, a twist/untwist Reidemeister move typically turns a segment in a knot diagram into a crossing without changing the rest of the diagram . Such a " move " is (usually) not length preserving (see <ref type="figure" coords="2,42.43,629.69,28.70,8.20">Figure 2</ref>(I)), which is beyond a 3D rope's physical dynamics but totally plausible in the mathematical world. @BULLET Error-prone interactions. Manipulating knot diagrams with the Reidemeister moves means a range of tedious and error prone interactions, very much like one manually performs steps in a derivation. Even a task of untangling a topologically unknotted curve might not be as easy as it sounds: the upper bound on the number of Reidemeister moves required to remove all the crossings from a knot diagram of n crossings proved to be 2 100,000,000,000×n <ref type="bibr" coords="2,106.69,726.37,9.52,8.20" target="#b8">[9]</ref> . Furthermore, when making a Reidemeister move to generate a new knot diagram with n crossings, there are 2 n distributions of markers over all crossings and one false marker of a crossing will result in a mathematically wrong move. An essential design issue is therefore to build an interactive, friendly, " error-aware " system: such a system should recognize and only allow mathematically valid moves being applied to knot diagrams. Our task in this paper is to present such a sketching based knot diagram interface where one can fully interact with 3D mathematical knots through step-by-step 2D Reidemeister moves. We first start from extending the familiar " knot drawing " idea to a pseudo-haptic topological drawing interface with which one can draw knot diagrams by taking advantage of a " physically " reactive mouse cursor. We then proceed to describe how the pseudo-haptic approach can be extended and used to edit the knot diagram by sketching the Reidemeister moves to obtain knot equivalence. Having established the main mechanisms and interaction paradigms, we proceed to an interactive software environment that is capable of manipulating knot diagrams by allowing sketching, rendering, editing, and polishing knot diagrams. We next discuss a family of user interface elements we implemented to improve user experiences including a 2 1 2 D rendering method with light and material that adds apparent 3D geometry, depth and shapes to the knot-crossing diagrams, a navigation interface that captures manipulation steps during the entire interaction, and a deformation based editing interface to simplify user input by allowing pulling and dragging on knot diagrams. We finally present a user experience study we conducted and our paper ends with a conclusion and a description of potential perspectives. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>We usually describe mathematical knots by drawing their projective images on flat 2D media such as a blackboard or a sheet of paper (see <ref type="figure" coords="2,285.12,369.19,28.84,8.20">Figure 4</ref>(a)(b)). The knot diagrams (see e.g., <ref type="figure" coords="2,446.29,369.19,28.98,8.20">Figure 4</ref>(a)) are regarded both as schematic pictures of the knots, and as plane graphs with extra structure at the nodes (indicating how one part of the knot cross over or under another by standard pictorial conventions). Diagrams of equivalent knots are connected by a sequence of the Reidemeister moves that happen under the planar projection of the movement taking one knot to another.  Due to the complexity of the Reidemeister moves, finding an available sequence of the Reidemeister moves between two equivalent (but with different appearances) knot diagrams is often fairly challenging. It can be more difficult to compare or deform between distinct presentations of two complex knots. When studying knot theory, one often has to use an eraser to cut and edit pieces of the curve many times to find the sequence of Reidemeister moves between two knot diagrams, and one typically finds it fairly difficult to remember the sequence of moves after manipulating complex knot diagrams with many tries. Another drawback of such hand-drawn diagrams is that once created on traditional 2D media they are nearly impossible to modify, and errorcheck is very challenging to perform on a large sequence of deforma- tions. The emergence of computer graphics and visualization techniques has sparked a number of interesting attempts to use interactive computer systems to help describe 3D curves and mathematical knots. For example, Scharein's Knotplot has been widely used to sketch mathematical knots (mainly done in a plane assisted by general 3D rotation) <ref type="bibr" coords="3,31.50,241.00,14.94,8.20" target="#b18">[20] </ref>, while Cohen et al. proposed to create and manipulate 3D curves by correlating the curve with its sketched shadow to compute the curve's 3D shape <ref type="bibr" coords="3,96.95,260.93,10.45,8.20" target="#b4">[5] </ref>. Wijk's SeifertView <ref type="bibr" coords="3,188.43,260.93,14.94,8.20" target="#b22">[24] </ref>visualizes the Seifert surface of knots and links for users to understand their shape and structure . Snibble et al. merge springs and constraints with the study of geometric characteristics relevant to knots (see, e.g., <ref type="bibr" coords="3,219.71,290.82,14.94,8.20" target="#b19">[21] </ref> ). Others exploit haptic interfaces to edit and simulate 3D knots and ropes (see, e.g, <ref type="bibr" coords="3,31.50,310.74,9.71,8.20" target="#b2">[3,</ref><ref type="bibr" coords="3,42.94,310.74,11.21,8.20" target="#b23"> 25,</ref><ref type="bibr" coords="3,55.87,310.74,11.21,8.20" target="#b15"> 17,</ref><ref type="bibr" coords="3,68.81,310.74,10.31,8.20" target="#b21"> 23]</ref>). Wu's MING <ref type="bibr" coords="3,134.44,310.74,14.94,8.20" target="#b26">[28] </ref>is a knot drawing and refinement tool that utilizes energy based minimization models. Zhang and Hanson suggested studying mathematical knots by making and exploring their shadow pictures using haptic interfaces. Their approach showcased how haptic and pseudo-haptic exploration of projected mathematical objects (i.e., 2D knot diagrams of 3D knots or 3D projective images of 4D knotted spheres) can support full-featured physical exploration of mathematical knots in the full dimensional space <ref type="bibr" coords="3,209.08,380.49,9.71,8.20" target="#b7">[8,</ref><ref type="bibr" coords="3,221.03,380.49,11.21,8.20" target="#b29"> 31,</ref><ref type="bibr" coords="3,234.47,380.49,11.21,8.20" target="#b30"> 32,</ref><ref type="bibr" coords="3,247.93,380.49,11.21,8.20" target="#b28"> 30,</ref><ref type="bibr" coords="3,261.38,380.49,10.64,8.20" target="#b31"> 33]</ref>. However, all these efforts are essentially focusing on visualizing the physical dynamics (or pseudo-dynamics) of 3D knots and ropes (or sometimes knotted spheres in higher dimensional space), which is barely helpful for diagrammatically drawing and studying knot theory , namely, the Reidemeister moves. Although some specific knot diagram editing and knot equivalence finding tasks can be illustrated with a physical simulation of 3D knot or rope, knot theory concerns itself with isotopy that preserves shape (e.g., an isotopy can deform a circle of radius one to a circle of radius two) and thus general Reidemeister moves (which are non-physical, local deformations) can not be generated with a 3D simulated rope on a computer screen or with a real knotted rope in one's hand. Therefore we have been motivated to develop such a math-aware interface where one can study knot theory by creating the knot diagrams , and applying step-by-step Reidemeister moves to gain insight into knot equivalence through the entire interaction, assisted by a family of computer based fluid user interface elements. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">USER INTERFACE OVERVIEW</head><p>From the user's point, KnotPad consists of a sketching area, where the user interactively draws the knot diagram with a " physically " reactive mouse cursor and the system automatically queries the user for an explicit choice of over/under-crossing to ensure no part of the curve runs into another <ref type="bibr" coords="3,96.46,625.58,14.94,8.20" target="#b31">[33] </ref>(see <ref type="figure" coords="3,131.61,625.58,29.57,8.20" target="#fig_3">Figure 3</ref>(a)). The user can push and pull part of the curve for further geometry control (in 2D), and toggle between classic knot-crossing diagram, Gauss diagram, and 2 1 2 D smooth knot rendering view. In addition, the user can freely select a local part of the knot diagram (see <ref type="figure" coords="3,125.33,666.60,30.12,8.20" target="#fig_3">Figure 3</ref>(b)) and propose the Reidemeister moves either by interactive drawing (see <ref type="figure" coords="3,185.61,676.56,30.29,8.20" target="#fig_3">Figure 3</ref>(c)) or by pulling and dragging on parts of the knot diagram (see <ref type="figure" coords="3,209.95,686.52,29.75,8.20" target="#fig_3">Figure 3</ref> (f)). Knot- Pad automatically performs the legality check of each proposed move by alerting the user when illegal editing attempts are recognized, and construct the new knot diagrams by restricting user manipulations to legal moves only. Hand-drawn curves can be jittery especially when one keeps replacing local parts of the diagrams with newly sketched components. To solve this problem, we supplement our system with a " rubbing " tool that allows users to smooth small regions of the target diagram for better-looking images (see <ref type="figure" coords="3,449.45,211.10,29.11,8.20" target="#fig_3">Figure 3</ref>(d)). KnotPad can recognize and then " remember " each valid move the user performs to connect one knot diagram to another, therefor one can take advantage of such a " memory " in our system to nagivate through the sequence of the Reidemeister moves generated from the interactions. The major contributions of this paper are summarized below: @BULLET First, this paper proposes a knot diagram interface that provides connected math-aware manipulation. This is the first paper that explores the use of step-by-step Reidemeister move interface and graph visualization to approach knot theory visualization in the closest way to the problems being solved. @BULLET Second, we propose a hybrid, novel interface with 2D visuals and layered 3D depth that still supports full 3D interaction. We showcase in this paper that providing users with 2D diagrammatic visuals with layered 3D depth still allows for a mathematically true and rich experience with the elegant but complex 3D knots. @BULLET Last, we investigate and evaluate a family of novel interaction methods for reducing interaction complexity and preventing cognitive disconnect during the entire interaction. Our user study results further demonstrate the efficacy and applicability of Knot- Pad system. </p><p> By combining graphics, graph visualization, sketching based interface , and pseudo-haptics <ref type="bibr" coords="3,383.37,477.07,14.20,8.20" target="#b18">[20,</ref><ref type="bibr" coords="3,399.33,477.07,6.72,8.20" target="#b4"> 5,</ref><ref type="bibr" coords="3,407.82,477.07,11.21,8.20" target="#b19"> 21,</ref><ref type="bibr" coords="3,420.79,477.07,6.73,8.20" target="#b7"> 8,</ref><ref type="bibr" coords="3,429.28,477.07,11.21,8.20" target="#b30"> 32,</ref><ref type="bibr" coords="3,442.26,477.07,11.21,8.20" target="#b28"> 30,</ref><ref type="bibr" coords="3,455.23,477.07,10.64,8.20" target="#b31"> 33]</ref>, we feel we can make non-trivial contribution not only to classes of geometric and topological problems with interactive math visualization approaches, but also to the larger community of researchers working with 2D interaction for the design of complex 3D shapes (e.g., working with two-dimensional floor plans to communicate 3D architectural design, and node-link diagram manipulation methods). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">IMPLEMENTATION METHODS</head><p> In this section, we describe the families of methods used to implement the interaction procedures and user interfaces. Our fundamental techniques are based on a wide variety of prior art, including haptic interfaces focusing on virtual realism (see, e.g., <ref type="bibr" coords="3,469.74,600.21,9.71,8.20" target="#b0">[1,</ref><ref type="bibr" coords="3,482.18,600.21,11.21,8.20" target="#b12"> 14,</ref><ref type="bibr" coords="3,496.12,600.21,10.31,8.20" target="#b13"> 15]</ref> ), pseudohaptic illusions generated by visual feedback (see, e.g., <ref type="bibr" coords="3,496.75,610.17,14.19,8.20">[12,</ref><ref type="bibr" coords="3,513.53,610.17,11.21,8.20" target="#b16"> 18,</ref><ref type="bibr" coords="3,527.32,610.17,10.31,8.20" target="#b31"> 33]</ref>), and other variants on sketching and exploration techniques <ref type="bibr" coords="3,507.69,620.14,14.19,8.20" target="#b19">[21,</ref><ref type="bibr" coords="3,524.23,620.14,6.72,8.20" target="#b1"> 2,</ref><ref type="bibr" coords="3,533.30,620.14,11.21,8.20" target="#b27"> 29,</ref><ref type="bibr" coords="3,294.12,630.10,11.21,8.20" target="#b10"> 11,</ref><ref type="bibr" coords="3,307.57,630.10,6.73,8.20" target="#b6"> 7,</ref><ref type="bibr" coords="3,316.54,630.10,11.21,8.20" target="#b14"> 16,</ref><ref type="bibr" coords="3,329.99,630.10,6.47,8.20" target="#b5"> 6]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Drawing Knot Diagrams</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Pseudo-haptic Knot Creation</head><p>We use the pseudo-force model <ref type="bibr" coords="3,409.93,676.56,14.94,8.20" target="#b31">[33] </ref>to simulate a " collision-sensing " cursor. The user sketches knot diagrams with such a " collisionsensing " cursor and relative depth order (i.e., local crossings) is handled as part of the sketching task. The main idea of our pseudo-haptic knot creation approach consists in modifying the motion of the cursor displayed on the drawing panel during the manipulation of the input device by the user. As shown in <ref type="figure" coords="4,78.63,166.19,28.80,8.20" target="#fig_5">Figure 5</ref>, the Display/Control ratio (D/C) of the mouse cursor is adjusted during users' interaction with the knot diagrams being sketched. When not touching an existing segment, the cursor will always be placed at the mouse position (see <ref type="figure" coords="4,182.76,196.08,29.12,8.20" target="#fig_5">Figure 5</ref>(a)). The system continually detects potential collisions and adjusts the mouse cursor to keep it from moving inside any existing curve segments (see <ref type="figure" coords="4,249.47,216.00,23.41,8.20;4,22.50,225.96,3.36,8.20" target="#fig_5">Figure  5</ref>(b)). While the actual position of the mouse device may be inside an existing segment, the displayed mouse cursor will always be kept outside to give an illusion of collision sensing unless an explicit overor-under choice is being made by the user (<ref type="figure" coords="4,182.36,255.85,28.62,8.20" target="#fig_5">Figure 5</ref>(c)). As the user moves the mouse device, the path of the displayed cursor is sampled to create the knot structure. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">Knot Representations</head><p> Although the sketching is done in 2D, all relative depth order information should be encoded, visually and structurally. The sketched knot diagram is represented with a " flat " data structure illustrated in <ref type="figure" coords="4,249.49,328.83,23.41,8.20;4,22.50,338.79,3.36,8.20" target="#fig_6">Figure  6</ref>. Each rigid segment of the diagram consists of two 2D end-points, and an array of local crossing points with their geometric information (again, in 2D) and corresponding crossing signs. Thus, 3D mathematical knots are now transformed into an array of sketched 2D segments and encodings of relative depth order.  Our interface is capable to render 2D knot diagram, 2D Gauss diagram , and 2 1 2 D knot representations during the entire interaction with knots, to provide a visual link of analyzing and manipulating knots of the three representations through the Reidemeister moves (see <ref type="figure" coords="4,249.49,564.86,23.41,8.20;4,22.50,574.83,3.24,8.20" target="#fig_9">Figure  7</ref>). <ref type="bibr" coords="4,60.58,686.52,13.44,8.20" target="#b11">[13]</ref> .) If we render a circle and mark our Gauss code sequence counter-clockwise around the circle, connecting the two occurrence of each label with an arrow pointing toward the under-crossing (the one with " u " ) and decorating each arrow with a " + " or " - " for the headness of each crossing, we obatain a different knot representation called " Gauss Diagram " . </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">1 D Smooth Knot.</head><p>This employs a depth-buffered rendering with some embellishments to emphasize relative depth order information . By creating 3D geometry for strands that cross under others, thickening the resultant curve, providing material features combined with lighting and shading methods, we can obtain the 2 1 2 D knot image . Even better improvement can be achieved by computing a Cubic Spline <ref type="bibr" coords="4,311.00,114.25,14.94,8.20" target="#b25">[27] </ref>between each of the nodes along the knotted curve (see, e.g., <ref type="figure" coords="4,302.56,124.21,29.01,8.20" target="#fig_9">Figure 7</ref>(b)).  Tasks of sketching knot diagrams and the three types of Reidemeister moves are mainly concerned with adding and removing crossings in a mathematically correct way. In our implementation, we design our system to ensure that no resultant crossings are closer than a threshold pixel distance d close so as to avoid visual and computational ambiguities (see e.g., <ref type="figure" coords="4,333.93,331.95,28.89,8.20" target="#fig_10">Figure 8</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head> 4.2 Interacting with Knot Diagrams through the Reidemeister moves </head><p>Deforming a knot diagram by sketching the Reidemeister moves is a quite different but important experience from knot creation. Reidemeister moves involve three different types of moves applied to knot diagrams. We can apply these moves to reduce the number of crossings and to transform a given knot diagram into a simpler yet equivalent knot diagram (see e.g., <ref type="figure" coords="4,385.76,523.93,29.08,8.20">Figure 9</ref>). One important point is that the Reidemeister moves are local. This means that if we have a large and complex diagram we can perform the Reidemeister moves on small pieces of the diagram with fairly light computation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Restricting user manipulations to the Reidemeister moves</head><p>Our interface allows replacing a local part of the knot diagram by proposing a finite sequence of the geometric Reidemeister moves on it (see e.g., <ref type="figure" coords="4,319.88,614.41,29.29,8.20" target="#fig_3">Figure 3</ref>(b)(<ref type="bibr" coords="4,362.56,614.41,6.69,8.20">c)</ref>). Before we detail the logical series of steps, several definitions are in order.  With these definitions, we are ready to outline our interaction scenario . At each interaction loop, the following sequence of events oc- cur: <ref type="figure" coords="5,31.50,410.67,19.26,7.67">Fig. 9</ref>. Sketching the Reidemeister moves. The topmost move is referred to as R 1 , the middle one as R 2 , and the bottommost as R 3 . For any one of these moves R, the move can be applied either from right to left or left to right (the dashed curve segments indicate the local parts of knot diagrams to be overdrawn with a Reidemeister move.) 1. Select a local component (K) of the knot diagram. Examples are an arc or a twist part of a knot diagram (see e.g., <ref type="figure" coords="5,236.38,489.68,28.71,8.20" target="#fig_3">Figure 3</ref>(b)). </p><p>2. K is a safe component. Only a safe component can be selected for further modifications. </p><p> 3. Proposing a new component (K ) by sketching the Reidemeister moves. Examples are attempts to add a twist component to the diagram to replace an existing arc component, or sketch an arc component to remove a twist component (see e.g., <ref type="figure" coords="5,258.50,565.86,23.41,8.20;5,51.43,575.82,3.28,8.20" target="#fig_3">Figure  3</ref>(c)). 4. Recognizing the Reidemeister moves and/or planar isotopy moves. The system only accepts a new component K proposed to replace the original component K, when K and K satisfy the following formulae: </p><p>(I.) K is a safe component. </p><formula>(II.) K ∪ K = O, i.e.</formula><p> , the original component and the proposed component should form a unlinked component O (also called " loop " or " simple closed curve " or " Jordan curve " ). </p><p> (III.) K → K is identified as one of the three types of the Reidemeister moves as follows: </p><p>(a.) K is a twist component and K is an arc component (see e.g., R le f t→right 1 in <ref type="figure" coords="5,178.92,736.34,28.97,8.20">Figure 9</ref>); </p><p>(b.) K is an arc component and K is a twist component (see e.g., R right→le f t 1 in <ref type="figure" coords="5,441.54,65.58,28.97,8.20">Figure 9</ref>); (c.) K is a safe over/under-component and K = 2 and K is an arc component (see e.g., R le f t→right 2 in <ref type="figure" coords="5,366.58,99.81,28.97,8.20">Figure 9</ref>); (d.) K is an arc component and K is a safe over/undercomponent and K = 2 (see e.g., R right→le f t 2 in <ref type="figure" coords="5,357.36,133.74,28.97,8.20">Figure 9</ref>); (e.) K and K are are both safe over-components and K = 2 and K = 2 (see e.g., R 3 in <ref type="figure" coords="5,497.89,155.40,28.97,8.20">Figure 9</ref>); </p><p>(f.) K and K are are both safe under-components and K = 2 and K = 2 (see e.g., R 3 in <ref type="figure" coords="5,497.89,177.05,28.89,8.20">Figure 9</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Legal moves are accepted and new diagrams are constructed.</head><p>With each legal move accepted, the system constructs the new knot diagram for users to interact with further. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Recognizing the Planar Isotopy Moves</head><p>Planar isotopy moves are a means of deformation when transforming knot diagrams. There are typically two types of planar isotopy moves: the detour move (see e.g., <ref type="figure" coords="5,388.22,266.85,34.57,8.20" target="#fig_12">Figure 10</ref>Without loss of generality, we also name the planar isotopy moves as R 0 and support it as an elementary valid move in our software envi- ronment. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Improving the Hand-drawn Diagrams</head><p>Our system provides a rubbing tool for smoothing knot diagrams. As the user proposes new components to replace local parts of a knot diagram, the curve gradually becomes less smooth (see. e.g., <ref type="figure" coords="5,521.10,537.09,23.41,8.20;5,294.12,547.05,3.28,8.20" target="#fig_3">Figure  3</ref>(c)). We allow users to rub a region of the diagram to smooth it using the Least-square mesh approach <ref type="bibr" coords="5,413.80,557.02,14.94,8.20" target="#b20">[22] </ref>(the connectivity pattern in our case is a set of curves instead of a 2D mesh, thus the Laplacian filtering presented here works on a 1D space.) The basic idea is to construct the Laplacian matrix <ref type="bibr" coords="5,484.78,586.91,14.94,8.20" target="#b20">[22] </ref>corresponding to the link-node structure and sets the corresponding control vertices: when a local region in the knot diagram is being rubbed, only a finite number of vertices being rubbed are going to be reconstructed while nodes in the rest of the diagram are used as control vertices. For example, <ref type="figure" coords="5,329.08,636.71,34.80,8.20" target="#fig_15">Figure 11</ref>shows a very simple graph (a trivial knot sample) where vertices v 2 and v 3 are being rubbed, and vertices v 1 , v 4 , v 5 are being used as control vertices. The system first constructs the Laplacian matrix L based on the connectivity meshes (in our case, linked nodes), and then adds the equations F of the control vertices to make the matrix full-rank (see e.g., <ref type="figure" coords="5,400.83,686.52,33.16,8.20" target="#fig_15">Figure 11</ref> , the last three rows of the matrix are the added equations of the control vertices). The following equation is then solved in least-square sense as proposed in <ref type="bibr" coords="5,519.29,706.45,14.94,8.20" target="#b20">[22] </ref>to smooth the graph: </p><formula>Ax = b, </formula><formula>(1) </formula><p>2055 ZHANG ET AL: KNOTPAD: VISUALIZING AND EXPLORING KNOT THEORY WITH FLUID REIDEMEISTER MOVES </p><formula>where A = L F </formula><p>, F i j = 1 j ∈ control vertices indices 0 otherwise </p><formula>b k = 0 k ≤ n x k−n n &lt; k ≤ (n + m) </formula><formula>Figure 3(d) </formula><p>shows the smoothed diagram after the user rubs regions of the knot diagram in <ref type="figure" coords="6,107.39,515.17,29.58,8.20" target="#fig_3">Figure 3</ref>(c). Note that a valid replacement of the original region and the reconstructed (i.e. smoothed) one must be identified as a R 0 move (see <ref type="figure" coords="6,124.83,535.10,32.75,8.20" target="#fig_12">Figure 10</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">More User Interface Elements</head><p>Our system encourages step-by-step Reidemeister moves, and thus can afford insight of knot equivalence through the entire connected interactions . However, applying sequences of Reidemeister moves is an error prone mental computation. Therefore, we choose to supplement our design with a set of useful user interface elements. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Informing the User of Invalid Moves. For </head><p> example, by alerting the user when a stuck component is being selected for editing (see e.g., <ref type="figure" coords="6,40.12,641.64,33.10,8.20" target="#fig_14">Figure 12</ref>(a)) or when a illegal move is being proposed (see e.g., <ref type="figure" coords="6,22.50,651.60,32.85,8.20" target="#fig_14">Figure 12</ref> (b)), our virtual paper-like system can obviate a range of tedious and error prone interactions with a better user experience than that of real pen-and-paper. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remembering the Valid Moves. As </head><p> an additional interface element , our system automatically saves the knot data and image frames of the knot diagrams when legal moves are applied. Therefore, the user can navigate through all generated knot images to examine the whole sequence of moves applied to connect one knot diagram into another (see <ref type="figure" coords="6,38.79,736.34,32.16,8.20" target="#fig_14">Figure 12</ref>(c)). Visualizing the Reidemeister moves is an exploring process, and it is often helpful to revert to a previous state. KnotPad can also allow the users to " undo " most recent moves by tracing back to one of the previous valid moves recorded. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Displaying the " diffs " Between </head><p>Moves. The user can select two subsequent snapshots to visually examine the type of move applied to connect them. KnotPad renders the " before " and " after " knot images in different colors and overlays them with transparency, therefore the local change between them can be visualized (see e.g., <ref type="figure" coords="6,512.10,323.33,23.41,8.20;6,285.12,333.30,7.04,8.20" target="#fig_14">Figure  12</ref>(d)). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">REDUCING INTERACTION COMPLEXITY</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">The Problem</head><p>The Reidemeister moves drawing interface in principle is sufficient to offer an interactive visualization that is diagrammatically true and closer to traditional paper based analysis and manipulation of knot diagrams, and thus closer to the mathematical problems we want to solve. However, in practice, many interesting knot diagram manipulation tasks involve drawing a large number of Reidemeister moves <ref type="bibr" coords="6,525.04,429.32,10.46,8.20" target="#b8">[9] </ref>and a complex interface requiring too much user input can reduce user effectiveness and significantly increase the learning curve.  Therefore we are motivated to enable the Reidemeister moves interface to be explored and examined in more fluid, and natural ways, yet still benefiting from the advantages of our paper-like interactive system . Making such an improvement is possible, for example, in many times we can propose the Reidemeister moves more easily by deforming a sub-region of the knot image. For example, we can first select a local part of the diagram then perform a " pull " , " drag " or " twist " to propose the changes. As shown in <ref type="figure" coords="6,410.74,716.41,33.35,8.20" target="#fig_3">Figure 13</ref>(a) one can first grab and then drag part of the physical rope over a loop or a crossing, to accomplish a type II or type III Reidemeister move. In <ref type="figure" coords="6,458.58,736.33,32.77,8.20" target="#fig_3">Figure 13</ref>(b), one can hold the ends of a rope with one hand and twist the ends of the formed loop with the other hand to make a knot, very much like the type I Reidemeister move. In this section, we first consider how Reidemeister moves can be explored to advantage with a deformation based editing interface yet still capable of restricting user manipulation to the Reidemeister moves. We then discuss how to further simplify user input by combining sets of sequential valid moves into frequently-used elementary moves. We also propose using Gauss code to group frames in the navigation interface to provide more identifiable and interesting manipulation path for visualization purpose. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">The Solution 5.2.1 Recognizing Dragging Gestures for Valid Moves</head><p>The basic idea is to supplement our interface design with a free-form editing interface with the support for the Reidemeister moves. When the user selects a local part of the diagram and drags one of the vertices to propose a move, the end-points and the manipulated vertex of the local part are set as the corresponding control vertices of the Laplacian matrix, and the local part is deformed in the least-square sense as proposed in Equation 1. Different from the drawing approach to support the Reidemeister moves where crossings were created and crossing signs were resolved one at a time separately, performing a free-form like move typically adds or removes a set of local crossing points along the whole local part to be overdrawn. Therefore there are two critical components in the implementation of our dragging interface to simplify user input: 1. Dragging a local part of the diagram for deformation. This is implemented again using the Least-square mesh approach <ref type="bibr" coords="7,264.48,333.98,13.94,8.20" target="#b20">[22]</ref>: the user selects a local part of the diagram (<ref type="figure" coords="7,221.51,343.94,29.81,8.20" target="#fig_3">Figure 3</ref>(e)) and then drag one of the vertices to propose the shape reconfiguration (<ref type="figure" coords="7,71.39,363.87,27.98,8.20" target="#fig_3">Figure 3</ref>(f)). 2. Resolving crossings to ensure valid moves. We need a solution to resolve the crossing signs to ensure mathematically valid moves being produced with each dragging motion. The three basic types of Reidemeister moves can be decomposed into ten elementary moves in our user interface with support for dragging gestures, and these moves fall into four categories: </p><p>(a) moves that have no crossings involved in either initial or goal state ( </p><formula>R l→r 0 , R r→l 0 ) </formula><p>(b) moves that have all crossings removed in the goal state </p><formula>(R r→l 1 , R r→l 2 ) </formula><p>(c) moves that keep the same crossing signs in both states </p><formula>(R l→r 3 , R r→l 3 ) </formula><p>(d) moves that start with no crossing in the initial state but end with crossings in the goal state (R l→r </p><formula>1 (+), R l→r 1 (−), R l→r 2 (+), R l→r 2 (−)) </formula><p> Elementary moves in categories (a) and (b) can basically be implemented using the free-form editing method without resolving the crossings, the user can grab and drag a control point on part of the knot diagram to perform the valid moves while our system recognizes the valid moves by ensuring there are no resultant crossings in the goal state. Moves in categories (c) can be implemented following the same fashion, except that our system remembers the crossing signs in the initial state and automatically assigns the same crossing signs in the goal state (see e.g., <ref type="figure" coords="7,521.10,304.87,23.41,8.20;7,314.05,314.84,7.10,8.20" target="#fig_18">Figure  14</ref>). Now the elementary moves in category (d) needs crossing signs handling, they start from the initial state with no crossings but produce a group of crossings (of the same sign) in the goal state. To resolve the crossings for these moves, we follow the same fashion of resolving crossing signs in our knot drawing interface: KnotPad will explicitly query the user for overor under-crossing choice when the curve is being dragged and resultant collisions are about to happen during the dragging mo- tion. (c): the resultant crossings on the deformed curve segment is determined by its original relative depth order to ensure a legal Reidemeister move being produced. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Combining Moves Into New Elementary Moves</head><p>It is also possible to simplify user input by combing some sequential elementary moves into a new one. For example, as we looked into the recorded user data (using KnotPad's navigation interface) from preliminary user studies, we observed a new " detour " move that should be also recognized and accepted as an elementary move in our interface, since it has been frequently used in various manipulation tasks. As illustrated in <ref type="figure" coords="7,341.04,645.65,32.92,8.20" target="#fig_5">Figure 15</ref>, this frequently-drawn detour move on a strand along the direction of the other strand crossing over it had to be decomposed into a sequence of two (or more) consecutive R 2 Reidemeister moves. To simplify user input, our interface chooses to recognize and support it as a variant of R 0 elementary move. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Grouping Frames in Navigation Interface</head><p> Many tasks of finding knot equivalence can generate very long sequences of valid moves. However when we navigate through recorded valid moves, we most likely are only interested in more identifiable 2057 ZHANG ET AL: KNOTPAD: VISUALIZING AND EXPLORING KNOT THEORY WITH FLUID REIDEMEISTER MOVES moves. There are many moves such as " detour " or " shortcut " that were only applied to decorate the knot diagram in preparation for a more identifiable move (e.g., see <ref type="figure" coords="8,126.99,206.17,34.51,8.20" target="#fig_6">Figure 16</ref>, although an R 0 changes the shape of the diagram, the Gauss code in the goal state is not changed from the initial state), therefore our navigation interface automatically groups these moves to shorten the navigation path in our user interface. <ref type="figure" coords="8,38.09,356.51,7.38,7.67" target="#fig_6">16</ref> . A " detour " move that was applied using a R 0 generates a " decorated " diagram with same Gauss code. We group frames produced by R 0 (or with same Gauss code as previous frame) </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">MORE SAMPLES</head><p>With the Reidemeister moves (R 1 , R 2 , R 3 ) and the planar isotopy moves (R 0 ), we can now deform one knot diagram to another by proposing the Reidemeister moves (and with only these moves). We can apply these moves to reduce the number of crossings and to transform a given knot diagram into a simpler (or sometimes more complex ) yet equivalent knot diagram. <ref type="figure" coords="8,168.08,485.60,32.95,8.20" target="#fig_9">Figure 17</ref> , a sequence of Reidemeister moves and planar isotopy moves are applied to the trefoil knot, which is believed to be the simplest knot. The resultant diagram in <ref type="figure" coords="8,32.98,515.49,34.68,8.20" target="#fig_9">Figure 17</ref>(k) contains a knot diagram very different than that of <ref type="figure" coords="8,22.50,525.45,33.37,8.20" target="#fig_9">Figure 17</ref>(a), yet these two diagrams represent equivalent knots: the trefoil knot-type. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Studying Knot Equivalence. In </head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Interacting with Mathematical Links. One </head><p>more important point is that the Reidemeister moves are local. This means that if we have a large knot or link diagram we can perform a single Reidemeister move on small pieces of the diagram, locally in each quality. <ref type="figure" coords="8,249.48,579.96,23.41,8.20;8,22.50,589.92,3.73,8.20">Figure  1</ref>(b) shows how one can apply a sequence of Reidemeister moves to a tangled link diagram. <ref type="figure" coords="8,236.46,614.55,32.69,8.20">Figure 19</ref>, a sequence of Reidemeister moves are applied to a group of strands each of which begins on a horizontal top and ends on the bottom with no intersections of each other (mathematically named braid diagram). These two figures show that we can use the Reidemeister moves to generate braid equivalence, and represent an interactive visual proof of the two elementary relations used in braid theory <ref type="bibr" coords="8,209.92,674.33,9.52,8.20" target="#b3">[4]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Interacting with Braid Diagrams. In Figure 18 and </head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">USER STUDY</head><p>Our user interface is based on OpenGL and Windows WinForm API. The software runs on a Dell PC desktop with 3.2GHz Intel Pentium 4 CPU. The control of mouse cursor motion is programmed using Win32 APIs. A study to gauge user experience with our user interface design <ref type="figure" coords="8,285.12,245.97,24.06,7.67" target="#fig_9">Fig. 17</ref>. A trefoil knot is turned into a " new " diagram through a sequence of Reidemeister moves. <ref type="figure" coords="8,285.12,384.44,22.98,7.67" target="#fig_10">Fig. 18</ref>. A braid diagram for σ i σ j , and after applying the R 0 we have a new braid diagram for σ i σ j . <ref type="figure" coords="8,285.12,575.57,23.46,7.67">Fig. 19</ref> . A braid diagram for σ i σ i+1 σ i , and after applying a sequence of Reidemeister moves, we have a new braid diagram for σ i+1 σ i σ i+1 . was conducted. A total of 18 participants were involved in this study: 16 males and 2 females, aged between 17 and 23. They were all undergraduate students having considerable familiarity with personal computers and sketching interface like Microsoft Paint software. Prior to this experimental study, none of them had used the system we developed in this work or had knowledge of knot theory. Before performing the required tasks, all of them were given a brief introduction of knot theory and the three types of Reidemeister moves, plus a demonstration of how each user interface element works in our system. We note that in order to evaluate the different aspects of our user interface , we divided the participants into two groups where the first group (Group I ) was demonstrated and allowed to perform the Reidemeister moves by just drawing the new topological situation and the second group (Group II ) was demonstrated how to perform the Reidemeister moves by both drawing and by dragging control points. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Tasks and Measures</head><p>The 18 participants were all asked to perform the following six tasks using our software: 5. Prove the following knot diagram is a trivial knot (now in <ref type="figure" coords="9,209.47,191.34,24.94,6.38" target="#fig_21">Figure 20</ref>(a)), and provide the sequence of Reidemeister moves needed; 6. Prove the following two knot diagrams are equivalent, and provide the sequence of Reidemeister moves needed (now in <ref type="figure" coords="9,154.29,226.16,25.43,6.38" target="#fig_21">Figure 20</ref>(b)).  We recorded and analyzed the task completion rate, average completion time, average number of moves used to complete the tasks, average duration for a valid move for participants in both groups. We also asked a graduate student from math department to give numeric ratings (5 point scale) to participants based on their final generated images' correctness and smoothness. Among the six listed operations, the majority found the first four tasks to be the easiest to perform as the knot structure is the simplest and the tasks only required a small number of Reidemeister moves. Most participants also found task 5 was to be intuitive because the knot structure is easy to comprehend. Task 6 was found to be the most difficult, with several participants (in both groups) having problems accomplishing the task within the given time. However, most of them were all able to move forward and finish the task given some hints and extra time. As shown in <ref type="figure" coords="9,87.05,506.70,24.89,8.20" target="#tab_1">Table 1</ref>, most participants in both groups found that the software allowed them to draw and deform various mathematical knot diagrams. However, Group II has been recorded significantly improved completion time (914.01 sec. compared to 1210.34 in Group I ) and reduced number of moves compared to those in Group I (33 compared to 43 in Group I ), which proved that by supporting dragging based moves our interface has been able to simplified user inputs. We also notice the average duration to complete a valid move is also reduced in Group II (15 sec. compared to 21 sec. in Group I ), which is also mainly due to Group II has been using dragging based moves to finish approximately 83% of the tasks. In addition, the generated knot images in Group II are relatively more smooth compared to those from Group I . </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Evaluation of KnotPad</head><p>Our general observation was that users had a positive experience using the system for sketching knot diagrams and deforming knot diagrams by applying the Reidemeister moves. With a little bit of instruction and practice, the participants were soon able to learn how to use the interface. After finishing the above experiments, the participants in both groups were required to rate the two systems on a scale of 1 to 5, where 1 means completely disappointed and 5 means completely satisfied. KnotPad receives an average score of 4.5 from Group II as compared to 4.1 from Group I .  The following is a summary of the common responses of the participants who used our system: @BULLET Features of the application participants liked most: the ability to alert users when illegal moves are being proposed, the free-form like deformation method to create Reidemeister moves, and the collision-sensing mouse cursor. @BULLET Suggestions and comments: several participants indicated they would like to see a touch-interface version of our software. One participant suggested knot manipulation can be further assisted with a multi-touch interface. Several participants mentioned that it is a well-designed virtual paper for studying knot theory. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Compare with Physically based 3D Knot Visualization</head><p>We also invited the participants in Group II to work with KnotPlot <ref type="bibr" coords="9,529.56,317.91,14.94,8.20" target="#b18">[20] </ref>and observe their performance on the same 6 tasks using the 3D knot visualization software. Without surprises, most participants can use KnotPlot to complete knot drawing tasks (basically done in a plane assisted by general 3D rotations). However, since the knot structure and dynamics are modeled as beads connected by the (linear) springs, general Reidemeister moves can not be easily accomplished with the 3D physically based interface. Although participants can try pulling and dragging on the 3D knots to verify some specific knot equivalence, none of them are able to provide the real topological path through the Reidemeister moves space. Just like KnotPlot, many previous knot visualization systems focus on simulating the 3D global physics of knots and ropes, thus when deforming the ropes (typically done by dragging a control point) all collisions must be detected and avoided at every interaction cycle, as each of them will affect the rope's global motion at the next cycle. On one hand, such a knot or rope is modeled as a large collection of small rigid pieces a 1 , a 2 , ..., a n , thus the collision detection and avoidance become computationally expensive (O(n 2 )) even with some improving approaches such as building a bounding-volume hierarchy (BVH) etc. On the other hand, these previous physically based modeling approaches to simulate 3D knot deformation are intended for global configuration (e.g., to simulate real-time knot tying), and are less close to knot theory which is mainly concerned with applying local mathematically valid moves, i.e., the step-by-step Reidemeister moves. Compared to all these previous efforts, KnotPad transforms knot deformation task into sequences of local moves (i.e., the Reidemeister moves). Collisions are handled when components are being sketched (locally). When the user is sketching, collisions are detected at every sketching cycle between the last rigid piece (a n−1 a n ) and the rest of the rigid pieces (a 1 a 2 , a 2 a 3 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>.. a n−2 a n−1 </head><p>) (or only a subset of the rest, if BVH approach used), it always takes Θ(n) at each cycle, which is optimal in the worst case. When the user finishes sketching , the system only needs to validate the proposed move at most O(1) (with the algorithm we proposed) in each quality. Therefore KnotPad has linear scalability and its performance is only limited to the total number of the rigid pieces, rather than the number of crossings or the number of distinguishable knots. KnotPad's scalability has allowed users to draw and manipulate various non-trivial mathematical knots, links, and braids. Users were able to sketch and manipulate a group of mathematical links of up to 90 crossings in total, formed by around eight hundred rigid pieces (we note that this performance was limited to the screen pixels available rather than KnotPad's scalability.) In topology, knot theory is the study of mathematical knots using the three types of Reidemeister moves. Based on a wide variety of prior art, we have developed an innovative paper-like topological drawing interface where one is allowed to study mathematical knots through applying step-by-step Reidemeister moves. We described how a " collision-sensing " cursor can be exploited to draw knot diagrams and propose valid moves on knot diagrams. Our paper detailed our interaction model for recognizing and supporting digital Reidemeister moves in our software environment. A family of user interface elements were introduced on how to polish knot diagrams, obviate error prone interactions, and to make Reidemeister moves based interaction more easily and friendly. The results of our user study show that the users were able to use our interface to create and deform sophisticated knot diagrams through the Reidemeister moves interface successfully. Our next step is to conduct another evaluation of our system with knot theory experts to identify, design, and implement more desired features to be supported in KnotPad. For example, our tool currently supports applying step-by-step Reidemeister moves to produce knot equivalence, and exploits visualization and visual cues to record and compare subsequent knot images produced from one user. We plan to work with mathematicians and knot theory experts to find the best way to support identifying and comparing knot diagrams (produced by different users) both computationally and visually (e.g., Jones Polynomial is already known to be an invariant of an oriented knot or link and can be computed to identify knots from a topology perspective <ref type="bibr" coords="10,249.25,307.46,13.44,8.20" target="#b24">[26]</ref>.) Starting from this basic framework, we also plan to extend the range of objects for which we can support to include more complex knots, links, and Riemann surfaces. The interaction paradigm presented in this paper has an 4D analogy: effective manipulation of 4D surfaces (e.g., 4D knotted sphere) could potentially be greatly assisted by a friendly interface supporting 4D Reidemeister moves <ref type="bibr" coords="10,215.79,367.91,13.75,8.20" target="#b17">[19]</ref> . We anticipate that a graphical user interface that supports step-by-step 4D Reidemeister moves can be used to simulate more complex and abstract math phenomena such as untying a 4D twist-spun trefoil knot. Other direction of future work includes migrating our software to touch environment (e.g., on iPad) to make interaction with knot diagrams more facile and satisfying by using abilities of the hand beyond simple position control. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="2,285.12,577.72,250.41,7.67"><head>Fig</head><figDesc>Fig. 4. (a) Knot diagrams up to 7 crossings. (b) Knots and the Reidemeister </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="3,31.50,151.10,513.04,7.67;3,31.50,160.80,432.25,6.71"><head>Fig. 3. </head><figDesc>Fig. 3. (a) Sketching a knot diagram. (b) Selecting a local part of the diagram. (c) Sketching and proposing the twist Reidemeister move to replace the selected part in (b). (d) Rubbing parts of the diagram to make the appearance more smooth. (e)-(f) Generating the knot's equivalent with a dragging gesture. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="4,22.50,125.40,250.41,7.67;4,22.50,135.10,113.12,6.71"><head>Fig. 5. </head><figDesc>Fig. 5. Sketching part of a knot diagram with a " physically " reactive mouse cursor. (a) D/C = 1. (b) D/C = 0. (c) D/C = 1. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6" coords="4,22.50,502.83,250.42,7.67;4,22.50,512.53,223.50,6.71"><head>Fig. 6. </head><figDesc>Fig. 6. 3D spatial information of mathematical knots is encoded at the crossings. Crossing points are stored in the data structure of each rigid component. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7" coords="4,31.46,590.41,241.41,8.63;4,22.50,600.79,250.39,8.20;4,22.50,610.75,250.40,8.20;4,22.50,620.71,221.67,8.20;4,31.46,636.29,241.43,8.63;4,22.50,646.67,250.40,8.20;4,22.50,656.64,250.40,8.20;4,22.50,666.60,250.39,8.20;4,22.50,676.56,250.37,8.20;4,22.50,686.52,34.97,8.20"><head></head><figDesc>2D Knot Diagram. The method of rendering a 2D knot diagram is to attach a thickened curve segment in background color behind each of the curve segments that are rendered in foreground color, so that a visual break is created on each side of an under-crossing [32]. 2D Gauss Diagram. The generated diagram, traverse direction, and the resolved crossings indicated by the virtual pen also provides an extended knot notation called Gauss codes (a Gauss code is a sequence of labels for the crossings with each label repeated twice to indicate a walk along the diagram from a given starting point and returning to that point </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9" coords="4,285.12,242.91,250.42,7.67;4,285.12,252.62,250.42,6.71;4,285.12,261.58,150.22,6.71"><head>Fig. 7. </head><figDesc>Fig. 7. (a) A sketched knot diagram (left) can be represented as Guass code and Guass diagram (right). (b) 2.5D rendering with light and material adds apparent 3D geometry, depth, and shape to the 2D image. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10" coords="4,285.12,413.16,250.43,7.67;4,285.12,422.87,115.81,6.71"><head>Fig. 8. </head><figDesc>Fig. 8. Crossing points with reasonable distances are favored, in order to avoid visual and computational ambiguities. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11" coords="5,424.99,264.98,119.50,10.08;5,294.12,275.98,250.37,10.08;5,294.12,287.81,217.75,8.21;5,303.58,304.68,99.34,8.20;5,300.59,322.08,104.75,8.20;5,297.61,337.19,229.17,11.66"><head></head><figDesc>le f t→right ) and the short cut move (see e.g., Figure 10 right→le f t ). Our system identifies a legal planar isotopy move when K and K satisfy the following formulae: (I.) K is an arc component; (II.) K is an arc component; (III.) K ∪ K = O, i.e., K and K form a unlinked component O. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12" coords="5,294.12,446.13,228.73,8.05"><head>Fig. 10. </head><figDesc>Fig. 10. R 0 : the detour move and short cut move (i.e., the planar isotopy). </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14" coords="6,22.50,190.48,513.04,7.67;6,22.50,200.18,513.04,6.71;6,22.50,209.16,513.03,6.71;6,22.50,218.12,225.38,6.71"><head>Fig. 12. </head><figDesc>Fig. 12. User interface elements in KnotPad. (a)-(b) KnotPad recognizes illegal attempts of knot manipulation: (a) A stuck component was wrongly selected for editing. (b) An illegal move was proposed. (c) KnotPad automatically saves each valid Reidemeister move being applied as images on disk for each project. The user can navigate or track back to a valid move by selecting a snapshot icon from the Carousel-like " history " navigation interface. (d) KnotPad highlights the " diffs " between subsequent " history " moves by overlaying knot images with transparency. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15" coords="6,22.50,377.79,250.42,7.67;6,22.50,387.49,96.00,6.71"><head>Fig. 11. </head><figDesc> Fig. 11. A sample graph of nodes in a knot diagram and its corresponding Laplacian matrix of the linked nodes. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17" coords="6,285.12,589.68,250.41,7.67;6,285.12,599.40,250.41,6.71;6,285.12,608.36,250.40,7.31;6,285.12,617.32,250.40,6.71;6,285.12,626.29,33.22,7.31"><head>Fig. 13. </head><figDesc>Fig. 13. (a) When demonstrating how to tie a Spanish Bowline (sometimes called the double loop knot) with a rope, one brings the two small loops up by pulling part of the loops, very much like performing an R 2 . (b) A rock climber makes a bight by simply twisting the rope, which seems very much like adding one knot crossing with an R 1 . </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18" coords="7,294.12,523.85,250.41,7.67"><head>Fig. 14. </head><figDesc> Fig. 14. Pulling a local part of the diagram to create the Reidemeister move. (</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19" coords="8,22.50,145.28,250.36,7.67;8,22.50,154.75,135.54,8.49"><head>Fig. 15. </head><figDesc>Fig. 15. A " detour " move that displaces the local crossing point. The move can be decomposed into two R 2 . </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20" coords="8,22.50,356.51,250.38,8.49;8,22.50,365.98,250.39,7.67;8,22.50,375.44,171.02,8.49"><head>Fig. </head><figDesc> Fig. 16. A " detour " move that was applied using a R 0 generates a " decorated " diagram with same Gauss code. We group frames produced by R 0 (or with same Gauss code as previous frame) </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21" coords="9,31.50,329.57,170.35,7.67"><head>Fig. 20. </head><figDesc>Fig. 20. Knot diagram samples used in our user study. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false" coords="9,39.72,122.42,212.26,59.97"><figDesc coords="9,39.72,122.42,99.38,8.20">1. Sketch a trefoil knot (i.e., knot 3</figDesc><table coords="9,41.21,123.80,210.76,58.59">1 ); 

2. Select part of knot 3 
1 and perform the first type of Reidemeister move; 

3. Select part of knot 3 
1 and perform the second type of Reidemeister move; 

4. Select part of knot 3 
1 and perform the third type of Reidemeister move; 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="true" coords="9,294.12,59.38,250.41,93.68"><figDesc coords="9,294.12,59.38,250.40,7.67;9,294.12,69.08,250.40,6.71;9,294.12,78.04,250.41,6.71;9,294.12,87.02,18.10,6.71">Table 1. Performance of KnotPad's features: completion rate, average time, number of moves undertaken, average time for accomplishing a valid move, percentage of dragging motion used, and numeric rating received for the accomplished tasks.</figDesc><table coords="9,300.49,95.87,228.32,57.19">Group 
CMPL. 
rate 

CMPL. 
time 
(sec.) 

of 

moves 

Duration 
per 
move 
(sec.) 

PCT. of 
drag-
ging 

Rating 

I 
0.88 
1210.34 
43 
21 
0% 
3.5 

II 
0.90 
914.01 
33 
15 
83% 
3.8 

</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="10,40.76,472.02,232.13,7.29;10,40.76,481.48,232.13,7.29;10,40.76,490.95,230.45,7.29"  xml:id="b0">
	<analytic>
		<title level="a" type="main">dAb: Interactive haptic painting with 3D virtual brushes</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<forename type="middle">V</forename>
				<surname>Baxter</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Scheib</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">C</forename>
				<surname>Lin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Proceedings</title>
		<editor>E. Fiume</editor>
		<imprint>
			<publisher>ACM SIGGRAPH, ACM</publisher>
			<biblScope unit="page" from="461" to="468" />
			<date type="published" when="2001" />
			<publisher>ACM SIGGRAPH, ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,500.42,232.15,7.29;10,40.76,509.88,232.14,7.29;10,40.76,519.35,80.30,7.29"  xml:id="b1">
	<monogr>
		<title level="m" type="main">Snap-Dragging: Interactive Geometric Design in Two and Three Dimensions</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<forename type="middle">A</forename>
				<surname>Bier</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1988-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,528.81,232.11,7.29;10,40.76,538.27,174.53,7.29"  xml:id="b2">
	<monogr>
		<title level="m" type="main">Real-time knot-tying simulation . The Visual Computer</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Brown</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">C</forename>
				<surname>Latombe</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Montgomery</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="165" to="179" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,547.74,232.14,7.29;10,40.76,557.20,65.54,7.29"  xml:id="b3">
	<monogr>
		<title level="m" type="main">An introduction to braid theory</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Chiodo</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,566.67,232.11,7.29;10,40.76,576.13,232.13,7.29;10,40.76,585.59,232.12,7.29;10,40.76,595.06,58.56,7.29"  xml:id="b4">
	<analytic>
		<title level="a" type="main">An interface for sketching 3d curves</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Cohen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Markosian</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Zeleznik</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Hughes</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Barzel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SI3D &apos;99: Proceedings of the 1999 symposium on Interactive 3D graphics</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="17" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,604.52,232.13,7.29;10,40.76,613.99,232.15,7.29;10,40.76,623.45,17.94,7.29"  xml:id="b5">
	<analytic>
		<title level="a" type="main">Steering behaviors for autonomous characters</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">W</forename>
				<surname>Reynolds</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1999 Game Developers Conference</title>
		<meeting>the 1999 Game Developers Conference</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="763" to="782" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,632.91,232.12,7.29;10,40.76,642.38,232.13,7.29;10,40.76,651.84,157.56,7.29"  xml:id="b6">
	<monogr>
		<title level="m" type="main">Intelligent support of interactive manual control: Design, implementation and evaluation of look-ahead haptic guidance</title>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Forsyth</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,661.31,232.15,7.29;10,40.76,670.78,211.15,7.29"  xml:id="b7">
	<analytic>
		<title level="a" type="main">Multimodal exploration of the fourth dimension</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">J</forename>
				<surname>Hanson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="263" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,680.23,232.15,7.29;10,40.76,689.70,57.35,7.29"  xml:id="b8">
	<monogr>
		<title level="m" type="main">The number of reidemeister moves needed for unknotting</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Hass</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">C</forename>
				<surname>Lagarias</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.75,699.17,232.14,7.29;10,40.76,708.63,147.84,7.29"  xml:id="b9">
	<analytic>
		<title level="a" type="main">The mathematics and physics of knots</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<forename type="middle">H</forename>
				<surname>Kauffman</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Reports on Progress in Physics</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2829" to="2857" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,718.10,232.14,7.29;10,40.76,727.56,232.13,7.20;10,40.76,737.02,90.93,7.29;10,285.12,53.99,250.39,7.29;10,303.38,63.45,232.14,7.29;10,303.38,72.91,146.26,7.29"  xml:id="b10">
	<analytic>
		<title level="a" type="main">Optics and haptics: The picture Pseudohaptic feedback: Can isometric input devices simulate force feedback? Virtual Reality Conference</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">M</forename>
				<surname>Kennedy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings on Multimodality of Human Communication: Theory, Problems and Applications</title>
		<editor>12] A. Lecuyer, S. Coquillart, A. Kheddar, P. Richard, and P. Coiffet</editor>
		<meeting>on Multimodality of Human Communication: Theory, Problems and Applications</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page">83</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,82.38,232.13,7.29;10,303.38,91.84,232.12,7.29;10,303.38,101.31,17.94,7.29"  xml:id="b11">
	<monogr>
		<title level="m" type="main">Knot Theory, volume 24 of The Carus Mathematical Monographs</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Livingston</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Mathematical Association of America</publisher>
			<pubPlace>Washington, U.S.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,110.78,232.13,7.29;10,303.38,120.23,232.14,7.29;10,303.38,129.70,54.47,7.29"  xml:id="b12">
	<monogr>
		<title level="m" type="main">Haptic Exploration of Unknown Objects</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">M</forename>
				<surname>Okamura</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="2000-06" />
			<pubPlace>California, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,139.16,232.13,7.29;10,303.38,148.63,232.15,7.29;10,303.38,158.10,114.93,7.29"  xml:id="b13">
	<analytic>
		<title level="a" type="main">Feature detection for haptic exploration with robotic fingers</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">M</forename>
				<surname>Okamura</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">R</forename>
				<surname>Cutkosky</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The International Journal of Robotics Research</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="925" to="938" />
			<date type="published" when="2001-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.37,167.56,232.11,7.29;10,303.38,177.02,189.43,7.29"  xml:id="b14">
	<analytic>
		<title level="a" type="main">Haptic rendering with predictive representation of local geometry</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">G</forename>
				<surname>Park</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Niemeyer</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HAPTICS</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="331" to="338" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,186.49,232.14,7.29;10,303.38,195.95,112.91,7.29"  xml:id="b15">
	<analytic>
		<title level="a" type="main">Simulated knot tying</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Phillips</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">M</forename>
				<surname>Ladd</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<forename type="middle">E</forename>
				<surname>Kavraki</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICRA</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="841" to="846" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,205.42,232.14,7.29;10,303.38,214.88,232.14,7.29;10,303.38,224.34,189.54,7.29"  xml:id="b16">
	<analytic>
		<title level="a" type="main">Hemp-hand-displacement-based pseudo-haptics: A study of a force field application and a behavioural analysis</title>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Pusch</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Martin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Coquillart</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Hum.-Comput. Stud</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="256" to="268" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,233.81,232.14,7.29;10,303.38,243.27,186.32,7.29"  xml:id="b17">
	<monogr>
		<title level="m" type="main">Reidemeister-type moves for surfaces in four-dimensional space</title>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Roseman</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="347" to="380" />
			<pubPlace>Warsaw</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,252.74,232.14,7.29;10,303.38,262.20,206.68,7.29"  xml:id="b18">
	<monogr>
		<title level="m" type="main">Interactive Topological Drawing</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">G</forename>
				<surname>Scharein</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,271.66,232.15,7.29;10,303.38,281.13,232.14,7.29;10,303.38,290.59,65.76,7.29"  xml:id="b19">
	<analytic>
		<title level="a" type="main">Springs and constraints for 3d drawing</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Snibbe</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Anderson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Verplank</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Third Phantom Users Group Workshop</title>
		<meeting>the Third Phantom Users Group Workshop<address><addrLine>Dedham, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,300.06,232.14,7.29;10,303.38,309.52,232.13,7.29;10,303.38,318.99,38.75,7.29"  xml:id="b20">
	<analytic>
		<title level="a" type="main">Least-squares meshes</title>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Sorkine</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Cohen-Or</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Shape Modeling International</title>
		<meeting>Shape Modeling International</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="191" to="199" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,328.45,232.14,7.29;10,303.38,337.91,214.48,7.29"  xml:id="b21">
	<analytic>
		<title level="a" type="main">An adaptive contact model for the robust simulation of knots</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Spillmann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Teschner</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="497" to="506" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.37,347.38,232.13,7.29;10,303.38,356.86,179.99,7.29"  xml:id="b22">
	<analytic>
		<title level="a" type="main">Visualization of the genus of knots</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Van Wijk</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Cohen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization , 2005. VIS 05. IEEE</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="567" to="574" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,366.32,232.14,7.29;10,303.38,375.79,232.13,7.29;10,303.38,385.25,232.11,7.20;10,303.38,394.71,232.13,7.29;10,303.38,404.18,133.42,7.29"  xml:id="b23">
	<analytic>
		<title level="a" type="main">Dynamic thread for real-time knot-tying</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Wang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Burdet</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Dhanik</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Poston</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">L</forename>
				<surname>Teo</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WHC &apos;05: Proceedings of the First Joint Eurohaptics Conference and Symposium on Haptic Interfaces for Virtual Environment and Teleoperator Systems</title>
		<meeting><address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="507" to="508" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,413.64,232.13,7.29;10,303.38,423.11,173.59,7.29"  xml:id="b24">
	<analytic>
		<title level="a" type="main">Quantum field theory and the jones polynomial</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Witten</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications in Mathematical Physics</title>
		<imprint>
			<biblScope unit="volume">121</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="351" to="399" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,432.57,232.13,7.29;10,303.38,442.03,231.77,7.29"  xml:id="b25">
	<analytic>
		<title level="a" type="main">Monotonic cubic spline interpolation</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Wolberg</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Alfy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics International, 1999. Proceedings</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="188" to="195" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,451.50,232.15,7.29;10,303.38,460.96,86.41,7.29"  xml:id="b26">
	<monogr>
		<title level="m" type="main">An md knot energy minimizing program</title>
		<author>
			<persName>
				<forename type="first">Y</forename>
				<surname>Wu</surname>
			</persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,470.43,232.15,7.29;10,303.38,479.89,232.14,7.29;10,303.38,489.36,232.13,7.29;10,303.38,498.82,148.59,7.29"  xml:id="b27">
	<analytic>
		<title level="a" type="main">Auditory, graphical and haptic contact cues for a reach, grasp, and place task in an augmented environment</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<forename type="middle">A</forename>
				<surname>Zahariev</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<forename type="middle">L</forename>
				<surname>Mackenzie</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of 5th Intl. Conf on Multimodal Interfaces (ICMI)</title>
		<meeting>. of 5th Intl. Conf on Multimodal Interfaces (ICMI)<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM ACM Press</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="273" to="276" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,508.28,232.13,7.29;10,303.38,517.75,232.15,7.29;10,303.38,527.22,37.87,7.29"  xml:id="b28">
	<analytic>
		<title level="a" type="main">Shadow-driven 4d haptic visualization</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Hanson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1688" to="1695" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.37,536.68,232.15,7.29;10,303.38,546.14,232.12,7.29;10,303.38,555.60,232.13,7.29;10,303.38,565.07,232.13,7.29;10,303.38,574.54,119.67,7.29"  xml:id="b29">
	<analytic>
		<title level="a" type="main">Physically interacting with four dimensions</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">J</forename>
				<surname>Hanson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Bebis</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Boyle</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Parvin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Koracin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Remagnino</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">V</forename>
				<surname>Nefian</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Gopi</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">V</forename>
				<surname>Pascucci</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Zara</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Computer Science</title>
		<editor>J. Molineros, H. Theisel, and T. Malzbender</editor>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">4291</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="232" to="242" />
			<date type="published" when="2006" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,584.00,232.14,7.29;10,303.38,593.46,232.13,7.29;10,303.38,602.92,232.11,7.29;10,303.38,612.39,232.12,7.29;10,303.38,621.86,191.63,7.29"  xml:id="b30">
	<analytic>
		<title level="a" type="main">Haptic exploration of mathematical knots</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Thakur</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">J</forename>
				<surname>Hanson</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Bebis</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">D</forename>
				<surname>Boyle</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Parvin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Koracin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">N</forename>
				<surname>Paragios</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<forename type="middle">F</forename>
				<surname>Syeda-Mahmood</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Ju</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Computer Science</title>
		<editor>Z. Liu, S. Coquillart, C. Cruz-Neira, T. Müller, and T. Malzbender</editor>
		<imprint>
			<publisher>Springer</publisher>
			<biblScope unit="volume">4841</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="745" to="756" />
			<date type="published" when="2007" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,631.32,232.15,7.29;10,303.38,640.79,218.27,7.29"  xml:id="b31">
	<analytic>
		<title level="a" type="main">A pseudo-haptic knot diagram interface</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Weng</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Hanson</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SPIE 7868 (VDA)</title>
		<meeting>. SPIE 7868 (VDA)</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
