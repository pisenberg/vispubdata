<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.1" ident="GROBID" when="2016-09-09T15:02+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Derived Metric Tensors for Flow Surface Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName>
								<forename type="first">Harald</forename>
								<surname>Obermaier</surname>
								<roleName>Member, Ieee</roleName>
							</persName>
						</author>
						<author>
							<persName>
								<forename type="first">Kenneth</forename>
								<forename type="middle">I</forename>
								<surname>Joy</surname>
								<roleName>Member, Ieee</roleName>
							</persName>
						</author>
						<title level="a" type="main">Derived Metric Tensors for Flow Surface Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Index Terms—Vector field</term>
					<term>integral surfaces</term>
					<term>metric tensor</term>
					<term>deformation</term>
					<term>velocity gradient</term>
					<term>continuum mechanics</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Visualizations of the inverse metric tensor field of a flow surface in surface parameter space (left and right) gives an overview of surface stretching. The middle image demonstrates different surface visualizations made possible by metric tensor field processing. Abstract—Integral flow surfaces constitute a widely used flow visualization tool due to their capability to convey important flow information such as fluid transport, mixing, and domain segmentation. Current flow surface rendering techniques limit their expres-siveness, however, by focusing virtually exclusively on displacement visualization, visually neglecting the more complex notion of deformation such as shearing and stretching that is central to the field of continuum mechanics. To incorporate this information into the flow surface visualization and analysis process, we derive a metric tensor field that encodes local surface deformations as induced by the velocity gradient of the underlying flow field. We demonstrate how properties of the resulting metric tensor field are capable of enhancing present surface visualization and generation methods and develop novel surface querying, sampling, and visualization techniques. The provided results show how this step towards unifying classic flow visualization and more advanced concepts from continuum mechanics enables more detailed and improved flow analysis.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Flow surfaces or integral surfaces are a well-established concept in three-dimensional vector field visualization and can be employed to visualize a number of significant flow properties. Their primary use is the display of fluid transport and, in the case of topology analysis, the illustration of separation and mixing behavior. Their expressiveness has made them a central flow analysis tool in a wide range of application areas such as airplane or automotive engineering and industrial mixing. In contrast to line or point-based techniques they are able to model continuously connected fluid components or material interfaces and are a suitable basis for advanced texturing, lighting, and animation techniques. While clearly conveying surface transformations that result in a change of shape, such as surface bending, current flow surface visualization techniques do not quantify or analyze planar (tangential) components of flow surface deformation such as stretching or shearing. The present paper aims at integrating this deformation into the surface visualization and analysis process to allow for a more complete flow analysis including investigation and display of physical phenomena like thinning of injected dye streams and flow divergence or convergence on surfaces. The importance of this data for flow analysis is emphasized by the growing interest in  time-varying fluid mixing in the context of Finite Time Lyapunov Exponent maps which measure and visualize exponential stretching of flow neighborhoods. Our technique makes use of higher order concepts from continuum mechanics and derives a metric tensor field describing local, tangential deformations of surface parameter space. We present two strategies for the derivation of these metric tensors. The first strategy is based on deformation gradient tensor accumulation along particle trajectories and independent of the resolution and characteristics of the surface discretization, requiring only minimal modifications to standard particle trajectory computations. The second approach relies directly on the presence of a surface mesh and computes deformation tensors by explicit mesh sampling. In both cases the resulting deformation is converted into a two-dimensional second-order tensor space to represent time-varying planar stretching and shearing. We develop novel visualization and analysis techniques for this metric tensor field based on glyph packing and tensor line integration to allow for enhanced surface visualization and interaction. These visualizations enable targeted analysis and querying/exploration of surface regions with specific deformation behavior, streamlining the flow analysis process and reducing visual data complexity. In summary the main contributions of this work are @BULLET Derivation of metric tensor fields for flow surfaces, @BULLET Metric tensor field visualization in surface parameter space, and @BULLET Enhanced flow surface visualization and querying. </p><p>The paper is structured as follows. We briefly summarize related work in Section 2, before establishing a mathematical background in the relevant areas of continuum mechanics in Section 3. The technical contributions of the paper are described in detail in sections 4 and 5. Results are presented in Section 6 before the paper is concluded with Section 7. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p> Our work unifies concepts from classic vector field visualization, velocity gradient analysis, and tensor field visualization. In the following we summarize the most closely related work from these fields. Flow surfaces came into focus of the visualization community in the early nineties, and have gained significantly in popularity since Hultquist <ref type="bibr" coords="2,59.99,144.30,14.94,8.97" target="#b16">[17] </ref>defined adaptive stream surfaces in steady settings. More recent research <ref type="bibr" coords="2,101.88,154.27,14.95,8.97" target="#b21">[22] </ref>has improved both the generation <ref type="bibr" coords="2,244.00,154.27,14.20,8.97" target="#b10">[11,</ref><ref type="bibr" coords="2,260.93,154.27,11.95,8.97" target="#b19"> 20] </ref>and visualization <ref type="bibr" coords="2,87.52,164.23,14.19,8.97" target="#b17">[18,</ref><ref type="bibr" coords="2,104.83,164.23,7.48,8.97" target="#b2"> 3] </ref>of integral surfaces in steady and unsteady vector fields. With the exception of work by Funck et al. <ref type="bibr" coords="2,237.08,174.19,13.75,8.97" target="#b27">[28]</ref>, who map triangle area to surface transparency, none of these approaches quantify or visualize surface stretching explicitly. A different look at flow visualization is given by work that studies higher order effects of flow fields in the form of mixing <ref type="bibr" coords="2,225.83,214.11,14.94,8.97" target="#b12">[13] </ref> and volume deformations <ref type="bibr" coords="2,91.18,224.07,14.94,8.97" target="#b22">[23] </ref>induced by the velocity gradient tensor. Our work in part makes use of the flow deformation definitions given in these papers. Closely related to this topic of flow deformations is the notion of Lagrangian flow analysis in Finite Time Lyapunov Exponent (FTLE) computation <ref type="bibr" coords="2,119.27,263.92,14.94,8.97" target="#b13">[14] </ref>and visualization <ref type="bibr" coords="2,202.08,263.92,14.19,8.97" target="#b24">[25,</ref><ref type="bibr" coords="2,219.31,263.92,11.22,8.97" target="#b9"> 10,</ref><ref type="bibr" coords="2,233.55,263.92,10.65,8.97" target="#b11"> 12]</ref>, where time-bound stretching of flow is investigated. Additionally, the local effects of the velocity gradient tensor on boundaries of the flow domain may be visualized as well <ref type="bibr" coords="2,117.02,293.81,14.19,8.97" target="#b28">[29,</ref><ref type="bibr" coords="2,133.48,293.81,6.48,8.97" target="#b5"> 6]</ref>. Although latter approaches analyze flow induced stretching on boundary surfaces, they differ fundamentally from the work presented in this paper, as the boundary structures remain static and do not experience deformations themselves. In the context of mathematical deformations one inevitably enters the realm of tensor field processing and visualization. Here, glyphs <ref type="bibr" coords="2,22.50,353.66,14.94,8.97" target="#b23">[24] </ref>and tensor line techniques <ref type="bibr" coords="2,136.60,353.66,9.71,8.97" target="#b7">[8,</ref><ref type="bibr" coords="2,148.81,353.66,6.72,8.97" target="#b6"> 7,</ref><ref type="bibr" coords="2,158.04,353.66,11.95,8.97" target="#b15"> 16] </ref> make up a large part of tensor field visualization techniques. To enhance the display of tensor glyphs and facilitate adaptive meshing, different glyph packing strategies have been proposed <ref type="bibr" coords="2,115.59,383.55,14.19,8.97" target="#b20">[21,</ref><ref type="bibr" coords="2,132.84,383.55,11.21,8.97" target="#b18"> 19,</ref><ref type="bibr" coords="2,147.11,383.55,10.65,8.97" target="#b14"> 15]</ref> . Metric tensor fields are visualized with the help of pseudo-meshes and tensor-lines in work by Tchon et al. <ref type="bibr" coords="2,69.54,403.48,13.75,8.97" target="#b25">[26]</ref>. Our work modifies glyph and tensor line packing techniques to visualize the metric tensor field both in two-dimensions and on the flow surface itself. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">TENSORS IN CONTINUUM MECHANICS</head><p>In this paper we are concerned with second-order tensors, so-called matrices, which are two-dimensional arrays of scalars operating on vector-spaces. Such a tensor A ∈ R n×m defines a linear mapping from vectors v ∈ R m to vectors in R n and is therefore a suitable mathematical description of linear deformations. The fact that we are investigating two-manifolds in three-dimensional time-varying space restricts these spaces to dimensions n, m ∈ {2, 3, 4}. In the following we give a brief review of the mathematical background used in this paper, limited to the three-dimensional stationary case for notational simplicity. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Notation</head><p>For notational efficiency, we denote vectors as bold faced lowercase letters v, and tensors as bold-faced capitals M (with the exception of clearly identifiable tensors such as ∇v) to distinguish them from scalars s ∈ R. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Deformation Gradient Tensor</head><p>For a given displacement function g : R 3 → R 3 that maps a position x = (x, y, z) ∈ R 3 to its displaced position g(</p><formula>x) = (g x (x), g y (x), g z (x)) ∈ R 3 , </formula><p>the corresponding deformation gradient tensor </p><formula>D =     ∂ g x ∂ x ∂ g x ∂ y ∂ g x ∂ z ∂ g y ∂ x ∂ g y ∂ y ∂ g y ∂ z ∂ g z ∂ x ∂ g z ∂ y ∂ g z ∂ z     </formula><p>is a second-order tensor describing local change of deformation. Thus, an infinitesimal (differential) vector dx ∈ R 3 is mapped to its deformed vector dy ∈ R 3 by simple matrix-vector multiplication dy = Ddx. In essence, D can be used to describe the local deformation of line elements in space. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Velocity Gradient Tensor</head><p>The velocity gradient tensor ∇v of a flow field v : R 3 → R 3 describes local linearized rate of change in velocity: </p><formula>∇v =     ∂ v x ∂ x ∂ v x ∂ y ∂ v x ∂ z ∂ v y ∂ x ∂ v y ∂ y ∂ v y ∂ z ∂ v z ∂ x ∂ v z ∂ y ∂ v z ∂ z     . </formula><p>Because velocity fields are directly related to displacement functions, the deformation gradient tensor D can be computed for a velocity field with the help of its gradient ∇v by the relation </p><formula>D = e ∇v·t , </formula><p>where t ∈ R describes local scaling of the velocity field (e.g., Δt in time-varying flow fields). A first order approximation of the matrix exponential e ∇v·t is given by I + ∇v · t. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Metric Tensors</head><p>Given a parameterized two-manifold in three-space, a metric tensor facilitates the measurement of lengths on the two-manifold in three space. Let p : Ω ⊂ R 2 → R 3 be a parameterization of such a two-manifold living in three-space. The corresponding metric tensor M at a position p(s,t) allows computation of lengths l ∈ R of line elements ds dt ∈ Ω in three space: </p><formula>l 2 = ds dt M ds dt . </formula><p> Consequently, a metric tensor M is a symmetric, positive definite, second order tensor, defining the stretching of vectors of a 2D space embedded in three-space. For a differentiable p, the metric tensor is computed as </p><formula>M = &lt; ∂ p ∂ s , ∂ p ∂ s &gt; &lt; ∂ p ∂ s , ∂ p ∂ t &gt; &lt; ∂ p ∂ s , ∂ p ∂ t &gt; &lt; ∂ p ∂ t , ∂ p ∂ t &gt; . </formula><formula>(1) </formula><p>These mathematical properties make the metric tensor a prime tool for analyzing and quantifying stretching and deformation of flow surfaces over time. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">METRIC TENSORS FOR FLOW SURFACES</head><p> The described metric tensors connect fluid flow with the notion of deformation , providing a mathematical framework for the investigation of the deformation behavior of flow structures such as integral surfaces . In the following we describe the basics of such surface mathematics and the derivation of metric tensors for these flow surfaces. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Flow Surfaces</head><p>The trajectory f : R → R 3 or integral curve representing the motion of a massless particle in a (time-varying) flow to the initial position of the particle at its time of birth t 0 ∈ R. If the velocity field is stationary, such a single trajectory is a stream line (and t typically corresponds to the local magnitude of the velocity vectors), otherwise it is known as path line. A general flow surface is then defined as a two-manifold composed of a set of particle positions or trajectories. These integral surfaces can be classified into two groups. They are stream surfaces (path surfaces) if they describe the locus of particle trajectories emanating from positions on a seeding curve c : R → R 3 , a so-called rake, in stationary (time-varying) flow. Otherwise, they are denoted as time surfaces (streak surfaces) if they describe the locus of a set of particles at specific points in time. In the latter group, time surfaces are created by advecting a set of particles born at the same point in time, whereas the particles that constitute streak surface are continuously seeded over time from a given rake.  In every time step, stream, path, and streak surfaces possess a natural parameterization p : Ω ⊂ R 2 → R 3 that maps positions on the two-manifold into three-space, as illustrated in <ref type="figure" coords="3,206.04,274.27,29.81,8.97" target="#fig_1">Figure 2</ref> . In the following , we abstract from the time-varying character of this parameterization for notational simplicity. Parameters (s,t) ∈ Ω of a position  holds. Time surfaces, however, rely on the definition of an initial, arbitrary parameterization because they do not possess a one-dimensional seeding structure. Note that a flow particle therefore possesses a fixed location in Ω, regardless of how the surface evolves. The existence of such a consistent parameterization for every time step of surface evolution is the basis for our visualization and analysis techniques presented in the remainder of this paper. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Flow Surface Deformations</head><p>The surfaces defined in the previous section usually undergo multiple transformations as they evolve over time. Despite the diversity of possible surface transformations, they can be grouped into few different types of surface deformations. In summary the overall transformation of such a surface is composed of translations, rigid rotations, and deformations, whereas the latter describes phenomena such as bending and twisting as well as planar, tangential stretching along ds and dt (see <ref type="figure" coords="3,59.59,506.05,29.49,8.97">Figure 3</ref>). In this paper we are concerned with deformations that have an immediate impact on surface parameter-space. This effectively eliminates uniform rigid rotation and translation of the complete surface from the focus of our analysis. In general, flow surface deformations come into play at two stages of the flow surface processing pipeline -during generation and visualization. In the following we summarize the impact of deformations on both stages to provide an adequate motivation for our work. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Computation of Metric Tensors</head><p> Quantification of flow surface stretching and shearing is of central importance to complete flow analysis. In the following we present two alternative strategies for the generation of a metric tensor field that allows not only quantification of maximal stretching magnitudes but also quantification of relative and absolute stretching directions directly on flow surfaces and their parameter spaces. Both approaches first compute an estimation of overall surface deformation before encoding it in the form of a two-dimensional metric tensor. The first approach is independent of the concrete properties of a surface discretization and relies on local trajectory information only, whereas the second approach makes heavy use of surface mesh information but does not require the modification of numerical integration code. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Local Deformations along Trajectories</head><p>The minimal independent unit of a flow surface is a particle trajectory. Computing surface deformation individually for members of this set of trajectories is highly desirable, especially since flow surfaces do not necessarily have to possess an explicit geometric representation of the particle neighborhood in the form of a discrete surface mesh. Luckily, a tensor that describes the deformation of infinitesimal neighborhoods along particle trajectories can be computed by accumulating the deformation gradient tensor along an individual particle trace <ref type="bibr" coords="4,225.14,242.93,14.19,8.97" target="#b12">[13,</ref><ref type="bibr" coords="4,241.54,242.93,10.65,8.97" target="#b22"> 23]</ref>, thus facilitating a numerical approximation of deformation that is fully independent of the final surface representation. Given the sequence of particle positions (t i , f(., .;t i )) along a particle trace and assuming an initially undistorted neighborhood, the total deformation T of an infinitesimal neighborhood at position f(., .;t i ) evaluates to </p><formula>T = e ∇v f(.,.;t i−1 ) ·(t i −t i−1 ) · ... · e ∇v f(.,.;t 0 ) ·(t 1 −t 0 ) , (3) </formula><p> which corresponds to successive multiplications of the local deformation gradient tensors. This effectively accumulates the deformation of a three-dimensional neighborhood along a particle trajectory. In addition to the information provided by common particle trajectory computations using numerical integration schemes such as Euler or Runge-Kutta, this equation requires the evaluation of local velocity gradients. Luckily, most common higher order vector field interpolation schemes allow the direct computation of derivatives, thus providing a virtually free approximation of the local velocity gradient. In all other methods, the velocity gradient may be approximated by finite differencing schemes. Each individual deformation gradient tensor <ref type="figure" coords="4,176.87,451.30,30.16,8.97" target="#fig_5">Figure 5</ref>shows a sequence of deformed neighborhoods for a time surface. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2">Deformations of the Surface Mesh</head><p>While the method presented in the previous section is independent of a concrete surface representation, e.g., a piecewise linear mesh, it requires modification of particle path integration code, which may not be feasible in all cases, especially if visualization of surfaces is performed purely during post-processing of available geometry. However, if the surface geometry is parameterized in the way described in Section 4.1, we can compute surface parameter space deformations directly on discrete surface representations that converge to the true deformation as representation accuracy/resolution increases. The central advantage of this method is that it does not require any modification of particle path integration and may be applied non-iteratively to arbitrary time steps during post-processing. Efficient computation of surface deformations on a mesh requires fast evaluation of p. Fortunately, every cell in a tessellated surface mesh (i.e., triangle in a piecewise linear triangulation) has corner points c i ∈ Ω with corresponding positions q i ∈ R 3 . To facilitate fast evaluation of p on the complete surface, we can operate directly on this set of cells. To this end we construct a subdivision tree <ref type="bibr" coords="4,505.70,162.33,10.46,8.97" target="#b1">[2] </ref>in Ω for every time step of the surface evolution, that allows fast location of surface cells for a given (s,t) ∈ Ω. The 3D position of an arbitrary point (s,t) ∈ Ω is then computed by barycentric interpolation within the triangle that contains (s,t) as In accordance to the previous section, Tds and Tdt at (s,t) ∈ Ω can be approximated at an arbitrary point in time by evaluation of the corresponding parameter-space mapping p </p><formula>Tds = p((s,t) + ds) − p(s,t). </formula><p>Due to piecewise linear approximations of surfaces in triangulated meshes, this approximation loses significant accuracy in low resolution meshes and is only suitable for adaptive meshes, i.e., meshes that maintain a reasonable mesh resolution in regions with high divergence. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.3">Computing the Metric Tensor</head><formula>M * = e 1 e 2 diag λ 1 , λ 2 e 1 e 2 T . </formula><p>This essentially constructs a matrix whose spectral decomposition is the square root of the spectral decomposition of In summary, these computations provide us with a second-order tensor M * ∈ R 2×2 at every position in parameter space (s,t) and corresponding three space position p(s,t) throughout the whole life time of a flow surface. This time-varying tensor field (in the following denoted as M * ) can contribute significantly to flow surface visualization and analysis as demonstrated in the remainder of this paper. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.4">The Inverse Tensor Field</head><p>Not only does the information stored in the tensor field M * have uses for flow surface visualization, but so does its inverse. This inverse of the metric tensor field opens numerous possibilities for surface visualization and analysis and is often superior in its expressiveness when compared to the metric tensor field itself. Tensors in this inverse tensor field do not describe the mapping of lengths from parameter space to three-space, but compensate for the distortion of three-space by compressing lengths in parameter space that are stretched and by stretching directions that are being compressed in three-space. This inverse mapping can be used to reverse effects of parameter space stretching for texture modulation and surface sampling and has various benefits for flow surface visualization as detailed in the following. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">VISUALIZATION AND INTERACTION</head><p>The metric tensor field is able to quantify parameter space deformation of flow surfaces and can be used to enhance flow surface visualization by means of surface modulation and rendering of parameter space for querying and analysis. In the following sections we propose methods for parameter space visualization and enhanced flow surface rendering based on the derived metric tensors. Concrete demonstrations of the proposed visualization techniques are shown in Section 6. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Visualizing Parameter Space</head><p> The parameterization of the surface, p is defined over a twodimensional parameter space Ω. Because the metric tensor field M * defined on this (time-varying) parameter-space directly encodes integrated surface deformation over time, a rendering of this tensor field for the purpose of querying and two-dimensional surface analysis can greatly enhance flow surface and flow field analysis. We propose two complementing visualization techniques: dense glyph packing to illustrate overlap-free tensor visualization and tensorline packing for the analysis of tensor field structure and directions. The tensor field is given as set of tensors stored at particle/trajectory positions in Ω. We obtain a continuous representation of the tensor field by interpolating tensor values of neighboring positions in Ω. If a mesh representation of the surface is available, we use a cell locator as described in Section 4.3.2 to locate and interpolate tensor values within mesh triangles. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Glyph Packing</head><p>Tensor glyphs are suitable to represent multiple tensor quantities in one single shape and, if placed in a dense manner, allow for direct comparison of neighboring tensor attributes. For this matter we desire to generate a dense two-dimensional glyph packing of tensor shapes. Tensors in our metric tensor field can encode highly varying degrees of anisotropy and orientation, making a dense, overlap-free sampling on a uniform grid impossible. For dense overlap-free glyph packing, there are mainly two classes of methods in use. The first class starts with an approximate glyph sampling of the field which is then modified by a suitable convergence scheme to produce an even glyph packing; the second class performs region growing. The work by Kindlmann and Westin <ref type="bibr" coords="5,75.95,695.92,14.94,8.97" target="#b18">[19] </ref>is an iterative convergence scheme for 2D and 3D glyph-particle systems based on attracting and repelling forces, which shifts particles to create an even distribution of glyph shapes. A related approach is taken in the work by Feng et al. <ref type="bibr" coords="5,191.28,725.81,9.52,8.97" target="#b8">[9]</ref>. The resulting quality of the dense packing is heavily dependent on initial glyph placement configurations and the former technique may lead to overlaps in the 2D case caused by evaluation of 3D forces. The method by Lo and Wang <ref type="bibr" coords="5,316.94,72.66,14.94,8.97" target="#b20">[21] </ref>belongs to the group of region growing. It seeds 2D glyphs at a given starting position in the domain and performs region growing in a circular manner, iteratively adjusting predicted glyph positions to ensure that neighboring glyphs are touching or as-close-as-possible, as illustrated in <ref type="figure" coords="5,341.44,112.51,29.01,8.97" target="#fig_11">Figure 7</ref>. Our tensor field is inherently two-dimensional, has a bounded domain , and, because we want to make use of glyph packing for surface sampling as demonstrated in the results section, requires as-dense-aspossible packing of glyphs. For these reasons, we developed a modified glyph packing algorithm based on ellipse packing <ref type="bibr" coords="5,489.57,162.97,13.75,8.97" target="#b20">[21]</ref> . Our modifications are the following: We enable the algorithm to operate on bounded domains and introduce the distinction between an underlying tensor field and a shape field to support arbitrary glyph shapes. The glyph movement shown in <ref type="figure" coords="5,422.30,330.06,31.11,8.97" target="#fig_11">Figure 7</ref>is based on maximizing a proximity function β that is equal to 1 if the glyph located at p is touching its parent glyphs located at p 1 and p 2 . In the original paper <ref type="bibr" coords="5,294.12,359.95,13.75,8.97" target="#b20">[21]</ref>, this β is computed as β = β 1 · β 2 , where </p><formula>β i = min p i − p h i + h , h i + h p i − p . </formula><p>Here, h i is the length of glyph shape i in direction p − p i and h is the length of the new glyph in direction p i − p. The maximum is obviously obtained iff p i − p = h i + h. We change the underlying notion slightly by introducing the distinction between a shape and a metric field. For the computation of shape lengths h, we require the definition of a shape field s : R 2 × R → R that returns for every position x ∈ R 2 and angle (direction) in space θ ∈ R the length of the shape in that direction. Note that this function has to be convex to minimize shape overlaps. The measured distance between shapes along a given direction is then scaled according to the underlying metric tensor field. For ellipse packing, we therefore simply use a constant shape field s representing a uniformly scaled sphere in connection with the metric tensor field or its inverse. The second modification, the incorporation of an unbounded domain has one major consequence for the algorithm. Since there is no tensor information available outside of the parameter space domain Ω, the glyph seeding will stop when or before reaching the data set boundaries, and thus create empty regions in the proximity of data set boundaries. To alleviate this issue, we assume that the shape and tensor fields continue linearly across domain boundaries. This is achieved by using linear approximations of shape and tensor information across the seeding direction v, as shown in <ref type="figure" coords="5,427.90,620.59,29.50,8.97" target="#fig_11">Figure 7</ref>, if the seeding position lies outside of the data set boundaries. With these modifications we are able to perform arbitrary glyph packing in bounded domains without creating holes near data set boundaries. A comparison of the algorithms with and without modification is shown in <ref type="figure" coords="5,368.62,671.05,29.01,8.97" target="#fig_12">Figure 8</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Time Varying Glyph Representation</head><p>Glyph packing in one instance of the surface parameter space ignores the evolution of Ω (for path, and streak surfaces) and the parameter space mapping function over time and does generally not guarantee spatial consistency over time. Including the time-varying behavior of  surface deformations into the parameter space visualization is a necessity for complete and consistent visualization of flow surface evolution . For this reason we develop time-varying glyph representations by combining glyph packing with glyph history display. To display the evolution of deformation in parameter space over an interval </p><formula>[t i ,t j ]</formula><p>, we perform the following steps: 1. Compute deformed glyph shapes for every particle in Ω for every time step in </p><formula>[t i ,t j ] </formula><p>2. Construct convex enclosing hull of computed glyph shapes for every particle 3. Perform glyph packing with convex hull shapes and a metric field representing the identity mapping 4. Display opaque current glyph at </p><formula> t p ∈ [t i ,t j ] together with transparent glyphs for t ∈ [t i ,t j ]/t p </formula><p>These steps ensure that neither current glyphs, nor past glyphs of adjacent particles in the final representation overlap or occlude each other. The display of current, past and, future deformations (if t p &lt; t j ) glyphs allows the analysis of time-varying deformation and easy identification of stationary and highly time-varying deformation behaviors. Interactive selection of t p ∈ [t i ,t j ] facilitates spatially consistent viewing of deformation states. With the exception of step 2, these computations are straightforward . To compute a convex enclosing hull in step 2, we find the maximal projections of all glyph shapes onto a predefined coordinate system. Given a sequence of ellipse representations of tensors </p><formula>{M * i ,...,M * j }</formula><p>, we compute the (normalized) eigenvector directions </p><formula>e 1 , e 2 of M * j and </formula><p>project all other major and minor glyph axes onto this coordinate system, keeping track of the maximal projection length. The desired enclosing ellipse is then defined as the representation of the tensor </p><formula>M * m = e 1 e 2 diag(max i (|e 1 T λ i k e k i |), max i (|e 2 T λ i k e k i |)) e 1 e 2 T </formula><p>where k ∈ {1, 2} as illustrated in <ref type="figure" coords="6,137.88,571.87,28.50,8.97">Figure 9</ref>. We choose M * j for initial coordinate system definition, since late glyphs tend to have more prominent anisotropic shapes. Note that more involved convex hull computations are possible by evaluating ellipse lengths on a thoroughly sampled circle. <ref type="figure" coords="6,22.50,714.02,19.60,7.97">Fig. 9</ref>. Maximum projections of ellipse axes onto an initial coordinate system govern shape and size of the final enclosing hull. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Tensor Line Packing</head><p> While glyphs are a formidable tool to visualize the effects of local shearing and stretching on parameter space, they lack a continuous representation of stretching directions especially in case of high anisotropy. A sense of continuity with respect to stretching directions and deformation topology can be achieved by the integration of tensor lines. These lines are tensor field equivalents of stream lines integrated in the directions of the major or the minor eigenvector field. Instead of making use of a uniform tensor line spacing to get a dense representation of the stretching directions, we choose to pack hyper stream lines <ref type="bibr" coords="6,285.12,155.59,9.52,8.97" target="#b6">[7]</ref>, i.e., lines whose thickness locally corresponds to the magnitude of the eigenvalue of the other eigenvector field. A dense packing of these ribbon-like lines ensures that line spacing corresponds to parameter space stretching in the remaining eigenvector direction, i.e., lines are further apart if the space is stretched in orthogonal direction. This has the additional advantage of reducing visual complexity that can arise during the visualization of dense sets of orthogonal lines, which can cause significant high-frequency patterns across the resulting image, and has a greater continuity than local image-based methods <ref type="bibr" coords="6,504.01,235.30,13.75,8.97" target="#b15">[16]</ref>. Stream line placement <ref type="bibr" coords="6,378.27,245.26,14.94,8.97" target="#b26">[27] </ref>is a well-explored area of research and has recently been applied to hyper stream-lines <ref type="bibr" coords="6,460.00,255.22,9.52,8.97" target="#b5">[6]</ref>. Instead of using an isotropic density kernel, we use eigenvalue magnitudes to govern the local density of tensor lines and make use of an offscreen pixel buffer for optimal performance. We perform screen-space tensor line packing by seeding a line in parameter space and saving the distance to the corresponding tensor line core to all pixels of an offscreen pixel buffer that are covered by the corresponding hyper stream line ribbon . If a tensor line core touches a pixel with a distance value less than a preset fraction of the ribbon width, this indicates that it comes too close to an existing tensor-line. In these cases, or if a line cycle is detected, line integration is canceled. <ref type="figure" coords="6,446.88,354.85,35.18,8.97" target="#fig_13">Figure 10</ref>illustrates this process. We seed new lines at uncovered pixels in proximity to existing rasterized hyper stream lines. If packed ellipses are present in the sampled space, we seed tensor lines at glyph centers, providing a good approximation of initial line spacing. These integration and rasterization steps are repeated until all of the off-screen pixel buffer is covered by hyper stream line ribbons and we remove short line fragments in a post-processing step to produce a clean dense packing of tensor-lines. The same procedure is repeated for both eigenvector fields. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Enhancing Flow Surface Visualization</head><p>With the derived metric tensor fields we are able to quantify effects of stretching and shearing on the flow surface itself. We use this information gathered from parameter space to enhance flow surface visualization and provide interactive surface querying techniques. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Color and Texture Mapping</head><p>A number of important tensor field quantities can be described as scalars, which are suitable for direct color or texture mapping. We quantify different stretching properties with the following scalars and their derivatives in time: </p><formula>@BULLET Fractional anisotropy: FA(T) = √ 2 √ (λ 1 −tr(T)) 2 +(λ 2 −tr(T)) 2 √ λ 2 1 +λ 2 2 </formula><formula>S(T) = max(λ 1 , λ 2 ) or S(T) = log(max(λ 1 , λ 2 )) </formula><p> Describes (exponential) maximal stretching in a sense comparable to FTLE. We generate modulation textures from these scalars by mapping them or their derivatives to color or transparency of a texture that covers Ω. Note that surfaces can contain regions with significant isotropic stretching, leading to an effective gain of surface area. This is not possible in classic FTLE of incompressible fluid flows. For this reasons, a clear physical distinction can be made between the different stretching measures represented by ellipse area and anisotropy. A different class of texture generation is made possible by the inverse tensor field. The inverse tensor field facilitates texturing of the flow surface with locally undistorted surface textures. For example, we may perform glyph packing in the inverse tensor field and use the resulting output as texture map input to the surface, effectively texturing the surface with undistorted shapes. This is possible since the resulting glyph sizes in parameter space compensate for stretching of three-space. The same holds for tensor line packing in the inverse tensor field. The resulting lines have uniform distance in three-space. Note that the accuracy of this uniformity depends directly on the quality of the dense glyph and line packing techniques used. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Geometry Splatting</head><p> As established previously, the inverse tensor field is suitable for removing distortions from shapes and textures generated in parameter space. With this in mind, we can perform packing of parameterized glyphs and tensor lines in parameter space with the inverse tensor field. These geometric representations in Ω are sampled and mapped to three-space by applying the mapping p to every sample position. The resulting geometry can then be rendered directly on the surface as high resolution geometric objects, avoiding common problems of texture mapping such as loss of local resolution due to stretching. The results produced by such geometry splatting are directly comparable to those in curvature line drawing and surface sampling <ref type="bibr" coords="7,232.51,451.36,9.52,8.97" target="#b0">[1]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.3">Surface Querying</head><p>The two-dimensional nature of surface parameter space Ω allows for advanced querying techniques, that make interactive, target driven data exploration possible. With a suitable querying mechanism at hand, a full flow surface can be used to probe a vector field, allowing the user to mask out or highlight important surface or flow field regions depending on surface deformation characteristics. Because we can directly evaluate the mapping p, as well as its inverse p −1 , linking of interactions in parameter space with effects in three-space is a straightforward extension to texture and color mapping as described in the previous sections. We implement simple two-dimensional drawing operations that allow highlighting and masking of a surface by direct manipulation of color and transparency values of a modulation texture. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS</head><p>In the following we present examples and illustrate their impact on flow visualization. We study our technique mainly on a time surface created in a time-varying, jet flow data set. The high Reynolds number of this simulation creates significant turbulence along the outer region of the injected stream of fluid and creates a noticeable plume towards its front. The resulting combination of isotropic surface stretching, high anisotropic stretching, and surface symmetries makes it ideal for our analysis. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Technical Results</head><p>Our technique operates mainly in two-dimensional parameter-space Ω, which allows for fast glyph packing and tensor line integration. This advantage of operating in two-dimensional space enables interactive parameter-space manipulation, such as highlighting or zooming, as shown in <ref type="figure" coords="7,338.47,72.66,38.11,8.97" target="#fig_14">Figures 11</ref>and 12.  Because a quantitative comparison between the two proposed metric tensor computation schemes is dependent on a large number of factors, including mesh resolution, integration and velocity gradient interpolation scheme, we offer a simple visual comparison between the two methods in <ref type="figure" coords="7,368.56,585.83,34.07,8.97">Figure 13</ref>. Note that without the application of a color-map, the differences between both methods would be barely noticeable. The presented tensor line packing technique has proven to be a fast and direct way to extract continuous deformation information from the tensor field that is able to convey topological features of the tensor field as well as stretching magnitude, as can be seen in <ref type="figure" coords="7,488.37,646.11,28.69,8.97">Figure 1</ref>. Being able to use hyper stream line widths to pack tensor lines in the inverse tensor field has shown to be especially useful to obtain approximately evenly spaced lines on flow surfaces in three-space, see <ref type="figure" coords="7,491.42,676.00,32.75,8.97" target="#fig_3">Figure 14</ref>. The tensor field and its inverse are capable of giving complementing notions of surface stretching. The inverse tensor field is especially useful for uniform surface sampling when combined with glyph packing and can be used for distortion-free surface texturing as shown in <ref type="figure" coords="7,507.97,715.85,32.79,8.97" target="#fig_3">Figure 14</ref>. Furthermore, glyph centers in the inverse tensor field constitute positions that uniformly sample the surface in three-space without the need <ref type="figure" coords="8,22.50,182.43,23.68,7.97">Fig. 13</ref>. Metric tensor field visualization in parameter-space. The left image was computed with local trajectory integration, the right image is based on a medium-resolution surface mesh. Subtle differences are notable with a color-mapped parameter-space (fractional anisotropy). for additional computation of geodesics. A straightforward sequential implementation of our glyph packing technique can pack around 5000 glyphs in the two-dimensional parameter space in about one second on an Intel Corei7 at 2.2Ghz. In complex flow surfaces large parts of parameter space glyphs can often degenerate to lines, i.e., the tensors are highly anisotropic, causing the glyph-packing and tensor line visualization to suffer from an overload of high frequency details. To alleviate this issue we render the tensor field with square-root scaled eigenvalues in these cases (resulting in fourth roots in <ref type="bibr" coords="8,100.01,332.72,38.26,8.97">Eq. (4.3.3)</ref>). This provides a similar impression of surface stretching as the original field and maintains eigenvector directions , while significantly reducing visual anisotropy. In such cases of excessive stretching, being able to zoom into specific regions of the data set to obtain a small scale view of the region is imperative. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Flow and Surface Analysis</head><p> Combinations of the presented methods with existing flow surface visualization techniques can be used to efficiently depict multiple properties of flow surfaces, as illustrated in <ref type="figure" coords="8,165.66,425.71,33.54,8.97" target="#fig_3">Figure 14</ref>. The quantification of surface deformation enables the use of alternative surface texturing techniques, while still conveying stretching and anisotropy information in the form of color or opacity maps. The concurrent and linked display of parameter-space allows for more complete surface analysis , making the detection of symmetries and stretching extrema in the flow surface significantly easier. Notice how the inverse metric tensor field is used to compensate texture distortion. Parameter space color mapping shows an uneven but symmetric stretching behavior at the peak of the plume, highlighting more complex surface evolution properties than visible with simple texture mapping. Divergence and convergence properties of the flow field can be directly deduced from observations of surface stretching. In <ref type="figure" coords="8,41.98,555.64,34.42,8.97" target="#fig_5">Figure 15</ref> we show a snapshot of the rising time surface with different surface deformation data shown. Anisotropic surface stretching is clearly visible along the surface regions that are immediately parallel to the flow direction, whereas isotropic stretching at the top of the plume can be identified by mapping transparency to tensor area. This indicates a characteristic behavior of jet streams, where the front of the stream pushes into resting fluid and expands into multiple directions. An interesting look at time-varying surface area change is given in <ref type="figure" coords="8,22.50,635.75,33.27,8.97" target="#fig_7">Figure 16</ref>, where the derivative of tensor area is mapped to parameter space and the surface. The four red highlights can be identified as belonging to high surface isotropy with high area gain. This implies the presence of four prevalent streams in that region of the flow field that show diverging flow behavior along a plane tangential to the surface. At the same time, since the flow field is incompressible and has to preserve volume, this indicates a relative compression of flow along the main stream direction. In <ref type="figure" coords="8,42.78,715.86,35.22,8.97" target="#fig_11">Figure 17</ref>we show a rendering of time-varying glyph packing. This visualization reveals that anisotropic stretching and compression is not bound to the same parts of parameter space as time changes. Furthermore, it becomes clear, that the same region of the surface can undergo significantly different stretching behavior over time, as indicated by a strong change in stretching directions. To demonstrate the robustness of the developed method, <ref type="figure" coords="8,500.66,576.38,34.85,8.97" target="#fig_12">Figure 18</ref>shows the application of our techniques to an evolving streak surface in a second data set. Note how the anisotropy mapping can identify a region along the center streak line of the surface that remains largely isotropic during deformation. A second surface behavior that is not evident by shape analysis is the compressed region along the main fold of the surface, as seen in the tensor area mapping. The interaction techniques provided by our method allow for advanced flow field querying with the help of flow surface probes. After releasing a flow surface into the flow field, querying in parameter space can be used to highlight or filter interesting regions of the flow surface, as demonstrated in <ref type="figure" coords="8,355.19,685.96,33.32,8.97" target="#fig_14">Figure 11</ref>. Here, interaction was used to highlight and track specific deformation behavior of the flow surface. In <ref type="figure" coords="8,512.10,695.92,23.41,8.97;8,285.12,705.89,11.39,8.97" target="#fig_14">Figure  11c</ref> , highlighting facilitates the identification of tensor field singularities on the flow surface. <ref type="figure" coords="8,379.31,715.85,75.11,8.97" target="#fig_14">Figures 11b and 11d</ref>mark highly isotropic and highly anisotropic regions in the flow field. In becomes evident how the top of the jet stream results in strong growth in surface area as well as strong surface displacement as illustrated by the concurrent display of 3 time steps. Regions with anisotropic stretching, however, are located along outer regions of the jet stream. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS AND FUTURE WORK</head><p>We have presented two alternative ways to derive metric tensor fields for flow surface visualization. The resulting tensor fields have shown to be highly useful for the analysis and illustration of surface deformation and behavior. Direct visual and interactive mappings between parameter-space and three-space allow for semantic linking of both spaces, facilitating interactive surface querying to focus on regions with specific deformation behavior. The proposed visualization and analysis techniques have proven to be of high value to flow analysis by stressing the importance of flow surfaces for flow field probing and providing tools for interactive and automatic deformation-based surface highlighting. Improved analysis of physical flow behavior is provided by stretching analysis and quantification, that may otherwise be hidden in a three-dimensional visualization of flow deformation. We plan to extend this work in multiple directions, e.g., by performing level-of-detail texture mapping in object space, enhancing and illustrating surface generation algorithms, as well as by relating surface stretching topology to underlying flow topology. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS </head><p> This work was supported in part by the National Science Foundation under contracts IIS 0916289 and IIE 1018097, and the Office of Advanced Scientific Computing Research, Office of Science, of the U.S. Department of Energy under Contract No. DE-FC02-06ER25780 through the Scientific Discovery through Advanced Computing (Sci- DAC) programs Visualization and Analytics Center for Enabling Technologies (VACET). We thank the members of IDAV for their support. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1" coords="3,31.50,204.36,250.38,7.97;3,31.50,213.82,250.38,8.89;3,31.50,223.28,250.38,8.52;3,31.50,232.75,182.60,7.97"><head>Fig. 2. </head><figDesc>Fig. 2. Parameter space evolution of a streak surface growing vertically along t. The existing parameter space region (Ω 1 ) is extended by ΔΩ as the surface grows. Note that Ω is constant for a time surface, because no new particles are seeded as the surface evolves. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2" coords="3,31.50,304.15,250.38,8.97;3,31.50,314.12,250.39,8.97;3,31.50,324.08,23.20,8.97;3,56.56,324.08,5.97,15.33;3,64.39,324.08,85.36,9.86;3,152.22,324.08,5.97,15.33;3,160.05,324.08,121.82,9.86;3,31.50,334.04,114.84,9.91;3,148.61,334.04,5.97,15.33;3,156.35,334.04,125.56,9.91"><head></head><figDesc>these surfaces are uniquely defined by the seeding position of the corresponding flow particle along the rake, s ∈ R and its time of birth, t ∈ R. Consequently, for a parameterization given at fixed time step t i ∈ R the equation f(c(s),t;t i ) = p(s,t) </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3" coords="3,294.12,630.83,250.37,7.97;3,294.12,640.30,250.37,7.97;3,294.12,649.76,250.40,7.97;3,294.12,659.22,250.37,7.97;3,294.12,668.68,250.39,7.97;3,294.12,678.15,236.49,7.97"><head>Fig. 4. </head><figDesc>Fig. 4. Flow surfaces with different widely-used texturing settings to reveal tangential surface deformations. Notice how stream-line like visualizations can only convey one directional stretching and either lose considerable detail or contribute to cluttering based on texture resolution . The same holds for other texturing techniques that facilitate simple visualization of two-dimensional stretching by use of shape pattern. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4" coords="4,22.50,441.34,23.56,10.19;4,46.06,438.74,29.41,9.19;4,75.97,438.40,6.41,11.93;4,82.38,440.93,1.38,4.98;4,84.26,438.40,7.19,11.93;4,91.45,438.40,10.94,7.52;4,104.98,441.34,167.90,8.97;4,22.50,451.30,151.49,8.97"><head></head><figDesc> D i = e ∇v f(.,.;t i−1 ) ·(t i −t i−1 ) in (3) encodes local coordinate frame deformation from one particle position to the next. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5" coords="4,22.50,555.26,250.39,7.97;4,22.50,564.72,250.40,7.97;4,22.50,574.18,207.76,7.97;4,32.46,595.39,240.41,8.97;4,22.50,605.36,250.37,8.97;4,22.50,615.32,250.40,8.97;4,22.50,625.28,250.38,10.05;4,22.50,635.25,250.37,9.91;4,22.50,645.21,250.38,8.97;4,22.50,655.17,140.85,8.97"><head>Fig. 5. </head><figDesc>Fig. 5. Accumulated deformations of neighborhoods for an evolving time surface shown as ellipsoids at particle positions. In incompressible flow, the volume of individual ellipsoids stays constant over time. This tensor T contains all information necessary for the computation of surface-tangential or parameter space deformations. Let ds and dt be differential vectors in surface parameter space at a particle p(s,t) immediately after it enters the flow field at a time t 0 . These vectors are mapped onto Tds and Tdt at a position t i in time along the particle trajectory. This effectively facilitates evaluation of tangent vectors at different stages of surface deformation. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6" coords="4,434.30,202.17,100.70,10.19;4,285.12,212.14,22.66,8.97;4,309.78,212.14,6.97,15.33;4,318.74,212.49,7.60,9.56;4,328.82,212.14,6.97,15.33;4,337.79,212.14,43.80,10.42;4,355.32,232.06,109.98,10.19;4,295.08,247.04,240.42,8.97;4,285.12,257.00,250.38,9.41;4,285.12,266.97,250.38,8.97;4,285.12,276.93,38.11,8.97"><head></head><figDesc>This allows efficient evaluation of p as defined in Section 3.4 for all points in Ω in all time steps of the surface, as illustrated in Figure 6. Obviously, the obtained values are dependent on mesh quality and resolution. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7" coords="4,285.12,385.07,250.37,7.97;4,285.12,394.53,250.38,8.13;4,285.12,403.99,250.35,8.13;4,285.12,413.46,67.44,7.97"><head>Fig. 6. </head><figDesc> Fig. 6. Mappings between two-dimensional parameter space and threespace . A metric tensor M defines the measuring of lengths on a deformed manifold, whereas p maps between parameter space (left) and three-space (right). </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8" coords="4,285.12,550.42,250.38,9.22;4,285.12,560.64,250.40,8.97;4,285.12,570.60,135.49,9.91;4,337.23,594.56,17.42,8.97;4,363.24,589.33,110.07,8.97;4,363.49,599.29,109.57,8.97;4,480.91,594.56,2.48,8.97"><head></head><figDesc>With the given mapping from ds dt to Tds Tdt , computed by either one of the two presented techniques, the metric tensor at p(s,t) at time t i according to (1) evaluates to M = &lt; Tds, Tds &gt; &lt;Tds, Tdt &gt; &lt; Tds, Tdt &gt; &lt;Tdt, Tdt &gt; . </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9" coords="4,295.08,615.18,240.43,8.97;4,285.12,623.39,250.38,11.93;4,285.12,635.11,250.38,10.19;4,285.12,645.07,250.36,10.19;4,285.12,655.04,250.38,10.19;4,285.12,666.68,250.38,10.19;4,285.12,674.88,250.39,11.93;4,285.12,686.61,76.44,8.97"><head></head><figDesc> For improved quantification of stretching and shearing, we transform this parameter space description into a tensor M * that represents stretching and shearing quantities directly. Let λ 1 , λ 2 and e 1 , e 2 be eigenvalues and (unit) eigenvectors of M at time t k . When compared to its length in three-space at time t 0 , a vector e i in Ω corresponding to an eigenvector of M is stretched by a factor of λ i at time t k . Thus, a tensor M * which directly encodes this physical stretching relationship can be constructed as </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10" coords="4,475.41,735.78,60.10,8.97;5,31.50,52.74,250.38,8.97;5,31.50,62.70,250.39,8.97;5,31.50,72.66,25.40,8.97"><head>M. The derived tensor field is a two-dimensional second-order tensor field that gives for every position p(s,t), how its neighborhood is stretched along </head><figDesc>ds and dt. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11" coords="5,294.12,279.22,250.39,7.97;5,294.12,288.69,250.38,7.97;5,294.12,298.14,250.37,7.97;5,294.12,307.61,67.67,7.97"><head>Fig. 7. </head><figDesc>Fig. 7. Steps in glyph packing as introduced by Lo and Wang [21]: An initial estimated glyph position in the neighborhood of existing glyphs is iteratively moved to an optimal position where the new glyph touches both parent glyphs. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12" coords="6,22.50,168.54,250.39,7.97;6,22.50,178.00,250.35,7.97;6,22.50,187.47,231.44,7.97"><head>Fig. 8. </head><figDesc>Fig. 8. Standard ellipse packing [21] on unbounded domains and ellipse packing with bounded domain treatment. The color map used throughout this work is shown on the left, here encoding glyph anisotropy. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13" coords="6,285.12,514.11,250.36,7.97;6,285.12,523.58,250.39,7.97;6,285.12,533.04,250.38,8.13;6,285.12,542.50,250.39,8.13;6,285.12,551.97,212.51,7.97"><head>Fig. 10. </head><figDesc>Fig. 10. The tensor line packing process makes use of hyper stream line ribbons and an offscreen pixel buffer to mark covered regions. Pixels z in the buffer hold the minimal distance to a tensor line core whose ribbon covers z. Right: Line integration stops if they enter pixels whose distance value indicates closeness to an existing tensor-line. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14" coords="7,294.12,312.79,250.38,7.97;7,294.12,322.26,250.37,7.97;7,294.12,331.71,250.36,7.97;7,294.12,341.18,224.93,8.52"><head>Fig. 11. </head><figDesc>Fig. 11. Interaction in parameter space (a) allows for surface masking and highlighting. (b) Regions with low and (d) high fractional anisotropy were filtered. In (c) central degenerate points on the surface stretching field were highlighted in Ω and are clearly visible on the surface. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15" coords="7,294.12,504.87,250.38,7.97;7,294.12,514.34,250.38,7.97;7,294.12,523.80,90.12,7.97"><head>Fig. 12. </head><figDesc>Fig. 12. As parts of the surface may map to sub-pixel elements in parameter-regions as the surface evolves, zooming can reveal more details of surface stretching. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16" coords="8,285.12,133.39,250.35,7.97;8,285.12,142.86,250.37,8.13;8,285.12,152.33,250.39,7.97;8,285.12,161.79,220.20,7.97"><head>Fig. 15. </head><figDesc>Fig. 15. The same surface shown with deformed 3D neighborhoods as represented by T, color-mapped with surface anisotropy, and alpha mapping applied to ellipse area. The last mimics thinning of dye streams where regions with lower concentrations are more transparent. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17" coords="8,285.12,314.26,250.37,7.97;8,285.12,323.73,228.95,7.97"><head>Fig. 16. </head><figDesc>Fig. 16. The derivative of tensor volume reveals which regions of the surface gain in volume and which are being contracted over time. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18" coords="8,285.12,527.46,250.36,7.97;8,285.12,536.92,250.38,7.97;8,285.12,546.38,250.37,7.97;8,285.12,555.85,133.81,7.97"><head>Fig. 17. </head><figDesc>Fig. 17. The time-varying parameter-space visualization reveals how parts of the surface experience different forms of anisotropic stretching over time. In some regions (close-up) present and past (gray) glyphs show orthogonal stretching directions. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19" coords="9,31.50,421.43,513.02,7.97;9,31.50,430.89,513.02,7.97;9,31.50,440.35,512.98,7.97;9,31.50,449.81,513.01,7.97;9,31.50,459.28,504.78,7.97"><head>Fig. 14. </head><figDesc>Fig. 14. Composition of different visualization techniques. Glyph (a) and tensor line packing (b) in the metric tensor (left halves) and inverse field. Color map indicates local anisotropy. Major eigenvector lines are blue, lines that follow the minor eigenvector field are red. (c) Anisotropy color map mapped to a standard sphere texture (left). The distortion present in standard flow surface texturing is compensated by glyph shapes in the inverse tensor field, as indicated by an undistorted sphere texture. (d) Tensor-line geometry can be rendered on flow surfaces directly to indicate stretching directions. Mapping tensor area to transparency mimics physical thinning of flow surfaces and gives a smoke-surface like impression. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20" coords="9,31.50,634.38,116.32,8.11;9,144.27,634.52,137.64,7.97;9,31.50,643.99,168.13,7.97"><head>Fig. 18. </head><figDesc>Fig. 18. A streak surface in a K ´ armánarm´armán vortex street with color-mapped anisotropy (top) and alpha mapped tensor area. </figDesc></figure>

			<note place="foot">Fig. 3. Illustration of various surface deformation types. From left to right: Undeformed state, bending, twisting, stretching (one-directional). 4.2.1 Flow Surface Generation Numerically the integral in (2) is discretized as Riemann sum and in practice computed by Euler integration or higher order methods such as adaptive Runge Kutta [5] schemes. Additionally, the set of particle trajectories required for a surface representation needs to be sampled as well. Fortunately, recently developed adaptive surface generation techniques [11, 20] have found a way of balancing the trade-off between low accuracy in the case of very low trajectory numbers and high computational costs in high resolution surfaces. While performing adaptivity measures, these flow surface construction algorithms compensate for different types of surface deformations . In the context of stream and path surfaces, adaptive surface generation techniques [11] take into account divergence and convergence of trajectories by insertion of new trajectories during the surface integration process. Furthermore, twisting and bending is compensated by surface refinement in regions, where mesh angles exceed given thresholds. Time and streak surfaces require an additional degree of adaptivity [20], as the surfaces do not only evolve along a front of trajectories, but can deform at arbitrary positions in their parameter space. In these cases, excessive local mesh stretching can be avoided by local mesh refinement. Other approaches take surface curvature into account when refining the surface mesh. It is notable that often, however, adaptive surface generation measures are not an option due to the generation technique (e.g., GPU based surfaces [4]) or strict memory constraints. In summary, quantification of surface stretching is of central importance to the construction of accurate integral surfaces and has the potential to improve and evaluate the surface construction process. 4.2.2 Flow Surface Visualization Once the surface is generated, appropriate lighting and texturing techniques can be applied to highlight different characteristics of the surface . Bending and twisting of surfaces is generally conveyed by surface shape and normal deviation directly, resulting in shading that appropriately reflects deformations that lead to general surface shape change. Stretching and shearing of surfaces, however, has not been in the center of attention in flow surface visualization. In general, texturing has been applied to depict flow lines such as time lines and stream lines on surfaces. The unique definition of surface parameter space Ω as described previously in this paper, conveniently allows direct reuse of (s,t) ∈ Ω as texture coordinates. Other visualizations use more complex texture patterns that are able to convey large scale multi-directional deformations of parameter space as well. However, quantification of this parameter space deformation has not been integrated into existing visualization techniques. Figure 4 shows a selection of common flow surface visualization techniques. Note that there are also texturing techniques that compensate for local deformation by operating in image space [18]. This notable lack of specific deformation visualization together with the impact potential of deformation quantification onto the visualization and analysis process constitutes the main motivation of this work.</note>

			<note place="foot">OBERMAIER AND JOY: DERIVED METRIC TENSORS FOR FLOW SURFACE VISUALIZATION</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct coords="10,40.76,74.01,232.11,7.97;10,40.76,83.47,232.16,7.97;10,40.76,92.93,33.22,7.97"  xml:id="b0">
	<analytic>
		<title level="a" type="main">Anisotropic polygonal remeshing</title>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Alliez</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Cohen-Steiner</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">O</forename>
				<surname>Devillers</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Lévy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Desbrun</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="485" to="493" />
			<date type="published" when="2003-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,102.40,232.12,7.97;10,40.76,111.87,176.19,7.97"  xml:id="b1">
	<analytic>
		<title level="a" type="main">Multidimensional binary search trees used for associative searching</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">L</forename>
				<surname>Bentley</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="509" to="517" />
			<date type="published" when="1975-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,121.33,232.12,7.97;10,40.76,130.80,232.08,7.97;10,40.76,140.26,147.23,7.97"  xml:id="b2">
	<analytic>
		<title level="a" type="main">Illustrative stream surfaces. Visualization and Computer Graphics</title>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Born</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Wiebel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Friedrich</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Scheuermann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Bartz</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1329" to="1338" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,149.72,232.11,7.97;10,40.76,159.19,232.10,7.97;10,40.76,168.65,184.53,7.97"  xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive streak surface visualization on the gpu. Visualization and Computer Graphics</title>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Burger</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Ferstl</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Theisel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Westermann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1259" to="1266" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,178.12,232.13,7.97;10,40.76,187.58,232.12,7.97;10,40.76,197.04,83.11,7.97"  xml:id="b4">
	<analytic>
		<title level="a" type="main">A variable order runge-kutta method for initial value problems with rapidly varying right-hand sides</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">R</forename>
				<surname>Cash</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<forename type="middle">H</forename>
				<surname>Karp</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Math. Softw</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="201" to="222" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,206.51,232.13,7.97;10,40.76,215.97,232.11,7.97;10,40.76,225.44,232.11,7.97;10,40.76,234.91,17.94,7.97"  xml:id="b5">
	<analytic>
		<title level="a" type="main">Asymmetric tensor field visualization for surfaces. Visualization and Computer Graphics</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Chen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Palke</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Lin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Yeh</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">P</forename>
				<surname>Vincent</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Laramee</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1979" to="1988" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,244.37,232.11,7.97;10,40.76,253.84,232.11,7.97;10,40.76,263.29,75.73,7.97"  xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualizing second-order tensor fields with hyperstreamlines</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Delmarcelle</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Hesselink</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications IEEE</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="25" to="33" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,272.76,232.12,7.97;10,40.76,282.23,232.13,7.97;10,40.76,291.69,148.14,7.97"  xml:id="b7">
	<monogr>
		<title level="m" type="main">A unified approach to the design of visualization software for the analysis of field problems. Three-Dimensional Visualization and Display Techniques</title>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">R</forename>
				<surname>Dickinson</surname>
			</persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="173" to="180" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,301.16,232.10,7.97;10,40.76,310.62,232.12,7.97;10,40.76,320.08,73.04,7.97"  xml:id="b8">
	<analytic>
		<title level="a" type="main">Anisotropic noise samples. Visualization and Computer Graphics</title>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Feng</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Hotz</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Joy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="342" to="354" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,329.55,232.12,7.97;10,40.76,339.01,232.11,7.97;10,40.76,348.48,232.13,7.97;10,40.76,357.95,72.85,7.97"  xml:id="b9">
	<analytic>
		<title level="a" type="main">Efficient computation and visualization of coherent structures in fluid flow applications. Visualization and Computer Graphics</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Garth</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Gerhardt</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Tricoche</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Hagen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1464" to="1471" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,367.41,232.13,7.97;10,40.76,376.87,232.12,7.97;10,40.76,386.33,232.14,7.97;10,40.76,395.80,17.94,7.97"  xml:id="b10">
	<analytic>
		<title level="a" type="main">Generation of accurate integral surfaces in time-dependent vector fields</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Garth</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Krishnan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Tricoche</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Bobach</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">I</forename>
				<surname>Joy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="1404" to="1411" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,405.27,232.12,7.97;10,40.76,414.73,232.12,7.97;10,40.76,424.20,126.80,7.97"  xml:id="b11">
	<analytic>
		<title level="a" type="main">Lagrangian visualization of flow-embedded surface structures</title>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Garth</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">A</forename>
				<surname>Wiebel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Tricoche</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">I</forename>
				<surname>Joy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Scheuermann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1007" to="1014" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,433.66,232.11,7.97;10,40.76,443.12,130.07,7.97"  xml:id="b12">
	<analytic>
		<title level="a" type="main">Finding finite-time invariant manifolds in two-dimensional velocity fields</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Haller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Chaos</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="99" to="108" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,452.59,232.13,7.97;10,40.76,462.05,232.12,7.97;10,40.76,471.52,77.27,7.97"  xml:id="b13">
	<analytic>
		<title level="a" type="main">Distinguished material surfaces and coherent structures in three-dimensional fluid flows</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Haller</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica D: Nonlinear Phenomena</title>
		<imprint>
			<biblScope unit="volume">149</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="248" to="277" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,480.98,232.14,7.97;10,40.76,490.44,232.09,7.97;10,40.76,499.91,232.11,7.97;10,40.76,509.37,167.74,7.97"  xml:id="b14">
	<analytic>
		<title level="a" type="main">Interactive glyph placement for tensor fields</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Hlawitschka</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Scheuermann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd international conference on Advances in visual computing -Volume Part I, ISVC&apos;07</title>
		<meeting>the 3rd international conference on Advances in visual computing -Volume Part I, ISVC&apos;07<address><addrLine>Berlin, Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="331" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,518.84,232.12,7.97;10,40.76,528.31,232.11,7.97;10,40.76,537.77,232.04,7.97;10,40.76,547.24,133.41,7.97"  xml:id="b15">
	<analytic>
		<title level="a" type="main">Physically based methods for tensor field visualization</title>
		<author>
			<persName>
				<forename type="first">I</forename>
				<surname>Hotz</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">L</forename>
				<surname>Feng</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Hagen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Joy</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Jeremic</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the conference on Visualization &apos;04, VIS &apos;04</title>
		<meeting>the conference on Visualization &apos;04, VIS &apos;04<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="123" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,556.69,232.11,7.97;10,40.76,566.16,232.12,7.97;10,40.76,575.63,49.82,7.97"  xml:id="b16">
	<analytic>
		<title level="a" type="main">Constructing stream surfaces in steady 3d vector fields</title>
		<author>
			<persName>
				<forename type="first">J</forename>
				<forename type="middle">P M</forename>
				<surname>Hultquist</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd conference on Visualization &apos;92, VIS &apos;92</title>
		<meeting>the 3rd conference on Visualization &apos;92, VIS &apos;92</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,585.09,232.11,7.97;10,40.76,594.56,232.12,7.97;10,40.76,604.02,175.71,7.97"  xml:id="b17">
	<analytic>
		<title level="a" type="main">Iris: Illustrative rendering for integral surfaces</title>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Hummel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Garth</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Hamann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Hagen</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<forename type="middle">I</forename>
				<surname>Joy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1319" to="1328" />
			<date type="published" when="2010-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,613.48,232.12,7.97;10,40.76,622.95,232.11,7.97;10,40.76,632.41,95.43,7.97"  xml:id="b18">
	<analytic>
		<title level="a" type="main">Diffusion tensor visualization with glyph packing</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Kindlmann</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C.-F</forename>
				<surname>Westin</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1329" to="1336" />
			<date type="published" when="2006-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,641.88,232.12,7.97;10,40.76,651.34,232.10,7.97;10,40.76,660.81,205.59,7.97"  xml:id="b19">
	<analytic>
		<title level="a" type="main">Time and streak surfaces for flow visualization in large time-varying data sets</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Krishnan</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">C</forename>
				<surname>Garth</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">K</forename>
				<surname>Joy</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1267" to="1274" />
			<date type="published" when="2009-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,670.27,232.12,7.97;10,40.76,679.73,232.07,7.97;10,40.76,689.20,17.94,7.97"  xml:id="b20">
	<analytic>
		<title level="a" type="main">Generation of anisotropic mesh by ellipse packing over an unbounded domain</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Lo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">X</forename>
				<surname>Wang</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eng. with Comput</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="372" to="383" />
			<date type="published" when="2005-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,698.67,232.11,7.97;10,40.76,708.13,232.12,7.97;10,40.76,717.60,133.65,7.97"  xml:id="b21">
	<analytic>
		<title level="a" type="main">Over two decades of integration-based geometric flow visualization</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Mclouglin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<forename type="middle">S</forename>
				<surname>Laramee</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Peikert</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<forename type="middle">H</forename>
				<surname>Post</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Chen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1807" to="1829" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,40.76,727.05,232.12,7.97;10,40.76,736.52,232.11,7.97;10,303.38,53.49,60.01,7.97"  xml:id="b22">
	<analytic>
		<title level="a" type="main">Volume deformations in grid-less flow simulations</title>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Obermaier</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M</forename>
				<surname>Hering-Bertram</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Kuhnert</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Hagen</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="879" to="886" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,62.95,232.12,7.97;10,303.38,72.41,232.11,7.97;10,303.38,81.88,226.61,7.97"  xml:id="b23">
	<analytic>
		<title level="a" type="main">Visual computing in biology and medicine: Survey of glyph-based visualization techniques for spatial multivariate medical data</title>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Ropinski</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">S</forename>
				<surname>Oeltze</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">B</forename>
				<surname>Preim</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="392" to="401" />
			<date type="published" when="2011-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,91.34,232.10,7.97;10,303.38,100.81,232.12,7.97;10,303.38,110.28,103.95,7.97"  xml:id="b24">
	<analytic>
		<title level="a" type="main">Efficient visualization of lagrangian coherent structures by filtered AMR ridge extraction</title>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Sadlo</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Peikert</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1456" to="1463" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,119.74,232.12,7.97;10,303.38,129.20,232.12,7.97;10,303.38,138.66,147.16,7.97"  xml:id="b25">
	<analytic>
		<title level="a" type="main">Two-dimensional metric tensor visualization using pseudo-meshes</title>
		<author>
			<persName>
				<forename type="first">K.-F</forename>
				<surname>Tchon</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">J</forename>
				<surname>Dompierre</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">M.-G</forename>
				<surname>Vallet</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">F</forename>
				<surname>Guibault</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Camarero</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Engineering with Computers</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="121" to="131" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,148.13,232.10,7.97;10,303.38,157.60,232.13,7.97;10,303.38,167.06,232.07,7.97;10,303.38,176.53,19.83,7.97"  xml:id="b26">
	<analytic>
		<title level="a" type="main">Image-guided streamline placement</title>
		<author>
			<persName>
				<forename type="first">G</forename>
				<surname>Turk</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">D</forename>
				<surname>Banks</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd annual conference on Computer graphics and interactive techniques, SIGGRAPH &apos;96</title>
		<meeting>the 23rd annual conference on Computer graphics and interactive techniques, SIGGRAPH &apos;96<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="453" to="460" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,185.99,232.12,7.97;10,303.38,195.45,232.12,7.97;10,303.38,204.92,232.09,7.97;10,303.38,214.38,122.21,7.97"  xml:id="b27">
	<analytic>
		<title level="a" type="main">Smoke surfaces: An interactive flow visualization technique inspired by real-world flow experiments. Visualization and Computer Graphics</title>
		<author>
			<persName>
				<forename type="first">W</forename>
				<surname>Von Funck</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">T</forename>
				<surname>Weinkauf</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Theisel</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H.-P</forename>
				<surname>Seidel</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1396" to="1403" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct coords="10,303.38,223.85,232.13,7.97;10,303.38,233.31,232.10,7.97;10,303.38,242.77,154.54,7.97"  xml:id="b28">
	<analytic>
		<title level="a" type="main">Asymmetric tensor analysis for flow visualization. Visualization and Computer Graphics</title>
		<author>
			<persName>
				<forename type="first">E</forename>
				<surname>Zhang</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">H</forename>
				<surname>Yeh</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">Z</forename>
				<surname>Lin</surname>
			</persName>
		</author>
		<author>
			<persName>
				<forename type="first">R</forename>
				<surname>Laramee</surname>
			</persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="106" to="122" />
			<date type="published" when="2009-02" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
