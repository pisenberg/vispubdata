<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Space-Optimized Tree Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vinh</forename><surname>Quang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Information Technology</orgName>
								<orgName type="institution">University of Technology</orgName>
								<address>
									<postCode>2000</postCode>
									<settlement>Sydney</settlement>
									<region>NSW</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Nguyen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Information Technology</orgName>
								<orgName type="institution">University of Technology</orgName>
								<address>
									<postCode>2000</postCode>
									<settlement>Sydney</settlement>
									<region>NSW</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mao</forename><forename type="middle">Lin</forename><surname>Huang</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Faculty of Information Technology</orgName>
								<orgName type="institution">University of Technology</orgName>
								<address>
									<postCode>2000</postCode>
									<settlement>Sydney</settlement>
									<region>NSW</region>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Space-Optimized Tree Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>This paper describes a new method for the visualization of tree structured relational data. It can be used especially for the display of very large hierarchies in a 2dimensional space. We discuss the advantages and limitations of current techniques of tree visualization. Our strategy is to optimize the drawing of trees in a geometrical plane and maximize the utilization of display space by allowing more nodes and links to be displayed at a limit screen resolution. We use the concept of enclosure to partition the entire display space into a collection of local regions that are assigned to all nodes in tree T for the display of their sub-trees and themselves. To enable the exploration of large hierarchies, we use a modified semantic zooming technique to view the detail of a particular part of the hierarchy at a time based on user&apos;s interest. Layout animation is also provided to preserve the mental map while the user is exploring the hierarchy by changing zoomed views.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>As the amount of information available for access has grown rapidly in the last few decades, researches on finding new tools and techniques for navigating and analyzing information have become more and more important. One of these research areas is Information Visualization, the technique to generate visual presentations of information structure. These visual representations can help human with a better understanding of the information and the relationships among data items. A large quantity of the information is structured hierarchically, such as product catalogs, HTML documents, computer file systems, organization chats, etc. In graph theory, we usually call these hierarchical trees.</p><p>Early researches in tree visualization can be classified into two main streams:</p><p>• Connection: It is a natural way to draw tree structures in a node-link diagram. A set of visible graphical edges are drawn in the diagram to link nodes from the parents to their children. These edges are used to present relationships among data items. There are many researches in this direction have been done, such as cone-tree <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b15">15]</ref>, hyperbolic-tree <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b9">10]</ref>, balloon view <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b8">9]</ref>, radial view <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b7">8]</ref>, disk tree <ref type="bibr" target="#b17">[17]</ref> etc … The advantage of using a node-link diagram to present tree structures is that the human can direct see these relationships that are drawn as a set of graphical edges appearing in the diagram. This makes easier for the process of human perception in understanding the relational structures of the information.</p><p>• Enclosure: Another way to visualize trees is to use enclosure. Unlike connection, enclosure is the method of using enclosure to represent the tree structures. <ref type="figure" target="#fig_5">Figure 6</ref> shows that each node is mapped to a rectangular area, then that area is subdivided in horizontal or vertical direction to show the relative size of the children of the node. The process is recursively applied to the children nodes with the subdivisions on the X-or Y-axis. There are also some researches in this direction that have been well done. A typical example of this type of visualization techniques is tree-maps <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b11">12]</ref>.</p><p>Node-link diagrams and tree-maps are both effective methods for visualizing trees of moderate size. Which one we use depends primarily on the properties of the data. Node-link diagrams are effective for trees that have an uneven shape while tree-maps are effective for trees where the nodes include quantitative variables, particularly when large values are important. Now we would like to briefly review some of the tree visualization techniques and the limitations of these techniques.      </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1.">Current tree visualizations</head><p>We now discuss some typical tree visualization techniques including the classical hierarchical view <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b5">6]</ref>, the h-tree layout <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">7]</ref>, the radial view <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b7">8]</ref>, the balloon view <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b8">9]</ref>, hyperbolic browser <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b9">10]</ref>, and treemaps <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b11">12]</ref>.</p><p>The classical hierarchical view -The classical hierarchical view is based on the algorithms developed by Reingold and Tilford <ref type="bibr" target="#b5">[6]</ref>. This technique positions children nodes "below" their common ancestor. The layout can vary as top-down, left-to-right tree and gridlike positioning. The algorithm is simple, fast and predictable, but there is a lot of unused space between nodes (see <ref type="figure" target="#fig_0">Figure 1</ref>). Because the utilization of geometrical space is not optimized and there are many unused holes produced on the drawing, this technique is not a space-optimized drawing method and it is not adequate for visualizing large size hierarchies.</p><p>The H-Tree Layout -The h-tree layout <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">7]</ref> is a classical drawing technique for representing binary trees (see <ref type="figure" target="#fig_1">Figure 2</ref>). This layout, however, only performs well on balance trees and it is not suitable for general tree visualization that we are concerning in this paper.</p><p>The Radial View -The radial view is based on an algorithm described in Eades <ref type="bibr" target="#b7">[8]</ref> -recursively positions children of a sub-tree into circular wedges. The angles of these wedges are proportional to the number of leaves of the sub-tree. The algorithm is simple and it behaves well in general. This technique, however, is also not optimized in the use of available space. In <ref type="figure" target="#fig_2">Figure 3</ref>, we see that there are many unused holes in the geometrical plane that waste a large portion of the display space.</p><p>The Balloon View -This layout is formed where siblings of sub-trees are included in circles attached to the father node. The balloon view can also be obtained by projecting a cone tree <ref type="bibr" target="#b13">[14]</ref> onto a plane. The algorithm behaves well on balance trees. Similarly to the radial view, it wastes a large portion of the display space (see <ref type="figure" target="#fig_3">Figure 4</ref>). <ref type="bibr" target="#b9">[10]</ref>. This layout technique constructs trees in hyperbolic plane and then maps that structure into ordinary Euclidean plane. The algorithm produces nice tree visualization in side a disc and it is quite capable for visualizing large hierarchies. There are several implementations are available at Inxight-Xerox <ref type="bibr" target="#b0">1</ref> . In spite of being a good layout technique, hyperbolic browser does not use entirely <ref type="bibr" target="#b0">1</ref> http://www.inxight.com/ rectangular space to display information but only the area within the internal disc (see <ref type="figure" target="#fig_4">Figure 5</ref>). It also produces a large portion of the unused display space Tree-Maps -Unlike other traditional layout techniques, tree-maps <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b11">12]</ref> represent hierarchical structures using enclosure. <ref type="figure" target="#fig_5">Figure 6</ref> shows that each node is mapped to a rectangular area, then that area is subdivided in X or Y to show the relative size of the children of the node. The process is recursively applied to the children nodes with the subdivisions on the X-or Y-axis. This technique, as was claimed by Brian 1991, optimizes the use of all available space (see <ref type="figure" target="#fig_5">Figure 6</ref>). However, the lack of edges linking between nodes might prevent viewers from understanding the relationship of information. The viewers cannot direct see relationships. This makes it much hard for viewers in percept and understanding of the relational structures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Hyperbolic Browser -Hyperbolic layout is a new technique developed by Lamping and Rao</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2.">Space-optimized tree visualization</head><p>Although many visualization techniques have been proposed for dealing with tree visualization, there are only few are good candidates considering the issue of optimizing display space in the layouts design.</p><p>The Connection approach, such as hyperbolic tree <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b9">10]</ref>, uses a node-link diagram to present relationships among data, allowing viewers to directly see the relationships that are usually drawn as a set of graphical edges appearing in the diagram. However, layouts produced by connection approach are usually containing many unused spaces that waste the display space and reduce the number of displayed nodes and edges on the screen.</p><p>On the other hand, Tree-maps <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b11">12]</ref> claims 100% efficiency of space utilization. However, they do not show directly the relational structures of information by providing links to connect nodes. This costs extra cognitive effort of viewers in understanding the relational structures that are presented in an enclosure manner.</p><p>Noticeably, Cheswick and Burch have presented a nice technique for Internet mapping <ref type="bibr" target="#b4">[5]</ref>. The technique yields very large tree-like structure (100,000 nodes or more) by using a node-spring approach and a number of heuristics. However, the running cost of this technique is high and a typical layout run requires 20 CPU hours on a 400 MHz Pentium. <ref type="bibr" target="#b4">[5]</ref> This paper presents a new simple and fast technique for tree visualization in 2D planes. Similar to tree-maps, we also use area division to define the layout of sub-trees. This ensures the 100% efficiency of space utilization. On the other hand, we still use a node-link diagram (as traditional display techniques do) to show the hierarchy relationships of information. This improves dramatically the clarity of the data structure.</p><p>Our strategy is to optimize the drawing of trees in a geometrical plane and maximize the utilization of display space by allowing more nodes and links to be displayed at a limit screen resolution. We use the enclosure to partition the display space into a collection of geometrical areas, then these areas are assigned to all nodes of the tree. We also use node-link diagrams to show the relational structure. Our technique is similar to the radial drawing that uses a term wedge for positioning sub-trees. However, in radial drawing the layout of a sub-tree is not restricted in a particular of geometrical area, but only a clock-wise angle α and a direction for tree extension. In contrast, out technique uses two terms, wedge and local region, for the positioning of sub-trees. The layout of a sub-tree in our technique is restricted in a particular local region.</p><p>We take both advantages of two approaches, the enclosure and the connections. To enable the exploration of large hierarchies, we use a modified semantic zooming technique to move a detailed view of a particular area of hierarchy around based on user's interest. Layout animation is also provided to preserve the mental map while the user is exploring the hierarchy by changing zoomed views. Section 2 describes technical specifications of our technique including the detail of space-optimized tree layout, navigation and interaction, and animation. Section 3 discusses the implementation of our technique on various data sets. Finial session is our future work and conclusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Technical Specification</head><p>Our space-optimizing technique can only be applied to rooted trees. We now review the terminologies that are used in our technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Terminology</head><p>A tree is a connected acyclic graph. A rooted tree consists of a tree T and a distinguished vertex r of T. The vertex r is called the root of T. In other words, T can be viewed as a directed acyclic graph with all edges oriented away from the root. If (µ,ν) is a directed edge in T, we then say µ is the father of ν and ν is a child of µ. A leaf is a vertex with no children. If T contains a vertex ν, then the sub-tree T(ν) rooted at ν is the sub-graph induced by all vertices on paths originating from ν. We also use a node to represent a vertex ν with its displaying properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>This terminology is mainly mentioned in display session.</head><p>A geometrical local region of the vertex ν in T is defined as a convex polygon P(ν), that contains the drawing of a sub-tree T(ν) and a directed edge <ref type="figure">(µ,ν)</ref> where µ is the father of ν. A wedge wg(ν), in our implementation, is defined by a vertex µ, a line l goes through that µ, and a clock-wise angle α(ν); where µ is the father of ν (see <ref type="figure" target="#fig_6">Figure 7)</ref>. Thus we have wg(ν) = {µ, l, α(ν)}.</p><p>A weight w(ν) is a integer value that associated with a vertex ν in T. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">Geometrical Layout</head><p>The geometrical drawing D(T) of a tree T is responsible for the positioning of a set of vertexes {r,ν 1 ,ν 2 , …,ν n } and the computation of local regions P(ν 1 ), P(ν 2 ), …, P(ν n ) for the drawing of sub-trees T(ν 1 ), T(ν 2 ), …, T(ν n ) in a 2D plane.</p><p>Each vertex ν i is bounded by a polygon P(ν i ). The area of P(ν i ) is equal to the total areas of local regions of its children. The drawing of a sub-tree T(ν i ) is restricted within the area of P(ν i ). See an example in <ref type="figure" target="#fig_7">Figure 8</ref>.</p><p>A drawing of sub-tree T(ν i ) rooted at ν i is calculated based on the properties of ν i and its boundary P(ν i ). We firstly define the local region P(r) for root r as the entire display area, and the position of root r is at the center of P(r). Then, all local regions P(ν 1 ), P(ν 2 ), …, P(ν n ) are calculated recursively as described below:</p><p>Suppose that we want to calculate the region P(ν i ) of the sub-tree T(ν i ) rooted at ν i which has k children {ν l , ν l+1 , …,ν l+k-1 }.</p><p>• We firstly calculate local regions P(ν l ), P(ν l+1 ), …, P(ν l+k-1 ) for the children {ν l ,ν l+1 , …,ν l+k-1 }. • We then calculate positions of {ν l ,ν l+1 , …,ν l+k-1 } that are inside their local regions P(ν l ), P(ν l+1 ), …, P(ν l+k-1 ). • We repeat the above calculation to all sub-trees from the top to the bottom of the tree hierarchy and it stops when all leaves of the tree are reached. • We technically ignore the layout calculations for those sub-trees when local regions of these sub-trees are too small to be displayed by the current screen resolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• We eventually get P(ν i ) = P(ν l ) ∪ P(ν l+1 ), …, ∪ P(ν l+k-1 )</head><p>Weight calculationwe assign a weight w(ν i ) to each vertex ν i for the calculation of the local region P(ν i ) in relatively to its father. A weight is a integer value that is associated with a vertex in T. We have a set of weights {w(ν 1 ), w(ν 2 ), …, w(ν n )} associated with the vertex set {ν 1 ,ν 2 , …,ν n } in T. This set can be calculated recursively from leaves in the following rules:</p><formula xml:id="formula_0">• If ν i is a leaf, its weight is w(ν i ) = 1 • If ν i has k children {ν l ,ν l+1 , …,ν l+k-1 }, its weight is w(ν i ) = ∑ − = + + 1 0 ) ( 1 k j j l v w C</formula><p>Where C is a constant (0 &lt; C &lt; 1), and w(v l+i ) is the weight assigned to l th child of ν i .</p><p>Constant C is a scalar that determines the difference between the weight of a vertex and their children. In other words, the larger the C's value is, the bigger the difference of local regions between vertexes with more descendants and vertexes with fewer descendants. We apply a constant C = 0.6 in our prototype system.</p><p>Wedge calculationwe use wedges to find positions of vertexes and calculate the local regions for these vertexes.</p><p>Suppose that a vertex ν i has k children {ν l ,ν l+1 , …,ν l+k-1 } located in a local region P(ν i ). We want to divide P(ν i ) into sub-regions P(ν l ), P(ν l+1 ), …, P(ν l+k-1 ) for the drawings of sub-trees T(ν l ), T(ν l+1 ), …, T(ν l+k-1 ).</p><p>A sub-region P(ν l+m ) of the m th child of ν i consists of a wedge wg(ν l+m ) and one (or more) cutting edges (boundaries) cut by other higher level local regions in the drawing.</p><p>A wedge is defined as wg(ν l+m ) = {ν i , l, α(ν l+m )}, where ν i is the father of ν l+m and l is a straight line going through ν i that determines two boundaries of P(ν l+m ).</p><p>The angle α(ν l+m ) of the wedge wg(ν l+m ) of the m th child is calculated by the formula below:</p><formula xml:id="formula_1">α(ν l+m ) = ∑ = + + k j j l m l v w v w A 0 ) ( ) (</formula><p>Where A is a constant (A = 360 o ) and w(ν l+j ) is the weight associated with vertex ν l+j .</p><p>We repeat the above calculation to get a set of wedges {wg(ν 1 ), w(ν 2 ), …, w(ν n )} associated with every vertex in tree T. These wedges determine the area division of local regions. <ref type="figure" target="#fig_7">Figure 8</ref> shows an example of dividing v i 's local region into 4 sub-regions for its children</p><formula xml:id="formula_2">{ν l+1 , ν l+2 , ν l+3 , ν l+4 }. Local region P(v i ) of v i is a pentagon and {α(ν l+1 ), α(ν l+2 ), α(ν l+3 )</formula><p>, α(ν l+4 )} are respectively the angles of wedges {wg(ν l+1 ), wg(ν l+2 ), wg(ν l+3 ), wg(ν l+4 )}. <ref type="figure" target="#fig_8">Figure 9</ref> shows an example of area division of a data set.</p><p>Vertex positionthe position of a vertex v l+m is computed after the calculation of local region P(v l+m ). We need to find out a point P in the boundary of P(v l+m ) that the straight line connecting P and the father vertex ν i divides P(v l+m ) into two areas of the same size. We then choose the position of the v l+m in the midpoint of the line. See an example in <ref type="figure" target="#fig_0">Figure 10</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Navigation and Interaction</head><p>To be able to explore large hierarchies with detailed viewing, we use a modified semantic zooming technique <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b16">16]</ref> to display the detail of a particular part of the hierarchy based on user's interest at a time. When being selected by a mouse-click, the selected node moves forward to the position of the root. All its ancestors and siblings are ignored except a few ancestors are kept as a history path for the tracking of navigation. The local region of the selected node now expands to the entire display area. In other words, during the navigation, we only visualize the sub-tree of selected node and a history path (including the root). This viewing technique requires the recalculation of positions of all vertexes in a sub-tree at a time in corresponding to a mouse click (see <ref type="figure" target="#fig_0">Figure  11</ref>).</p><p>As same as the area division where a child's area is always smaller than its father, we also apply this rule to our viewing technique. The size of nodes and the width of edges we choose are proportional to their levels in the hierarchy. In order words, the closer to the root, the larger of nodes and the wider of edges are. This rule improves the clarity of the presentation of tree hierarchies.</p><p>As mentioning above, the history path is created for backward navigating purpose. The path displays orderly all direct-ancestors of the selected node. We assign different graphic properties to these ancestors to distinguish them from the normal nodes for the enhancement of clarity.   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Animation</head><p>Animation is used preserve mental map when the view is changing. This is a real challenge because our technique focuses on visualizing very large hierarchies. The expensive computation of big data set (more than 10000 nodes) might disrupt smooth animation.</p><p>Therefore, we only apply animation to those nodes that are visible in the screen resolution. As a result, the number of nodes need to be involved in animation is reduced dramatically to from a few tens up to a few hundreds. In addition, during the animation period, edges are drawn and calculated with a minimal width. This also decreases remarkably the animation cost.</p><p>When a node is selected, all siblings and ancestors of this node are blurring away gradually while the selected node moves to its father's position. During that movement, all descendants of the selected node will smoothly move to and occupy the space of selected node's father. The animation stops when the selected node reaches the root position (the center of the display area).  <ref type="figure" target="#fig_0">Figure 12</ref> shows the visualization of a medium size data set with 150 nodes where viewers can easily see all data items and relations among nodes. <ref type="figure" target="#fig_0">Figures 13 and 14</ref> show the layout of two large and very large relational data sets. <ref type="figure" target="#fig_0">Figure 15</ref> shows an example of applying our technique for visualizing a uniform data structure. Overall, the amount of data does not affect significantly in the display of overall tree structures by using our layout technique. These examples illustrate the high capability of our technique for visualizing large hierarchical structures for various data sets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Examples</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Conclusion and future work</head><p>Space-optimized tree visualization is an effective and efficient technique for visualizing large tree structures. Our algorithm can draw the entire tree of large data sets at the screen resolution. This allows viewers to navigate and view any part of the large tree structures with the assistant of our modified semantic zooming technique.</p><p>We are currently investigating on new animation algorithms to find out the one that is most suitable for the space-optimized tree visualization. Another improvement over the original layout is also being implemented. This algorithm uses area approach to define a node boundary based on its weight instead of wedge angle. We also investigate on new viewing techniques that can keep the global view of the entire tree structures while a detailed view of a part of the tree can be displayed during the navigation. In addition, we are working on usability test to demonstrate the benefits of our technique.</p><p>We have presented our space-optimized tree technique for visualizing and manipulating large hierarchies. Although our work is not completed yet, we believe that this technique will become a valuable tool for visualizing a variety of the large real tree-structural data sets. <ref type="figure" target="#fig_0">Figure 12</ref>. Example with a medium large data set of approximately 150 nodes <ref type="figure" target="#fig_0">Figure 13</ref>. Example with the data set of approximately 9000 nodes <ref type="figure" target="#fig_0">Figure 14</ref>. Example with the data set of approximately 55000 nodes (A run of the above layout takes approximately 5 CPU minutes on a 1000 Mhz Pentium III PC, using Java Applet) <ref type="figure" target="#fig_0">Figure 15</ref>. Example with the 11 levels uniform binary tree (approximately 4000 nodes)</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Tree layout for a moderately large graph</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>H-tree layout</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>Radial view</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 .</head><label>4</label><figDesc>Balloon view</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 .</head><label>5</label><figDesc>Hyperbolic browser</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 .</head><label>6</label><figDesc>Tree-maps</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 .</head><label>7</label><figDesc>A wedge wg(ν)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 .</head><label>8</label><figDesc>An example of dividing ν I ' s local region into children 's local regions of 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 .</head><label>9</label><figDesc>Example of area division</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 10 .Figure 11 .</head><label>1011</label><figDesc>Example of positioning a vertex Example when a node is selected</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figures 12 through 15</head><label>15</label><figDesc>are examples of applying our new technique on 4 data sets. These pictures are screen dumps collected from our computers with a standard screen resolution (1024x768).</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Herman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Melançon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Marshall</surname></persName>
		</author>
		<title level="m">Graph Visualization in Information Visualization: a Survey&quot; In: IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="24" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Tree-maps: A space-filling approach to the visualization of hierarchical information structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1991 IEEE Visualization</title>
		<meeting>the 1991 IEEE Visualization<address><addrLine>Piscataway, NJ</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="284" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Algorithms for Drawing Clustered Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quingwen</forename><surname>Feng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Thesis of Doctor of Philosophy</title>
		<meeting><address><addrLine>Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997-04" />
		</imprint>
		<respStmt>
			<orgName>The Department of Computer Science and Software Engineering, The University of Newcastle</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fractal Approaches for Visualizing Huge Hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hideki</forename><surname>Koike</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hirotaka</forename><surname>Yoshihara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1993 IEEE Symposium on Visual Languages</title>
		<meeting>the 1993 IEEE Symposium on Visual Languages</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="55" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Internet Mapping Project</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hal</forename><surname>Burch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bill</forename><surname>Cheswick</surname></persName>
		</author>
		<ptr target="http://www.cs.bell-labs.com/who/ches/map/index.html" />
		<imprint/>
		<respStmt>
			<orgName>Bell Labs</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Tidier Drawing of Trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Reingold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Tilford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering, SE</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="223" to="228" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Arrangements of Planar Graphs on the Planar Lattices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shiloach</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976" />
			<pubPlace>Rehovot, Israel</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Weizmann Institute of Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD Thesis</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Drawing Free Trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Bulleting of the Institute fro Combinatorics and its Applications</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="10" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Reconfigurable Disc Trees for Visualizing Large Hierarchical Information Space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Jeong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization (InfoVis &apos;98)</title>
		<meeting>the IEEE Symposium on Information Visualization (InfoVis &apos;98)</meeting>
		<imprint>
			<publisher>IEEE CS Press</publisher>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The Hyperbolic Browser: A Focus + Context Technique for Visualizing Large Hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lamping</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages and Computing</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="55" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Graph Drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Di Battista</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tamassia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">G</forename><surname>Tollis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="16" to="28" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Treemaps for Space-Constrained Visualization of Hierachies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shneiderman</surname></persName>
		</author>
		<ptr target="http://www.cs.umd.edu/hcil/treemaps" />
		<imprint>
			<date type="published" when="1998-12-26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">NichesWorks -Interactive Visualization of Very Large Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Graham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wills</surname></persName>
		</author>
		<ptr target="http://www.bell-labs.com/user/gwills/NICHEguide/nichepaper.html" />
	</analytic>
	<monogr>
		<title level="m">Lucent Technologies (Bell Laboratories), USA</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<title level="m">Cone Trees: Animated 3D Visualizations of Hierarchical Information</title>
		<imprint/>
	</monogr>
	<note>Human Factors in Computing Systems, CHI &apos;91</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m">Conference Proceedings</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="189" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Information Visualization Using 3D Interactive Animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communication of the ACM</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="57" to="71" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">MuSE: A Multi-Scale Editor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Furnas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of the UIST&apos;98 Symposium</title>
		<meeting>eeding of the UIST&apos;98 Symposium</meeting>
		<imprint>
			<publisher>ACE Press</publisher>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Visualizing the Evolution of Web Ecologies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Huai-Hsin Chi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jock</forename><surname>Pitkow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oeter</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rich</forename><surname>Pirolli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><forename type="middle">K</forename><surname>Gossweiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Card</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding of ACM CHI 98 Conference on Human Factors in Computing Systems</title>
		<meeting>eeding of ACM CHI 98 Conference on Human Factors in Computing Systems<address><addrLine>Los Angeles, California</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="644" to="645" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
