<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualization Schemas for Flexible Information Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>North</surname></persName>
							<email>north@cs.vt.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Center for Human Computer Interaction Department of Computer Science</orgName>
								<orgName type="institution">Virginia Polytechnic Institute and State University Blacksburg</orgName>
								<address>
									<postCode>24061</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nathan</forename><surname>Conklin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Human Computer Interaction Department of Computer Science</orgName>
								<orgName type="institution">Virginia Polytechnic Institute and State University Blacksburg</orgName>
								<address>
									<postCode>24061</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Varun</forename><surname>Saini</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Center for Human Computer Interaction Department of Computer Science</orgName>
								<orgName type="institution">Virginia Polytechnic Institute and State University Blacksburg</orgName>
								<address>
									<postCode>24061</postCode>
									<region>VA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visualization Schemas for Flexible Information Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Relational databases provide significant flexibility to organize, store, and manipulate an infinite variety of complex data collections. This flexibility is enabled by the concept of relational data schemas, which allow data owners to easily design custom databases according to their unique needs. However, user interfaces and information visualizations for accessing and utilizing databases have not kept pace with this level of flexibility. This paper introduces the concept of Visualization Schemas, based on the Snap-Together Visualization model, which are analogous to relational data schemas. Visualization schemas enable users to rapidly construct customized multiple-view visualizations for databases in a similarly flexible fashion without programming. Since the design of appropriate visualizations for a given database depends on the data schema, visualization schemas are a natural analogy to the data schema concept.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Advances in database technology have enabled the widespread collection and proliferation of data. A major contributor to this success is the advent of relational databases, perhaps the most popular storage platform, and its concept of relational data schemas. Data schemas enable data owners to design and define custom database instances that satisfy their unique needs. They do not need to program a new database system, but can simply use data schema tools to organize and manipulate a custom structure for their particular data set. This high level of flexibility supports the definition of an infinite variety of databases, and clearly has had great positive impact on the storage of vast quantities of information.</p><p>However, there has not been a similar level of flexibility for constructing effective user interfaces and information visualizations for databases. The design of an appropriate visualization for a given database depends greatly on the data schema and user tasks. Because each data schema is unique, each database requires a unique visualization. General-purpose visualization tools (such as Spotfire <ref type="bibr" target="#b0">[AW95]</ref>) can be applied, but often are only a partial solution. For non-trivial data schemas and tasks, appropriate visualizations must be custom programmed. This is an expensive and time consuming effort, even when general-purpose visualizations are utilized within the solution. As a result, many databases do not have adequate visualizations, and data is vastly underutilized.</p><p>Furthermore, the flexibility of data schemas enables frequent database modifications. In rapidly evolving dataintensive environments (e.g. bioinformatics), data schemas and domain tasks are in constant flux. As a result, visualizations developed for a specific database are often obsolete by the time they are implemented. Developers are forced to redesign and re-implement, but often cannot keep pace with the rate of change. The problem is exacerbated by the fact that different users and tasks often require different visualizations for the same database.</p><p>As shown in <ref type="figure" target="#fig_0">Figure 1</ref>, this problem represents a fundamental mismatch in design capability between databases and visualization. As an analogy, consider the case if each data schema instance required the data owner to implement a custom database system to store the data. As a result, information visualization researchers and developers often face a common dilemma: At one end of the spectrum, specialized visualizations are very effective for specific targeted data schemas and tasks, but are not broadly applicable to different situations. At the other end of the spectrum, general visualizations can be designed for a broad class of data schemas and tasks (e.g. a scatterplot correlates any 2 numerical attributes), but are not fully adequate for the detailed nuances of individual situations (e.g. 2 attributes that measure health demographics and relate to geography and DNA sequences). This paper introduces the concept of visualization schemas as a solution to this problem. Visualization schemas are based on the Snap-Together Visualization (Snap) model <ref type="bibr" target="#b12">[NS00]</ref>, and enable database owners or users to rapidly construct custom multiple-view visualizations for databases without programming. Visualization schemas provide an analogy to relational data schemas, and enable a flexible and coordinated approach to the design of data and the design of data visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Research on flexible construction of visualizations for databases has focused primarily on visualizing single relations (e.g. a single table or query result). Tools such as APT <ref type="bibr" target="#b10">[Mac86]</ref>, Sage/SageBrush <ref type="bibr" target="#b15">[RCK97]</ref>, DEVise <ref type="bibr" target="#b11">[LRB97]</ref>, DataSplash <ref type="bibr" target="#b1">[ACS96]</ref>, and Spotfire <ref type="bibr" target="#b0">[AW95]</ref> enable users to construct visualizations of a single relation by mapping data tuples to visual marks, and then mapping tuple attributes to visual properties of the marks (e.g. x, y, size, color). APT and Sage use an automated approach. DEVise, DataSplash and Spotfire use form-based dialog boxes to let users match data attributes to visual properties. SageBrush most closely resembles visualization schemas, using a visual language and user interface similar to a paintbrush program. Many of these systems enable the simultaneous display of multiple such visualizations of the relation, linked for brushing <ref type="bibr" target="#b3">[BC87]</ref>.</p><p>DEVise and DataSplash enable users to link the visualizations for synchronized pan and zoom. <ref type="bibr" target="#b14">[PCS95]</ref> provides a visual specification for such links. In LinkWinds <ref type="bibr" target="#b9">[JBO94]</ref>, users can link views into a pipeline for filtering data.</p><p>For databases containing multiple relations, Visage/VQE <ref type="bibr" target="#b5">[DRK97]</ref> extends attribute mapping, brushing, and dynamic queries to multiple relations. Users can perform the operations on tuples and attributes in different relations that are associated by a join. DataSplash lets users construct 'wormholes' in a semantic zooming space that lets them drill down across relations by zooming in. RMM <ref type="bibr" target="#b7">[ISB95]</ref> uses a hypertext schema approach, similar to visualization schemas, based on entity-relationship diagrams to construct data-driven websites. Tuples map to web pages, relations map to index pages, and associations map to hyperlinks.</p><p>Dataflow systems such as AVS <ref type="bibr" target="#b19">[UFK89]</ref> and GeoVista <ref type="bibr" target="#b18">[TG02]</ref> enable flexible specification of data flow networks. Because of the focus on computationally intensive scientific-visualization applications, dataflow diagrams have evolved more as a representation for data processing rather than a specification for visualizations or user interfaces (perhaps away from Haeberli's original vision with ConMan <ref type="bibr" target="#b6">[Hae88]</ref>). Due to the complexity of such environments, dataflow systems are generally geared towards programmers as users.</p><p>There are many flexible visualization toolkits and frameworks, such as Rivet <ref type="bibr" target="#b4">[BST00]</ref> and Sieve [IBW97], that can produce similar multiple-view visualizations as visualization schemas, but require programming.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Database Background</head><p>Relational databases consist of three major layers: The relational data model provides compositional principles to organize information in a structured form that is usable and manipulable. Relational data schemas enable users to define a custom structure for a particular dataset. Relational database management systems (DBMS) implement the model and schema. Together, these layers enable users to organize, store, manipulate, and share data in a flexible and customized fashion.</p><p>From the users' perspective, the design flexibility is accomplished through the use of data schemas. Relational data schemas provide several primitives that users compose to create a database: attributes, tuples, and relations. Many modern database systems also explicitly represent join associations (primary-and foreign-keys).</p><p>Many database systems provide a visual language for data schemas in the form of a diagrammatic, direct manipulation user interface. Diagrammatic data schemas are generally represented as a graph. Nodes represent relations, and each node shows a list of its attributes. Edges represent join associations.</p><p>Directed edges represent one-to-many associations, and undirected edges represent one-to-one associations.</p><p>For example, <ref type="figure" target="#fig_1">Figure 2</ref> shows the data schema for a database of website hits in Microsoft Access. The database contains information about the website's pages ("URLs"), hits to pages, external referring pages that link to the website's pages, etc. A one-to-many association exists between pages and hits. Data schemas, especially diagrammatic data schemas, have many important benefits:</p><p>• Enables data owners to define and modify the structure of a database using a simple language. • Provides guidance for data design, and enforces rules of the data model (e.g. validity).</p><p>• Provides an overview of database structure to help other users understand database contents. • Provides usability for data storage tasks.</p><p>• Enables systems to store and interpret database contents interchangeably. Visualization schemas can have similar benefits for visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Snap-Together Visualization</head><p>Visualization schemas are based on Snap-Together Visualization (Snap). The primary goal of Snap is to enable a level of flexibility in visualization design that rivals that of data design. To accomplish this, the primary guiding principle of Snap is to establish a tight analogy between relational database concepts and visualization concepts (summarized in <ref type="figure" target="#fig_2">Figure 3</ref>). Snap consists of three visualization layers that are analogous to and extend the three relational database layers: The Snap visualization model extends principles of the relational data model to the visualization realm (reported in <ref type="bibr" target="#b12">[NS00]</ref>).</p><p>Snap visualization schemas are analogous to relational data schemas, enabling users to define custom visualizations for databases. The Snap visualization server operates on top of a relational DBMS.</p><p>The Snap visualization model is based on composition of multiple-views. In the multiple-view visualization approach, data is displayed in several different views (called visualization components). Different components may display the same or different portions of the data. These components are then tightly coupled (or coordinated) in a variety of ways <ref type="bibr" target="#b13">[Nor01]</ref> such that interacting with one component causes meaningful effects in others. This produces an integrated composite or multiple-view visualization <ref type="bibr" target="#b2">[BWK00]</ref>.</p><p>Snap's basic assumption is that the fundamental unit of creative design in information visualization is an individual visualization component. A secondary goal of Snap is to leverage component implementations from the field. Our hope is that this will create a pipeline that transfers tools from research to practical application, and thus facilitates information visualization in "crossing the chasm" <ref type="bibr" target="#b17">[Shn01]</ref>. Visualization components are donated by their inventors; coordinations are constructed by users.   Then, when users highlight items in one plot, the associated items are automatically highlighted in the other plot. See <ref type="bibr" target="#b13">[Nor01]</ref> for a taxonomy of other coordinations. Visualization schema diagrams are represented visually similar to data schema diagrams. Visualization schemas are represented as a graph. Nodes represent instantiated visualization components. Nodes indicate the visualization type, including a miniature icon of the visualization, and the data relation displayed in the visualization. The actual visualization that the node represents is displayed in the visualization workspace in a separate frame elsewhere on the screen. Edges represent coordinations between visualizations. Edges indicate the actions that are tightly coupled on each side of the coordination, the join association keys, and the join type (one-to-one or one-to-many).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Visualization Schemas</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Example</head><p>With the above database of website hits, we construct a visualization of the website, page popularity, and referring pages. <ref type="figure">Figure 4</ref> shows the constructed visualization workspace, and <ref type="figure" target="#fig_3">Figure 5</ref> shows its visualization schema. First, we construct a simple website browser with visualization of page popularity (top 3 components in both Figures).</p><p>To design the visualization, dragging the URLs relation into the visualization schema, and selecting a standard tree-view visualization from a menu, displays the top-left node in the schema.</p><p>In the visualization workspace, the tree structure of the website is displayed in the tree-view visualization component (top-left). Similarly, the URLs relation is again dragged and displayed in a Treemap visualization component (top-center).</p><p>The number of hits to each page (popularity) is mapped to rectangle size and color in the Treemap.</p><p>In the visualization schema, dragging a link from the tree-view to the Treemap establishes a coordination. The 'select' actions are chosen on both ends for tight coupling to enact a brushing type of coordination. The implicit oneto-one join between URLs and URLs is automatically chosen. Now, in the visualization workspace, selecting web pages in either the tree-view or Treemap also selects and highlights the pages in the other. Users can browse from either perspective.</p><p>The URLs relation is dragged and displayed in a webbrowser component (top-right). A link is dragged from the Treemap to the web-browser icons, and the 'select' and 'load' actions are chosen respectively. Now, selecting a page in the Treemap or tree-view will load that URL into the web-browser and display the actual web page. The designed visualization now enables users to browse the website from the tree-view and popularity Treemap perspectives and view desired pages.</p><p>We then add the capability to visualize referring pages (bottom 2 components in both Figures). The scatterplot and web-browser components at the bottom display data about external web pages that refer readers to the site. Selecting a page in the tree-view or Treemap shows the page in the top web-browser, and displays referrers to that page in the scatterplot. The plot displays referrers alphabetically on the x-axis and by number of referred hits on the y-axis. Selecting a referrer in the plot displays the referring page in the bottom web-browser. The example shows that most readers discover the website's homepage through Google. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Interaction</head><p>Opening a new visualization component adds a node to the graph. Users can drag nodes to rearrange the graph. Users can change the visualization type of a node by selecting a new visualization component from the menu. For example, if the user initially displays a relation in a scatterplot, but then decides that a parallel-coordinates plot would better show the data, simply selecting the parallelcoordinates item will close the scatterplot and open the parallel coordinates plot in its place. Users can load and display a data relation into a component by dragging the relation from the data schema to the component's node. This can be repeated to display different data in the component. Furthermore, users can directly select which attributes of the relation to include in the component. This provides a quick and simple form of projection query that is common in visualization tasks.</p><p>Some visualization components require data attributes to be matched to visualization properties at load time. For example, a scatterplot component might have x-axis and yaxis properties.</p><p>The visualization schema interface enables users to specify these mappings by selecting data attributes for each property.</p><p>Dragging a link from one node to another establishes a coordination between the visualization components. Users select the user interface actions to coordinate from drop down menus on each end point of the edge. Each visualization component has its own set of coordinate-able user interface actions. Each action has a cardinality of either one or many. For example, a select action in some components might allow only one item to be selected at a time, whereas other components may support multiple selection. If a component is on the 'many' side of a coordinated join, then single item actions are grayed to indicate an inappropriate match.</p><p>Once actions are selected, the actual visualization instances will then behave in the specified coordinated fashion.</p><p>When coordinating, if there are multiple possible join paths between the visualization components' relations then the user can select the desired join path from a drop-down list. The join path can be a direct association between the two relations, or an indirect association that concatenates multiple joins through intermediate relations. The system uses the data schema to determine possible join paths, and automatically computes the necessary join query. Visualization components and coordinations can be eliminated using right-click menus.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Advantages</head><p>Visualization schemas have many advantages. Its direct manipulation approach enables users to construct and modify visualizations very rapidly. Because it closely resembles relational data schemas, its learning time is greatly reduced from the previous form-based approach <ref type="bibr" target="#b12">[NS00]</ref> and it helps users learn the Snap model concepts. Also, visualization schemas specify user interactions, which is a level that users are familiar with, in contrast to dataflow specifications which are at a much more detailed data processing level.</p><p>Furthermore, it provides a visual overview of the coordination structure of the visualization which helps users to quickly learn how to operate the visualizations and understand its response. This helps to solve a longstanding usability problem with multiple-view visualizations in general. Hence, visualization schemas improve usability of both the construction phase as well as the operation phase.</p><p>Visualization schemas also can provide a compact representation of visualizations for the purpose of browsing and recognizing many alternate designs. It also provides a context in which to show other information related to visualizations and their use, such as animations of propagation of actions through the coordination graph or saved sequences of actions such as macros.</p><p>Finally, it enables a new level of flexibility in visualization that matches that of databases, enabling users to not only store data but visualize it as well. It does not require programming, which enables visualizations to be updated along with dynamic database schemas.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Datacompass</head><p>The DataCompass is an alternate form of visualization schema intended for novice users or very complex database schemas. Visualization schemas employ a two step process for construction. Users first display data in visualization components, then coordinate the components. This approach requires users to have some forethought about their visualization design goal and familiarity with the data schema. While this may be appropriate for datasavvy users, novices need more guidance especially when using databases with many relations and complex schemas.</p><p>To this end, DataCompass simplifies construction to a single step process. Starting with an initial relation displayed in a visualization component, DataCompass enables users to navigate to associated relations by simply selecting it from a compass-like layout. The associated relation opens in another visualization component and automatically coordinated to the previous component. Hence, it answers the question "what data can I navigate to from here?", and provides a fast mechanism for coordinating to the chosen relation.</p><p>In DataCompass, the current visualization component and relation is shown highlighted in the center. This is the component that the user most recently interacted with, or invoked DataCompass from. The relations that the user can coordinate to the current component are placed in the DataCompass based on their join association to the current component's relation. The relationships are automatically determined from the data schema.</p><p>The relations are divided into three groups according to hierarchical associations: ( <ref type="figure" target="#fig_4">Figure 6)</ref> • One-to-many towards the current relation: displayed on the north of the compass. • One-to-one: displayed on the east and west.</p><p>• One-to-many towards the other relation: displayed on the south. The DataCompass <ref type="figure" target="#fig_5">(Figure 7</ref>) initially shows only directly associated relations for simplicity, but additional levels of associations are available by mouse-over. If a relation has multiple join paths to the current relation, it is shown in multiple places and labels indicate relevant keys.</p><p>Users can then select any of the relations on the DataCompass to visualize and coordinate it to the current visualization component. When selecting a relation, users are prompted to choose a visualization type and the actions to coordinate. The relation is then immediately displayed and coordinated.  In the DataCompass, yellow nodes represent relations that are already displayed in visualization components. Red nodes represent relations in the data schema. Green edges represent existing coordinations between instantiated components. Gray edges represent potential coordinations to data relations or instantiated components. This enables users to coordinate to existing instantiated components, alter existing coordinations, or instantiate and coordinate new components.</p><p>If a relation is displayed in multiple components, then it will have multiple nodes in DataCompass. Also, there is always a red node for each relation, even if the relation has already been displayed in a component. The focus relation always shows a sibling one-to-one association with itself. This enables users to instantiate multiple components for a relation, perhaps for a brushing style coordination.</p><p>Visualization Schemas and DataCompass are interchangeable.</p><p>Using DataCompass builds up the visualization schema. At any time, users can switch between the two.</p><p>Visualization Schemas and DataCompass are two different approaches that match two different user tasks in Snap. Visualization schemas are designed for a top down approach in which users have a partially defined idea of their desired visualization design. They construct a visualization so that they (or others) can explore the data. This is similar to the goal-oriented approach taken when structuring data using data schemas. Typically, these users are knowledgeable about relational database concepts and the data schema. Whereas, DataCompass is designed for a bottom up approach that is more exploratory in nature. Users are novices or unfamiliar with the data schema, and construct a visualization workspace as a result of navigating and exploring the data. The Snap visualization server, analogous to the relational DBMS, is the software system that implements visualization schemas. The server is a web-based system that allows users to construct multiple-view visualizations of any accessible relational database. Snap server runs in a web browser and uses frames to organize multiple visualization components in a tiled space-filling fashion <ref type="figure" target="#fig_6">(Figure 8</ref>). This helps reduce window management problems. Users can add components by splitting frames horizontally or vertically. The visualization schema is tiled on the left side.</p><p>Users can save the visualization workspace and schema that they have constructed. The visualization can then be re-opened with a single URL. This allows users to easily publish and share their data and visualizations. Snap can also save each visualization component's state. Using event playback, Snap can reestablish each visualization component to its previously saved state. This technique provides for asynchronous collaboration, allowing users to share the insight that they gained while interacting with visualizations.</p><p>With Snap, users can connect to databases stored on their local client machine, on the Snap server, or on remote 3 rd party database servers such as the Census Bureau <ref type="figure" target="#fig_7">(Figure 9</ref>). Snap also leverages 3 rd party visualization components. Developers of visualization components can submit their components to the Snap server, enabling other users to utilize the components in their visualization schemas. Hence, the Snap server acts as a repository for visualization components, and facilitates the transfer of new components to practical application.</p><p>Snap server is implemented in Java. The software model is an event-based, implicit-invocation architecture. This allows component developers to be concerned only with firing and receiving events and not with explicitly coordinating with other components <ref type="bibr" target="#b16">[SG96]</ref>. To make their components snap-able, developers must implement our snapable programming interface. This interface is designed to be very simple and to minimize developers required effort. The three methods in the interface require that the component be able to load data given to it from Snap, send action events to Snap, and receive action events from Snap. The server is runtime extensible, meaning that developers can submit components without the need to recompile or restart the server.</p><p>The architecture also has an adapter layer that enables visualization components implemented in many different technologies to be coordinated in visualization schemas <ref type="figure" target="#fig_0">(Figure 10)</ref>. Hence, visualization components can be Javabeans, Java applets, ActiveX components, and Javascript pages. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions and Future Work</head><p>The primary contributions of this work are:</p><p>• The concept of Visualization Schemas as a natural extension to data schemas that enable a corresponding level of flexibility for constructing information visualizations as for storing data.</p><p>• The DataCompass variation that accommodates datanovice users and very complex data schemas.</p><p>• The Snap universal visualization server that enables collaboration and extensibility so that visualization schemas can leverage new visualization developments from the field Our future vision is of the integration of databases and interfaces ("Datafaces"), by integrating visualization schemas with data schemas. This will enable users to simultaneously manipulate the data and visualization, and to see how data and visualization relate. This will help to solve the frequent problems that occur when changes are made to a database that causes visualizations for the database to become obsolete. Datafaces would enable database administrators to recognize the impacts of data schema changes and immediately update visualizations to match. Furthermore, it would help users to modify data schemas for the purpose of generating a desired visualization. It may be possible for Datafaces to highlight invalidated conditions, suggest alternatives, or automatically produce visualizations based on heuristics (e.g. a multiple-view extension to Sage <ref type="bibr" target="#b15">[RCK97]</ref>). Such capability could enable every database to have an appropriate user interface.</p><p>Snap is available at: http://infovis.cs.vt.edu/</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 12: Datafaces concept 9 Acknowledgments</head><p>Thanks to Matt Clement, Jeevak Kasarkod, Rohit Kelapur, and Atul Shenoy for development contributions.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Mismatch in design capabilities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Diagrammatic data schema for a database of website hits in Microsoft Access.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Analogy between relational database concepts and visualization concepts enables amatching level of design capability.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FigureFigure 5 :</head><label>5</label><figDesc>Visualization schema for Figure 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>DataCompass conceptual design. In this example, a component displaying the URLs relation is the focus. DataCompass indicates that the user can now instantiate and coordinate to URL Properties, Requests, or URLs again.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>DataCompass implementation. In this example, the Requests relation has been shown in a component and is currently coordinated to Hosts and URLs relations. Potential new coordinatations are available to parent and sibling relations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Visualization schemas are shown adjacent to the visualization workspace.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Data schema access points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 :</head><label>10</label><figDesc>Snap server architecture.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>•</head><label></label><figDesc>Visualization component = relation. A visualization component is a view that displays a data relation or query result (we assume queries are integrated into the data schema as relations). A visualization component can be a hard-coded implementation or dynamically generated using the attribute-mapping technique. An example is a scatterplot component that displays a binary relation (or a binary projection of a relation with larger arity).• Visual item = tuple. Tuples are displayed as visual items in a visualization component. For example, a tuple is displayed as a dot in the scatterplot. User interactions in visualization components are tuple based. For example, users might select a set of items or zoom onto an item. • Visual property = attribute. Attributes are used by visualization components to compute graphics. Users map data attributes to component-specific visual properties. For example, an attribute maps to the x axis on the plot. • Coordination = join association. A coordination between two visualization components tightly couples them according to the join between their relations. User interactions on tuples in one component causes visual actions on associated tuples in the other component. Users choose the component-specific interactions to be tightly coupled. For example, a brushing coordination between two scatterplots of the same relation tightly couples the</figDesc><table><row><cell>Relation</cell><cell>Visual-</cell></row><row><cell></cell><cell>ization</cell></row><row><cell>Relation</cell><cell>Visual-</cell></row><row><cell></cell><cell>ization</cell></row></table><note>'highlight' actions across the implicit one-to-one join.</note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">IVEE: An Information Visualization and Exploration Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahlberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wistrand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Information Visualization &apos;95</title>
		<meeting>IEEE Information Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="66" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Tioga-2: A Direct Manipulation Database Visualization Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Aiken</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stonebraker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Woodruff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc, 12th Intl. Conference on Data Engineering</title>
		<meeting>12th Intl. Conference on Data Engineering</meeting>
		<imprint>
			<date type="published" when="1996-02" />
			<biblScope unit="page" from="208" to="217" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Guidelines for Using Multiple Views in Information Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Baldonado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Woodruff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kuchinsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Advanced Visual Interfaces</title>
		<meeting>Advanced Visual Interfaces</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Brushing Scatterplots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cleveland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technometrics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="127" to="142" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Rivet: A Flexible Environment for Computer Systems Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Bosch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Diane</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Gerth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mendel</forename><surname>Rosenblum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pat</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2000-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Coordinating declarative queries with a direct manipulation data exploration environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Derthick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Information Visualization Symposium</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="65" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">ConMan: A Visual Programming Language for Interactive Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Haeberli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SigGraph &apos;88</title>
		<meeting>ACM SigGraph &apos;88</meeting>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page" from="103" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">RMM: a methodology for structured hypermedia design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Isakowitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Stohr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Balasubramanian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="34" to="44" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Sieve: A Java-Based Collaborative Visualization Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><surname>Isenhour</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">"</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">"</forename><surname>Bo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Winfield</forename><forename type="middle">S</forename><surname>Begole</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Clifford</forename><forename type="middle">A</forename><surname>Heagy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shaffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<imprint>
			<date type="published" when="1997-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">LinkWinds: interactive scientific data analysis and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jacobson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Berkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Orton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="43" to="52" />
			<date type="published" when="1994-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Automating the design of graphical presentations of relational information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mackinlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="111" to="141" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">DEVise: integrated querying and visual exploration of large datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Livny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Beyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Donjerkovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lawande</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Myllymaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wenger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMOD&apos;97</title>
		<meeting>ACM SIGMOD&apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="301" to="312" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Snap-Together Visualization: Can Users Construct and Operate Coordinated Views?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<idno>pg. 715-739</idno>
	</analytic>
	<monogr>
		<title level="j">Intl. Journal of Human Computer Studies</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">5</biblScope>
			<date type="published" when="2000-11" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Multiple Views and Tight Coupling in Visualization: A Language, Taxonomy, and System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. CSREA CISST 2001 Workshop on Fundamental Issues in Visualization</title>
		<meeting>CSREA CISST 2001 Workshop on Fundamental Issues in Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="626" to="632" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Image browsers: taxonomy, guidelines, and informal specifications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Plaisant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Software</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="21" to="32" />
			<date type="published" when="1995-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Towards an Information Visualization Workspace: Combining Multiple Means of Expression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chuah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kerpedjiev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lucas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Human-Computer Interaction Journal</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1&amp;2</biblScope>
			<biblScope unit="page" from="131" to="185" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Software Architecture: Perspectives on an Emerging Discipline</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Shaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Garlan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Prentice Hall, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Supporting Creativity with Advanced Information-Abundant User Interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Human-Centered Computing, Online Communities, and Virtual Environments</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="469" to="480" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">GeoVISTA Studio: A Codeless Visual Programming Environment For Geoscientific Data Analysis and Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Takatsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gahegan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Computers &amp; Geosciences</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The Application Visualization System: A Computational Environment for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Faulhaber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kamins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vroom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gurwitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="page" from="30" to="42" />
			<date type="published" when="1989-07" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
