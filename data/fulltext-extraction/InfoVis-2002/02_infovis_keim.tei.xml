<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Efficient Cartogram Generation: A Comparison</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
							<email>keim@research.att.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">C</forename><surname>North</surname></persName>
							<email>north@research.att.com</email>
							<affiliation key="aff0">
								<orgName type="laboratory">AT&amp;T Shannon Laboratory</orgName>
								<address>
									<addrLine>Florham Park</addrLine>
									<region>NJ</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Panse</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jörn</forename><surname>Schneidewind</surname></persName>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of Constance</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of Halle</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Efficient Cartogram Generation: A Comparison</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Cartograms are a well-known technique for showing geography-related statistical information, such as population demographics and epidemiological data. The basic idea is to distort a map by resizing its regions according to a statistical parameter, but in a way that keeps the map recognizable. In this paper, we deal with the problem of making continuous cartograms that strictly retain the topology of the input mesh. We compare two algorithms to solve the continuous cartogram problem. The first one uses an iterative relocation of the vertices based on scanlines. The second one is based on the Gridfit technique, which uses pixel-based distortion based on a quadtree-like data structure.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Cartograms are a powerful way of visualizing geography-related information. A cartogram is a generalization of an ordinary map, which is distorted by resizing its regions according a geographically-related input parameter. Example applications include population demographics <ref type="bibr" target="#b6">[7]</ref>, election results <ref type="bibr" target="#b4">[5]</ref>, and epidemiology. Because cartograms are difficult to make by hand, the study of automated methods is of interest.Cartograms can also be seen as a general information visualization technique. They provide a mean for trading shape against area to improve a visualization by scaling polygonal elements according to an external parameter. In population cartograms, by allocating more space to densely populated areas, patterns that involve many people are highlighted, while those involving fewer people are emphasized less. <ref type="figure">Figure 1</ref> shows a conventional map of the 2000 US presidential elections along with two population-based cartograms of the same information. The two cartograms are generated using the two methods which are compared in this paper.</p><p>In the cartogram, the area of the states is scaled to their population, so it reveals the close result of a presidential election more effectively than the professionally designed map in figure 1(a). For a cartogram to be effective, a human being must be able to quickly understand the displayed data and relate it to the original map. Recognition depends on preserving basic properties, such as shape, orientation, and contiguity. This, however, is difficult to achieve and it has been shown that the cartogram problem is unsolvable in the general case <ref type="bibr" target="#b3">[4]</ref>. Even when allowing errors in the shape and area representations, we are left with a difficult simultaneous optimization problem for which currently available algorithms are very time-consuming.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Cartogram Problem</head><p>The cartogram problem can be defined as a map deformation problem. The input is a planar polygon mesh (map) P and a set of values X , one for each region. The goal is to deform the map into P so that the area of each region matches the value assigned to it, doing this in such a way that the overall shape of the regions is preserved enough for them to remain recognizable. Intuitively, topology preservation means that the faces of the input mesh must stay the same, i.e. the cyclic order of adjacent edges in P must be the same as in P. This can be expressed formally by saying that the pseudo-duals 1 of the planar graphs represented by P and P should be isomorphic. It has been shown that a simple variant of the cartogram problem, which even ignores issues of shape preservation, is NP-complete <ref type="bibr" target="#b7">[8]</ref>. Since it may be impossible to simultaneously fulfill the area and shape constraints, the functions f (•. Previous Work There are several families of cartogram generators described in the literature. They range from simple non-continuous cartograms that merely scale and display disconnected polygons to sophisticated solutions that apply non-linear transformations or techniques from computational geometry to distort the map without breaking its topology <ref type="bibr" target="#b1">[2]</ref>. None of the methods mentioned so far cap-tures an explicit notion of shape-preservation. In contrast, the force-based approach in <ref type="bibr" target="#b4">[5]</ref> by a non-linear optimization process.</p><p>Our Contribution In this paper we compare two new methods for generating cartograms. The first one is a recently-proposed scanline-based local repositioning of vertices <ref type="bibr" target="#b3">[4]</ref>. The second one is a new approach based on the VisualPoints algorithm <ref type="bibr" target="#b2">[3]</ref>. We compare both techniques and discuss their advantages and problems. Real application examples support the usefulness of the techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Visualization Algorithm 2.1 The CartoDraw Solution</head><p>CartoDraw was recently proposed as a practical approach to cartogram generation <ref type="bibr" target="#b3">[4]</ref>. In this section, we outline the main ideas behind it and introduce some useful variations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The CartoDraw Algorithm</head><p>The basic idea of CartoDraw is to incrementally reposition the vertices of the map's polygons by means of scanlines. Local changes are applied if they reduce total area error without introducing an excessive shape error. The main loop iterates over a set of scanlines. For each scanline, it computes a candidate transformation of the polygons, and checks it for topology and shape preservation. If the candidate transformation passes the tests, it is made persistent, otherwise it is discarded. The order of scanline processing depends on their potential for reducing area error. The algorithm iterates over the scanlines until the area error improvement over all scanlines falls below a threshold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Scanline-based Local Repositioning</head><p>The input scanlines are arbitrary lines and may be computed automatically or entered interactively. The idea is to use line segments (called cutting lines) perpendicular to scanlines at regular intervals. Consider the two edges on the boundary of the polygon intersected by a cutting line on either side of the scanline. These edges divide the polygon boundary into two connected chains. Now, if the area constraints require that the polygon expanded, the algorithm applies a translation parallel to the scanline to each vertex on the two connected pieces of the boundary (in opposite directions) to stretch the polygon at that point. Similarly, if a contraction is called for, the direction of translation is reversed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The VisualPoints Solution</head><p>The VisualPoints system <ref type="bibr" target="#b2">[3]</ref> was developed to address the problem of overplotting spatially referenced data. It works by moving points that would be drawn on alreadyoccupied pixels to nearby unoccupied pixels instead of overplotting. VisualPoints assumes a hierarchical partitioning of the data space to support an efficient repositioning of the data points while preserving their distances and positions. In the following, we show how a similar idea can be applied to efficient cartogram generation. The basic idea is to insert a number of points proportional to its target area inside each polygon. The points are inserted into a hierarchical data structure, and the distortion implied by the data structure is then applied to reposition the vertices of the map.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The VisualPoints Algorithm</head><p>In each step of the VisualPoints construction, the data set is recursively partitioned into four subsets containing the data points in four equally-sized subregions. Since the data points may not fit into the four equally size subregions, we have to determine new extents of the four subregions (without changing the four subsets of data points) such that the data points in each subset can be visualized in their corresponding subregion. For an efficient implementation, a quadtree-like data structure manages the required information and supports the recursive partitioning process. The partitioning process works as follows. Starting with the root of the quadtree, in each step the data space is partitioned into four subregions. The partitioning is made such that the area occupied by each of the subregions (in pixels) is larger than the number of pixels belonging to the corresponding subregion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Generating Cartograms with VisualPoints</head><p>After the quadtree is constructed, it is applied to distort the vertices of the polygon mesh. Each vertex is repositioned separately: First the cell of the quadtree containing the vertex is determined. Then the new position of the vertex is calculated by scaling the cells of the quadtree on each level according to the desired size of the cells (corresponding to the number of pixels). By repositioning each vertex, we iteratively construct the distorted polygon mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Comparison and Evaluation</head><p>The CartoDraw algorithm described in section 2.1 was implemented in C++ using the LEDA library <ref type="bibr" target="#b5">[6]</ref> and the VPCarto algorithm described in section 2.2 was implemented in Java. The tests reported in this section were performed on a 1 GHz Pentium computer with 512 Mbytes of main memory. In the following, we report and discuss the results, and compare the efficiency and effectiveness of both approaches. <ref type="figure">Figure 2</ref> shows the measured efficiency and effectiveness results. The total run time varies between 3 seconds for the new VisualPoints approach, 25 seconds for the automatic scanline approach, and 16 hours for the non-linear optimization approach by Kocmoud and House <ref type="bibr" target="#b4">[5]</ref> 2 . Note that the scale on the y-axis of figure 2 is logarithmic. The VPCarto approach is more than four orders of magnitude faster than the Kocmoud and House approach, about two orders of magnitude faster than the interactive scanlines, and about one order of magnitude faster than the automatic scanlines. Since the VPCarto algorithm has no explicit notion of shape, the shape quality of the results is not as good as the results of CartoDraw. <ref type="figure">Figure 2(b)</ref> shows the shape versus area error results of call-volume cartograms of VP-Carto versus interactive scanlines for the four call-volume cartograms shown in figure 3. <ref type="bibr" target="#b2">3</ref> The results clearly indicate that the shape error of CartoDraw (interactive scanlines) is always better than that of VPCarto, but its area error is slightly worse. Since the total shape error is basically an average over the state-wise area error, in figure 2(c) we show the shape error state by state, sorted according to the shape error. <ref type="figure">Figure 2</ref>(c) reveals that the CartoDraw algorithm consistently provides a lower shape error than the VPCarto algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Efficiency and Effectiveness</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Application Examples</head><p>We applied both algorithms for continuously monitoring telephone call volume data. <ref type="figure" target="#fig_2">Figure 3</ref> shows the results of the telephone call volume (normalized by population) at four different times during one day. The color is redundantly mapped to the normalized call volume with brighter colors corresponding to smaller call volumes. The resulting visualizations clearly reflect the different time zones of the US, and show interesting patterns of phone usage as it proceeds during the day. For example, we see the western part of the country shrink in size in the early part of the day (6 am EST) and slowly increase in size as the day goes on, reflecting increasing traffic originated in that part of the country. It is interesting that the call volume is especially high in the morning and in the evening (see <ref type="figure" target="#fig_2">figure  3</ref>(a-e) and (d-h): 6 am on the east coast and 0 am on the west coast), while it is slightly lower during the day. Again, the VPCarto algorithm has a slightly lower area error, while the CartoDraw algorithm (interactive scanlines) provides a better shape preservation. The evaluation and comparison shows that both approaches have their advantages and disadvantages: While the CartoDraw algorithm provides significantly better shape preservation, it also needs elaborate geometric algorithms and therefore requires a significantly higher run time. In contrast, the VPCarto algorithm runs</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions and Future Work</head><p>In this study we analyzed and discussed the problem of efficient cartogram drawing, and proposed a new cartogram drawing algorithm which is based on the VisualPoints algorithm. The new algorithm provides better area error results and a significantly better time performance but is slightly worse with respect to the shape error. The experiments show that both algorithms offer good results for a variety of applications, and the speed of our new algorithm even allows an interactive display of call volume in telecommunication applications.</p><p>Although the proposed algorithm is a significant step toward fast, reliable, and effective cartogram generation, there are a number of promising directions for further research. An important issue is that shape preservation in the VP-Carto approach needs improvement. One possibility would be to combine both approaches and use a cartogram generated by automatic scanlines and further refine it using the VPCarto algorithm. An important related question is how to automatically determine scanlines. If we could automatically determine useful scanlines, we would probably be able to achieve speed and area error similar to the VPCarto approach with superior shape preservation.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>•), d S (•, •) and d A (•, •) model the error of the output cartogram.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 .Figure 2 .</head><label>12</label><figDesc>abel ed w i t ht he num ber ofel ectoralvotes perstate.P i e chart s depi ctthe percentofvote w on by each candi date. W here data w as notavai l abl ef or3rd part y candi dates,a zerowas substi t uted forthe vote count.Pi e si ze representst he totalnum ber ofvotes castperstate. Results of the 2000 US Presidential Elections (a) Run Time Comparison (b) Shape Error Versus Area Error (c) Sorted Shape Efficiency and Effectiveness Results (a) 6:00am (b) 12:00am (c) 6:00pm (d) 12:00pm(e) 6:00am (f) 12:00am (g) 6:00pm (h) 12:00pm</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>Long Distance Call Volume Data -computed with CartoDraw (a-d) and VisualPoints (e-h)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>St at es W on,PercentofVot es W on,El ect oralVot es G ai ned,and Vot erTurnoutPerSt at eHawai iand A laska chart sar eno tt o scale. H aw ai i= 3.8Mi l l i on V otes and A l aska = 2.2Mi l l i on V otes</figDesc><table><row><cell>C opyri ghtThe R ectorand V i sit orsoft he</cell></row><row><cell>Uni versit yofVi rgi ni a.</cell></row><row><cell>Uni versit yofVi rgi ni a:C harl ott esvi l l e,V i rgi ni a22 903</cell></row><row><cell>S ource: htt p:/ / www. cnn.com</cell></row><row><cell>1/22/01</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">The pseudo dual of a planar graph is a graph that has one vertex for each face and an edge connecting two vertices if the corresponding faces are adjacent.</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2">Our experiements were performed on a 1 GHz Pentium computer. For the comparison, the performance results were linearly scaled to 120 MHz to make them comparable to the results of Kocmoud and House.<ref type="bibr" target="#b2">3</ref> The four points are connected by a spline to make clear which points belong to which approach. The spline has no specific meaning.in interactive time and does not depend on the number of polygons involved.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename></persName>
		</author>
		<ptr target="www.multied.com/elections" />
		<imprint>
			<date type="published" when="2002-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A combinatorial approach to cartograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Waupotitsch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry</title>
		<imprint>
			<biblScope unit="page" from="343" to="360" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">The gridfit algorithm: An efficient and effective approach to visualizing large amounts of spatial data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Herrmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>IEEE Visualization</publisher>
			<biblScope unit="page" from="181" to="188" />
			<pubPlace>Research Triangle Park, NC</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Cartodraw: A fast algorithm for generating contiguous cartograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Panse</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Visualization Reseach Group</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
		<respStmt>
			<orgName>AT&amp;T Laboratories</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Continuous cartogram construction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Kocmoud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>House</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="197" to="204" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">The LEDA Platform of Combinatorial and Geometric Computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mehlhorn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Näher</surname></persName>
		</author>
		<ptr target="http://www.mpi-sb.mpg.de/˜mehlhorn/LEDAbook.html" />
		<imprint>
			<date type="published" when="1999" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
	<note>1st edition</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Cartograms and cartosplines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Tobler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1976 Workshop on Automated Cartography and Epidemiology</title>
		<meeting>the 1976 Workshop on Automated Cartography and Epidemiology</meeting>
		<imprint>
			<date type="published" when="1976" />
			<biblScope unit="page" from="53" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Computing integer cartograms is NPcomplete</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Venkatasubramanian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
		<respStmt>
			<orgName>ATT Research Labs</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
