<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Stream Polygon: A Technique for 3D Vector Field Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Volpe</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
						</author>
						<title level="a" type="main">The Stream Polygon: A Technique for 3D Vector Field Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>W e present a new method for the visualisation of 3D vector fields called the stream polygon: a regular, n-sided polygon, oriented normal t o the local vector. The polygon can represent local deformation due to rigid body rotation and both normal and shear strain. In addition, the effects of translation and scalar functions m a y be represented by sweeping the stream polygon along the streamline, and by appropriately v a ying the radius and shading the surface of the resulting streamtube. In this paper we develop a mathematical foundation f o r the stream polygon, and provide examples with application t o velocity field visualization.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Scientific and engineering analysis programs p r e duce a variety of information that challenges the visualization process. No single representational technique can hope to provide insight into all types of analysis data. In three and four dimensional analysis, both input geometric representation and computed results vary depending on the application and the type of analysis. To enhance the understanding of the results of these analyses, scientific and engineering visualization systems must provide tools that can show scalar and vector quantities in the context of the underlying geometry.</p><p>Scalar data, represented as a single value at each computational point, is often represented as a color that varies over some continuous range. Scalars can also be used to warp a geometry along a user-specified vector. Contours, for 2D analyses, and iso-surfaces, for 3D analyses, are other useful graphical representations for scalar information. These facilities are available, in one form or another, in most visualization system.</p><p>Vector data, with three or more values per computational point, is another common form of engineering and scientific data. Typical examples include the velocity field due to fluid flow, or the displacement field as a structure is loaded.</p><p>There are three common techniques for visualizing vector data. These are hedgehogs <ref type="bibr">[Sta89]</ref>, streamlines <ref type="bibr" target="#b4">[FM73]</ref>, and domain deformation. Hedgehogs represent the vector field by drawing oriented, scaled lines along the direction of the local vector. Streamlines are paths that are everywhere tangent to the vector field, and are often thought of as representing the path that a massless particle would take in a fluid. Domain deformation represents the vector field by distorting the local geometry according to the vector data. For example, to represent the displacement of a structure, the image would be distorted according to the vector field representing displacement. Each of these techniques has proven its value for visualizing and understanding data. However, these techniques fail to provide an understanding of the local deformations that exist within the vector field.</p><p>Non-uniform vector fields give rise to local deformation consisting of both rigid body motion as well as strain. Rigid body motion includes local translation (motion in the direction of the local vector) and rotation. Strain, which can be considered the local deformation not due to rigid body motion, consists of both normal strain (uniform deformation in a particular direction) and shear, or angular deformation.</p><p>The three vector field visualization techniques described above generally represent local deformation due only to translation. Another technique proposed by <ref type="bibr">Volpe[Vol89]</ref> represents rotation by using an oriented streamribbon (as compared to a streamline). The streamribbon is a strip of polygons, or ribbon, whose edges lie along two streamlines. Alternatively, the streamribbon can be constructed by placing the strip of polygons along a streamline, and orienting the surface according to the rigid body rotation. None of these techniques directly represents strain, which for many applications can be quite important. For example, many materials cannot effectively support shear strain. Hence when performing structural analysis these areas must be identified and removed if possible.</p><p>This paper presents the stream polygon, a new 3D vector visualization technique that can show both local deformation and strain. The stream polygon is a regular n-sided polygon oriented normal to the local 3D vector. The local effects of rigid body motion and strain may be represented by rotating and deforming the polygon. In addition, by sweeping the stream polygon along the streamline, and shading the surface and appropriately varying the radius of the resulting streamtube, the effects of translation, vector magnitude, and scalar functions may be represented as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Characterizing the Vector Field</head><p>Before describing the stream polygon, it is necessary to characterize the vector field. Here we are interested in describing local deformation, as well as techniques for computing the local vector and derivatives at any point in the vector field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Local Deformation</head><p>Consider the vector field V consisting of the m 1ocal vectors v = ( u , v , w ) . To examine the local deformation due to V at the point x = (2, y, z ) , a first order Taylor's series expansion of v about x is constructed. Then the local deformation ei, is given by[Bat67, Die761</p><p>where ~i j is the local strain tensor, and w j j is the local rot at ional tensor.</p><p>Here we assume that v represents a displacement field. For general vector fields, v may represent many possible data, hence the terms deformation, strain, and rigid body motion must be interpreted accordingly. For example, if V represents fluid flow, then these terms become deformation rate, strain rate, and velocity, respectively. The local rigid body rotation is given by</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0</head><p>(3) The rotation tensor describes the local rigid body rotation as shown in Figure l(c). By adding the contributions of the normal and shear strain and the rotation, the total deformation can be also represented as illustrated in <ref type="figure">Figure l(d)</ref>.</p><p>Note that the local rotation tensor can also be written</p><formula xml:id="formula_0">1 (4) w i j = --2eijkW</formula><p>where 6 i j k is the alternating tensor, and w is tation vector</p><formula xml:id="formula_1">8 u am --- the ro-<label>( 5 )</label></formula><p>In fluid flow where V is the velocity field, w is the vorticity and represents the rate of angular velocity of the flow at a point. Another important flow parameter is stream vorticity, $2, or rotation about the local vector v given by the normalized dot product</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Computing Derivatives</head><p>In most applications the vector field V is known only at m discrete points, and an interpolation function is required to compute the derivatives at the arbitrary point x in V. We assume that the geometry can be represented as a union of many non-overlapping elements, or cells, that are simple shapes such as hexahedron or tetrahedron <ref type="bibr">[Sch]</ref>. It is only at the vertices, or nodes, of the cells that V is known. Although many choices of interpolation function are possible, the iso-parametric formulation common to finite element analysis[Zie77] provides many advantages including simplicity of formulation, an abundance of prior work, common use in the analysis process, and the same formulation used regardless of element topology. The geometry of each element is described by</p><formula xml:id="formula_2">P x = E N ; X ;<label>(7)</label></formula><p>i=l where xi are the node points of the element, and N; are the shape functions, one per element node. The shape functions vary depending upon element topology; for a hexahedron the shape functions are given in terms of the element coordinates = (c, 7 , C )</p><formula xml:id="formula_3">(8) 1 Ni = i ( l -€ i ) ( l -~i ) ( l -C i )</formula><p>with €;,7i,&lt;i = f l at the element nodes, and -1 5 &lt;, 7 , C 5 1 inside the element. Note that at a particular element node j we choose <ref type="figure">(,,q,,C</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Computing the Stream Line</head><p>Computing the streamline is straightforward. The basic approach is t o integrate the equation</p><formula xml:id="formula_4">x ( t ) = l: v ( s ) ds. (14)</formula><p>In fluid flow, v ( t ) is the velocity and t is time, and the path generated can be considered the motion of a massless particle in the velocity field.</p><p>Generally the integration is performed numerically using interpolation functions such as those described in the previous section, and a numerical integration scheme such as the Euler or Runge-Kutta methods <ref type="bibr">[Cd72]</ref>. As the integration proceeds, it is necessary to track the streamline as it moves through the cells, requiring repeated transformation from global to local coordinates. This transformation is performed by solving Equation 7 explicitly for <ref type="bibr">((2)</ref> [LA901 or using a numerical technique such as Newton's method <ref type="bibr">[Cd72]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The Stream Polygon</head><p>Consider a regular n-sided polygon whose center is located at position x and normal to the local vector n sides v in vector field V. This polygon is called the stream polygon sp as shown in <ref type="figure" target="#fig_2">Figure 2(a)</ref>. The radius of sp is defined as the radius r of the circumscribing circle of the polygon. The parameters r and the number of sides n <ref type="figure" target="#fig_2">(Figure 2(b)</ref>) are constrained by where rma, and rima= are arbitrarily chosen finite values and n,,, is an integer.</p><p>The stream polygon provides a number of simple, yet powerful techniques for creating graphical representations of 3D vector fields. The goal is to show the usual translational effects, as well as the effects of local strain and rotation. In addition, we wish to represent scalar information.</p><p>The first technique is to deform sp according to the components of local strain and rotation. Equations 2 and 3 can be combined to yield the standard transformation matrix T containing effects due t o scaling (normal strain), shear, and rotation. Then sp is deformed by transformation T.</p><p>It is also possible to project local strain onto the plane defined by the point x and the local vector v. For example, if the number of sides is n = 4 (i.e., the polygon is a square), the local deformation can be represented exactly as shown in <ref type="figure">Figure 1</ref>. Here the contributions of the strain and rotation are immediately apparent, as well as the combination of all three. Probably the most striking use of the stream polygon is to sweep it along a streamline to produce the streamtube. The streamtube is composed of n sides corresponding to the n sides of the stream polygon. Each side is a surface that can be colored according to a specified scalar function. By combining the effects noted previously, namely varying radius and transforming sp, a large amount of information can be represented in a simple, intuitive manner.</p><p>As a final note, if n = 0 or r = 0, sp is a point and if swept in V results in a streamline. When n = 1, sp is a line and if swept in V results in a streamribbon.</p><p>Hence the stream polygon is a generalization of the streamline and streamribbon.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Umin 4 Application</head><p>One application of the stream polygon is to place multiple instances of the stream polygon along a streamline, as shown in <ref type="figure" target="#fig_4">Figure 3</ref>. The stream polygon may represent a single component of deformation or possibly combinations of deformation mode. It is also possible to locate the stream polygon along the streamline, and generate the 2D strain projection as described in the previous paragraph. By allowing the user to position the stream polygon interactively] it is possible t o rapidly move along the streamline, viewing the local strain at any point.</p><p>Our primary use of the stream polygon is to generate streamtubes using the techniques described in the previous section. In our implementation of the swept stream polygon in the LYMB/VISAGE <ref type="bibr">[SLY+]</ref> visualization system, we implemented the streamtube using offset ribbons. These ribbons can be placed at a specified radius (possibly variable) from an arbitrary line (generally a streamline). The width and location of the ribbon around the line is controlled by specifying a chord angle and start angle, and the ribbon rotates with the normal to the line. Also, when creating a streamtube, if the number of sides n = 0 a streamline is generated, when n = 1 a ribbon is generated] and when n = 2 two ribbons are generated, each perpendicular to the other in a + cross section. A simple example of the streamtube is shown in <ref type="figure" target="#fig_9">Figure 4</ref>. Here a closed loop has been constructed with a regularly varying vorticity vector to generate the twisted ring shown. The stream polygon is a hexagon, and each of the six sides of the tube are colored with the same regularly varying scalar function. The effects of local strain are not shown.</p><p>A variant of the previous example is shown in <ref type="figure">Figure 5.</ref> Here a stream polygon with n = 49 generates the streamtube shown. Every seventh side of the tube is colored with a different scalar function to create the stripes on the tube.</p><p>We have applied these technique to many practical data sets. For example, in <ref type="figure" target="#fig_10">Figure 6</ref> the structured grid bluntfin', is used t o generate the streamline, streamribbon, and streamtube shown. Again the stream polygon is a hexagon, but in this case alternate faces of the streamtube are colored with the two scalar functions flow temperature and flow pressure. We have found that using more than three scalar functions simultaneously is generally not effective, since too much information is present, and much is hidden from the viewer. Also notice in this example that the radius of the tube varies with the magnitude of the flow velocity. This is clearly seen as a bulge in the tube as the flow impinges on the fin. of an annular combustor. The data was generated using finite difference techniques. The geometry of the combustor is shown as a wire mesh. A hexagonal stream polygon is used to generate the tube shaded with flow density, and with varying radius. It is interesting to note how the shorter streamtube opens into a trumpet shape as it approaches the surface of the combustor where the flow velocity approaches zero.</p><p>As a final example, consider <ref type="figure" target="#fig_8">Figures 8 and 9</ref>. The analysis is of the airflow a room containing some bookcases and desks. The room contains a heat and pollution source (i.e., cigarette) near the closer of the two desks, and has an air inlet duct (black square, lower left) and exhaust duct (black square, upper left). On the wall opposite the vents is a window. The purpose of the analysis is to determine the effectiveness of the ventilation system. In <ref type="figure" target="#fig_12">Figure 8</ref>, a streamtube is started in the vicinity of the inlet, travels through the room, is exits through the exhaust vent. The tube is colored with room pressure, and the radius varies according to Equation 16. In <ref type="figure" target="#fig_8">Figure 9</ref>, another streamtube is started in a slightly different location, but this time meanders throughout the room. Eventually, the tube ends because the velocity of the air is reduced below a specified terminal velocity. In this figure the radius of the tube is not varied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>The stream polygon is a powerful display technique for visualizing 3D vector fields. It can be used to display local deformation including normal and shear strain and rigid body rotation. Streamtubes may also be generated by sweeping the stream polygon along the streamline. b t a t i n g the stream polygon, varying the radius, and shading the surface of the streamtube with scalar functions provide other simple but powerful visualization techniques.   The Stream Polygon: A Technique for 3 0 \kctor Field Visualization, W.J. Schroeder, C.R. Volpe, and W.E. Lorensen, pp. 126-132.    </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>The terms along the diagonal of E i j are the normal components of strain. Examining a plane oriented in the zy plane, normal strain causes uniform deformation along the zy axes as shown inFigure l(a). The terms off the diagonal are the shear components of strain. Shear strain causes angular deformation as illustrated by Figure l(b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>, such that N; = 1 when i = j , N; = 0 otherwise.In an isoparametric formulation, the interpolation functions N; are the same for the element geometry as well as the nodal variable, in this case the vectors vi. Hence the vector field in the element is given as</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>The stream polygon sp.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Another useful technique described by Equation 6 is to project the vorticity o onto the local vector v. The resulting angle R is the rotation of sp about v. Another effective use of the stream polygon is to vary the radius of the stream polygon according to some prescribed relationship with vector magnitude or other scalar function. For example, if V represents the velocity of an incompressible flow with no shear, then the equation r represents an area of constant mass flow. Here r,,, is a user specified radius at the minimum flow velocity</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Deformed stream polygons along streamline.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7</head><label>7</label><figDesc>is an example of streamtubes in a section 'Widely available structured grid data from NASA Ames.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :Figure 8 Figure 5 :</head><label>485</label><figDesc>Stream polygon swept along closed path with uniform rotation,Figure 6: Streamline, streamribbon, and streum tube representing vector field in blunffin. Visualizing air flow in a room Streamtube with n = 49 sides. Every seventh side is colored with a different scalar data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 :</head><label>7</label><figDesc>Two stream tubes shown in an annular combustor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>A meandering streamtube.(See color plates, page 41 7.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 4 :</head><label>4</label><figDesc>Stream polygon swept along closed path with uniform rotation F'gure 5: Streamtube with n = 49 sides. Every seventh side is colored with a different scalar data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 6 :</head><label>6</label><figDesc>Streamline, streamribbon, and stream tube representing vector field in bluntfin.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 7 :</head><label>7</label><figDesc>Two stream tubes shown in an annular combustor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 8 :</head><label>8</label><figDesc>Visualizing air flow in a roomFigure 9: A meandering streamtube,</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Scott Lamson and Graham Holmes of GE CR&amp;D provided some physical insight into vector field analysis in computational fluid dynamics.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">A n Introduction to Fluid Dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">K</forename><surname>Bat671</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Batchelor</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1967" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, England</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Elementary Numerical Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D</forename><surname>Conte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>De Boor</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1972" />
			<publisher>McGraw-Hill</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Dieter</surname></persName>
		</author>
		<title level="m">Mechanical Metallurgy</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mcgraw-Hill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Inc</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976" />
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Introduction t o Fluid Mechanics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">T</forename><surname>Mcdonald</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1973" />
			<publisher>John Wiley and Sons, Inc</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A vectorized particle tracer for unstructured grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">[</forename><surname>La901 R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lohner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ambrosiano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Joumal of Computational Physics</title>
		<imprint>
			<biblScope unit="volume">91</biblScope>
			<biblScope unit="page" from="22" to="31" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Cell abstraction for visualization of diverse data types</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>In preparation</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">An objectoriented, interpreted environment for visualization, animation, and graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Yamrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Montanaro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Volpe</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>In preparation</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">95 Wells Avenue. Application Visualization System User&apos;s Guide</title>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
	<note>%a891 Stardent Computer Inc.</note>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Streamlines and streamribbons in aerodynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Volpe</surname></persName>
		</author>
		<idno>AIAA-89- 0140</idno>
		<imprint>
			<date type="published" when="1989" />
			<publisher>AIAA</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">The Finite Element Method in Engineering Science</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Zienkiewicz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1977" />
			<publisher>McGraw-Hill Book Co</publisher>
			<pubPlace>London</pubPlace>
		</imprint>
	</monogr>
	<note>third edition</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
