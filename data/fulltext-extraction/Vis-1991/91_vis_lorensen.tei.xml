<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Golf Green Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">General Electric Company Corporate Research and Development Schenectady</orgName>
								<address>
									<postCode>12301</postCode>
									<region>New York</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Boris</forename><surname>Yamrom</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">General Electric Company Corporate Research and Development Schenectady</orgName>
								<address>
									<postCode>12301</postCode>
									<region>New York</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Golf Green Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Television coverage of golf fais&apos;to bring to the viewer appreciation of the complex topography of a golfgreen and how that topography affects the putting of golf balls. We present a computer graphics simulation that enhances the viewer perception of these features using shaded polygonal models of the actualgolfgreens used in tournaments. Mathematical modeling of the golfball&apos;s trakctory on its way towards the hole further enhances viewer understanding. A putting difficulty map assesses the relative difficulty ofputting from each location on the green to a given pin position. The object-oriented system is Written in C and runs on a variety of 3Dgraphics workstations. As an eqeriment, thesystem was used at a profasionalgolftoummnent and correctly simulated all putts during the final round, I I6</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1: Introduction</head><p>Spectators of sporting events often experience frustration while viewing the action of the sport because they have difficulty perceiving the movement of players, cars, horses or balls. lklevision has successfully enhanced viewer perception of some sports by providing unusual camera placements, close up views, instant replays and slow motion replays of the event. But television enhancements of reality can also distort a viewer's perception. For example, restricted camera placements in baseball, most notably the center field camera, fail to communicate the trajectory of a baseball pitch. The head-on camera shot of the stretch run of a horse race compresses the distances between horses. And, diffuse overhead sun light washes out the undulations in a golf green.</p><p>Computer graphics can resolve some of these issues. Although much computer graphics research focuses on the creation of realistic models, there has been recent work on non-realistic rendering techniques that enhance the understanding of complex phenomena <ref type="bibr">[ 11,</ref><ref type="bibr">2]</ref>.</p><p>In this paper we address the issue of viewer perception of golf green topography and how that topography af-fects the putting of golf balls. We combine conventional computer graphics and numerical analysis techniques, with applications-specific modeling and analysis algorithms to enhance a viewer's understanding of the golf green. The resulting presentations also increase the entertainment value of the golf match. After a brief analysis of the problems experienced by golf viewers, we describe the process of acquiring and modeling the green topography, modeling the putt, rendering the green, and presenting putt difficulty. Although our techniques apply to golf greens, the application of computer graphics to other sporting events such as baseball, track and field and racing are possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">: The Golf Green</head><p>Golf greens are the portions of a golf course that have closely cut grass and undulations surrounding a hole. The purpose of the game is to get a small resilient ball (1.68 inch diameter) into a small hole (4.25 inch diameter). The golf course designer challenges the golfer by creating undulations in the green and by tilting the green with respect to the surrounding environment. Although golf play on the green is but one aspect of the game, many golfers find it the most frustrating. Their challenge, once on the green, is to strike the ball in the proper direction, with the proper speed, so that it rolls over the undulating green into the hole. Because of this challenge, television coverage of golf devotes more than 50% of air time to the players' putting.</p><p>But television fails to bring an appreciation the complexity of putting to the viewer because: 1. Camera placement is restricted to locations that will not distract the golfer. Portable cameras can be moved behind, but not in front of the golfer. Other cameras, placed on towers, present a high view of the green but are not high enough to give a full overhead view. 2. The diffuse overhead sun light washes out the undulations in the green. Artificial lighting cannot be used because it distracts the players. 3. In addition to undulations, golf green designers often tilt a green relative to the horizon. Such subtle changes in a green's orientation are camouflaged by the surrounding sand traps and mounds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>Since the TV cameras cannot display a trace of the ball's track, it is diffmlt to see how or understand why a golf ball follows a given trajectory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3: Golf Green Visualization</head><p>Our approach to enhance the viewer's perception of a golf green uses geometric models of the golf greens, mathematical models of putting and computer graphics presentations of the greens and putts.</p><p>First, to build an accurate model of the green topography, surveyors measure elevations for those greens that will be presented to the television audience. Then, modeling software creates polygonal models of the greens. The pin placement for the day's round and the location of each player's ball are obtained, also using surveying techniques. Mathematical models of the golf ball motion predict its path along the green and into the hole.</p><p>During the tournament broadcast, an operator moves the computer graphics camera, adjusts lighting and controls the putt simulations. The sports director broadcasts those computer generated sequences that will interest the viewer and enhance the announcers' commentary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.1: Surveying the Green</head><p>Before the tournament, a licensed surveyor uses a theodolite, to acquire green elevation data interior to the green and green perimeter data. We have used two approaches: 1. Gather the elevation data on a uniform x, y grid. For our experiment we sampled the green at two foot in-tervals. Although this simplifies the geometric modeling step, it takes up to a full day to survey one green. 2. Gather the elevation data on a non-uniform X, y grid, taking more samples in undulating areas. This is up to twice as fast as the uniform method, but complicates modeling.</p><p>After the survey is complete, the surveyor furnishes a computer disk with X , y, efevuZion data for the green's interior and ordered s y coordinates of the perimeter of the green. The surveyor retains records of reference points that can be used to register the hole and ball locations during the tournament.</p><p>In the future, more sophisticated methods, such as close range photogrammetry [ 131, may be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.2: Modeling the Green</head><p>The system requires models for the ball, hole, pin and green. The polygonal description of the golf green includes three pieces:</p><p>Mm*ior. For uniform data, the polygons are generated by connecting neighboring points on the square grid, figure 1. For the non-uniform data, a delaunay triangulation <ref type="bibr">[7]</ref> of the data provides the necessary polygons. This triangulated data can be re-sampled to provide a uniform distribution of data. Perimeter. The surveyor always includes points outside the perimeter so that the polygons can be trimmed by the perimeter data. We fit parametric cubic splines to the perimeter data and use these splines to clip those polygons that straddle the perimeter,   The generated geometric model, figure 3, is only used for rendering, but we retain the uniformly-spaced survey data for later putt simulations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.3: Locating the Ball</head><p>Accurate locations for balls on the green are required during the day of the tournament. Generally the position of a point (a ball) in the environment can be computed using either two measurements from two different theodolite positions or a measurement of two angles, vertical and horizontal, plus range data obtained from the ultrasound reflected from the object back to the theodolite. Unfortunately, using two surveyors is expensive and golf balls scatter ultrasound in all directions reflecting too little energy back to the surveyor to make reliable measurements. However, having the green represented in the computer as a polygonal surface, we need only one measurement of vertical and horizontal angles from a known position to calculate the intersection point between the ray from this position and the green. Although the precision of this method decreases as the elevation of the observation point decreases, the surveyor is normally located on a TV tower some 20 feet above the ground.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">. 4 Modeling the Putt</head><p>The intent of the putt trajectory model is to help the viewer understand how the green's topography affects the ball. The intent is no? to create a putting machine.</p><p>Therefore, tradeoffs can be made to predict the ball trajectories in a reasonable amount of computer time.</p><p>When putted, a golf ball exhibits two types of interactions with the green surface: sliding and rolling. Sliding occurs during the early portion of the putt. Gradually the friction force applied to the golf ball in the direction opposite to the motion direction causes the ball to rotate. The sliding speed decreases and the rotation speed increases until ball starts rolling without sliding. The rolling coefficient of friction is much lower than the sliding coefficient of friction. Both values depend on many parameters, such as moisture content, height, and growth direction of the grass. For a perfectly uniform ball, the rollingbegins when the ball speed decreases to 5Mth of the initial speed independently of the value of the coefficient of friction [ 11.</p><p>In reality, the modem golf ball is not uniform; it is composed of several layers (usually three) of materials with the most dense material in the center. Therefore, its moment of inertia is slightly less than the moment of inertia of the uniform ball of the same weight, and it starts pure rolling at a speed greater than 517th of the initial speed. Since balls are produced by different manufacturers, it is not possible to know ahead of time the moment of inertia of a particular ball (the United States Professional Golf Association, USPGA, regulates that the ball should be 1.68 inches in diameterand weigh 1.62 ounces) [ 11. For our analysis, we assume uniform golf balls.</p><p>To further simplify the simulation, we assume that the ball always slides with two coefficients of friction: one for the first, sliding phase of motion and another for the second, rolling phase.</p><p>To simulate a putt, the coefficient of friction of the green surface must be provided. Golf course managers use a device called a Stimpmeter [12] to measure the speed of a golf green. The Stimpmeter is an inclined plane with a notch that holds a golf ball. lb determine the speed of a green, the operator positions the Stimpmeter on a flat portion of the green to be measured and slowly lifts the meter. The ball releases from the notch at U) degrees inclination and the distance that the ball travels is used as a measure of the green's speed. To adjust the speed of a green, the greenskeeper can cut the grass shorter or water the grass.</p><p>Assuming a simple sliding model, we derive the relation between coefficient of friction k and the distance S the ball rolls on a flat green after it leaves the Stimpme-  For putt simulation, two problems must be solved. The first, an initial value problem, uses an initial position, a velocity and direction to predict the path of ball. The second, a boundary value problem, uses an initial location, final position and final speed to calculate the initial speed and direction. Both problems require the formulation of differential equations for the ball sliding on a faceted surface.</p><p>The sliding of abody on an inclined plane is controlled by three forces: the body's weight directed down vertically, the reaction of the plane N directed along the normal to the plane n' , and the friction force F p directed opposite to the body's velocity v' ,  <ref type="figure">(n,, n, n,)</ref> , the last vector equation can be rewritten in coordinate form as a system of three equations</p><formula xml:id="formula_0">ax = g n, n x -k g n, v, /I51 ay = g n, n y -k g nz vy /IF1 az = g nz nz-k g n* vz /la1 -g</formula><p>This system of nonlinear differential equations of second order can be transformed to a first order system by the introduction of auxiliary variables. We assume that independent variable is time t and the position of the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>body is 3t) = (xl(t),xz(t),xj(t))</head><p>. For the velocity <ref type="figure">,, v,, v,)</ref> we introduce variables x4, xs and q . Then, the system can be rewritten as a system of six equations</p><formula xml:id="formula_1">(v</formula><formula xml:id="formula_2">X I 1 = x 4 x2) = % q' = q</formula><p>x4" = g n, n,-k g n, x 4 /Jm-</p><formula xml:id="formula_3">xg' = g nz n , -k g n, AT /,k + A$ + 2 -g .</formula><p>The normal n' is a constant along the facet. However, to accommodate for smooth transitions from facet to facet, we calculate the normals as an average between comer normals of the facet (this is exactly the same averaging that is done in Gouraud shading). Asa result we get continuous functions on the right side and can use numerical methods to solve these equations. The exact equations for a body sliding on a curved surface are more complicated, but the precision of our geometry model does not warrant more precision in the dynamic modeling. Visual comparisons between simulated trajectories and actual putts demonstrate that our approximation is satisfactory.</p><p>Given the initial position of the ball on the green and its velocity, the above system can be solved and the solution will represent a trajectory of the ball qf) on the green. It is more interesting to calculate what the right velocity should be if the initial position of the ball and its final destination, the cup, is given. As was stressed before, the goal is not to build a putting machine, but to provide qualitatively adequate visual representation of how golf green topography affects putting on the green.</p><p>This last problem, called a boundary value problem, can be solved using a shooting method [8]. Before the solution procedure is described in more detail it is necessary to clarify the exact boundary condition. The ball can fall into the cup if its trajectory passes close to the center of the cup and its speed is small enough to allow the ball to drop inside. We use a heuristic procedure to spec@ the speed threshold.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I I9</head><p>proaching the edge of the cup with speed I ?I . Subject to free fall, the ball will reach the point B with speed</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I V '~ &lt; v h u = J m ( 2 ~-r )</head><p>= 0.36 feet/sec, where g is the acceleration of free fall, 2R is the cup diameter and r is the ball radius. If the ball approaches the hole along a chord less than the diameter of the hole, its threshold will be less than vhM. The threshold goes to zero when the ball approaches the hole at its tangent. A simpler solution uses one average threshold value for all possible approaches to the hole.</p><p>The initial value problem can be used to solve the boundary value problem. The algorithm proceeds as follows: i. Using the initial value problem solver, make a first guess by shooting directly at the cup. Tike two more shots, varying the speed by one percent and direction by one percent. In all three cases the trajectory is calculated up to the point where the speed becomes less than the threshold value. ii. Compute the distances from the center of the cup to the endpoints of all three trajectories. Use these three distances together with the three speed and direction values to compute new improved speed and direction values. Newton-Raphson method [ 101 is used here. iii.Repeat (i)-(ii) with the new guess and direction until the trajectory approaches the cup center by a distance less than the cup radius. Since this algorithm does not guarantee convergence to a solution, we devised a procedure that is more robust though it also has limitations. In reality there are ball and cup position combinations that preclude a solution. However, the USPGA rules limit the placement of the cup to nearly flat regions of the green, thus reducing the number of impossible putts.</p><p>To describe the robust procedure, we denote the distance from the end of trajectory to the cup's center by 0, , where n is the iteration number in (i)-(ii), and let s be the scaling of the green surface z = s elevarion(x, y) in z direction. The real green has the scaling factor s = 1 ; for s c 1 the green is "flattened" and for s &gt; 1 the green is "stretched." The revised algorithm starts with the scaling set to one and, if it fails to converge to a solution in less then a fixed number of iterations (60, for example), or if 0, exceeds a threshold (10 feet, for example) the algorithm flattens the green by one half between its current scaling sC-(initially set to 1) and previous scaling s -(initially set to 0). The procedure tries to solve the problem for these conditions and, if solved, uses the previous larger scaling with the initial conditions equal to the found ones; if not solved, it continues to flatten the green. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>U-</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Visualizing the Green and Putts</head><p>Given an accurate geometric model of the green and computer-predicted putt trajectories, computer graphics provides a variety of techniques to enhance the viewer's perception of the action on a golf green.</p><p>Shaded Rendering. Gouraud shading applied to the polygonal facets of the green model along with adjustable light sources, provides an enhanced view of the green topography. Low elevation light sources increase the perception of subtle undulations. Camera Controls. Simple camera controls allow the operator to move either the look at or lookfiom points in a circle. <ref type="figure" target="#fig_9">Figure 6</ref> shows the six ways to move a camera by rotating its look from, look at and view up vector. Azimuth and elevation are rotations of the look from point about the view up vector while yaw and pitch are rotations of the look at point. Roll rotates the view up vector about the view plane normal. In this application we withhold roll from the user interface. For rapid camera location during a televised match, we provide buttons that move the camera to green specific tower and fairway views, figure 7. The tower view parameters are calculated by superimposing the synthetic green over the T V camera view from the camera tower.</p><p>Zooming controls let the operator move the camera in and out along the view plane normal by a specified ratio.</p><p>Camera Location. Aprominent feature of any 3D computer graphics application is the flexibility and USability of the viewing mechanism [6]. We chose a camera model because of its versatility and intuitive user interface. However, because of the flexibility of the camera model, an operator can lose the green. To prevent this, the system calculates a default view any time the ball or pin move. The default view, figure 8, places the camera behind the ball, looking at the pin, about 3 feet above the green.</p><p>Keeping the look at point half way between the ball and hole permits the operator to move quickly from the golfer's point of view to the caddy's (the golfer's assistant) point of view behind the pin. Animation. We can start a continuous azimuth movement of the camera and change other viewing and calculated by finding the maximum deviation of the ball's path from a straight line trajectory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>&amp; Results</head><p>analysis parameters while the animation runs. %ically, the operator zooms in and out and changes the camera elevation. This feature simulates a fly around the green, much like the helicopter camera shots often seen on television. lkggrution. Scaling the green's elevation exaggerates any undulations in the green. Even the slightest change in elevation becomes a mountain range, figure 9. Zhzjectory Display. The simulated putt is displayed as a line traveling along the green's surface, as a series of balls tracking the trajectory, or as an animation of the ball rolling, figure 10. During the solution of the boundary value problem, the system shows the intermediate guesses. Although this feature is not interesting to a television viewer, the adaptation of the shooting method solutions to the green's topography is interesting to the scientist. and direction by small amounts and solve the initial value problem for each variation. Difficulty is the average distance these putts lie from the hole. This amounts to a sensitivity analysis of the putt: if slight changes in the initial value problem result in large variations from the perfect putt (theboundaryvalue solution) then a putt from this point is more difficult than another that has less variation. We apply this variation as a color to the vertex of each point in the geometric model and render the gouraud shaded polygons with interpolated colors, figure 12. Of course, changing the pin location requires a new difficulty map.</p><p>QuuntizuZive Results. As a by-product of the analysis, we obtain distance to the hole, distance above or below the hole and amount of break for each ball. These accurate values in themselves are interesting to the viewer. The break of the ball along its path is On October 20,1990 the National Broadcasting Company (NBC) showed green and putting simulations as part of their coverage of the Walt Disney World Classic. Although two greens, the 15th and 18th were surveyed, only the 18th was used during the tournament. Each green required one day of survey time. During the tournament a surveyor stationed on the 18th green camera tower used a theodolite to locate each player's ball. The surveyor provided horizontal and vertical angles for the balls. Using these angles, a ray tracing algorithm, cast a ray from the surveyor's location at the polygonal green and calculated x, y and z coordinates for the ball. During the nearly three minute interval between the last golfer's shot to the green and the first golfer's putt, an operator selected camera and light locations and started the putt simulations. All calculations were completed by the time the golfers reached the green. The director selected sequences for broadcast to the viewers. During the last round of the toumament, 59 putts were simulated, all before the golfers began putting.</p><p>Tim Simpson led by a large margin throughout the toumament, but Mahaffey birdied eight holes in a row to pull within one stroke coming to the final hole. Mahaffey's birdie putt on number 18 was 14.58 feet from the hole and two inches below the hole. While the simulation predicted a break of 2.5 inches, his putt to tie Simpson was inches short and to the left. "Unfortunately, I misread the putt on 18 and the rest is history," Mahaffey said in an interview after the match.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5: Implementation</head><p>The system is written <ref type="figure" target="#fig_5">in LYMB [4]</ref>, a C-based objectoriented system that supports message passing and inheritance. LYMB applications are written using scripts that create instances of classes and change instances' states. The classes are written in C. LYMB has over 350 classes to support a variety of applications: scientific visualization, industrial inspection, computer animation [5] and molecular modeling.</p><p>The golf application uses many existing classes such as renderers, cameras, lights, actors, models and splines. We also developed classes specifically for golf modeling and analysis. One set of analysis classes are based on the initial and boundary value solution algorithms in Nu- Thegolfgreen class reads survey data and creates a polygonal model of the green, perimeter, and skirt. It also responds to @ (n,y) z?, returning the value of the elevation at the requested artesian location on the green surface. Another message, @ (x,y)normd?, returns the normal at the point (n,y). These messages are used by the initial value problem solver. Golf green has a scale factor that scales the elevations and normals so that the shooting method can control the Patness of the green. The shooting method is implemented in a LYMB script that uses loops, initial value solver and golf green classes to implement the heuristic algorithm discussed earlier.</p><p>The system runs on Sun 314, Hewlett Packard 9o00, Stardent GSU)(XI, Digital Equipment DS5000 and Silicon Graphics 4D workstations. Rendering classes for vendor specific hardware permit fast response on these systems. For instance, the Silicon Graphics renders a typical green at 8 frames per second. Initial value problems on this machine take less than a second. Boundary value solution times depend on the green topography, coefficient of friction and distance from the hole.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>6: Summary</head><p>Although the project started in 1987, its significance was not realized until 1990 when advances in hardware speeds and LYMB became the primary motivations for its revival and success. Computer graphics has a vast repertoire of techniques that can be applied to sports and entertainment. Our system blends mathematics, graphics and computer science into a vehicle for viewer entertainment. There are other potential applications of the golf green visualization system. Certainly, with faster hardware and innovative input devices, such a system could be the foundation for a Golf Putting simulation system targeted to the recreational golfer. Also, golf course designers could use the system for new golf green design and rehabilitation of old greens.        </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>F(Pm 1 .</head><label>1</label><figDesc>Interior Pdygom.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Skirt. '</head><label>'</label><figDesc>Ib help the viewer appreciate the inclination of the green, we produce a skirt around the green. The skirt consists of vertical polygons that start at the green perimeter and extend vertically.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 .</head><label>3</label><figDesc>Wireframe Model a f a Gmn.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>ter. If ? is the initial velocity of the ball then k = lGlz / 2 g S, where Iv'l , the speed of ball as it leaves the base of the Stimpmeter is 6.0 feetlsec [3].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>figure 4 .</head><label>4</label><figDesc>Sliding on an Inclined Plane,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>figure 4. Note that since figure 4 shows a 2D projection of a 3D scene, it hides the fact that in general, ? is not necessarily collinear with + . Since there is no motion in the direction perpendicular to the inclined plane, the normal reaction R is equal to -(F ni$ . The friction force FR isequalto -klF*ZlF/lFl ,and F = mg' ,where m is the mass of the body and g' is the acceleration of free fall. From Newton's Second Law it follows that the acceleration , a' , of the body is defined from the relation m a'= m g'-(m g -3 Z -k l m g'.n'l v' /IF1 a ' = g'-@*z) n'-k)g'*n'l F/l?l, or where g' = (0, 0, -g ) , and the z axis is up. For ? = ( v x , , z , v v ) a ' = ? " = (ax,a,az) , and n' =</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>Figure 5shows a ball ap-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 .</head><label>5</label><figDesc>Ball Dropping into Hde.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 .</head><label>6</label><figDesc>Camera Controls.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Vertical</head><label></label><figDesc>Plane. A transparent vertical plane intersecting the ball and hole positions enhances the viewer's appreciation for the break of the ball, figure 11. Hm'wntcal Plane. lb highlight the relative elevations of different portions of the green, a transparent horizontal plane can be raised and lowered. This flooding effect is especially useful to show subtle elevation changes. h t t LXficulZy Maps. A putt difficulty map shows the relative difficulty of putting from each point on the green to a given pin location. 'Ib assess the difficulty of putting from a point, first solve the boundary problem for that point. Then vary the initial speed</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8 :</head><label>8</label><figDesc>The golfer's view.Figure 7: Tower view.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 9 :</head><label>9</label><figDesc>Exaggerating the green.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 1 1 :</head><label>1</label><figDesc>Vertical plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 12 :</head><label>12</label><figDesc>Putt difficulty map.(See color plates, page 476.)I23Golf Green Visualization, W.E.Lorensen and B. Yamrom, </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 7 :Figure 8 :</head><label>78</label><figDesc>Tower view. The golfer's view.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 9 :</head><label>9</label><figDesc>Exaggerating the green.Figure 10: Trajectory of a simulated putt.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 11 :</head><label>11</label><figDesc>Vertical plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 12 :</head><label>12</label><figDesc>Putt difficulty map.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>User interface classes for the HP widgets [9] permitted us to create a custom and portable X window user interface [ 141. The interpreted LYMB environment let us customize the user interface for easy operator interaction during the broadcast.</figDesc><table /><note>merical Recipes [8].</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Walter Robb provided encouragement and enthusiasm throughout the project. Skip Montanaro provided the Delaunay interpolation classes and contriiuted to the user interface. Nelson Corby offered valuable advice and help on survey techniques and also acted as our liaison with the NBC production crew. Thanks to the Mohawk Golf Club, Niskayuna, New York for disruptinggolfon twoof theirgreensforafewdays. Larry Cirillo, Producer of NBC Golf, gave us the opportunity to try the system during a live broadcast. Finally, Pete Meenan, manager of the Computer Graphics and Sys-tems Program, interfaced with the customer and solved many logistical problems.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Search forthe Perfect Swing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Cochran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stobbs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. B. Lippincott</title>
		<imprint>
			<date type="published" when="1968" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Dialogue Concerning the Stimpmeter</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Haeberli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Direct WYSIWYG Painting and Texturing on 3D Shapes</title>
		<imprint>
			<date type="published" when="1986-10" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="401" to="404" />
		</imprint>
	</monogr>
	<note>Computer Graphics</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Object-Oriented Software Development in a Non Object-Oriented Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Barry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mclachlan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yamrom</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Object-Oriented Geometric Modeling and Rendering Siggraph Course Notes</title>
		<editor>I? Sabella</editor>
		<meeting><address><addrLine>Anaheim, Calif</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1987-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Object-Onented Computer Animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Yamrom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE NAECON</title>
		<meeting>IEEE NAECON<address><addrLine>Dayton, Ohio</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989-05" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="588" to="595" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Rapid Controlled Movement Through a Virtual Workspace</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Robertson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphrcs</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Computational Geometry: An Introduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Preparata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Shamos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Berlin</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Rogramming with the HP X Widgets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">I?</forename><surname>Flannery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Vetterling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Numericd Recipes in C The Art of Scientijic Computing</title>
		<meeting><address><addrLine>Cambridge, England; Hewlett Packard, Corvallis, Oregon</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1988-08" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="171" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ralston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">€</forename><surname>Rabinowitz</surname></persName>
		</author>
		<title level="m">A First Course in Numerical Analysis</title>
		<meeting><address><addrLine>New York, 1%5</addrLine></address></meeting>
		<imprint>
			<publisher>McGraw-Hill</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Comprehensible Rendering of 3-D Shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Saito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="197" to="206" />
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m">Stimpmeter Instruction Boowet</title>
		<meeting><address><addrLine>USPGA, Far Hills, New Jersey</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Mathematical Formulation and Digital Analysis in Close-Range Photogrammetry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">W</forename><surname>Wong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Photogrammetric Engineering and Remote Sensing</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1355" to="1373" />
			<date type="published" when="1975-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">X, Golf and Object-Oriented Programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Yamrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TOOLS 90, Roceedings of the Second International Conference: Technology of Object-Oriented Lunguap and Systems</title>
		<meeting><address><addrLine>Paris, France</addrLine></address></meeting>
		<imprint>
			<publisher>Angkor</publisher>
			<date type="published" when="1990-06" />
			<biblScope unit="page" from="443" to="454" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
