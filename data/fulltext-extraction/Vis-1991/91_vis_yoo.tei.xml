<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Achieving Direct Volume Visualization with Interactive Semantic Region Selection</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Terry</forename><forename type="middle">S</forename><surname>Yool</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename><surname>Neumannl</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs1</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina Chapel Hill</orgName>
								<address>
									<postCode>27599-3175</postCode>
									<region>NC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Radiation Oncology School of Medicine</orgName>
								<orgName type="institution">University of North</orgName>
								<address>
									<addrLine>Carolina Chapel Hill</addrLine>
									<postCode>27599-75</postCode>
									<settlement>12</settlement>
									<region>NC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">M</forename><surname>Pizer1</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina Chapel Hill</orgName>
								<address>
									<postCode>27599-3175</postCode>
									<region>NC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Department of Radiation Oncology School of Medicine</orgName>
								<orgName type="institution">University of North</orgName>
								<address>
									<addrLine>Carolina Chapel Hill</addrLine>
									<postCode>27599-75</postCode>
									<settlement>12</settlement>
									<region>NC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Cullip</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Radiation Oncology School of Medicine</orgName>
								<orgName type="institution">University of North</orgName>
								<address>
									<addrLine>Carolina Chapel Hill</addrLine>
									<postCode>27599-75</postCode>
									<settlement>12</settlement>
									<region>NC</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Rhoadesl</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ross</forename><surname>Whitakerl</surname></persName>
						</author>
						<title level="a" type="main">Achieving Direct Volume Visualization with Interactive Semantic Region Selection</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Interactive direct visualization of 30 data requires fast update rates and the ability to extract regions of interest from the surrounding data. Parallel volume rendering yields rates that make interactive control of image viewing possible for the first time. We have achieved rates as high as I5 frames per second by trading some function for speed, while volume rendering with a full complement of ramp clussificution capabilities is performed at 1.4 frames per second. These speeds have made the combination of region selection with volume rendering practical for the first time. Semuniic driven selection, rather than geomciric clipping, hus proven to be a natural means of interacting with 30 data. Internal organs in medical data or other regions of interest can be built from preprocessed region primitives. We have applied the resulting combined system to red 3 0 medical data with encouraging results. The ideas presented ure not just limited to our platform. but can be generalized to include most parallel architectures. We present lessons learned from writing fust volume renderers and from applying image processing technique., to viewing volumetric data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Visualization is more than just producing coinplex images of higher dimensional data, i t is also the comprehension of the information within the data. Traditional approaches to rcpresenting 3D information using volume rendering have oftcn been hampered by the lack of an environment that is capable of cngcndering natural exploration of the image.</p><p>We joined two separatc rescarch efforts in the work described here. Fast voluinc rcndcrers wcrc being constructed as part dcvclopincnt work for thc Pixel-Planes 5 graphics machine, and interactive segmentation using hierarchical descriptions of grcy scale iinagcs is an ongoing image processing project. The need lor greater control of viewing paramctcrs in volume rcndering crcatcd</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Graphics System</head><p>In order to provide adequate feedback, one needs a powerful graphics system. Another group in our department headed by Henry Fuchs and John Poulton provided us with such a machine in the summer of 1990 when they produced Pixel-Planes 5 ( <ref type="figure" target="#fig_0">Figure 1)</ref>  <ref type="bibr">[Fuchs,</ref><ref type="bibr">et al. 891</ref>. The machine is an experimental heterogeneous architecture suitable as a platform for a wide range of parallel algorithms research.The system provides both MIMD and SIMD parallelism. MIMD parallelism is provided by the graphics processors, each of which contain independent code and data stores. SIMD parallelism is provided by the renderer boards, each of which executes a singleinstruction stream in parallel for 128x 128 one bit processing elements. The instruction streams for the renderers are typically created by, and sent from, the graphics processors. The flexibility of having both types of parallel organizations available has resulted in the implementation of several different volume rendering algorithms. Two of those are discussed within this paper. In one approach, classification and shading of voxels is done with a SIMD algorithm, and the parallclization of raycasting is done through MIMD CH3046-0/91/0000/005l$Ol .OO 0 1991 IEEE The graphics processors (GPs) arc 40MHz Inlcl 1860TM general purpose microproccssors, each with 8MB of memory. Each GP has its own ring port for communication.</p><p>The Renderer is a singlc board with a 128x 128 SIMD array of pixel processors and its own instruction controller. The array may be positioncd arbitrarily in screen coordinatcs, and through a hardware multiplier trce evaluate quadratic cxprcssions in scrccn space. Each pixel processor has 208 bils of local incinory and 4096 bits of fast access backing store. A fully configured systcm contains 16 rendcrcr boards. Each renderer has two ring ports: one for its instruction strcain, and onc for backing store data access and loading.</p><p>The frame buffcr is ;I 1280 x 1024 x 24 tioublcbuffered design with a display rclrcsh controller normally set for a 72 Hz vertical ratc. It has a zoom mode which replicates one quadrant of pixcls to yicld an cffcctivc resolution of 640 x 512. Two ring ports arc implemented to provicic a high bandwidth into thc frame buffer.</p><p>The host interfacc supports communication with a UNIX workstation. Thc workstation is ihc filc scrvcr for the system and providcs uscr control. Oric ring port is allocated to this function.</p><p>The complete 2 card cage Pixel-Planes 5 system contains 16 renderer boards, and 32 graphics processors (16 boards with two GP's per board). It may also be configured as two independent half-sized systems (16 GP's and 7 renderers each). The results quoted herein are for one of these half-sized systems. The a third cage has b e n completed and is now undergoing tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Parallel Volume Rendering</head><p>Volume rendering produces a shaded image from a 3D array of data samples. Three classes of volume renderinghodeling techniques are: Surface Representation <ref type="bibr">[Lorenson,</ref><ref type="bibr">Cline 871,</ref><ref type="bibr">Binary Classification [Herman,</ref><ref type="bibr">Liu 791 [Kaufman 901,</ref>  <ref type="bibr">[Drebin,</ref><ref type="bibr">Carpenter,</ref><ref type="bibr">Hanrahan 88]</ref> <ref type="bibr">[Levoy 883</ref>. Using the MVC approach, volume data may be rendered as solid opaque objects, or as semi-transparent surfaces or gels; users may control the presentation to suit their need. Since MVC is a superset of the other classes, it allows more flexible control of the real time image. In spitc of its speed disadvantage, the systems presented have focussed around MVC.</p><p>In MVC volume rendering, data is treated as an array of point samples of a continuous 3D function. These points are shaded, resampled, and composited to produce an image. Shading is the process by which a data sample is converted to a color and opacity: an R, G, B, alpha four-tuple. A classification function ascribes an intrinsic color and opacity (alpha) to each point. The local gradient of the data provides a normal vector for each point. The intrinsic color and normal vector is used in a Phong lighting calculation [Phong 751 to yicld thc shadcd R, G, B values.</p><p>Resampling of thc shadcd array is rcquircd to project the volume onto a 2D vicw plane. We cmploy ray casting with trilinear intcrpolation, but this is only onc of many possible mcthotls 1 <ref type="bibr">Drcbin,</ref><ref type="bibr">Carpcntcr,</ref><ref type="bibr">Hanrahan 881 [Westover 891.</ref> Compositing <ref type="bibr">[Portcr,</ref><ref type="bibr">Duff 84</ref> 1 after each resampling step computes opacity and color accumulation by approximating an intcgral along the ray. Resampling must proceed front-to-back or back-to-front for compositing to work correctly. Wc composite front to back in order to takc advantage of ray tcrmination or alpha cutoff efficiencies <ref type="bibr">[Levoy 901</ref>. Rays terminate when they attcnuatc to opacity; furthcr calculation is not</p><p>The next sections prcscnt two parallel volumc rendering algorithms implcmcntcd o n Pixcl-Plancs 5 . The first prcscntcd is also chronologically thc earliest implementation. The sccond version is thc fastcr of thc two, and in many rcspccts grcw o u t of the lessons lcarncd from the first approach. r€!4Uired.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Distributed Data Implementation</head><p>A general purposc volumc rcndcring systcm was developed in thc Summcr and Fall 01' 1990 for the Pixcl-Planes 5 system, based on ii dcsign conccpt by Marc Levoy <ref type="bibr">[Levoy 881</ref>. Thc datii set is distributed among the renderers; it is not replicated throughout thc systcm. Our current allocation schcmc uscs 64 bits pcr voxcl: 12 bits of raw scalar data, thrcc 13 bit signed normals, and a 13 bit gradient magnitudc. Using thc 16 prcscntly availablc renderers, this systcm can displny 3D (lata scts up to 256x256~256 voxcls in s i x .</p><p>Additionally, this systcm supports ramp classification and Phong shading of thc dam using thc SIMD processor arrays in thc rcndcrcrs. Thc data sct position as wcll as several lights can be manipulatcd via joysticks. A flexible ramp-bascd local classil'ication convcrls intcnsity and intensity gratficrit magnitudc to color and opacity also under joystick control. A movcablc cut plane is providcd. This systcm can input sclcction masks, from an external source, to highlight sclcctcd voxcls. The updatc rate is about 1.4 frames pcr sccond with a 128x128~128 data set using 7 Rcndcrcrs and 16 GP's to gcncratc a 640 x 512 image.</p><p>Functions arc assigned to thc Pixcl-Planes 5 hardwarc components as follows: Thc host controls the user interface, requcsts ncw framcs to bc drawn, and initially loads the data base into the rcntlcrcr's backing storc. The renderers access thcir backing storc, perform convcrsion to color and opacity, and transmit shadcd voxcls (color and opacity) to thc GP's. Thcrc is a single miistcr GP; the remaining GPs arc slavcs. Thc mnstcr GP controls all the renderers and synchronizes the slaves. The slaves do the ray casting for their assigned portions of the screen and transmit their sub-images to the frame buffer. skin </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Control Flow</head><p>Rendering a frame is divided into the following phases:</p><p>The host requests a new frame and transmits viewing, classification, and shading parameters to the master GP. The master GP assigns enough "image tiles" (currently 128x128 pixels each) to the slave GP's to cover the display screen, and transmits the viewing parameters to the slave GPs. The slave GPs respond by computing which chunks of voxels, called "macros", are visible through their image tiles, and sending a list of these to the master GP. The master makes a global list of macro assignments to slave GP's. A macro contains 8 x 8~8 voxels. The slaves commence ray casting to create their image tiles. When a slave needs a macro which it doesn't have, it sends a "fctch macro" rqucst to the master GP. The master responds by instructing the renderer that has that macro to classify and shadc thc backing store sector containing the macro. Each backing store sector holds 32 macros or 128 x 128 voxcls (each processing elcmcnt handles one voxcl). After shading is completcd, the inaster instrucu the renderer to transmit all the macros in the backing store sector to the slavcs that nccd them (whether or not a fetch rcyuest has been received). Hence cach voxcl is classified and shaded once; fctch rcyucsts for macros already sent, or in process, arc ignored. When the slaves havc completed all their ray casting, thcy fill in their screen region pixels via bilinear interpolation. Then, thcy send their image tiles to thc frame buffcr and notify the mastcr that thcy havc finished. Whcn all the slavcs have finishcd, ihc master GP togglcs thc lramc buffer and notifics thc host that the framc is donc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Classification Interface</head><p>The volume rcndcrcr docs only local classilication. That is, the color and opacity assigned to a givcn voxel is a function of that voxel's intcnsity, gradicnt magnitude and gradient direction only. Classification is pcrlormcd via piece-wise linear functions (ramps). Opacity is computed by passing thc intcnsity and gradicnt magnitude through two ramp functions and multiplying the rcsults. Color is computed by passing intensity through scparatc red, green, and bluc ramp functions. Thc system is programmed to allow thc ramps to havc any numbcr of segments, but the currcnt user intcrfacc control panel only supports thrcc-segmcnt ramps. Thc user has interactive control over thc center, width, and hcight of each ramp. The user can tlip among multiple classificrs with a singlc keysuokc, to facilitate comparing diffcrcnt views of the data. For cxamplc, with CT data, one classifier could be sct to show skin and another bonc, and the user can rapidly flip back and forth hctwecn thcm ( <ref type="figure" target="#fig_1">Figure 2</ref>).</p><p>The inherent limitations of local classification bccome apparent if the region being vicwcd has a similar intensity and gradicnt to its background. MRI data, for instance, is difficult to vicw using only local classification. Clearly, we necd some means of distinguishing anatomically distinct regions of rhe s;imc organ <ref type="figure" target="#fig_2">(Figure 3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Optimizing the Ray Casting</head><p>The slaves use a varicty of tcchniyucs to inakc the image tile generation fast. As macros arrivc, an octtrcc is incrementally updated. The octtree is used to quickly skip over transparent regions, thereby avoiding trilinear interpolation and compositing in transparent regions. The renderers assist in computing the octtree by tagging macros which contain only transparent voxels. The octtree effort is worthwhile <ref type="bibr">[Levoy 88</ref>, 901, as typically 213 of the macros are completely transparent. Rays are terminated when they accumulate sufficient opacity and further processing would yield little color change ("alpha cutoff") <ref type="bibr">[Levoy 901</ref>. Rays are cast adaptively. At first, a coarse grid of rays is cast. Then, if the adjacent values are sufficiently dissimilar, additional rays are cast. The final image is formed by bilinear interpolation of the raycast pixels. The addition of a cut plane adds no run time cost, in fact it makes the system faster. The cut plane is implemented by starting the rays at the plane instead of the data set boundary. Typical time for a slave GP to rendcr a 128x128 tile, for a 128x128~128 data set, with coarse refinement, is 100-240 ms. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Controlling the Renderers</head><p>The master GP implements a finite state automaton for each renderer to make the task of controlling them in parallel, while receiving asynchronous fetch requests, manageable. The main states, and the approximate time in each (per renderer, per sector) are: 100 us 1. Loading a backing store region (32 macros, or 16K voxels) into a renderer's pixel memory. 2-3 ms 2. Classifying and shading the entire region in parallel (SIMD). 100 us 3. Storing the region of shaded voxels in backing store for transmission to the slave GPs. 2-3 ms 3. Sending each of the 32 macros to all the slave GPs whose screen regions "see" them.</p><p>100 us 4. Receiving acknowledgement from the renderer that it is finished and available again.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Performance</head><p>The current frame rate of 1.4 frames per second isn't quite adequate for coml'ortablc interactivc viewing. The kinetic depth effect is lost and using the joysticks for control is awkward. Our goal is at least 5 framcs per second with a 128x128~ 128 data set. Good load balancing among Ihc slavc GP's is difficult to obtain. Operating system ovcrhcad lor message passing among the GP's is highcr than wc cxpccted, so morc cfficicnt low level communications routines must bc dcvelopcd to lower the expense of short synchronization messagcs. The ring bandwidth is sufficicnt for our dcsircd lcvcl of performance, our GP's arc not yet fully utilizing it. The use of a singlc master GP intrtxiuccs latency and thus is a bottleneck. Exccution time prc?filcs show thc slavc GP's idle about 30-50% of thc timc on average. Wc havc installed softwarc for recording time-stamped events and are currently using it to undcrstand whcrc thc timc is going and finding ways to spccd up the nlgorithm. When the processor utilization is satisfactory, wc expect to devote some serious effort to optimizing the codc iuclf.</p><p>the 2 magnitude can be inferred from the X and Y components). This 13 bit normal is then used as an index into a shading table. This table is recomputed at the start of each frame using the current classification function and a Phong shading model. This results in only 2 l 3 shading computations rather than the 221 that would be needed for a 128 x 128 x 128 data set if the voxels were shaded directly.</p><p>This approach uses a 32 bit per voxel encoding scheme currently allocated as follows: 8 bits : original CT or MRI data 13 bits : normal encoding 8 bits : gradient magnitude 3 bits : currently unused.</p><p>This look up table shading method allows fast update rates for a volume renderer with a standard gradient based opacity shader <ref type="figure" target="#fig_3">(Figure 4)</ref>. The currently unused bits may be used to perform simple classification schemes in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Interactive Semantic Region Selection</head><p>Volumetric data often overwhelms viewers with nonessential information; a visualization program should also allow the user to emphasize specific elements of interest in the image. This requires a set of data selection tools to pare away extraneous detail. Such tools include: geometric, syntactic, and semantic classifiers. Geometrically based sculpting or clipping controls rcmove unwanted portions of the image. Syntactic controls use local image data properties to enhance or deemphasize image features; ramp-based classification is an instance of syntactic control. Semantic controls use global set-membership of data points to allow the viewer to dcfine particular regions of importance.</p><p>Since local properties of the data do not often reveal information regarding morphological features within the </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Replicated Data Implementation</head><p>The boulenccks in the volumc rcndcrcr described above, led us to cxplorc parallel algorithms that avoid communication of data and control messages. Taking this pursuit to the cxucmc, wc havc implcmcnteti a volume rcndcrcr that replicatcs thc data set at each GP and thereby achicvcs update ratcs ol' 15 l'rumcs per second. Due to GP mcmory limitations, the tiatri set size is limited to 128x128~128, but this is sufl'icicnt for much of our work and dcmonstriitcs the capabilitics of this approach. Classification and shading must now bc performcd in thc GP's so an cfficicnt approach to shading must be used. As a preprocessing step, each voxcl has its normal computed and encoded as a 13 bit number: 6 bits for the X component, 6 bits for the Y component, and 1 bit for Z (sincc thc normnl is ;I unit Icngth vector, image, and since geometric classification is sometimes unwieldy, it is useful to apply some 'semantic' groupings of a given data set to isolate features of form. Selecting rcgions on a voxel by voxel basis is not a practical means of defining features of 3D data. We attempt to gathcr together voxels of similar nature into primitive collections of voxels which then become the basis of the shape driven classification. Further segmentation is then pcrformed in a second pass by collecting together these region primitives in coherent volumes that encompass features in the data set. The way in which these primitive groupings relate to global structure are most cffcctively determined by a knowledgeable user. What is rcquircd is a graphical language of sensible fundamental rcgions and a means for users to interact with them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">Hierarchy Generation</head><p>One means of .representing rclated voxcls in a 3D</p><p>image is the creation of a hierarchical tree structure. Voxels with similar charactcristics can be collccted into primitive regions; thcsc priirlitivc rcgions can then be organized into a dircctcd acyclic graph. These rcgions can be assembled using the knowlctlgc of thc graph hierarchy, or they can be arbitrarily groupcd using sct operations. This kind of hierarchy providcs a handlc for manipulating groups of voxels to dcscribc portions of thc data. In previous research with 2D imagcs, we gcncrated these region hierarchies using onc of many techniques [Pizer, Cullip, Fredcrickscn 001. These methods characterize a 2D imagc as an intensity surfkc, and define regions based on the naturc of thc ridges and valleys in that surface. In our currcnt work wc cxtcnd thcse idcas for segmentation to thrcc diincnsions. Wc can trcat the images as a three manifold in four spacc, and and analyze 'ridges' and 'vallcys' in thc thrcc-fold. Wc arc now computing hierarcics of 3D imagcs using a rcvcrsc gravity watcrshcd algorithm. On a Dccstation3100 thc preprocessing ncccssary to crciitc thc hicrarchy for a 128x128~128 imagc with 256 gr:iy lcvcls can bc performed in roughly 15 minutcs.</p><p>Our plans includc thc dcvclopmcnt of other hierarchy generation algorithms LGauch, Pizcr 881. Thc shortcomings of rcvcrsc gravity watcrshcd ;ire known; it was however already availablc a s a 3D scgrncntation scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">The Interactive Editor</head><p>We have dcvclopcd a systcin to provide users with ;I means of manipulating thc rcgions ol' an imagc hicrarchy. The 3D intcractivc hicrarchy editor (3D IHE) providcs thc user with mousc-based interactions a n d a view of thc multiple slices of thc clntitsct. We chosc a slicc paradigm as the basis for navigating thrcc dimcnsional images because of its innatc ability to projcct away onc Icvcl of dimension without loss of uscr comprchcnsion.</p><p>The interfacc conlains thrcc basic componcnts <ref type="table">(Figurc  5)</ref>. First, a full s i x vicw of onc slicc through thc datasct. Mouse operations in this window allow the uscr to select/desclcct primitive rcgions for classification. Although the intcraction is within one slicc, thc sclcct~d regions extend in thrcc dimensions. Buttons on this window allow thc uscr to movc lorward anti backward in the unseen dimension, in ordcr to vicw iidjaccnt sliccs. The second component is a series of scaled down imagcs (24 in the currcnt implcmcntation) that allow thc uscr to see the effects of region sclcction on a wide rangc of slices. A slider on this window allows thc uscr L o vicw different slices in thc dataset. A I'rcqucncy button allows the user to subsamplc thc rangc of sliccs in ordcr to provide views of slices throughout thc entire datasct simultaneously. The final component of the editor is a control panel that provides I/O operations and hierarchical movement.</p><p>The results of 3D IHE show a dramatic improvement over the earlier slice by slice and voxel painting methods. For example, we created descriptions of a 128x128~128 dataset of a human head, and choose the task of selecting the a portion of the brain for volume rendering. Using 2D descriptions, and editing slice by slice (68 slices contained portions of interest), the task took approximately 40 minutes to complete. With the 3D description, the task required approximately 10 button presses, and took less than a minute. Using the same 3D description the entire brain can be selected in </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.">The IHE to Pixel-Planes Connection</head><p>We combined 3D IHE with volume rendering to create a powerful visualization suite. segmentation performed using IHE can be used to specify regions of interest to the volume renderer. We obtain better perception of the region selection process and subsequently aid the overall visualization of 3D volume images. The two systems are connected using standard Unix sockets via an ethemet, passing image masks and opcodes in TCP packets. Sending a selection mask from the IHE application currently takes about 10 sec. The mask is used during ray casting to emphasize selected voxcls by modifying their color and opacity. The system currcntly does not permit the selection mask to interact with the raw data before local classification; something we will change in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Application Results</head><p>Evcn with the limited, early version of this cxplorational 3D visualization system described above, we are finding that exploration of 3D data, w i t h immediate feedback and on-line classification,qualitatively increases the user's ability to understand thc information in H medical image.-The ability to dynamically control opacity and rcgions of interest (ROIs) has the potcntial of changing 3D display from a postprocessing stcp to a primary way of viewing medical image data. The rcal advantages that have been ascribcd to volurnc rendering seem to lic particularly in thc dircct rcndcring from the original image data. I f the uscr can focus on ROIs and on thc dynamic sclcction of rendcring parameters that optimizc thc visualization of surfaccs, thc actual means of thc producing thc final rcndcring, whcthcr by surface selection and subscqucnt rcndcring, or by fuzzy classification and compositing, may not bc central. An example of thc powcr obt:iinctl through this approach is the selection of thc cortcx rc.gion in an MRl data set and then the dynamic rcndcring ol' thc. whitc miittcr by the selection of appropriate classification ramps determining either opacity o r sclcclion thrcsholtl <ref type="bibr">(Figurc 6)</ref>. This level of visualization is now possiblc in ; I couplc of minutes by exploring parnmctcr v:ilucs using imincdiatc feedback.</p><p>Of course, viewing of medical iinagcs can ncvcr bc divorced from viewing thc contr;isLs in thc original data. However, with thc addition of dynamic sclcction of grcy scale slices from thc 3D dnta sct, with possiblc superimposition of thcsc slices on the cutplane, thc grcy scale viewing mode can bc fully intcgratcd into the 3D explorational viewing stylc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Conclusions</head><p>In creating this systcm, wc learned aomc vnluablc lessons. Thc rcquircmcnt for imincdiatc fcctlbxk makcs speed a critical issue. By crnploying an approach that replicates data throughout a MIMD machinc wc can overcomc communication bottlenecks a t the cxpcnsc of limited image s i x . Using lookup tables for normal and opacity values, w e can rctlucc thc niiinbcr of rcquirctl</p><p>..shading calculations by several orders of magnitude. This allows us to achieve the necessary speeds of 10-20 frames pcr sccond; the cost for these speeds is an acceptable loss of image quality.</p><p>The rendering speed of 0.7 sec with our distributed volume renderer is still one order of magnitude too slow; and the need of a few seconds to select a primary region from our quasi-hierarchical description or move to a parent in that description is not acceptable. Nevertheless, thc prcscnt speeds demonsrrate the power of user selection of 3D ROIs when supported by communication in terms of precomputed sensible regions and immediate display fccdback. Using this approach, the time required to select particular regions of medical data has been shown to be rcduccd by an order of magnitude. The present system also dcmonsuates the power of interactive control of local classifiers such as clipping and opacity ramps within ROls selected by the interactive editor.</p><p>Application of the combined systems to real images rcvcals their great potential for facilitating rapid comprchcnsion of volume data. Even the limited speeds of the present interactive system demonstrate the great importance of fast general purpose parallel graphics systcms, such as Pixel-Planes 5 , and the need for even fastcr systems with even faster data access and faster rcndcring algorithms on these systems--not simply as a convcnicnce but because they allow qualitative increases in uscr comprehension of their data. In the future, when such machines that are capable of supporting a wide range of scgmcntation and classification techniques at intcractive rates of up to 30 frames per second, and when thcy arc more widely available, volume visualization will bc a much more powerful approach. We expect that when interactive semantic region definition with volume visualization can be achieved in real time on affordable platforms, it will be the standard means for viewing 3D diilll.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Overview of Pixcl-Plancs 5 Systcm, showing Ring Network and Ring Devices that include Graphics Prtxcssors, Renderers, Host Interface. and Frame Buffer. screen space subdivision. In thc other, only MIMD screen space parallelism is uscd. The communication ring is a high bandwidth gcncral purpose inter-board communication link. A sustaincd bandwidth of 160 megawords pcr second is providcd by 8 time-sliced 20 MHz channcls.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Two Views of CT Data Using Local Classification Techniques (See color plate, page 410.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>MRI Data</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Imagc Produccd using table drivcn volumc rcndcres (See colorplate, page 410.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>3D IHE Console Window (See colorplate, page 410.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Comparison views, renderings of connecting nerve tissue with and without global classification (Icft is without semantic segmentation; right is with IHE regions applied) ( S e color plate. wae 4 10.)</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We would likc to thank Bill Oliver and Julian Rosenman for thcir cxpcrt advice and the physician's point of view. Wc arc also indebted to Jeff Buttcrworth, Marc Levoy, and John Poulion lor both thcir input and the significant contribution thnt thcir rcscarch rcprescnls.</p><p>This rcscarch has bccn I'uiidcd in part by thc li)llowing grants Defense P r o j ec t s Agency ISTO ordcr No. 7510 National Institutes of' Health Grant N o PO1 CA47982 National Science Fount1:ition G r a n t No. MIP-8601552    Ad van c e tl R ese a r c 11</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robcrt</forename><forename type="middle">A</forename><surname>Drcbin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Loren</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahm</surname></persName>
		</author>
		<title level="m">Volumc Rcndcring. Proceedings ol SIGGRAPH&apos;88</title>
		<imprint>
			<biblScope unit="page" from="65" to="74" />
		</imprint>
	</monogr>
	<note>Conpuler Grciphics 1 2 , 4. August IOXX</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Pixcl-Planes 5: A Hctcrogcnous Multiprocessor Graphics System Using Processor-Enh:rnccd Mc*riiorii..s</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Poulton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>O H N Eylcs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trey</forename><surname>Grccr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jack G Ol D Fca The R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Da V Id E I I S W O R T Ti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Inar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brice</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tcbbs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;89</title>
		<meeting>SIGGRAPH &apos;89<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="198" to="207" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Image Dcscriptions via the Multircsolution Intensity Asis of Symmetry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Gauch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Pixr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 2nd I n [ . Cor!f&apos; or1 Cop. \&apos;is</title>
		<meeting>2nd I n [ . Cor!f&apos; or1 Cop. \&apos;is</meeting>
		<imprint>
			<publisher>IEEE Catalog</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Three-Dimensional Display of Human Organs I&apos;rom Coin p ti icd Tomogruni s. &apos;* Co mp u t er C rnp hic: s l i n q c P r o</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Hcrman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">K</forename><surname>Lilt</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1079" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Display of Surfaces from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">; M</forename><surname>Lcvoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Computer Graphics and Applications I May Levoy</title>
		<imprint>
			<date type="published" when="1990-07" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="245" to="261" />
		</imprint>
	</monogr>
	<note>Efficient Ray Tracing of Volume Data</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Volume Rendering by Adaptive Rcfinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Lorcnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harvey</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Marching Cubes</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A High Resolution 3D Surface Reconstruction Algorithm</title>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH&apos;87</title>
		<meeting>SIGGRAPH&apos;87</meeting>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Volume Rendering Architectures. SIGGRAPH&apos;90 Course 11, notes for Volume Visualization Algorithms and Architectures. August Phong, Bui-Thong. Illumination for Computer Gencrated Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arie</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="311" to="317" />
			<date type="published" when="1975-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Toward Interactive Object Definition In 3D Scalar Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stephen</forename><forename type="middle">M</forename><surname>Pizcr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Timothy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robin</forename><forename type="middle">E</forename><surname>Cullip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Fredcricksen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">30 Imaging in Medicine (NATO AS1 Series F</title>
		<meeting><address><addrLine>Berlin</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Vcrlag</publisher>
			<date type="published" when="1990" />
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="83" to="105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Compositing Digital Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Portcr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Duff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH84</title>
		<meeting>SIGGRAPH84</meeting>
		<imprint>
			<date type="published" when="1984-07" />
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="253" to="259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Interactive Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><surname>Wcstover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Confcrence Proceedings</title>
		<imprint>
			<date type="published" when="1090" />
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="189" to="198" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
