<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Data Model for Scientific Visualization with Provisions for Regular and Irregular Grids</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Theoretical &amp; Applied Mechanics Center for SuDercomDuting Research &amp; DeveloDment</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lucas</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universiiy of Illhois i t Urbana-Champaigi Urbana</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Collins</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universiiy of Illhois i t Urbana-Champaigi Urbana</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><forename type="middle">J</forename><surname>Watson</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universiiy of Illhois i t Urbana-Champaigi Urbana</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Research</forename><surname>Center</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universiiy of Illhois i t Urbana-Champaigi Urbana</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">B M</forename><surname>Comoration</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">Universiiy of Illhois i t Urbana-Champaigi Urbana</orgName>
								<address>
									<postCode>61801</postCode>
									<region>IL</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Data Model for Scientific Visualization with Provisions for Regular and Irregular Grids</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>This paper presents a mathematical data model for scientific visualization b a e d on the mathematics of fiber bundles. The findings of previous works are extended to the case of piecewise field representations (associated with grid-based data representations), and a general mathematical model for piecewise representations of fields on irregular grids is presented. A discussion of the various types of regularity that can be found in computational grids and techniques for compact field representation based on each form of regularity are presented. These techniques can be combined to obtain efficient methods for representing fields on grids with w w u s regular or partially regular structures.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>An effective data model is essential to the design and development of scientific software systems. For example, object-oriented programming techniques depend on a hierarchical abstraction (mathematical model) of the data and the functions performed on that data. A shared abstraction of the scientific information is essential when a software system is developed by a team of programmers or when a single system is intended for interdisciplinary use. Thus, the data model is a primary consideration in the design of any scientific software system, whether it be an interdisciplinary tool or a special-purpose application.</p><p>There has been considerable interest of late in developing data formats to allow scientists to share and transport data sets freely. This was the topic of a recent ACM SIGGRAPH workshop 111. CDF <ref type="bibr" target="#b1">[2]</ref>, NetCDF[31 and the NCSA HDF <ref type="bibr" target="#b3">[4]</ref> are examples of data formats designed for scientific applications that are currently in use. These formats and their associated software systems allow scientists to port data from one host system to another and from one application to another. In addition, these software systems include data models and associated data structures that allow scientists to describe certain objects, such as regular grids with data. While the underlying data formats (conventions for handling the tasks of storing and communicating arrays, strings, etc.</p><p>Hawthorne, &amp; 10532 between applications, hosts and mass storage systems) are reasonably robust, the data models in previous systems lack the generality needed to support many scientific and engineering applications.</p><p>In this paper, we focus on the problem of representing scientific data on irregular, regular and partially regular grids, and indicate the several distinct forms of regularity that can appear in scientific data sets. The emphasis is on the effective representation of field dataas might arise in a variety of observational, experimental and computational science and engineering applications. Here we present only the conceptual, mathematical framework of the data model; details of the data structures and the data formats needed to implement the data model will be covered in later papers.</p><p>Butler and Pendley observed that the mathematical notion of fiber bundles provides a useful abstraction for an object-oriented scientific data model of considerable generality <ref type="bibr" target="#b4">[5,</ref><ref type="bibr">6]</ref>. This paper specializes and extends this idea to incorporate localized, piecewise field descriptions. In addition, we describe compact data representations that exploit various forms of regularity in the data.</p><p>We have observed that non-mathematicians tend to be intimidated by some of the mathematical jargon used to describe fiber bundles. For this reason, we deviate somewhat from the standard mathematical terminology in this paper. The interested reader can find a treatment of the topic of fiber bundles in <ref type="bibr" target="#b5">[7]</ref>.</p><p>The following section presents an overview of the data model. Section I11 introduces thefield element as the basis of piecewise field representations. Section IV introduces methods for compact representations on regular grids and section V presents an example application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Overview of the Field Data Model</head><p>This section presents a scientific data model that is suitable for representing continuum fields. However, it can also represent discontinuous geometries (such as random sample points) and wireline structures (such as ball-and-stick molecular models). A field is an object comprised of a base and dependent data. Roughly speaking, the base describes the range of the independent variables and the dependent data contains the corresponding dependent-variable information. More precisely, a base is a manifold whose coordinates are the independent variables for the field. The base might correspond to a geometric object, but this need not be so. The dependent data prescribes a value of the dependent variable for every position on the base.</p><p>A field is obtained by combining a base with dependent data. Next, we discuss the fundamental entities in the data modelbases, dependent data and fields. These are the basis of the piecewise data model and the compact representation methods presented in subsequent sections.  It is often useful to introduce a world-coordinate space W, as shown in <ref type="figure" target="#fig_1">Figure 2</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Base Model</head><formula xml:id="formula_0">N(E, R) = {V 1 v = E + U ; v E R; lul, IR}<label>(3)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Dependent-data Model</head><p>The dependent variable for a given field is designated Equations (5) emphasize that the manifold coordinates are the independent variables in the field data model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Field Model</head><p>Afield space, S, is the Cartesian product of a base</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S = R x Y (6)</head><p>and is defmed by supplying a mapping @: w + R and a space description for Y. </p><formula xml:id="formula_1">F = (@,W<label>(7)</label></formula><p>that share the same manifold domain w. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Piecewise Field Representations</head><p>This section introduces a component of the data model called afield element that supports piecewise field representations. Each field element describes the base and the dependent variable over a local region using a standard method of representation for the given element type. In other words, each field element describes a segment of the overall field, and the complete field is described by a collection of field elements that comprise a composite field group. Clearly, a field element is itself an instance of a field; but it is the standard manner of representation used to describe the base and the dependent variable that differentiates a field element from other field representations.</p><p>Field elements are especially useful when analytic representations of the base or dependent variable are not practical. For example, the entire base domain 0 might be too complicated to be described by a single mapping dj and a simple range of the manifold coordinates 5, or the variation of the dependent variable y might be too complicated to be conveniently described as a single analytic function over 0. In such cases, it is often useful to subdivide the base into a number of segments so that simple, local descriptions of the manifold w and the mappings @ and Y will suffice within each segment.</p><p>Each segment corresponds to a field element and the base C2 is the union of the field element bases,  <ref type="figure" target="#fig_4">N A (~, R ) and N g ( 3 , R )</ref> are defined as,</p><formula xml:id="formula_2">R = C21 U ... u</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B=I</head><p>Thus, to complete the topology definition for the points along the boundary of a field element, one needs to identity the adjacent element(s) and provide a means to find the manifold coordinate 6 in the adjacent element that corresponds to a given position Z. We can store an ordered list of pointers to the neighbor elements of field element a, n d ; / 3 = I , ma, in which m a is the number of adjacent field elements for element a and position in the list indicates the face or vertex of element a corresponding to each neighbor element. The neighbor list must include all adjacent elements, including those that reside in different fields in a composite field group. In order to support the field product operation described in section IV, each element a must be included in its own neighbor list.</p><p>Suppose we are given 6~ on the boundary of element A and we wish to find the corresponding manifold coordinate &amp;j in element B . If we can find an inverse mapping (explicit or numerical), t 9~: f2g + wg or t9~=(@&amp;, then.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="58">= ~~B(@A(SA)) (15)</head><p>Practitioners of computational science and engineering should find the notions of fields and field elements familiar. For example, there is a direct correspondence between a finite element and a field element. Splines, surface patches and other constructs from computational geometry also fit the model well. Finite difference operators imply underlying basis functions that can be used to define consistent field elements. Significantly, computer-graphics-oriented data (whether it be a volume, surface or raster image description) can be subsumed within this model. Therefore, a separate data model is not needed to support rendering operations in a visualization system.</p><p>We are now prepared to summarize the information needed to describe a field as a collection of field elements. To begin, we need to know the space types B and Y for the field and the number of elements ne2 used to define the field. If the world and base spaces are not identical, we need a description of the world space W and the transformation x (note that x is a property of the pair (B, W ) and need only be specified once for an entire field).</p><p>Assuming that we are using a linear combination of basis functions to define @ and Y in each field element, we need to list the following information (the interpolation If ne1 is large, then the amount of data needed to specify the field in the verbose format described above can be quite large. In some applications the subdivision of the field into elements does not exhibit any form of regularity. These representations are termed irregular, and it is difficult to improve on the verbose representation. Fortunately, in many applications the subdivision exhibits some form of regularity, so that a compact representation is possible, as described in the following section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Compact Field Representations for Regular Grids</head><p>This section is concerned with exploiting regularity to achieve compact representations of the field model developed in the preceding section. The term regular, as applied to grid data in the visualization community, has been used to refer to a number of quite different concepts. For the purposes of this paper, we define regularity as any special structure in a field data model that can be exploited to achieve a compact representation. It turns out that there are a number of distinct forms of regularity that can occur in a field representation. In practice, these can occur singly or in combination. Therefore, it is useful to develop a group of complementary compact representation methods, corresponding to each class of regularity, that can be combined to achieve the maximum degree of data compaction. A classification of different forms of regularity and the corresponding compact representation methods are presented next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Uniform Fields</head><p>A uniformfield is a field that contains only one type of field element. In this case, the element type description can be made a property of the field, so that it does not need to be stored redundantly for every element in the field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Shared Parameters</head><p>The base coordinates 3 and the dependent variable y are often continuous across the boundaries between adjacent field elements. In these cases, it is typical to use the interpolation forms, (13) and (16), with shared values of the parameters 54 and yap for base positions on the shared boundary. In the verbose representation the shared parameters must be repeated in every element in which they occur. Indirection can be used to achieve a compact representation when the number of shared parameters is large. The lists {Zap; p = 1 , paJ and {yap,. p = 1 , qd in the representation of each field element a are replaced by pointer lists {jab; p = I, p J and {jap; p = I, 403 that refer to lists of shared-parameters, {ED; p = 1, p} and {yp; p = 1, q}, where p and q represent, respectively, the number of distinct base parameters and the number of distinct dependent-variable parameters in the field. Of course, the decision of whether to use indirection is an independent choice for the base and the dependent variable parameters. The use of indirection is effective when the number of shared parameters is large. The pattern underlying a regular topology can involve a patch of field elements, as shown in <ref type="figure">Figure 5</ref>(e).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Product Fields</head><p>The Cartesian product operation is a powerful tool for generating compact representations of higher-dimensional fields using lower-dimensional fields. The product field representation supports very compact descriptions and is ideally suited for describing fields that exhibit partially where each parameter and neighbor pointer in the product field element is denoted by the index pair yS. The base parameters of the product field, C ' , p y~, and the corresponding basis functions, @4&amp;{a8), are generated automatically by the product operation, as seen in (19en.</p><p>By definition, the dependent-variable space Y is the same as in the fields A and B (it is not derived from a product operation). Although the basis functions for the dependent variable in the product field, w(la&amp;r&amp;!. are generated by the product operation (see equation (1% the dependent-variable parameters, y* must be specified</p><p>The product operation generates implicit element type separately.</p><p>descriptions <ref type="figure" target="#fig_0">(equations (19u.b,c.df,g,h,ij)</ref>   Furthermore, we specify that the same interpolation functions will be used for the dependent-variable model, so qa = P a and la = 4ap.</p><p>Next we describe the bases for the three component fields. The base spaces BA, Bg and BC correspond to the coordinates 8, 8 and r , respectively, of the toroidal coordinate system with major radius R shown in <ref type="figure" target="#fig_12">Figure  8</ref>. Each of the component fields has regular positions (uniform spacing) and regular topology, so we only need to specify ne1 <ref type="figure" target="#fig_0">(8, 7, 10)</ref>. a starting value Eo <ref type="figure" target="#fig_0">(O, -9d10,O)</ref> and an increment A (W6, z/5, 7/10&gt; for each component field. Then the shared list of base parameters and the pointer lists for each field are given by, where we have taken care to include each element in its own neighbor list. We exclude elements 0 and nel + I , respectively, from the neighbor lists of the first and last element in each field. The desired field is specified by the product FA x FE x FC and the shared parameter list, y d F k p . . The first three subscripts in the dependent-variable parameter list identify the field primitive and the last three identify the interpolation point. A typical field primitive and the base of the product field are shown in <ref type="figure" target="#fig_12">Figure 8d</ref>. The product field geometry is displayed in a three-dimensional, Cartesian world coordinate space in <ref type="figure">Figure 9</ref>, where the mapping x is given by, x = (R + rcose)cose; y = (R + rcos0)sine; z = sin 0 (21)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>We have presented a general mathematical model for piecewise representations of scientific field data. The model clarifies the meaning of the term "regular grid," and demonstrates that there are actually several forms of regularity. Each of these can be exploited to obtain a compact representation. Data structures based on this mathematical model appear to be attractive for implementation in general scientific computing applications as well as in visualization systems.</p><p>In this paper we have concentrated on the problem of scientific data representation, as opposed to data manipulation and data processing. In fact, the data model presented here also provides a suitable basis for objectoriented visualization and scientific computing systems. The object class hierarchies and object functions of such a system will be described in a later paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1</head><label>1</label><figDesc>shows a simple field corresponding to a scalar function of a single variable. The base, the interval [a, b] on the real number line, corresponds to the domain of the function. The range of the function forms a subset of the dependent variable spacethe set of real numbers. The function is a mapping that assigns a member of the dependent variable space to every location on the base. In general, a field description includes specifications of the space that the base resides in, the base domain and the dependent variable space plus an assignment of a member of the dependent variable space to every base location.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2</head><label>2</label><figDesc>illustrates the base data model. A base is a manifold, 0 c B; where B is a base-coordinate space. Every position on R is associated with a base position vector, S E B. We introduce a manifold-coordinate space, M, and a manifold domain, w c M , to describe R. The dimensions of M and B must satisfy the condition, dim(M) I dim(B). A position on the manifold is designated by a unique manifold position vector, 4 E w. The relation between R and w is established by an invertible, differentiable mapping 0: o + B; such that s" and R are the images of 5 and w under 0.InFigure 2, the example base domain R is a curved surface in three-dimensional Cartesian space, B = R3,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 Figure 2</head><label>12</label><figDesc>A simple field A Manifold domain C The base data model and the example manifold domain is a rectangular region, w = [U, b] x[c, d] in two-dimensional Cartesian space, M = R2. In this case, dim(M) &lt; dim(B). Note that A x B denotes the Cartesian product of A and B.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>4 )</head><label>4</label><figDesc>by the symbol y E Y, where Y is the dependent variable space. The dependent-data model consists of a description of Y and a definition of the value of y at every point on the base manifold. In other words, we seek a mapping Y: w + Y, such that y = Y((5) in w ( Sometimes it is more natural to define y as a function of the base coordinates, y = Y(E), or the world coordinates, y = Y'(x). In these cases, we can still construct explicit functions of 5 via the mappings @ and x. y = Y((5) = Y(@(e)) in w (54 y = we, = wl!(@((5,,) in 0 (5b)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>*Figure 3 A</head><label>3</label><figDesc>The space description for the dependent-variable space Y is implicit in the mapping Y . [In the standard mathematical Y field space S and a member field F nomenclature, a field space is called afiber bundle and a field is afiber bundle section.]A field space is simply the union of all fields that share the same base R (described by the mapping @) and the same dependent-variable space Y.Figure 3 illustrates simple examples of a field and a field space. Here, M = Y = ' 9? and B = m2. The manifold domain w is the interval [IzL?, 3 d 2 ] and the mapping @ is specified by El = R cos (5; E2 = R sin 5. The base R is the semicircle of radius R in the second and third quadrants of B . The graph of the field space S is the half cylinder projected from R in the y direction. The addition of the mapping Y defines the field F , whose graph appears as a curve inscribed in S.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4</head><label>4</label><figDesc>C 2 M l = #I(w~) U ... U @ m l (~m l )<ref type="bibr" target="#b6">(8)</ref> where % and are the local manifold domain and base mapping for field element a and ne1 is the number of field elements used to describe the complete base 0.This piece-by-piece, local representation of a field is consistent with many computational methods, such as fmite element and finite difference methods.A field element consists of a base representation, a dependent variable representation and a global topology representation. These are specified in a standard format that is unique to each element type. Each element type is defined by a unique combination of a manifold space. a range of the manifold coordinates to define the manifold domain w, and parametric models for specifying the mappings @ and Y. Due to the piecewise representation, the base topology must be defined both locally (within each element) and globally (via information linking each element to its neighbors). The local topology representation follows automatically from the local manifold coordinates. The global topology representation consists of a directory of elements adjacent to each face or vertex of each field element. A field element description includes a specification of the field element type and the data needed to define the global topology and to complete the parametric definitions of @and Y. Methods for describing these components of a field element are discussed next In a parametric representation, the base coordinates in field element a are expressed as functions of the manifold coordinates and a set of parameters, CUB; B = 1 , pa. 3 = @deal, ... , cWa, t} in m a (9) It is often useful to introduce an interpolation form of (9), such that the base coordinates are expressed as a linear combination of basis functions defined over w a Pa : = C :d@,p(t) in ma (10) B=1 The basis functions are selected so that qadtY) = 8 6 where Garis the Kronecker delta and t y i s the manifold coordinate at the yrh interpolation position in field element a. The combination coefficient Sa! represents the value of 5 at the B-rh interpolation point in field element a. The dependent variable is also represented in a parametric format, Continuation of the topology description across an interior boundary between two field elements that can be specialized to an interpolation form. qa Y = C Yaavadt) in m a (12) The basis functions are selected so that ~d t j = Garand dap = yap, where yap is the value of y at the B -t h interpolation point in field element a. Note that the number of basis functions, the definitions of the basis functions and the interpolation positions need not be the same for the base mapping and the dependent variable mapping. However, it is sometimes convenient to choose pa = qa and $4 = This choice corresponds to the isoparametric finite element model [8]. The differentiable coordinates 5 within each field element provide an implicit definition of topology for all interior positions. However, more information is needed to fully define the topology along the boundary of an element. Figure 4 illustrates the situation for an interior boundary between a pair of two-dimensional field elements, A common base position 3 i s identified by the manifold coordinates 444 and 48 in elements A and B , respectively. The neighborhood of Z of radius R is the union of two semi-circular regions, N ( 3 , R ) = N A (~, R ) U NHZ, R}; where the sets</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>forms, (IO) and (12), are assumed from here on): field element a --1. nel: Element type description: {Ma, ma c M a 9 P a , ( 4~; P = 1 , Pa), qap P = I , qd. m d Base parameters: {Se-p = 1 ,pa3 Dependent varkable parameters: { y~; p = I, qJ A list of neighboring elements {naS; p = 1 , m d</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>= 1 ,A</head><label>1</label><figDesc>regular positions and/or topology. A product fEld is the Cartesian product of two lowerdimensional fields. Suppose we have defined a pair of field spaces that share the same dependent-variable space, S A = RA x Y and S B = OB x Y. The product field space S = SA x SB = R x Y, where R = RA X O B (18) and is formed from ne1 = (nel)A(nel)B elements. each designated by an index pair ap, where a = 1, (neOA and p (neljB. For element ap in the product field we have, Figure 5 (a) irregular positions, irregular topology; (b) regular positions, irregular topology; (c) irregular positions, regular topology; (d) regular positions, regular topology; (e) a non-trivial, regular topology 4.3 Regular Base Positions Sometimes it is possible to specify the base parameters Z 4 (or Zp if indirection is used) implicitly. If the grid positions Bap or 3 8 are evenly spaced or follow any regular pattern, then their values can be computed as functions of the indices a and p. &amp;(a$) or ~p ="(p) (16) M M = CMdA x(Mg)B; 6 4 = ((ed.4, (eg)B) This case of regular positions enables a very compact representation in which the function b* replaces the explicit base parameter list, {Se* p = 1, Pa; a = 1, nel} @4srs(@ = (@U)(td)A (@BS(tB))B o r { Z / $ p = l , p } . collection of field elements can also exhibit a regular topology. That is, the lists of pointers to the shared parameter lists, {iUp; p = I, Pa; a = 1, nef] and Y(tU$ = c ~Y O &amp; 6 V 4 u s ( e U~) (19N p l &amp;I 04; fi = 1, 4a; a = 1 , neo, and the lists of adjacent field elements, {nap; / 3 = 1, ma; a = 1, nel}, follow regular patterns. Each of these lists can be replaced by a single VC@)de&amp; = (VU)(ed)A ( V d t &amp; ) B (19i) function that applies to the entire field. m 4 = (mdA(mS)B (19j) Arbitrary permutations of regular and irregular positions and topologies are possible, as illustrated in Figure 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>" 4 )</head><label>4</label><figDesc>6 = (("Ur)A, (n&amp;B) (1 9k)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>4 .</head><label>4</label><figDesc>) and implicit topology descriptions (equation (19k)). Equation (I9e)provides the basis of a compact base representation. Only (pJA + ( p d g base parameters need be stored for each product element 43, instead of (pJA(pB)B parameters, as in the verbose form of ( 1 9 If either of the component fields feature shared parameters, regular positions or regular topology, then the corresponding compact representations can be combined with (29e) and (19k) to obtain an extremely compact storage scheme (see the example in the following section).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 6</head><label>6</label><figDesc>shows how the product operation supports compact representations of fields that are only partially regular. The component field shown in (a) has nonuniform element types, irregular topology and irregular positions, while the component field in (b) has a uniform element type, a regular topology and regular positions. A compact representation of the second field is used, based on a single element type description, a field-element count of 4, a grid-point count of 5 and a uniform spacing, A The shared list of base parameters is generated by the implicit formula, Ea = (a -1)A; a = I , 5. The pair of pointers into this list for field element a, (i*(a,l), i * ( a , 2 ) ) , are given by (a, a + I ) for a = 1,4. The implicit pair of neighbors for field element a, ( n * ( a , l ) , n*(a,2)), is given as (a -1, a + I) for a = 1,4 (with the obvious modifications for the first and last elements). A verbose representation is used for the first component field, except that a shared list of base parameters is used. The two component representations, combined with equations (19) completely define the product field shown in (c), except for the specification of the dependentvariable parameters, y d + The product operation can also be applied to field element types, as shown in figure 7, to generate an extensive library of compound element types from various permutations of simple field element types. The verbose format described in section 111 provides the flexibility needed to describe any field representation, but it does not necessarily provide for efficient storage. The various compact representation techniques presented in this section are complementary, and can be used in combination to take advantage of all of the available regularity in a given field description. Nonetheless, these representations are best understood as "shorthand" versions of the verbose field reuresentation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 6 AFigure 7</head><label>67</label><figDesc>partially regular field (c) represented as the product of an irregular field (a) and a regular field (b) I Element AI Element B 1 Product Element, AxB Generation of Cartesian product field elements 5 Example This example illustrates the application of several of the compact representation techniques to the description of the toroidal solid shown in figure 9. The solid is generated by the Cartesian product of three component fields, designated A, E and C, shown in Figure 8. Each of the component fields is a uniform field, so the field element type description only needs to be stated once (in fact, all three fields share the same field element type). We have, Ma = 35 ; W a = [ O , l ] ; Pa = 2; &amp;I({) = 1 -5; I$&amp;({) = 5; and m a = 3, for all values of a = 1, ne1 and for all fields F A , F g and F c . That is, all of the component fields are based on one-dimensional elements with linear interpolation functions, each (except the first and last) having two neighbor field elements.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 8</head><label>8</label><figDesc>= $(p) = (pl ) A + SO i d = i*(a,p) = (a -1) + p; a = I , nel; p = 1 ,Pa (206) Compact, piecewise model of a toroidal solid (a) typical manifold domain and basis functions for a field elemenr (b) toroidal coordinate system; (c) base domains of the component fields; (d) manifold domain of product field primitive and product base domain n 4 = n*(a,P) = (a-2) + P; a = 1 , nel; p = 1 , ma (20d)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>world position vector, x E W , and the world domain, V c W , are the images of Z and R under x.</head><label></label><figDesc>Note that the coordinates of the manifold position vector 5 are the independent variables and that the base coordinates Eand the world coordinates x are instances of dependent variables (although @ and x can be identity maps, so that the distinction between 5, E and x might be blurred).</figDesc><table><row><cell>embedded in either B or W. Topology describes the concept of a neighborhood within the base -given some position S on the base a, what points are nearby? The answer to this question is</cell></row><row><cell>important in a variety of visualization algorithms, such</cell></row><row><cell>as trajectory integration, isosurface construction,</cell></row><row><cell>smoothing algorithms and certain rendering algorithms.</cell></row><row><cell>The differentiable mapping</cell></row><row><cell>For example, many computer</cell></row><row><cell>graphics software systems use a three-dimensional</cell></row><row><cell>Cartesian world coordinate system to describe displayable</cell></row><row><cell>objects. Thus, if the base domain is described in a special</cell></row><row><cell>coordinate system (cylindrical, spherical, toroidal, etc.),</cell></row><row><cell>the base coordinates 3 must be transformed to the</cell></row><row><cell>Cartesian world-coordinate space prior to display. In</cell></row><row><cell>other cases, the base-coordinate space might be defined</cell></row><row><cell>locally. Then it is necessary to map the local base</cell></row><row><cell>coordinates into the global world-coordinate space. In general, we define a mapping x : R + W , such that the</cell></row><row><cell>The mapping x to any given world-coordinate space W is a property of the base-coordinate space B . For the example in Figure 2, the mapping x represents a simple</cell></row><row><cell>rotation and translation, where B = W = %'3.</cell></row><row><cell>The base can be viewed alternatively as a manifold</cell></row></table><note>@ provides a means to find the answer. The neighborhood of B on R of radius R &gt; 0 is defined as the set of points,</note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Data Structures and Access Software for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Treinish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAF&apos;H &apos;90)</title>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Software Package for the Data Independent Management of Multi-Dimensional Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Treinish</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Gough</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EOS Transactions</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="633" to="635" />
			<date type="published" when="1987" />
			<publisher>American Geophysical Union</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">NetCDF: An Interface for Scientific Data Access</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Rew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Davis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applicafions</title>
		<imprint>
			<date type="published" when="1990-07" />
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">NCSA HDF Calling Interfaces and Utilities</title>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
		<respStmt>
			<orgName>National Center for Supercomputing Applications</orgName>
		</respStmt>
	</monogr>
	<note>Version 3.0</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The visualization management system approach to visualization in scientific computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Butler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Pendley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Butler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Pendley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">A Visualization Model Based on the Mathematics of Fiber Bundles</title>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page">4551</biblScope>
		</imprint>
	</monogr>
	<note>Computers in Physics</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Applied Differential Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">L</forename><surname>Burke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Cambridge University Press</publisher>
			<pubPlace>Cambridge, U.K.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">0</forename><forename type="middle">C</forename><surname>Zienkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Taylor</surname></persName>
		</author>
		<title level="m">The Finite Element Method</title>
		<meeting><address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>McGraw Hill</publisher>
			<date type="published" when="1989" />
			<biblScope unit="volume">I</biblScope>
			<biblScope unit="page" from="40" to="44" />
		</imprint>
	</monogr>
	<note>4th Ed</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Figure 9 Segment of a toroidal solid obtained by mapping the base of the product field in figure 8d to Cartesian world coordinates. The gridlines indicate the division of the base into field elements</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
