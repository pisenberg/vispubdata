<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Advanced Visualization on Desktop Workstations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steve</forename><forename type="middle">M</forename><surname>Legensky</surname></persName>
						</author>
						<title level="a" type="main">Advanced Visualization on Desktop Workstations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Computer graphics and visualization play a central role in software tools for Computer-Aided Engineering (CAE) and scientific research. As capabilities of low-cost workstations are enhanced both through pricelperformance breakthroughs and distributed computing, more sophisticated interactive techniques become locally available to a wider range of users. This paper explores some of the primary challenges that face designers of hardware and software for visualization who are attempting to create tools that will be used and widely accepted. Possible solutions to some of these challenges have been incorporated into FIELDVIEW, a commercial tool for increasing engineering productivity in Computational Fluid Dynamics (CFD).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Background</head><p>Engineers and scientists have been using computer graphics visualization in data analysis since the fiist charts were "plotted" on a line printer or pen plotter. Most of these tools were two-dimensional in nature and they operated in a batch mode. Visualization was anything but interactive, but even these early techniques had great value in interfacing the human perception capabilities to data. The primary problems were those of access and turnaround; these early pioneers did not mind that they were often issuing commands to control theactual pen ontheplotterorwritingFORTRANcodetoget the simplest plot.</p><p>The next major development was that of local graphics capabilities and eventually, the first workstations. Now users could create plots locally, without having to work in a batch mode or constantly waiting for results. The first generation of interactive plotting tools were created, and most of them were very specific to the particular application. For example, a program developed at a company that builds jet aircraft engines would be very carefully customized to the specific needs of the in-house users. Since the manufacturer was paying for code development, the primary focus could be tight coupling to his engineering department. This is a very significant point, to be expanded upon later. Many such custom tools were developed, and in fact many are still in use today.</p><p>These new graphics terminals and engineering workstations were ideal tools for a new class of commercial software: Computer Aided Engineering or CAE. These packages were developed and marketed by companies like PDA Engineering and SDRC for the express purpose of improving engineering productivity. They often combined both modelling (CAD) and simulation so that designs could be evaluated "synthetically", as opposed to the extensive use of physical prototypes. These CAE tools also used visualization in a tightly coupled way, to create images and plots of simulation results and various design parameters. The access to and control of the visualization function was done in a way that the end user (engineer) could understand in terms of his engineering problem, not computer graphics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The Desktop Today</head><p>The advances in workstation technology in the past few years have greatly changed the way that engineering design and scientific research can occur. Three specific areas may be identified for their impact on visualization: CPU power, graphics performance and network computing. For about $20,000, an engineer can purchase a machine for his desktop that has the compute power of yesterday's supermini and 3D graphics in an X-window that outperform the expensive "special boxes" of the past. This is not to say that a $20,000 workstation can replace a CRAY-2 with terabytes of storage and a graphics superworkstation. It is the case that the complexity of problems being studied has increased to more than keep pace with the available compute power. But, if used properly by the applicationsoftware, thesepowerfuldesktopsystemscanbeanin-teractive window into many of today's real world design tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Balance and Integration</head><p>For applications to"proper1y use" a desktop system, they must achieve a balance between the needs of the user and each of the three characteristics discussed earlier (CPU power, graphics performance and network computing). Setting the proper balance in an application often depends on the nature of the specific needs of the user. For example, a tool for a structural engineer looking a transient deformation results will have different needs than one designed for steady state studies of fluid flow. If the resources at the desktop are "limited", they must be properly mapped onto the visualization requirements of the design process.</p><p>The second issue is that of integration. For a tool to be accepted as useful in daily research and design tasks, it must be a help, not a hindrance. It must provide capabilities almost immediately and become a natural part in the work day of the user. This integration takes two forms: (1) isolation of the user from the"nuts andbo1ts"of visualization, includingadirect interface to the results data that is already being used and (2) providing functions that are directly related to the problem being worked on, so that the user does not have to learn unneeded abstractions in using visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A CFD-specific Visualization Tool</head><p>FIELDVIEW is a commercial product that is specifically designed for engineers and researchers in Computational The design goals for FIELDVIEW were intended to create an easy-to-use engineering productivity tool for CFD that would have wide market acceptance: 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.</head><p>Built specifically for aerospace and automotive CFD community analyze the daily needs of the engineers and researchers and to create a tool that enhances productivity, while fitting easily into their natural routine.</p><p>There are many attributes in the design of FIELDVIEW that have been impacted by considerations of Balance and Integration and they are too numerous to mention here. The focus willbeplacedon rhoseitemsofgeneralinteresttodesigners of hardware and software for visualization. These are:</p><formula xml:id="formula_0">1. Built-in Function Computation 2. Minimization of New Abstractions</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">X-Windows and Network Environments</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Pseudo-color Graphics and Portability</head><p>FIELDVIEW accepts volumetric data in the form of a field of multiple grids in 3D space. A grid is constructed of node points; each node point is described by its location in Cartesian space and its location on an IJ,K grid structure. Computational or experimental results are stored as five <ref type="bibr" target="#b5">(5)</ref> flow quantities per node.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Built-in Function Computation</head><p>Most visualization tools are thought of as post-processors; while in the strictest sense this may be true, many types of computation can occur conveniently in the tool.</p><p>Consider the elements of a typical visualization system:</p><formula xml:id="formula_1">1. Datafile VO 2.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3, Viewing interface</head><p>The actual visualization algorithms (i.e. iso-surface, cutting planes, etc.) lie within Item 2, the Filter stage. Given that all of the properties one is interested are contained in the input file, these three steps can be used to create a functional tool.</p><p>However, in CFD there are dozens of properties in even the most basic flow problem. An analysis of the application reveals that in many cases, flow can be characterized in terms of a small number of "primitive" quantities that can be used to calculate many "derived quantities." Filters to convert data into displayable form FIELDVIEW uses the PLOT3D data format which stores five flow quantities per node point. These dimensionless quantities (Density, Momentum Vector and Total Energy) completely describe all flow characteristics for ideal gases. By providing an additional element in the visualization system, a Scalar and Vector Function Calculator, the product can compute dozens of derived quantities during the visualization process. Functions provides two important benefits to the user: (1) all possible quantities need not be stored in the data file (as they can bederived) and <ref type="bibr" target="#b1">(2)</ref> certain functions can be provided with an interactive interface to their computation.</p><p>The first point represents both Balance and Integration: simple computation at a local workstation is traded against storage of large data files and I/O time, because knowledge of the CFD design application tells us that users alternate between functions infrequently. Real-world CFD problems can involve millions of grid points; if dozens of properties must be stored at each point, the data storage requirements can quickly swamp a desktop system. This is especially wasteful,ifonlyasmallnumberoffunctionsareusedatagiven time.</p><p>The second point describes a specific type of function calculation that occurs in CFD: particle path integration. One way to understand a flow is to observe the motion of particles that are released in the flow field. By integrating over the Velocity field, the path of a weightless particle may be obtained. This can then be drawn in one of several representations. This process is interactive: the user chooses the release point for one or a group of particles and then asks for the paths to be calculated. There are also specific requirements for these particle paths in CFD, such as restricting the flow to a surface and forwardbackward integration. <ref type="figure" target="#fig_7">Figure 2</ref> (a color plate) shows a FIELDVIEW screen shot of streamlines over the Space Shuttle. The Streamlines control panel on the right side of the screen contains tools for interactively "seeding" the particles (known as "creating a rake"). Once the engineer has created the rake, an integration over the contents of the current vector register yields the particle paths.</p><p>This image also illustrates the capability of combining multiple data types in a single display. The body of the Shuuleisindicatedby creatingashadedsurfaceof theboundary of the computational mesh. In addition, the contents of the Scalar Data register, in this case Vorticity, is displayed on the particle path lines. This allows the engineer to work with multiple aspects of a dataset in a single display.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Minimization of New Abstractions</head><p>By understanding the particular application, the functionality is implemented in a way that is natural for the CFD engineer to understand. The Function Calculator does not require an equation each time a new function is needed; it has selections for Total Temperature and Vorticity. And particle paths have the appropriate options for restricted integration that the engineer expects.</p><p>The goal is to make the user comfortable with operating the software: if there are many new concepts to learn, there is a greater chance that the tool will be thought of as complex and undesirable. If a tool brings with it a 1arge"mental over-head", it may not be used, even though the visualization technology is superior.</p><p>FIELDMEW provides an interface to several types of visual paradigms through four (4) Visualization Panels. Each panel can be used to create and control multiple elements, but all elements of a given type are controlled from the single panel. As an example, the Iso-surface panel can be used to create many iso-surfaces and cutting planes, but they are all controlled from the single Iso-surface panel. The panels are:</p><p>Computational Surface. This panel is used to create visualizations based on the structure of the computational mesh. Scalar and Vector functions may be displayed on the mesh.</p><p>[so-surface. This panel is used to create surfaces based on a constant value of the scalar function. In addition to providing scalar functions derived from the 5 primitive flow quantities, a set of geometric functions is provided. These may be used to create arbitrary cutting planes and cylinders.</p><p>Streamlines. As previously discussed, this panel controls the interactive seeding of particle rakes and integration over the current Vector function.</p><p>Titles. The Titles panels provides for annotation of the display. The user can place titles, annotated color map bars and arrows onto his display so that the results of the visualization can be communicated effectively to others.</p><p>A simple "createmodifydelete" model is used for controlling the visual elements. The name of the element is specific to the type of panel used to create it, but the user modelis identical, whetherdealing witha"rake"of seedparticles, an arbitrary cutting plane or a smng of text for a title.</p><p>By using a unified interface to many different visualization types, the amount of screen space devoted to the user-interface can be minimized. Another benefit is the reduction in the amount of "window popping" that occurs during normal use of the program. On a lower power machine, redrawing the X and MOTIF panels and refreshing any graphics that may be obscured by the U1 can be very time consuming. Combustor dataset from Pratt &amp; Whitney. The display consists of four "surfaces" that have been created by the user. Surfaces 1 through 3 are representations of the solution boundaries. The left-hand surface (with a suggestion of a hole) is point at which the fuel injector joins the combustor and is the base of the flame. The upper surface, which the user has drawn in wireframe, is the inner surface of the combustor and the lower, shaded surface is the outer face.</p><p>The blue shape in the interior is an Iso-surface of 1800 degrees, which is arelatively low temperature for the interior of a combustor. A slider is used to select the value of the Isosurface Data register that will be used for computation of the current Iso-surface. Light Source Shading has been selected for the surface, and thus the three-dimensional shape of the surface is clearly apparent. In the simplest scenario, the entire application, along with any datasets that are required are resident on the local workstation. However, in a desktop scenario, disk storage is usually at a premium, and so the next logical step is to provide for data access over the network. FIELDVIEW accomplishes this through the Unix NFS technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>X-Windows and Network Environments</head><p>During the Data Input process, a file selector is presented to the user so that the dataset names in any &amp;rectory may be browsed and selected by clicking the mouse on the name.</p><p>NFS allows remote file systems to be mounted such that the appear no different than the local disk. Using this technique, the user can input data sets from aremote site without having to first make a physical copy on the local workstation.</p><p>The extreme scenario involves using an X Terminal or using only the X Window Server on the local machine. Using X and MOTIF for UIMS elements is relatively simple, but providing 3D graphics in that environment remains a problem today. Most workstations with 3D acceleration use an approach that considers the graphics window as "an orphan". There are many intricacies in handling UIMS events (such as mouse clicks) in the graphics window. since there are usually two event queues, one for the graphics window and one for everything else.</p><p>Although PEX is promising to solve many of these problems, it is neither widely available (at present) nora complete solution. Careful analysis should be made of the kind of 3D</p><p>interaction that is required in the application before committing to a specific technology. PEX is designed to work with PHIGS and PHIGS uses a graphics model that is biased towards interaction at the transform level. This is typical of CAD and any application where rigid bodies move relative to one another. Many data visualization applications however, do not fit into that model and in fact are hindered by it, because these applications tend to update the poinVpolygon data more frequently than the transforms.</p><p>Several hardware manufacturers are taking notice of the problems with usingaPHIGS-based model indatavisualization and are proposing a set of 3D X extensions. The intent is to provide application developers with a way to use any 3D acceleration that may be implemented for PEX without having to use all of the PHIGS protocols. For example, one could pass 3D polygons to an X Window and have the local hardware perform Z buffering and tiling. This may well prove to be the best solution to using remote 3D acceleration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pseudo-color Graphics and Portability</head><p>Given the fact that PEX is still evolving, application developers are usually presented with two alternatives: deal with a non-portable orphan window or use a softwarerenderer in the pseudo-color X window. In the second case, one will find that redrawing the graphics (using a software renderer to drive the X-Window) can be very slow. In designing FIELDVIEW, it was determined that changes in 3D viewing transformations occur relatively infrequently, but that updatesof cutting planes, streamlines and iso-surfaces will dominate the interaction. The resources needed by these tasks are dominated by CPU cycles to update the display list rather than viewing or modelling transformations. This fact for example, led to the choice of a software display list traversal method. Therefore, the traversal is independentof thechoiceof actualdrawing method. When operating on a system with acceleration (such as hardware tiling, transparency and Z buffering) the driver makes use of these functions. On a systems with only a "dumb" frame buffer, a software renderer is provided, with a Z buffer that can be switched on or off depending on the type of interaction desired.</p><p>In terms of sheer numbers of installed desktop workstations, 8 bit displays (without any 3D acceleration) continue to dominate. X terminals can also be expected to be placed on many desktops. Building advanced visualization tools that operate in a pseudo-color environment is a particularly interesting problem. The design issue is optimizing the use of an extremely limited number of colors and learning tocooperate with the X Window system.</p><p>Many great lessons can be learned about operation in pseudo-color from the CAE packages that have operated in that environment for many years. The approach taken here is to use a segmented hardware color map, as shown in <ref type="figure" target="#fig_6">Figure  5</ref>  IVIEW-DORE has been enhanced in two ways to support this type of operation. First, the visualization of scalar data can occur by interpolation of vertex color or by interpolation of the scalar variable prior to color lookup. In either case, a range of 100 to 128 hues proves quite adequate for the visualization of scalar data.</p><p>The display of light-source shaded objects is handled with a second enhancement, designed to allow multiple intensity ranges for a small number of hues. A very good feeling for the shape of an object can be obtained with as few as 8 levels of intensity across a curved surface. <ref type="figure" target="#fig_9">Figure 6</ref> (a color plate) shows an image that combines two single light source shaded objects (left and bottom surfaces), a wireframe object, three color mapped planes and the X/MOTIF user interface. This can be accomplished on an 8 bit display, without any need for dithering, and the image can be expected to look nearly identical to that obtained using a hardware accelerated 24-bit machine.</p><p>Pseudo-color operation however, cannot duplicate all of the effects that one gets on a mecolor system. The technique described above is only useful if the lighting and surface color scenario is within a smct set of rules. For example, light source shading cannot be applied to a surface that has a scalar color map applied. An example of such a display is shown in <ref type="figure" target="#fig_10">Figure 7</ref> (a color plate).</p><p>case". This affects graphics interaction, network file and compute access and storage.</p><p>Study the user to determine where visualization can actually help, and focus there, instead of providing many functions that may not even be used, and may compromise the clarity of the system. This is especially important when designing a tool for operation on a system with limited resources, as searching around for a desired function can involve many time-consuming redraws and screen refreshes.</p><p>Finally, make a decision early on as to whether portability is going to be a key attribute of the application. If the answeris YES (as it should be) this will force the consideration of issues such as portable 3D graphics, network file access and good portable programming standards up front in the development process and will lead to a more efficient implementation.</p><p>DORE is a trademark of Stardent Computer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>References Conclusions</head><p>Visualization tools have been evolving since the days of the first line printer "plots". The objective of all of these tools has been the same: provide a designer or researcher with a better interface to the data under study. Achieving this objective for the general user community has been hindered however, by the relatively high cost of the hardware needed to provide interaction and create the displays.</p><p>The challenge of creating advanced visualization tools for the desktop environment requires that we take a new look at design philosophies in both hardware and software. The approach taken in creating FIELDVIEW is to focus on particular application area, in this case, CFD and design a tool that makes the proper uadeoff in usefulness versus cost ofusing.</p><p>Once there is a clear understanding of how visualization will be used in the target area, it is easier to balance the requirements against the operating environment. Optimize o p eration for the specific tasks at hand, rather than the"genera1    </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fluid</head><label></label><figDesc>Dynamics or CFD. Its evolution serves as a illustration of the development of a balanced and well integrated tool. FIELDVIEW is marketed by Intelligent Light and was jointly developed with United Technologies Research Center, a corporate research arm serving Pratt &amp; Whitney, Sikorsky, Carrier and other United Technologies divisions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Available on a wide variety of low-cost platform s Low-cost software, with no requirement for special hardware Minimal learning curve Operable in distributed environment In essence, these goals are the embodiment of the Balance and Integration goals discussed previously. By working closely with an actual user of CFD, it was possible to closely</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 -</head><label>1</label><figDesc>FIELDVIEW Function and Register Structure Figure 1 illustrates the Function and Register structure of FIELDVIEW. Implementation of the Scalar and Vector</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 (</head><label>3</label><figDesc>a color plate) shows a section of a Jet Engine</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 -</head><label>4</label><figDesc>There are two issues to consider here: remote graphics and remote file access. The visualization application can operate in a variety of possible configurations, as shown in Figure 4 below. Possible Configurations for Network Operation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIELDVIEW</head><label></label><figDesc>accommodatesboth types of operation by nature of the graphics architecture used to maintain and traverse the display list. Another Intelligent Light product, MEW-DORE is used as a portable, 3D graphics environment. IVIEW-DORE is an enhanced version of the DORE graphics library, licensed from Kubota Pacific Computer and ported and sold by Intelligent Light. At the present time, IVIEW is available for HP/AFQLLO, IBM, Silicon Graphics and SUN SPARC workstations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 -</head><label>5</label><figDesc>below: Upper Region allocated to light source shading of one or more geometric objects H I I Lower Region allocated to MOTIF and X-Windows 0 Segmented Hardware Color Map</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 2 :</head><label>2</label><figDesc>Streamlines over Space Shume wing.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 3 :</head><label>3</label><figDesc>Iso-surface of temperature in combustor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 :</head><label>6</label><figDesc>Shaded surface. wireframe and scalar map.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 7 :</head><label>7</label><figDesc>Light source shading on scalar map. (See color plates, page 435.)</figDesc></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Advanced Visualization on Desktop Workstations, S.M. Legensky, pp. 372-378.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>FIELDVIEW Screen Shots</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">VISA: An Interactive Graphics System for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Edwards</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>AIAA-914795 (Published by AIAA</publisher>
			<pubPlace>United Technologies Research Center, East Hartford, CT</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Three-Dimensional Visualization of Fluid Dynamic Problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Edwards</surname></persName>
		</author>
		<idno>AIAA-89-0136</idno>
		<imprint>
			<date type="published" when="1989" />
			<pubPlace>United Technologies Research Center, East Hartford, CT</pubPlace>
		</imprint>
	</monogr>
	<note>Published by AIAA</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">VisualizationinEngineering Mechanics: Techniques, Systems and Issues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
		<idno>ACM SIGGRAPH &apos;88</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Visualization Techniques in the Physical Sciences</title>
		<imprint>
			<date type="published" when="1988-08" />
		</imprint>
	</monogr>
	<note>Course 19</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">FIELDVIEW Version 2.5 User Manual</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Intel1igentlight</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualization Techniques for Fluid Dynamic Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Wolff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization Techniques in the Physical Sciences</title>
		<imprint>
			<date type="published" when="1988-08" />
		</imprint>
	</monogr>
	<note>ACM SIGGRAPH &apos;88 Course 19</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
