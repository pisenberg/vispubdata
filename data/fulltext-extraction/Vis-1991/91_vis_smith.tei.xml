<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Data Exploration with a Supercomputer</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Smith</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>MA</roleName><surname>Lowell</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges</forename><surname>Grinstein</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Daniel Bergeron</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Institute for Visualization and Perception Research Computer Science Department</orgName>
								<orgName type="institution">University of Lowell</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Institute for Visualization and Perception Research Computer Science Department Computer Science Department</orgName>
								<orgName type="institution">University of Lowell Lowell</orgName>
								<address>
									<postCode>01854</postCode>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Data Exploration with a Supercomputer</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Scientific data of hi h-dimensionality is particularly difficult to understandf if there are complex (and perhaps unknown) interactions among parameters. In such situations, the scientist can turn to a process Tukey has called ezploratory data visualization. In exploratory data visualization, we typically do not know exactly what we are looking for; instead, we explore the data with a variety of visualization techniques that can help us understand the nature of the data by demonstrating patterns in it. Given the complexity of the data and the large number of ways to map the data to a display, exploratory visualization can be truly effective only if it can also be interactive. In this paper we describe an experiment in exploratory data visualization using a massively parallel processor. With this approach we were able to find new features in some of our oldest datasets and to create more vivid presentations of familiar features in these datasets. Our experience has also led us to a better understanding of the nature of exploratory visualization and haa resulted in some formal representations of the interaction process in this environment.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>New visualization techniques offer promising capabilities for generating meaningful displays of complex multidimensional data. For example, the Ezuis exploratory data visualization system [4, 1, 2, 31 uses a display technique based on visual texture percep tion to reveal structure in multidimensional data. The elementary unit of the Exvis display is a glyph or "icon" whose attributes are data-driven. An icon's attributes, such as the sizes, positions, and intensities of its parts, are under data control. Many icons deployed densely over the screen create an "iconographic picture." Variations in the shape, size, spacing, and Kingsbury Hall University of New Hampshire Durham, NH 03824 rdbOcs.unh.edu orientation of icons create textural gradients or contours which potentially indicate interesting structure in the data. The effectiveness of a particular presentation of data varies dramatically with both the data mapping and the graphical parameters chosen.</p><p>The original workstation-based Exvis system presents users with static iconographic pictures of their data. Users can perform transformations on the display by manipulating a set of display controls and then observe the effects of these transformations by redisplaying the picture. While many of these pictures are intriguing, this type of data exploration proceeds rather slowly on a workstation because the number of possible iconographic representations of a dataaet is so large and because it takes so long to compute each one. For each Exvis iconographic technique that displays n simultaneous dimensions, there must be at least n different icon parameters; thus, there are n! possible mappings of data dimensions to visualization parameters. In addition, the definitions of the icon parameters can be varied in many ways, and there are several iconographic techniques. For our larger datasets, each picture requires several seconds of computation. Consequently, exploring the many alternative representations interactively requires enormous computing power. Accordingly, we implemented Exvis on a Thinking Machines Corporation CM-2 Connection Machine, which is architecturally ideal for this application.</p><p>The Connection Machine implementation of Exvis provides a set of interactive display controls which allow the user to apply certain transformations identically to every icon in a display. For example, there are controls for specifying the size of the bounding box within which an icon is drawn, the base orientation of the icon, and the bounds on the gray-scale intensities of the icon's parts. Each of these "global" transfor-mations is applied to the entire icon completely independently of the mapping of data parameters to icon attributes [ 5 . The visual effecta produced by of varioua rendering parameters in classical computer graphics and to standard image-processing operations such as stretching and thresholding. The Connection Machine is capable of computing screen updates fast enough that manipulation of the controls can produce changes in the display which, under favorable load conditions, are nearly continuous in perception. This capability allows users to interact quite naturally with the display and helps them arrive at meaningful representations of their data more easily and quickly than would be possible in a non-interactive environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">CONTROLS</head><p>The display attributes whose values are determined by the global transformations are of two kinds: icondependent and icon-independent. Icon-independent transformations can be performed on any conceivable type of icon. The icon-independent global attributes are as follows:</p><p>Bounding boz size is the side of the imaginary square within which each icon is drawn. The size of the bounding box affects the amount of empty space surrounding each icon and therefore the overall textural density of the display Base Orientation is the overall orientation of each icon with respect to a reference axis, which by default is horizontal. Icons can be rotated up to 180 degrees.</p><p>Maztmum jitter is the maximum amount of random displacement of each icon in the X and the Y directions, respectively. A small amount of jitter is aometimes necessary to break up the strong horinrontal and vertical artifacta that can result from placing the icona on a strict rectangular grid, Without jitter these artifacts can overwhelm the deaired textural effects. The icon-dependent transformations are unique to each icon. In the Exvis project, we have made extensive use of a family of stick-figure icons consisting of up to five line-segments, or "limbs." One such icon is a "human" stick-figure with two arms, two legs, and a body. Another, which we have found to be particularly effective in bringing out features in our data, consists simply of line segments joined end-to-end (see <ref type="figure" target="#fig_0">figure 1</ref>).</p><p>the global contro I s are analogous to manipulations Data can be m a ped to the angles, lengths, or intensities of the sticE-figure limba, or to any combink tion of these attributes. The global attributes of the stick-figure icons are as follows:</p><p>Lower and upper bounds on limb angle are the limits of angular travel of the limba. There are actually three sets of angle controls, whose use depends on the geometry of the specific stick-figure icon chosen for a display.</p><p>Lower and upper bounds on limb length are the minimum and maximum lengths of the icon limbs. Certain settings of these parameters can cause icons to overlap, iving rise to a variety of texture effects. Overlapping bmbs can also be used to achieve a sort of anti-aliasing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lower and upper bounds on limb intensity are the minimum and maximum gray-acale values of the limbs.</head><p>In the current implementation of Exvis, intensity tracks limb an le and cannot be mapped independently. If both %ounding-box aiae and limb length are set to a aize of one pixel, an iconographic picture becomes simply a gray-scale image whoae intensity range is set by these controls. If both the lower and upper bounds on any of these attributes are act to the aame value, that attribute is held constant in the display at the selected value. For example, setting both the upper and lower bounds on intensity to maxlmum producea a purely white-onblack display.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE CONNECTION MACHINE IMPLEMENTATION</head><p>The computational effort required to produce Exvis iconographic pictures interactively can be subatantial. For example, one of the datasets that we use frequently in our work conaists of five NOAA aatellite photographs of the eastern Great Lakes region. Each photograph is a 100-pixel x 100-pixel image. The gray-scale intensity of each pixel in each hotograph is mapped to one or more attributes o f t h e corresponding icon in the iconographic picture. Thus, the iconographic picture consists of 10,000 icons. If a five-limbed stick figure is employed, a total of 50,000 vectors must be transformed and redrawn every time a control setting is changed. Each transformation is fairly complex because of the geometry of the icons. During routine interaction with Exvis, uaers can easily change control settings at a rate of fifteen or more changes per second. Thus, the hardware to support an interactive implementation of Exvia must be able to transform and draw vectors at a sustained rate of at least 750,000 vectors per second.</p><p>The computationa required to update the icons in an iconographic display are identical and completely independent of one another; therefore, we could conceptually dedicate one processor to each icon and none of the processors would have to communicate with any of the others. In other words, Exvis is purely data parallel and thus ideal for implementation on the Connection Machine. The Connection Machine implementation of Exvis actually realises the full data parallelism of Exvis. For datasets requiring 16,384 or fewer icons, it is possible to asaign a physical processor to each icon by attaching two CM sequencers, which control a total of 16,384 processors. The resulting performance allows us to manipulate the global parameters interactively in real time. A varying load on the front-end computer occasionally impedes the CM's response to user input and causes discontinuous changes in the screen image, but we re ard this problem as merely an annoyance in view of the orders of magnitude improvement in interactivity over the workstation implementations.</p><p>The user interface to the Connection Machine implementation of Exvis is exactly the same Motif-based interface used in the workstation versions. The Connection Machine version, however, displays its output on a separate CM display driven directly by the CM frame buffer. This gives a higher-resolution picture and much more rapid screen updates than would a display connected to the front-end computer. Each global transformation is represented in the workstation display by a slider widget, which the user can move while observing the changes to the picture in the CM display. The display code uses two standard CM graphics packages: Generic Display for low-level graphics operations and Render for high-level operations.</p><p>The computational part of the Exvis code had to be completely rewritten in C* <ref type="bibr" target="#b4">[6]</ref> and Paris <ref type="bibr" target="#b5">[7]</ref>. In particular, all of the Exvis internal data structures had to be reorganized into the parallel format required by C*.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DATA EXPLORATIONS WITH THE CONNECTION MACHINE</head><p>Four examples show how users can interact with the Exvis display to produce meaningful pictures. These examples deal with four different domains: satellite image data, MRI data, data from the numerical solution of a partial differential equation, and artificially generated data for perception experiments.    There is a "hot spot'' in this tumor which is not readily visible in either the original MRI gray-scale images or figure 4. However, if we gradually increase the lower bound on limb angle, we reach a point where the hot spot appears as a single brightened region in the picture see <ref type="figure">figure 5</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Satellite data</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">MRI data</head><p>static Exvis pictures, the diagnostician would not in principle need the CM implementation to find it; however, static pictures cannot provide the continuous feedback that helps the diagnostician decide whether or not manipulating a particular control is helping to bring out a potentially interesting feature. In practice, it takes a significant amount of experimentation to find the parameters that work. The CM interactive implementation provides the opportunity for that kind of experimentation. <ref type="figure">Figure 6</ref> is an iconographic picture of the solution to a partial differential equation that describes a reaction inside an inductively-coupled plasma chemical reactor. Five of the 22 parameters a t each solution point are mapped redundantly to the limb angles and limb lengths of the icons in this picture. There are two obvious features in the picture: a V-or L-shaped feature near the upper left, where the plasma enters the picture, and another feature a t the center of the right side, where the plasma flow is drawn by an electromagnet. We had thought that these two features, both of Because t 6 e hot spot l ocation does show up in some</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.3</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Numeric solution of a PDE</head><p>which are visible throughout the ranges of most of the global controls, were the only features to be found in this particular picture. However, if we manipulate either the lower bound on limb angle or the angle of the reference axis, a new feature which we had never seen before appears in the upper left corner of the picture. The scientist who generated this data has identified this feature as a gas jet entering the reactor (see <ref type="figure">figure 7)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Artificial data for perception experiments</head><p>Each perceived texture region in figures 2 and 3 corresponds to a particular mean value in the original data. Average limb angle and/or length over a local area of an iconographic picture distinguishes that area visually from adjacent regions having different average limb angles and/or lengths. The texture regions and contours in the iconographic pictures of the various real-world data sets we have experimented with usually correspond t o features visible in one or more of the original parameter images. Sometimes it is apparent that just one of the parameter images is dominating the entire iconographic picture; however, the iconographic technique can also reveal regions in multidimensional data where there are no differences in mean and variance over each of the individual parameter images. <ref type="figure">Figure 8</ref>, for example, shows three gray-scale images with normally distributed random intensities.</p><p>These images were generated from vectors of normally distributed deviates having a mean of zero and a standard deviation of 1. There is a correlation of approximately +0.5 between each pair in the top halves of these images, and approximately -0.5 between each pair in the bottom halves. These relationships are not obvious from casual inspection. In figure 9, a n iconographic composite of these three images, a subtle textural difference between the upper and lower halves of the picture is visible. <ref type="figure">Figure 9</ref>: intensity gray-scale images.</p><p>Iconographic composite of the random- <ref type="figure">Figure 9</ref> encodes the gray-scale intensity at each pixel position of each image in figure 8 redundantly as the angle, length, and intensity of a limb of the corresponding icon. As the various global arameters are changed interactively, the upper and rower halves of this picture change in somewhat different ways. This enhances the baaic texture effects that underlie the original static Exvis display technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONTINUOUS PARAMETRIC INTERACTIONS</head><p>With most classical graphics interactions the user makes incremental changes whose effects on a display are perceived as continuous. These changes are familiar and readily understood. One can think of this kind of interaction as fine-tuning the physical representation of the data. Such interactions-flyin through a computed scene, rotating a molecule, brusfing a scatterplot, etc.-are usually found at the tail end of a visualization or graphics pipeline.</p><p>The availability of interactive supercomputing should make us rethink what constitutes a useful usercontrollable parameter and how we identify such parameters. Continuous change allows users to observe the trend of the change caused by each control and to use this immediate feedback to continuously monitor their progress toward a n effective presentation of the data. We call such controls continuous parameters. A continuous parametric change is one whose rffrct, on the physical representation is small if the change in the parameters is small. By contrast, controls that produce large, unpredictable changes in the picture impede interaction. After each large change, users must discard the mental picture they have built up of the display and its current controls and must begin forming a completely new mental picture. This takes time and conscious effort. Therefore, effective interactive controls are still likely to be those that make continuous changes in the display.</p><p>Because the Connection Machine can update the physical data representations fast enough, we are able t o implement real-time continuous parametric interactions that would not otherwise be possible. For inherently discontinuous display parameters such as the choice of icon, we are able to provide real time browsing using discrete parametric changes; however, in this case we harness only texture perception and not the ability to monitor and predict trends of change in the physical representation of data. A solution to this limitation is possible for the case of cycling through members of an Exvis icon family. Exvis supports several icon families, and each family consists of several members. One typically wants to look a t all members of a family to see how they present the data. To produce continuous displays we can interpolate between the frames generated with each icon family member. The interpolation is linear and trivial. The number of intermediate frames can be user-selectable. The result is a continuous animated sequence of displays parametrized by the icon member.</p><p>In general the same technique could be used to produce continuously changing displays for any sequence of discontinuous fra.mes. Given a sequence S of discontinuous frames, we define the continuous extension of S to be a new sequence of frames such that there is a small visual transition between successive frames in the continuous extension. Although the simplest mechanism for creating a continuous extension is by linear interpolation, smoother transitions may result by using higher order interpolation or by other more specialized techniques.</p><p>It is clear that harnessing texture perception is an important goal of interactive exploratory visualization. We have shown that interactive supercomputing can provide an effective environment for addressing this goal. The real-time interaction with the data display made possible by the CM-2's computing power has enabled us to find new features in some of our oldest datasets and to create more vivid presentations of familiar features in these datasets. We identified conditions under which icon parameter chan es produced visual effects similar to changing the yocation of a light source; we were able to identify a previously hidden pattern in the PDE data that represents a concrete physical phenomenon in the data; and we were able to find parameter specifications that clearly display the tumor "hot spot" in our MRI data. Our experience with this environment has helped us to understand a framework for defining and implementing effective explorations based on producing parametrically continuous interactions.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Five-limbed stick-figure icon.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figures 2</head><label>2</label><figDesc>and 3 are iconographic composites of five NOAA satellite photos of the eastern Great Lakes region. They are intended simply to demonstrate one of the visual effects that can be obtained by manipulating the global display controls and to suggest the analogies between these manipulations and the rendering operations of classical computer graphics. The satellite photos were taken at different wavelengths, two in the visible range and three in the infrared. In figures 2 and 3, data values are encoded redundantly as the angles and the lengths of the limbs of a stick-figure icon. Limb angles vary from 0 to 180 degrees in figure 2 and from 0 to -180 degrees in figure 3. These figures show that the change in the upper bound on limb angle produces an effect very similar to that of change in light source position: the concave surfaces of the Great Lakes in figure 2 pop out into convex features in figure 3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4</head><label>4</label><figDesc>is an iconographic composite of two MRI cross-sections of a brain containing a malignant glioma (tumor). The tumor, which is shaped much like a map of Africa, occupies most of the left two-thirds of theFigure 2: tographs of the eastern Great Lakes region.Iconographic composite of satellite pho-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Iconographic composite of satellite photographs with apparent change of light source position. picture. Figure 4 encodes the data values redundantly as the angles and the lengths of a stick-figure icon.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :Figure 4 :</head><label>54</label><figDesc>Iconographic composite of two MRI brain scans showing the "hot spot." Iconographic composite of two MRI brain scans.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 : 7 :</head><label>67</label><figDesc>Iconographic composite of partial differential equation data. Iconographic composite of partial differenequation data showing gas jet entering at the top Figure 8: Normally distributed random-intensity gray-scale images.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>Both the Connection Machine implementation of Exvis and the original workstation versions were written by Shuhua Shen, senior engineer of the Exvis project. We would like to thank Dr. Lew Tucker of Thinking Machines for making the many resources of TMC available to us, and we would like to thank David Ray and David Hiebeler-also of TMC-for he1 ing us with the innumerable practical details of worfing in a new and different computing environment. Also thanks to David Sheppard, who helped us make the video segments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">EXVIS: An-Exploratory Visualization Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ronald</forename><surname>Pickett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marian</forename><forename type="middle">G</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface &apos;89</title>
		<meeting><address><addrLine>London, Ontario</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Extracting Meaning from Complez Data: Processing, Display</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SPJE-The International Society for Optical Engineering</title>
		<editor>Interaction, E.J. Farrell</editor>
		<meeting><address><addrLine>Bellingham, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">1259</biblScope>
			<biblScope unit="page" from="190" to="199" />
		</imprint>
	</monogr>
	<note>The Perceptualization of Scientific Data</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Extracting Meaning from Complex Data: Processing, Display, Interaction-Video Supplement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename><forename type="middle">R M</forename><surname>Pickett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Grinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1988 IEEE Conference on Systems, Man and Cybernetics. Beijing and Shenyang, People&apos;s Republic of China</title>
		<editor>E.J. Farrell, ed., 1259V, Bellingham</editor>
		<meeting>the 1988 IEEE Conference on Systems, Man and Cybernetics. Beijing and Shenyang, People&apos;s Republic of China</meeting>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
	<note>Irnnographic Displays for Visualizing Multidimensional Data</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Global geometric, sound, and color controls for iconographic displays of scientific data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuart</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ronald</forename><surname>Pickett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SPIE-The International Society for Optical Engineering</title>
		<editor>J. Farrell</editor>
		<meeting><address><addrLine>Bellingham, WA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note>Eztractang Meaning from Complex Data: Processing, Display, Interaction. to appear</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Thinking Machines Corporation. C Programming Guide</title>
	</analytic>
	<monogr>
		<title level="m">Thinking Machines Corporation</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Thinking Machines Corporation. Introduction to Programming in C/Paris. Cambridge, MA: Thinking Machines Corporation</title>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
