<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Cooperative, Computer-Aided Design of Scientific Visualizations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sandeep</forename><surname>Kochliart</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Lockheed Advanced Computation Laboratory</orgName>
								<orgName type="institution" key="instit1">Harvard University</orgName>
								<orgName type="institution" key="instit2">Harvard University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Friedell</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Lockheed Advanced Computation Laboratory</orgName>
								<orgName type="institution" key="instit1">Harvard University</orgName>
								<orgName type="institution" key="instit2">Harvard University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Lapolla</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Lockheed Advanced Computation Laboratory</orgName>
								<orgName type="institution" key="instit1">Harvard University</orgName>
								<orgName type="institution" key="instit2">Harvard University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Cooperative, Computer-Aided Design of Scientific Visualizations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:26+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Gramniar-directed design</term>
					<term>cooperative design and modeling</term>
					<term>design automation</term>
					<term>humancomputer interaction</term>
					<term>automated design of graphical displays Contact: Sandeep liochhar</term>
					<term>112 Aiken Coinputation Laboratory</term>
					<term>Harvard University</term>
					<term>Cambridge</term>
					<term>Alassachisetts 02138 (telephone: 617-495-3998</term>
					<term>electronic mail: kocliharQliarvard.liarvard.eclu Currently at Computervision</term>
					<term>a Prime Computer ~o r i ipany</term>
				</keywords>
			</textClass>
			<abstract>
				<p>While the field of scientific visualization has grown rapidly over the last decade, tlie task of designing graphical displays that effectively depict the data t o be visualized is still a time-consuming, difficult, and essentially manual process. This paper proposes a n approach to partially automating the process through cooperafive computer-azded deszgn (CCAD)a paradigm that combines the strengths of manual and automated design by interspersing guiding design operations by the human user with the exploration of design alternatives by the computer. We demonstrate this approach in the context of the IVE design system-a CCAD environment for the design of scientific visualizations. Given a set of design requirements, the system is able to generate several alternative visualizations using a set of design rules that combine primitive visualization components in different ways. These alternatives are presented graphically t o the user, who can browse through them, select the most promising visualization and refine it manually.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Advances in supercomputers and computer graphics over the last decade have led to both the need and the opportunity to visualize large amounts of data in application areas as diverse as fluid dynamics, electroma.gnetics, parallel computing, geophysics, and software analysis. We can delineate two broad areas: (1) scientific visualiration-the ability to visualize graphically two-and three-dimensional scalar, vector and tensor fields in a variety of scientific and engineering domains [hIcCo87]' and (2) program uzsualimtionthe ability to visualize graphically static and run-time aspects of a progra.m, for example, data structures, flow control, and calling sequences <ref type="bibr" target="#b16">[Nass73,</ref><ref type="bibr">Brow84]</ref>.* As in traditioiml computer graphics, the process of creating a visualization can be broken into two main components: modeling--the task of creating graphical objects-and rendering-the task of computing images of the graphical objects.</p><p>Various rendering techniques, such as volume visualizat,ioii [Levo901 , have been developed specifically for scientific visualization. Visualization rendering also benefits from the rendering advances in other areas of computer gra.phics, for example, faster hardware and new algorithms. Standards for data and image representation are also in the offing, stimulated by various nationa.1 supercomputing resource centers.</p><p>Rlodeling demands the majority of the human effort invested in the construction of most computer-graphics applications. In contrast to rendering, the modeling act,ivit,y is understood poorly and, in general, supported inadequately. While some researchers have suggested guidelines and listed techniques for the design of scientific visualizations [GelbSO, <ref type="bibr">SenaSOa, SenaSOb]</ref> , t,he task of creahig effective visualizations is, in gen-Sviriet iiiies the t erin "application visualization" is also used Soinetiines tlie t.erm "algorithm visualization" is also used.</p><p>[.i\vsS:l, UpsoSO].</p><p>eral, time-consuming and difficult, and requires significant programming and graphic-design expertise and creativity.</p><p>In <ref type="bibr">[KochSl]</ref>, we view the modeling process as a combination of two different activities: design and articulalion. Design is the more creative aspect of modeling. Design generates an object conceptualization, which is an amalgam of primitive graphical subobjects that are subject to geometric and topological relations (or constraints). Articulation is the a.ctivity of providing a precise graphical description of an object conceptualization. For example, a scientist building a visualization for field data will be faced with a design task when deciding the organization of visualizat.ion primitives, such as particle advection and volume visualization; formulating the precise geometric and gra.phica1 attribut,es of the primitives is the articulation task.</p><p>Various techniques have been developed to support the articulation task for visualizations, including systems such as AVS IAvs89, Upso89, GelbSO] and apE [Ape89], with which users articulate designs by connecting and graphically editing predefined sets of primitive visualizations.</p><p>The focus of this paper is design, rather than articulation, of scientific visualizations. In applications that a.re sufficiently narrow and well understood, fully automatic design of new visualizations might be possible. However, in broader domains t1ia.t are not understood as completely, computer-assisted techniques for visualization design might, offer significa.nt benefits and a practical solution.</p><p>In <ref type="bibr">[ICochSOb, KochSOc]</ref>, we presented cooperative computer-aided design (CCAD)-a paradigm for interspersing guiding design operations by t,he humao user with partial exploration of design alternatives by the computer. CCAD is able to combine the strengths of ma.nua.1 and automated design and modeling by a.llowing the user to ma.ke creat.ive decisions and specify specia.lized detail, while exploiting the power of the computer to explore many design alternatives and create detail that is resonant wit,li the user's design decisions.</p><p>In this paper, we demonstrate this approach in the context of a CCAD system for visualization design embedded within the Integrated Visualization Environment (IVE)-a programming environment that offers visualization as a first-class service. Within the IVE conceptual framework, the term phenomenon is used to refer to an "an interesting aspect of process behavior" that may be the subject of a visualization. Phenomena. are described in program declarations t1ia.t indicate what data, taken together, contain a description of an aspect of the program's behavior that one may wish to visualize.</p><p>Although a phenomenon comprises data that con-tain a description of an interesting aspect of the subject program, the description may not be explicit in the data representations. The phenomenon may therefore constitute an inefficient and awkward format for communication with the process-monitoring facility. A property is a function that extracts an explicit and efficient description of one attribute of a phenomenon and provides it to the processes monitor. For example, a property may combine information in several program data structures, filter it, and compute summary statistics. A phenomenon may have several interesting attributes, and therefore several properties may apply to it. The IVE design system is invoked when the user specifies a set of properties to be depicted by a new visualization. The user then initiates the generation by the system of alternative partial developments of the initial design subject to a "language" of valid designs (visualizations). The results are then structured in a spatial framework through which the user moves to explore the alternatives. The user selects the most promising partial visualization, refines it manually by varying its characteristics, and then requests further automatic development. This process continues until a satisfactory complete design is created.</p><p>Both the AVS and apE systems mentioned earlier allow the user to construct visualizations by selecting components from a predefined library. Thus, the user has control over only how these predesigned components might be combined. In our work, we attempt to provide the system with a set of more primitive graphical features, and a grammar, or set of rules, that allows these features to be combined in various ways automatically. Thus, the system can automatically present the user with novel visualizations, which the user can then refine to suit his or her requirements.</p><p>The rest of this paper is organized as follows. In Section 2, we discuss related work of other researchers. In Section 3, we review essential features of the CCAD paradigm. In Section 4, we describe the CCAD techniques of the IVE system, present a sample grammar for building visualizations, and present examples of designing a complete visualization. Finally, we make some concluding observations in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Various rendering techniques have been developed specifically for scientific visualization. These include, for example, volume visualization techniques [Dreb88, Upso88, Levo901 for depicting 3-D data that has no intrinsic graphical representation. Modeling techniques developed specifically for scientific visualization include, for example, particle advection [Dyke821 and "marching cubes" [Lore87].</p><p>Techniques t o support the articulation aspect of modeling are demonstrated in systems such as AVS [Avs89, Upso89, GelbSO] and apE [Ape89], with which users articulate designs by connecting and graphically editing predefined sets of primitive visualizations. Senay and Ignatius <ref type="bibr">[SenaSOa]</ref> present a set of rules and principles for the design of visua.lizations. A subset of these rules was incorporated into the VISTA system [SenaSOb]: a knowledge-based design assistant that provides some support for user-guided synthesis of visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Cooperative Computer-Aided Design</head><p>In this section, we review tlie essential features of the cooperative computer-aided design (CCAD) ~a r a d i g m .~ CCAD encompasses completely manual, fully automatic, and, most important, cooperative user-computer modeling. The CCAD design scenario allows the user to make creative clioices and guide the design process, while the computer infers detail that is consistent with the user's design decisions. The following protocol is used to coordinate the actions of the human designer and the computer:</p><p>1. The user creates an initial, partial design using conventional modeling aids. The partial design produced is referred to as the nascent deszgn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.</head><p>The user describes to the system desired properties of the final design via a goal dzulog, and requests that the system develop the nascent design.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.</head><p>The system produces partial developments of the nascent design using design rules defining an object granimar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.</head><p>The user is presented with tlie set of design alternatives produced by the system in a spatial frainework, referred to as a gruphrcal tlala surfilce. The user can structure the designs on tlie data surface by specifying navigation or layoui attributes that determine the positions of design3 011 the data surface. Also, since the number of designs inay be large, the data surface may not fit in a single uiridow. A world-view map always presents the entire data surface in miniaturized form. The user can move about the designs on the data surface via scrolling and can "zoom" into portions of the dktta surface to examine particular designs in detail. 5. Finally, the user selects the most promising partial design, transfers it to the modeling system, refines it manually, and requests further automatic development.</p><p>Steps 2-5 are repeated until a satisfactory complete design is created.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">CCAD S y s t e m Organization</head><p>The interactions among the principal components of a CCAD system are shown in <ref type="figure">Figure 1</ref>. The user interacts with the system via the modeling system, the goal dialog, and the browsing system. The goal dialog is essentially an interface to the constrained generator.</p><p>Modeling System <ref type="figure">Figure 1</ref>: CCAD System Architecture The major functions of these components are: 0 The ntodelzng system allows t,he user to create and 0 Via the g o d dzalog, the user can specify any constraints that he or she wishes the generated design alternalives to satisfy, and can restrict the system to use only certain design rules while developing the nascent design.</p><p>manipulate a nascent design.</p><p>0 The constramed generator uses the design rules in the object grammar to produce alternative developments of the nascent design that are consistent with user-specified constraints on the final design.</p><p>The bi.owsziig systeni arranges the design alternatives produced by the generator in a spatial franiework structured by the user, who then can move through these designs Ly using graphical gestures such as scrolling and pointing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">User-Colitrolled Iiitcrprctation of Design</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Rules</head><p>Froin an abstract, language-theoretic perspective, the task of an object-grammar interpreter is to apply tlie design rules of the grammar in a generative fashion to produce a word, corresponding to a design, in the language defined by the grammar. This process begins with a nascent design that is transformed incremenially by repeated application of rules. In practice, the nascent design may be either empty or a partially complete design created by the user.</p><p>Usually, at every point during the process of developing a design, many components of the evolving design are eligible for transformation by many different rules. The combinatorial explosion resulting from the application of all rules to all components in all possible ways produces exponentially many design alternatives, and is a very serious theoretical and practical problem. Without some intervening mechanism, the user would be inundated with an enormous number of alternatives that would require an extraordinary amount of time to create. This need for intervention in the grammar-interpretation process is also an opportunity to interject the human user into the design procedure, thereby establishing a technical framework for synergistic, cooperative computer-aided design.</p><p>CCAD provides four distinct categories of techniques for interjecting user control in the generative process (details of these are described in <ref type="bibr">[KochSOc]</ref>). These techniques are (1) constraint-based design pruning: specifying various constraints on the final designs and not developing intermediate designs that violate these; (2) design-rule restriction: restricting the system to only use some of the available design rules to develop the nascent design; (3) grammar programming: organizing the design rules into stages and restricting the system to use rules from only one stage at a time; and (4) resource bounding: limiting the amount of time within which the system must respond with whichever alternatives are available, and limiting the maximum number of alternatives to explore.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Browsing</head><p>While the above section focused on techniques available for abating the combinatorial explosion that can arise in the application of design rules, extremely limiting constraints and user-specified restrictions on the generative process are not always desirable. In fact, the production of a sizable variety of alternative designs is almost required for one of the fundamental strengths of, CCAD-the emergence of novel design features that are unanticipated by the user.</p><p>Unfortunately, interesting alternatives are likely to be few and far between. A bro,wsing facility for perusing efficiently a collection of design alternatives is therefore required. CCAD provides a graphical browsing facility similar to that found in spatial data management systems [Done78, HeroPO]. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">The Integrated Visualization Environment</head><p>The Integrated Visualization Environment (IVE) is a system for designing visualizations and using them to monitor subject programs. Although IVE can be used for the design of both scientific (field data) and program visualizations, in this paper we focus on the design of scientific visualizations. The IVE run-time environment consists of the Monitor and one or more Instantiator/Renderers (1%). The monitor allows the user to load, start, and stop a subject program, and to enable and disable the visualizations available for the program. For each enabled visualization, an IR is established. When the point in the subject program is reached at which a visualization is to be made current, the monitor instructs the subject program to send the appropriate data to the associated IR. The IR creates an updated graphical scene description for the visualization. The scene, in turn, is processed by a three-dimensional image renderer <ref type="bibr" target="#b19">[Ngs89]</ref>. To minimize the delay inherent in having many visualizations active simultaneously, the IVE system executes the 1% on several networked computers. Details of the run-time environment are described in <ref type="bibr">[FrieSl]</ref>.</p><p>In this paper, we focus on the IVE design system, which is shown highlighted in <ref type="figure" target="#fig_1">Figure 2</ref>. The IVE design system corresponds to the CCAD system organi-zation shown in <ref type="figure">Figure 1</ref>.</p><p>In this section, we describe the extensions and elaborations of the CCAD techniques from Section 3 that are specific to IVE and to the design of scientific visualizations.</p><p>When IVE is used to design visualizations of twodimensional scalar and vector fields, the initial nascent design consists of only a list of properties of program phenomena, along with their types. Properties are automatically extracted from the subject program and design rules describe various ways to map these properties to initial features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">A u t o m a t e d</head><p>Generation and the Visualization-Design Grammar The constrained generator in <ref type="figure">Figure 1</ref> develops alternatives via simple state-space search. The system first develops the nascent design using all applicable design rules from the set of rules selected by the user. The resulting designs are then further developed by repeating this process. The process terminates either when the system exceeds the resource bounds, or when none of the designs can be further developed. These alternatives are then made available to the user via the Browsing System. visualization-design grammar that shows different ways in which float-array properties (corresponding to fields consisting of scalar values) might be combined. Thus, one such field might be depicted as either a scalarfield (using colored tiles), a height-field (where the height displacement is proportional to the value), or a displace-field (similar to a height field, except that the tiles are non-continuous), or the field might be used to mask another field.4 Two float-array fields can be combined to produce a vector field, depicted using arrows whose direction shows the direction of the field, and that represent the magnitude of the field using either the length (arrow-len-mag) or the color intensity of the arrow vector <ref type="bibr">(arrow-col-mag)</ref>. Two float-array fields can also be combined to produce a colored height (one field is mapped to the height, the other to color) or color displacement field, or to produce a height comparison field (which shows the difference of two height fields). Or, one of the two fields can be a height field, with the other being used as a mask. The rest of <ref type="figure">Figure</ref> 3 can be interpreted in a similar manner. As can be seen from the figure, starting with three float-array fields we can produce even more complex displays.</p><p>Note that while the grammar can be represented 4The value of the field being masked is set to zero (or soiiie other predefined value) at those locations where the inaskiiig field has a False (or zero) value.</p><p>compactly as shown in the figure, the number of design alternatives produced automatically can be large, even if we start with a small number of properties. For example, with just two properties, we can have 14 alternatives; with three, we get 94 alternatives; and with four properties, we can get 510 alternatives; and so on. In IVE, this problem of combinatorial growth is alleviated by allowing the user to control and direct the search, as described in Section 3.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Manual Modeling and A b s t r a c t Editing</head><p>One of the underlying motivations behind CCAD is that completely automated design is, in general, not feasible because it is almost impossible to get the underlying generative mechanism (grammar) perfectly right for all applications. In CCAD, therefore, we expect the system to be able to automatically generate designs (by repeatedly transforming the nascent design via grammar rules) that "come close" to what the user might want, and then rely on the user to manually refine the design to suit his or her goals. We would like the manual-refinement process to be efficient and in accordance with the purpose of the grammar rules.</p><p>Within the IVE design system, our goal is to support higher-level, more abstract editing operations in the manual modeling component of CCAD. Essentially, the user is able to modify a system-generated design by modifying one of the rules that was used in creating that design. This process is referred to as abstract editing.</p><p>In the IVE framework, the design rules incorporate the notion of Characteristics of visualizations, for which the rules assert default values. The user can, with the manual modeling system, change various characteristics of the system-suggested visualizations, such as scale, data to color mapping, and data to height mapping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4.3</head><p>Iiiiplenientation and E x a m p l e s IVE currently runs on Sun SparcStations, utilizing the X window system (version 11). The software is written in C, and is built on top of the X library, the X toolkit, and the MIT/Athena widget set.</p><p>In <ref type="figure" target="#fig_5">Figure 4</ref>, the starting design-a set of three scalar (floating point) fields-is shown on the window titled " W E Design Executive", using very simple iconic depictions. This window and the one titled ['Abstract Editor" correspond to the manual modeling system.  <ref type="figure" target="#fig_3">Figure 3)</ref>. As the highlights show, the user has selected four VDOsthree of them allow a floating point field to be visualized using a colored scalar field, a height field, and a displacement field; the last combines two scalar fields and shows them using oriented vectors (without specifying whether to use color intensity or length for depicting magnitude). More of the VDOs from this figure will be used later in the example.</p><p>The two windows towards the right, titled "World View" and "Current Data Surface," compose the Browsing System. The World View shows the entire data surface in miniaturized form, along with highlights showing the current data surface. Finally, the Current Data Surface shows the design alternatives (numbering 36) that the system is able to generate from the starting design by applying the user-selected VDOs. The scrollbars can be used to examine different portions of the data surface.</p><p>The alternative in the upper-left corner of the current data surface uses an oriented vector field (shown by the iconic arrow) to combine two of the initial fields and a displacement field to depict the third. <ref type="figure" target="#fig_6">Figure 5</ref> presents the results of developing this alternative further. This development uses an oriented vector field (with color intensity representing magnitude) to combine two of the initial fields and a displacement field to depict the third. This figure shows that the user has transferred it to the modeling system (by clicking on "Txfer ..." in the window titled "DetailedView").5</p><p>51n <ref type="figure" target="#fig_6">Figures 5-8</ref>, the window titled "DetailedView" shows the system-suggested design. The Executive window shows the results of refining that design via abstract editing. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>436.)</head><p>The window titled "Abstract Editor" shows that the user now has many more characteristics available for abstract editing. In <ref type="figure" target="#fig_6">Figure 5</ref>, the user has modified the system-suggested alternative by scaling the scene, changing the background color, and changing the color proportionality constants for the vector field. <ref type="figure" target="#fig_8">In Figure 6</ref>, the user has has just increased the proportionality constant of the the displacement field (thus the tiles are more spread out) and made the tiles smaller. In <ref type="figure" target="#fig_9">Figure 7</ref>, the user continues by adding axes and tick marks to the visualization. Finally, when the user is satisfied with the design, the visualization can be saved for use by the run-time component of IVE. <ref type="figure" target="#fig_7">Figure 8</ref> shows an alternative path that the user could have taken from <ref type="figure" target="#fig_5">Figure 4</ref>. Here, the user has     selected the second design in the middle row of the data surface of <ref type="figure" target="#fig_5">Figure 4</ref> for further development. This visualization uses a displacement field to show the first and third fields from the initial set of three, and a colored scalar field to depict the second. This design is then developed into two displacement fields, one colored and and one not colored, and modified by scaling the scene, changing the color proportionality constants of the colored-displacement field and making the tiles smaller. In <ref type="figure" target="#fig_7">Figure 8</ref>, the user has just added axes and tick marks to the visualization. <ref type="figure" target="#fig_11">Figure 9</ref> shows a set of visualizations, designed using IVE, for a program that simulates two celestial bodies in mutual orbit. The top left visualization shows the positions of the two bodies. The next two visualizations in the top row show the gravitational field between the two bodies: the first, which also includes the axes, is a vector field with color proportional to magnitude (the brighter spots indicate stronger magnitude); the second is a vector field with vector length proportional to magnitude. The two visualizations in tlie bottom row show the warping of space-time caused by the two bodies: the first uses a colored scalar field (the intensity corresponds to the strength of the warping); the second uses a height field (the heights get infinitely large at the centers of the bodies).</p><p>As the above examples show, using IVE the user can design quite different visualizations for the same subject program with very little effort.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusioiis</head><p>Cooperative Computer-Aided Design (CCAD) is a practicable theoretic paradigm for the design of sci- entific visualizations that places t h e computer in a n active, supportive role, creating detail in t h e visualization that resonates w i t h creative choices made by t h e h u m a n user. A visualization design g r a m m a r combines primitive graphical features to produce aggregations that f o r m t h e components of a visualization. This allows the production of novel design variants that the user can refine manually to suit his or her task.</p><p>Currently, one of t h e m a j o r obstacles to t h e widespread use of visualizations is t h e cost of creating graphical displays that effectively depict the d a t a to be visualized. The goal of CCAD, as implemented in the IVE design system, is to create a n d customize visualizations with very little user effort.</p><p>[Ape891</p><formula xml:id="formula_0">[Avs89] [Brow841 [Done781 [Dreb88]</formula><p>[ D y ke82]</p><p>[FrieS 11 <ref type="bibr">[GelbSO]</ref> </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>3Details can be foulid in [I&lt;oclr90n. I&lt;ocltDOL].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Overall Architecture of IVE</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2</head><label>2</label><figDesc>presents the overall architecture of IVE.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3</head><label>3</label><figDesc>presents a simple example of a</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>The window titled "VDO Presentation Interface" shows the visualization design operators (VDOs) available to the user (corresponding to the grammar shown Sample Visualization-Design Grammar in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>An Example of IVE in use (SO0 COh'p&amp;&amp;,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figiire 5 :</head><label>5</label><figDesc>Continuing Example fromFigure 4</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Another Design from Figure 4 Being Developed</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>Continuing Example fromFigure 5</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :</head><label>7</label><figDesc>Continuing Example fromFigure G</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>(</head><label></label><figDesc>See color plates, page 430.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 9 :</head><label>9</label><figDesc>Visualizations f r o m a Simulation of Two Bodies in M u t u a l Orbit(see colorplate, p8ge 430.)</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Ohio Supercomputer Graphics Project</title>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
		<respStmt>
			<orgName>Ohio State University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">AVS user&apos;s guide, AVS developer&apos;s guide</title>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Stardent Computer Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A system for algorithm animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sedgewick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH &apos;84)</title>
		<imprint>
			<date type="published" when="1984" />
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="177" to="186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Spatial management of information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Donelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of A CM Siggraph &apos;78</title>
		<meeting>A CM Siggraph &apos;78<address><addrLine>Atlanta, Georgia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Iianrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRA PH &apos;ad)</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page">22</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">A n Album of Fluzd hfotzon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">V</forename><surname>Dyke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Visualizing the behavior of massively parallel programs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Friedell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lioclthar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sistare</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Juda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lapolla</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note>submttted</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualizatioit techniques for structured and unstructured scientific data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gelberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kamins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sacks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">State of the Art in Data Visualization</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">27</biblScope>
		</imprint>
	</monogr>
	<note>SIG-GRAPH &apos;90 Course Notes</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A prototype spatial data management system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Herot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Carling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Friedell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Iiramlich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedzngs of ACM Szggrcrph &apos;80</title>
		<meeting>eedzngs of ACM Szggrcrph &apos;80<address><addrLine>Seattle, Washington</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Cooperatzve C&apos;omputer-Atded Deszgn</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kochhar</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, Harvard University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD dissertation</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A prototype system for design automation via the browsing paradigm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kochhar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphzcs Interface &apos;90</title>
		<meeting>Graphzcs Interface &apos;90<address><addrLine>Halifax, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990-05-14" />
			<biblScope unit="page" from="156" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">User [Hero801 cooperative computer-aided design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kochhar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Friedell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH Symposium on IJser Interface Software and Technology (L&apos;I.sT &apos;901, October 3-5</title>
		<meeting><address><addrLine>Snowbird, Utah</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Interaction paradigms for humancomputer cooperation in graphical-object modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kochhar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Friedell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphics Interface &apos;91</title>
		<meeting>Graphics Interface &apos;91<address><addrLine>Calgary, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991-06-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A taxonomy of volume visualization algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;90 Course Notes, Course 1 I: Volume Visualization Algorithms and Architectures</title>
		<imprint>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Marching cubes: A high-resolution 3-D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Visualization in scientific computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mccormick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Defanti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
	<note>special issue</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Flowchart techniques for structured programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Nassi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGPLAN notices</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="12" to="26" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">NGS: A portable, three-dirnensiorlal, shaded graphics syst,em for U N I S . 1989. IIarvard Yniversity</title>
		<imprint/>
		<respStmt>
			<orgName>Department of Computer Science</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Rules and principles of scientific data visualizat,ion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Senay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ignatius</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">State of the Art in Data Visualization</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">27</biblScope>
		</imprint>
	</monogr>
	<note>SIGGRAPH &apos;90 Course Notes</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">VISTA: 1.isualization tool assistant for viewing scientific data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Senay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ignatius</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">State of the Art in Data Visualization</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">27</biblScope>
		</imprint>
	</monogr>
	<note>SIGGRAPH &apos;90 Course Yotes</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">V-Buffer: Visible volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Keeler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGR.4 PH &apos;84)</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page">22</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Faulhaber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kamins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">D</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vroom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gurwitz</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">The application visualizat.ion system: A computational environment for scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="0" to="4" />
		</imprint>
	</monogr>
	<note>f E E E Cornputer Grciphtcs and .-lpp2Zcatsorzs. 0 ( 4</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
