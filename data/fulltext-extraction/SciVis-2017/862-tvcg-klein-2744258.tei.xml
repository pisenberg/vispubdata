<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Instant Construction and Visualization of Crowded Biological Environments</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tobias</forename><surname>Klein</surname></persName>
							<email>tklein@cg.tuwien.ac.at</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ludovic</forename><surname>Autin</surname></persName>
							<email>ludovic.autin@gmail.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Barbora</forename><surname>Kozlíková</surname></persName>
							<email>kozlikova@fi.muni.cz</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">S</forename><surname>Goodsell</surname></persName>
							<email>goodsell@scripps.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arthur</forename><surname>Olson</surname></persName>
							<email>olson@scripps.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Eduard</forename><surname>Gröller</surname></persName>
							<email>groeller@cg.tuwien.ac.at</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivan</forename><surname>Viola</surname></persName>
							<email>viola@cg.tuwien.ac.at</email>
							<affiliation key="aff0">
								<orgName type="institution">Tobias Klein and Ivan Viola are with TU Wien</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="laboratory">Ludovic Autin, David S. Goodsell, and Arthur Olson are with The Scripps Research Institute</orgName>
								<address>
									<region>California</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">M Eduard</forename><surname>Gröller</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Tobias Klein and Ivan Viola are with TU Wien</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="laboratory">Ludovic Autin, David S. Goodsell, and Arthur Olson are with The Scripps Research Institute</orgName>
								<address>
									<region>California</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">TU Wien and VRVis Research Center</orgName>
								<address>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Masaryk University</orgName>
								<address>
									<settlement>Brno</settlement>
									<country key="CZ">Czech Republic</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Instant Construction and Visualization of Crowded Biological Environments</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2017.2744258</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Interactive modeling</term>
					<term>population</term>
					<term>biological data</term>
					<term>interactive visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present the first approach to integrative structural modeling of the biological mesoscale within an interactive visual environment. These complex models can comprise up to millions of molecules with defined atomic structures, locations, and interactions. Their construction has previously been attempted only within a non-visual and non-interactive environment. Our solution unites the modeling and visualization aspect, enabling interactive construction of atomic resolution mesoscale models of large portions of a cell. We present a novel set of GPU algorithms that build the basis for the rapid construction of complex biological structures. These structures consist of multiple membrane-enclosed compartments including both soluble molecules and fibrous structures. The compartments are defined using volume voxelization of triangulated meshes. For membranes, we present an extension of the Wang Tile concept that populates the bilayer with individual lipids. Soluble molecules are populated within compartments distributed according to a Halton sequence. Fibrous structures, such as RNA or actin filaments, are created by self-avoiding random walks. Resulting overlaps of molecules are resolved by a forced-based system. Our approach opens new possibilities to the world of interactive construction of cellular compartments. We demonstrate its effectiveness by showcasing scenes of different scale and complexity that comprise blood plasma, mycoplasma, and HIV.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Technological advances in structural biology, proteomics, and biophysics, combined with the rapid advance of computational capabilities, have opened the door to studying increasingly large and complex biological systems. Recently, we have seen a shift from studying individual proteins to modeling and analyzing functional protein assemblies and even larger systems, such as viruses, bacteria, and portions of eukaryotic cells. These are often denoted as biological mesoscale structures, representing an intermediate scale between molecular and cellular biology. On the molecular (nanoscale) level, cells are built of proteins, nucleic acids, lipids, and polysaccharides. The mesoscale level reveals how these molecules are assembled into more complex subcellular environments that orchestrate the processes of life. Given the complexity of these massive mesoscale environments, modeling must be tightly coupled with a proper visual representation. This provides intuitive feedback for their validation, tools for exploration of the models, and visual materials for public dissemination and to communicate findings to peers. In typical scenarios, these visualizations are created by scientific illustrators who traditionally produce images by hand drawing or by using 3D modeling tools. Examples include our illustrations of cellular environments <ref type="bibr" target="#b14">[15]</ref>, and a detailed 3D model of a synaptic bouton created in Maya <ref type="bibr" target="#b46">[47]</ref>. This is a laborious process with limited interaction and exploration capabilities, which also requires non trivial domain knowledge about the depicted biological structures.</p><p>A more general solution is to describe the scene on a higher level of abstraction and use this description to automatically create the resulting scene. This approach has recently been implemented in cellPACK <ref type="bibr" target="#b23">[24]</ref> to generate and visualize 3D models of complex biological environments. CellPACK integrates data from multiple sources into a 'recipe' that describes the constitution of the desired environment. The environment is partitioned into membrane-bounded compartments, often arranged hierarchically. The compartments are defined by mesh surfaces that represent the lipid-bilayer membranes. Each compartment, including membranes, can be populated by a different set of ingredients, which include soluble molecules inside the compartment and molecules embedded in the membranes. These ingredients can be fibrous components, such as RNA or carbohydrate chains, soluble components such as proteins and metabolites, or lipids in membranes. CellPACK combines the knowledge about membranes, compartments, and ingredients, and then assembles a mesoscale model with respect to mutual biologically-relevant interactions between them.</p><p>The main drawback of this approach is the computation time for assembling the 3D mesoscale model from the input data and the recipe. Depending on the desired quality of the distribution of ingredients, this stage spans from minutes to hours. Therefore, it is often a lengthy process to, for example, change parameters like the number of ingredients (molarity) or their interactions and observe the impact of the change. Our aim is to overcome this limitation and to instantly provide distributions of various ingredients within biological compartments and on membranes. This will open new possibilities for biologists to gather domain-specific knowledge about mesoscale-level structures, integrate it into a model, and explore the consequences of gaps in knowledge or ranges of experimentally-observed parameters.</p><p>Another irreplaceable part of the whole process is the visual representation of the scene and its content. Molecular visualization techniques have been developed in the last decades, which predominantly focus on visual depictions of molecules captured by X-ray crystallography, NMR spectroscopy, and more recently, electron microscopy. Due to the nature of this structural data, the molecules may be visualized at atomic resolution. However, the mesoscale level poses new challenges. Mesoscale models are larger, with millions of atoms, taxing existing visualization hardware and software. They are also more complex, often integrating multiple types of data at different resolutions, and with complex hierarchical relationships that span from individual molecules to entire cells. Visual representations must provide the user with an overview of the structures as well as with means to explore their details. To address this challenge, our state-of-the art tool cellVIEW <ref type="bibr" target="#b35">[36]</ref> enables a seamless transition between visual representations of structures on different levels of detail. CellVIEW integrates the latest GPU-based algorithms from computer graphics and visualization to interactively render large biological scenes.</p><p>The approach described here incorporates instant modeling into cellVIEW to provide a unified visual framework for modeling and for visualization. The main contributions include:</p><p>• New algorithms for instant modeling of different types of compartments and membranes of biological structures on the mesoscale level.</p><p>• An interactive visual environment that allows users to change the population parameters and instantly explore the resulting scene on both nanoscale and mesoscale levels.</p><p>• Enhancing the process of creating models of mesoscale structures by shifting it from a non-visual and non-interactive environment to a fully interactive and visually-supported one.</p><p>We demonstrate the approach with mesoscale models of different scale and complexity, including blood plasma, HIV, and an entire mycoplasma bacterium.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Experimental methods to determine mesoscale structures are extending to larger and larger subjects, but currently fall short of being able to determine the atomic structure of living cells. For instance, cryo-electron microscopy (EM) can give a detailed structure of the regular envelope of the Zika virus, but the more randomly arranged genome inside is still largely inaccessible to experiments <ref type="bibr" target="#b39">[40]</ref>. Similarly, cryo-EM tomography is currently yielding detailed views of complex enveloped viruses, bacteria, and eukaryotic cells, but are typically able to resolve only large molecules such as ribosomes, cytoskeletal elements, and membranes <ref type="bibr" target="#b1">[2]</ref>.</p><p>Many groups are attempting the structural modeling of the mesoscale with atomic detail, using computation to combine information from mesoscale experimental techniques with atomic structural information on the components <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b37">38]</ref>. Much of the work in structural mesoscale modeling has focused on the soluble components of bacterial cytoplasm, using models to explore diffusion in crowded environments <ref type="bibr" target="#b34">[35]</ref>. More recently, several groups are building tools for full structural models that include cellular infrastructure, including our own work with cellPACK <ref type="bibr" target="#b23">[24]</ref> and LIFEEXPLORER <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b42">43]</ref>.</p><p>Procedural Modeling. The mesoscale structure of cells is similar to other natural phenomena with high geometric and visual complexity as well as with requirements for explicit control of details. Other examples include the modeling of clouds and meadows covered by grass. The general approach to model these types of phenomena is to first define the overall shape of the environment, then fill it in with detailed objects using a stochastic process. This approach, called procedural modeling, has a long tradition in computer graphics, for example, for on-the-fly generation of infinite cities <ref type="bibr" target="#b15">[16]</ref> or forests <ref type="bibr" target="#b6">[7]</ref> within rich game environments. Currently the focus is rather on parallelization and scheduling optimizations, so that the procedural content generation is efficiently realized on graphics hardware <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b40">41]</ref>. Wonka et al. <ref type="bibr" target="#b48">[49]</ref> presented a method for the automatic modeling of architecture. Recently, a novel technique was proposed for viewpoint-guided generation of high geometric details on facades <ref type="bibr" target="#b29">[30]</ref>. These techniques typically use certain plans or grammars, which provide structural rules for the generation of shapes. In our work, we focus rather on the distribution of objects where the space is already constrained by membranes and divided into compartments.</p><p>Visualization of Large Biological Scenes. Driven by the wealth of structural information available through sources like the Protein Data Bank <ref type="bibr" target="#b2">[3]</ref>, highly effective software is currently available for the visualization of biomolecules and assemblies. For recent reviews, see Kozlikova et al. <ref type="bibr" target="#b28">[29]</ref> and Johnson and Hertig <ref type="bibr" target="#b26">[27]</ref>. These methods typically fail when faced with the large number of mesoscale molecules. Mesoscale structures require specialized, highly-optimized solutions. Currently, there are two publicly-available open-source systems where large numbers of atoms can be rendered efficiently by leveraging graphics hardware capabilities. One system is MegaMol <ref type="bibr" target="#b16">[17]</ref>, which is useful for various atomic representations, not only biomolecules. The other one is cellVIEW <ref type="bibr" target="#b35">[36]</ref>, a tool for illustrative multiscale visualization of large biomolecular datasets. An alternative approach, published by Waltermate et al. <ref type="bibr" target="#b44">[45]</ref>, introduces an interactive tool combining mesoscopic and molecular scale visualization. They reach this by using a magnifier tool that enables the user to select a region on the cell membrane and map a pre-computed membrane patch with atomistic resolution onto it. This approach is able to populate only a very limited area of the cell surface.</p><p>Mesoscale scenes are also often produced by scientific illustrators using general-purpose 3D modeling tools. To ease their tasks, several extensions specific to molecular modeling have been introduced. For example, our ePMV plugin <ref type="bibr" target="#b24">[25]</ref> allows users to run molecular modeling software directly inside of professional 3D animation applications. SketchBio <ref type="bibr" target="#b43">[44]</ref> is another example of a 3D interface for molecular modeling and animation. Lv et al. <ref type="bibr" target="#b32">[33]</ref> explored the possibility to use game technology in biomolecular visualization, using the Unity3D game engine to develop and prototype a molecular visualization application for subsequent use in research or education.</p><p>Texture Synthesis. Our approach to populate large biological membranes with lipids is based on a tiling technique commonly used in seamless 2D texture synthesis. We adapt Wang Tiles <ref type="bibr" target="#b45">[46]</ref>, which utilize square tiles to generate a plane tiling. The positioning of tiles on the plane is done according to their face-color rules to compose a desired pattern. Recently, several extensions of this basic approach have been published. Most of them were designed for synthesizing 2D textures that are mapped onto 3D surfaces. Fu and Leung <ref type="bibr" target="#b12">[13]</ref> applied Wang Tiles to arbitrary topological surfaces. Our case differs in the necessity to synthesize tiles containing 3D objects, such as lipids. Therefore, the detection and handling of overlaps has to take these objects into account. Here we were inspired by the solution provided by Lipid-Wrapper <ref type="bibr" target="#b8">[9]</ref>. LipidWrapper solves the collisions for each triangle on the 3D mesh, which makes it unsuitable for large membranes. Neyret and Cani <ref type="bibr" target="#b36">[37]</ref> presented another strategy to tiling, using triangles with homogeneous textures to tile surfaces. Culik and Kari <ref type="bibr" target="#b4">[5]</ref> introduced Wang Cubes, which extend the Wang Tiles approach and are able to create non-periodic illustrative 3D patterns and textures. Lu et al. <ref type="bibr" target="#b31">[32]</ref> presented a framework for volume illustration utilizing Wang Cubes. They extend the original idea and modify it for multipurpose tiling. The Wang Cubes are not applicable in our case. Although we deal with 3D tiles representing the lipid bilayer, the tiles are still defined by a 2D plane. Fleischer et al. <ref type="bibr" target="#b11">[12]</ref> presented an approach to texturing surfaces with so called cellular textures. These are textures represented by more complex geometry, which can cover the surface with small-scale features, such as feathers or thorns. This is very close to our situation with lipid bilayers. However, cellular textures cannot be applied in our case because of the regularity of the produced surfaces and the algorithm speed.</p><p>Population with Fibrous Structures. Algorithms for self-avoiding walks may be used to populate a compartment with a fibrous structure. Fan et al. <ref type="bibr" target="#b9">[10]</ref> published an extension of a Manhattan lattice to generate fibrous structures by going from 2D to 3D space. In our approach we execute a procedural building of fibrous structures, which is similar to the polymerization process addressed by Kolesar et al. <ref type="bibr" target="#b27">[28]</ref>. Their illustrative approach is a fusion of three different modeling techniques, i.e., L-systems, agent-based systems, and systems of densities. Adding new building blocks to the existing polymer is based on attraction forces. Gruenert et al. <ref type="bibr" target="#b17">[18]</ref> presented an approach to rule-based spatial modeling of chemical reaction systems. The technique is also suitable for simulating the polymerization process, showcased on the growth of filaments. The growth is driven by parameters, such as torsion and bending, that control the pathways and structures of formed complexes.</p><p>The problem of procedurally constructing paths is common in other areas as well. As an example, Galin et al. <ref type="bibr" target="#b13">[14]</ref> presented an automatic method for generating roads between two given points, based on a weighted anisotropic shortest path algorithm. The result path minimizes a cost function influenced by different features of the scene, such as terrain shape and obstacles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">OVERVIEW</head><p>When modeling scenes containing complex mesoscale biological structures, the workflow consists of the following basic steps:</p><p>1. Scene organization, to define the shape of each membranebounded compartment.</p><p>2. Recipe definition, to determine the molecular composition of each compartment and membrane.</p><p>3. Population of the model, to fill the soluble spaces and membranes with ingredients defined in the recipe.</p><p>The organization of the scene is defined by closed 3D meshes that represent the lipid bilayer membranes. The membranes specify the separate compartments of the scene. For example, <ref type="figure" target="#fig_0">Figure 1</ref> (a) shows a scene with two concentric closed membranes defining two intracellular environments (labeled 1 and 2) and a surrounding environment (labeled 3). The following step is to compile a recipe that defines the molecular composition of these compartments and membranes <ref type="figure" target="#fig_0">(Figure 1 (b)</ref>). This recipe includes the structures of the molecules, their concentration (molarity), and constraints related to their position in the membranes, specific interactions with other molecules, etc. The last step takes the recipe and populates the compartments and membranes accordingly (see <ref type="figure" target="#fig_0">Figure 1</ref> (c)). This population step is typically stochastic, so it may be repeated to provide an ensemble of similar models that are each consistent with the scene organization and recipe. With currently available approaches, such as cellPACK <ref type="bibr" target="#b23">[24]</ref>, the process of transforming the scene definition and recipe to the final model can take from minutes to hours, depending on the complexity of the scene. This makes the modeling process non-interactive as the user cannot immediately see the consequences of parameter changes. We overcome this by applying parallel processing, to improve computational bottlenecks of the workflow.</p><p>As can be seen in <ref type="figure" target="#fig_0">Figure 1</ref> (b), the individual compartments and membranes can be populated in several ways. We can distinguish three basic cases:</p><p>• Membranes represent a semi-permeable barrier between two compartments. They often consist of a lipid bilayer with embedded proteins used in the communication and transport of molecules and ions across the membrane. In order to model membranes, we have implemented a solution based on texture tiling.</p><p>• Soluble components occupy the free space in each compartment. They consist of ingredients (molecules) of different shape and complexity, which influences the difficulty of the population step inside of each predefined space. Our approach for positioning ingredients in compartments consists of two steps. The first step populates the spaces with ingredients without considering overlaps between them. Collisions are resolved in the second step.</p><p>• Fibrous structures such as DNA, RNA, or actin filaments, are long strands folded inside specific compartments. We use a selfavoiding random walk to construct fibers in the allowable regions of the compartments.</p><p>Algorithms for populating spaces with each of these types of ingredients, and the advantages of populating them in a specific order, are described in detail in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">MEMBRANE POPULATION</head><p>Biological membranes are built around a continuous fluid sheet containing two opposed layers of lipids. Lipids are small molecules consisting of several dozen atoms, with a characteristic chemical character. They are composed of a head group that is soluble in water, and one or more tails that are insoluble. In water, they spontaneously associate to hide the insoluble tails, forming some of the largest structures in cells. These membranes form the semi-permeable boundary that surrounds cells, as well as the boundary of inner compartments such as the nucleus or mitochondria. Different types of lipids may be distributed unequally to create an asymmetry between the outer and inner surfaces, which is important for the cell function. For each biological structure, such as the HIV virion or the red blood cell, the bilayer has a unique lipid composition. The common property is that lipids are densely packed on the membrane and are oriented roughly perpendicularly to it.</p><p>The modeling of lipid bilayers is a complex and laborious task, because of the dense packing and the large number of lipids compared to other surrounding molecules. The main challenge, in terms of modeling, is to incorporate the known structural information and to avoid repetitive patterns on the surface. Several bilayer-modeling programs are available, such as CHARMM-GUI <ref type="bibr" target="#b22">[23]</ref>, Packmol <ref type="bibr" target="#b33">[34]</ref>, or cellPACK <ref type="bibr" target="#b23">[24]</ref>. These tools position individual lipids one-by-one on the membrane, which leads to unacceptable computational costs. A more sophisticated solution is provided by LipidWrapper <ref type="bibr" target="#b8">[9]</ref>. It extracts whole patches from a pre-equilibrated planar membrane model. These patches contain the detailed structural information about the lipids. In order to produce the membrane surface, LipidWrapper uses a triangulated mesh as input, where each triangle patch is randomly cut out from the provided membrane model. However, the edges of adjacent patches on the surface do not fit together and lipids potentially overlap in these regions. LipidWrapper deletes overlapping lipids and fills the resulting holes with new lipids. This is an expensive process since it must be done for every triangle edge on the surface. Because of this, the computational cost of LipidWrapper is significant and not applicable to instant modeling.</p><p>For the interactive population of membranes, our solution uses a tiling approach from texture synthesis to cover the membrane mesh with lipids. In our approach, we require the mesh to be defined as a quad-based surface map. In general, any method can be used that resamples a given mesh into a quad-based surface if the resulting surface map is conformal and has low area distortions. An example can be PolyCubeMaps introduced by Tarini et al. <ref type="bibr" target="#b41">[42]</ref>. The mesh generated by this approach is only marginally affected by distortions, which makes it suitable for our tiling approach.</p><p>To cover the mesh with lipids, we use only a small number of tiles. These tiles are pre-populated with lipids and here we use the basic principle of LipidWrapper. Our solution is significantly faster because we generate the content for only a limited set of tiles instead of applying it onto the whole mesh geometry. The tiles are subsequently used for covering the membrane. They have to be placed in such a way that their edges fit together and that the tiling will not result in periodic patterns. As the repetition pattern should not be visible, we use Wang Tiles <ref type="bibr" target="#b45">[46]</ref>.</p><p>In the following, we describe individual steps of our approach in detail. We start with the description of the concept and principle of Wang Tiles. Then we present our adaptation of this concept to membrane meshes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Wang Tiles and their Extension to Membranes</head><p>The Wang tiling concept was introduced in the early '60s and is wellknown in texture synthesis. A Wang Tile is defined as a square with color-encoded edges. A set of Wang Tiles can be used to cover a 2D plane without periodic patterns. The colors of edges restrict how the tiles can be placed during the tiling process. The tiling is valid only if shared edges have the same color. At least four colors are required to tile a plane non-periodically.</p><p>There are several approaches that extend the concept of Wang Tiles to 3D space. In our solution, we follow the approach of Fu and Leun <ref type="bibr" target="#b12">[13]</ref>, which applies the tiling concept of Wang Tiles to arbitrary topological surfaces. They generate each tile from four different diamond-shaped input patches that are positioned west, east, north, and south around the tile center, respectively ( <ref type="figure" target="#fig_1">Figure 2</ref>). These patches are combined to generate a set of tiles with different colors on the edges. We adapt this approach for use in membrane modeling by synthesizing a collection of lipid-textured tiles and then mapping them onto the membrane mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Tile Synthesis for Lipid Bilayer Models</head><p>Synthesis of the tiles is the major challenge to generating 3D models of biological membranes. First, we have to extract the content for the tiles from an input texture. For biological membranes, this input texture is a planar representation of the lipid bilayer containing nonoverlapping, tightly-packed lipid molecules. Atomic coordinates for the lipid bilayer can be generated, for example, by a molecular dynamics simulation using the Amber force field for lipids <ref type="bibr" target="#b7">[8]</ref>. The tiles are generated in several steps. First, four small diamond-shaped patches are extracted from the large bilayer texture. When extracting these patches ( <ref type="figure" target="#fig_1">Figure 2</ref> (a)), we include only lipids whose center is inside the bounds of the specified patch, where the center of a lipid is defined as the center of its bounding box. A large diamond-shaped patch is then created by positioning four of these tiles together. Finally, we extract a rectangular tile from the large diamond-shaped patch (see <ref type="figure" target="#fig_1">Figure 2</ref> (b)). The different tiles needed for Wang Tiling are generated by different arrangements of the small patches into the large patches. The tile has to be further processed to resolve overlaps and fill gaps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Detection of Overlapping Lipids</head><p>The assembly of a tile from multiple input patches inherently leads to overlapping lipids in areas where the input patches meet. Collisions are evaluated in a two step process to improve performance. First the overlap between bounding boxes is tested, then if necessary individual lipid atoms are checked. The lipid with the highest number of collisions is removed from the tile. If multiple lipids have the same number of collisions, one is chosen randomly for removal. The number of collisions is then updated for all neighbors of the removed lipid, and the procedure is repeated until all collisions are eliminated. This leaves the tile with undesirable holes <ref type="figure" target="#fig_1">(Figure 2 (c)</ref>), which are filled in the final step.</p><p>Hole Filling The holes in a tile are filled by non-colliding lipids <ref type="figure" target="#fig_1">(Figure 2 (d)</ref>). Individual lipids are extracted from the same input membrane bilayer that was used to generate patches for tiles.</p><p>For each side of the bilayer, a plane is defined that intersects the hydrophilic head groups of the lipids in the tile. Trial lipids are randomly chosen from the input texture and placed at regular intervals along the diagonals of the tile, aligning their head groups within the planes. If there are no collisions, the lipid is added to the tile, otherwise, the lipid is rotated around an axis perpendicular to the plane and tested for collisions. If no acceptable orientations are found, the process continues with another lipid from the input texture. Additionally, we reduce the number of possible candidates by rejecting those that already intersect with the lipids from the tile.</p><p>The result of the hole filling process depends on three parameters: how many lipids do we have in the testing set, how many rotations of lipids we test, and how many times we repeat the entire hole filling procedure. These parameters can be adjusted according to user needs. As we apply the process only on the tiles and not on every quad of the mesh, the parameter setting is not a critical aspect.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Tile Mapping</head><p>Finally, the generated tiles are mapped onto the membrane mesh consisting of quads. Since we are using data from a bilayer lipid membrane instead of textures, the 3D coordinates are mapped onto the quads instead of 2D texture coordinates. For this reason, we use quadrilateral coordinates to map lipid centers (λ , µ) to the quad with the vertices</p><formula xml:id="formula_0">(v 0 , v 1 , v 2 , v</formula><p>3 ) through the following equation, where p is the resulting vertex in 3D space.</p><formula xml:id="formula_1">p = (1 − λ )(1 − µ)v 0 + λ (1 − µ)v 1 +λ µv 2 + (1 − λ )µv 3<label>(1)</label></formula><p>At each resulting position, the corresponding lipid is instantiated. The orientation of the lipids on the quad has to be adjusted as well. As the main axis of the lipids is always perpendicular to the plane of the tile, we determine their orientation by computing the rotation angle between the original tile and its position on the quad. This rotation is applied to all lipids of a given tile. <ref type="figure" target="#fig_2">Figure 3</ref> shows the result after positioning the tiles with lipids on the membrane mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">SOLUBLE AND MEMBRANE-BOUNDED COMPONENTS</head><p>Cells are typically crowded with proteins, nucleic acids, and other molecules. Soluble components and assemblies fill the compartments. Membrane-bounded components are embedded in the lipid bilayers. The recipe for a mesoscale scene specifies the quantity of these ingredients, their locations and orientations (if appropriate), and their mutual interactions. The task of population boils down to spatially distribute these ingredients in the corresponding space avoiding overlaps. Currently available techniques are capable of positioning soluble ingredients inside compartments, however, only in a sequential manner. This means that they position ingredients one by one. After positioning each ingredient the surrounding space is updated so it is aware of the distance to the closest ingredient. The next ingredient can only be positioned at locations with a sufficient distance to the nearby ingredients. The computational cost of the sequential approach is not acceptable for interactive environments. Therefore, our solution uses parallel processing to increase the performance.</p><p>To make the procedure applicable to GPU implementation, we divide our approach into three consecutive steps (see <ref type="figure" target="#fig_3">Figure 4</ref>):</p><p>1. Compartment space organization using voxelization.</p><p>2. Populating the space with the given ingredients.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Detecting and resolving collisions between ingredients.</head><p>The major advantage of this approach is that the processing of the individual ingredients becomes mostly independent from the processing of other ingredients. In the rest of this section we describe the steps in more detail. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Step 1 -Space Partitioning using Voxelization</head><p>The first step is to partition the scene into a set of compartments, delimited by membrane meshes. Our approach is based on the stateof-the-art method of GPU voxelization by Schwarz and Seidel <ref type="bibr" target="#b38">[39]</ref>.</p><p>The voxelization process starts with the classification of voxels that intersect with the compartments. In one of the grid axes, a scanline algorithm is applied to all voxels to determine if they belong to cellular compartments, membranes, or to the surrounding environment. We assign a negative value to cellular compartment voxels, a positive value to surface voxels, and zero to outside voxels. We repeat this process for all compartments in the scene. The resulting structure, which we call a compartment grid, identifies the compartment or membrane associated with each voxel, for the rapid population in the following step. Moreover, we can sort the voxels per compartment and estimate the volume for each of them. Thus, given a molarity we can calculate the proper count for a specific protein.</p><p>In addition to the compartment grid, we define an occupancy grid that helps to resolve some of the overlaps between ingredients. The occupancy grid is of the same size and resolution as the compartment grid. It holds negative values for empty voxels or the corresponding ID of the ingredient if the voxel is occupied. This is especially important if the size of ingredients differs significantly, e.g., if surface ingredients protrude from the compartment surface. For this reason, we start the population process by distributing the large surface ingredients and then use the remaining space for the interior ones by employing the updated occupancy grid. This divides the population process into two passes, but prevents small ingredients from being completely overlapped by larger ingredients coming from a different compartment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Step 2 -Population</head><p>In this step we populate a given compartment with individual ingredients defined in the recipe, using the compartment grid and occupancy grid generated in the previous step. Here we distinguish between two types of ingredients to be populated. The first type are ingredients that occupy the inner part of a compartment but are bounded to the compartment membrane. The second type of ingredients populates the soluble space of the compartment. In order to avoid additional overlaps, we first populate the surface of the compartment and then its inner part.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Population of Compartment Surface</head><p>Cell membranes typically include a diverse collection of membranebounded proteins, which may interact just on one side of the membrane or extend through the membrane. This poses several challenges: the proteins must be oriented correctly, must face the proper direction, and their membrane-spanning portions must be embedded in the membrane. These proteins often have large portions extending from one or both sides of the membrane, which must be evaluated for collisions with other membrane-bounded proteins and soluble components. In order to spatially distribute ingredients on a given membrane, we need the information about the ingredient type, its molarity, the ID of the membrane, and the principal vector and offset of the ingredients <ref type="figure" target="#fig_4">(Figure 5 (a)</ref>). Then we update the information stored in the occupancy grid ( <ref type="figure" target="#fig_4">Figure 5 (b)</ref>). The ingredients should be randomly distributed and should not overlap. To solve this issue, Willmott previously used the property of a Halton sequence to distribute in real time non-overlapping objects in a plane <ref type="bibr" target="#b47">[48]</ref>. Similar to his approach, we use a Halton sequence to select positions on the mesh of the membrane to place the ingredients.</p><p>In general, a Halton sequence <ref type="bibr" target="#b18">[19]</ref> provides point sets with low discrepancy, i.e., it produces well-spaced samples. The sequence is constructed using a prime number that defines the number of divisions of a unit interval into sub-intervals. These are subsequently divided using the same prime number until the desired length of the sequence is reached. The sequence is then ordered in such a way that it produces subsets that evenly cover the entire domain. Halton sequences are often used for numeric methods like Monte Carlo simulations <ref type="bibr" target="#b5">[6]</ref>. Another advantage of a Halton sequence is that it never contains the same number twice so that we do not choose the same position for multiple ingredients. This approach provides an efficient and rapid way of distributing ingredients on the surface of the membrane with sufficient randomness while minimizing potential overlaps.</p><p>The orientation of the ingredient is then described as the principal vector defining the orientation of the ingredient with respect to the membrane, and an offset vector that places the ingredient at the proper position relative to the surface of the membrane <ref type="figure" target="#fig_5">(Figure 6</ref>). This information is usually computed using the OPM webserver <ref type="bibr" target="#b30">[31]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Population of Compartment Inner Area</head><p>For populating the soluble space of compartments, we use the information stored in the compartment grid and the occupancy grid to find appropriate positions for the ingredients. The membrane-bounded ingredients positioned in the previous step are considered as non-moving obstacles, i.e., they are handled as static objects when resolving collisions.</p><p>The population procedure works as follows. For each instance of the ingredient defined in the recipe, we place it at a voxel marked with the appropriate value in the compartment grid, and with an empty value in the occupancy grid. The occupancy grid is then updated with the identity of the ingredient, and these steps are repeated until all ingredients are positioned ( <ref type="figure" target="#fig_4">Figure 5</ref> (c), (d)). The occupancy grid is updated even after the positioning of all ingredients is completed, so that the grid may be used in populating this compartment with fibrous structures (see Section 6).</p><p>As the size of the ingredients can be substantially larger than the voxel size, this will ultimately result in intersecting ingredients if they are placed in a close proximity. The population step does not necessarily need to take overlap into consideration, although the less overlap is produced, the less computation is required. The following resolves the overlaps. A straightforward approach to avoid overlaps is to uniformly distribute ingredients. However, this leads to an undesired visual appearance since the grid structure becomes clearly visible. In order to introduce a certain degree of randomness and still reduce overlaps, we again utilize a Halton sequence to choose potential grid points for population. In practice a compartment populated using a Halton sequence can still suffer from visible regularities. Therefore, we additionally introduce jittering by a random vector in each grid position and we also apply a random rotation to each ingredient. With the Halton sequence, we can significantly reduce the number of overlapping molecules but it does not completely avoid them. The following step detects and resolves these remaining overlaps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Step 3 -Detecting and Resolving Collisions</head><p>Ideally, we would want to detect collisions by evaluating contacts between all atoms in the molecules. However, this is not practical in terms of performance, so for every molecule type, we compute a two-level proxy geometry that approximates its shape. The higher-level proxy is simply the bounding sphere of the molecule. The lower-level proxy approximates the molecule with a small number of spheres calculated with a GPU-based K-means clustering algorithm <ref type="bibr" target="#b10">[11]</ref>. As preset we use 16 spheres. The clustering provides the centers of the spheres and the radii which correspond to the cluster sizes. This ensures that all atoms are covered by the proxy geometry. The collision-detection process first uses the higher level proxy geometry to detect potential collisions between two molecules, which are then verified with the lower-level proxy geometries using the finer approximation of the shape. <ref type="figure" target="#fig_6">Figure 7</ref> shows the lower-level of the proxy geometries (a) and the scene populated by ingredients (b). The proxy geometry slightly overestimates the actual shape of the molecule to ensure that a certain distance is created between molecules after the collision is resolved. From a perceptual point of view, the molecules are easier to distinguish if their shape boundaries are not in direct contact. The resolving of collisions is loosely based on standard rigid body dynamics <ref type="bibr" target="#b0">[1]</ref>. Usually the exact point of contact between two bodies is detected and then corresponding forces are computed. Since our molecules are already in a colliding state, we simply compute forces that resolve these collisions. We use the information about collisions from the lower-level of the proxy geometry as a basis for the computation. For each intersecting pair of molecules we determine the overlapping sphere pairs and consider each as one collision. Each molecule accumulates a linear and angular force that is updated for every collision. The linear force is defined by a direction and strength. The direction is derived from the vector between the centers of the two spheres. The distance between the two sphere centers determines the strength of the force. As in rigid body dynamics, we compute the angular force by taking into account the vector between the center of the molecule and the collision, as well as the direction vector. After the forces for all collisions are computed, they determine the new position and rotation of molecules, as in a standard physics-based system. This defines one integration step. During the collision-resolving process, a molecule might temporarily leave its compartment. In this case we apply a force to the molecule, that will steer it back into the compartment. This process is repeated for a certain number of integration steps until all collisions are resolved or a stop criterion is reached. The criterion can be set by the user and specifies a certain number of acceptable remaining collisions. This makes the system flexible for less powerful hardware systems as well. Both the collision detection and the subsequent resolving is computed on the GPU.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">FIBROUS STRUCTURES</head><p>Fibrous ingredients are linear or branched polymers of repeated units, found in many places in cells. They include protein filaments that form infrastructure, polysaccharides that provide protection or store energy, and nucleic acids that encode genetic information. They are usually modeled using a procedural growing algorithm, such as selfavoiding random walks. Angle and length are constrained to maintain the persistent length of the processed fiber. The process of building the fibrous structure is sequential by nature as we have to be aware of the previous state of the fiber. However, this process can be greatly improved by using the compartment and occupancy grid information. For every incremental step of the walk, the corresponding grid element can be checked if it belongs to the compartment (compartment grid) and A random direction in the forward-hemisphere at this point is then chosen. If there is no intersection with existing structures or compartment surfaces, the direction is selected and the segment is added to the fiber. This process is repeated until the desired length of the fiber is reached. (b) A very long DNA (yellow) with long persistence length is combined with shorter RNA (red) with short persistence length.</p><p>if it is occupied by some other protein (occupancy grid). This improves the computational cost by restraining the growing fiber to allowed space and minimizing intersections with previously positioned ingredients, including self-intersections. For large systems, such as genomes, the fiber can contain millions of subunits, so the complete fiber-growing process will not be interactive. Here, we provide the possibility for the user to observe the current progress of the fiber growth, to remain interactive.</p><p>The self-avoiding random walk in our approach works as follows. In the target compartment, a starting point is randomly chosen and the ensuing protocol is iterated until the required length of the fiber is reached. In each step, a random direction is selected from the hemisphere that is oriented and positioned according to the previous direction, as illustrated in <ref type="figure" target="#fig_7">Figure 8</ref> (a). Possible intersections of the random walk with membranes, soluble molecules or itself are tested by using the occupancy and compartment grids. If there are no intersections, the segment is added and the grids are updated. Otherwise, a different random direction is chosen. A dead-end is reached if the walk cannot be continued after a given number of attempts. In our experience, the order in which molecules are distributed strongly influences the success of the population step. We have obtained the best results by placing membrane-bounded proteins first, followed by fibers, and finishing with soluble ingredients. This sequence addresses two significant potential problems: (i) membrane-bounded proteins often protrude in the compartments, so the fiber must avoid them, and (ii) typical soluble components are highly crowded into compartments, lead to few free grid points, and leave no options for fiber growth. <ref type="figure" target="#fig_7">Figure 8 (b)</ref> shows result of positioning DNA and RNA fibrous structures.</p><p>The method provides interactive performance for small fibers, such as the lipopolysaccharides extending from the mycoplasma surface or small RNA molecules in the cytoplasm. Long genomic DNA molecules, however, require several minutes to generate. We provide two methods to allow the user more interaction for these large structures: a premade DNA model may be preloaded, or we grow the walk in real-time to show the progress. This enables the user to stop and restart if the growing model shows problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS AND DISCUSSION</head><p>The approach described here is flexible, allowing the user to model a variety of biological systems. This ability is due, in part, to the relationship of all living organisms on Earth. Similar membranes surround all cells and define their inner organelles, and similar proteins orchestrate the traffic of molecules and information across the membranes. Similar proteins and nucleic acids are used for the many metabolic and genetic tasks required for energy production, biosynthesis, and reproduction, which are packaged in very similar compartments within cells. Since <ref type="figure">Fig. 9</ref>: A cubic space, two cubic microns wide, filled with blood plasma, with over 4.6 million soluble protein ingredients, populated in ∼0.6 sec.</p><p>viruses rely on cells for reproduction, they are also built from a subset of this machinery. With a limited set of structural modeling tools, we are able to build a variety of different cellular scenes.</p><p>Building mesoscale models is always an iterative process, where the recipe, ultrastructure and other parameters are tuned to reflect on and lend insight to the available experimental results. This is a laborious process with systems such as cellPACK, where single models require from minutes to hours to generate, followed by a significant effort to visualize the results. Our approach tightens this research cycle, allowing researchers to generate models or ensembles of models rapidly in an intrinsically visual environment. This allows the users to interactively optimize recipes, identify and correct any errors or bugs, and incorporate new data rapidly as it becomes available.</p><p>We demonstrate the capabilities and advantages of this new approach in three test systems. In a mesoscale model of blood plasma, the efficiency of the current method allows us to create a very large scene containing millions of molecules, which required a prohibitive computational effort with previous methods. With HIV, the interactive capability allows us to generate multiple models from a single recipe, and explore stochastic variations of a structurally complex subject. In a model of an entire mycoplasma bacterium, we are able to tune the recipe and modeling parameters interactively to achieve a particular goal: creating a 3D version of an existing 2D rendering of the cell. In the following sections, we describe these cases as well as the achieved results. The performance was measured using a computer with an Intel Core i7-6700K CPU 4.00 GHz and NVIDIA GeForce GTX 1080 graphics card with 8 GB memory.</p><p>Blood Plasma. Blood plasma is largely homogeneous and relatively sparsely occupied by proteins and short fibrous components. These proteins have a variety of functions, including molecules of the immune system, blood clotting factors, transport molecules, and hormones. It is a perfect system for early tests of methods for populating mesoscale scenes, because the proteins have a variety of sizes and shapes, including several with very large aspect ratios. When generating the model using cellPACK, a scene containing nearly 30,000 molecules was created in 116 seconds. With our approach we have tested a scene with blood plasma containing more than 33,000 molecules. The population step takes on average 100 ms and the consecutive overlap resolving takes on average 2000 ms. Our system is also capable of populating significantly larger scenes. As shown in <ref type="figure">Figure 9</ref>, we have populated a scene with a volume of two cubic microns with blood plasma. Given the exact molarity, our approach produces over 4.6 million soluble protein ingredients in 0.6 seconds. In our current implementation, this is beyond the capabilities of our force-based system to resolve potential overlaps. The main bottleneck here is the collision detection. However, this is not a conceptual limitation. Current research <ref type="bibr" target="#b19">[20]</ref> has shown that it is already possible to interactively solve the collisions of millions of particles.</p><p>HIV. We have used HIV as a convenient test system for mesoscale modeling since the inception of the cellPACK project. It has several advantages: it is relatively small, but still taxes most methods and it is one of the most-studied organisms, so there is abundant information available. However, there are still significant gray areas in the available data, so this leaves room for experimentation in the parameters of the recipe. The recipe used here was described by Johnson et al. <ref type="bibr" target="#b25">[26]</ref>, and comprises five types of surface proteins, 19 types of interior proteins and two RNA copies (9,200 bases, roughly 30,000Ångströms long). A membrane envelope surrounds the virion, with several copies of the viral envelope protein embedded in the membrane and extending outwards. Inside, a protein-enclosed capsid protects two copies of the viral genome. A variety of proteins, including the viral enzymes and several accessory proteins, are found in the space between the membrane and the capsid. <ref type="figure" target="#fig_0">Figure 10</ref> depicts the different steps of our procedural approach to model HIV. The final model consists of 11,790 protein ingredients. The entire model requires 0.07 seconds to generate without the RNA, and requires ∼3 seconds to generate the two copies of the RNA. It takes up to an hour to generate this model using cellPACK.</p><p>Mycoplasma Bacterium. The ultimate goal of this work is to create computational models of entire cells, to interpret experimental results, and model structure/function relationships in healthy and diseased states. To address this challenge, we have focused on one of the simplest cells, a mycoplasma bacterium. This bacterium has a very simple structure, with a single cellular membrane and a small genome. The membrane is filled with pumps and channels, and decorated on the outer surface with lipopolysaccharides that form a protective coat around the cell. The detailed organization of molecules inside the cell is only now beginning to be explored by cryo-EM microscopy, given the small size of the cells. We have modeled a random tangle of DNA surrounded by the soluble protein and RNA components.</p><p>The draft recipe for the current model ( <ref type="figure" target="#fig_0">Figure 11</ref>) includes the membrane, one strand of DNA (1,211,703 base pairs), 1500 lipopolysaccharides, and a collection of 18 of the most prevalent proteins and nucleic acids. The model required ∼100 sec for the generation of all the fibers in the model (DNA, mRNA, peptides, lipopolysaccharides) and 0.1 sec to fill the remaining space with soluble components. Using cellPACK, the creation of the mycoplasma model takes several hours. We employed the interactive capabilities of the method to tune the recipe, (c) 3D model generated by interactively tuning the recipe to match general characteristics of the illustration. In the 3D models, the membrane is in green, with membrane-embedded proteins in orange and lipopolysaccharides in green. Inside, DNA is in yellow, soluble proteins in blue and magenta, and RNA in red.</p><p>based on previous research used to create a hand-drawn illustration of the cell. <ref type="figure" target="#fig_0">Figure 11</ref> includes the illustration, a 3D model using the draft recipe, and a 3D model generated after interactively tuning the recipe to better match the illustration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Performance and Interactive Capabilities</head><p>Creation of the presented types of models has previously been a laborious process, forming a bottleneck in their study. For instance, the micron-sized blood plasma scene previously required hours of computation time, and is modeled with the new method in less than a second. Currently, the method is able to populate soluble compartments interactively, allowing the user on-the-fly experimentation with recipes and testing their effects on the resultant scenes. The performance of modeling fibrous and membrane components has also been significantly improved when comparing with previous approaches. It takes seconds to generate a cell-sized membrane and about a minute to calculate a genome-sized object. One of the great advantages of our presented methods is the ability to test hypotheses interactively. Biological research is an ongoing process, and there are many gray areas in the body of knowledge about the structure and function of cells at the mesoscale level. In many cases, it is useful to test the emergent mesoscale consequences of different properties at the molecular level. In the current implementation, many useful parameters are tunable at runtime. The user imports meshes that represent compartments, descriptions of ingredients, and then creates and visualizes the model based on the recipe on the fly. Tunable parameters in the recipe currently include the location, the molarity, the orientation (as defined by principal vector and offset), and fibergeneration parameters. Once the basic geometry is loaded, everything may be changed interactively.</p><p>For example, in <ref type="figure" target="#fig_0">Figure 12</ref>, we tested two assumptions on DNA persistence length in a model of a small genome packed into a spherical bacterium. A longer persistence length leads to DNA strands that wrap around the periphery of the cell, whereas a shorter persistence length leads to a trajectory that is more reminiscent of a 3D random walk. The reality is probably a combination of these two assumptions, since DNA-binding proteins often form kinks that mimic the short persistence length, while free strands of DNA show a longer persistence length.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION AND FUTURE WORK</head><p>In this work we have presented the first interactive approach to an integrative structural modeling of the biological mesocale. The interactive performance of the method provides several significant advantages in scientific and educational applications. With the possibility to create interactive models, domain experts are now able to tune parameters and explore the mesoscale properties that emerge. In addition it is now possible to create an ensemble of models from a single recipe, allowing researchers to explore the stochastic variations in mesoscale properties and compare them with experiments. In education, interactive capabilities can allow curriculum developers to better tune their models and representations to optimize the clarity of the resultant imagery. A long tradition in scientific illustration has proven the pedagogical utility of introducing small artistic changes to a subject to improve the interpretability of what is shown. The next major enhancement of the method will be the incorporation of a faster and more intuitive approach to model interactions between the ingredients. For instance, modeling the interaction of ribosomes with messenger RNA to form a polysome, or crosslinking of DNA by DNA-binding proteins, is currently not feasible. We are currently exploring particle simulation methods such as NVidia Flex to add this capability. In addition, we will continue to optimize the generation of fibrous components, which is currently the rate-limiting step of the model generation with the new approach.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>(a) The hierarchy is provided by compartments that organize the scene (here marked as 1, 2, and 3). (b) For each individual compartment, their composition is defined including the type and number of ingredients. (c) Our algorithms automatically populate the compartments and their surfaces with the information about the ingredients.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 :</head><label>2</label><figDesc>Overview of the Wang Tile synthesis. (a) Four small patches are extracted from the input texture. (b) A large patch is assembled from the four small patches, and then the tile is extracted from the center of the patch. (c) Bordering lipids with collisions are removed, leaving holes in the tile. (d) Holes are filled by positioning new lipids.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 :</head><label>3</label><figDesc>Example of lipid-bilayer membrane populated by lipid tiles. This cross-sectional view is visualized using a cutting plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 :</head><label>4</label><figDesc>The three steps of our approach to populate compartments with soluble components. (a) Voxelization of the space and definition of inner grids (purple and grey), surface grids (dark purple and dark blue), and outer grid (light blue). (b) Positioning of individual ingredients inside the inner compartments. Collisions between ingredients are highlighted. (c) Scene after resolving collisions using a force-based approach.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 :</head><label>5</label><figDesc>(a) Ingredients distributed on the surface of a compartment. (b) Occupancy grid containing information about the voxels occupied by these ingredients (green for outside, yellow for inside). (c) Positioning ingredients inside the compartment (new ingredients have red and orange color). (d) Occupancy grid update.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 :</head><label>6</label><figDesc>(a) Example of surface ingredient with proper principal vector (black), and offset vector (white), pointing from the center of mass to the anchor position at the surface. (b) Positioning of the ingredient on the surface using the correct orientation and offset aligned to the surface normal (top). Grid occupancy update (bottom).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 :</head><label>7</label><figDesc>(a): Proxy geometry of ingredients. Overlapping geometries are marked in red, non-overlapping ones in green, and static ones in grey. (b) The same scene populated by ingredients.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 :</head><label>8</label><figDesc>Fibrous structures are modeled using a self-avoiding random walk. (a) The walk starts with a random point inside of a certain compartment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 10 :</head><label>10</label><figDesc>Overview of the interactive modeling of the mature HIV virion based on the cellPACK recipe. (a) Building the membrane (magenta) based on a spherical mesh, and preloading the capsid (blue) from a cryo-EM structure (PDB entry 3J3Q). (b) Solid voxelization of compartments. (c) Updating the occupancy grid. (d) Populating the surface ingredients (envelope protein in green, matrix protein in yellow). (e) Building two copies of the RNA (red) using the fiber growth method and attaching the HIV NC protein at all control points. (f) Resulting model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 11 :</head><label>11</label><figDesc>Cross-sections of Mycoplasma mycoides. (a) A hand-drawn illustration. (b) 3D model generated with the draft recipe.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 :</head><label>12</label><figDesc>Two models of DNA in a bacterial cell, using (a) a long persistence length and (b) a short persistence length (7 sec to generate).</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This project has been funded by the Vienna Science and Technology Fund (WWTF) through project VRG11-010 and also supported by EC Marie Curie Career Integration Grant through project PCIG13-GA-2013-618680. The Scripps Research Institute researchers acknowledge support from NIH P41-GM103426 and R01-GM120604, and this manuscript has TSRI reference number 29494.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An introduction to physically based modeling: rigid body simulation I-unconstrained rigid body dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Baraff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH Course Notes</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="31" to="68" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Cryo-electron tomography: Can it reveal the molecular sociology of cells in atomic detail?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Baumeister</surname></persName>
		</author>
		<idno>doi: 10. 1016/j.tcb.2016.08.006</idno>
	</analytic>
	<monogr>
		<title level="j">Trends in Cell Biology</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="825" to="837" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
	<note>Future of Cell Biology</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The Protein Data Bank</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">M</forename><surname>Berman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Westbrook</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Gilliland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">N</forename><surname>Bhat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Weissig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">N</forename><surname>Shindyalov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">E</forename><surname>Bourne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Research</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="235" to="242" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Representing and scheduling procedural generation using operator graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Boechat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dokter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kenzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schmalstieg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Steinberger</surname></persName>
		</author>
		<idno type="DOI">10.1145/2980179.2980227</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">An aperiodic set of Wang Cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Culik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Universal Computer Science</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="675" to="686" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Low discrepancy sequences for monte carlo simulations on reconfigurable platforms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">L</forename><surname>Dalal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stefan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Harwayne-Gidansky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Application-Specific Systems, Architectures and Processors</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="108" to="113" />
		</imprint>
	</monogr>
	<note>ASAP 2008. International Conference on</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Rendering forest scenes in real-time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Decaudin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Neyret</surname></persName>
		</author>
		<idno>doi: 10. 2312/EGWR/EGSR04/093-102</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Fifteenth Eurographics Conference on Rendering Techniques, EGSR&apos;04</title>
		<meeting>the Fifteenth Eurographics Conference on Rendering Techniques, EGSR&apos;04</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="93" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Lipid14: The Amber lipid force field</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">J</forename><surname>Dickson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">D</forename><surname>Madej</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Skjevik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Betz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Teigen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">R</forename><surname>Gould</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Walker</surname></persName>
		</author>
		<idno type="DOI">10.1021/ct4010307</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Chemical Theory and Computation</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="865" to="879" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">LipidWrapper: an algorithm for generating large-scale membrane models of arbitrary geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Durrant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Amaro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLOS Computational Biology</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page">1003720</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Self-avoiding walk on a three-dimensional Manhattan lattice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X.-Y.</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D.-C</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Physics A: Mathematical and General</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">22</biblScope>
			<biblScope unit="page">3971</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Parallel Implementation of K-Means Clustering on GPUs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Farivar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rebolledo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Chan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename><surname>Campbell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PDPTA&apos;08 -The 2008 International Conference on Parallel and Distributed Processing Techniques and Applications</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="340" to="345" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Cellular texture generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">W</forename><surname>Fleischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">L</forename><surname>Currin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Barr</surname></persName>
		</author>
		<idno type="DOI">10.1145/218380.218447</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd Annual Conference on Computer Graphics and Interactive Techniques</title>
		<meeting>the 22nd Annual Conference on Computer Graphics and Interactive Techniques<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="239" to="248" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Texture tiling on arbitrary topological surfaces using wang tiles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-W</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-K</forename><surname>Leung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Rendering Techniques</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="99" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Procedural Generation of Roads</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Galin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Peytavie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Maréchal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Guérin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics)</title>
		<meeting>Eurographics)</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="429" to="438" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Inside a living cell</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Goodsell</surname></persName>
		</author>
		<idno type="DOI">10.1016/0968-0004(91)90083-8</idno>
	</analytic>
	<monogr>
		<title level="j">Trends in Biochemical Sciences</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="203" to="206" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Real-time procedural generation of &apos;pseudo infinite&apos; cities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Greuter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Stewart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Leach</surname></persName>
		</author>
		<idno type="DOI">10.1145/604471.604490</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st International Conference on Computer Graphics and Interactive Techniques in Australasia and South East Asia, GRAPHITE &apos;03</title>
		<meeting>the 1st International Conference on Computer Graphics and Interactive Techniques in Australasia and South East Asia, GRAPHITE &apos;03<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page">87</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">MegaMol -a prototyping framework for particle-based visualization. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grottel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Müller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2014.2350479</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="201" to="214" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Rule-based spatial modeling with diffusing, geometrically constrained molecules</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Gruenert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ibrahim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lenser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lohel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hinze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dittrich</surname></persName>
		</author>
		<idno type="DOI">10.1186/1471-2105-11-307</idno>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">307</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">On the efficiency of certain quasi-random sequences of points in evaluating multi-dimensional integrals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Halton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerische Mathematik</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="84" to="90" />
			<date type="published" when="1960" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Fast fixed-radius nearest neighbors: interactive millionparticle fluids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hoetzlein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GPU Technology Conference</title>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page">18</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Easy DNA modeling and more with GraphiteLifeExplorer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hornus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lévy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lariviére</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Fourmentin</surname></persName>
		</author>
		<idno type="DOI">10.1371/journal.pone.0053609</idno>
	</analytic>
	<monogr>
		<title level="j">PLoS ONE</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">2013</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Challenges in structural approaches to cell modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Im</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Liang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Olson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-X</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Vajda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">A</forename><surname>Vakser</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jmb.2016.05.024</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Molecular Biology</title>
		<imprint>
			<biblScope unit="volume">428</biblScope>
			<biblScope unit="issue">15</biblScope>
			<biblScope unit="page" from="2943" to="2964" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">CHARMM-GUI membrane builder for mixed bilayers and its application to yeast membranes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Lim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Klauda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Im</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.bpj.2009.04.013</idno>
	</analytic>
	<monogr>
		<title level="j">Biophysical Journal</title>
		<imprint>
			<biblScope unit="volume">97</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="50" to="58" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">cellPACK: a virtual mesoscope to model and visualize structural systems biology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Autin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Al-Alusi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Goodsell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Sanner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Olson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature methods</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="85" to="91" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">ePMV embeds molecular modeling into professional animation software environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Autin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Goodsell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Sanner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Olson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Structure</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="293" to="303" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">3D molecular models of whole HIV-1 virions generated with cellPACK</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Goodsell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Autin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Forli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Sanner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Olson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Faraday Discussions</title>
		<imprint>
			<biblScope unit="volume">169</biblScope>
			<biblScope unit="page" from="23" to="44" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A guide to the visual analysis and communication of biomolecular structural data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hertig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Reviews Molecular Cell Biology</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="690" to="698" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Interactively illustrating polymerization using three-level model fusion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Kolesár</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parulek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bruckner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A.-K</forename><surname>Stavrum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<idno type="DOI">10.1186/1471-2105-15-345</idno>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">345</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Visualization of biomolecular structures: State of the art revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kozlíková</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Falk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lindow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Baaden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Baum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parulek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<idno>doi: 10. 1111/cgf.13072</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">View-dependent realtime rendering of procedural facades with high geometric detail</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Krecklau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Born</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12068</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">2pt4</biblScope>
			<biblScope unit="page" from="479" to="488" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">OPM: orientations of proteins in membranes database</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Lomize</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename><surname>Lomize</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">D</forename><surname>Pogozheva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">I</forename><surname>Mosberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="623" to="625" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Volume illustration using Wang Cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Qiao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mora</surname></persName>
		</author>
		<idno type="DOI">10.1145/1243980.1243985</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">11</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Game on, science -how video game technology may help biologists tackle visualization challenges</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Lv</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Empereur-Mot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chavent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Baaden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PLoS ONE</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">57990</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">PACKMOL: A package for building initial configurations for molecular dynamics simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Martínez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Andrade</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">G</forename><surname>Birgin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Martínez</surname></persName>
		</author>
		<idno type="DOI">10.1002/jcc.21224</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Chemistry</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2157" to="2164" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Diffusion, crowding &amp; protein stability in a dynamic molecular model of the bacterial cytoplasm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Mcguffee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Elcock</surname></persName>
		</author>
		<idno type="DOI">10.1371/journal.pcbi.1000694</idno>
	</analytic>
	<monogr>
		<title level="j">PLOS Computational Biology</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">cellVIEW: a tool for illustrative and multi-scale rendering of large biomolecular datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Muzic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Autin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parulek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Workshop on Visual Computing for Biology and Medicine</title>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="61" to="70" />
		</imprint>
		<respStmt>
			<orgName>EG Digital Library, The Eurographics Association</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Pattern-based texturing revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Neyret</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-P</forename><surname>Cani</surname></persName>
		</author>
		<idno type="DOI">10.1145/311535.311561</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th Annual Conference on Computer Graphics and Interactive Techniques, SIGGRAPH &apos;99</title>
		<meeting>the 26th Annual Conference on Computer Graphics and Interactive Techniques, SIGGRAPH &apos;99<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press/Addison-Wesley Publishing Co</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="235" to="242" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Computational virology: From the inside out</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Reddy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Sansom</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.bbamem.2016.02.007</idno>
	</analytic>
	<monogr>
		<title level="j">Biochimica et Biophysica Acta (BBA) -Biomembranes</title>
		<imprint>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1610" to="1618" />
			<date type="published" when="1858" />
		</imprint>
	</monogr>
	<note>Part B</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Fast parallel surface and solid voxelization on GPUs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schwarz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<idno type="DOI">10.1145/1882261.1866201</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">The 3.8Å resolution cryo-EM structure of Zika virus</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sirohi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Klose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename><surname>Pierson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">G</forename><surname>Rossmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Kuhn</surname></persName>
		</author>
		<idno type="DOI">10.1126/science.aaf5316</idno>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">352</biblScope>
			<biblScope unit="issue">6284</biblScope>
			<biblScope unit="page" from="467" to="470" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Onthe-fly generation and rendering of infinite cities on the GPU</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Steinberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kenzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kainz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wonka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schmalstieg</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12315</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="105" to="114" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Polycube-maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tarini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hormann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<idno type="DOI">10.1145/1015706.1015810</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="853" to="860" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">An inventory of the bacterial macromolecular components and their spatial organization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vendeville</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lariviére</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Fourmentin</surname></persName>
		</author>
		<idno type="DOI">10.1111/j.1574-6976.2010.00254.x</idno>
	</analytic>
	<monogr>
		<title level="j">FEMS Microbiology Reviews</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="395" to="414" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">SketchBio: a scientist&apos;s 3D interface for molecular modeling and animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">M</forename><surname>Waldon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Hahn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Taylor</surname></persName>
		</author>
		<idno type="DOI">10.1186/1471-2105-15-334</idno>
	</analytic>
	<monogr>
		<title level="j">BMC Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">334</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Membrane Mapping: Combining Mesoscopic and Molecular Cell Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Waltemate</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sommer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<idno type="DOI">10.2312/vcbm.20141187</idno>
	</analytic>
	<monogr>
		<title level="m">Eurographics Workshop on Visual Computing for Biology and Medicine. The Eurographics Association</title>
		<imprint>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Proving theorems by pattern recognition-II</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bell Labs Technical Journal</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="41" />
			<date type="published" when="1961" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Composition of isolated synaptic boutons reveals the amounts of vesicle trafficking proteins</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">G</forename><surname>Wilhelm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mandad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Truckenbrodt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kröhnert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Schäfer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Rammner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Koo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">A</forename><surname>Claßen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krauss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Haucke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Urlaub</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">O</forename><surname>Rizzoli</surname></persName>
		</author>
		<idno type="DOI">10.1126/science.1252884</idno>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">344</biblScope>
			<biblScope unit="issue">6187</biblScope>
			<biblScope unit="page" from="1023" to="1028" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Fast object distribution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Willmott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH sketches</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page">80</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Instant architecture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wonka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wimmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sillion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ribarsky</surname></persName>
		</author>
		<idno>doi: 10.1145/ 882262.882324</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="669" to="677" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
