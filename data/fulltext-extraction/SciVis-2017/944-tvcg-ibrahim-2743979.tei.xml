<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Screen-Space Normal Distribution Function Caching for Consistent Multi-Resolution Rendering of Large Particle Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Ibrahim</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Wickenh√§user</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Rautek</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guido</forename><surname>Reina</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Hadwiger</surname></persName>
						</author>
						<title level="a" type="main">Screen-Space Normal Distribution Function Caching for Consistent Multi-Resolution Rendering of Large Particle Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="DOI">10.1109/TVCG.2017.2743979</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Multiresolution Techniques</term>
					<term>Point-Based Data</term>
					<term>Glyph-based Techniques</term>
					<term>Scalability Issues</term>
					<term>Molecular Visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Visualizing large molecular dynamics particle data at different zoom levels. Top row: Screen-space normal distribution functions (S-NDFs) facilitate scale-consistent rendering at any zoom level by storing normal distributions in a screen-space mipmap (S-MIP), instead of storing output pixel colors. This enables zooming and re-lighting without having to re-sample the actual particle data. Bottom row: Standard ray casting suffers from aliasing and noise due to under-sampling of the particles in coarser levels (toward right).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>With the current advances in computational power and the wide-spread availability of large compute clusters, molecular dynamics (MD) simulations based on classical force field models are coming ever closer to accurately describing many physical effects at a macroscopic scale with atomistic accuracy. However, these simulations lead to very large data sets, which poses significant challenges to interactive high-quality visualization. A major motivation for large-scale MD simulations is that increasing the system size, i.e., the number of atoms, increases the odds for capturing events like nucleation during condensation or evaporation under technically relevant conditions. In order to be able to capture the relevant events, simulations usually also have to run for many time steps so that the required processes may occur. Modeling scenarios on an atomic scale while bridging to macroscopic laws requires even larger simulations. For example, a single barely-visible droplet of liquid contains on the order of a trillion molecules. Sim- ulations on such a scale are costly, but have become feasible <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b21">22]</ref>. This enables comparison with human-observable experiments. The ground truth visualization of atomistic simulations in the context of physics, materials science, or thermodynamics is commonly realized using spheres, whose arrangement and radii correspond to the typical distances between atom sites with respect to the force field employed in the simulation. Substantial overlap between two such spheres will usually lead to extreme repulsion and can be an indicator of a misbehaving simulation. Such direct insight from observing a simulation visualization has made this metaphor popular with domain scientists. Using brute force ray casting enables rendering of data sets on the order of 10 8 particles on single-GPU systems <ref type="bibr" target="#b10">[11]</ref>. More elaborate solutions using culling techniques push these limits even further <ref type="bibr" target="#b11">[12]</ref>. However, at these scales the major factor that limits the effectiveness of visualizations is the insufficient sampling rate that is caused by the mismatch between data size and the resolution of today's output devices. In general, techniques based on ray casting <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b33">34]</ref> are prone to aliasing due to under-sampling, which leads to noisy renderings that are inconsistent across scales. The importance of this effect is shown in <ref type="figure">Fig. 1</ref>, where we compare brute force ray casting (bottom row) with our novel, scale-consistent rendering approach (top row). Approaches such as image-space normal smoothing <ref type="bibr" target="#b11">[12]</ref> have been applied successfully to reduce noise artifacts and to make mesoscopic features easier to recognize. Another approach is to circumvent the problem by gradually removing the data features that would otherwise cause aliasing <ref type="bibr" target="#b19">[20]</ref>. However, these techniques by design do not produce scale-consistent results, remove fine details, and result in undesired over-smoothing.</p><p>Scale-inconsistent rendering generally occurs when sphere glyphs become smaller than individual pixels. In this case, the ray-sphere in-2x 1x <ref type="figure">Fig. 2</ref>. Rendering overview. Screen-space normal distribution functions (S-NDFs) and screen-space mipmaps (S-MIPs) enable interacting with large-scale particle data without re-sampling the particles after every interaction. A high-quality visualization of a Copper-Silver Mixture is updated in real time after user operations, including changing the lighting environment, e.g., the light direction, as shown in T 1 , T 2 , and T 3 , changing the specular exponent of the material, as shown in T 4 and T 5 , changing the transfer function, as shown in T 6 , T 7 , and T 8 , or zooming out (vertical direction).</p><p>tersections, and the subsequent shading computations, result in aliasing and noise <ref type="figure">(Fig. 1, bottom right)</ref>. This masks the actual structure of the data and is also inconsistent between subsequent frames during interaction. This is especially bothersome during exploration when the user frequently switches between overview and detail. Therefore, a high-quality visualization method should be consistent across scales.</p><p>We present a novel approach for the visualization of large-scale particle data that significantly improves on previous techniques and enables scale-consistent top-down exploration. Our technique caches screen-space normal distribution functions (S-NDFs), which allows for progressive, consistent rendering of large-scale particle data at interactive rates. As illustrated in <ref type="figure">Fig. 2</ref>, for a given view direction our cached S-NDF representation enables interactive zooming and panning <ref type="figure">(Fig. 2</ref>, rows) as well as material and lighting changes <ref type="figure">(Fig. 2, columns)</ref>. At the same time, we can progressively refine the current S-NDFs, by simply adding more samples to them. Without our representation, consistent rendering is impractical, since the sampling process must be restarted from scratch after changes to any visualization parameter.</p><p>Our implementation uses GPU ray casting <ref type="bibr" target="#b10">[11]</ref>, for computing S-NDFs as well as for comparing with brute force ray casting. However, our entire S-NDF pipeline could equivalently be implemented with state-of-the-art CPU ray tracers, e.g., <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b33">34]</ref>, with no conceptual differences, while obtaining the same benefits. The most important property of our method is the computation and use of S-NDFs, which makes it inherently consistent across scales and output resolutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Ray casting has been the traditional approach to render large scale particle data sets, whether on the CPU or on the GPU. GPU-based ray casting of ellipsoids was introduced in 2006 <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b17">18]</ref>. In light of the better performance and image quality compared to traditional polygon-based rendering as well as depth-correct billboards <ref type="bibr" target="#b2">[3]</ref>, the technique of ray casting quadratic surfaces has since been adopted as state-of-the-art for molecular dynamics visualization <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b24">25,</ref><ref type="bibr" target="#b27">28]</ref>. This technique constitutes a hybrid object/image space approach: billboard geometry for each particle is employed for starting per-fragment rays that trace the final result. As data set sizes increase, the billboards that are visible simultaneously grow increasingly smaller, making each glyph cheaper to render and allowing satisfactory scaling. No advanced culling techniques are thus needed to render data sets of over 100 million particles directly using current consumer hardware, although culling has been shown to be worthwhile <ref type="bibr" target="#b11">[12]</ref>. Data sets with billions of atoms can also be rendered interactively-assuming memory requirements can be constrained via instancing, for example-by switching to sorting the particles/instances into a grid and casting rays for the whole scene <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b20">21]</ref>. However, in principle all of these approaches suffer from aliasing due to severe under-sampling of very large scenes, which can still be explored interactively. The aliasing problem also applies to recent CPU-based methods <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b33">34]</ref>, which scale significantly better in terms of performance than in terms of visual accuracy. Complementary techniques have also been developed to reduce the resulting noise <ref type="bibr" target="#b11">[12]</ref>.</p><p>Progressive rendering techniques have been employed to solve the aliasing problem. Early on, Painter et al. <ref type="bibr" target="#b23">[24]</ref> proposed an adaptive progressive sampling approach to produce high-quality, anti-aliased images. Their sampling approach is dependent on three criteria: coverage of the image, location of features, and confidence in the values at a distinguished "pixel level" of resolution. Arikan et al. <ref type="bibr" target="#b1">[2]</ref> presented a progressive ray casting technique for progressive generation of images.</p><p>Deferred shading techniques are a more recent development in particle rendering. Grottel et al. <ref type="bibr" target="#b11">[12]</ref> use the 3x3 neighborhood of each fragment to construct a B√®zier patch that supplies the surface normal if glyphs approach single-pixel size. The two approaches developed by Falk et al. <ref type="bibr" target="#b7">[8]</ref> and Lindow et al. <ref type="bibr" target="#b20">[21]</ref> both use depth buffers storing the nearest ray-particle intersection. Based on the depth buffer, they create and light smooth surfaces, instead of using the actual ray-particle intersections. This removes aliasing, but introduces over-smoothing. Average surfaces can only represent structures accurately that are larger than individual pixels. Moreover, in sparsely populated areas nonexistent surfaces are created, which occlude other features. We show that large-scale particle data exhibit complex sub-pixel shading behavior, and instead employ an accurate alternative to normal smoothing.</p><p>Other large-scale particle visualization and in-situ techniques. Rizzi et al. <ref type="bibr" target="#b25">[26]</ref> show parallel splatting of cosmology data including simple LOD rendering by using subsets of particles. However, this does not offer consistency across scales, as intensity is just accumulated via blending. Rendering subsets loses intensity because of splats that contribute less, which also happens when zooming due to decreasing overlap. Subsetting and LOD generation can also be performed in situ. This significantly reduces the data size for later visualization <ref type="bibr" target="#b36">[37]</ref>. Other previous work proposed attenuating minified splats and radiant-fluxpreserving representatives for LOD rendering <ref type="bibr" target="#b15">[16]</ref>, or always choosing LOD nodes that fit the output resolution as closely as possible <ref type="bibr" target="#b9">[10]</ref>.</p><p>Explorable images <ref type="bibr" target="#b29">[30]</ref> are a powerful paradigm for in-situ visualization, which has also been proposed for visualizing particle simulations <ref type="bibr" target="#b38">[39]</ref>. In contrast to our solution, the latter work does not offer scale consistency, but allows for limited view changes using the stored depth buffer, with artifacts proportional to the angle change. Changing the camera zoom/distance is not allowed because the resulting holes would grow too large almost immediately. However, stored normals enable re-lighting and cutaways. Another related approach is the ParaView Cinema technology <ref type="bibr" target="#b0">[1]</ref>. We leave exploring further in situ applications of our S-NDF-based approach for future work.</p><p>An approach employing a metaphor orthogonal to our rigid spheres for molecular dynamics rendering is proposed by Knoll et al. <ref type="bibr" target="#b18">[19]</ref>. Here, particle data is volume-rendered as RBFs to allow for flexible surface reconstruction and element-dependent classification via multi-volumes. This technique is geared towards running distributed in-situ and taking advantage of hybrid CPU/Xeon Phi clusters.</p><p>Consistent multi-resolution rendering via PDFs. Representing image and volume data via probability density functions (PDFs) allows for consistent multi-resolution rendering and processing of both image <ref type="bibr" target="#b13">[14]</ref> and volume data <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b39">40]</ref>. These PDFs can be approximated sparsely and, e.g., be stored in sparse PDF maps <ref type="bibr" target="#b13">[14]</ref> and sparse PDF volumes <ref type="bibr" target="#b26">[27]</ref>, respectively. These representations are very similar to standard mipmaps <ref type="bibr" target="#b35">[36]</ref>, but enable the accurate and efficient evaluation of color mapping and non-linear filtering. Accurate approximation of PDFs is possible using isotropic Gaussians <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b26">27]</ref>. Our approach uses  similar ideas by preserving the distribution of surface normal vectors, which enables consistent, scale-independent shading. Normal filtering for local illumination. Fournier <ref type="bibr" target="#b8">[9]</ref> pointed out the importance of accurate surface normal vector filtering for local illumination. He introduced the normal distribution function (NDF) as an accurate representation of the surface normal vectors, which can be filtered linearly. The computation of mipmaps of normal maps leads to the same problem <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b30">31]</ref>. Many approaches, including ours, build upon NDFs to capture local illumination effects more accurately and consistently than is possible with individual normal vectors. Bruneton et al. <ref type="bibr" target="#b4">[5]</ref> give a survey of such techniques, including LEAN mapping <ref type="bibr" target="#b22">[23]</ref>, and LEADR mapping <ref type="bibr" target="#b5">[6]</ref>. However, some of these techniques make assumptions about the material's BRDF, which restricts them to the cases that were specifically considered. Han et al. <ref type="bibr" target="#b14">[15]</ref> employ sparse approximations via von Mises-Fisher distributions and spherical harmonics. Tan et al. <ref type="bibr" target="#b28">[29]</ref> approximate the overall reflectance instead of the normal distribution. Another recent approach represents NDFs for surfaces exhibiting high-frequency glints using triangulation <ref type="bibr" target="#b37">[38]</ref>.</p><p>We also use full NDFs instead of individual normal vectors. However, we use binning instead of representing NDFs as von Mises-Fisher or spherical harmonics distributions, because we target straightforward progressive refinement of NDFs by adding additional samples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">METHOD OVERVIEW</head><p>The main idea of our approach is to use a representation of surface normals for visualization that is independent of the output resolution, in order to enable scale-consistent rendering. <ref type="figure">Fig. 3</ref> illustrates this property, where our visualizations capture the same features in a Copper/Silver mixture data set in all output resolutions (right-most columns). This is otherwise only possible by using excessive super-sampling, with the number of samples increasing exponentially when zooming out (center columns). In contrast, standard interactive visualization cannot capture small features in zoomed-out views due to aliasing (left-most columns).</p><p>S-NDFs. We achieve this by defining a novel screen space variant of normal distribution functions <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b34">35]</ref>, which we call screen-space normal distribution functions, or S-NDFs. Similarly to standard NDFs, instead of capturing a single surface normal, our S-NDFs comprise a probability density function over the entire space of normal directions. However, our S-NDFs are defined entirely with respect to screen space (Sec. 4), instead of being defined with respect to a macrosurface <ref type="bibr" target="#b34">[35]</ref>.</p><p>S-NDF-based deferred shading. An important property of S-NDFs is that they enable users to interactively change the lighting and material properties, as well as zooming and panning. Since the distribution of surface normals that correspond to a pixel's footprint in screen space is known from the S-NDF, different lighting properties (direction, exponent, environment map, etc.) or material properties (BRDF, coefficients) can be applied in a simple deferred shading pass that computes each new pixel color without sampling the particle data again (Sec. 5).</p><p>Multi-resolution S-NDF filtering and zooming. NDFs, and likewise S-NDFs, can be filtered linearly <ref type="bibr" target="#b14">[15]</ref>. This has important implications: Lighting is a non-linear operation, which prevents simple linear filtering of normals for down-sampling <ref type="bibr" target="#b22">[23]</ref>. However, in contrast to individual normals, because S-NDFs can be down-sampled linearly, using them as the basis for (deferred) lighting results in consistent multi-resolution rendering. This property also enables us to perform interactive zooming without re-computing all S-NDFs: S-NDFs for lower output resolutions can be obtained directly by linearly filtering and down-sampling the S-NDFs of higher resolutions.</p><p>Caching S-NDFs. In order to perform zooming and panning efficiently in practice, we cache all already computed S-NDFs in screen space, using a virtual mipmap hierarchy <ref type="bibr" target="#b35">[36]</ref> that, instead of storing pixel colors directly, stores an S-NDF for every output pixel. Like the S-NDFs, this mipmap is defined with respect to screen space. We therefore call it a screen-space mipmap, or S-MIP (Sec. 6).</p><p>Interaction. <ref type="figure">Fig. 4</ref> gives an overview of the interactions enabled by our approach. The S-NDFs enable interactive re-lighting ( <ref type="figure">Fig. 4</ref>, horizontal direction), and caching S-NDFs in an S-MIP enables combining this with interactive zooming and panning ( <ref type="figure">Fig. 4, vertical direction)</ref>.</p><p>Progressive S-NDF refinement. The linearity of S-NDF filtering furthermore implies that it is straightforward to refine S-NDFs in a progressive manner, by simply iteratively adding new samples. Whenever the view point does not change, we iteratively add sub-pixel samples (normal vectors from sub-pixels) to the already cached S-NDFs. At the same time, we perform deferred shading to obtain the anti-aliased output. This progressively improves the quality of the S-NDFs and thus the output image, while amortizing sampling cost over multiple frames.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SCREEN-SPACE NORMAL DISTRIBUTION FUNCTIONS</head><p>In order to define a screen-space normal distribution function (S-NDF), we consider a region in screen space, e.g., the support of a pixel, and the particle geometry that projects to it. We call this region the pixel footprint x, which is our area of interest in screen space. See <ref type="figure" target="#fig_2">Fig. 5</ref>.</p><p>Notation. Our definition of the S-NDF D x (m) below is inspired by normal distribution functions used in microfacet models for rough surfaces, particularly the microfacet normal distribution D(m) defined by Walter et al. <ref type="bibr" target="#b34">[35]</ref>. However, we would like to emphasize that our S-NDFs are defined in (orthogonal to) screen space, whereas a microfacet normal distribution is defined with respect to a (macro)surface.  <ref type="figure">Fig. 4</ref>. Interactions enabled by our approach. Standard ray casting of particle data has to re-sample the data set after every user interaction. We enable two "orthogonal" ways of interacting with the data without re-sampling particles: (horizontal) S-NDFs enable changing the lighting; (vertical) S-MIPs enable zooming. Combining them jointly enables both.</p><p>For defining our domain of integration, we use the standard projected solid angle measure œÉ ‚ä• (œâ), which is summarized in the supplementary material. For more details see, e.g., Jakob <ref type="bibr" target="#b16">[17]</ref> or Veach <ref type="bibr" target="#b31">[32]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Definition</head><p>Given a pixel footprint x in screen space, and a domain D ‚äÜ ‚Ñ¶ on the hemisphere ‚Ñ¶ of normal directions, we consider the probability that a ray cast randomly with uniform probability anywhere inside the footprint x intersects a particle whose normal vector maps to D.</p><p>"Projected area" probability. For a given pixel footprint x, with corresponding screen space area A(x), we thus define the probability</p><formula xml:id="formula_0">P x (D) := A ‚ä• (D) A(x) ,<label>(1)</label></formula><p>where A ‚ä• (D) is the area measure for the total projected area that "sees" a normal vector that maps to D ‚äÜ ‚Ñ¶. This is illustrated in <ref type="figure" target="#fig_2">Fig. 5</ref>. Note that P(‚Ñ¶) ‚â§ 1, because some rays might not intersect any geometry. S-NDF definition. We define the screen-space normal distribution function D x (m) of a pixel footprint x as the probability density</p><formula xml:id="formula_1">D x (m) := dP x (œâ m ) dœÉ ‚ä• (œâ m ) ,<label>(2)</label></formula><p>where m is a normal vector, and œâ m is a solid angle centered around m. We specify m via 2D coordinates in the unit disk ‚Ñ¶ ‚ä• , i.e., via (x, y) with</p><formula xml:id="formula_2">x 2 + y 2 ‚â§ 1. The corresponding 3D normal is (x, y, 1 ‚àí x 2 ‚àí y 2 ). Integration. D x (m)</formula><p>gives the normal distribution of the projected particle geometry that maps to the footprint x as a probability density function, where the domain of integration is the hemisphere with respect to the projected solid angle measure œÉ ‚ä• (œâ). We can therefore obtain the probability defined above via integration over the domain D ‚äÜ ‚Ñ¶: </p><formula xml:id="formula_3">P x (D) = D D x (m) dœÉ ‚ä• (œâ m ).<label>(3)</label></formula><formula xml:id="formula_4">(œâ i ‚Üí œâ o ) BRDF (bi-directional reflectance distribution func.) œâ i , œâ o Direction of incoming light / outgoing light L(p, œâ)</formula><p>Radiance at p in direction œâ Pixel footprint coverage. Integration of D x (m) for a given pixel footprint x over the entire hemisphere ‚Ñ¶ (all normal directions) gives</p><formula xml:id="formula_5">‚Ñ¶ D x (m) dœÉ ‚ä• (œâ m ) = P geometry .<label>(4)</label></formula><p>P geometry is the probability that a random ray uniformly chosen over the footprint x intersects some particle. Conversely, the probability of not intersecting any particle at all is (1 ‚àí P geometry ). For example, if a given x only "sees" particles over 80% of its area A(x), P geometry = 0.8, and 20% of its area does not see any geometry at all. This also means that the average radiance received by x over its area A(x) will be only 80% of what it would have been with full pixel coverage. See Sec. 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Discretization and Computation</head><p>In order to discretize an S-NDF for storage purposes, we subdivide the domain of the hemisphere ‚Ñ¶ into disjoint subdomains D i ‚äÜ ‚Ñ¶ that together cover the whole domain ‚Ñ¶:</p><formula xml:id="formula_6">‚à™ i D i = ‚Ñ¶.</formula><p>Each of these subdomains D i corresponds to a bin in the discretized S-NDF representation. <ref type="figure" target="#fig_3">Fig. 6</ref> shows three different variants for binning patterns in practice.</p><p>Computing probabilities. The first step of computing the S-NDF D x (m) for a pixel footprint x is estimating the corresponding probabilities (integrals) P x (D i ) for all bins D i via Monte Carlo integration: We shoot rays over the pixel footprint x with uniform probability, and for each ray compute the intersection position with a particle and the corresponding normal vector there. Each such normal sample increases the corresponding bin count in the discretized representation of P x (D i ). After shooting as many rays for x as desired, the obtained bin counts simply have to be normalized by the total number of rays shot. This results in estimates of the probabilities P x (D i ).</p><p>Computing S-NDFs. After the integrals P x (D i ) have been estimated, the corresponding D x (m) can be computed via numerical differentiation. We do this by simply dividing each P x (D i ) by the corresponding projected solid angle measure of the entire bin D i :</p><formula xml:id="formula_7">D x (m i ) ‚âà P x (D i ) œÉ ‚ä• (D i ) , œÉ ‚ä• (D i ) = D i dœÉ ‚ä• (œâ).<label>(5)</label></formula><p>Here, m i denotes the representative normal direction m for bin D i , which we (approximately) choose to be in the center of the bin. Computations in ‚Ñ¶ ‚ä• . We note that due to the use of the projected solid angle measure œÉ ‚ä• (œâ), many of our computations can be performed in the (projected) unit disk ‚Ñ¶ ‚ä• , instead of requiring one to work on the hemisphere ‚Ñ¶. That is, each D i corresponds to a region of ‚Ñ¶ ‚ä• . Carrying out computations in ‚Ñ¶ ‚ä• greatly simplifies implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">LIGHTING COMPUTATIONS WITH S-NDFS</head><p>We first summarize the standard computation of lighting (radiance) at a single point p on a surface, with respect to a single corresponding normal vector n(p) and a given bi-directional reflectance distribution function (BRDF) <ref type="bibr" target="#b16">[17]</ref>. Then, we introduce how we instead compute the + + + +  lighting over a pixel footprint x in screen space, using all the normal vectors it "sees," as described by the corresponding S-NDF D x (m).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Lighting at a given point on a surface</head><p>Radiance. The radiometric quantity radiance can be defined as the density of radiant power Œ¶, per unit projected solid angle œâ, per unit area A orthogonal to œâ, flowing through a point p <ref type="bibr" target="#b16">[17]</ref>:</p><formula xml:id="formula_8">L(p, œâ) := d 2 Œ¶ dœÉ ‚ä• (œâ) dA .<label>(6)</label></formula><p>BRDF. The BRDF f r (‚Ä¢) at a point p is defined as the proportionality constant between the differential outgoing radiance dL o , going out in direction œâ o , and the differential irradiance dE i , coming in from direction œâ i , at the point p, with respect to its normal n(p) <ref type="bibr" target="#b16">[17]</ref>:</p><formula xml:id="formula_9">f r (œâ i ‚Üí œâ o ) := dL o (œâ o ) dE i (œâ i ) = dL o (œâ o ) L i (œâ i ) dœÉ ‚ä• (œâ i ) ,<label>(7)</label></formula><p>where the irradiance is obtained via the differential projected solid angle as</p><formula xml:id="formula_10">dE i (œâ i ) := L i (œâ i ) dœÉ ‚ä• (œâ i ), where L i (œâ i ) is the incoming radiance from direction œâ i . Integrating this equation to obtain L o (p, œâ o )</formula><p>gives <ref type="bibr" target="#b16">[17]</ref> </p><formula xml:id="formula_11">L o (p, œâ o ) = ‚Ñ¶ L i (p, œâ i ) f r (œâ i ‚Üí œâ o ) dœÉ ‚ä• (œâ i ).<label>(8)</label></formula><p>The parameterization of the BRDF f r (œâ i ‚Üí œâ o ) and the expression for L o (p, œâ o ) depend on a given, single surface normal direction n(p) at p. <ref type="figure">Fig. 7</ref>. S-NDF visualization in screen space. We illustrate the 64x64 S-NDFs corresponding to a coarse 64x64 pixel visualization of a laser ablation crown. A corresponding high-resolution visualization, with lighting computed in screen space using these S-NDFs, is shown in <ref type="figure">Fig. 8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Lighting with S-NDFs in screen space</head><p>Our goal is now to switch to computing everything with respect to screen space. We also want to remove the dependency on single normal vectors n, and instead be able to refer to an entire solid angle of normal directions œâ m centered around a normal vector m in screen space.</p><p>Radiance with respect to m. We define the equivalent to Eq. 8 parameterized with an (arbitrary) normal vector m, instead of position p:</p><formula xml:id="formula_12">L o (m, œâ o ) := ‚Ñ¶ m L i (œâ i ) f r (œâ i ‚Üí œâ o ) dœÉ ‚ä• (œâ i ),<label>(9)</label></formula><p>where the domain of integration is the hemisphere ‚Ñ¶ m centered around the normal vector m, and œâ o and œâ i are given with respect to m. Note that in contrast to Eq. 8, L i (œâ i ) now only depends on a direction, and not also on a surface point p. This restriction means that we have to treat the lighting environment as constant for all surface points. This also means that we cannot handle shadowing-masking terms <ref type="bibr" target="#b34">[35]</ref>, for example. However, our approach targets arbitrary geometry, where computing such terms is very costly, instead of statistical surface descriptions.</p><p>Radiance of pixel footprint x. We can compute the average radiance at the footprint x by integrating over all rays r cast inside x:</p><formula xml:id="formula_13">L(x) := 1 A(x) r(x) L o (m(r), œâ o (r)) dA ‚ä• (r),<label>(10)</label></formula><p>where A ‚ä• (r) is the area measure for r orthogonal to screen space, m(r) is the normal vector at the intersection of ray r with a particle, and œâ o (r) is the ray direction transformed into the local frame of the BRDF.</p><p>Radiance from S-NDF. Now, changing the domain of integration from rays r(x) to the hemisphere ‚Ñ¶ orthogonal to screen space, and plugging in the definition of D x (m) (Eq. 2), allows us to write:</p><formula xml:id="formula_14">L(x) = ‚Ñ¶ D x (m) L o (m, œâ o (r x )) dœÉ ‚ä• (œâ m ),<label>(11)</label></formula><p>where r x is the ray direction through the center of the pixel footprint x. This is equivalent to Eq. 10 (assuming constant ray directions within x), because D x (m) is the density of normal vectors pointing in direction m, corresponding to the geometry that is seen over the pixel footprint x in screen space. Note that the A(x) term has fallen out (cf. Eq. 1).</p><p>The radiance L o (m, œâ o ) can be computed from any given BRDF, e.g., from the simple Blinn-Phong BRDF <ref type="bibr" target="#b3">[4]</ref> to more complicated ones.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Pre-integration of BRDF and lighting environment</head><p>To improve the accuracy of the S-NDF lighting computations, for any given discretization of D x (m) into bins D i ‚äÜ ‚Ñ¶ as described above, we <ref type="figure">Fig. 8</ref>. Lighting using S-NDFs. Data sets such as (top) a 518,000particle laser ablation crown, and (bottom) a 100 million particle instanced laser data set, can be lit interactively using S-NDFs, independent of the number of particles. (Top left) Environment map used for lighting.  <ref type="table">Table   2</ref>-Allocate Missing Tiles <ref type="figure">Fig. 9</ref>. Screen-space mipmap (S-MIP). We render in the texture space of a virtual mipmap hierarchy that is defined parallel to screen space. Virtualizing the S-MIP enables supporting large output resolutions as well as interactive panning. Texture space is split into 2D tiles, and the current view determines which of these tiles are visible <ref type="bibr" target="#b0">(1)</ref>. Tile storage is managed in an S-MIP cache that stores only current/previously visible tiles <ref type="bibr" target="#b1">(2)</ref>. Rendering on screen is done by locating the necessary tiles in the S-MIP cache (3), and rendering them in the correct location in the output image (4).</p><p>can pre-integrate the outgoing radiance corresponding to all normal vectors mapping to each bin D i . For any given x, we assume that D x (m) is constant for all m ‚àà D i , i.e., D x (m) = D x (m i ). We can then move the constant term out of the integral in Eq. 11, and pre-integrat·∫Ω</p><formula xml:id="formula_15">L(D i ) := D i ‚Ñ¶ m L i (œâ i ) f r (œâ i ‚Üí œâ o ) dœÉ ‚ä• (œâ i ) dœÉ ‚ä• (œâ m ),<label>(12)</label></formula><p>which is independent of the pixel footprint x and the corresponding S-NDF D x (m), and solely depends on the BRDF f r (œâ i ‚Üí œâ o ) and the incoming radiance L i (œâ i ). We can therefore pre-computeL(D i ) for a given BRDF and lighting environment. This simply requires storing one radiance value per bin D i . Using the pre-integratedL(D i ), the lighting computation for a given footprint x, taking into account the actual corresponding D x (m i ), becomes a simple sum over all bins D i :</p><formula xml:id="formula_16">L(x) ‚âà ‚àë i D x (m i )L(D i ).<label>(13)</label></formula><p>Looking at Eq. 5, we observe that we can also write this as</p><formula xml:id="formula_17">L(x) ‚âà ‚àë i P x (D i )L (D i ) œÉ ‚ä• (D i ) ,<label>(14)</label></formula><p>which allows us to fold the differentiation with respect to œÉ ‚ä• (D i ) into a pre-computed table that storesL(D i )/œÉ ‚ä• (D i ) for each bin D i . Please see the supplementary material for more details on the implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CACHING S-NDFS IN A SCREEN-SPACE MIPMAP</head><p>Mipmapping is a standard method for texture anti-aliasing <ref type="bibr" target="#b35">[36]</ref>. An original texture image is repeatedly down-sampled to smaller resolutions, creating a pyramid of texture images. This pyramid is then used during rendering for fast anti-aliasing. Using a pre-computed image pyramid is computationally much cheaper than down-sampling the original texture to each desired output resolution on-the-fly. S-MIPs. We adapt this concept to screen space, and store a discretized S-NDF per "texel" instead of simply a texel color. This allows us to reduce the computational cost of rendering large-scale particle data, and facilitates interactive navigation. Specifically, in contrast to standard mipmaps our screen-space mipmap, or S-MIP, is defined parallel to screen space, and not parameterized onto a surface. This is in contrast to the standard case where texture space is parameterized onto general polygons in 3D space. Moreover, our S-MIP is completely virtualized in order to be able to address very high output resolutions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">S-MIP Representation</head><p>The S-MIP is composed of a pyramid of resolution levels. We choose level 0 to correspond to the desired maximum render resolution. Subsequent levels of the pyramid are then of a width and height that is a power of two smaller than the preceding level. For a given data set, we determine the resolution of level 0 such that it guarantees that each sphere will be sampled at least N times, where N is configurable.</p><p>Level 0 is typically too large to fit into GPU memory, even for small N and moderately-sized data sets. We therefore divide each level of the S-MIP into equally-sized 2D tiles of a user-specified size of T L √ó T L pixels, and allocate an S-MIP cache that only stores the tiles currently needed for rendering. <ref type="figure">Fig. 9</ref> depicts an overview.</p><p>For rendering, we compute the required (visible) part of the S-MIP depending on the current view frustum and output resolution. The final output image is computed by interpolating between two adjacent S-MIP levels (LODs), as in standard tri-linear mipmap filtering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Virtualizing the S-MIP</head><p>The tiled representation enables computing only those tiles that are needed to render the current output image. Initially, a fixed-size memory pool of tiles is allocated (the S-MIP cache). The first step of our rendering pipeline checks which tiles are required by the current output image. The S-MIP is augmented with a page table that is kept on the GPU, which keeps track of mapped tiles. If a required tile is not in the memory pool, a cache miss is reported. If there is memory available, the required tile is allocated and entered in the page table. When the cache is full, we use a least recently used strategy to free up memory.</p><p>Overall, this results in an output-sensitive pipeline. That is, only the S-NDFs in tiles of the S-MIP that contribute to output pixels on the screen will be computed and be used for deferred shading.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2">Down-sampling S-NDFs in the S-MIP</head><p>As in a standard mipmap, coarser levels of detail (LODs) in the S-MIP can be computed by down-sampling a finer LOD. This feature of the S-MIP is very useful for our purposes of large-scale particle rendering. It is specifically useful for the case when the user performs a 'zoom out' operation as shown in <ref type="figure" target="#fig_5">Fig. 10 (a)</ref> and (b). This requires a coarser version of the image currently being rendered, and therefore LOD i can be computed by down-sampling the adjacent finer LOD i‚àí1 in the S-MIP. Using a box filter, this corresponds to simply averaging four (2 √ó 2) adjacent S-NDFs in the S-MIP. This is illustrated in <ref type="figure" target="#fig_5">Fig. 10</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Navigation using the S-MIP</head><p>In addition to the zooming described above, the second operation important for navigation is panning (translating) the view. Panning the view simply amounts to either fetching the S-MIP tiles corresponding to the new view from the cache, or allocating tiles that have just become visible in the cache and computing the contained S-NDFs from scratch.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Progressive S-NDF Computation</head><p>Aliasing can be reduced by increasing the number of samples per pixel via super-sampling, i.e., gathering many sub-pixel contributions for each output pixel. However, while super-sampling increases the complexity of surface details that can be captured without aliasing, it at the same time increases the computational complexity to a level that exceeds the capability of current GPUs for rendering at interactive frame rates. To alleviate the latency when computing S-NDFs in S-MIP tiles, we compute them via progressive sampling. That is, for a desired output resolution, we perform multiple iterations where each one computes one normal vector per pixel, and enters it into the pixel's S-NDF. Our implementation uses GPU ray casting <ref type="bibr" target="#b11">[12]</ref> to generate normal vector samples, but any other method could be used as well, e.g., <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b33">34]</ref>. <ref type="figure">Fig. 11</ref> illustrates progressive sampling over time, together with the impact that different kinds of user interaction have.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.1">S-MIP and S-NDF Invalidation</head><p>When the user pans or zooms, the cached S-MIP tiles are simply reused and only newly visible parts of the S-MIP are newly computed. This preserves the responsiveness of the user interface while continuously improving rendering quality. When the particle size or the viewing direction changes, the S-MIP cache must be completely invalidated, and the progressive refinement process is restarted. However, a single iteration of the refinement process in our pipeline is only slightly slower than standard ray casting without S-NDFs. Therefore, the user can still edit the particle size or rotate the scene at interactive frame rates at the same image quality as standard ray casting techniques. This implies that our approach always performs as well as standard ray casting in the worst case, but quickly converges to higher-quality rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Implementation</head><p>In our S-MIP implementation, we set the tile size T L to 64 pixels. Each texel stores the corresponding discretized S-NDF, which is essentially a 2D histogram with each bin storing the observed probability that the normal vector of a random sample inside the S-NDF's footprint points in that direction. <ref type="figure" target="#fig_3">Fig. 6</ref> shows three different discretization patterns that we have implemented in our framework. We refer the reader to the supplemental material for a comparison of these techniques. The more bins are stored per pixel, the higher the accuracy of the rendering will be. For our main implementation we use the 'Projected Normals' binning technique with 8 √ó 8 bins per S-NDF. The Projected Normals binning pattern is very cheap to compute and provides a good trade-off between quality and performance in practice.  <ref type="figure">Fig. 11</ref>. Progressive sampling and interaction. The Laser Ablation data set is rendered using standard ray casting, an S-MIP without S-NDFs, and S-MIP plus S-NDFs. We plot the time it took to reach a maximum number of samples per pixel (here: 256). Different interactions have various impact on the time it takes to reach the maximum quality. From left to right, we interactively change the light direction, zoom in, rotate, pan, change the transfer function, zoom out, and pan.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS AND DISCUSSION</head><p>We evaluate the image quality, performance, and possible user interactions of our technique using molecular dynamics data of different scales from two application domains. <ref type="table">Table 3</ref> gives an overview of all data sets we have used to evaluate our approach. Since all simulations use periodic boundary conditions (in case of the laser ablations only along the long faces) and the instanced laser data has an extremely elongated bounding box, we have replicated (stacked) it 5 times.</p><p>As we will show, our scale-consistent rendering not only significantly reduces noise, but also makes larger-scale structures more easily perceptible. Features contain coherent normals that, when collected into S-NDFs, result in a bias toward a specific direction.</p><p>The S-NDF refinement process can take a few seconds to deliver an accurate solution for large-scale particle data (10 7 particles upwards). To improve responsiveness during interaction, our S-MIP based S-NDF approach still allows multiple manipulations that do not invalidate the current refinement progress. These include changing the number and position of light sources, switching the BRDF (Lambert, Blinn-Phong), changing BRDF parameters like the specular exponent, changing the transfer function, zooming out, or panning. We provide several examples of these interactions for illustrative purposes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Application Scenarios</head><p>We present multiple case studies that utilize our framework to explore data sets resulting from Molecular Dynamics Simulations. All data sets except one depict laser ablation simulations. These contain a block of solid matter, usually a metal. Where not noted otherwise, the metal is aluminum. These blocks are irradiated with short laser pulses to ablate material in the form of plasma. This process is used either for machining purposes or as a precise means for propulsion, which is especially useful in space, that is, in the absence of oxygen. In both cases, the trajectory of the ejected material is important to make sure the plasma does not collide with parts of the machine or the satellite, thus damaging it. The effect of the laser pulse on the metal block is also interesting, since the ensuing shock wave can cause compression of the otherwise ordered crystal lattice, which will later relax again.</p><p>Especially the second effect can be observed nicely with our technique, which on purposeful minification of the particles results in images that cross the boundary between glyph-based rendering and volume rendering. The last data set is a typical example from thermodynamics and consists of a fluid layer that is ripped in half, producing gas and droplets. The interesting features here are flat surfaces and small droplets, which have different scales that need to be reproduced consistently during exploration. We will now demonstrate exemplary exploration interactions and their effects on the features a user can detect in some of the data sets we have used for performance evaluation. <ref type="figure">Fig. 12</ref> shows how shock waves propagating within a solid block of aluminum can be highlighted using simple light source manipulation. The shock wave resulting from the laser impact alters the otherwise <ref type="figure">Fig. 12</ref>. Changing the light direction interactively at full quality allows exploring different features in the Laser Ablation data set. (Top row) Using S-NDFs makes the different features clearly visible, whereas (bottom row) standard ray casting obscures features due to under-sampling. <ref type="table">Table 2</ref>. Interaction timings for multiple interaction operations performed on multiple data sets, for an output resolution of 1, 280 √ó 720 pixels. For each operation, we give timings for rendering using an S-MIP storing shaded pixels, vs. using an S-MIP storing S-NDFs. The first operation is re-lighting, and compares the time needed to re-light an image that is sampled with a specified number of samples per pixel (here: 256 samples). The second operation is zooming out by one level of detail, and compares the time needed to compute the final image from the finer-resolution LOD in the S-MIP (including down-sampling). The last operation gives the pure down-sampling time for the corresponding active tiles in the S-MIP cache. regular crystal lattice of the aluminum block, resulting in particle density fluctuations. These fluctuations show up as flat structures that can be highlighted depending on the light source configuration: T 2 and T 3 reveal additional structures not noticeable using the original transfer function T 1 (highlighted in orange). Also note that the single-sample ray casting (bottom row) drowns most of the structures in heavy noise. No a-priori knowledge of features is required and no pre-processing, filtering or aggregation need to be performed to extract these features. This also means that the visualization is not biased toward one specific finding, which would in turn mask other discoverable properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.1">Exploration by changing the light direction</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.2">Exploration across zoom levels and light directions</head><p>The Copper/Silver mixture data set depicted in <ref type="figure">Fig. 3</ref> consists of a copper bar with several embedded silver spheres. The resulting material exhibits ridges and small dislocations on the faces, which cannot be detected in the overview with standard rendering. Note the scale consistency of the small features for both super-sampling and our S-NDF technique. This data set also shows how S-NDFs help in the analysis workflow: Even data sets of moderate size usually are explored starting from an overview, where the data is visible as a whole, and a mismatch between available screen pixels and number of atoms in the simulation leads to distracting noise and aliasing artifacts. The scale-consistency of our approach allows domain scientists to decide where potentially interesting features are located, thus directing the exploration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.3">Exploration via the S-NDF explorer widget</head><p>As shown already in <ref type="figure">Fig. 12</ref>, spatially oriented features like ridges, dislocations or other defects in regular structures (as in crystalline solids) as well as density fluctuations can be highlighted with an appropriate transfer function. Discussion with a domain scientist revealed much interest in this approach, since the computational detection especially of dislocations is an extremely expensive procedure.</p><p>Since different transfer functions highlight differently oriented features, the ability to change the lighting environment on-the-fly allows interactive exploration of lighting-dependent features. This lightingbased feature exploration interaction is novel in the context of thermodynamics and material science, as state-of-the-art visualization could not offer the rendering and lighting quality our approach introduces.</p><p>One way of altering the transfer function is directly altering the light direction by orbiting the light source around the data set (see, for <ref type="figure">Fig. 2</ref>). To highlight multiple features with different orientation, multiple light sources are required. If each light source has a different color, the resulting features can also be distinguished.</p><formula xml:id="formula_18">example, [T 1 , T 3 ] in</formula><p>To enable a more intuitive exploration of features with a consistent orientation, we have implemented two additional ways of manipulating the transfer function. Recall that the transfer function is visualized as a circular image, a projection of the frontal hemisphere. The direct manipulation now allows free-hand painting of arbitrary parts of the transfer function, thus coloring the accordingly oriented flat features. Both the transfer function visualization and particle rendering are updated interactively. An example of a hand-drawn transfer function is shown in the supplemental material. Analogously to scale-consistent transfer functions for volumes <ref type="bibr" target="#b26">[27]</ref>, accurate filtering is indispensable for unfiltered hand-drawn transfer function, as the sparsely sampled or linearly filtered normals would result in lookups that do not reflect the actual sub-pixel structures present in the data.</p><p>S-NDF explorer widget. To further improve this interaction, we propose an S-NDF explorer widget (see <ref type="figure">Fig. 13</ref>). This widget allows direct painting of the two most meaningful patterns we have observed so far directly onto the transfer function. One pattern is the central circle that represents all normals pointing towards the viewer, to an extent that can be changed by scaling the radius of this central circle. The other pattern is an arbitrary number of pie slices that can be rotated around the center, thus capturing a certain orientation, with a tolerance that can be set by enlarging or shrinking the angle the slices cover.</p><p>Varying particle radii. In addition to the intrinsic properties of our approach, we noticed how the manipulation of the physically motivated particle radius can generate additional insight. The shock waves in regular materials like metal or other crystal lattices are occluded if the material is too dense, but reducing the particle size makes the internal structures easily visible. Structure can be perceived using our rendering approach since any larger-scale patterns (regular and irregular) statistically coagulate to specific normal orientations, which will then be captured by the S-NDFs. Conversely, with conventional rendering, the following (wrong) alternatives exist: sub-pixel spheres occupy the whole pixel all the same (material is gained across scales) or disappear (material is lost across scales).</p><p>The inverse interaction, that is, enlarging particle radii beyond the, e.g., van-der-Waals radius or lattice constant, can be used to merge neighboring particles to form surfaces that can be used to detect lowfrequency/large-scale features. As an example the ablation crown of the laser ablation data set ( <ref type="figure">Fig. 8 (top)</ref>) is much more evident with increased particle sizes, whereas the shock waves caused by the laser within the aluminum lattice are accentuated using reduced radii (see <ref type="figure">Fig. 13 (d)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Performance</head><p>We first discuss general performance considerations in terms of complexity, and then report and discuss actual measured performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.1">Complexity</head><p>It is important to note that although our implementation uses GPU ray casting for sampling the particle data, the big benefit from using a) b) c)</p><p>f) e) d) <ref type="figure">Fig. 13</ref>. The S-NDF explorer widget allows exploring the normal distributions of a data set such as the Instanced Laser shown here. a) rendering of the data set under the transfer function shown on the top right, b) the user activates the widget, which starts out as a faded gray transfer function topped with a dark gray region to highlight normal vectors pointing towards the viewer, c) the user creates a 'slice' to adjust the transfer function giving a color, cyan, to a region of interest, d) the user drags the slice to look for other regions of interest, e) the user enlarges the slice to highlight more features using the same color, f) the user adds another slice to highlight a region with normal orientation opposite to that of the first region of interest.</p><p>S-NDFs is independent of the actual ray casting technique that is used. This also means that the major performance benefit is independent of the exact performance of the ray caster implementation that is used. For the following considerations, we denote the number of pixels that should be computed by N P , and the cost of intersecting one viewing ray with the particle data set by T R . We furthermore denote the number of bins in each S-NDF by P 2 L , and the number of samples that should be computed for a specific desired rendering quality by N S .</p><p>Re-lighting complexity. The total cost of re-lighting using ray casting without S-NDFs is O(N P ‚Ä¢ T R ‚Ä¢ N S ). In contrast, the cost for relighting using S-NDFs is N P ‚Ä¢P 2 L = O(N P ). The number P 2 L is a constant, and therefore does not differ between different levels of detail. In stark contrast, N S is not a constant, and in order to achieve scale-consistent rendering (or, simply: high quality) it must be increased exponentially depending on the level of detail. For example, whenever the zoom factor halves (zooming out), N S must be quadrupled in order to keep the rendering quality constant. This drastic difference in scalability does not depend on the actual ray casting implementation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.2">Performance measurements</head><p>We evaluate the performance of our approach using large scale particle data sets consisting of about 500,000 to almost 200 million particles. Our data sets and their sizes are listed in <ref type="table">Table 3</ref>.</p><p>All our performance tests were run on a machine running Windows 7 with two Intel Xeon X5550 2.67 GHz processors with a Geforce GTX TITAN X (Pascal) with 12 GB graphics memory.</p><p>The basic performance for computing one sample per pixel is given in <ref type="table">Table 3</ref>. The sampling performance is similar to other GPU ray casting approaches, e.g., using MegaMol <ref type="bibr" target="#b10">[11]</ref>. While updating the S-NDFs decreases the performance slightly, our approach still runs at very interactive frame rates. After the iterative process of sampling is finished, the number of particles does not affect the rendering performance anymore, since the particle data is not required for rendering until the cache is invalidated. <ref type="table">Table 2</ref> gives more detailed performance metrics. We report the time taken to perform an exploratory operation (re-lighting), and a navigational operation (zooming-out), on all of our data sets using either an S-MIP without S-NDFs (i.e., simply storing a color per pixel), as well as the full-featured S-MIP storing an S-NDF per pixel. We report the time taken to re-light an image after it was sampled an arbitrary number of times (256 in our experiments). As shown in <ref type="table">Table 2</ref>, the re-lighting operation takes significantly less time using our proposed S-MIP + S-NDF approach, compared to ray casting without S-NDFs. This is clearly due to having to re-sample the data 256 times per pixel in the standard approach after the lighting properties are changed, in order to again reach the same image quality that is provided by the S-NDF approach. For the zoom-out operation, we report the time needed to compute a 'zoomed-out' image, given we already have computed the corresponding finer image in the S-MIP. We report the time taken for down-sampling without updating the S-MIP cache, and we report the time exclusively required to update the S-MIP cache with the down-sampled level. It is evident that zooming out using the S-MIP without S-NDFs takes less time compared to zooming out using the S-MIP with S-NDFs. This is because the former approach stores just four values (RGBA) per pixel, while each S-NDF approach stores 64 values (bins) per pixel in our implementation. However, this small performance loss is very minor compared to the capability of S-NDFs for interactive re-lighting operations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Memory Consumption</head><p>The advantages of our approach come at a memory consumption cost. The memory cost of our approach, C T (in bytes), can be computed as C T = C SC + C D , where C D is the memory footprint of the data, and C SC is the memory cost of our S-MIP cache. The data cost C D results from C D = n D ‚Ä¢ 4 ‚Ä¢ sizeof( float ), where n D is the number of particles in the data set. We store four values for each particle, namely its (x, y, z) position and its radius. Each value is stored in a floating point data type of 4 bytes. The S-MIP cache cost, C SC is computed as</p><formula xml:id="formula_19">C SC = n T ‚Ä¢ T 2 L ‚Ä¢ P 2 L ‚Ä¢ sizeof( D T )</formula><p>, where n T is the number of tiles that the cache should accommodate, T <ref type="bibr" target="#b1">2</ref> L is the number of pixels per tile, P 2 L is the number of elements per pixel, and D T the data type used in the S-MIP structure. For our experiments, the cost C SC = 1936 ‚Ä¢ 64 2 ‚Ä¢ 8 2 ‚Ä¢ 4 ‚âà 2 GB.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSIONS AND FUTURE WORK</head><p>Our normal distribution cache for large-scale particle rendering is capable of drastically improving the image quality of current GPU ray casting techniques using progressive refinement while maintaining interactive frame rates even for particle data consisting of millions of particles. We have shown that large-scale particle data exhibit complex sub-pixel features that have to be represented accurately across multiple scales to allow for consistent multi-resolution rendering even for small output resolutions. This feature-consistent representation is essential for the effective exploration of particle data. Our progressive sampling converges to an accurate solution within a short amount of time. Additionally we have shown new possibilities for exploratory analysis by using different transfer functions and light interactions in contrast to solely relying on the commonly used Blinn-Phong BRDF.</p><p>Future work. Two very interesting avenues for future work are (1) Combining S-NDFs with some form of global illumination. Specifically, ambient occlusion should be easy to integrate. (2) We are very interested in exploring the use of S-NDFs for in situ visualization. Since the S-MIP tiles store S-NDFs in image space, they could be generated on a server and transmitted to a client for deferred lighting, zooming, and panning, without requiring access to the actual particle data.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>4 Fig. 3 .</head><label>43</label><figDesc>Scale-consistent visualization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .</head><label>5</label><figDesc>Pixel footprint and projected area probability. S-NDFs are defined over the footprint of a pixel in screen space. They give the corresponding area in the footprint that "sees" normal vectors mapping to a given solid angle on the hemisphere of all possible normal directions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 6 .</head><label>6</label><figDesc>S-NDF discretization. Three practical binning patterns for subdividing the projected hemisphere ‚Ñ¶ ‚ä• into bins D i such that ‚à™ i D i = ‚Ñ¶ ‚ä• , using (from bottom to top) 64, 256, and 1024 S-NDF bins, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 10 .</head><label>10</label><figDesc>Down-sampling S-NDFs in the S-MIP. Each S-NDF in a given LOD i of the S-MIP (b), can be computed by simply averaging the four corresponding S-NDFs from the higher-resolution LOD i‚àí1 (a).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>‚Ä¢</head><label></label><figDesc>Mohamed Ibrahim, Peter Rautek, and Markus Hadwiger are with King Abdullah University of Science and Technology (KAUST), Thuwal, 23955-6900, Saudi Arabia. E-mail: {mohamed.ibrahim, peter.rautek, markus.hadwiger}@kaust.edu.sa.</figDesc><table /><note>‚Ä¢ Patrick Wickenh√§user and Guido Reina are with Visualization Research Center (VISUS) at the University of Stuttgart, Germany. E-mail: patrick.wickenhaeuser@online.de, guido.reina@visus.uni-stuttgart.de.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 .</head><label>1</label><figDesc>S-NDF and lighting terminology. Subset of ‚Ñ¶ corresp. to "bin" i, where‚à™ i D i = ‚Ñ¶ ‚Ñ¶</figDesc><table><row><cell>Symbol</cell><cell>Description</cell></row><row><cell>x</cell><cell>Pixel footprint in screen space</cell></row><row><cell>A(x)</cell><cell>Area measure of the footprint x</cell></row><row><cell>‚Ñ¶, D</cell><cell>Hemisphere of normal directions ‚Ñ¶; subset D ‚äÜ ‚Ñ¶</cell></row><row><cell>D i</cell><cell></cell></row><row><cell>‚ä•</cell><cell>Projected unit disk corresponding to ‚Ñ¶</cell></row><row><cell>P x (D)</cell><cell>Probability of x "seeing" a normal mapping to D</cell></row><row><cell>D x (m)</cell><cell>S-NDF for x</cell></row><row><cell>m</cell><cell>A normal vector with respect to screen space</cell></row><row><cell>œâ</cell><cell></cell></row></table><note>m Solid angle on ‚Ñ¶ centered around m œÉ‚ä• (œâ) Projected solid angle measure of solid angle œâ f r</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was funded by King Abdullah University of Science and Technology (KAUST), and Deutsche Forschungsgemeinschaft (DFG) as part of SFB 716.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">An image-based approach to extreme scale in situ visualization and analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Jourdain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>O'leary</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Patchett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Rogers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Petersen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SC&apos;14</title>
		<meeting>of SC&apos;14</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="424" to="434" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">An algorithm for progressive raytracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Arikan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>G√ºd√ºkbay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ADVIS 2000</title>
		<meeting>of ADVIS 2000</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="248" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Texmol: interactive visual exploration of large flexible multi-component molecular complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Djeu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Siddavanahalli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Thane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="243" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Models of light reflection for computer synthesized pictures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGGRAPH</title>
		<meeting>of ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1977" />
			<biblScope unit="page" from="192" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A survey of nonlinear prefiltering methods for efficient and accurate surface shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bruneton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Neyret</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="242" to="260" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Linear efficient antialiased displacement and reflectance mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dupuy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Heitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-C</forename><surname>Iehl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Poulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Neyret</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ostromoukhov</surname></persName>
		</author>
		<idno>211:1-211:11</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">591 TFLOPS Multi-trillion Particles Simulation on SuperMUC</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Eckhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Heinecke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bader</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brehm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Hammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Huber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-G</forename><surname>Kleinhenz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vrabec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hasse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Horsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bernreuther</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Glass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Niethammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bode</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-J</forename><surname>Bungartz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Supercomputing (ISC) 2013</title>
		<meeting>of Supercomputing (ISC) 2013</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Atomistic visualization of mesoscopic whole-cell simulations using ray-casted instancing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Falk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="195" to="206" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Normal distribution functions and multiple surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Fournier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface Workshop on Local Illumination</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="45" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Exploring the Millennium Run-Scalable Rendering of Large-Scale Cosmological Datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fraedrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1251" to="1258" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">MegaMol-A Prototyping Framework for Particle-based Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grottel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>M√ºller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="201" to="214" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Coherent culling and shading for large molecular dynamics visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grottel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Dachsbacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurovis</title>
		<meeting>of Eurovis</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="953" to="962" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Splatting illuminated ellipsoids with depth correction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VMV 2003</title>
		<meeting>VMV 2003</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="245" to="252" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Sparse pdf maps for non-linear multi-resolution image operations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hadwiger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sicat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Beyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kr√ºger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>M√∂ller</surname></persName>
		</author>
		<idno>133:1-133:12</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Frequency domain normal map filtering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramamoorthi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Grinspun</surname></persName>
		</author>
		<idno>28:1-28:12</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Hierarchical splatting of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="433" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Light Transport on Path-Space Manifolds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Jakob</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
		<respStmt>
			<orgName>Cornell University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Illustrating Magnetic Field Lines using a Discrete Particle Model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of VMV</title>
		<meeting>of VMV</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="387" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">RBF volume ray casting on multicore and manycore cpus</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Knoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Wald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Navr√°til</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bowen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Reda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Papka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Gaither</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="71" to="80" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">cellVIEW: a Tool for Illustrative and Multi-Scale Rendering of Large Biomolecular Datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Le</forename><surname>Muzic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Autin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parulek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of VCBM 2015</title>
		<meeting>of VCBM 2015</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="61" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Interactive rendering of materials and biological structures on atomic and nanoscopic scale</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lindow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Baum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1325" to="1334" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">ls1 mardyn: The massively parallel molecular dynamics code for large systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Niethammer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bernreuther</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Buchholz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Eckhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Heinecke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Werth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-J</forename><surname>Bungartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">W</forename><surname>Glass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hasse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vrabec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Horsch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Chemical Theory and Computation</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="4455" to="4464" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Lean mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Olano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Baker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Symposium on Interactive 3D Graphics and Games</title>
		<meeting>of Symposium on Interactive 3D Graphics and Games</meeting>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="181" to="188" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Antialiased ray tracing by adaptive progressive refinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Painter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sloan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGGRAPH</title>
		<meeting>of ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="281" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Hardware-accelerated glyphs for mono-and dipoles in molecular dynamics visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurovis</title>
		<meeting>of Eurovis</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="177" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Large-Scale Parallel Visualization of Particle-Based Simulations using Point Sprites and Level-Of-Detail</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rizzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hereld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Insley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Papka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Uram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Vishwanath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of EGPGV</title>
		<meeting>of EGPGV</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Sparse PDF volumes for consistent multi-resolution volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sicat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kr√ºger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>M√∂ller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hadwiger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2417" to="2426" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Gpu-based ray-casting of quadratic surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sigg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weyrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Point-Based Graphics</title>
		<meeting>of Point-Based Graphics</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="59" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Filtering and rendering of resolution-dependent reflectance models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Quan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Guo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="412" to="425" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Visualization by proxy: A novel framework for deferred interaction with volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tikhonova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Correa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1551" to="1559" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Mipmapping normal maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Toksvig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Graphics Tools</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="65" to="71" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Robust Monte Carlo Methods for Light Transport Simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Veach</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
		<respStmt>
			<orgName>Stanford University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">OSPRay-A CPU Ray Tracing Framework for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Wald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Amstutz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Brownlee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Knoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jeffers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>G√ºnther</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Navr√°til</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="931" to="940" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">CPU Ray Tracing Large Particle Data with Balanced P-k-d Trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Wald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Knoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">P</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Usher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Papka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Scientific Visualization</title>
		<meeting>of IEEE Scientific Visualization</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Microfacet models for refraction through rough surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Walter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Marschner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Torrance</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurographics Symposium on Rendering</title>
		<meeting>of Eurographics Symposium on Rendering</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="195" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Pyramidal parametrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of ACM SIGGRAPH</title>
		<meeting>of ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1983" />
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">In-situ sampling of a large-scale particle simulation for interactive visualization and analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Woodring</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ahrens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Figg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wendelberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Habib</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Heitmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurovis</title>
		<meeting>of Eurovis</meeting>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="1151" to="1160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Rendering glints on high-resolution normal-mapped specular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L.-Q</forename><surname>Yan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ha≈°an</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Jakob</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lawrence</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marschner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramamoorthi</surname></persName>
		</author>
		<idno>116:1-116:9</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">In situ pathtube visualization with explorable images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of EGPGV 2013</title>
		<meeting>of EGPGV 2013</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Improving the quality of multiresolution volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Younesy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>M√∂ller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurovis</title>
		<meeting>of Eurovis</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="251" to="258" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
