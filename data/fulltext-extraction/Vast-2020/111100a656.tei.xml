<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Githru: Visual Analytics for Understanding Software Development History Through Git Metadata Analysis</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Youngtaek</forename><surname>Kim</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaeyoung</forename><surname>Kim</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hyeon</forename><surname>Jeon</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Young-Ho</forename><surname>Kim</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hyunjoo</forename><surname>Song</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bohyoung</forename><surname>Kim</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jinwook</forename><surname>Seo</surname></persName>
						</author>
						<title level="a" type="main">Githru: Visual Analytics for Understanding Software Development History Through Git Metadata Analysis</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:20+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>git</term>
					<term>history</term>
					<term>exploration</term>
					<term>overview</term>
					<term>repository</term>
					<term>visualization</term>
					<term>cluster</term>
					<term>DAG</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Githru system. (a) The Global Temporal Filter shows commit trends by number of commits and CLOC (changed lines of code). (b) The Clustering Step controls the granularity of clustering. (c) The stem graph visualizes a cluster information of each commit at a single glance. (d) The Grouped Summary View provides a rough summary of the selected clusters. (e) A file icicle tree allows users to interactively observe the modified file hierarchy. (f) The commit list shows all the commits in a selected cluster. (g) Comparison View enables a comparison between selected groups.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>• Youngtaek <ref type="bibr">Kim, Jaeyoung Kim, and</ref>  author, message, and date. It also maintains information about branches (or merges) created to diverge from (or converge to) the main line of development. Thus, the metadata of the Git repository is known to provide rich information for understanding the overall context of development history without delving directly into the source code <ref type="bibr" target="#b47">[53]</ref>.</p><p>As new developers, managers, and testers of a project are generally not well acquainted with the source code, such metadata could alleviate the burden of comprehending the code themselves. However, as the size of a project grows in terms of the number of commits, branches, authors, or files, going through a long list of commit logs becomes challenging. Several Git clients show the graphical representation of a repository as a directed acyclic graph (DAG), where each node is a commit and each edge represents the parent-child relationship between commits <ref type="bibr" target="#b21">[27]</ref>. While such visualizations can alleviate the scalability issue to some extent, most Git clients focus on improving the usability of Git commands rather than on helping users understand the development history. Some prior studies have provided a graphical overview and supported visual exploration of development history, but still lack visual analytics functions that provide all the metadata while preserving the branch and merge information of the Git graph. Moreover, the visualization scalability issue with large DAGs remains unresolved in such studies.</p><p>In this paper, we introduce Githru, an interactive visual analytics system for Git metadata, to help users explore and understand the context of development history. We propose novel analytic techniques to deal with the complexity and scalability issues of large sets of Git metadata. We start by identifying and removing the redundant nodes in the DAG that come from a conventional git merge operation. Such a reconstruction simplifies the topology of a Git commit graph, which greatly reduces the cognitive load of branch traversal. We also introduced additional techniques to simplify the topology by grouping similar nodes according to user-defined criteria. Lastly, based on the Git commit graph abstraction techniques, Githru provides an interactive summary view to help users gain an overview of the development history and a comparison view to enable users to compare different clusters of interest. We followed an iterative design process to design Githru, closely collaborating with developers and managers at Samsung Electronics to formulate requirements; created and refined design prototypes; and evaluated the system. To assess the efficacy and usability of Githru, we performed case studies with an in-house repository dataset, followed by interviews with domain experts. We also conducted a controlled user study with 12 developers comparing Githru to a combination of existing widely used tools: GitHub and git log.</p><p>The major contributions of this paper are as follows:</p><p>• We define, through literature reviews and expert interviews, a list of tasks to analyze large sets of Git metadata. • We propose a set of new analytics techniques to abstract large and complex Git commit graphs. • We present novel visualization designs for the interactive exploration of large-scale Git metadata. • We evaluate Githru with domain experts using real-world, inhouse datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head><p>In this section, we introduce the background of Git metadata. We also identify target users to analyze development history through preliminary interviews.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Git Metadata</head><p>Git metadata are a collection of content for each commit, such as its unique ID, author, message, date, and information on the set of changed files. A commit is connected to its parent commits, and thus the metadata can be represented as a DAG, where each node is a commit and each edge is the parental relationship between the commits <ref type="bibr" target="#b10">[16]</ref>. The topology of a DAG encodes the history of the activity of commits. Hence, users need to explore a DAG to understand the overall development history. The complexity of a DAG with Git metadata mainly depends on the edges created through branching in Git. Branching refers to diverging from the main line of development and continuing to work without affecting that main line. In Git, a branch is simply a lightweight movable pointer to a commit, and therefore, branches are cheap to create and destroy <ref type="bibr" target="#b16">[22]</ref>. Due to this low cost, Git encourages a workflow that branches and merges often.</p><p>At the same time as an unintended side effect of decentralization, Git can also create implicit branches as illustrated in <ref type="figure" target="#fig_0">Fig. 2</ref>  <ref type="bibr" target="#b10">[16,</ref><ref type="bibr" target="#b40">46]</ref>. Suppose that a developer pulled the latest snapshot from the remote repository, added several commits to the local repository (repo #1), and pushed them back. If another developer (with repo #2) then tried to push additional commits to the remote repository, the synchronization with the remote repository could introduce an implicit branch.</p><p>Due to the frequent branching and unintended implicit branches, the number of branches increases drastically as the project grows. Therefore, the complexity of the DAG increases, which complicates the interpretation of the graph to understand the overall development history. Such high complexity also aggravates the cognitive load of traversing parent commits when identifying which commits are finally merged into the main line.</p><p>If a Git repository is hosted on GitHub, pull requests (PRs) can provide additional information. Pull requests are proposed changes to a repository. Submitted PRs by users are accepted or rejected by the repository's maintainers <ref type="bibr" target="#b37">[43]</ref>. A PR operates identically to an explicit branch in the graph but provides additional information, such as a message written by the creator of the PR, the state (open, closed, or merged), and the commit into which the PR is merged.</p><p>In this study, we extract the metadata from the results of the git log command and augment them with additional information. First, we add a commit type that represents the characteristics of a commit in accordance with developers' needs as derived from the preliminary interviews. A commit type is classified using Hattori's method <ref type="bibr" target="#b32">[38]</ref> as a baseline. Next, we add the number of added and deleted lines of code (LOCs) per each changed file provided by git log with the --numstat option <ref type="bibr" target="#b0">[1]</ref>. We also use the information in PRs from the GitHub data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Target Users</head><p>The preliminary interviews were conducted in a semi-structured form to ascertain the practical necessity of a metadata analysis and to identify the types of users who need to analyze development history. The interviewees were five software engineers: three developers (D1-3) and two project leaders (L1-2) who perform both management and development. Their development experience ranged from 5 to 16 years (mean, 10.2 years), and they had worked in engineering, infrastructure, and AI.</p><p>All interviewees confirmed the necessity of understanding the development history. As for metadata analysis, L1 and L3 said that they did not try analysis due to a lack of time. The others said that they felt performing analyses with the existing tools, such as git log in a console, Sourcetree <ref type="bibr" target="#b3">[8]</ref>, or the GitHub website, was inconvenient. Normally they navigated a long list of commits to obtain an overview of the commit history and summarized what they wanted to focus on. They sometimes wrote scripts to answer questions.</p><p>During the interviews, we discussed the types of target users who need to analyze development history in practical terms. Developers who are contributing to the source code of ongoing projects feel less of a need to explore and gain an overview of historical data with visual tools: They are already acquainted with the context, so they know what or where the answer is. Hence, in this study, we focus on new developers, managers, and testers who are not yet familiar with the source codes as the target users.</p><p>A new developer who has just joined a new team needs to fully understand the previous works and source codes of the latest snapshot. The information can be obtained from the previous developer, project documents, or the infrastructure system. When such necessary information is missing, a Git metadata analysis can answer questions such as, Which component was John mainly responsible for recently? Who were John's co-workers? and How much has he been working since the last quarter? <ref type="bibr" target="#b26">[32]</ref>.</p><p>Similarly, managers and testers also need to deal with historical information. Managers need an overview of individual developers' work. They often explore areas where many changes have occurred and figures out what happened at that point. Testers also need to understand the development history to write test cases <ref type="bibr" target="#b60">[66]</ref> or perform bug localization <ref type="bibr" target="#b57">[63]</ref> and triage <ref type="bibr" target="#b35">[41]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RELATED WORK</head><p>The design of Githru is inspired by numerous prior studies. In this section, we introduce the core research areas related to Githru: software evolution visualization, Git metadata analysis, and historical questions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Software Evolution Visualization</head><p>Stephan Diehl categorized software visualization into three aspects: structure, behavior, and evolution <ref type="bibr" target="#b18">[24]</ref>. As Githru mainly focuses on visualizing development history, it can be classified as evolution. We first investigate the existing tools that visualize software evolution <ref type="bibr">[10-12, 20, 28, 30, 44, 49, 55, 56, 58, 67, 68, 70, 73]</ref>. SeeSoft <ref type="bibr" target="#b19">[25]</ref> offers a line-oriented visualization of source code, mapping the software attributes to different line colors. Through this mapping, developers can see who worked on which specific lines of code. Similarly, Augur <ref type="bibr" target="#b27">[33]</ref> and Advizor <ref type="bibr" target="#b20">[26]</ref> visualize developer-related data. These systems provide a quantitative way to analyze software.</p><p>GitHub <ref type="bibr" target="#b1">[2]</ref> features various built-in visualizations to support exploration in GitHub Insights. However, they are still in the early stages and unable to effectively support the analytical tasks users would like to perform. For example, GitHub provides a graph showing LOC changes over time but does not support chronological filtering. Also, users cannot look at the commit graphs at a glance and must scroll significantly. RepoVis <ref type="bibr" target="#b23">[29]</ref> provides a comprehensive visual overview and full-text search for Git repositories, which enables a rapid overview of the repository. However, it shows only a snapshot of a revision, not the overall history. ConceptCloud <ref type="bibr" target="#b29">[35]</ref> is a web application that automatically indexes Git and SVN repositories and summarizes them through interactive tag clouds. Another novel approach to software evolution visualization is Code Swarm <ref type="bibr" target="#b48">[54]</ref>, which applies animation and organic information visualization techniques to create aesthetic visualizations of software projects for casual viewers.</p><p>To help understand Git DAGs, git log <ref type="bibr" target="#b0">[1]</ref> provides a graphical representation in a console environment. Many Git GUI clients, such as Sourcetree <ref type="bibr" target="#b3">[8]</ref>, GitKraken <ref type="bibr" target="#b2">[4]</ref>  <ref type="bibr" target="#b66">[72]</ref>, a web-based tool that uses the conversion of a DAG to merge trees. Linvis also proposed visualization to represent the hierarchy of merged trees. Gitgraph <ref type="bibr" target="#b69">[75]</ref> constructs a knowledge graph that users can interactively explore and that helps developers comprehend software repositories. However, when a DAG is reconstructed, the original topological information is lost or distorted. In contrast, Githru preserves the chronological sequence of commits with reduced complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Git Metadata Analysis</head><p>Git repository data have been actively studied to understand various facets of development history. Bird and Kalliamvakou provided a set of recommendations for researchers on how to approach Git and GitHub data <ref type="bibr" target="#b10">[16,</ref><ref type="bibr" target="#b37">43]</ref>. Stevens <ref type="bibr" target="#b59">[65]</ref> presented the QWALKEKO metaprogramming library, which enables querying the history of versioned software projects in a declarative manner. <ref type="bibr">Barik</ref>  <ref type="bibr" target="#b7">[13]</ref> proposed Commit Bubbles, which supports developers in constructing commit histories with their coding workflows. However, Commit Bubbles is merely conceptual and has not been implemented. Rozenberg introduced Re-poGram <ref type="bibr" target="#b51">[57]</ref>, a tool to support comparing and contrasting tasks in software projects over time.</p><p>Branching is one of the main features of Git. Various tools have been developed to support the analysis of its topology. Lee et al. <ref type="bibr" target="#b44">[50]</ref> proposed a tool that extracts branch data from Git repositories and abstracts each commit and branch into the workflow. Biazzini et al. <ref type="bibr" target="#b9">[15]</ref> defined Metagraph, a data structure representing topologically relevant commits. Based on the definition, they analyzed the topological characteristics of Git repositories and identified patterns recurring in multiple repositories.</p><p>Githru also covers historical aspects of development using Git metadata; however, it focuses on the main branch and reduces complexity of visualization by simplifying other branches to resolve scalability issues. Section 5 provides a detailed explanation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Historical Questions</head><p>There have been many studies on the questions that should be answered to augment the understanding of development history. After interviewing 203 participants, Begel and Zimmermann <ref type="bibr" target="#b8">[14]</ref> presented a ranked list of 145 questions that software engineers want data scientists to answer. Fritz and Murphy <ref type="bibr" target="#b26">[32]</ref> and Buse et al. <ref type="bibr" target="#b15">[21]</ref> also identified questions that developers have about projects. LaToza et al. <ref type="bibr" target="#b42">[48]</ref> organized 94 distinct questions about code that are hard to answer. All three studies were conducted by interviewing professional developers. Silito et al. <ref type="bibr" target="#b56">[62]</ref> categorized 44 different kinds of questions about the information programmers need and how they discover it. Kubelka et al. <ref type="bibr" target="#b41">[47]</ref> conducted software evolution sessions in Live Programming and assigned questions to each session, based on Silito et al.'s study. Codoban et al. <ref type="bibr" target="#b17">[23]</ref> performed an empirical study about the motivations developers have for examining software history, the strategies they use, and the challenges they encounter.</p><p>Research also exists about how developers analyze their code and repositories. Sadowski et al. <ref type="bibr" target="#b53">[59]</ref> analyzed how developers search for code and provided insights into multiple aspects, including what developers are doing and trying to learn when performing a search. Tao et al. <ref type="bibr" target="#b60">[66]</ref> explored the information engineers' need to understand changes and their requirements for the corresponding tool. Safwan and Servant <ref type="bibr" target="#b54">[60]</ref> discovered how developers decompose the rationale for code commits in the context of software maintenance. Interviewing 20 software developers allowed these authors to understand their experience.</p><p>The design of Githru is based on the analytics tasks extracted and organized from previous studies. Section 4.1 describes these in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">REQUIREMENT ANALYSIS</head><p>We extracted analytics questions from our literature review and validated them through interviews with five experts. We then organized them into three analytics tasks and formulated requirements accordingly based on the tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Task Abstraction</head><p>To construct analytics tasks, we investigated 1,479 papers from software engineering conferences, including ICSE (660), FSE (574), and ICSME (245), by querying "question AND (history OR evolution)" for papers since 2010. We selected four papers <ref type="bibr" target="#b26">[32,</ref><ref type="bibr" target="#b53">59,</ref><ref type="bibr" target="#b54">60,</ref><ref type="bibr" target="#b60">66]</ref> suggesting at least five history-related questions that can be answered by Git metadata without analyzing source code. Two additional papers <ref type="bibr" target="#b31">[37,</ref><ref type="bibr" target="#b42">48]</ref> were included subsequently by investigating the citations of the selected papers under the same criteria. We derived nine exemplary questions by analyzing the six papers using thematic analysis <ref type="bibr" target="#b13">[19]</ref>.</p><p>To validate whether the questions reflect real-world problems, we conducted semi-structured interviews with five software engineers (two </p><formula xml:id="formula_0">Requirements R1 R2 R3 R4 Sub-items a b c a b c a b c a b c d Research ConceptCloud • • • • • • • • • • • • • GitGraph • • • • • • • • • • • • • Linvis • • • • • • • • • • • • • RepoVis • • • • • • • • • • • • • Visgi • • • • • • • • • • • • • Git client GitHub • • • • • • • • • • • • • gmaster • • • • • • • • • • • • • gitk • • • • • • • • • • • • • gitkraken • • • • • • • • • • • • • Sourcetree • • • • • • • • • • • • •</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Requirement Analysis</head><p>Based on the final four tasks, we formulated the requirements that Githru must satisfy as follows:</p><p>• R1: Provide an overview. The system should present an overview of development history where (a) the commits are grouped according to specific criteria to avoid examining each commit individually; (b) the visualization of a group encodes its size and topological position compared to others; and (c) the summary of the selected group(s) is presented interactively (T1).</p><p>• R2: Visualize a graph while preserving topology. The graph representing the abstracted data should be visualized in an interpretable form. The graph should contain abstracted topological data that include (a) the temporal sequence of each node (i.e., commit) and (b) branch information and merge relation; and (c) the graph should be navigable with minimal interactions (T2).</p><p>• R3: Support filtering by and searching for details. Depending on the user query, which can be a keyword or a temporal range, the corresponding commits should be (a) filtered in or out and (b) searched and highlighted to reduce the exploration scope. Moreover, users should be able to (c) browse the details of each commit (T3).</p><p>• R4: Support comparison. The system should facilitate comparisons (a) based on the number of commits and LOC. The magnitude can be compared according to (b) overall trends, or (c) within/between user-selections. (d) In particular, the information in the changed files should be compared while being organized according to the directory that contains the structure of the source code (T3). As discussed in Section 3, there have been various Git clients and research. Among them, we selected the ones that support visual exploratory analysis of the Git metadata for assessment. We evaluated whether they meet the requirements <ref type="table" target="#tab_2">(Table 1)</ref>. GitHub fulfills the requirements mostly due to GitHub Insights, the tool with which in-field developers are most familiar. Hence, we selected GitHub for comparison to Githru in the user study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE GITHRU SYSTEM</head><p>We propose Githru, a Git repository visual analysis system, for users who are not acquainted with the underlying source code of a project. This section describes data reconstruction techniques for resolving the visual complexity of the huge sets of Git metadata and novel visualization techniques for exploratory analysis of the metadata.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Git Graph Data Abstraction</head><p>The DAG representation of a Git repository suffers not only from a large number of nodes (i.e., commits) but also from diverging and converging links at implicit and explicit branches <ref type="figure" target="#fig_1">(Fig. 3)</ref>. As the number of commits and branches inevitably increases over time in an ongoing project, scalability is crucial for DAG-based visual analysis. As a remedy, we introduce graph reorganizing techniques tailored to the Git metadata, which could interactively reduce the number of nodes and links during analysis (R2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Transforming Branches to Stems</head><p>The top straight line in the DAG of a Git repository generally represents the master branch ( <ref type="figure" target="#fig_2">Fig. 4a</ref>). However, an overwhelming number of branches and the connected links between them could hinder tracking down the origin of changes even for commits in the master branch. To alleviate this problem, Githru removes the connected links between the branches in a DAG to form a group of stems (R1). A stem is a list of ancestor nodes for a specific commit that includes only one of the parents when there are multiple preceding nodes. It is similar to the first-parent option of the git log command <ref type="bibr" target="#b0">[1]</ref>, which removes other parent nodes from a branch. However, git log focuses only on a single branch while neglecting pruned nodes and their parents. Conversely, Githru applies the approach to every branch to provide an overview of the overall history of development.</p><p>The process starts with building the main stem from the master branch, into which commits finally merge. Pruning a branch could affect the topology of other branches that exclusively occupy common ancestor nodes. Thus, we begin the process from the master branch to preserve the order of events in the mainline of development. The rest of the branches are pruned afterward by retaining only the first parent commits in each branch. Then, we remove links to non-firstparent nodes in adjacent stems to reduce visual complexity. Eventually, only one path remains for every stem. Due to the simple topology and reduced number of edges, the result provides a brief overview of branches and enables simple traversal without any backtracking to multiple parents.</p><p>The downside of converting to a stem structure is leaving extra implicit stems that have no branch information, as shown in <ref type="figure" target="#fig_2">Fig. 4b</ref>. Also, the process removes links between stems that hold branching and merging information. However, in the case of understanding the context of development history, the experts in requirement analysis confirmed that they were interested in finding the contents of merged commits rather than the underlying links between branches. We combat these disadvantages through a Context-Preserving Squash Merge, described in the following section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Context-Preserving Squash Merge (CSM)</head><p>The preliminary interviews with domain experts indicated that tracking back from a merge commit to its parents is laborious and tedious in a DAG with many branches. Transforming the DAG into a stem structure could unravel the complexity with a straightforward topology, but it does not reduce the number of stems. Moreover, it hides trails to the relevant stems and leaves a merge commit only for reference. However, the content of a merge commit is insufficient if there is only a short sentence written by its committer or an auto-generated message <ref type="bibr" target="#b45">[51]</ref>.</p><p>As a resolution, we propose a Context-preserving Squash Merge (CSM). CSM fuses relevant commits (i.e., second parent commits from the merged branch <ref type="bibr" target="#b16">[22]</ref>) into a single node for simplicity ( <ref type="figure" target="#fig_2">Fig. 4c</ref>) and fetches messages from the stems to preserve the merge context (R2). For each merge commit on the main stem (i.e., CSM-base), CSM traverses every parent commit (i.e., the CSM-source) on the other stems. When a commit is a parent of multiple CSM-bases, we select the leftmost commit as a base to avoid redundant merges. CSM gathers contextual information from every CSM-source (e.g., author, commit type, and log message) and appends it to the end of the corresponding field in the CSM-base. For instance, the authors of CSM-sources become coauthors of the corresponding CSM-base. However, the list of changed files remains the same since CSM-base encompasses the changes from CSM-sources.</p><p>In case of merged PRs, we also include additional information (e.g., pull request number, message, and body) from the PRs to comply with the comments from the preliminary interviews. After the CSM is applied to the main stem, it is iteratively applied to the other stems, starting with the one with the most recent commit. We determine the processing order to preserve the topology of critical stems first, following the valuation criteria in a prior work <ref type="bibr" target="#b65">[71]</ref>.</p><p>The CSM can drastically reduce the number of stems and commits on the screen by removing implicit stems <ref type="figure" target="#fig_2">(Fig. 4d)</ref>, stems corresponding to merged branches, or merged PRs (R1). LinVis <ref type="bibr" target="#b66">[72]</ref> proposed a similar approach that grouped parents into a hierarchical structure and presented the structure in Merge-Tree. However, this prior work focused mainly on analyzing the details of CSM-sources (i.e., parent commits) in the master branch and presenting a visual representation of the hierarchy. In contrast, Githru provides an overview of the entire repository by applying the CSM to every stem. Furthermore, users can decide whether to apply a CSM or not, depending on their task. Users can also, if necessary, explicitly visualize the edges between the CSM-base and CSM-sources.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Commit Clustering</head><p>In another effort to improve scalability, we adopt a clustering technique to group neighboring commits in each stem ( <ref type="figure" target="#fig_2">Fig. 4e; R1</ref>). The scope of the grouping is confined to similar commits in each stem to preserve the temporal sequence and topology. We exploit the Simple Additive Weighting (SAW) model in calculating similarity since this model is intuitive for users to understand and is known to serve exploration well <ref type="bibr" target="#b63">[69,</ref><ref type="bibr" target="#b68">74]</ref>. To measure similarity, we choose five criteria from the commit metadata (i.e., author, commit date, commit type, file, and message). Jaccard similarity is used for the author, commit type, and file. Cosine similarity is used with TF-IDF weights for the message, and logarithmic growth from 0 to 1 is used for the commit date. Users can interactively change the granularity clusters by adjusting the similarity threshold. We also prepare options to determine whether to separate commits from different release versions <ref type="bibr">[7]</ref>. This enables separate analyses of individual releases, which was found to be significant in the requirement analysis (R3).</p><p>If there is still an overwhelming number of nodes even after the above techniques are applied, users can additionally apply Non-Conflict Commits Clustering, which can group non-neighbor commits (R1). For instance, suppose that a cluster A is not adjacent to a cluster C, but their similarity is above the threshold (being sufficiently similar). If the cluster A has no commonly modified files with cluster B (an inbetween cluster of A and C), changing the order of B and C could further simplify the underlying structure by grouping the clusters A and C as illustrated in <ref type="figure">Fig. 5</ref>. However, we make this process optional because it considers only the conflict coming from modified files and not the contextual conflict. <ref type="figure">Fig. 5</ref>. Clustering non-conflict commits simplifies the stem graph by grouping similar non-neighbor commits. <ref type="figure">Fig. 6</ref>. Users can (a) apply the CSM or (b) not. Without the CSM, the clusters containing CSM-bases will be split due to the blocks of newly appeared CSM-sources, as depicted in (b).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Stem Graph Visualization</head><p>Representing a cluster (i.e., commits grouped by similarity) as a single node saves screen space by reducing the number of nodes. However, it might also destroy the temporal order between the commits that belong to different clusters in different stems. Thus, we introduce a block in the cluster visualization as follows: 1. A two-dimensional grid layout is drawn in which columns and rows are mapped to time slots and stems, respectively. 2. Each commit is filled in a cell in temporal order. 3. Adjacent commits are grouped into a block until the block overlaps with any commit in other stems. 4. The block is squeezed into a single column <ref type="figure" target="#fig_2">(Fig. 4f)</ref>. 5. A vertically centered box is drawn for each block, where the height of the box corresponds to the number of commits in the block. 6. An outline is drawn to enclose the blocks in a cluster, along with the number of commits included in the bottom-right corner <ref type="figure" target="#fig_2">(Fig. 4g</ref>) when the rendered cluster has sufficient width. We emphasize each block using a black border line when it has a CSM-base and the CSM is enabled <ref type="figure" target="#fig_2">(Fig. 4g)</ref>; the line turns dashed gray if the CSM is disabled <ref type="figure">(Fig. 6</ref>). Regarding visual clutter of borders, adjacent clusters with identical pale colors were hardly distinguishable without any additional visual cues. This issue was raised during the interviews with domain experts, and we eventually included borders. The visibility of the edges between the CSM-base and CSM-sources also changes accordingly. This allows us to reduce the number of visual elements in the horizontal dimension without losing the temporal order of commits across stems (R1, R2).</p><p>We also work on optimizing the vertical space by filling the gaps in the grid. In the aforementioned grid layout, each row maps to each stem. The main stem comes first, on the top, and the other stems follow according to the date of the last commit in descending order. While such a layout is intuitive, the height of the grid increases as the number of stems grows. To alleviate this problem, we relocate stems that do not overlap with each other into a single row <ref type="figure" target="#fig_2">(Fig. 4h)</ref>.</p><p>However, such relocation can cause difficulty distinguishing between individual stems in the same row. Thus, we introduce various visual aids. We add a thin strip under each stem that not only helps differentiate the stems but also allows entire clusters in the stem to be selected at once <ref type="figure" target="#fig_2">(Fig. 4i)</ref>. We then move the blocks inside each stem to the vertical center to avoid interference with short blocks. We also add an edge between non-adjacent clusters in a stem to indicate they belong to the same stem. And if a block includes a commit with a release tag, we draw a red dashed line on the right of the block with the version number on top. The final stem abstraction is shown in <ref type="figure">Fig. 1c</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Cluster Visualization</head><p>Following Shneiderman's mantra <ref type="bibr" target="#b55">[61]</ref>, we prepare two levels of detail for cluster views. The views are designed to support commit-level analytical tasks, which were demanded in the interview. Users can start by selecting one or more clusters in the stem graph to focus on specific details. However, the selected clusters can have a varying number of commits (ranging from a single commit to all commits in the repository), and each commit contains intricate information (e.g., author, keywords, and list of modified files) to visualize in a single view. Thus, we present underlying details in a stepwise manner with two coordinated views.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1">Grouped Summary View</head><p>Grouped Summary View shows a brief overview of the selected clusters as shown in <ref type="figure">Fig. 1d (R1)</ref>. The columns in the view are mapped to individual clusters and the width of each column is proportional to the number of commits. This view enables a visual comparison of the relative size among selected clusters, which was frequently cited as a needed task in the requirement analysis (R4). Each column has a group of horizontal bars that briefly show the top two or three values from the clustering criteria (i.e., author, commit types, modified files, and keywords). In addition, there are bars for the list of modified directories and files to offer more context. Furthermore, the length of each bar is proportional to the number of relevant commits that users could visually compare. For instance, users could find the author who has contributed the most to the cluster by finding the longest bar.</p><p>Enabling the Summary by CLOC option changes the width of each column and the length of the file criteria bar proportionally to the number of CLOCs (changed LOCs, added LOCs + deleted LOCs).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2">Cluster Detail View</head><p>When users select a cluster in Grouped Summary View, Cluster Detail View appears at the bottom. This view provides commit-level details along with a visual summary of the affected files and directories on the left (R1). A list of raw commit metadata is presented in a tabular form by date in ascending order <ref type="figure">(Fig. 1f</ref>). In the case of a CSM commit, it shows only the CSM-base at first, but users can expand the row to also see the relevant CSM-source commits. On the left of the table, we prepared a file icicle tree <ref type="bibr" target="#b33">[39]</ref>  <ref type="figure">(Fig. 1e</ref>). Since files and directories are organized in a hierarchy, we consider a number of space-filling approaches to maximize space utilization <ref type="bibr" target="#b36">[42]</ref>. Among Tree-Map <ref type="bibr" target="#b36">[42]</ref>, SunBurst <ref type="bibr" target="#b58">[64]</ref>, and the icicle tree, we finally choose the last to comply with the task requirements. Tree-Map shows limitations in the structural interpretation task <ref type="bibr" target="#b12">[18]</ref> and SunBurst is inadequate to embed long file names because of the radial coordinate. On the other hand, the icicle tree explicitly shows a structural hierarchy in a Cartesian coordinate system well suited for displaying a string (e.g., file-name) horizontally <ref type="bibr" target="#b33">[39]</ref>. Also, as the depth of the modified file structure can vary, we enable users to zoom in or out with a mouse click on the icicle tree (R3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Controlling the Analysis Scope</head><p>We provide additional visual components to facilitate the in-depth analysis by controlling its scope: Cluster Parameters, Filter, and Search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.1">Cluster Parameters</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>One can control the granularity of clustering by setting a Clustering</head><p>Step <ref type="figure">(Fig. 1b)</ref> encoded as a vertical slider. The desired level of abstraction can be set by adjusting the maximum difference value (threshold) to be clustered. For instance, if one moves up the slider, the clustering becomes granular. Thus, one can analyze fine-grained clusters by moving up the slider. For the same reason, we also provided a way to set Preference Weights for each similarity criterion. For instance, if one wants to cluster only commits with similar commit types, one can simply set the weight of the commit type to 1 and the rest to 0. Such a capability reveals the underlying policy of clustering, helping users to understand the context (R2) and find the information they want (R3) by allowing them to set appropriate clustering schemes for their task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4.2">Filter and Search</head><p>Global Temporal Filter In many tasks, understanding what happened over a period of time is important. For example, a manager may wonder what happened over the previous week or month. Therefore, we provided a Global Temporal Filter with ways to filter for a certain time period: Brushing <ref type="figure">(Fig. 1a)</ref> and a Select Box. Githru provides two horizontal bars that can be brushed. The bar at the top includes two area charts aligned vertically, which represent the number of commits and LOCs by date respectively. The bar at the bottom is a horizontal list of boxes that encodes each commit ordered by date. Both brushes allow for filtering in a specific range and they are synchronized. However, the interval of the commits is non-uniform, unlike the dates in the above chart, so we draw a line connecting the release commit to the bin, pointing to the release date as a guideline. This can alleviate the confusion that occurs when the range of the top brushed area differs from that of the bottom brushed area. This method allows users to effectively select a specific period of dates or commits (R3). Users can also select a specific date or release tag using the Select Box. This solves the problem that occurs in brushing when the user has to choose an exact position, which is difficult to select.</p><p>Keyword Filter Users often have to work on tasks related to certain elements. For example, if a newcomer replaces Alice in a project, the newcomer may want to see only what Alice did. For such cases, Githru offers the Keyword Filter, which can exclude or include the commits related to specific keywords. We provide keyword-filtering for all similarity criteria except for commit date, which is filtered by the Global Temporal Filter.</p><p>Stem Type Filter Each stem type in Githru has various characteristics, such as the existence of a name, its relation to PRs, and its PR status. Users may want to focus on a particular stem type depending on their task. For instance, there is no need to see merged or closed branches when looking for recently opened PRs. Thus, we offered options to show or hide each stem type (R3).</p><p>Search and Highlight If one searches for a certain keyword, Githru scans branch names, tags, commit messages, authors, commit IDs, and modified files. Then, it highlights every block that matches. Multiple keyword highlighting is also allowed (R3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Comparison View</head><p>Comparison View provides a detailed comparison of clusters or cluster sets (R4) based on similarity criteria and stem topology. It is designed following the details-on-detail strategy: a rough comparison in Grouped Summary View, and a detailed comparison in Comparison View. We used keywords instead of raw messages for comparison since it was more difficult to use unstructured strings than keywords when visualizing the differences and commonalities between clusters. We used Selection Cards to compare stem information and date and used a Diff View for the other criteria.</p><p>Capture Selection Users can select the clusters in Grouped Summary View as a selection to be compared. To enhance reusability, we provided selection capturing to select once and use it repeatedly.</p><p>Selection Cards Selection Cards represent corresponding selections. The stem information, such as a branch name or PR number, is prominently presented on each card, as they directly represent the characteristics of the cluster (R1). For the same reason, the color of the card is also derived from the color of the stem where the selected cluster(s) is located.</p><p>Diff View Diff View shows a two-way comparison between selections for authors, commit types, files, and keywords ( <ref type="figure">Fig. 1g)</ref>. Since comparison becomes difficult as the number of objects increases <ref type="bibr" target="#b28">[34]</ref> and Grouped Summary View already provides a rough overview of a multi-way comparison, a two-way comparison fits the details-ondemand strategy (R3, R4).</p><p>Diff View assigns different colors to three sets: the intersection, the difference of A from B, and the difference of B from A to perform a two-way comparison more effectively. Moreover, the view provides the option to hide or show elements in each set so that users can focus on a particular set(s). For instance, if one wants to see only the intersection between two clusters, one needs to deselect only the parts representing the difference.</p><p>As for the author and commit type criteria, we displayed all values: the number of developers for a repository is typically below ten due to the internal guidance gathered during prior interviews. Hence, the top ten elements for others are represented. Furthermore, to ensure consistency with Grouped Summary View and to offer more information to users, we provide an option to select between number of commits (commit #) and CLOC for comparison. Diff View is composed of three parts as follows:</p><p>• Authors &amp; Commit type: Display a stacked bar chart representing each cluster. Each box represents the value (CLOC or commit #) of the corresponding author. • Files: Present individual bar charts for two clusters while showing the top ten modified (CLOC or commit #) files in each cluster. The bar size encodes {value / total value (of cluster)} where value is CLOC or commit #, depending on the selected option. • Keywords: Visualize the top 20 words ranked by TF-IDF value as a word cloud. As the statistical overview of the word cloud is achieved by positively correlating the font size <ref type="bibr" target="#b34">[40]</ref>, we set the size of the words in the word cloud at a minmax normalized TF-IDF value. Thus, the user can perceive the importance of each word.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">System Architecture and Implementation</head><p>The Githru system consists of two modules -pre-processing and visualization. The former module crawls and extracts metadata (i.e., list of commits and PRs) from the Git repository using the GitHub API in Python. It extracts keywords from each commit message and removes noises (e.g., stop words, enumeration symbols) using the Natural Language Toolkit Library <ref type="bibr" target="#b11">[17]</ref>. It also calculates the TF-IDF weight of keywords and the similarity between commits in advance for faster performance at runtime. The latter module shows an interactive visualization of the extracted data as a single-page application in JavaScript using D3.js and the React library. The left pane consists of the stem graph, detailed views and related control panels, and the right pane shows the Comparison View. It is best suited for full-screen mode in FHD (1920X1080) resolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EVALUATION</head><p>We consulted the infrastructure team at Samsung to find well-managed Git repositories, which staff maintained actively for a commercial product. They recommended the A-project in-house repository, for which team members had committed actively, used release tags properly, and wrote well-organized messages. As another dataset, we selected the public GitHub repository realm-java, which satisfies the same criteria.</p><p>We conducted a qualitative study as well as a quantitative study with the datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Qualitative Study</head><p>To assess the efficacy and usability of Githru, we performed case studies with the A-project and the realm-java GitHub repository, followed by interviews with domain experts. This study was conducted at Samsung Research with four previous interviewees (D3, L1-3) and one manager (M1) for about an hour and a half each. They had an average of 11.4 years (ranging from 7 to 16 years) of professional software development experience. We demonstrated the Githru system and discussed its effectiveness and usability. Exploration and Overview All of the experts started to use Githru by exploring the stems or clusters and by looking into their summaries in Grouped Summary View. Then they used the Global Temporal Filter to focus on different time periods. They also interactively adjusted the clustering parameters to find suitable granularity, which barely changed once fixed. All of them were especially interested in summaries about the authors. They were thrilled to find who contributed the most by navigating through each cluster or stem. Then they repeatedly hovered the mouse cursor on some of the authors to check the trend of activities. When an unexpected name appeared, they checked the list of commits in Cluster Detail View and explored the file icicle tree to see which modules the author worked on <ref type="figure" target="#fig_3">(Fig. 7d</ref>). D3 and L3 were satisfied with the commit type classification, although we admit that the accuracy of the classification still has room for improvement. In some cases, they were surprised to find forward (feature) type commits on a certain release since the release was supposed to have fixes only. They went through the commit list in the Cluster Detail View and could find the reason easily. If a big cluster appeared, they tried to split it up by adjusting clustering parameters (i.e., moving the Clustering Step slider to a smaller value). They changed Preference Weights to focus on fewer similarity criteria, which also led to finer granularity of clusters.</p><p>In terms of aiding exploration, L2 admired a displayed graph with PR information. Actually, it had been requested by a domain expert during the preliminary interviews, as it was difficult to obtain an overview of PR information. While GitHub provides the Pulse page for this purpose, it has limited capability (i.e., only specific periods can be selected), which was the same as others in GitHub Insights. As a result, one has to visit each PR page one by one in GitHub. To the best of our knowledge, Githru is the first tool to integrate PR information in an interactive overview along with relevant metadata.</p><p>L3 noted a real-world case in which Githru might come in handy. When the company hires another company to work on a project, the project manager needs to monitor whether it is proceeding as planned. Formerly, the manager from the hired company reported periodically about the progress of individual developers. Thus, the report was not made in real-time and the management had to be passive. However, L3 complimented that Githru can help the manager track the development history interactively, even on a more detailed scale. In short, we were able to confirm the efficacy of Githru in real-world exploration tasks.</p><p>Release Participants in the case study also complimented the exploration by release. Since release serves as a milestone in the development cycle, the experts performed analysis on a release-by-release basis <ref type="figure" target="#fig_3">(Fig. 7a)</ref>. They became especially enthusiastic about being able to identify commits or PRs that were merged into a specific release. Previously, to retrieve the commits, they had to navigate the commit graph in git log, Sourcetree, or GitHub, but it was not easy to understand the topology with these tools. The graphs not only suffer from scalability issues but also from limited interactions to traverse a huge and complex network. However, in Githru, one can locate a specific release and select commits belonging to the release by simply brushing the Global Temporal Filter. Then, one can disable CSM operation and hover over the specific cluster to see corresponding commits.</p><p>L1-3 and M1 stated that this capability would be useful for writing release notes. They said existing auto-generation techniques for release notes were seldom used due to their incompleteness, so developers had to write them manually. The process demanded a laborious effort to traverse all commits reflected in the release and sometimes caused errors such as missing certain information. We actually discovered such an error in the in-house dataset using Githru; a specific release note mistakenly included information from commits that were already reflected in the previous release. Some experts suggested that it would be helpful in writing a release note draft or a weekly report if one could customize the format of the commit list.</p><p>File Information During prior interviews, managers were mainly interested in finding a hotspot. This aligns with the finding in prior work that a hotspot could indicate defects and complexity of code <ref type="bibr" target="#b30">[36,</ref><ref type="bibr" target="#b39">45,</ref><ref type="bibr" target="#b46">52]</ref>. The managers also mentioned that a tester could handle test cases related to the hotspot as suggested in prior work <ref type="bibr" target="#b60">[66]</ref>. The experts started looking for a hotspot by comparing the width of the summary boxes. Then, they selected the cluster corresponding to the widest column so they could narrow down the search space <ref type="figure" target="#fig_3">(Fig. 7b)</ref>. Finally, they went through the file icicle tree in the detailed summary <ref type="figure" target="#fig_3">(Fig. 7c)</ref>. Unexpectedly, one of the experts found that the most changed files in terms of CLOC in the project were mainly big json data files. He also found the person worked on the file by simply hovering on the node of the icicle tree. All the experts confirmed that the icicle tree was an informative and intuitive way to analyze the hotspot, which is defined as frequently changed files.</p><p>Understanding Stem Topology In the stem graph, the experts found stale stems without any recent commits that had not merged into the main stem. Unlike the other participants, L3 wanted to manage and track the stale stem. Thus, L3 tried to figure out why the stale stems remained and found several cases: freezing a specific version, maintaining documents (e.g., GitHub pages), and just left unmanaged for various reasons. L3 was inclined to use stem-based visualization since it was closely coordinated with other views, which served the context. L2, L3, and M1 were interested in the state of PR stems. They used a similar approach to what was used to find stale stems to explore the PR stems and find out why an old PR was still open.</p><p>In the prior interview, L3 had specifically requested to be able to try Githru for an upcoming B-project. However, the B-project was known to have some notorious problems: there had been no manager, few documents for reference, and little collaboration between members. L3 had tried to get an overview of its history with existing tools, but experienced difficulty exploring the context due to its overwhelming complexity. Thus, we demonstrated examination of the B-project's repository to L3 during the case study. It took only a couple of minutes to come up with the following insights: Each member was using their own branch without merging it into the master, they were working on independent modules, and a member who recently joined the project had started to merge all existing branches into the master using pull requests. L3 was able to identify the complex structure at a glance, but could not find any interesting underlying details due to the overwhelmingly complicated structure. Still, L3 was satisfied with the experience and reported that the insights were helpful for preparation.</p><p>Filtering and Searching D3 and L3 greatly appreciated the filter and search features. They started using the features without hesitation and reported them as two of the most valuable features in Githru. According to our survey results, most Git clients had a search or filter function, but these show limitations when compared to Githru. Existing tools implemented only one of the two features. Moreover, there is a trade-off between the two features: If the filter is applied, nonmatched commits are removed from the graph, and the result is shown in a compact way. However, the list loses the graph representation that includes branch information (i.e., Sourcetree, gmaster, GitHub). Conversely, searching normally emphasizes matched commits or blurs non-matched commits, so it retains the graph representation. However, the number of displayed commits is not reduced, so users must keep manipulating the next match button and cannot grasp the results at a glance (i.e., gitk, gitkraken).</p><p>Githru overcame the trade-off between filtering and searching. Not only did we implement the two features, but we also ensured that filtering in Githru does not result in losing the graph information. Moreover, clustering by similarity is still possible thanks to the simplicity of the graph from the stem structure. Therefore, the experts could do the same tasks regardless of filter and search.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Quantitative Study</head><p>To confirm Githru's effectiveness and usability, we recruited 12 developers (ten men and two women) with 3 to 15 years (average: 7.75) of development experience at Samsung and conducted a controlled user study. As we used an A-project dataset, we excluded any participant who had experience with the project. The participants were from various teams working on cloud, UX, AI, process, device driver, and other projects.</p><p>We designed three questions to ensure that Githru satisfies the requirements. Detailed descriptions of each question and their corresponding requirements are as follows:</p><p>• Hotspot: Which file has the largest CLOC (most changed) over a specific period? <ref type="figure">(R1(a, b, c)</ref>, R2(a, c), R3(a, c), R4(a, b, c, d))</p><p>• Comparison: Name the differences and commonalities of the author set who worked on the commits included in the two periods (R1(a), R2(a, c), R3(a, c), R4(a, c)).</p><p>• Topology: What is the first release that reflects a specific PR? (R1(a), R2(a, b, c), R3(a, b, c)). As mentioned in Section 4, we selected GitHub for the comparison with Githru. We also let participants use git log with GitHub, since it is the most basic tool for developers and provides the richest raw data. Furthermore, in the prior interview, many developers said they view repository information in the git log. Therefore, we designed the experiment to compare Githru against GitHub and git log.</p><p>The experiment was conducted as a within-subject study. The total experiment time was 50 to 60 minutes, which included 20 minutes of prior explanation and 5 minutes of tool demonstration and practice. We created two similar problems for each question and the subjects solved them, in turn using both Githru and GitHub/git log. For git log, we guided the usage of the command parameters to solve the problems. At this time, to prevent the order effect, half of the subjects used Githru first and the rest used GitHub/git log first. We measured the time it took for subjects to give a correct answer by notifying them when they gave a wrong answer. The results show that Githru is more effective for solving problems related to hotspot (Z = −5.76, p &lt; .001), comparison (Z = −3.78, p &lt; .01), and topology (Z = −2.69, p &lt; .05) than GitHub/git log. The results are shown in <ref type="figure" target="#fig_4">Fig. 8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Fulfillment of Requirements</head><p>We also asked subjects to check several statements about whether the requirements were satisfied. The survey was conducted using a 5-point Likert scale. The results show that the subjects agreed that Githru fulfills the requirements (average: [R1: 4.25, R2: 4.33, R3: 4.33, R4: 4.83]) and that the differences between the requirements are small enough. The subjects also agreed with the statement about usability (average: 4.17).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION</head><p>Usefulness At the most basic level, all the interviewees appreciated Githru simply because it enables them to obtain an overview; existing tools have difficulty supporting even a simple aggregation of desired data. In addition, we discussed another usage of Githru: if the development team's adoption of it in the real field. L1 said that our system is also appropriate for exploring a project's overall history even when a user does not have concrete questions, such as Where should I start to explore from? or What do I want to find (author, file)? This means Githru is also effective for exploratory data analysis (EDA) of Git history. So, if a new frequent pattern can be discovered during the EDA using Githru, the team can display it on the team dashboard to share the insight.</p><p>Also, Githru collaborates with existing tools. During analysis, it is helpful if existing tools are supported when detailed information is needed. For instance, the branch explorer of gmaster can reveal where the commit is branched or what the relationship is between non-main line branches. As for the details of a PR, GitHub is the only tool for reading conversations attached to a PR.</p><p>Limitation and Improvements The stem structure forces every operation to execute horizontally except for the CSM. As a result, we could work toward greater simplicity and better interpretation of a DAG. However, within the stem structure, we cannot perform vertical operations such as clustering two related stems and summarizing multiple stems at once.</p><p>We employed commit classification and topic analysis methods in this study. Our focus was not on the methods themselves, so lightweight baseline methods are selected as a proof-of-concept. High performance techniques, such as summarizing the messages of a cluster as short sentences or more precise classifications, may offer more efficacy to users.</p><p>During the study, we found some cases in which clustering by release did not work properly. This occurs when a release-tagged commit is not on the master branch, but only on a branch that was created solely for the release. In such a case, the commit does not merge with the master branch and the main stem will not hold the information even when the CSM is applied. Githru supports changing the name of the main branch by URL parameter when the main branch is not the master. However, if the release branch continuously changes its name, the stem reorganization does not work properly.</p><p>Future Work The extension of metadata enables extensive and indepth analysis as well. Collecting datasets from heterogeneous systems such as an issue tracking system, CI (continuous integration), and test environments, and arranging them along the Git history will give us a holistic understanding of the overall development history. Also, adding more information about source codes to metadata facilitates in-depth analysis. Currently, file information such as name, path, and CLOC is the closest to the source code among the Git metadata used in our study. Hence, adding extracted fine-grained source code change to the metadata will give detailed information about source codes (i.e., function, class, and edit operations) <ref type="bibr" target="#b25">[31]</ref>. In obtaining them, the synchronizations between heterogeneous data, scalability, and performance issues are the main obstacles to be solved.</p><p>During the case studies, the experts provided practical suggestions for supporting multiple repositories. They are running multiple repositories for one project according to modules. For instance, an end-user device can have three repositories for device, smartphone, and server. In that case, several issues occur when visualizing the metadata of three repositories at once such as three main lines, a bigger graph representation, and synchronization issues. A huge project, for example, an OS platform such as Tizen [9], runs over a thousand Git repositories, so there can be serious scalability issues when visualizing the overall development history. Also, the current Githru visualization module is running as a standalone front-end application, as mentioned before. If the number of commits greatly increases for the aforementioned reasons, it will be necessary to translate them to the server-client model. Moreover, streaming commits are not supported due to the preprocessing step in Githru. However, we would be able to handle such data by revising the step to process incrementally. We leave these issues for future works.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>We presented Githru as an interactive visual analytics system for the Git metadata to help users explore and understand the context of development history. The contribution of this paper is fourfold. First, we refined analytics tasks and system requirements for Git metadata through literature reviews and expert interviews. Second, we proposed novel techniques tailored to the metadata to abstract a large-scale Git commit graph: reorganization of a DAG to a stem structure, contextpreserving squash merge methods, and clustering reduce the number of stems and commits. Third, Githru provides a summary view for clusters to grasp the overview and a comparison view with which users can compare different clusters. Lastly, we evaluated the system with real-world datasets and domain experts from a major international IT company. Case studies with domain experts and a controlled user study with developers, comparing Githru to a combination of GitHub/git log, were conducted and confirmed the effectiveness and usability of Githru. The implementation of our system is available at github.com/githru/githru.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>An unintended implicit branch is created when synchronized with the remote repository.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Complex git DAG (Captured from GitHub [2] network graph of realm-java [6] repository)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Git graph data abstraction from DAG to stem structure. (a) DAG representation of a Git repository. (b) Stem pruning simplifies edges, but produces implicit stems. (c) Performing a Context-Preserving Squash Merge (CSM). (d) The stem structure reduced by CSM. (e) Commit clustering. (f) Group adjacent commits in the grid layout to the block s (denoted by orange dashed box). (g) Squeezing the block s. (h) Stem relocation for space efficiency. (i) Adding a thin strip at the bottom of each stem.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 7 .</head><label>7</label><figDesc>Users can easily identify a hotspot release and the file with the highest CLOC contributions. (a) Cluster for release 5.12.0. (b) Cluster with the highest CLOC. (c) File with the highest CLOC. (d) Tooltip for file information.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 8 .</head><label>8</label><figDesc>Quantitative evaluation result; the task completion time spent by subjects on three questions</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Jinwook Seo are with Seoul National University. E-mail: {ytaek.kim, jykim}@hcil.snu.ac.kr, jseo@snu.ac.kr. • Youngtaek Kim is also with Samsung Electronics. • Hyeon Jeon is with POSTECH. E-mail: jeonhyun97@postech.ac.kr. • Young-Ho Kim is with University of Maryland. E-mail: yghokim@umd.edu. • Hyunjoo Song is with Soongsil University. E-mail: hsong@ssu.ac.kr. • Bohyoung Kim is with Hankuk University of Foreign Studies.</figDesc><table /><note>E-mail: bkim@hufs.ac.kr.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 .</head><label>1</label><figDesc>Assessment of related systems against the requirements. The black mark implies that the related system satisfies the corresponding sub-item.</figDesc><table /><note>developers and three project leaders, D2-3 and L1-3). They had an aver- age of 11.8 years (ranging from 7 to 16 years) of professional software development experience and had worked in the areas of engineering, in- frastructure, AI, and cloud computing. We asked the interviewees how the questions relate to real-world problems. Through the interviews, we formulated three significant tasks as follows: • T1: Understand the overall development context. Obtain an overview of the development history in terms of mainly temporal aspects. Who is working on what? What are my co-workers working on right now? and What has changed between two builds? [32] • T2: Understand the topology of commit history. Analyze the merging and branching. Have changes in another branch been integrated into this branch? and Is the pull request "501" merged into the master in this release? [48] • T3: Explore and compare details. Interactively explore detailed information (e.g., directory containing changed files, name of au- thor, keywords of message) that meets user-defined criteria; and compare the context between multiple periods to find meaningful patterns (e.g., hotspots [66] where frequent or large numbers of changes have occurred). Which component was John mainly re- sponsible for recently? Is this changed location a hotspot for past changes? and How many LOC have been changed? [60, 66]</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0" />
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="https://git-scm.com/docs/git-log" />
		<title level="m">Git log documentation</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Github</surname></persName>
		</author>
		<ptr target="https://github.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Gitkraken</surname></persName>
		</author>
		<ptr target="https://www.gitkraken.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Sourcetree</surname></persName>
		</author>
		<ptr target="https://www.sourcetreeapp.com/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Performance evolution matrix: Visualizing performance variations along software versions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P S</forename><surname>Alcocer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bergel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019" />
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Evo-clocks: Software evolution at a glance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">V</forename><surname>Alexandru</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Proksch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Behnamghader</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">C</forename><surname>Gall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019" />
			<biblScope unit="page" from="12" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Sourcevis: Collaborative software visualization for co-located environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Anslow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marshall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Noble</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Biddle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 First IEEE Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Barik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lubick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Murphy-Hill</surname></persName>
		</author>
		<title level="m">2015 IEEE/ACM 37th IEEE International Conference on Software Engineering</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="631" to="634" />
		</imprint>
	</monogr>
	<note>Commit bubbles</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Analyze this! 145 questions for data scientists in software engineering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Begel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Zimmermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th International Conference on Software Engineering</title>
		<meeting>the 36th International Conference on Software Engineering</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="12" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On analyzing the topology of commit histories in decentralized version control systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Biazzini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Monperrus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Baudry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE International Conference on Software Maintenance and Evolution</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="261" to="270" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The promises and perils of mining git</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">C</forename><surname>Rigby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">T</forename><surname>Barr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>German</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Devanbu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">6th IEEE International Working Conference on Mining Software Repositories</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Natural language processing with Python: analyzing text with the natural language toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Loper</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
			<publisher>Reilly Media, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Extending tree-maps to three dimensions: A comparative study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bladh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Scholl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Asia-Pacific Conference on Computer Human Interaction</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="50" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Using thematic analysis in psychology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Braun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Clarke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Qualitative research in psychology</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="77" to="101" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Visualizing work processes in software engineering with developer rivers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Burch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE 3rd Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="116" to="124" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Information needs for software development analytics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">P</forename><surname>Buse</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Zimmermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 34th International Conference on Software Engineering (ICSE)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="987" to="996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Pro Git</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Chacon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Straub</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2014" />
			<pubPlace>Apress, USA</pubPlace>
		</imprint>
	</monogr>
	<note>2nd ed.</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Software history under the lens: A study on why and how developers examine it</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Codoban</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Ragavan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bailey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE International Conference on Software Maintenance and Evolution (ICSME)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Software visualization: visualizing the structure, behaviour, and evolution of software</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Diehl</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<publisher>Springer Science &amp; Business Media</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Seesoft-a tool for visualizing line oriented software statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Steffen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">E</forename><surname>Sumner</surname><genName>Jr</genName></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="957" to="968" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Visualizing software changes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">F</forename><surname>Karr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mockus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schuster</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="396" to="412" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Visgi: Visualizing git branches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Elsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 First IEEE Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Chronotwigger: A visual analytics tool for understanding source and test co-evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Ens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rea</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shpaner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hemmati</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Irani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second IEEE Working Conference on Software Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="117" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Repovis: Visual overviews and full-text search in software repositories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Andrews</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2018 IEEE Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Visualizing project evolution through abstract syntax tree analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Feist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Watts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hindle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="11" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Change distilling: Tree differencing for fine-grained source code change extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Fluri</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wuersch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pinzger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Gall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on software engineering</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="725" to="743" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Using information fragments to answer the questions developers ask</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Fritz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">C</forename><surname>Murphy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2010 ACM/IEEE 32nd International Conference on Software Engineering</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="175" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Unifying artifacts and activities in a visual tool for distributed software development teams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Froehlich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dourish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings. 26th International Conference on Software Engineering</title>
		<meeting>26th International Conference on Software Engineering</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="387" to="396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Considerations for visualizing comparison</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gleicher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="413" to="423" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Conceptcloud: A tagcloud browser for software archives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">J</forename><surname>Greene</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Fischer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering</title>
		<meeting>the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="759" to="762" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">The top ten list -dynamic fault prediction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E</forename><surname>Hassan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Holt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">21st IEEE International Conference on Software Maintenance (ICSM&apos;05)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="263" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Software evolution comprehension: Replay to the rescue</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hattori</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>D'ambros</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lanza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lungu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2011 IEEE 19th International Conference on Program Comprehension</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="161" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">On the nature of commits</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">P</forename><surname>Hattori</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lanza</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">23rd IEEE/ACM International Conference on Automated Software Engineering-Workshops</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="63" to="71" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A tour through the visualization zoo</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ogievetsky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="59" to="67" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Word cloud explorer: Text analytics based on word clouds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Heimerl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lohmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lange</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">47th Hawaii International Conference on System Sciences</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="1833" to="1842" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Effective bug triage based on historical bug-fix information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xuan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE 25th International Symposium on Software Reliability Engineering</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="122" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Tree-maps: A space-filling approach to the visualization of hierarchical information structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd conference on Visualization&apos;91</title>
		<meeting>the 2nd conference on Visualization&apos;91</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="284" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">The promises and perils of mining github</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Kalliamvakou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Gousios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Blincoe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Singer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>German</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Damian</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th working conference on mining software repositories</title>
		<meeting>the 11th working conference on mining software repositories</meeting>
		<imprint>
			<date type="published" when="2014" />
			<biblScope unit="page" from="92" to="101" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">An interactive approach for inspecting software system measurements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Khan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Barthel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Amrhein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Liggesmeyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IFIP Conference on Human-Computer Interaction</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Predicting faults from cached history</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Zimmermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Whitehead</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Zeller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">29th International Conference on Software Engineering (ICSE&apos;07)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page" from="489" to="498" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Mining file histories: Should we consider branches?</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kovalenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Palomba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bacchelli</surname></persName>
		</author>
		<idno type="DOI">10.1145/3238147.3238169</idno>
	</analytic>
	<monogr>
		<title level="m">ASE 2018 -Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="202" to="213" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Live programming and software evolution: questions during a programming change task</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kubelka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Robbes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bergel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 IEEE/ACM 27th International Conference on Program Comprehension (ICPC)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019" />
			<biblScope unit="page" from="30" to="41" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Hard-to-answer questions about code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>Latoza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Myers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Evaluation and Usability of Programming Languages and Tools</title>
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1" to="6" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Understanding, debugging, and optimizing distributed software builds: A design study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lebeuf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Voyloshnikova</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Herzig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-A</forename><surname>Storey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2018 IEEE International Conference on Software Maintenance and Evolution (ICSME)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="496" to="507" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">A git source repository analysis tool based on a novel branch-oriented approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B.-K</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Seo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 International Conference on Information Science and Applications (ICISA)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Recovering commit branch of origin from github repositories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">M</forename><surname>Michaud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">T</forename><surname>Guarnera</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Collard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">I</forename><surname>Maletic</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE International Conference on Software Maintenance and Evolution (IC-SME)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="290" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Use of relative code churn measures to predict system defect density</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Nagappan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ball</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th international conference on Software engineering</title>
		<meeting>the 27th international conference on Software engineering</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="284" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Understanding git history: A multi-sense view</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sarma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">B</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Workshop on Social Software Engineering</title>
		<meeting>the 8th International Workshop on Social Software Engineering</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1" to="7" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">code swarm: A design study in organic software visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ogawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1097" to="1104" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">City on the river: visualizing temporal collaboration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Perrie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Nayebi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fokaefs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lyons</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Stroulia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 29th Annual International Conference on Computer Science and Software Engineering</title>
		<meeting>the 29th Annual International Conference on Computer Science and Software Engineering</meeting>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="82" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Codecompass: an open software comprehension framework for industrial usage</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Porkoláb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Brunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Krupp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Csordás</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th Conference on Program Comprehension</title>
		<meeting>the 26th Conference on Program Comprehension</meeting>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="page" from="361" to="369" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Comparing repositories visually with repograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rozenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Beschastnikh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Kosmale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Poser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Palyart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">C</forename><surname>Murphy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th International Conference on Mining Software Repositories</title>
		<meeting>the 13th International Conference on Mining Software Repositories</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="109" to="120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Animatrix: A matrix-based visualization of software evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rufiange</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Melançon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second IEEE Working Conference on Software Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="137" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">How developers search for code: a case study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sadowski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">T</forename><surname>Stolee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Elbaum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering</title>
		<meeting>the 2015 10th Joint Meeting on Foundations of Software Engineering</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="page" from="191" to="201" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">Decomposing the rationale of code commits: the software developer&apos;s perspective</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Safwan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Servant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering</title>
		<meeting>the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering</meeting>
		<imprint>
			<date type="published" when="2019" />
			<biblScope unit="page" from="397" to="408" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">The eyes have it: A task by data type taxonomy for information visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 1996 IEEE symposium on visual languages</title>
		<meeting>1996 IEEE symposium on visual languages</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="336" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Questions programmers ask during software evolution tasks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Sillito</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">C</forename><surname>Murphy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">De</forename><surname>Volder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering</title>
		<meeting>the 14th ACM SIGSOFT international symposium on Foundations of software engineering</meeting>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="page" from="23" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Incorporating version histories in information retrieval based bug localization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Sisman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Kak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2012 9th IEEE Working Conference on Mining Software Repositories (MSR)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="50" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">An evaluation of space-filling information visualizations for depicting hierarchical structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stasko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Catrambone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Guzdial</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mcdonald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International journal of human-computer studies</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="663" to="694" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">Querying the history of software projects using qwalkeko</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Stevens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>De Roover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2014 IEEE International Conference on Software Maintenance and Evolution</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="585" to="588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">How do software engineers understand code changes? an exploratory study in industry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Dang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering</title>
		<meeting>the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">Walls, pillars and beams: A 3d decomposition of quality anomalies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Tymchuk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Merino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ghafari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Nierstrasz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2016 IEEE Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="126" to="135" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Quality models inside out: Interactive visualization of software metrics by means of joint probabilities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ulan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hönel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Martins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ericsson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Löwe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wingkvist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kerren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2018 IEEE Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2018" />
			<biblScope unit="page" from="65" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Podium: Ranking data using mixed-initiative visual analytics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Chawla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kalidindi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">T</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Endert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="288" to="297" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<analytic>
		<title level="a" type="main">Clonecompass: Visualizations for exploring assembly code clone ecosystems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weatherston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-A</forename><surname>Storey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>German</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 Working Conference on Software Visualization (VISSOFT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<biblScope unit="page" from="88" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b65">
	<analytic>
		<title level="a" type="main">Should i stale or should i close? an analysis of a bot that closes abandoned issues and pull requests</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wessel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Steinmacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Wiese</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Gerosa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE/ACM 1st International Workshop on Bots in Software Engineering (BotSE)</title>
		<imprint>
			<biblScope unit="page" from="38" to="42" />
			<date type="published" when="2019" />
			<publisher>IEEE</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b66">
	<analytic>
		<title level="a" type="main">Merge-tree: Visualizing the integration of commits into linux</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wilde</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>German</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Software: Evolution and Process</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">1936</biblScope>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b67">
	<analytic>
		<title level="a" type="main">Visualization of fine-grained code change history</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Yoon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Koo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2013 IEEE Symposium on Visual Languages and Human Centric Computing</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="119" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b68">
	<analytic>
		<title level="a" type="main">Multi-attribute decision making: A simulation comparison of select methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">H</forename><surname>Zanakis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Solomon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Wishart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Dublish</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European journal of operational research</title>
		<imprint>
			<biblScope unit="volume">107</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="507" to="529" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b69">
	<analytic>
		<title level="a" type="main">Knowledge graphing git repositories: A preliminary study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Grundy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2019" />
			<biblScope unit="page" from="599" to="603" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
