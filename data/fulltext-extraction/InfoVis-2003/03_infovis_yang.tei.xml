<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Hierarchical Dimension Ordering, Spacing and Filtering for Exploration of High Dimensional Datasets *</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Yang</surname></persName>
							<email>yangjing@cs.wpi.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei</forename><surname>Peng</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthew</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Elke</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Worcester Polytechnic Institute Worcester</orgName>
								<address>
									<postCode>01609</postCode>
									<region>MA</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">IEEE Symposium on Information Visualization</orgName>
								<address>
									<addrLine>October 19-21</addrLine>
									<postCode>2003, 2003</postCode>
									<settlement>Seattle</settlement>
									<region>Washington</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Hierarchical Dimension Ordering, Spacing and Filtering for Exploration of High Dimensional Datasets *</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.5.2 [Information Interfaces and Presentation]: User Interfaces-Graphical user interfaces H.2.8 [Database Management]: Database Applications-Data mining I.5.3 [Pattern Recognition]: Clustering-Similarity Measures Dimension ordering</term>
					<term>dimension spacing</term>
					<term>dimension filtering</term>
					<term>multidimensional visualization</term>
					<term>high dimensional datasets</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Large numbers of dimensions not only cause clutter in multidimensional visualizations, but also make it difficult for users to navigate the data space. Effective dimension management, such as dimension ordering, spacing and filtering, is critical for visual exploration of such datasets. Dimension ordering and spacing explicitly reveal dimension relationships in arrangement-sensitive multidimensional visualization techniques, such as Parallel Coordinates, Star Glyphs, and Pixel-Oriented techniques. They facilitate the visual discovery of patterns within the data. Dimension filtering hides some of the dimensions to reduce clutter while preserving the major information of the dataset. In this paper, we propose an interactive hierarchical dimension ordering, spacing and filtering approach, called DOSFA. DOSFA is based on dimension hierarchies derived from similarities among dimensions. It is a scalable multi-resolution approach making dimensional management a tractable task. On the one hand, it automatically generates default settings for dimension ordering, spacing and filtering. On the other hand, it allows users to efficiently control all aspects of this dimension management process via visual interaction tools for dimension hierarchy manipulation. A case study visualizing a dataset containing over 200 dimensions reveals how our proposed approach greatly improves the effectiveness of high dimensional visualization techniques.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>High dimensional datasets are becoming commonplace in applications such as digital libraries, bioinformatics, simulations, process monitoring, and surveys. They bring an important issue to existing multi-dimensional visualization techniques -dimension management. Without effective dimension management, such as dimension ordering, spacing and filtering, high dimensional visualizations can be cluttered and difficult for users to navigate the data space. For example, a 200 dimensional data set means 40000 plots for Scatterplot Matrices <ref type="bibr" target="#b5">[Cleveland and McGill 1988]</ref>, 200 axes for Parallel Coordinates <ref type="bibr" target="#b11">[Inselberg and Dimsdale 1990;</ref><ref type="bibr" target="#b21">Wegman 1990]</ref>, 200 subwindows for Recursive Pattern <ref type="bibr" target="#b13">[Keim et al. 1995]</ref>, and 200 arms for Star Glyphs <ref type="bibr" target="#b17">[Siegel et al. 1972]</ref>.</p><p>The order of dimensions is crucial for the effectiveness of a large number of visualization techniques <ref type="bibr" target="#b1">[Ankerst et al. 1998</ref>]. For example, in many multidimensional visualization techniques, such as Parallel Coordinates <ref type="bibr" target="#b11">[Inselberg and Dimsdale 1990;</ref><ref type="bibr" target="#b21">Wegman 1990</ref>], Star Glyphs <ref type="bibr" target="#b17">[Siegel et al. 1972]</ref>, Circle Segments <ref type="bibr" target="#b0">[Ankerst et al. 1996]</ref> and Recursive Pattern <ref type="bibr" target="#b13">[Keim et al. 1995]</ref>, the dimensions have to be positioned in some one-or two-dimensional arrangement on the screen. This chosen arrangement of dimensions can have a major impact on the expressiveness of the visualization because the relationships among adjacent dimensions are easier to detect than relationships among dimensions positioned far from each other. Another example is attribute mapping. In visualizations such as Chernoff Faces <ref type="bibr" target="#b4">[Chernoff 1973</ref>], Worlds within Worlds <ref type="bibr" target="#b7">[Feiner and Beshers 1990]</ref>, and Dimensional Stacking <ref type="bibr" target="#b15">[LeBlanc et al. 1990</ref>], more important dimensions need to be mapped to more pre-attentive visual attributes, such as more important features of the face in Chernoff Faces, axes appearing earlier in Worlds within Worlds, and outer dimensions in Dimensional Stacking. Dimension ordering targets these problems, and aims to improve the effectiveness of the visualization by giving orders to the dimensions that enable users to more easily detect relationships and pay more attention to important dimensions.</p><p>In several multidimensional visualization techniques, such as Parallel Coordinates <ref type="bibr" target="#b11">[Inselberg and Dimsdale 1990;</ref><ref type="bibr" target="#b21">Wegman 1990]</ref> and Star Glyphs <ref type="bibr" target="#b17">[Siegel et al. 1972]</ref>, uniform spacing/angles are placed by default between two adjacent axes in the display. We conjecture that non-uniform spacing could be used to convey information about dimensions, such as similarity between adjacent dimensions or structure of the dimension space.</p><p>Dimension filtering removes some of the dimensions from the display. It is essential for visualizing high dimensional datasets. For datasets contains several hundreds or more dimensions, none of the existing multidimensional visualization techniques can map all the dimensions at the same time without cluttering the display. Popular dimension reduction approaches, such as Principal Component Analysis <ref type="bibr" target="#b12">[Jolliffe 1986</ref>], Multidimensional Scaling <ref type="bibr" target="#b16">[Mead 1992]</ref>, and Kohonen's Self Organizing Maps <ref type="bibr" target="#b14">[Kohonen 1995;</ref><ref type="bibr" target="#b8">Flexer 1999]</ref>, condense the hundreds or thousands of dimensions into a few dimensions. However, those generated dimensions have little intuitive meaning to users and allow little user interaction. Dimension filtering is more intuitive to users in that the remaining dimensions are all original dimensions in the dataset so that they are all meaningful. Dimension filtering is also more flexible in that it allows users to interactively select or unselect dimensions to be filtered.</p><p>In this paper, we propose a general approach to dimension management for high dimensional visualization. Our solution is an interactive hierarchical dimension management approach called DOSFA (Dimension Ordering, Spacing, and Filtering Approach). It supports both automatic as well as interactive means of dimension ordering, spacing and filtering.</p><p>To reveal how DOSFA improves the effectiveness of high dimensional visualization techniques, we present a case study in this paper that visualizes the OHSUMED dataset, which contains the word-counts of a medical abstract collection <ref type="bibr" target="#b10">[Hersh et al. 1994]</ref>. It contains 215 dimensions and 298 data points.</p><p>The remainder of this paper is organized as follows. In Section 2, we review related work. In Section 3, we introduce the dimension hierarchy construction and navigation processes fundamental to our DOSFA approach. In Sections 4, 5 and 6 we present our semiautomatic dimension ordering, spacing and filtering approaches. In Section 7, we present our conclusions and future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head><p>Dimension order is an important issue in visualization. <ref type="bibr" target="#b2">[Bertin 1983</ref>] gave some examples illustrating that permutations of dimensions and data items reveal patterns and improve the comprehension of visualizations. <ref type="bibr" target="#b1">[Ankerst et al. 1998</ref>] pointed out the importance of dimension arrangement for order-sensitive multidimensional visualization techniques. They defined the concept of similarity between dimensions and discussed several similarity measures. They proposed the idea of rearranging the dimensions such that dimensions showing a similar behavior are positioned close to one another. They proved that this is an NP-complete problem equivalent to the traveling salesman problem, and used an automatic heuristic approach to generate a solution. Our dimension ordering approach is different from their approach in that we impose a hierarchical structure over the dimensions to reduce the complexity of the ordering problem and allow efficient user interactions.</p><p>Dimension order is also important for many other fields. For instance, the database primitive similarity join has been used to speed up applications such as similarity search, data analysis and data mining. Its computational overhead is mostly dedicated to the final distance computations between the feature dimensions. <ref type="bibr" target="#b3">[Boehm et al. 2002]</ref> proposed a generic technique to avoid and accelerate the distance calculations between those dimensions by carefully ordering them according to a probability model.</p><p>Manual dimension ordering and filtering are available in many multidimensional visualization systems. For example, Polaris <ref type="bibr" target="#b18">[Stolte and Hanrahan 2000]</ref> allows users to manually select and order the dimensions to be mapped to the display. Microsoft Excel allows users to change the order of the dimension by drag-and-drop operations. In XmdvTool <ref type="bibr" target="#b19">[Ward 1994</ref>], users manually filter dimensions and change the order of the dimensions from a reconfigurable list of dimensions. Although manual dimension ordering and filtering as found in such tools are sufficient for low dimensional datasets, they become cumbersome for high dimensional datasets.</p><p>Conveying information using spacing in the display has many applications. Many tree drawing algorithms <ref type="bibr" target="#b9">[Furnas 1986;</ref><ref type="bibr" target="#b6">Eades 1992</ref>] use spacing to convey structural information about the tree. <ref type="bibr" target="#b20">[Ward 2002</ref>] used the distance between adjacent glyphs to convey their relationship in an N dimensional space. In our approach, we use the spacing between dimensions to indicate similarity between adjacent dimensions or structure of the dimension space.</p><p>The idea of using dimension hierarchies to facilitate dimension ordering, spacing and filtering is inspired by our previous work on Visual Hierarchy Dimension Reduction (VHDR) <ref type="bibr" target="#b23">[Yang et al. 2003</ref>]. In VHDR, dimensions in a high dimensional dataset are grouped into a dimension hierarchy according to their similarities. Users select interesting dimension clusters and display them instead of the original dimensions in order to reduce the dimensionality of the display. This paper is different from <ref type="bibr" target="#b23">[Yang et al. 2003</ref>] in that the latter was limited to dimension reduction while the former has been extended to a more general dimension management approach including dimension ordering, spacing and filtering. Dimension filtering proposed in this paper is different from VHDR because dimension filtering automatically picks out important dimensions to form lower dimensional subspaces that contain major features of the original datasets, while users had to manually select dimensions to form lower dimensional subspaces in VHDR.</p><p>InterRing <ref type="bibr" target="#b22">[Yang et al. 2002]</ref>  <ref type="figure" target="#fig_2">(Figure 1</ref> (a)-(d)) is an interactive radial space filling tree visualization tool we designed for visualizing a dimension hierarchy. InterRing is generated using the rules that deeper nodes of the hierarchy are drawn further from the center; child nodes are drawn within the arc subtended by their parents, and the sweep angle of a non-leaf node is equal to the aggregation of that of all its children. InterRing provides a rich set of interactive tools for panning/zooming, rolling-up/drilling-down, multifocus distortion, modification, reordering, and selection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Dimension Hierarchy</head><p>Our hierarchical dimension ordering, spacing and filtering approach is based on dimension hierarchies derived from similarities among dimensions. The problem of determining the similarity of dimensions was characterized by <ref type="bibr" target="#b1">[Ankerst et al. 1998</ref>] as follows: The database containing N data items with d-dimensions can be de-</p><formula xml:id="formula_0">scribed as d arrays A i (0 &lt;= i &lt; d), each containing N real num- bers a i,k (0 &lt;= k &lt; N).</formula><p>A similarity measure S maps two such arrays to a real number. It also might be called a dissimilarity measure because large numbers mean high dissimilarity whereas zero means identity. Similarity can be defined in various ways. Often it is highly domain-dependent. Detailed information of similarity measures between two dimensions can be found in <ref type="bibr" target="#b1">[Ankerst et al. 1998</ref>]. In this paper, we assume that 0 &lt;= S &lt;= 1.</p><p>Currently, we use an efficient counting test to decide if the similarity measure between two dimensions is lower than a certain similarity measure threshold. Given a similarity measure threshold S, the idea of our approach is that if most data items in the dataset have lower or equal dissimilarities than S when evaluating two dimensions, then the similarity measure of these two dimensions passes the counting test and is lower than S. Those data items that have higher dissimilarities than S are defined as outliers. Given an acceptable outlier percentage O, the number of outliers must be lower than O * N to pass the counting test. This approach is flexible in that users can change the outlier percentage in order to constrain or relax the similarity measure.</p><p>Using a dimension clustering approach (described in Section 3.1), we group similar dimensions into clusters and similar clusters into larger clusters, resulting in a dimension hierarchy. By organizing the original dimensions of a high dimensional datasets into a dimension hierarchy, we are able to switch the problem of ordering, spacing, and filtering of all the original dimensions to the problem of ordering, spacing, and filtering of the child nodes of each cluster in the dimension hierarchy. This then scales down the problems and reducing their complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Dimension Hierarchy Construction</head><p>We construct dimension hierarchies using a dimension clustering approach. Generally speaking, as long as the similarity measure between two dimensions is defined, any one of several existing data clustering algorithms can be used to generate the dimension hierarchy; the similarity measure between two dimensions in dimension clustering corresponds to distance between two data items and di-mensions in dimension clustering correspond to data items in data clustering. We briefly describe a bottom-up agglomerative dimension clustering algorithm we implemented as follows. For more detail information, refer to <ref type="bibr" target="#b23">[Yang et al. 2003</ref>].</p><p>• Iterative Clustering: We use a bottom-up clustering approach with a user defined number of iterations I. The iterations are performed in the order of iteration 0 , iteration 1 , ..., iteration I . The iterations correspond to a series of increasing similarity measure thresholds</p><formula xml:id="formula_1">S i (0 &lt;= i &lt; I, S i &lt; S j if i &lt; j, S 0 = 0, S I = 1)</formula><p>. These thresholds are the minimum similarity measure required among the dimensions in a cluster formed during the iterations. In iteration i , dimensions that have not formed any clusters and clusters formed from the previous iterations are considered. If any pair of them has a similarity measure s smaller than S i , the pair is recorded as a similar pair. Then the dimension or cluster contained in the largest number of similar pairs is extracted as a new cluster center. All the other dimensions and clusters in similar pairs involved with it are put into this new cluster and the similar pairs are removed. Repeating the above approach will form more new clusters. An iteration ends when no similar pairs are left.</p><p>• Representative Dimensions: In order to calculate the similarity measure between two dimension clusters or a dimension cluster and a dimension, we use a representative dimension for each dimension cluster. The data array of the representative dimension is the average of the arrays of dimensions included in this dimension cluster. For a dimension cluster containing non-leaf nodes, the average can be calculated using the representative dimensions of the non-leaf nodes scaled by the number of dimensions included in the non-leaf nodes.</p><p>• Data Clusters: To cope with large scale data sets, we make use of partial results of a bottom-up data clustering algorithm applied on the data set. We select all data clusters with extents much smaller than the minimum similarity measure S 0 . These data clusters contain all data items in the data set exactly once. We use these data clusters instead of the original data items in the data set to calculate the similarities among dimensions. For a very large data set, the number of data clusters used in this process would be much smaller than the number of original data items.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Dimension Hierarchy Navigation and Modification</head><p>Because dimension hierarchies are essential for our hierarchical dimension ordering, spacing and filtering approach, it is important to allow users to interactively investigate and modify the automatically generated dimension hierarchy. We use InterRing <ref type="bibr" target="#b22">[Yang et al. 2002</ref>] to navigate and modify the dimension hierarchy. InterRing <ref type="figure" target="#fig_2">(Figure 1</ref> (a)-(d)) provides a rich set of navigation operations to allow users to interactively gain an overview and details of the dimension hierarchy. These operations include:</p><p>drill-down/roll-up: the process of exposing/hiding sub-branches of the hierarchy;</p><p>pan, zoom, and rotation: the process of modifying the focus, scale, and orientation of the display;</p><p>distortion: the process of enlarging some objects in the display while maintaining the context of surrounding objects.</p><p>With the modification operation in InterRing, users are able to modify the given dimension hierarchy according to their domain knowledge. A simple drag-and-drop operation allows nodes or subtrees to be relocated to arbitrary non-terminal nodes in the hierarchy.</p><p>Figure 1 (a) shows the dimension hierarchy of the OHSUMED dataset visualized in InterRing. <ref type="figure" target="#fig_2">Figure 1 (b)</ref> is the same hierarchy after reordering (Section 4). All the leaf nodes are selected and their dimension names are shown. In <ref type="figure" target="#fig_2">Figure 1</ref> (c), the reordered hierarchy is distorted in order to examine details of several nodes. In <ref type="figure" target="#fig_2">Figure 1 (d)</ref>, the nodes outside the focus are hidden using a rollup operation so that the focus node can be viewed more clearly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Dimension Ordering</head><p>Different orders of dimensions in order-sensitive multidimensional visualizations can reveal different aspects of the datasets to users. For example, similarity-oriented order of the dimensions places dimensions with similar patterns next to each other. Through this order, users are able to detect interdependent dimensions. As another example, importance-oriented order of dimensions places dimensions that are more important to the users in more prevalent visualization positions, or maps them to more pre-attentive visual attributes, thus helping users concentrate on them. In the following subsections, we discuss these two dimension ordering techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Similarity-Oriented Dimension Ordering</head><p>Similarity-oriented dimension ordering aims to minimize the sum of similarities of all adjacent dimensions in the display. It has been shown to be an NP-complete problem by Ankerst et. al. <ref type="bibr" target="#b1">[Ankerst et al. 1998</ref>]. In our approach, we reduce the complexity of this problem using the dimension hierarchy. First, we order each cluster in the dimension hierarchy. For a non-leaf node, we use its representative dimension in the ordering of its parent node. Then, the order of the dimensions is decided in a depth-first traversal of the dimension hierarchy (non-leaf nodes are not counted in the order). Once the order of children of each cluster is decided, the order of all the dimensions is decided. Thus the problem of ordering all the original dimensions has been re-expressed as ordering the children of non-leaf nodes of the dimension hierarchy.</p><p>Because in most cases, the number of children of a cluster in the dimension hierarchy is much smaller than the number of leaf nodes of that hierarchy, the complexity of the ordering will be greatly reduced. For example, suppose we have N dimensions to be arranged in a 1-dimensional order, if we use optimal ordering, we need to select the best dimension arrangement from all possible permutation of the dimensions, which means N! − 1 comparisons. While using a well-balanced M-tree, where M is much smaller than N, the number of comparisons needed for each non-leaf node is about M! − 1. Since there are about (N −1)/(M −1) non-leaf nodes in the tree, the total number of comparisons is about</p><formula xml:id="formula_2">(N − 1)/(M − 1) * (M! − 1)</formula><p>, which is much less than N! − 1. As a result, some algorithms that are not suitable for ordering a large number of dimensions, such as optimal ordering, could be used in our approach. Here are some ordering algorithms we implemented:</p><p>• Optimal ordering. Optimal ordering computes the sum of neighboring dimension similarities for every possible permutation within the dimensions to be ordered to find the permutation with the smallest sum.</p><p>• Heuristic ordering. Many heuristic algorithms exist to improve on the computational cost of the optimal ordering algorithm. For example, random swapping starts with an initial configuration and randomly chooses two dimensions to switch their positions. If the new arrangement has a smaller similarity sum, then it is kept and the old one is rejected; otherwise leave the old arrangement intact and go on swapping another pair of dimensions. Keep doing this for a certain number of times.</p><p>An approximate dimension ordering approach is to directly use the depth-first traversal result of a dimension hierarchy without reordering it. The reason is that in dimension hierarchies, similarities among siblings within a cluster are controlled within certain ranges. In other words, the similarities among the children of a dimension cluster are similar. Thus with a good dimension hierarchy, we should get a reasonable order of the original dimensions even without reordering the hierarchy. <ref type="figure" target="#fig_3">Figures 2 (a)</ref> and (b) show the same subset of dimensions of the OHSUMED dataset in Parallel Coordinates. In <ref type="figure" target="#fig_3">Figure 2</ref> (a) the dimensions are in a random order while in <ref type="figure" target="#fig_3">Figure 2</ref> (b) they are ordered according to their depth-first traversal order in the dimension hierarchy. We can see that <ref type="figure" target="#fig_3">Figure 2</ref> (b) reveals similar dimensions.</p><p>Figures 3 (a) and (b) show the same subset of data items of the OHSUMED dataset in Star Glyphs. In <ref type="figure" target="#fig_4">Figure 3</ref> (a) the glyphs are in a random dimension order while in <ref type="figure" target="#fig_4">Figure 3</ref> (b) they are in a similarity-oriented dimension order. Similar dimensions are better revealed in <ref type="figure" target="#fig_4">Figure 3</ref> (b) than in <ref type="figure" target="#fig_4">Figure 3 (a)</ref>.</p><p>Similarity-oriented dimension ordering is a special case of corelationship-oriented dimension ordering methods. If we replace the similarity measure in the similarity-oriented dimension ordering by more complex co-relationship measures, not only similarities, but also more complex co-relationships among dimensions can be revealed by dimension ordering. For example, inverse proportional dimensions can be placed next to each other to reveal their inverse correlation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Importance-Oriented Dimension Ordering</head><p>The importance of each dimension is decided by a user's particular visualization task. In the following description, we assume that users are looking for variance of a dataset. Thus a dimension that contributes more to the variance of the dataset is more important than a dimension that contributes less to the variance. To this end we order the dimensions according to their contribution to the variance. Here again, we use the hierarchical approach to scale down the complexity of the problem.</p><p>We assume that similar dimensions have similar contributions to the dataset's variance because they contain similar information. Thus the problem of ordering all the dimensions can be switched to the problem of ordering each cluster in the dimension hierarchy. As in the similarity-oriented ordering, we first order each cluster in the dimension hierarchy. For a non-leaf node, we use its representative dimension in the ordering of its parent node. Then, the order of the dimensions is decided by the order of the dimensions in a depth-first traversal of the dimension hierarchy (non-leaf nodes are not counted in the order). To order a non-leaf node, we apply Principal Component Analysis (PCA) <ref type="bibr" target="#b12">[Jolliffe 1986</ref>] on its children, and order them according to their contributions to the first several principal components.</p><p>With different user tasks, the importance of the dimensions can be decided in different ways from the above example. However, the general approach is similar; either order all the dimensions at the same time according to their importance, or order the clusters in the dimension hierarchy according to the importance of their children in order to reduce the complexity of the problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">User Interaction</head><p>Relationships among dimensions may remain undetected by the automatic ordering approach. Since users are often experts on the data sets being visualized, they may be able to improve on the results of the automated ordering. Hence allowing users to interactively adjust the order of the dimensions is important.</p><p>In our approach, users have two ways to interactively change the order of the dimensions (reorder):</p><p>• manually change the order of the dimensions in the data displays. This is similar to many existing manual dimension reordering approaches, using either reconfigurable lists or dragand-drop operations <ref type="bibr" target="#b18">[Stolte and Hanrahan 2000;</ref><ref type="bibr" target="#b19">Ward 1994</ref>].</p><p>• manually change the order of siblings using the "Modification" operation of InterRing. By changing the order of a dimension cluster, the order of all the similar dimensions contained in this cluster is changed correspondingly. This change will be propagated to the data display. This reordering approach is efficient even for a large number of dimensions. It provides the users with a manageable way for manual reordering through this multi-resolution approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Dimension Spacing</head><p>Dimension ordering reveals useful dimension relationship information to users. However, this information may not be accurate. For example, in the dimension order generated using the similarityoriented hierarchical ordering approach, two adjacent dimensions could be the ending dimension of one cluster and the starting dimension of another cluster. Thus their similarity is lower than the similarity of two adjacent dimensions within any of those clusters. For an order generated using a non-hierarchical approach, the similarities between dimensions may still be different. Users could not know these differences from the order of the dimensions. Thus dimension spacing, which explicitly conveys dimension relationship information by varying the spacing between two adjacent axes or angles, is useful here. For unordered dimensions, dimension spacing is even more useful since the order of dimensions does not convey any dimension relationship information. In this section, we propose several promising dimension spacing approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Automatic Approach</head><p>In multidimensional visualization techniques containing explicit axes, the default spacing between all the adjacent axes is equal, such as Parallel Coordinates <ref type="bibr" target="#b11">[Inselberg and Dimsdale 1990;</ref><ref type="bibr" target="#b21">Wegman 1990]</ref> and Star Glyphs <ref type="bibr" target="#b17">[Siegel et al. 1972]</ref>. However, the relationships between adjacent dimensions are generally not equalsome adjacent dimensions may have close relationships while others may not. We can explicitly convey this to users by varying the spacing between adjacent axes -a smaller distance or angle means a closer relationship so that closely related dimensions are placed close together, while unrelated dimensions stand apart. By applying this spacing approach to the similarity-oriented ordered dimensions, we allow users to grasp relationships between the dimensions more intuitively as suggested by the Gestalt Law on proximity. A simple and general approach to spacing dimensions to reveal dimension relationships is to calculate the correlation factor of each pair of adjacent dimensions, and assign axes a distance or angle proportional to this factor. Besides revealing relationships between adjacent dimensions, spacing can also be used to reveal the structure of the dimension space in our hierarchical approach. The algorithm of spacing according to the structure of the dimension hierarchies is simply to make the distance between two adjacent dimensions proportional to the threshold used to form their first common ascendant. Thus a dimension will have a smaller distance or angle to its adjacent dimension if the adjacent dimension belongs to the same cluster than if it belongs to a different cluster. Also, if two adjacent dimensions belong to the same cluster, their distance or angle is smaller if the threshold used to form that cluster is smaller. Because the threshold used to form a cluster reflects similarity of its children in the dimension hierarchy, the spacing calculated using this algorithm also reveals the similarity of the adjacent dimensions along with the overall structure of the dimension space.</p><p>The Parallel Coordinates display of the OHSUMED dataset (a subset of dimensions are shown) in <ref type="figure" target="#fig_3">Figure 2</ref> (b) has been spaced according to the structure of the dimension hierarchy. It is easy to detect some closely related dimensions, and some dimensions that are fairly different from adjacent dimensions from this figure. For example, it can be seen with little effort that in the OHSUMED dataset, which contains word-counts in a medical abstract collection, the word "kidney" appears in similar frequency to the word "transplantation" in most articles, as well as "insulin" and "glucose", and "sequence" and "gene".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Interactive Control</head><p>For high dimensional datasets, the displays might still be cluttered despite dimension spacing. Thus it is important to allow users to interactively enlarge or decrease the distance of adjacent dimensions so that they can examine as well as hide detail of interesting or uninteresting dimensions and relationships. In our approach, we provide two ways to allow users to interactively change the distances between dimensions:</p><p>• zooming in/out and panning. We allow users to zoom the x and/or y directions so that, for visualization techniques such as Parallel Coordinates, horizontal zooming will only affect the distances between axes.</p><p>• distortion. When the display is in distortion mode, users can left click between two axes to increase their spacing, or right click to decrease it. When a large number of dimensions need to be distorted, structure-based spacing distortion can be used.</p><p>Zooming and panning keep the original spacing of the dimensions; however, context is lost when users examine details. Manual distortion preserves the context, however, the local spacing in the distorted area is lost. In addition, it can be tedious when users want to examine details of many dimensions at once. When the dimensionality of the dataset is high, it is also difficult to specify a distortion because the spacing between most dimensions is very small. Structure-based spacing distortion addresses these shortcomings.</p><p>Structure-based spacing distortion is linked to structure-based circular distortion of InterRing <ref type="bibr" target="#b22">[Yang et al. 2002]</ref>. Structure-based circular distortion allows users to proportionally enlarge/decrease all descendants in clusters through simple drag-and-drop operations. <ref type="figure" target="#fig_2">Figure 1 (c)</ref> shows a distorted dimension hierarchy in In-terRing. A cluster and all its descendants are enlarged by one operation. We propagate this distortion to dimension spacing in data displays. Thus when a node in InterRing presenting a dimension is enlarged/decreased, the spacing around the dimension is also enlarged/decreased.</p><p>Particularly, we adjust the dimension spacing algorithm so that the spacing between two adjacent dimensions is decided by the product of two parameters: the spacing parameter and the distortion parameter. The spacing parameter is the distance or angle decided by the algorithm described in Section 5.1 that reflects the relationship between these two dimensions. The distortion parameter is specified by the distortion degree of the nodes representing these two dimensions in InterRing. We choose the larger of the two so that for an enlarged leaf node in InterRing, the spacing around its corresponding dimension is also enlarged proportionally.</p><p>Many advantages of structure-based distortion in InterRing have propagated to structure-based spacing distortion, such as: spacing of a cluster of dimensions can be distorted using a single drag-anddrop operation; details can be examined within their context; local spacing inside the enlarged or decreased area has been preserved; multiple foci can coexist. Users can enlarge or decrease several areas in the same display.</p><p>In <ref type="figure" target="#fig_2">Figure 1 (c)</ref>, the dimension hierarchy is distorted using structure-based distortion.  <ref type="figure" target="#fig_3">Figure 2 (c)</ref> is the view without distortion, <ref type="figure" target="#fig_3">Figures 2 (d)</ref> is the distorted view of it with two foci within context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Dimension Filtering</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Automatic Approach</head><p>When the dimensionality is fairly large, even if we apply ordering and spacing of the dimensions to the display, the resulting visualization still may be crowded. Very similar dimensions may likely be cluttered together. In this case, we would like to filter some dimensions to reduce the clutter problem while at the same time retaining most of the information in the dataset. This could be done manually, automatically, or semi-automatically. We propose a dimension filtering approach that automatically generates a default filtering result, while allowing users to interactively modify it. We claim that automatically generating a default result is important for high dimensional datasets, and user interactions are also necessary because improvements can usually be made on automatic approaches.</p><p>Our dimension filtering approach is also based on the dimension hierarchy. In this approach, we use a filtering criterion that is a combination of the dimension similarity and importance. We assume that if some dimensions are very similar to each other, then only one of them should be left in the display. We also assume that if some dimensions are fairly unimportant for a user's visualization task, then they should not be displayed. Thus a similarity threshold and an importance threshold are used in the filtering. The algorithm to select dimensions for display is a recursive approach starting from the root of the dimension hierarchy. For each node we check if the node's importance is smaller than the importance threshold; if yes, ignore the node and return. That is, the dimensions contained in unimportant nodes are ignored. If it is not ignored and it is a leaf node, select it and return. Otherwise check the threshold used to form the node. If it is larger than the similarity threshold, apply the approach on its immediate descendants. Otherwise only apply the approach on its most important immediate descendant.  <ref type="figure" target="#fig_4">Figure 3 (b)</ref>), we find that the filtering retains the major information of the dataset fairly well, while in the filtered displays, the number of dimensions is much more manageable compared to the unfiltered ones. In <ref type="figure" target="#fig_5">Figure 4 (a)</ref>, the Scatterplot Matrix display of the OHSUMED dataset, individual plots cannot be discerned without significant zooming. In <ref type="figure" target="#fig_5">Figure 4</ref> (b), the number of plots has been greatly reduced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Interactive Filtering</head><p>It is possible that the automatic filtering process might filter out some dimensions that a user is concerned about, or keep some dimensions that a user finds uninteresting. It is therefore important to allow users to interactively adjust filtering results.</p><p>The automatic filtering (Section 6.1) is a recursive process staring from the root of a hierarchy. We can apply this process to the root of any sub-branch in the dimension hierarchy instead of the root of the entire hierarchy. In this way, we can apply filtering to a subset of the dimensions instead of all the dimensions.</p><p>In InterRing, each selected leaf node corresponds to a dimension displayed in the data visualization. We can add/delete a dimension to/from the display by selecting/unselecting its corresponding leaf node. Thus users can filter dimensions using a manual selection operation in InterRing, that is, clicking an unselected node to select it, or clicking a selected node to unselect it.</p><p>In InterRing, rolling-up/drilling-down operations allow users to hide/show sub-branches by clicking their root nodes. We also link them to the dimension filtering. Whenever some leaf nodes are hidden, it means that the user is not interested in them. Thus we also filter their corresponding dimensions from the data display.</p><p>Users can also manually delete a dimension from the data display by clicking to select it, then hitting the 'delete' button. Since InterRing provides an overview of the dimension space structure, while the data display provides the context of the data items for manually filtering dimensions, the option of filtering dimensions from InterRing or the data display gives users significant flexibility.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion and Future Work</head><p>In this paper, we have proposed an interactive approach to dimension ordering, spacing and filtering for high dimensional datasets based on dimension hierarchies. Dimension ordering, spacing and filtering can significantly increase the effectiveness of multidimensional visualizations, but the processes are complex for high dimensional datasets. By grouping dimensions into a dimension hierarchy according to their similarity, we improved the manageability of dimensions in high dimensional data sets and reduced the complexity of the ordering, spacing and filtering tasks. In addition, our findings are that user interactions for dimension ordering, spacing and filtering are much easier to accomplish with dimension hierarchies.</p><p>In the future, this approach will be more rigorously evaluated, including:</p><p>• comparing different ordering algorithms, including optimal</p><p>ordering, heuristic algorithms <ref type="bibr" target="#b1">[Ankerst et al. 1998</ref>], and our hierarchical approach, in their quality using computational analysis of their algorithmic complexity and user studies;</p><p>• evaluating how dimension ordering, spacing and filtering benefit high dimensional visualization applications, such as document visualization, through user studies;</p><p>• evaluating DOSFA's applicability to different multidimensional visualization techniques.</p><p>Other future work includes:</p><p>• exploring other forms of dimension management besides DOSFA, such as how to generate potentially interesting subsets of dimensions and manage them;</p><p>• investigating "smart" DOSFA, such as automatically adjusting the ordering criteria according to user input;</p><p>• exploring other approaches besides using dimension hierarchies to manage dimensions in an efficient and effective manner, such as using index trees;</p><p>• improving the efficiency and effectiveness of our dimensional clustering algorithm.    </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Figure 3 (c) shows part of the Star Glyphs display linked to Figure 1 (c) with structure-based spacing distortion. It is clear that structure-based spacing distortion helps users to see details within context. Figures 2 (c) and (d) show another example of structure-based distortion.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Figures 3 (d) and 4 (b) give examples of dimension filtering. Comparing Figures 3 (b) with 3 (d) (remaining dimensions in Figure 3 (d) keep the same order as in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :</head><label>1</label><figDesc>InterRing. (a): Dimension hierarchy of OHSUMED dataset in InterRing. (b): after reordering. (c): after distortion. (d): after roll-up operation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>Parallel Coordinates. (a): A subset of dimensions of OHSUMED dataset in a random order. (b): after ordering and spacing. (c): OHSUMED dataset. (d): (c) after distortion.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Star Glyphs. (a): OHSUMED dataset without DOSFA. (b): after ordering. (c): distorted star glyphs. (d): after filtering.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Scatterplot Matrices. (a): OHSUMED dataset without DOSFA. Individual plots cannot be discerned without significant zooming. (b): after filtering.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Circle segments: A technique for visually exploring large multidimensional data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ankerst</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Driegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Visualization &apos;96</title>
		<meeting>of Visualization &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Similarity clustering of dimensions for an enhanced visualization of multidimensional data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ankerst</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Berchtold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Symposium on Information Visualization, InfoVis&apos;98</title>
		<meeting>of IEEE Symposium on Information Visualization, InfoVis&apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="52" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Semiology of Graphics: Diagrams, Networks, Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bertin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>University of Wisconsin Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Optimal dimension order: A generic technique for the similarity join</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Boehm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Krebs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">4th Int. Conf. on Data Warehousing and Knowledge Discovery</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="135" to="149" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The use of faces to represent points in k-dimensional space graphically</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chernoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="page" from="361" to="68" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Dynamic Graphics for Statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mcgill</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<publisher>Wadsworth, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Drawing the trees. Bulletin of the Institute of Combinatorics and its Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="10" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Worlds within worlds: Metaphors for exploring n-dimensional virtual worlds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Beshers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. UIST&apos;90</title>
		<meeting>UIST&apos;90</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="76" to="83" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">On the use of self-organizing maps for clustering and visualization. PKDD&apos;99</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Flexer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="80" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Generalized fisheye views</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Furnas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Computer-Human Interaction</title>
		<meeting>of Computer-Human Interaction</meeting>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="volume">86</biblScope>
			<biblScope unit="page" from="16" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Ohsumed: An interactive retrieval evaluation and new large text collection for research</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hersh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Buckley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Leone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hickman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Seventeenth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, Performance Evaluation</title>
		<meeting>the Seventeenth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, Performance Evaluation</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="192" to="201" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Parallel coordinates: A tool for visualizing multidimensional geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inselberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Dimsdale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Visualization &apos;90</title>
		<meeting>of Visualization &apos;90</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="361" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Principal Component Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jolliffe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Recursive pattern: a technique for visualizing very large amounts of data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kriegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ankerst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Visualization &apos;95</title>
		<meeting>of Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="279" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Self Organizing Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kohonen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Exploring ndimensional databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leblanc</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Wittels</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Visualization &apos;90</title>
		<meeting>of Visualization &apos;90</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="230" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Review of the development of multidimensional scaling methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mead</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Statistician</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="27" to="35" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">The surgical implication of physiologic patterns in myocardial infarction shock</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Siegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Farrell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Goldwyn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Friedman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1972" />
			<biblScope unit="volume">72</biblScope>
			<biblScope unit="page" from="126" to="167" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Polaris: A system for query, analysis, and visualization of multidimensional relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="5" to="14" />
		</imprint>
	</monogr>
	<note>InfoVis &apos;00</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Xmdvtool: Integrating multiple methods for visualizing multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ward</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Visualization &apos;94</title>
		<meeting>of Visualization &apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="326" to="359" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A taxonomy of glyph placement strategies for multidimensional data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="194" to="210" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Hyperdimensional data analysis using parallel coordinates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wegman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">411</biblScope>
			<biblScope unit="issue">85</biblScope>
			<biblScope unit="page" from="664" to="675" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Interring: An interactive tool for visually navigating and manipulating hierarchical structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="77" to="84" />
		</imprint>
	</monogr>
	<note>InfoVis &apos;02</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Visual hierarchical dimension reduction for exploration of high dimensional datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Huang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="19" to="28" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
