<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Clifford Convolution And Pattern Matching On Vector Fields</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Julia</forename><surname>Ebling</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">University of Kaiserslautern</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of Kaiserslautern</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<settlement>Seattle, Washington</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Clifford Convolution And Pattern Matching On Vector Fields</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.4.3 [Image Processing And Computer Vision]: Filtering-</term>
					<term>I.4.6 [Image Processing And Computer Vision]: Edge and Feature Detection-</term>
					<term>J.2 [Physical Sciences And Engineering]: Aerospace-Engineering</term>
					<term>Flow Visualization, Convolution, Pattern Matching</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The goal of this paper is to define a convolution operation which transfers image processing and pattern matching to vector fields from flow visualization. For this, a multiplication of vectors is necessary. Clifford algebra provides such a multiplication of vectors. We define a Clifford convolution on vector fields with uniform grids. The Clifford convolution works with multivector filter masks. Scalar and vector masks can be easily converted to multivector fields. So, filter masks from image processing on scalar fields can be applied as well as vector and multivector masks. Furthermore, a method for pattern matching with Clifford convolution on vector fields is described. The method is independent of the direction of the structures. This provides an automatic approach to feature detection. The features can be visualized using any known method like glyphs, isosurfaces or streamlines. The features are defined by filter masks instead of analytical properties and thus the approach is more intuitive.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Classical methods for vector field visualization are hedgehog, flowprobe, streamlines, stream ribbons, stream tubes, spot noise and line integral convolution <ref type="bibr" target="#b6">[Post et al. 2002;</ref><ref type="bibr" target="#b7">Roth 2000]</ref>. Hedgehog and flow-probe are complex if drawn everywhere, especially in 3D. Streamlines are a good method for visualization if you know where to start them. Spot noise and line integral convolution are good for visualization in 2D, but result in clutter in 3D.</p><p>Visualization methods based on feature extraction are topology graphs and vortex core methods <ref type="bibr" target="#b6">[Post et al. 2002;</ref><ref type="bibr" target="#b7">Roth 2000;</ref><ref type="bibr" target="#b9">Scheuermann 1999;</ref><ref type="bibr" target="#b10">Tricoche et al. 2000]</ref>. Topological methods are good for feature extraction and visualization in 2D but get complex in 3D. Vortex core methods have one problem as there exists no consistent definition of a vortex. They work on different definitions of vortices and can not be applied to other features. <ref type="bibr">Roth</ref>  <ref type="bibr" target="#b7">[Roth 2000</ref>] defined a parallel operator that covers a lot of the different vortex core definitions. <ref type="figure">Figure 1</ref>: Vortices in a gas furnace chamber. Pattern matching of the vector field of the chamber and a 3 × 3 × 3 (red), a 5 × 5 × 5 (yellow) and a 8 × 8 × 8 (green) rotation mask was computed. The similarities are visualized using a marching tetrahedra with an isovalue of 0.5. Some streamlines are drawn additionally.</p><p>Image processing <ref type="bibr" target="#b5">[Jain 1989;</ref><ref type="bibr" target="#b6">Jähne 2002</ref>] has a lot of useful tools. <ref type="bibr" target="#b2">Granlund and Knutsson [1995]</ref> and <ref type="bibr" target="#b3">Heiberg et al. [2003]</ref> have tried to transfer image processing to vector field visualization. Granlund and <ref type="bibr" target="#b2">Knutsson [1995]</ref> treat a vector field as several scalar fields. <ref type="bibr" target="#b3">Heiberg et al. [2003]</ref> define a scalar convolution on vector fields based on the scalar product of two vectors. He gives an algorithm for pattern matching on vector fields which is discussed in detail in the next section. <ref type="bibr" target="#b1">Bülow [1999]</ref> developed a Commutative Hypercomplex Fourier Transformation of vectors for signal analysis. He also formulated a vector convolution which is given in section 4.2 and the corresponding convolution theorem. His vector convolution is based on Clifford algebra.</p><p>Convolution is closely related to correlation. To use correlation or the corresponding convolution on vector fields, a product of vectors has to be defined. In Clifford algebra, a multiplication of vectors is given. This multiplication supplies us with sine and cosine of the angle between two vectors and the plane in which the angle is measured. In this paper, we define a Clifford convolution based on this multiplication. This Clifford convolution results in an approximation of sine and cosine of the angle between the filter mask and the structure in the vector field. Furthermore it gives us the plane in which the angle lies, which is important in 3D.</p><p>Clifford algebra works not only with vectors, but with multivectors. A multivector in 3D consists of the sum of a scalar, a 3D vector, a 3D bivector and a trivector. Scalar and vector are as usual. In 3D the unit bivectors can be identified with a planar direction and a limited oriented area. The unit trivector gives the volume spanned by three orthogonal unit vectors building a right hand system. That means scalar filter like gradient or smoothing filter from image processing can be applied just like vector filter for pattern matching. The scalar convolution defined by <ref type="bibr" target="#b3">Heiberg et al. [2003]</ref> and the vector convolution of <ref type="bibr" target="#b1">Bülow [1999]</ref> are special cases of the <ref type="figure">Figure 2</ref>: Pattern matching of a 2D vector field with a 5 × 5 rotation filter mask. The similarity values are normalized. Red corresponds to the highest similarity to a righthanded rotation in the field and blue to a lefthanded one, as a righthanded rotation mask is changed into a lefthanded by multiplication with -1. Bottom left, pattern matching and topology of a part of the field and bottom right the same part of the field with LIC.</p><p>Clifford convolution as shown in section 4.</p><p>We use Clifford convolution for pattern matching of the vector field and vector filter masks. Clifford convolution gives an approximation of the direction of the structure. The mask is then rotated in this direction. The scalar convolution of the rotated mask and the vector field is computed as a similarity measure. As the approximations for sine and cosine depend on the angle between filter mask and the direction of the structure in the field, additional mask directions have to be used. In practice, three directions in 2D and six directions in 3D evenly distributed on the circle or the sphere are enough. The algorithm can be accelerated by discretizing the directions and rotating the filter mask only one time in all directions. Rotated structures are recognized with a similarity value of more than 90% in 3D and 95% in 2D using the acceleration with 72 mask directions in 2D and 258 mask directions in 3D.</p><p>The similarity values can be visualized using an isosurface algorithm like marching cubes.The points with high similarity values can also be used as starting points for streamlines or related techniques. For our tests, we used data from a turbulent planar jet and the turbulent flow inside a gas furnace chamber. <ref type="figure">Fig. 1</ref> shows some results from the gas furnace chamber while <ref type="figure">Fig. 2</ref> gives a first impression on the 2D results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>The first idea regarding image processing on vector fields is to simply treat a vector field as several scalar fields. Thus, the Fourier transformation can be used. As the scalar fields are not independent, the results depend on the chosen coordinate system. Granlund and <ref type="bibr">Knutson [1995]</ref> have investigated this approach in 2D. They define lines and edges by a simple neighborhood. This means that the neighborhood can be modeled by a function that varies only in one direction. This function is called simple function. When the points are in a simple neighborhood, they can estimate local orientation, symmetries and curvature. They use these methods to extract texture borders that can be described as a sudden change in a feature vector descriptor field.</p><p>Another approach is to define a multiplication of vectors and thus convey the convolution to vector fields. <ref type="bibr" target="#b3">Heiberg et al. [2003]</ref> define convolution on vector fields with the scalar product of two vectors:</p><formula xml:id="formula_0">s n (r) = Ω &lt; Q n (ξ ),V (r − ξ ) &gt; dξ</formula><p>where s n is the filter response, V is the normalized vector field and Q n the filter mask with direction n. This convolution is referred to as scalar convolution in the following. As the scalar product is used, it gives an approximation of the cosine of the angle between the structure in the vector field and the direction of the filter mask.</p><p>Furthermore, Heiberg et al. give an algorithm to compute a similarity measure in 3D independent of the direction of the filters. The vector field is normalized and the filter mask weighted with a rotational symmetric function. The filter mask is rotated in six directions evenly distributed over a hemisphere. The six rotated filters form a filter set. Next, the convolutions of the six filters and the field are computed. Then, with help of a tensor, direction and similarity are calculated out of the squared filter responses and the directions of the six filter masks.</p><p>The algorithm can be conveyed to 2D, the necessary formulas can be found in the book of Granlund and Knutson <ref type="bibr">[1995]</ref>. Because of the square of the filter responses, only the direction and not the orientation of the structure can be computed. The algorithm is robust in terms of noise sensitivity. The disadvantages are that it only works on symmetric filter masks and even not properly on all of them. A structure like the one in <ref type="figure" target="#fig_0">Fig. 3</ref> is not recognized at all if rotated in a disadvantageous direction. If one looks at the corresponding correlation with the adjusted mask, this becomes clear. The correlation of the mask with itself rotated around 180 • is approx. −0.39 in 2D and −0.11 in 3D with the corresponding 3D mask. The algorithm of Heiberg et al. presumes that it is -1. The algorithm could be adapted to this case by simply computing the whole algorithm a second time with the filters distributed over the other half of the sphere. Regarding only vortices, this effect doesn't take place. Stretched vortices and those with a bended vortex core line can only be approximated. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Clifford Algebra</head><p>For a convolution on vector fields, one has to define a multiplication of vectors. In Clifford algebra <ref type="bibr" target="#b4">[Hestenes 1993;</ref><ref type="bibr" target="#b9">Scheuermann 1999</ref>], a multiplication of vectors is defined. Furthermore, a geometric interpretation of the product of two vectors is given. This product contains sine and cosine of the angle between the two vectors and the plane where the angle is measured. The rotation of vectors can be easily described and calculated within Clifford algebra, too <ref type="bibr" target="#b4">[Hestenes 1993]</ref>. In general, Clifford algebra extends the classical description of an Euclidean n-space as a real n-dimensional vector space with scalar product to a real algebra.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Clifford Algebra in 3D</head><p>For the 3-dimensional euclidian vector space E 3 , we get a 8-dimensional IR-algebra G 3 with the basis 1, e 1 , e 2 , e 3 , e 1 e 2 , e 2 e 3 , e 3 e 1 , e 1 e 2 e 3 as a real vector space. The elements of the algebra are called multivectors. The multiplication of multivectors is defined as associative, bilinear and by the equations</p><formula xml:id="formula_1">1e j = e j , j = 1, 2, 3</formula><p>e j e j = 1, j = 1, 2, 3</p><p>e j e k = −e k e j , j, k = 1, 2, 3, j = k</p><p>Thus, a multiplication of vectors is described, too. The usual vectors (x, y, z) ∈ IR 3 are identified with</p><formula xml:id="formula_2">xe 1 + ye 2 + ze 3 ∈ E 3 ⊂ G 3 .</formula><p>An arbitrary multivector A can be written as</p><formula xml:id="formula_3">A = α + a + i(β + b) with α, β ∈ IR, a, b ∈ E 3 , i = e 1 e 2 e 3 , i 2 = −1.</formula><p>The grade projectors &lt;&gt; j : G 3 → G 3 are the maps</p><formula xml:id="formula_4">&lt; A &gt; 0 = α, &lt; A &gt; 1 = a, &lt; A &gt; 2 = ib, &lt; A &gt; 3 = iβ .</formula><p>The Clifford multiplication of two vectors a, b ∈ E 3 results in</p><formula xml:id="formula_5">ab =&lt; a, b &gt; +a ∧ b,</formula><p>where &lt;, &gt; is the inner product and ∧ the outer product. Furthermore, we have</p><formula xml:id="formula_6">&lt; ab &gt; 0 =&lt; a, b &gt;= a b cos ω &lt; ab &gt; 2 = a ∧ b = a b sin ω</formula><p>where ω is the angle between a and b. &lt; ab &gt; 2 corresponds to the normal vector of the plane through a and b as it is the corresponding bivector. The 2D Clifford algebra is defined analog, see <ref type="bibr" target="#b4">[Hestenes 1993</ref>] and <ref type="bibr" target="#b8">[Scheuermann et al. 1997]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Vector derivative</head><p>Let {g 1 , g 2 , g 3 } be a basis of E 3 with g 1 ∧ g 2 ∧ g 3 = γi, γ = 0. γ is the volume of the parallelepiped spanned by g 1 , g 2 , g 3 including orientation. The reciprocal basis {g 1 , g 2 , g 3 } is defined as</p><formula xml:id="formula_7">g 1 = g 2 ∧ g 3 γ , g 2 = g 1 ∧ g 3 γ , g 3 = g 1 ∧ g 2 γ . A map A : E 3 → G 3 is called multivector field. Let b ∈ E 3 . If the limit A b (r) = lim ε→0 1 ε [A(r + εb) − A(r)], ε ∈ IR exists, it is called directional derivative of A in direction b. Let A : E 3 → G 3 be a multivector field. The vector derivative of A, ∂ A : E 3 → G 3 is defined as ∂ A(r) = 3 ∑ k=1 g k A g k (r)</formula><p>where</p><formula xml:id="formula_8">g 1 , g 2 , g</formula><p>3 is a basis of E 3 and g 1 , g 2 , g 3 is the reciprocal basis. Further details can be found in <ref type="bibr" target="#b8">[Scheuermann et al. 1997]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Clifford convolution</head><p>The Clifford multiplication can also be regarded as a convolution of a point in the vector field with a 1 × 1 filter mask. Thus, the direction of a structure in the field can be computed out of this convolution and the direction of the filter mask. The Clifford convolution presented here generalizes this concept to arbitrary filter masks. The Clifford multiplication is defined between multivectors. This presents no problem as vectors can be easily converted into multivectors. As scalars can be converted, too, the convolution works also between a vector field and a filter mask with scalar values. That means that gradient and smoothing filters from image processing on scalar fields can be applied, too. <ref type="figure" target="#fig_1">Fig. 4</ref> presents some typical vector masks in 2D. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Convolution in scalar fields</head><p>In image processing, a filter is a map from one image to another. For a continuous signal g : IR d → C, the convolution with the filter h :</p><formula xml:id="formula_9">IR d → C is defined by (g * h)(x) = IR d h(y)g(x − y)dy</formula><p>The spacial correlation is defined by</p><formula xml:id="formula_10">(g * k h)(x) = IR d h(y)g(x + y)dy</formula><p>Thus it is just a convolution with a filter that has been mirrored at it's center.</p><p>Every linear and shift invariant filter (LSI filter) can be described as a convolution with a filter mask. A lot of filters for smoothing images and for edge detection are LSI filter. Thus, the convolution is an important operation in image processing <ref type="bibr" target="#b6">[Jähne 2002]</ref>. Now, convolution and spacial correlation have to be transfered to vector fields.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Convolution in vector fields</head><p>Heiberg et al.</p><p>[2003] defined a convolution on vector fields with the scalar product of two vectors. Let V be the vector field and Q n the filter mask with direction n.</p><formula xml:id="formula_11">s n (r) = Ω &lt; Q n (ξ ),V (r − ξ ) &gt; dξ</formula><p>In the following, this convolution will be referred to as scalar convolution. The sensibility of this filter is proportional to the cosine of the angle between the directions of the filter and the structure within the vector field. This is because the scalar product of two normalized vectors has the cosine of the angle between the two vectors as result. Thus, the filter results in the largest values when the directions of the filter mask and the structure in the field are the same. If the angle between filter mask and structure is π 2 , the filter result is zero. If the angle is π, the filter result has the largest negative value.</p><p>The vector convolution given by <ref type="bibr" target="#b1">Bülow [1999]</ref> is</p><formula xml:id="formula_12">v n (r) = Ω Q n (ξ )V (r − ξ )dξ .</formula><p>using the multiplication of vectors given in Clifford Algebra. Now let U be a multivector field and P n a multivector filter mask with direction n. The Clifford convolution is defined as</p><formula xml:id="formula_13">c n (r) = Ω P n (ξ )U(r − ξ )|dξ |.</formula><p>For discrete multivector fields, the convolutions have to be discretized. In 3D for uniform grids, they are:</p><formula xml:id="formula_14">s n ( j, k, l) = r ∑ s=−r r ∑ t=−r r ∑ u=−r &lt; Q n (s,t, u),V ( j − s, k − t, l − u) &gt; and c n ( j, k, l) = r ∑ s=−r r ∑ t=−r r ∑ u=−r P n (s,t, u)U( j − s, k − t, l − u)</formula><p>with j, k, l, s,t, u ∈ Z. r is the dimension of the grid of the filter mask and the ( j, k, l) are grid nodes. A filter mask with different sizes in the three dimensions can be described by a filter mask with the same size in all three directions by simply filling up with zeros. So, this discretized convolutions are general enough. The convolutions in 2D are analog.</p><p>As it holds s n (r) =&lt; c n (r) &gt; 0 and v n (r) =&lt; c n (r) &gt; for vector valued fields and masks, scalar and vector convolution are special cases of Clifford convolution. Furthermore, Clifford convolution is an extention of the convolution on scalar fields.</p><p>The scalar correlation on multivector fields is defined as</p><formula xml:id="formula_15">l n (r) = Ω &lt; Q n (ξ ),V (r + ξ ) &gt; |dξ |.</formula><p>and the spacial Clifford correlation is</p><formula xml:id="formula_16">k n (r) = Ω P n (ξ )U(r + ξ )|dξ |.</formula><p>They are extentions of the spacial correlation on scalar fields.</p><p>The convolution has to be computed at every point of the grid. But at the border of the vector field, the convolution needs values outside the vector field. So, similar to image processing, there is the problem of boundary values. The solutions for this problem are the same as in image processing with all their advantages and disadvantages <ref type="bibr" target="#b6">[Jähne 2002]</ref>. The values can be chosen as follows:</p><p>1. Zero. Thus, artificial edges at the border are created.</p><p>2. Extrapolated. At the simplest case, one can take the values at the boundary. All extrapolations lay too much stress on the border values.</p><p>3. Cyclic convolution. This is much dependent on the chosen display window as most images and vector fields are not periodic as assumed here.</p><p>4. Window function. The values are gradually reduced to zero near the boundary. Some values at the border are lost but otherwise this is the preferred approach in image processing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Vector derivative as convolution</head><p>In image processing it is well known that the derivation is a convolution. The vector derivative ∂ as described in section 3.2 can be discretized using many different approaches. Some basic examples are discussed now in relation to convolution and vector masks. Let the neighborhood of a vector v i, j in 2D be as follows:</p><formula xml:id="formula_17">v j−1,k−1 v j,k−1 v j+1,k−1 v j−1,k v j,k v j+1,k v j−1,k+1 v j,k+1 v j+1,k+1</formula><p>Actually, the values at the nodes of the grid are taken but the above visualization is more demonstrative.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">The central difference is</head><formula xml:id="formula_18">∂ v ≈ e 1 v j+1,k − v j−1,k 2 + e 2 v j,k+1 − v j,k−1 2 .</formula><p>This can be interpreted as a mask:</p><formula xml:id="formula_19">↓ → ← ↑ 2. The forward difference is ∂ v ≈ e 1 v j+1,k − v j,k 2 + e 2 v j,k+1 − v j,k 2 .</formula><p>As a mask:</p><formula xml:id="formula_20">↓ ←</formula><p>3. Another possible approach is the following mask which can be interpreted as convergence at the point(i, j) T :</p><formula xml:id="formula_21">↓ → ← ↑</formula><p>In 3D, the vector derivative can be discretized in the same way.</p><p>1. Def: The gradient ∇ : G 3 → IR is defined by</p><formula xml:id="formula_22">∇(Φ) = ( ∂ ∂ e 1 Φ, ∂ ∂ e 2 Φ, ∂ ∂ e 3 Φ)</formula><p>2. Def: The divergence at point v is defined as</p><formula xml:id="formula_23">div v =&lt; ∇, v &gt;= 1 2 (∂ v + v∂ )</formula><p>3. Def: The rotation at point v is defined as</p><formula xml:id="formula_24">rot v = ∇ ∧ v = 1 2 (∂ v − v∂ )</formula><p>Thus</p><formula xml:id="formula_25">∂ v = div v + rot v. &lt;, &gt;</formula><p>is the inner Product and ∧ is the outer product. This rot operator gives the bivector describing the plane of strongest rotation. The classical rot operator gives the corresponding normal vector. Using the discretized vector derivative as a filter mask and the Clifford convolution results in:</p><formula xml:id="formula_26">div v =&lt; c n (v) &gt; 0 rot v =&lt; c n (v) &gt; 2 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Pattern matching in vector fields</head><p>In flow visualization, it is important to find vortices as they use a lot of energy. Sometimes, many vortices are desired if for example two gases shall be mixed or if lift of an airplane is to be supported. Sometimes, vortices are not wanted as they slow the flow and put a lot of stress on the surrounding material. Other interesting features are shock waves, separation lines and attachment lines. Regions with divergence and convergence in the flow are of interest, too.</p><p>Features like these can be described by small filter masks. Thus, they can be found with pattern matching based on Clifford correlation as described here. An example of the pattern matching described in this section is figure 5, where an ideal vortex core is found and visualized using an isosurface. The similarity measure should be independent of the direction of the structure within the vector field and the mask. Otherwise, one has to rotate the filter mask many times and compute the similarities for all the rotated masks. In a last step, it would be necessary to compute the maximum similarity and take the corresponding direction as the direction of the structure. The Clifford correlation gives the direction of the structure in the field directly.</p><p>The algorithm is in many aspects similar to the algorithm of Heiberg et al. <ref type="bibr">[2003]</ref>. It computes the similarity of a filter mask and structures in the vector field. The similarity is independent of the directions of the structures. The directions of the structures are computed, too. First, vector field and mask are normalized. Then the mask is rotated to generate a filter set. After this, the Clifford correlation of each of the filter masks and the vector field are computed. This has been analog to Heiberg et al. who use scalar convolution. Then, the direction of the structure in the vector field is calculated. Heiberg et al. compute similarity and direction with the help of a tensor out of the filter responses. Here, the filter mask is rotated in the direction of the structure and the similarity is computed by another scalar correlation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Principal idea</head><p>In a first step, the vector field is normalized. As streamlines are everywhere tangent to the vector field, one can regard pattern matching of a normalized vector field as pattern matching of streamlines. The normalization is not necessary for the algorithm itself, it just makes the computation a little easier to understand. If field and mask are not normalized, one has to regard the different vector length and account for them in the computation of the angles. Furthermore, the length of the vectors can be dominant in the correlation and thus pattern matching becomes more difficult.</p><p>The Clifford multiplication gives sine and cosine of the angle between two vectors. Furthermore, it gives the plane where the angle is measured. Thus, Clifford correlation gives an approximation of sine and cosine of the angle between mask and structure and the plane where the angle lies. With normalized field and mask we get</p><formula xml:id="formula_27">1. 2D: (a) &lt; c n (r) &gt; 0 ≈ γ cos α r (b) &lt; c n (r) &gt; 2 ≈ γ sin α r 2. 3D: (a) &lt; c n (r) &gt; 0 ≈ γ cos α r (b) &lt; c n (r) &gt; 2 ≈ γ sin α r (c) &lt; c n (r) &gt; 2</formula><p>is the normal vector of the plane of the angle α r α r is the angle between filter mask and structure at point r and γ = ∑ i, j,k |P(r)| ≤ ∑ i, j,k 1.The equations are only approximations because in the correlation sine and cosine of the angle are summed instead of the angle itself. Now one can simply compute the direction of the structure. The mask is then rotated in this direction and one scalar convolution is computed for the similarity. When filter mask and structure are equal, the similarity is l(r) = 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Filter directions</head><p>As usual, practice adds some challenges. The approximation of the angle between the directions of mask and structure gets more imprecise when the angle is bigger. So additional masks with different directions have to be used. The distribution of the directions is:</p><p>1. 2D: a = 0.5 and b = √ 3 2 (a) n 1 = (1, 0) T (b) n 2 = (−a, b) T , that is n 1 rotated 2π 3 counterclockwise. (c) n 2 = (−a, −b) T , that is n 1 rotated 4π 3 counterclockwise.</p><p>2. 3D:</p><formula xml:id="formula_28">(a) n 1 = (1, 0, 0) T , n 2 = (−1, 0, 0) T , (b) n 3 = (0, 1, 0) T , n 4 = (0, −1, 0) T , (c) n 5 = (0, 0, 1) T , n 6 = (0, 0, −1) T ,</formula><p>The algorithm also works with other directions and other numbers of directions. As usually, one can trade precision for computational speed. The masks are rotated in the desired direction using Clifford algebra and linear interpolation. Out of the approximations n j of the single masks, the direction n of the structure has to be computed. In 2D, the mask with the smallest angle to the structure is sufficient as criterion. In 3D, the direction is computed analog to the computation of a center of gravity. The directions calculated out of the filter outputs with &lt; c n j (r) &gt; 0 ≥ 0 are weighted with the scalars &lt; c n j (r) &gt; 0 /γ n j , where γ n j = ∑ r |P n j (r)| and summed. The resulting vector is normalized and gives the direction n of the structure. The algorithm is insensitive to noise as shown in section 7. Outline of the algorithm:</p><p>1. Normalize vector field and filter mask 2. Convert the vectors from field and mask into multivectors.</p><p>3. Rotate mask to get the filter set and compute γ n j 4. For each grid node of the field: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Acceleration</head><p>The rotation of the mask at every node of the grid is computational expensive. Therefore, the directions of the filter mask for the final scalar correlation are discretized and all rotated masks are computed only once. The mask with the direction closest to the direction of the structure is taken for the scalar correlation at this point. The direction of the mask and γ n j are computed and saved with the rotated filter mask. In 2D, the mask can be chosen by the angle between the direction and the vector (1, 0) T . In 3D, it is not easy to distribute the directions evenly over the sphere. A subdivision algorithm on the sphere starting with an octahedron gives an approximation. The octahedron is used to support the search for the nearest direction later on. Each triangle of the octahedron is divided in 4 new triangles and the vertices are normalized. With three subdivision steps, one gets 258 directions.</p><p>step # points # triangles 0 <ref type="table">6  8  1  18  32  2  66  128  3</ref> 258 512</p><p>There are 45 directions in each octant. For the computation of the nearest mask, the right octant has to be identified. Then the scalar product of the direction of the structure and all directions in the octant are computed. The mask with the direction resulting in the biggest scalar product is chosen. As there are only a few points in each octant, a more complex search pattern is not necessary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Filter Design</head><p>As mentioned before, the filter masks can be scalar, vector and multivector masks. Actually, there are only multivector filter masks, but the terms scalar and vector filter mask are used to point up which kind of multivector filter mask is used. All masks used in image processing <ref type="bibr" target="#b5">[Jain 1989;</ref><ref type="bibr" target="#b6">Jähne 2002]</ref> can be applied to vector fields using the Clifford convolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Smoothing and multiresolution pyramids</head><p>Box and binomial filter for smoothing can be applied to vector fields. The binomial filter is better suited for smoothing than the box filter as the box filter can permute local minima and maxima.  Scale spaces are of interest in feature extraction <ref type="bibr" target="#b0">[Bauer and Peikert 2002]</ref>. Repeated smoothing of the vector field with a sampled Gaussian followed by subsampling is one way to compute a multiresolution pyramid. Thus, the behavior of the field can be analyzed at different scales. The multiresolution pyramid can be combined with the pattern matching method. This has the advantage that only small masks have to be used as the computation of large masks is computationally expensive. Furthermore, the scales of features can be figured out and the features divided into features of different scales. <ref type="figure">Fig. 7</ref> shows the results of applying a rotation mask to a multiresolution pyramid of a turbulent flow data set described in section 7. <ref type="figure">Figure 7</ref>: Two steps of a multiresolution pyramid build by smoothing with a 5 × 5 binomial filter mask. Every second value was taken in the subsampling. On the resulting fields, pattern matching with a 5 × 5 rotation mask was applied. The color coding is the same as in figure 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Vector masks for pattern matching</head><p>Vector filter masks are used for pattern matching. They can represent features such as vortices, saddlepoints, convergence, diver- gence and many more. One nice filter is the small convergence filter as it computes divergence and rotation of the field as defined in section 3. The divergence is given in the scalar and the rotation in the bivector part of the result. Some 3D vector filter masks are given in <ref type="figure" target="#fig_6">Fig. 8</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results</head><p>The main goal of this paper is to define an operation incorporating pattern matching like spacial correlation and the usual filter operations from image processing on vector fields on uniform grids. The operation may then be adjusted to arbitrary grids.</p><p>All LSI filter from image processing can be described by scalar filter masks. They can be used with the Clifford convolution defined in this paper and applied to vector fields. As the LSI filters are important in image processing, most of the methods from image processing are incorporated in this approach. With smoothing filters like the binomial filter, scale spaces and multiresolution pyramids can be build. This is helpful for pattern matching.</p><p>Furthermore, we want to have an algorithm for pattern matching on vector fields that is robust and not sensitive to noise. It should also work on all kinds of filter masks. It has to be at least as precise as the algorithm of Heiberg et al. <ref type="bibr">[2003]</ref>. The computed directions should be accurate and it should recognize a rotated copy of itself with a similarity value close to 100% as one has to account for approximations and numerical problems in practice.</p><p>For these reasons, our first tests consisted in rotating the given mask by many possible angles (steps different from the rotations used to speed the algorithm). The second class of tests added white noise to the field to check for robustness.</p><p>The algorithm for pattern matching computes a similarity measure and the direction of the structure. With the described acceleration, it recognizes rotated structures with a similarity value of about 100% in 2D and 96%-100% in 3D. There are no constraints for the filter masks so curved structures and not symmetric ones present no problem. The algorithm works local and is robust in terms of noise sensitivity. Rotating every vector in a field randomly up to 18 • reduces the similarity values about 3%. Rotating every vector in a field randomly up to 32 • results in similarity values of the same structures of still more then 90%. Compared to the adjusted algorithm of Heiberg et al., the algorithm presented here is only half as fast because of the computation of the Clifford convolution. It is more precise and it works on more filter masks. The similarity values of the field can be visualized using a marching cubes algorithm. Otherwise they can be used to determine starting points for streamlines or the like.</p><p>After these rather academic tests, we have chosen two test data sets from real applications. The first data set is a turbulent swirling jet entering a fluid at rest. The simulation considers a cylinder and assumes rotational symmetry, so that a planar cut along the axis of the cylinder can be used as a domain. The domain is discretized by a 124 × 101 rectilinear grid with smaller rectangles towards the axis of the cylinder. Since a lot of small and large scale vortices are present in the flow, a discrete numerical simulation (DNS) using a higher order finite difference scheme is used to solve the incompressible Navier-Stokes equations. The results of the Clifford convolution are shown in <ref type="figure">Fig. 2</ref> including an overlay with the topological structure. A scale space example is shown in <ref type="figure">Fig. 7</ref>. <ref type="figure">Figure 9</ref>: Part of the gas furnace chamber. On the left, the algorithm of Sujudi-Haimes <ref type="bibr" target="#b7">[Roth 2000</ref>]. On the right, pattern matching with a 3 × 3 × 3 rotation mask.</p><p>Our second application is a gas furnace chamber as it is used for heating a house. <ref type="figure">Figure 9</ref> shows a vortex in the chamber found with the algorithm of Sujudi Haimes <ref type="bibr" target="#b7">[Roth 2000</ref>] and with our pattern matching method. In the top left picture in <ref type="figure">Fig. 10</ref>, the swirling gas enters the chamber in the center of the left face while the air enters from 9 openings on the top and 9 openings on the bottom, so that the combustion takes place in the center area of the chamber. The products of the combustion leave the chamber on the right. The simulation solves compressible Navier-Stokes equations using a turbulent model applied on a irregular grid consisting of 174341 tetrahedra with 32440 vertices. The flow is highly turbulent and exhibits a lot of different scale vortices. Since our method works only on rectilinear grids so far, we used a local resampling around each vertex. Since the cells differ substantially in size, we took as distance in the local resampling the length of the shortest edge at the vertex. The results of a 3 × 3 × 3, a 5 × 5 × 5 and a 8 × 8 × 8 rotation mask are shown in <ref type="figure">Fig. 10</ref>. Obviously, the result of the 3 × 3 × 3 mask (given in red) gives a larger region of potential vortices than the 5 × 5 × 5 mask (yellow) and the 8 × 8 × 8 mask (green). As usual, larger masks mean more computation, smaller similarity and, if even larger than here, less precise location of the feature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusion and future work</head><p>We have presented a robust algorithm for pattern matching on these vector fields. We have shown that the algorithm for pattern matching of <ref type="bibr" target="#b3">Heiberg et al. [2003]</ref> has some disadvantages and is limited in the choice of the filter masks. Our pattern matching algorithm is not limited to any masks. Furthermore, it is robust in terms of noise sensitivity and at least as precise as the algorithm of Heiberg et al.</p><p>We have shown that the LSI filter from image processing can be applied with the presented Clifford convolution, too. Thus our <ref type="figure">Figure 10</ref>: Some parts of the gas furnace chamber in figure 1. On the right, the main inflow of the gas is shown. At the bottom, some streamlines are drawn additionally. Pattern matching of the vector field of the chamber and a 3 × 3 × 3 (red), a 5 × 5 × 5 (yellow) and a 8 × 8 × 8 (green) rotation mask was computed. The volumes are the similarity values visualized using a marching tetrahedra with an isovalue of 0.5. approach unifies filter operations on scalar, vector and multivector fields.</p><p>Future work will include the search for a really convincing adaption to irregular grids since our method described for the gas furnace chamber should be improved. The acceleration of the presented method is clearly a topic for further work. Another important issue will be the design of additional filters that are more directed towards the features in question. And scale spaces will be investigated in more detail with regard to the presented pattern matching method, too.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>A divergent flow. The algorithm of Heiberg et al. doesn't recognize this structure if it is rotated disadvantageous.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>Some filter masks in 2D. On the left, they are visualized using hedgehogs. On the right, line integral convolution on the masks is shown. From top to bottom: convergence, saddle point and rotation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Vortex core found with pattern matching. This is an ideal vortex. The similarity values are visualized using an isosurface of the similarity value 0,9. Streamlines are drawn to visualize the behavior of the vortex.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>(a) Compute Clifford correlation with all masks (b) Compute direction n of the structure (c) Rotate mask in direction n (d) Compute scalar correlation of rotated mask and field for the similarity value</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6</head><label>6</label><figDesc>illustrates 2D and 3D binomial filters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>A 5 × 5 and a 3 × 3 × 3 binomial mask. Only the scalar values are shown as all other values are zero. The weights of the 3 × 3 × 3 mask are as follows: yellow:1, green:2, blue:4 and red:8. The weights of both masks have to be divided by the sum of all values of the mask.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :</head><label>8</label><figDesc>Some filter masks in 3D. The rotation bottom left is approximately what one would describe as a swirl. But it also responds to homogeneous flows. Thus the rotation top left and right is more suited as a similarity mask for rotations as it doesn't respond to homogeneous flows. Bottom right is a convergent flow mask.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>First of all, we like to thank the members of the FAnToM development team at University of Kaiserslautern, especially Tom Bobach, Christoph Garth, David Gruys, Kai Hergenröther, Max Langbein and Xavier Tricoche, for their help with programming and production of the pictures. We further acknowledge the fruitful discussions in the whole computer graphics group at Kaiserslautern. We thank Prof. Kollmann, MAE department, University of California at Davis, for producing the swirling jet data set. Further thanks go to Markus Rütten, DLR Göttingen, for providing the gas furnace chamber data set.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Clifford multiplication</head><p>Since Clifford algebra might be considered complicated, here is a hint on the implementation of the Clifford product. Let A = a 0 + a 1 e 1 + a 2 e 2 + a 3 e 1 e 2 and B = b 0 + b 1 e 1 + b 2 e 2 + b 3 e 1 e 2 be multivectors in 2D. Then a 0 , b 0 are scalars, a 1 e 1 , a 2 e 2 , b 1 e 1 , b 2 e 2 are vectors and a 3 e 1 e 2 , b 3 e 1 e 2 are bivectors. The Product AB can be computed as follows: AB = a 0 B + a 1 e 1 B + a 2 e 2 B + a 3 e 1 e 2 B = a 0 b 0 + a 0 b 1 e 1 + a 0 b 2 e 2 + a 0 b 3 e 1 e 2 +a 1 e 1 b 0 + a 1 e 1 b 1 e 1 + a 1 e 1 b 2 e 2 + a 1 e 1 b 3 e 1 e 2 +a 2 e 2 b 0 + a 2 e 2 b 1 e 1 + a 2 e 2 b 2 e 2 + a 2 e 2 b 3 e 1 e 2 +a 3 e 1 e 2 b 0 + a 3 e 1 e 2 b 1 e 1 + a 3 e 1 e 2 b 2 e 2 + a 3 e 1 e 2 b 3 e 1 e 2 = a 0 b 0</p><p>as e 1 e 1 = e 2 e 2 = 1 and e 2 e 1 = −e 1 e 2 as defined in section 3. The multiplication in 3D can be computed in the same way. The Clifford multiplication of two vectors a = a 1 e 1 + a 2 e 2 b = b 1 e 1 + b 2 e 2 in 2D is ab = a 1 e 1 b 1 e 1 + a 2 e 2 b 1 e 1 +a 1 e 1 b 2 e 2 + a 2 e 2 b 2 e 2 = a 1 b 1 + a 2 b 2 + (a 1 b 2 − a 2 b 1 )e 1 e 2 = &lt; a, b &gt; +a ∧ b</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Vortex Tracing In Scale-Space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dirk</forename><surname>Bauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ronald Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Association for Computational Machinery</title>
		<editor>D. Ebert, P. Brunet, I. Navazo</editor>
		<meeting><address><addrLine>New York, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
	<note>Data Visualisation</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Hypercomplex Spectral Signal Representations for the Processing and Analysis of Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Bülow</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<pubPlace>Germany</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Kiel</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD Thesis</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Signal Processing For Computer Vision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Gösta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Granlund</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hans Knutsson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Kluwer Academic Publishers</publisher>
			<pubPlace>Dordrecht, The Netherlands</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Three Dimensional Flow Characterization Using Vector Pattern Matching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Einar</forename><surname>Brandt Heiberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tino</forename><surname>Ebbers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lars</forename><surname>Wigström</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matts</forename><surname>Karlsson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<editor>David S. Ebert</editor>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="313" to="319" />
			<date type="published" when="2003" />
			<publisher>IEEE Computer Society Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">New Foundations For Classical Mechanics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Hestenes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Kluwer Academic Publishers</publisher>
			<pubPlace>Dordrecht, The Netherlands</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anil</forename><forename type="middle">K</forename><surname>Jain</surname></persName>
		</author>
		<title level="m">Fundamentals Of Digital Image Processing</title>
		<meeting><address><addrLine>Englewoods Cliffs, NJ, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Feature Extraction And Visualization Of Flow Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bernd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Berlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Germany</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Frits H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benjamin</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Helwig</forename><surname>Vrolijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">S</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Helmut</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Doleisch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Eurographics Association</title>
		<editor>Reports, D. Fellner, R. Scopigno</editor>
		<meeting><address><addrLine>Saarbrücken, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="69" to="100" />
		</imprint>
	</monogr>
	<note>Eurographics</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Automatic Extraction Of Vortex Core Lines And Other Line Type Features For Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Roth</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
		<respStmt>
			<orgName>ETH, Hartung-Gorre Verlag Konstanz</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD. Thesis</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Visualization of Higher Order Singularities in Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heinz</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Menzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alyn</forename><surname>Rockwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<editor>Yagel and Hans Hagen</editor>
		<meeting>IEEE Visualization<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="67" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Topological Vector Field Visualization With Clifford Algebra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">Will</forename><surname>Gerik Scheuermann ; Germany</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ken</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bill</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visualization Toolkit 2nd Edition</title>
		<meeting><address><addrLine>New Jersey, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Prentice Hall</publisher>
			<date type="published" when="1998" />
		</imprint>
		<respStmt>
			<orgName>University of Kaiserslautern,</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD. Thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Topology Simplification Method For 2D Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xavier</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visual</title>
		<editor>2000, D. Ebert, M. Gross, B. Hamann</editor>
		<meeting>IEEE Visual<address><addrLine>Los Alamitos CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="359" to="366" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
