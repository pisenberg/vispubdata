<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">MC*: Star Functions for Marching Cubes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Arizona State University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">MC*: Star Functions for Marching Cubes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:51+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: I.3.5 [Computer Graphics]: Computer Graphics -Computation Geometry and Object Modeling -surface</term>
					<term>solid and object representations Marching Cubes</term>
					<term>isosurfaces</term>
					<term>triangular mesh</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We describe a modification of the widely used marching cubes method that leads to the useful property that the resulting isosurfaces are locally single valued functions. This implies that conventional interpolation and approximation methods can be used to locally represent the surface. These representations can be used for computing approximations of local surface properties. We utilize this possibility in order to develop algorithms for locally approximating Gaussian and mean curvature, methods for constrained smoothing of isosurface, and techniques for the parameterization of isosurfaces.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The marching cubes (MC) algorithm <ref type="bibr" target="#b9">[Lorensen and Cline 1987;</ref><ref type="bibr" target="#b11">Nielson and Hamann 1991;</ref><ref type="bibr" target="#b14">Nielson 2003</ref>], is a widely used technique for computing triangular mesh isosurfaces from discretely sampled volume data over rectilinear lattices. In some applications it is desirable to locally approximate surface properties for the analysis and manipulation of these isosurfaces. We present a modification of the MC algorithm that facilitates this process. The modification guarantees that the isosurface is locally, a single valued function. This implies that conventional interpolation and approximation techniques may be used for the representation and computation of local surface properties. After describing the modified method in Section 2, we show examples using this new property in Section 3</p><p>In Section 3.1 we investigate methods for estimating curvataure. Gaussian curvature is an important intrinsic property of a surface and useful for surface analysis and manipulation. Technically speaking, a triangular mesh surface has zero curvature since it is comprised of planar facets, but using local approximations, we may view a mesh surface as discrete samples from a smooth surface from which we can compute estimations of curvature values.</p><p>Section 3.2 is devoted to segmented data which consists of a collection of voxels delineating a volume. The discrete and "blocky" nature of this representation presents challenges for rendering and perceiving these objects. We describe a collection of surfaces with a common edge topology that separates the voxels.. The local approximation, which is possible because of the function property of the star, defines a metric that guides the constrained fairing of these separating surfaces.</p><p>In Section 3.3, we discuss the problem of computing a parameterization of a triangular mesh isosurface. A triangular mesh that is a function has a natural parameterization from the projection on to its domain. We show how to take these local parameterizations and lift them to a global parameterization.</p><p>In the remainder of this section we introduce some necessary definitions and notations. Input to marching cubes algorithms consists of a three dimensional array of values ( )</p><formula xml:id="formula_0">z k y j x i F F k j i ∆ ∆ ∆ = , , , ,</formula><p>representing samples of a function over a rectilinear grid consisting of lattice points</p><formula xml:id="formula_1">( ) { } z y x N k N j N i z k y j x i L , , 1 ; , , 1 ; , , 1 , , , L L L = = = ∆ ∆ ∆ = .</formula><p>For a given threshold value, α , the MC algorithm produces a triangular mesh surface which separates the lattice points with</p><formula xml:id="formula_2">α &gt; k j i F , , from those with α ≤ k j , n i F , x</formula><p>. The basic strategy consists of producing fragments of the surface one voxel at a time. Details for the implementation of the MC algorithm can be found in <ref type="bibr" target="#b14">[Nielson 2003</ref>]. The geometry of a triangular mesh surface , consists of a list of vertices</p><formula xml:id="formula_3">V S ( ) N n z y n n n , , 1 , , , L = =</formula><p>and the topology consists of a list of triple indices, ( )</p><formula xml:id="formula_4">T N n n n n k j i 1 , , , , ,L =</formula><p>indicating that the surface contains the triangles with vertices and V . If V is a vertex of , then the star of V is consists of all triangles of that include V . We use</p><formula xml:id="formula_5">n i n i V V , n k n S n n S ( ) * n V</formula><p>to denote the star. The list of indices of the vertices of ( ) * n V connected by edges to V is called the contiguity list which is denoted by</p><formula xml:id="formula_6">n ( ) o n . The list of vertices V</formula><p>is called the onering of V . It is also useful to define ( )</p><formula xml:id="formula_7">( ) o n n n ∈ , { } n ( ) o n n n U = * .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">MC* Method</head><p>We first point out a shortcoming of the original MC method that the present method will eliminate. Consider the triangulation of configuration C14 of the original MC method shown in left of <ref type="figure">Figure 1</ref>. We consider the contribution of this surface fragment to the star of the vertex on the lower, front edge. It will contribute three triangles. The projected footprint of these triangles on the plane perpendicular to the edge containing this vertex clearly shows that these triangles overlap and so the star for this point can not be a function relative to this plane. An other example showing the complete star of a point is shown in the right image of <ref type="figure">Figure 1</ref>. This example also serves to point out that when the complete star is considered, even different directions of projection (different domain planes) do not alleviate the shortcoming. <ref type="bibr">IEEE Visualization 2003</ref><ref type="bibr">, October 19-24, 2003</ref>, Seattle, Washington, USA 0-7803-8120-3/03/$17.00 ©2003 IEEE <ref type="figure">Figure 1</ref>: Triangulations from the original MC method which do not produce isosurfaces whose stars are functions. Theorem 1. (MC*) Let S be the triangular mesh surface which results from applying the modified marching cubes, MC*, method with triangulations described in <ref type="figure" target="#fig_0">Figure 2</ref> to an arbitrary field function defined over the rectilinear la of ttice L . Let V be an arbitrary vertex of S, then the star, , is a function (height field) relative to one of the coordinate planes. More specifically, if is on the edge joining and (res and ; resp. and ) then the domain of is the xy plane (resp. x-z plane; resp. y-z plane). We will show that the following statements are true where "valid" means that a choice of triangulation will lead to an isosurface with the property that the stars of each vertex are functions relative to a coordinate plane.</p><formula xml:id="formula_8">n j i P , , ) * ( ) * n V i P n V k j , 1 , + k j i P , , 1 , , + k j p. k i P k j i P , , k P , j i , 1 + ( n V</formula><p>i) Any triangulation of the separate surface fragments of Configurations C2, C6, C8, C9, C10, C15 and C20 are valid.</p><p>ii) For each of the configurations C5, C12 and C17 there are five possible triangulations of the five-vertex bounded surface fragment. Three of these triangulations are valid. They are shown in <ref type="figure" target="#fig_0">Figure 2</ref>, C5, C12 and C17.</p><p>iii) Each of the configurations C11 and C14 have a total of 14 possible triangulations, but only two each are valid. These four valid triangulations are shown in <ref type="figure" target="#fig_0">Figure 2</ref>, two in row three and two in row six. iv) Configuration C16 has a total of sixteen possible triangulations, but only the triangulation shown is <ref type="figure" target="#fig_0">Figure 2</ref> is valid.</p><p>v) Configuration C19 has four possible triangulations. They are all valid, but for the results of Corollary 2, below, to hold, we only allow the two that are shown in <ref type="figure" target="#fig_0">Figure 2</ref>.</p><p>Proof. The proof consists of a case-by-case check of the claimed validity. Verifying all of the assertions of this theorem is tedious and not particularly illuminating and so we only include a sampling. We have already mentioned that some of the triangulations of C14 are not valid. We now argue why the triangulation shown in <ref type="figure" target="#fig_0">Figure 2</ref> is valid. We need to consider the six vertices of the isosurface fragment produced by this configuration and check that none of the projected triangles overlap. The vertices with only one triangle do not need to be checked. There are two vertices with two triangles and two vertices with three triangles. In the left image of <ref type="figure">Figure 3</ref>, we show the projection for each of these vertices and it is evident that there is no overlap. On the other side of matters, we show in the right image of <ref type="figure">Figure 3</ref>, a slightly different triangulation of C16 than that of <ref type="figure" target="#fig_0">Figure 2</ref>. We show just the projection of two of the triangles of the vertex on the back, top edge and, as one can see, this triangulation is not valid! <ref type="figure">Figure 3</ref>: The image on the left supports the fact that the triangulation of C14 is valid. The image on the right illustrates a non-valid triangulation of C16.</p><p>Corollary 2. For any vertex n V of a MC* triangular mesh surface (not on the boundary of L), there are always at least five and no more than thirteen vertices in the star, ( ) * V n . There are two each in the two coordinate planes containing n V which are orthogonal to the plane orthogonal to the edge containing n V . This situation is illustrated in <ref type="figure">Figure 4</ref>, where we show the star vertices projected onto the domain plane. The five with projections marked with black circles are guaranteed to exist. We call these the 4-star points and denote the collection of their indices with ( ) + n . The remaining star vertices (up to eight) are called the neighbor vertices and we denote this collection of indices with ( ) # n so that we have ( ) ( )</p><formula xml:id="formula_9">* n ∪ = + ( ) # n n C19 + C11 + C14 + C21 C22 C20 C0 C1 C2 C3 C4 C6 C9 C5 C8 C7 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19</formula><p>Figure 4: The domain of the star of a vertex has the five, 4-star vertices and up to eight additional neighbor vertices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Local Approximation as a Bivariate Function</head><p>Knowing that a star, n , of the isosurface, S, is a function means that we can use conventioal approximation techniques to locally represent S as the graph of a bivariate function</p><formula xml:id="formula_10">( ) * V ( ) ( ∑ = = y x b z y x S S i i , ,<label>. ) )</label></formula><p>There are a great number of possible choices for the basis functions . For example, tensor product splines</p><formula xml:id="formula_11">( y x b i , ( ) ∑ ∑ = = − − + + + + = 3 1 3 3 3 1 00 00 00 00 , j j i ij i y y x x e xy d y c x b a y x S 3 , 2 , 1 , = = i x x i 3 , 2 , 1 , = = j y y j</formula><p>with the knot lines and . Or the radial basis functions of the thin plate splines, <ref type="bibr" target="#b3">[Franke and Nielson 1991;</ref><ref type="bibr" target="#b12">Nielson 1993;</ref><ref type="bibr" target="#b13">Nielson 2000]</ref> ( ) ( ) ( ) ( )</p><formula xml:id="formula_12">y x d y x d e by bx a y x S i i i i , ln , , * 2 ∑ + + + = ( ) ( ) ( ) ( ) n ∈ where i i i y x y x y x d . , , − = and the knots ( ) ( ) * , , n j y x i i ∈ C ( ) z k</formula><p>are specified. We have also used piecewise triangular interpolants to construct bivarite approximations. The most convenient , triangular interpolant for this purpose is the 9-parameter C interpolant described in <ref type="bibr" target="#b3">[Franke and Nielson 1991]</ref>. In addition to these general approaches, we describe a bivariate polynomial scheme that we have found useful. It is unique to the present situation and we now describe the construction of this interpolant. Without loss of generality assume that V is on an edge joining the lattice point and</p><formula xml:id="formula_13">1 ∆ n x ( ) z k y j x i ∆ ∆ ∆ , , y j i ∆ + ) 1 ( , , s ( ) i i y x , = ∆ i p ∆ o t h a t . For</formula><p>, we let so that .</p><formula xml:id="formula_14">( ) n ( ) n i ∈ ( ) i i z p , n z y j x i V , , ∆ ∆ = ( ) i i i i z y x V , , = = *</formula><p>As was noted in Corollary 2, all of the points</p><formula xml:id="formula_15">( ) * , n p ∈ α α</formula><p>lie on the union of the six lines</p><formula xml:id="formula_16">( ) ( ) ( ) ( ) y j y y y y j y x i x x i x x i x ∆ + = = ∆ − = ∆ + = ∆ = ∆ − = 1 , , 1 ; 1 , , 1</formula><p>j∆ We now set out to establish the existence of a polynomial interpolant by describing the construction of the cardinal basis functions that have the property</p><formula xml:id="formula_17">( y x b m , ) . (1) ( )    ≠ = = = β α β α δ β α β α 0 1 , , p b n</formula><p>We will use the normalized, local coordinates</p><formula xml:id="formula_18">x x i x u ∆ ∆ − = , y y j y v ∆ ∆ − = .</formula><p>As an example, we consider the case where α is on the line p</p><formula xml:id="formula_19">( ) x i x ∆ − = 1</formula><p>and not on any of the er five lines. We first construct a univariate polynomial q with the property that oth ( )</p><formula xml:id="formula_20">y ( ) 1 = α and p q ( ) 0 = β p q</formula><p>for all other on this line. Then we can see that</p><formula xml:id="formula_21">β p ( ) ( )( )( ( ) ) α α α v v v v u u x q y x b n − − − = 3 3 2 , ,</formula><p>2 has the desired interpolations properties of (1). The local, normalized coordinates of are</p><formula xml:id="formula_22">α p ( ) α v , 1 −</formula><p>The construction is slightly different for this case where α is at the intersection of two of these lines. <ref type="bibr">For</ref>  </p><formula xml:id="formula_23">( ) 0 = p q α p ( ) y j y ∆ + = 1</formula><p>. Now we can see that</p><formula xml:id="formula_24">( ) ( ) ( ) ( )( 2 2 1 0 , 1 4 , u v v x q y q y x b n − +       + = α )</formula><p>has the correct interpolation properties of (1). We note, that in this construction, if there are no vertices of the star on some of the lines, then the associated factors are not included in the basis function definitions. Once all the cardinal basis functions have been found, we may locally represent the isosurface as</p><formula xml:id="formula_25">( ) ( ) ( ) j i j i ij n n y x a y x b z y x S ∑ ∑ = = ∈ , * , , , α α α</formula><p>where the ij are computed through the change of basis process. In this form, it is an easy matter to extract interesting derived quantities from the surface. We describe some possibilites in the next three sections. a</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Computation of surface curvatures</head><p>Gaussian curvature and related concepts have provided useful surface interrogation and manipulations techniques <ref type="bibr" target="#b1">[Dyn et al. 2001;</ref><ref type="bibr" target="#b5">Hagen et al. 1993</ref>].</p><p>For a surface with the parametric representation</p><formula xml:id="formula_26">( ) ( ) ( ) ( ) ( ) v u z v u y v u x v u S , , , , , , = ,</formula><p>the Gaussian curvature is given as</p><formula xml:id="formula_27">( ) ( ) 2 2 2 ) , ( , ) , )( , ( v u v u uv vv uu S S S S S N S N S N S K − − = 2 and the mean curvature is given by ( ) ( ) ( ) ( ) 2 2 2 ) , ( 2 , , ) , ( 2 ) , ( v u v u v uu v u uv u vv S S S S S N S S S N S S N S M − + − = 2 2 S where the normal vector v v u S S S S N ⊗ = . u ⊗</formula><p>In the special case where S is locally a function, we have that</p><formula xml:id="formula_28">( ) ( ( ) v u z v u v u S , ,<label>, , ) =</label></formula><p>and so the above equations reduce to we sampled F on a lattice and used the above methods to compute approximations to the Gaussian curvature. In <ref type="table" target="#tab_3">Table 1</ref>, we give some typical results. For comparison, we also include some approximations using the discrete curvature technique discussed by <ref type="bibr" target="#b1">Dyn et al. [2001]</ref> that, also, only utilizes star vertices, but applies to a general triangular mesh. The results of <ref type="table" target="#tab_3">Table 1</ref>    </p><formula xml:id="formula_29">( ) 1 , , 1 1 2 2 v u v u z z z z N − − + + = ,<label>( ) ( ) ( ) 2 2</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Fairing of Segmented Data</head><p>In this section we described how to use the present techniques to smooth a triangular mesh surface containing a segmented volume. In this context, a segmented volume is simply a binary enumerated volume. That is, a set of distinguished lattice points ) lying in a volume of interest. We use V to denote this set so that the associated field function is defined as</p><formula xml:id="formula_30">( z k y j x i ∆ ∆ ∆ , ,<label>( ) (</label></formula><formula xml:id="formula_31">) ( )    ∉ ∆ ∆ ∆ ∈ ∆ ∆ ∆ = ∆ ∆ ∆ = V z k y j x i V z k y j x i z k y j x i F F k j i , , , 0 , , , 1 , ,<label>, , .</label></formula><p>A separating surface is a surface which separates the lattice points in the volume from those not in the volume. It is easy to find such a separating surface for binary enumerated volumes by simply computing the isosurface with MC* method applied to this data with a threshold value of 0.5. We call this the midpoint surface. While this triangular mesh surface does indeed yield a separating surface, it is not very visually appealing and often difficult to perceive due to its "blocky" nature. Actually any triangular mesh surface with the topology of the midpoint surface and vertices constrained to be on the edges containing the vertices of the midpoint surface will be a valid separating surface. We denote this collection of triangular mesh surfaces as</p><formula xml:id="formula_32">( ) ( ) V S V S N δ δ δ δ , , , ; , L 2 1 =</formula><p>where the s ' δ are used to specify the actual position of a vertex on an edge. For example, if n V is on the edge joining ( )</p><formula xml:id="formula_33">z k∆ y j x i ∆ ∆ , ,</formula><p>and</p><formula xml:id="formula_34">( ) ( ) z k y j x i ∆ + ∆ , , t ∆ h e n ( ) ( ) ( ) ( ) ( ) ( ) z k y j x i z k y j x i z k y j x i V n n n n ∆ ∆ ∆ = ∆ + ∆ ∆ − + ∆ ∆ ∆ = δ δ δ , , 1 , , 1 , ,</formula><p>. + This leads to the constrained optimization problem,</p><formula xml:id="formula_35">Min ( ) S ρ subject to ) ( δ , V S S ∈<label>(2)</label></formula><p>where ( ) S ρ incorporates the desirable fairing properties. One possible candidate is the spline-in-tension functional <ref type="bibr" target="#b3">[Franke and Nielson 1991]</ref> which is a combination of the thin plate and the Dirichlet energy functional</p><formula xml:id="formula_36">( ) ( ) 2 2 2 2 1 ∫ ∫ ∇ + + S S k S k τ (3) where ( ) S k 1 and ( ) S k 2</formula><p>are the principal curvatures being the eigenvalues of the shape operator <ref type="bibr" target="#b4">[Gray 1998</ref>], </p><formula xml:id="formula_37">( ) ( ) ( ) S k S k S K 2 1 = , ( ) ( ) ( ) 2 2 1 S k S k S M + = which imply that ( ) ( ) ( ) (S K S M S k S k 2 4 2 2 2 2 1 − = + ).</formula><p>We can use the techniques of the previous section to obtain local approximations of the curvatures and gradient of S and arrive at the following discrete fairing functional,</p><formula xml:id="formula_38">( ) ( ) ( ) [ ] ( ) [ ] ∑ ∫ ∫ ∑ ∇ + + = = n n n n n n n S S k S k S S 2 2 2 2 1 τ ρ ρ .<label>(4)</label></formula><p>And now some comments about our general strategy to solve the constrained optimization problem of (2). A solution to (2) consists of finding the values 0</p><formula xml:id="formula_39">1 ≤ ≤ i δ that minimize ( ) ( )( ) N i S S δ δ δ ρ ρ , , , , L L = .</formula><p>1</p><p>We use conventional univariate optimization methods to sequentially solve</p><formula xml:id="formula_40">Min ( ) δ ρ n subject to 1 0 ≤ ≤ δ where ( ) ( )( ) N n n n S δ δ δ δ δ ρ δ ρ L L , , , , , 1 1 1 + − = .</formula><p>This only requires the computation of</p><formula xml:id="formula_41">( ) ( ) * , i j ∈ δ ρ 256 256 × j .</formula><p>One full sweep through all the vertices constitutes one iteration. In <ref type="figure" target="#fig_3">Figure  6</ref>, we show some results of this method of fairing. The data consists of a binary array of size 124 representing a segmented brain with a tumor removed <ref type="bibr" target="#b8">[Kaus et al. 2001;</ref><ref type="bibr" target="#b18">Warfield et al. 2000]</ref>. In the top image is the midpoint surface which serves to define the segmented data. In the lower images we show some typical results of the smoothing/fairing process. This next example illustrates a unique feature of representing surfaces as isosurfaces. The isosurface shown in <ref type="figure">Figure 7</ref> was obtained by using extended boolean operations on the field function of the volume model <ref type="bibr" target="#b12">[Nielson 1993;</ref><ref type="bibr" target="#b13">Nielson 2000]</ref>, followed with quantized, contrained smoothing applied to the isosurface of the resulting field function. <ref type="figure">Figure 7</ref>: Volume model after quantized, constrained fairing has been applied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Parameterization of Isosurfaces</head><p>A parameterization is a 1-1 map from the surface S to its parameter domain P which we denote by</p><formula xml:id="formula_42">( ) V p Φ =</formula><p>where S V ∈ and P p ∈ . If has a boundary, S S ∂ , then the image of ( ) S ∂ Φ must be P ∂ , the boundary of P which we assume is a convex polygon. Let denote the boundary indices where</p><formula xml:id="formula_43">∂ ∂ ∈ i provided ( ) S V i ∂ ∈ .</formula><p>Often, it is desirable to have a "good" parameterization, which, for example, minimizes distortion or approximately preserves area ], angles <ref type="bibr" target="#b15">[Polthier 2002]</ref>, or shape <ref type="bibr" target="#b2">[Floater 1997</ref>]. These types of optimal properties can be involved by the use of energy and/or cost functionals. We consider the general problem</p><formula xml:id="formula_44">Min ( ) 2 , Φ = Φ Φ subject to ( ) P S ∂ = ∂ Φ .<label>(5)</label></formula><p>For example, many have used the innerproduct</p><formula xml:id="formula_45">( ) ∫       ∂ Ψ ∂ ∂ Φ ∂ + Ψ ∂ ∂ Φ ∂ = Ψ Φ y y x x , ∂</formula><p>which is associated with Dirichlet energy functional and whose extrema are harmonic functions in the kernel of the Laplacian</p><formula xml:id="formula_46">0 2 2 2 2 2 = ∂ Φ ∂ + Φ ∂ = Φ ∇ = ∆Φ y . ∂x</formula><p>S is a triangular mesh surface, and so we require that the topology inherited by the parameter values</p><formula xml:id="formula_47">( ) i i V p Φ =<label>(6)</label></formula><p>be a valid triangulation in the parameter domain. It has been noted <ref type="bibr" target="#b2">[Floater 1997</ref>] that the proof of <ref type="bibr" target="#b17">Tutte [1963]</ref> for straight line drawings of planar graphs actually holds more generally and consequently guarantees that the triangulation condition will hold provided the parameter values satisfy equations of the form (7)</p><formula xml:id="formula_48">∂ ∉ = = ∑ n N n p p ; , , 1 , L α ∂ ∈ = α , p p ( ) i o n i i n n , ∈ α α where 0 , &gt; i n α and . ( ) ∂ ∈ ∀ = ∑ ∈ n o n i i n , 1 , α Φ Now let's consider</formula><p>restricted to the star of n V . Since we know that S is a bivariate function with respect to one of the coordinate planes, we can represent the restriction of to this domain in the form</p><formula xml:id="formula_49">Φ ( ) ( ) ( ) ( ) ( y x y x S y x V n V n , , , , * Φ = Φ = Φ ).</formula><p>This allows for the important property that may be considered to be a function of the same domain as S. Using bivariate basis functions, , with the properties</p><formula xml:id="formula_50">Φ ( ) y x b i n , , ( ) * n i ∈ ( )    ≠ = = = j i j i y x b ij j j i n 0 , 1 , , δ for ( ) * n j ∈ ,</formula><p>we may obtain a local approximation to which can be written in the form</p><formula xml:id="formula_51">Φ ( ) ( ) ( ) ( ) ( y x b V V i n n i i n V , , * * ∑ ∈ Φ = Φ</formula><p>).</p><p>( <ref type="formula">8)</ref>We now use the interpolation requirements of (6) to conclude that</p><formula xml:id="formula_52">( ) ( ) ( ) ∑ ∈ = Φ * , * n i n i n V b p V . i</formula><p>Using this representation for Φ in (5) we arrive at the quadratic minimization problem</p><formula xml:id="formula_53">Min subject to ( ( ) j N n n j i j n i n i p p p p b b p N ∑ ∑ = ∈ 1 , , , , , , * 2 1 , min L ) ∂ ∈ = i p p i i , .<label>(9)</label></formula><p>The necessary conditions for a minimizer of (9) are</p><formula xml:id="formula_54">(10)<label>( ) ( ) ( )</label></formula><formula xml:id="formula_55">∂ ∉ = ∈ = ∑ ∈ n N n n i b b p n j j n i n i ; , , 1 , , 0 , * * , , L ∂ ∈ = α , p p α α .</formula><p>On the other hand, if the Euler-Lagrange equation is known for 2 , this can be imposed as a necessary condition on Φ Φ in the form given by (8). For example, in the case of the Dirichlet energy functional, the Laplacian is the Euler-Lagrange equation and so we have the conditions,</p><formula xml:id="formula_56">(11) ( ) ∂ ∉ = ∆ = ∑ ∈ n N n b p n i i n i ; , , 1 , 0 * , L ∂ ∈ = α p p α α .</formula><p>Both (10) and (11) are of the form of (7). Whether or not they actually represent a strictly convex relationship as in (7), depends upon the specific properties of the basis functions and the functional .</p><p>We now describe a collection of methods that utilize the properties of the basis function i n, more directly. They are also related to the concept of generalized barycentric coordinates. Assume that the interpolation scheme based upon the has linear precision, that is</p><formula xml:id="formula_57">( y x b , ) ( ) o i n n i b ∈ ,<label>, ( ) ( ) ∑</label></formula><formula xml:id="formula_58">∈ = o n i i n y x b , 1 , , ( ) ( ) ∑ ∈ = o n i i y x b x x ,<label>, ( ) ( ) ∑</label></formula><formula xml:id="formula_59">∈ = o n i i n i y x b y y , , . i n, In particular (12) ( ) ( ) ( ( ) ∑ ∑ ∈ ∈ =         =         = o n i n n i n i o n i n n i n i i n n n y x b p y x b y x y x p , , , , ( ) n y x , )</formula><p>and so we can see that the values n i n b , serve a role similar to generalized barycentric coordinates for n relative to the points of its one-ring. If in addition, we have that , n n i n then we know that the equations of (12) along with the boundary conditions will uniquely characterize a valid triangulated parameterization. The Wachpress interpolant <ref type="bibr" target="#b0">[Desbrun et al. 2002;</ref><ref type="bibr" target="#b10">Meyer et al. 2002</ref>] and Sibson's natural neighbour interpolant <ref type="bibr" target="#b16">[Sibson 1981</ref>] have this property. <ref type="bibr" target="#b2">Floater [1997]</ref> mentions the problems of directly projecting the star onto a plane and uses a method proposed by <ref type="bibr" target="#b19">Welch and Witkin [1994]</ref> based upon the geodesic polar map. Here, that is not necessary since we have the natural local coordinates provided by the fact that S is locally a function.</p><formula xml:id="formula_60">p b ( ) 0 , &gt; y x</formula><p>Even though we required linear precision in the above motivation, it is not always necessary. For example, the well known Shepard's method <ref type="bibr" target="#b12">[Nielson 1993]</ref> where</p><formula xml:id="formula_61">( ) ( ) ( ) 2 0 , , , , ≤ &lt; − − = = ∑ ∈ − µ µ o n i i i i n i n p p p p p b y x b −µ</formula><p>has the strictly positive convex combination property so that we are guaranteed that a solution to the system of equations</p><formula xml:id="formula_62">( ) ( ) i n i n i i n i n n p p p p p p o o ∑ ∑ ∈ ∈ −           − − = µ −     µ (13)</formula><p>along with the boundary conditions will lead to a parameterization of S. We should point out that while (13) appears similar to the weighted least square method of <ref type="bibr" target="#b2">[Floater 1997]</ref>, the difference here is that the distances of (13) are based upon points in the local domain of S rather than distance in the 3D space of the surface S and thus allowing the present methods to take advantage of the local function properties of S which leads to better parameterization results.</p><p>And now some typical results of our comparisons. We first note, that generally speaking, and from a global point of view, none of the various parameterization techniques based upon (7) with a common boundary (including the new ones presented here) give radically different results. They only differ locally, but this can be very important to the success of a particular parameterization depending upon the application. In <ref type="figure" target="#fig_4">Figure 8</ref>, we show the results of the DCP (discrete conformal parameterization) of <ref type="bibr">[Poltheir 2002]</ref> in the middle image and the present approach based upon (11) in the bottom image. As a side note, we have found that illustrating parameterization with triangulations is not very useful because, if anything other than trivial examples are used, the images are complicated and extremely difficult to compare. We have found contours allow for effective visual comparisons. Globally the parameterizations of <ref type="figure" target="#fig_4">Figure 8</ref> are similar, but with the expected local improvement of the present methods with smoother contours. But we must remember that while the present methods are simpler, more efficient and typically give better local results, they only apply to surfaces that are isosurfaces computed by the modified version of the MC method described here!   Many of the methods we have mentioned have natural extensions to a spherical and other higher genus parameter domains. Those that are based upon distances simply can be extended by the use of geodesic distance. This includes those that are based upon Dirichlet tessellations. While we have not included formal proofs of the validity of these methods, they are sufficiently interesting so as to justify including them here. In <ref type="figure" target="#fig_5">Figure 9</ref>, we show some results using the spherical version of the natural neighbour interpolant <ref type="bibr" target="#b16">[Sibson 1981]</ref>. For the images of <ref type="figure" target="#fig_5">Figure 9</ref> and <ref type="figure" target="#fig_6">Figure  10</ref>, a triangle in the parameter domain inherits the illumination color from the original surface. Also, corresponding contours are included.</p><p>In the example of <ref type="figure" target="#fig_6">Figure 10</ref>, we combine the techniques of fairing of the previous section and the techniques of parameterization of this section. We start with binary segmented data. In this case a brain that has been segmented <ref type="bibr" target="#b7">[Hu et al. 2003</ref>] from MRI data. We then solve the constrained minimization problem ( 5 . = τ ) to obtain a smooth separating surface. This separating surface is then parameterized (using (13) with 2 = µ ) over spherical domain and then the shading of the smoothed surface is used to shade the flattened brain in the parameter domain. Conformal methods for spherical domains have been discussed by <ref type="bibr" target="#b6">Haker et al. [2000]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Summary and Remarks</head><p>We have described an enhancement of the marching cubes method that leads to isosurfaces that are locally functions. We have shown the advantages of this enhancement through examples of the development of new applications algorithms. Our new method of estimating curvature has been shown to be superior to existing techniques for the case where the triangular mesh surface is an isosurface. New methods of smoothing triangular mesh isosurfaces based upon constrained optimization methods lead to smooth separating surfaces which maintain the integrity of separation of segmented volume data sets. Additionally, these new methods apply to the general case of binary, enumerated volumes. The function property of isosurfaces provides an intrinsic local parameterization that can be naturally lifted to a global parameterization.</p><p>We showed examples where the parameter domain is a topological disc or sphere, but there is nothing in the basic approach that limits it from parameter domains of higher topological genus. We showed examples of methods combining the parameterization with the fairing techniques leading to methods for morphing segmented data sets. This is potentially useful for the problem of brain morphing.</p><p>We are currently working on the development of techniques in the areas of compression and multiresolution models which take advantage of the function property provided by the MC* method and we have ideas for several other applications, but, possibly it was best said by the anonymous senior reviewer: "I'm sure the core idea will find many applications not obvious at this time: it is simply a great enabling idea that should be part of everyone's mental toolbox."</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Triangulations for the MC* method.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 5 :</head><label>5</label><figDesc>Gaussian curvature and estimation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>τ is the tension parameter. The principal curvatures are related to Gaussian and mean curvature by means of the equations</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>×Figure 6 :</head><label>6</label><figDesc>Top image defines a binary enumerated model with the midpoint surface. The two middle images are the contrained faired separating surface with 0 = τ and the bottom image shows the results of the constrained fairing process with 13 . 0 = τ .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 :</head><label>8</label><figDesc>Two parameterizations of an isosurface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>Isosurface parameterised over a spherical domain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 10 :</head><label>10</label><figDesc>A binary enumerated volume is smoothed and then parameterised over a sphere.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Using the polynomial approximation methods described in the previous section, we obtain methods for estimating curvature. A torus is in interesting test case since it has regions of postive (elliptic), negative (hyperbolic) and zero (parabolic) Gaussian</figDesc><table><row><cell>M</cell><cell cols="4">( ) S</cell><cell cols="2">=</cell><cell></cell><cell>z</cell><cell cols="3">vv</cell><cell cols="6">( ) 2 2 1 u z +</cell><cell>( 1 −</cell><cell>2 +</cell><cell cols="4">2 u uv z z</cell><cell cols="2">u + z</cell><cell>2 v v z z</cell><cell>) 5 . 1 z +</cell><cell>uu</cell><cell>( ) 2 1 v z +</cell></row><row><cell cols="5">curvature. Given</cell><cell></cell><cell cols="2">a</cell><cell></cell><cell></cell><cell cols="5">and</cell><cell>b</cell><cell cols="5">with</cell><cell></cell><cell></cell><cell cols="3">( a b ≤ )</cell><cell>the isosurfaces of the</cell></row><row><cell>field function</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">F</cell><cell>(</cell><cell>x</cell><cell cols="2">,</cell><cell>y</cell><cell>,</cell><cell cols="2">z</cell><cell cols="2">)</cell><cell cols="2">=</cell><cell>z</cell><cell>2</cell><cell>+</cell><cell cols="2">  </cell><cell cols="2">x</cell><cell cols="2">2</cell><cell cols="3">+</cell><cell>y</cell><cell>2</cell><cell>−</cell><cell>a</cell><cell>  </cell><cell>2</cell><cell>−</cell><cell>b</cell><cell>2</cell></row><row><cell cols="4">are tori. Using</cell><cell></cell><cell></cell><cell cols="2">a</cell><cell cols="3">=</cell><cell cols="2">. 7</cell><cell cols="2">0</cell><cell cols="4">and</cell><cell cols="3">b</cell><cell cols="3">=</cell><cell>0 . 3</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>K</cell><cell>S</cell><cell>=</cell><cell>1 uu z + z</cell><cell>vv z</cell><cell>2 u − +</cell><cell>v uv z z</cell><cell>2</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>and</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table l :</head><label>l</label><figDesc></figDesc><table /><note>Comparison of methods of approximating curvature.</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We wish to acknowledge the support of the Office of Naval Research (N00014-97-1-0243 &amp; N00014-00-1-0281), the National Science Foundation ( NSF IIS-9980166 &amp; ACI-0083609) and DARPA ( MDA972-00-1-0027). We wish to thank Drs. S. Warfield, M. Kaus, R. Kikinis, P. Black and F. Jolesz for sharing the tumor database. Thanks to R Holmes, J. Hu, A. Huang, Y. Lu, M. Phielipp, and S. Sylvester for their help.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Intrinsic parameterizations of surface meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="666" to="911" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Optimizing 3D triangulations using discrete curvature analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dyn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hormann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S-J</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematical Methods for Curves and Surfaces</title>
		<editor>T. Lyche &amp; L. L. Schumaker</editor>
		<meeting><address><addrLine>Oslo</addrLine></address></meeting>
		<imprint>
			<publisher>Vanderbilt University Press</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="135" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Parametrization and smooth approximation of surface triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Floater</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="231" to="272" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Scattered data interpolation: A tutorial and survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric Modeling: Methods and Applications</title>
		<editor>H. Hagen and D. Roller</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="131" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gray</surname></persName>
		</author>
		<title level="m">Modern Differential Geometry of Curves and Surfaces</title>
		<imprint>
			<publisher>CRC Press</publisher>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Variational surface design and surface interrogaton</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hahmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G.-P</forename><surname>Bonneau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="447" to="459" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Conformal surface parameterization for texture maping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Haker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Angenent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tannenbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sapiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="181" to="189" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Volume Segmentation Using Weibull E-SD Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Razdan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Farin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Page</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Capco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">G</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="320" to="328" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Segmentation of MRI of brain tumors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kaus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Warfield</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nabavi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Black</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Jolesz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Radiology</title>
		<imprint>
			<biblScope unit="volume">218</biblScope>
			<biblScope unit="page" from="586" to="591" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 87</title>
		<meeting>SIGGRAPH 87<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
	<note>Annual Conference Series</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Generalized barycentric coordinates or irregular polygons</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Graphical Tools</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="13" to="22" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The asymptotic decider: Resolving the ambiguity in marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;91</title>
		<meeting>Visualization &apos;91</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="83" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Scattered data modelling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="60" to="70" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Volume modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<editor>Graphics, M. Chen, A. E. Kaufman and R. Yagel</editor>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="29" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">On marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="283" to="297" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Polyhedral surfaces of constant mean curvature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Polthier</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
		<respStmt>
			<orgName>Habilitationsshcrift, Technische Universität Berlin</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">A brief description of natural neighbour interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sibson</surname></persName>
		</author>
		<editor>Interpreting Multivariate Data, D. V. Barnett</editor>
		<imprint>
			<date type="published" when="1981" />
			<publisher>Wiley</publisher>
			<biblScope unit="page" from="21" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">How to draw a graph</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Tutte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. London Math. Soc</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="743" to="768" />
			<date type="published" when="1963" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Adaptive, template moderated spatially varying statistical classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Warfield</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kaus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Jolesz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Med Image Anal</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="43" to="55" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Free-from shape design using triangulated surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="247" to="272" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 94</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
