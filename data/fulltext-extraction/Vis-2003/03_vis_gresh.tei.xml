<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualization, Optimization, and Business Strategy: A Case Study</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donna</forename><forename type="middle">L</forename><surname>Gresh</surname></persName>
							<email>gresh@us.ibm.com</email>
							<affiliation key="aff0">
								<orgName type="institution">IBM T.J. Watson Research Center Eugene I. Kelton † IBM Integrated Technology Services</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">IBM T.J. Watson Research Center</orgName>
								<address>
									<postBox>P.O. Box 218</postBox>
									<postCode>10598</postCode>
									<settlement>Yorktown Heights</settlement>
									<region>NY</region>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">IBM Integrated Technology Services</orgName>
								<address>
									<postCode>2020, 17050</postCode>
									<settlement>Tech-nology parkway, Mechanicsburg</settlement>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visualization, Optimization, and Business Strategy: A Case Study</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.6 [Computer Graphics]: Methodology and Techniques-Interaction techniques visualization</term>
					<term>information visualization</term>
					<term>optimization</term>
					<term>VisAD</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We describe a visualization application intended for operational use in formulating business strategy in the customer service arena. The visualization capability provided in this application implicitly allows the user to better formulate the objective function for large optimization runs which act to minimize costs based on certain input parameters. Visualization is necessary because many of the inputs to the optimization runs are themselves strategic business decisions which are not pre-ordained. Both information visualization presentations and three-dimensional visualizations are included to help users better understand the cost/benefit tradeoffs of these strategic business decisions. Here, visualization explicitly provides value not possible algorithmically, as the perceived benefit of different combinations of service level does not have an a priori mathematical formulation. Thus we take advantage of the fundamental power of visualization, bringing the user&apos;s intuition and pattern recognition skills into the solution, while simultaneously taking advantage of the strength of algorithmic approaches to quickly and accurately find an optimal solution to a well-defined problem.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The business problem with which our users are concerned is delivering computer hardware support in a way that is both cost-effective for the support provider and satisfactory to its customers. These two aspects of the problem are typically considered in two separate phases. First, a set of target service levels that is likely to be satisfactory to customers is established. Service targets are a promise to deliver a customer service representative (CSR) and a piece of hardware to a customer site within a very short period of time. For example, for a given class of critical machine parts, a set of target service levels might be</p><p>• 85% of customers receive the CSR and part within 2 hours</p><p>• 90% of customers receive the CSR and part within 4 hours</p><p>• 95% of customers receive the CSR and part within 12 hours Second, given this set of target service levels, an optimization algorithm determines how much hardware stock should be inventoried, and where. Particularly for the 2 hour and 4 hour service levels, it is infeasible to fly parts in from a central depot; they must be available locally so they can be moved by ground transportation. Yet, in this business context, the hardware stock can be very expensive, sometimes as much as tens of thousands of dollars per part. Thus it is important to inventory just the right amount of stock: enough to satisfy projected demand, but not so much that excessive cash is tied up in inventory.</p><p>Solving the stocking problem requires the use of sophisticated optimization techniques that have been developed previously by IBM. Given that there can be some 20,000 different parts to stock, and over 140 parts depots in the U.S. alone, this is a complex optimization problem. Other issues involved in solving the problem are the transportation infrastructure of a particular geographic region, the interrelation of different machine classes which might share a given part, the cost of moving the part from one depot to another, inventory expense, and so on. IBM's solution entails executing a large optimization run each week, the output of which specifies which new parts should be inventoried, and where. It may also recommend transferring parts from one depot to another. The use of sophisticated optimization algorithms, coupled with a "neighborhood" stocking strategy (in which multiple depots within a given radius of a customer location can be called on to provide a part) has led to the saving of approximately $5 million dollars a year for IBM, while maintaining or improving levels of customer service.</p><p>While the neighborhood optimization approach has already proven valuable, it does not by itself solve the entire business problem. It minimizes costs for a given set of service target goals, but provides no guidance for how the service target goals should be set in the first place. Due to the many non-linearities in the costs of providing service, two different sets of service level targets that may equally satisfactory to customers (e.g. a 2-hour target of 80% and a 4-hour target of 87%, vs. a 2-hour target of 75% and a 4-hour target of 98%) may differ in cost by a factor of two or three (in either direction). To address this need, we have coupled the optimizer with a visualization tool that allows a service strategist to understand the "landscape" of cost with respect to service levels. Using this tool, one can set cost-effective target levels, and balance a limited budget across the various machine classes, service regions, and customer service goals.</p><p>Visualization is necessary in this application because we do not have a straight optimization problem: the user doesn't have the ability to pre-specify the entire objective function. There is a benefit to the customer for a given service level. However this benefit has not been defined a priori by the customer (or the service strategist); it is hard to quantify mathematically, and they certainly don't want to think about the value of each of the possible combinations of service levels. They would rather see the costs first, so they can focus their thought on the region of space that is likely to matter, i.e., where the costs seem reasonable with respect to the service level. Thus visualization fills the gap between the user's overall goal and the ability to mathematically formulate the problem.</p><p>An outline of this paper is as follows: Section 2 describes our design goals, and why other systems fall short of meeting our design <ref type="bibr">IEEE Visualization 2003</ref><ref type="bibr">, October 19-24, 2003</ref>, Seattle, Washington, USA 0-7803-8120-3/03/$17.00 ©2003 IEEE criteria. Section 3 describes the application we have developed, discussing both the landscape views and the information visualization views included. Section 4 describes some of our planned future work. Finally, Section 5 summarizes the contributions of this work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Design Goals and Related Work</head><p>Because the rapid evolution of the technologies business has moved the product lifecycle for many products from decades to a few years, the decisions that must be made about product support are required to be in place within months of the decision to market these products. Prior tools available to our users offered at best a rough approximation of the costs of various support percentages and at worst an educated guess. This led to a rise in offerings that were unaffordable for the business to support over the lifecycle of the product.</p><p>Our overall goal was to build an application which would allow our users to rapidly determine accurate and affordable support strategies. These strategies can be reviewed throughout the product lifecycle to insure continued affordability in light of the shifting characteristics of the product base.</p><p>In terms of the interface design, an important goal was to have the visual representations be a natural outgrowth of the table views of the data with which the service strategists are familiar. A common and natural interaction mechanism is to be able to investigate data at various levels of "roll-up." That is, the strategists have the desire to look at costs across all machines of a particular type, across all of a particular region, across all of a particular vitality (importance), or across some combination of these. The interface must provide these choices in a natural and intuitive way, and the visual representations must seem as natural and intuitive as the table views. Thus we use the familiar table view as the "control widget" to any resulting visual representations. SQL queries to the database of cost information are launched by interaction with the tables, which in turn populate the visual representations.</p><p>Another design goal was to simplify the visualization task for the eventual inheritors of the application code, who are programmers, but who are not at all familiar with visualization (and don't want to be). Thus all of the visualization code was completely wrapped in easily callable modules with interfaces requiring only simple data structures (for example lists of two-dimensional points with associated data). Control of visual characteristics (such as axis labels, viewpoints, colormaps, etc.) is accomplished through simple get and set routines, so that as long as the overall structure of the visual representation remains the same, the visualization code does not need to be modified.</p><p>Finally, it was necessary to design the application so that a strategist using it can not only see the landscape of cost, but also use the insight obtained to set new targets, and see the resulting costs reflected back into the aggregates, and eventually the database. In this way, the tool can become a part of the budgeting process, as tradeoffs may need to be made in one machine class vs. another. Interactive picking is used to select points in the landscape to feed back into the table views of cost. Thus the strategist can interactively choose good candidate target levels using the visual presentations, and immediately see the effect of using those targets on the overall budget.</p><p>While various commercial OLAP packages are available to present visual representations of information in relational databases (e.g. <ref type="bibr">DataDesk [2003]</ref> and Alphablox <ref type="bibr">[2003]</ref>), by and large their visualization capabilities remain of the charting variety in order to support general relational data. The capabilities required for the work described here entails recognizing and exploiting the fact that a spatial representation of the underlying data makes sense and is of value. That is, costs can be expected to have a smooth and continuous relationship to the variables of target service levels. Since our users want to understand the landscape of cost vs. (primarily) two variables, two-hour service target and four-hour service target, we decided to visually represent the functional relationship of "xy" to "data," as, for example, by a surface in three dimensions. Thus we were led to using a scientific visualization toolkit, which we integrated with database access capability. Custom interface software allowed the proper interpretation of the data in a spatial framework. We also needed to be able to customize the visual presentations, offering custom colormaps, gridlines, marker points, etc. A scientific visualization toolkit was ideal for this purpose.</p><p>We note that the choice of a particular scientific visualization toolkit was made based on programming language and general functionality and usability, but that other toolkits (e.g. <ref type="bibr">AVS [2003]</ref> or Data Explorer <ref type="bibr">[2003]</ref>) could certainly also have been used. In any case, regardless of toolkit, significant amounts of custom code would be necessary to build the various requirements into our application, even when starting with a commercial product.</p><p>Other systems have also been designed to visualize the data in relational databases. Some examples are Polaris <ref type="bibr" target="#b13">[Stolte and Hanrahan 2000]</ref>, DEVise <ref type="bibr" target="#b9">[Livny et al. 1997]</ref>, and Rivet <ref type="bibr" target="#b3">[Bosch et al. 2000]</ref>. These systems define visual presentations which can be applied to general tabular and relational data. The Polaris system, in particular, develops an algebra of relationships which can be used to automatically create representations, which are tightly linked to the concepts of SQL queries. However, besides not being commercially available, Polaris would not provide the specific visual representations appropriate to our data, in particular the three-dimensional cost landscape which we will discuss.</p><p>An obvious question is how much of the landscape representation we require could be provided with other standard charting tools. While built-in charting features, such as those in Excel, can ostensibly render surfaces in three-dimensions, they are generally extremely limited in functionality, interactivity, and extensibility. For example, in this application, the surface to be realized is a generalized triangulation of an unevenly sampled set of points in twodimensions, which is not supported by the surface chart function in Excel. To create a rendering somewhat like the desired effect using Excel, it would be necessary to resample the actual data values to a regular grid; missing data values would not be rendered properly (two hour service target can not realistically be greater than the four hour service target), and there would be no interactivity in viewpoint, picking, or other custom features commonly provided by three-dimensional rendering and visualization libraries. Moreover, our users desired a fully customized application, not an Excel worksheet. The amount of data generated and to be considered is large, and, in order to allow the desired query capabilities, must reside in a database. The users also want to be able to use the application to directly modify the target service levels in their production database, after visual investigation. Thus we were led to consider custom visualization tools which could be integrated into a complete application.</p><p>In the realm of practical application of visualization to problems involving objective functions and optimization, <ref type="bibr" target="#b12">Sengupta and Styblinski [1997]</ref> discuss some simple representations which serve to visualize the underlying tradeoffs in a circuit design application, where multiple design goals are combined into a single objective function using weights. In particular, they use what they call "tradeoff matrices" to show the interrelationships between parameters at any particular point in the course of the solution. The results are used to adjust the weights in the objective function, by recognizing factors which can be given a higher weight without having too negative an effect on other parameters of the solution. In contrast, our work is not part of the formulation of the optimization run, but rather works to explore the results from the space of user-settable parameters. <ref type="bibr" target="#b4">Colgan et. al [1995]</ref> also describe a system for evaluating ciruit design parameters, where a "cockpit metaphor" is used to allow the user to symbolically see the interrelationships and sensitivities of the various parameters. Their focus is on helping the user to identify the particular parameters which are most important to study, rather than on precise parameter values. , <ref type="bibr" target="#b1">Anderson et. al [2000]</ref> and <ref type="bibr" target="#b11">Scott et. al [2002]</ref> describe systems for involving humans in optimization problems; however they focus on the solution of "hard" optimization problems, such as routing and scheduling. In these cases, humans can be used to move the algorithm out of a local minimum into which it may have fallen. This is in contrast to our work, where the optimization algorithms are not in question; rather the actual objective function cannot be quantified easily.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The SOS Application</head><p>The Service Offering Simulator (SOS) application is built in Java, and incorporates visual presentations from two different visualization libraries. The first is the Opal information visualization library, developed internally within IBM research (and discussed in <ref type="bibr" target="#b6">Gresh et. al [2002]</ref>). Opal provides a variety of automatically linked views of tabular data. The second library used is the VisAD visualization library <ref type="bibr" target="#b7">[Hibbard 1998</ref>], an open source package with a sophisticated and well developed data model. VisAD utilizes Java3D for interactive three-dimensional visualization on Windows, Linux, and SunOS operating systems.</p><p>SOS consists of two important components. The first is the data generation component, which uses special techniques in order to create the large amount of data necessary to fully explore the landscape of costs and service. Since the full run of the entire model, consisting of a single set of input target levels, takes on the order of hours to compute, a simplistic brute-force approach to creating the thousands of data points necessary is simply infeasible. In our solution, the full model is broken down into separate subproblems which may be assumed to be at least roughly independent. (In the prototype discussed here, the data consists of only the customer base in the northeast United States, consisting of two "regions" from the point of view of the model.) For example, one subproblem may consider just machine type "0094," for all the various vitality parts, for both geographic regions, while another, larger problem, may consider both machines "7010" and "8260", along with all of their associated subclasses of parts, since these two machines have been elsewhere determined to be inseparable from the optimization standpoint. Then an initial starting point for target service level is chosen and the smaller model is run for that set of targets. In contrast to the operational run, where integral solutions must be found (because, of course, it is necessary to determine an integral number of parts to move, or to obtain), in the simplified model, stocking values are allowed to be non-integral. This allows an incremental approach to be used to solve each new problem, where targets differ slightly from the previous solution. In addition to making the solution tractable, there are other justifications for using a non-integral approach here, including the fact that integral solutions would lead to non-meaningful discontinuities in cost that would serve to distract rather than enlighten the user.</p><p>In the initial prototype discussed here, there are approximately 400 smaller problems, and for each of those we compute the cost for approximately 250 combinations of service targets. Based on current priorities for our users, we focus on the landscape of costs for the 2 hour and 4 hour service targets. A chart showing the coverage for a typical problem is shown in <ref type="figure">Figure 1</ref>. Note that the target four hour service is of course always greater than or equal to the target two hour service, and that we sample more finely in the regions of high service levels (which is where costs are likely to increase rapidly).</p><p>The second part of SOS is the visualization interface. The interface accesses the generated data through SQL queries to a Mi- <ref type="figure">Figure 1</ref>: Coverage of service level targets, for the combinations of target service within 4 hours and target service within two hours. More cost points are computed at the high percentage target service levels (above 85%), where costs increase rapidly.</p><p>crosoft Access database containing the results of the optimization runs. The queries populate all of the views in the interface.</p><p>The initial interface window is shown in <ref type="figure">Figure 2</ref>. An interface much like this represents the approach attempted initially by our users. The goal was to open the interface with a representation of the data that would be familiar to the typical user. Thus interactive tables predominate, allowing the user to choose levels of aggregation. A given user might be interested in examining costs for all machines of a particular type, or for all machines in a particular region or for all machine parts of a particular "vitality," (i.e. importance), or for some combination of any of these. These choices are available directly from the initial window, and in turn influence subsequent views of the data.</p><p>The second table in <ref type="figure">Figure 2</ref> shows the details for all of the items currently aggregated into the highlighted line of the top table. Thus, we see that for machine=003509, there are actually two different classes being aggregated: one for service region (SR) 1 and one for region 2 (for this particular machine, there is only one vitality (V) assigned to its component parts, equal to 1). To delve further, the "Simulation Details" button allows the strategist to see all of the simulation results for all of the combinations of target service levels for the machine/vitality/region/etc. currently selected in the second table.</p><p>A simple two-dimensional plot shows the cost curve for the particular machine/region/vitality/etc. currently selected, and for a chosen service time frame. The user can switch to other service time frames using the radio buttons shown. The curve distills the information which the "Simulation Details" button would provide, by showing the results attributable to only the currently selected target. For example, when showing the 2-hour data, the 4-hour and 12-hour targets are set equal to the 2-hour target (thus adding no additional constraints to the problem). Similarly, when showing the 4-hour curve, the 2-hour target is set equal to zero, and the 12-hour target is set equal to the 4-hour target.</p><p>Both the curve and the top table reflect the current state of the SLO values, or "Service Level Objectives." On initial loading, these values represent the current set of target objectives for a particular machine, region, vitality, etc., as used in production. The cost (aggregated over the relevant subset of points) represented by this set of SLOs is displayed in the top table, and the position of the SLO for the machine shown in the curve is indicated by a red line 1 . In the course of using the application, the user has the opportunity to modify the targets to see the resulting effect on costs (to be reflected in the "NewCost" column). SLOs in the top table are aggregated overal all the subclasses contained therein, weighted by demand.</p><p>The initial interface window was designed to be familiar and to fit the paradigms that the users are used to; however it immediately points to the limitations of this simplistic view of the data. Generally, the user would like to set the SLO somewhere near the "knee" of the cost curve, just before costs start to rapidly increase. However the curve shows only one dimension of the cost landscape. It is impossible for the user to understand the interactions between different service target levels, such as various combinations of two hour and four hour targets. Also, other factors besides just the derivative of the curve or surface, such as customer expectations, marketing strategies, or product lifespan, need to be taken into account in setting the appropriate SLO. Thus we have a need for visualization and human judgement. <ref type="figure">Figure 2</ref>: Initial SOS Window. This "control window" allows the user to choose the level of aggregation and subsets to be viewed in other representations of the data. Cost is shown for the current target service levels (SLOs) in production. The red line on the curve represents the target service level for the machine/vitality/region/etc. shown. Simplistically, it is desirable to place the target level near the knee of the curve, before costs begin to rise rapidly. However actual "optimal" location will depend on many considerations of customer expectations, cost, etc., as well as the cost behavior of the 4 and 12-hour targets. Thus this simple representation of the data does not serve to show the user the implications of combinations of various target service levels. <ref type="bibr">(Mach=Machine, SR=Service Region, V=Vitality, SP=Service Plan, Mod=Model)</ref> vice objectives, shown in this paper are for example purposes only, and do not represent actual targets currently used. Similarly, machine names have been altered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Three-Dimensional Views</head><p>The primary motivation for using a three-dimensional visual representation, such as those provided by VisAD, is to allow the user to better visualize the multidimensional landscape of cost vs. service targets, particularly the two-hour and four-hour targets. Thus a fundamental representation we produce is that shown in <ref type="figure" target="#fig_0">Figure 3</ref>, left side. This view is available using the "3D View" button in the initial window. Here we provide two views of the landscape, one above the other: a three-dimensional view, with redundant encoding of cost using both height and color, and a flat view, colored by cost, and annotated with contour lines, The views in this panel are completely interactive, with rotation, zooming, and translation provided by the VisAD infrastructure, which uses Java3D. For the three-dimensional view, grid lines are additionally added for ease in finding particular xy (2 hour/4 hour) points. Picking in either view allows the user to interactively query data values using the mouse, as well as use those values to be fed back into the cost profile, if desired. Shown in <ref type="figure" target="#fig_0">Figure 3</ref> is a blue to yellow colormap, with luminance monotonically increasing; other colormaps are provided as an option. Options are also available to cull the data to a smaller subset. This is particularly useful when the data shows a high degree of variability, as in <ref type="figure" target="#fig_0">Figure 3</ref>. A user can choose to disregard, for example, two-hour target levels greater than 75%, given that they clearly are leading to rapidly escalating costs, and see the landscape without those points, as shown on the right side. <ref type="figure" target="#fig_0">Figure 3</ref> shows the cost vs. service landscape for a single machine/region/vitality/etc. While useful, strategists typically deal on a much higher level of aggregation when setting target service levels. For example, they may be interested in setting a global strategy for all machines in the RISC System 6000 class, perhaps differentiated by region (as some regions, e.g. the northern plains, are more difficult or costly to service in a short time frame due to transportation infrastructure issues or low density of customers). Thus we also provide views of the landscape of aggregated costs, as shown in <ref type="figure" target="#fig_1">Figure 4</ref>. This view is available from the "Aggregate View" button of the initial window. The data comprising this view is exactly the same as that included in the top table of <ref type="figure">Figure 2</ref>; that is, all machines which have been aggregated into the selected row of the table would used to populate <ref type="figure" target="#fig_1">Figure 4</ref>. In this example, we are looking at all the machines of type 4010, over all of the various regions, vitalities, etc. The SLO displayed as a line and marker is a demand-weighted average of the SLOs in the aggregation.</p><p>To highlight the way in which the three-dimensional views can quickly present the fundamental relationships between cost and service targets, consider the images shown in <ref type="figure" target="#fig_2">Figures 5 and 6</ref>. Immediately we see two fundamentally different shapes of the cost landscape. For the case of the machine type shown in <ref type="figure" target="#fig_2">Figure 5</ref>, cost is primarily influenced by the two hour service target level, and is relatively insensitive to the four hour target level, except as the four hour target reaches beyond approximately 85%. In contrast, <ref type="figure" target="#fig_3">Figure 6</ref> shows a completely different behavior, with cost entirely dependent on the four-hour target, and insensitive to the two-hour target. This may seem rather surprising, and in fact it is surprising. What is occurring in this latter case is that while two hour targets can be set to various values, the actual achieved two hour service is equal to whatever the four hour target is set to. Thus, whether we target 2 hour service at zero or at 50%, the actual achieved 2 hour service will simply be equal to whatever the four hour target is set to. In fact a choice in the panel allows the user to see the results plotted vs. achieved values instead of targeted values; in this case the result would be a degenerate line along the diagonal. Finding this simple yet important characteristic of the cost behavior becomes quite straightforward with the visual representation shown.    </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Opal Visualizations</head><p>In addition to views of the cost landscape, the SOS application also provides more general visualization capabilities of our data, which we use in highlighting outliers and focussing on the particular machines, classes, or regions which are, for example, contributing most to costs. Several interfaces are available in SOS, but here we will focus on the SLO Details panel, its name indicating that this panel displays the costs associated with the current set of service objectives for the various parts under consideration. This panel is shown in <ref type="figure">Figure 7</ref>. The data displayed are created on the fly via SQL queries to the database.</p><p>In <ref type="figure">Figure 7</ref>, we have chosen to slice the data by the variables vitality, region, and machine. The user can then decide which of these variables to display and how to display them. The user has chosen to use the scatterplot to display the cost vs. the vitality, the aggregate plot to display proportional measures of the machine, region, and vitality variables, and the category picture to display the machine types. All of these choices are made from the panel list widgets. The user has highlighted the most expensive points in the scatterplot red, and in addition, has marked relatively expensive points for vitality 5 (i.e. low importance parts) green. He can then quickly focus in on which machines/regions are most expensive given the current set of target service levels (e.g. machine 3905), and which machine has relatively high costs for vitality 5 (3437, region 1). The information found in this way can lead the strategist to the cost landscapes that are most profitable to investigate further, as they are the ones contributing high overall costs.</p><p>We note that, in the SOS application, the database is not simply a convenient way to store data, but rather, is integrally important to the functionality of the application. The power of SQL queries offers an orthogonal, and equally important function, as the visualizations themselves. Visualization, while powerful, is often of limited use especially in business environments, if it is not enabled with the aggregation, roll-up, and slicing features of SQL.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Future Work</head><p>In the near-term we will implement refined picking and SLO setting in the aggregate presentations. Our users want a more nuanced approach than simply setting the SLO of all aggregated components to the picked value. Rather, they wish to define heuristically a "pattern" of SLOs, such that, for example region 2 targets might always be set to, say, 80% of region 1 targets. This might be desirable, if, for example, the density of customers in region 2 is much lower than in region 1, or are otherwise more expensive to service.</p><p>Depending on how users tend to interact with the application, further development may include, for example, tighter linkage of the information-visualization and spatial views of the data. For example, it may be useful to allow a user to choose interesting machine classes interactively in a scatterplot (e.g. by high cost or other characteristics) and immediately populate a spatial landscape view with the selected point(s).</p><p>In many of the application areas in which visualization is used, the ultimate goal is to eventually discard visualization as a way of obtaining the solution, once a greater understanding of the problem is reached. That is, just as optimization algorithms determine the optimal stocking locations in a "hands-free" manner, it would be wonderful to devise an algorithm to optimally determine the "best" placement of the service level targets. However, we do not see this as a possibility in the near future. Domain knowledge, regional considerations, marketing strategy, intuition, and understanding of likely customer reactions all play a part in determining the best setpoint for the customer service targets. However, as this application is used we hope to gain insight into how strategists choose optimal points, and use that to heuristically suggest a customer service strategy, which would almost certainly still need to be verified by the users.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Contributions</head><p>The nature of the visual presentations in SOS offers insight which was not possible using previous tools. It quickly allows our users to visually see areas of opportunity. For example, there is the potential for marketing of higher availability services if it can be determined through the three-dimensional representation that such higher levels of service will result in only a nominal increase in investment. SOS further refines this by enabling our users to actively target customers where mutually beneficial and customized service contracts may be established, through the intelligent trade-off of 2, 4, and 12 hour service targets.</p><p>SOS effectively communicates the alternative support strategies in an intuitive way and allows individual decisions to be displayed at several levels of aggregation. SOS also adds critical search capabilities that allow our users to recognize sub-strategies with deviant characteristics, in either service or cost. Decisions on target strategy are seamlessly integrated into the production system, creating a closed-loop process.</p><p>The presentation of this information allows support strategies to be reviewed throughout the product lifecycle to insure continued affordability in light of the shifting characteristics of the product base. These shifts might include such things as customer base shifts, parts failure projections updates, changes in transportation alternatives, network design changes, and various other cost and demographic changes.</p><p>In summary, depending on how one defines "visualization," it is either used very little in the business arena, or used all the time. While sophisticated information visualization techniques, such as parallel coordinates, dendograms, and the like, have made little headway in production environments, charting tools are ubiquitous, and have been found extremely useful in exploring relational and spreadsheet data. In the work described here, we extend the paradigm of data analysis to include some views of the data, which while not terribly sophisticated from a visualization point of view, provide obvious value over what is typically available to strategists. We have been careful to integrate these views with the common paradigms of interaction, making them accessible to our users. We have started from familiar views and extended the application from this starting point to provide a more useful tool than what would otherwise be available. Finally, we have concentrated on the problem they are trying to solve and have provided views which match the mental model that the users are grappling with, along with views for quickly identifying and understanding outlier data points. <ref type="figure">Figure 7</ref>: This panel allows the user to visually query various aspects of the data. This panel is populated with all data represented by a SQL query defined by the "Slice" controls in this panel. For example, in this case the costs are shown broken down by vitality, region, machine type, and service strategy (SS) but aggregated over all other variables. The user has chosen to look at cost vs. vitality in a scatterplot, and has highlighted (in red) high cost points, and has highlighted in green high cost/vitality 5 points. These points are then displayed in the other views. We see for example a large proportion of service strategy 21R points are red (high cost).</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>(Left): Landscape of cost vs. two hour and four hour target service levels. The red vertical line and marker represent the current SLO (Service Level Objective). Picking in the plots allows a user to query particular data values, and if desired, feed them back into the database as a new SLO. (Right): Landscape of cost vs. two hour and four hour target service levels, culled to a desired subset of points (two hour targets less than 75%). The data are otherwise the same as shown on the left.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>Landscape of cost vs. two hour and four hour service target levels, aggregated over the subset requested from the initial interface window (In this example, all machines of type 4010). One could also aggregate over other variables, or combinations of variables.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Cost landscape for a particular machine, vitality, region, etc. combination which shows cost primarily dependent on two hour target service levels. Contrast with that shown inFigure 6. The red line/mark indicates the current SLO setting; the green line/mark indicates a proposed new point, chosen by a user pick in the image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Cost landscape for a particular machine, vitality, region, etc. combination which shows cost primarly dependent on four hour target service levels. Contrast with that shown inFigure 5.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">For business confidentiality reasons, the particular SLOs, or target ser-</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Acknowledgements</head><p>We would like to thank John Forrest, of IBM T.J. Watson Research Center, for developing the algorithms which enable us to generate a large number of data samples quickly. The Service Offering Simulator would not be possible without this work.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<ptr target="//www.alphablox.com" />
	</analytic>
	<monogr>
		<title level="j">ALPHABLOX</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Human-guided simple search</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Miritich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ratajczak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ryall</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of AAAI</title>
		<meeting>AAAI</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<ptr target="//www.avs.com" />
	</analytic>
	<monogr>
		<title level="j">AVS</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Rivet: A flexible environment for computer systems visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bosch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gerth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rosenblum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="page" from="68" to="73" />
			<date type="published" when="2000-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The cockpit metaphor</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Colgan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Spence</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rankin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Behaviour and Information Technology</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="251" to="263" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
		<ptr target="//www.datadesk.com/datadesk" />
	</analytic>
	<monogr>
		<title level="j">DATADESK</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Prima: A case study of using information visualization techniques for patient record analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gresh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Rabenhorst</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Shabo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Slavin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">VisAD: Connecting people to computations and people to people</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hibbard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="10" to="12" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The HuGS platform: A toolkit for interactive optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Klau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mitzenmacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Schafer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Advanced Visual Interfaces</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Devise: Integrated querying and visual exploration of larget datasets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Livny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Beyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Don-Jerkovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lamwande</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Myllymaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wenger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGMOD</title>
		<meeting>ACM SIGMOD</meeting>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title/>
		<ptr target="//www.opendx.org" />
	</analytic>
	<monogr>
		<title level="j">OPENDX</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Investigating humancomputer optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lesh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Klau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHI</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Visualization of tradeoffs in optimization of integrated circuits with multiple objectives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sengupta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Styblinski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Symposium on Circuits and Systems</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="1640" to="1643" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Polaris: A system for query, analysis and visualization of multi-dimensional relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Information Visualization</title>
		<meeting>IEEE Information Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
