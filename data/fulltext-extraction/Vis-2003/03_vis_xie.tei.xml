<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Piecewise C 1 Continuous Surface Reconstruction of Noisy Point Clouds via Local Implicit Quadric Regression</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hui</forename><surname>Xie</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Stony Brook University</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<settlement>Stony Brook</settlement>
									<region>NY</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jianning</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Stony Brook University</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<settlement>Stony Brook</settlement>
									<region>NY</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jing</forename><surname>Hua</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Stony Brook University</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<settlement>Stony Brook</settlement>
									<region>NY</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename><surname>Qin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Stony Brook University</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<settlement>Stony Brook</settlement>
									<region>NY</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arie</forename><surname>Kaufman</surname></persName>
							<affiliation key="aff0">
								<orgName type="department" key="dep1">Center for Visual Computing (CVC)</orgName>
								<orgName type="department" key="dep2">Department of Computer Science</orgName>
								<orgName type="institution">Stony Brook University</orgName>
								<address>
									<postCode>11794-4400</postCode>
									<settlement>Stony Brook</settlement>
									<region>NY</region>
									<country key="US">U.S.A</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Piecewise C 1 Continuous Surface Reconstruction of Noisy Point Clouds via Local Implicit Quadric Regression</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry-Geometric Algorithms and Object Representations Computer Graphics</term>
					<term>Surface Reconstruction</term>
					<term>Point Cloud</term>
					<term>Surface Representation</term>
					<term>Solid Modeling</term>
					<term>Moving Least Squares</term>
					<term>Shepard&apos;s Method</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper addresses the problem of surface reconstruction of highly noisy point clouds. The surfaces to be reconstructed are assumed to be 2-manifolds of piecewise C 1 continuity, with isolated small irregular regions of high curvature, sophisticated local topology or abrupt burst of noise. At each sample point, a quadric field is locally fitted via a modified moving least squares method. These locally fitted quadric fields are then blended together to produce a pseudo-signed distance field using Shepard&apos;s method. We introduce a prioritized front growing scheme in the process of local quadrics fitting. Flatter surface areas tend to grow faster. The already fitted regions will subsequently guide the fitting of those irregular regions in their neighborhood.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The problem of reconstructing a surface from a large set of scattered sample points arises in a variety of applications in the fields of reverse engineering, computer graphics, computer vision, medical image segmentation, etc. Generally speaking, surface reconstruction from scattered samples is an ill-posed problem, i.e., there is no unique solution. Constraints on both the original surface and the sample points are required to guarantee a faithful and unique solution. In the last decade, a number of surface reconstruction techniques have been proposed. Despite of the versatility of these large amount of algorithms at present, however, most existing algorithms make certain strong assumptions on the original surface and its sample points. For example, many algorithms necessitate a very dense sampling to be able to capture drastic topological or geometric change in a small region; some approaches need additional knowledge such as surface normal or interior/exterior information; some algorithms are not tolerant of noise and corrupted data.</p><p>The goal of this paper is to develop a robust surface reconstruction algorithm that can handle noisy data sets and tolerate critical situations, such as abrupt bursts of high noise and topological ambiguity where two objects come too close together. These problems arise frequently for 3D data acquisition techniques such as those in stereo photogrammetry.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Problem Statement and Constributions</head><p>Before proceeding with our algorithm, an explanation may be desirable of our major concerns in our algorithm design, that is, the problems we intend to solve.</p><p>A correct reconstruction of a surface is possible only if it is "properly" sampled, i.e., there are enough sample points in areas of high curvature or great topological complexity. One representative criteria of an adequate sampling rate was suggested by <ref type="bibr" target="#b1">Amenta [2001]</ref>, the r-sampling criteria. Generally, higher sampling rates are required where two parts of the surface come close or the local curvature is high. Noise can also inflict trouble for topological recognition. <ref type="bibr">IEEE Visualization 2003</ref><ref type="bibr">, October 19-24, 2003</ref>, Seattle, Washington, USA 0-7803-8120-3/03/$17.00 Â©2003 IEEE  In <ref type="figure" target="#fig_1">Fig. 2(a)</ref>, we observe that on both sides of the acute sharp corner are surfaces of low curvature, but a sampling rate of infinity is needed for a correct reconstruction of this sharp feature in most algorithms. In <ref type="figure" target="#fig_1">Fig. 2(b)</ref>, the topology of the actual surface is obscured where the standard deviation of noise is larger than the local feature size. In <ref type="figure" target="#fig_1">Fig. 2(c)</ref>, the noise rate in a small region is abruptly high. In <ref type="figure" target="#fig_1">Fig. 2(d)</ref>, many front propagation-based normal alignment algorithms can not correctly identify the orientation abnormality near an acute sharp edge.</p><p>Most existing algorithms can only partially solve these problems under certain strong assumptions on either the sampling rate, the smoothness of the underlying surface, or the noise power. But visually, our human eyes are able to capture the shape of a noisy and under-sampled model with ease. This kind of ability can be attributed to several assumptions on the underlying surface in our brain: (1) The major part of a surface is absent of abrupt curvature change and burst of noise; (2) Abrupt changes of curvature or topology do not cluster in a small region. (3) The underlying surface is a 2-manifold.</p><p>Based on these assumptions, we have designed a prioritized surface growing algorithm. In this prioritized front propagation algorithm, the system first fits the "good" parts of the surface, then use the already built parts to guide the fitting of "bad" parts of the surface. We also use implicit quadrics instead of parametric surfaces as basic models in the local fitting. The use of implicit surfaces is mainly for better sharp feature representation and easier blending of locally fitted surface patches via Shepard's method. The combination of these two techniques would allow for a reliable surface reconstruction from noisy data points with surface reconstruction hazards mentioned above. In addition, we propose a robust orientation alignment algorithm and several techniques for efficient evaluation of surface properties such as variation of curvature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Previous Work</head><p>Generally, the existing approaches to constructing a surface model from a set of scattered points fall into two categories. One is the optimal triangulation of a discrete set of spatial points. The other is function reconstruction from a set of samples, or, data fitting. In essence, the problem of surface reconstruction has two aspects: topology recovery and geometry recovery. Triangulation-based algorithms mainly focus on faithful recovery of a flawless topology from relatively accurate but possibly incomplete data sets. On the contrary, data fitting based algorithms concentrate much more on regression analysis of inaccurate data samples, and try to recon-struct the underlying function even in existence of random noise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Piecewise-linear surface reconstruction</head><p>Algorithms falling into this category include the Î±-shape <ref type="bibr" target="#b7">[Edelsbrunner and Mcke 1994]</ref>, Power Crust <ref type="bibr" target="#b1">[Amenta et al. 2001]</ref> and the ball pivoting algorithms <ref type="bibr" target="#b3">[Bernardini et al. 1999]</ref>. Some algorithms from this group can provide provable topological correctness, such as the Power Crust. Although some variants are proposed, most of these algorithms assume the availability of a noise-free data set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Surface reconstruction through the building of a signeddistance field</head><p>The application of implicit models in the field of surface reconstruction are primarily due to two reasons: (1) In contrast to piecewise surface patches, an implicit surface involves no specific topologysensitive parametric domain and thus avoids any complicated procedures such as surface trimming and patching; (2) An implicit function defines a simulated signed distance field in the 3D space. A weighted sum of two distance fields intuitively averages the two underlying surfaces. This intrinsic averaging property allows for both multiple data sets registration and sample denoising, which in many algorithms rely on a preprocessing or postprocessing stage. <ref type="bibr" target="#b9">Hoppe, DeRose, et al. [1994]</ref> first introduced the signed distance field as a basic tool for reconstructing surfaces from a set of range images. <ref type="bibr">Curless and Lovoy [1996]</ref> soon proposed an algorithm based on constructing a distance field on volumetric grid. <ref type="bibr" target="#b2">Bajaj, Bernardini and Xu [1995]</ref> combined the piecewise algebraic surface with Î±-shape. <ref type="bibr" target="#b4">Carr, et al. [2001]</ref> explored the use of radial basis functions for uncomplete data set. <ref type="bibr" target="#b20">Zhao, Osher, et al. [2000]</ref> proposed a level set method driven by dynamic PDEs. All these methods have displayed the merits of using implicit surfaces, that is, noise tolerable, topology flexible, and easy to convert to other representations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Moving least squares and Shepard's method</head><p>The moving least squares method and Shepard's method can date back to McLain and many other's work <ref type="bibr" target="#b14">[McLain 1974;</ref><ref type="bibr" target="#b18">Shepard 1968;</ref><ref type="bibr" target="#b17">Renka 1988;</ref><ref type="bibr" target="#b10">Lancaster and Salkauskas 1981]</ref>. In the meantime, in the computational statistics community, the local regression method (similar to the moving least squares) was extensively studied for noisy data smoothing. Many issues on the choice of the local fitting functions, the selection of the bandwidth (the support of the local weight function) are discussed in depth. We refer readers to <ref type="bibr" target="#b5">[Cleveland and Loader 1995]</ref> for details. The early moving least squares method was dedicated to function fitting, where a parametric domain is innate. <ref type="bibr" target="#b12">Levin [1998]</ref> proposed the moving least squares surfaces by introducing local reference frames. Based on Levin's approach, <ref type="bibr" target="#b11">Lee [2000]</ref> implemented a curve reconstruction method which was capable of automatically selecting local bandwidth. The recent point set surfaces <ref type="bibr" target="#b0">[Alexa et al. 2001]</ref> are also based on moving least squares fitting. In this paper, we further extend the local function family to implicit quadrics. This extension to local quadric fitting allows more accurate discovery of the local topology and geometry under high noise. <ref type="bibr" target="#b16">Ohtake, et al. [2003]</ref> also developed a hierarchical surface fitting system based on Shepard's blending to handle accurate data set with prescribed normals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Moving Least Squares and Shepard's Method</head><p>Both the moving least squares method of Levin's type and Shepard's method are employed in our paper. Strictly speaking, this paper only borrows from moving least squares the technique of local quadratic function fitting by introducing a local frame. The "moving" in moving least squares has been replaced by Shepard's methods.  The standard moving least squares method is illustrated in <ref type="figure" target="#fig_3">Fig. 3</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Moving Least Squares Method</head><formula xml:id="formula_0">Let points { p i â R 3 , i = 1, â¢â¢â¢ , N}</formula><formula xml:id="formula_1">= {x| n, x â D = 0, x â R 3 }, n â R 3 , ||n|| = 1 is defined so as to minimize N â i=1 ( p i , n â D) 2 Î¸ (||p i â q||),<label>(1)</label></formula><p>where Î¸ is a nonnegative, smooth, radial, monotonously decreasing function, usually with finite support R as shown in <ref type="figure" target="#fig_3">Fig. 3(a)</ref>, q is the perpendicular foot of r on plane H and , denotes dot product. When r is close enough to the surface, we can just use q = r to lead the minimization of (1) to a linear system. The reference domain for r is subsequently used to compute a local bivariate polynomial approximation g(x, y) in a neighborhood of r. This process is carried out through minimizing a weighted least squares error</p><formula xml:id="formula_2">N â i=1 (g(x i , y i ) â z i ) 2 Î¸ (||p i â q||),<label>(2)</label></formula><p>where (x i , y i , z i ) are the coordinates of p i in the local coordinate system induced by H, see <ref type="figure" target="#fig_3">Fig. 3</ref>(a). Levin defines S p (r) = q+g(0, 0)n, i.e., the intersection of axis z with the local fitting polynomial g. We refer readers to <ref type="bibr" target="#b0">[Alexa et al. 2001]</ref> for details. Levin's marvelous result on this projection function S p (r) is that under certain conditions, all the fixed points, that is, {r â R 3 : S p (r) = r}, define a 2-manifold <ref type="bibr" target="#b13">[Levin 1999]</ref>. Practically, these conditions may not always be well-satisfied. An acute angle may generate a nonmanifold surface as shown in <ref type="figure" target="#fig_3">Fig. 3</ref>(b) (blue curves). The reference planes for all r's near the apex go across the axis of the cone. Taking q = r may make this situation better, but a much thinner pinnacle is inevitable. Our new solutions to this problem will be discussed in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Shepard's Method</head><p>With the moving least squares method, every surface point evaluation will invoke two stages of minimization, one for the calculation of a reference plane, another for a local polynomial fitting. This can be prohibitively expensive for practical applications. One way to reduce the amount of computation is by just evaluating a set of representative test points and then figuring out the position of inbetween points by locally blending its neighboring representative points. We first take as an example the case for approximating a function R 2 â R. In <ref type="figure" target="#fig_4">Fig. 4</ref>, the approximated function valuesf (c i ) at a set of representative points c i are known (either were given or evaluated at a surface locally fitted to a set of neighboring samples), and we want to figure out the function value at p by a linear combination of the valuesf (c i ) at all p's neighboring representative points. We associate with each representative point c i a smooth, positive and monotonously decreasing function w i ( p â c i ), which is the weight function associated with c i . Note that it is not necessary for the weight functions associated to each representative point to be the same. Now we define the value f (p) to be (see <ref type="figure" target="#fig_4">Fig. 4</ref>):</p><formula xml:id="formula_3">f (p) = â n i=1f (c i )w i ( p â c i ) â n i=1 w i ( p â c i ) .<label>(3)</label></formula><p>To obtain computational efficiency, the weight functions w i ( pâ c i ) are mostly compactly defined, that is, there exists a set of</p><formula xml:id="formula_4">R i , w i ( p â c i |) = 0, if p â c i &gt; R i . Interpolation can be achieved by letting w i ( p â c i ) â +â, when p â c i â 0.</formula><p>We observe that f (c i ) in (3) are a set of constants. Blending function values at a set of representative points c i may result in an unappealing flat spot at c i , and a steep interim in the middle of a pair of representative points <ref type="bibr" target="#b18">[Shepard 1968;</ref><ref type="bibr" target="#b15">Nielsen 1980]</ref>. Normally,f (c i ) is obtained by evaluating at c i a locally fitted functionf i (p) of a set of nearby sample points. Instead of blending sample function values, we can blend local representative functions. We replacing the termf (c i ) byf i (p), which is the local approximation of f (p) around c i . This leads to the modified Shepard's method, The result function f (p) would be of C â continuity when w i ( p â p i ) are C â continuous. We refer readers to <ref type="bibr" target="#b18">[Shepard 1968;</ref><ref type="bibr" target="#b15">Nielsen 1980;</ref><ref type="bibr" target="#b17">Renka 1988</ref>] for a background of the origin of this method, and some nice properties accompany this approach. In comparison to other blending methods such as splines, NURBS (we can see they share similar formulations), the modified Shepard's method imposes no limitations on the local connectivity and number of local blending kernels, and thus can be easily fitted to a large variety of applications.</p><formula xml:id="formula_5">f (p) = â n i=1f i (p)w i ( p â c i ) â n i=1 w i ( p â c i ) . (4) 4 R 4 c p 1 c i R i w 5 c x 0 c p Infinity R i i w 3 c 2 c y y f r r ) ( p f</formula><p>All the above addresses the blending of a real-valued function. To blend 3D surface patches, it would be rather challenging. One possible approach is by following the spirit of Levin's local reference frame. But this may lead to many subtle questions such as how to blend local frames, how to deal with multi-sheeted surface patches resulting from coordinates transformation, etc. In this paper, we utilize the intrinsic surface "averaging" behavior when summing up several signed distance fields. In our algorithm, each surface is represented implicitly as the zero-level set of a trivariate real-valued function f (x, y, z). Thus, surface blending through Shepard's method is a direct application of this method to the case of 3D functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Incremental Local Fitting and Denoising</head><p>In this section, we introduce our prioritized incremental local regression algorithm. Along with the local model selection to be discussed in the next section, this algorithm can provide an appealing smoothing effect with great robustness. R <ref type="figure">Figure 5</ref>: The already fitted points are subsequently used to guile the local fitting of its neighboring points by being assigned with a heavier weight.</p><p>The basic idea behind this algorithm is that the majority of real world models are comprised of well-sampled surface regions of low curvature and of low noise (hereinafter, "regular regions") sparsely interspersed with small regions of sharp edges, peaks, bulges, and regions subject to high measurement noise (hereinafter, "irregular regions"), and a natural extension of these regular regions can present a very good prediction to the surface behavior in irregular areas.</p><p>In our new incremental surface construction system, multiple active seeds iteratively traverse "regular regions" of the samples before "irregular regions". In <ref type="figure">Fig. 5</ref>, a seed is propagating from left to right. The current active point is shifted to a more smooth-looking position via the local least squares fitting just mentioned. The already fitted points are subsequently used to guide the local fitting of their neighboring points by being assigned with heavier weights, see <ref type="figure">Fig. 5</ref>.</p><p>The untraversed neighboring points of the current seed are then activated, each associated with a weight based on the irregularity of the current seed. This irregularity metric comes as a combination of the local normal/gradient variation and the local fitting error I = Î± 1 Îº + Î± 2 Îµ. The next current point would go to the active point with the lowest irregularity. As in most region growing methods, our algorithm maintains three doubly linked lists of data points, the open list, the active list and the closed list. We further partition our active list into several prioritized segments. The sample points can only be moved downward and rightward (from higher to lower priority). The prioritized segmentation of the active list avoids a rigorous sorting of the points in the active list based on their irregularity.</p><p>This prioritized front propagation method as outlined in <ref type="figure" target="#fig_6">Fig. 7</ref> always follows the easiest way of proceeding. As a result, the interspersed "irregular" areas will be first besieged before they are attacked. The accumulation of more fitted points in the local region around the "irregular" points can provide clues on what the local shape looks like.</p><p>Line 14-16 in <ref type="figure" target="#fig_6">Fig. 7</ref> provides a seed jumping mechanism. When some part of the surface is confined by a barrier of irregular regions, this mechanism allows a new seed to be "airdropped" into that area.   <ref type="figure">Figure 8</ref>: "Irregular" areas will first be besieged before they are attacked. The accumulation of already-fitted points around the "irregular" regions provides clues on how the local shape looks like.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Local Bandwidth and Model Selection</head><p>An active research topic in the field of local regression is on how to select a suitable smoothing window size(bandwidth) and on how to choose an optimal degree of the local polynomial(model) <ref type="bibr" target="#b8">[Fan et al. 1996]</ref>. In <ref type="figure" target="#fig_7">Fig. 9(a)</ref>, a local linear regression with different bandwidth is used for fitting a set of data points. We can see that the fitting curve with smaller bandwidth is much closer to the point set (we say it is of low bias), but suffers greatly from the undulation of noise (we say it is of high variance), larger window size is more likely to produce a smooth curve, but fails to grasp the sharp feature (peak). The same situation goes to local polynomial degree selection. In <ref type="figure" target="#fig_7">Fig. 9(b)</ref>, polynomials with higher degrees are capable of capturing local features, but the shape may fluctuate undesirably.</p><p>Many sophisticated algorithms have been propose to tradeoff bias with variance by introducing a certain metric. We refer readers to <ref type="bibr" target="#b5">[Cleveland and Loader 1995]</ref> for a survey. One particular work in the computer graphics community was done by <ref type="bibr" target="#b11">Lee [2000]</ref> to offer adaptive local bandwidth control in the process of curve smoothing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Local bandwidth control</head><p>In this paper, we adopt a simple local bandwidth selection technique in which surface regions with larger irregularity tend to have larger fitting bandwidth since it is desirable to accommodate more already-fitted points. An initial feature size h 0 is computed with an algorithm similar to the one used in Lee's curve smoothing system. Each priority is associated with an empirical real number c i . The local fitting bandwidth h is then computed as c i h 0 . This method works well when the sampling density does not change drastically. More sophisticated bandwidth control algorithms borrowed from the statistics community will be further accommodated. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Local model selection</head><p>Because the implicit quadrics are capable of representing multisheeted surfaces, extraneous parts may appear when using quadrics to fit simple shapes. For example, in <ref type="figure" target="#fig_8">Fig.10(a)</ref>, fitting a set of planar point with implicit quadrics results in a shape close to two intersecting planes. Similar to high degree polynomials, implicit surface fitting is very sensitive to noise. In this section, we follow the spirit of local model selection, that is, selecting local fitting models by means of some error metric, to address these problems. We first partition all types of quadric surfaces into two groups. Elliptic paraboloids, hyperbolic paraboloids, parabolic cylinders and planes (pairs of planes are not included) fall into the first group, and all other quadrics fall into the other group. Levin's local least squares fitting method only uses models from the first group. Our new local fitting method will allow both groups of quadrics be utilized for local surface fitting.</p><p>Fitting with quadrics from the first group can follow Levin's local least squares fitting as mentioned in section 4.1. A transformation of the function z â g(x, y) = 0 in its local coordinate system back to the real world coordinate system is subsequently carried out. Now we get an locally fitted implicit quadric surface f 1 (x, y, z) = 0 from the first group.</p><p>Fitting with quadrics from the second group is by directly solving a linear system:</p><formula xml:id="formula_6">ax 2 i + by 2 i + cz 2 i + dx i y i + ey i z i + f z i x i + gx i + hy i + iz i + j = 0.</formula><p>where i goes through all points p i = (x i , y i , z i ) . A non-trivial solution can be obtained by singular value decomposition(SVD).</p><p>Now, we have two locally fitted models f 1 (x, y, z) = 0 and f 2 (x, y, z) = 0 in hand. Our next step is to score the fidelity of these two models to the original data points. Basically, three metrics are used.</p><p>â¢ The local gradient variation: Sharp features and multiple sheets in a local area will result in larger local gradient variation. This metric can be used to select models for cases like in <ref type="figure" target="#fig_8">Fig. 10(a)</ref>. Obviously, a single-sheeted plane will be favored by this metric.</p><p>â¢ The fitting error: Mostly, this is defined as the average squared distance of the sample points to the model. This metric can be applied to situations as in <ref type="figure" target="#fig_8">Fig. 10(c)</ref>.</p><p>â¢ The normal orientation consistency: Normal orientation is the most reliable metric for local model selection. <ref type="figure" target="#fig_8">In Fig 10(a)</ref>, if two seeds propagate from both sides carrying normals as illustrated. The possibility of a multi-sheeted fitting as shown will certainly be ruled out. <ref type="figure" target="#fig_8">In Fig 10(b)</ref>, with the normal information shown, the purple horizontal line will be ruled out.</p><p>These three metrics have ascending importance on the determination of local fitting model. A continuous real-valued fidelity metric can be designed based on the above analysis. Similar to the mixed degree local polynomial regression in <ref type="bibr" target="#b5">[Cleveland and Loader 1995]</ref>, a mixture of these two models with proper weights derived from this metric can be formulated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Orientation Alignment</head><p>Traditionally, the normal orientation of each point is aligned by traversing a minimum spanning tree. But this approach may inflict difficulties when seeds go through areas of high curvature with high noise. For the case in <ref type="figure" target="#fig_10">Fig. 11(a)</ref>, obviously, the most often used criteria by aligning neighbor normals into acute angles will lead to the normals in black. Even local curve fitting may not help, since the fitting curve for a point p and its neighbor may vary much due to fitting sensitivity in this kind of critical area (see green curve).  In our system, our prioritized propagation rules guarantee a seed must not penetrate an acute edge. The problem becomes how to align orientation of patches where multiple seeds meet. As measurement precision, image registration accuracy and such all suffer from sharp corners and areas of high curvature, our top concern in orientation alignment algorithm is robustness. Under certain assumptions on feature size, we are able to design a robust algorithm.</p><p>Let us explain this algorithm with an example. In <ref type="figure" target="#fig_10">Fig. 11(b)</ref>, a seed has reached this region from the right hand side and hibernates near Q * . Another seed comes near and reaches P. At this moment, all points with arrows(normals) are in CLOSED list. Line 1-6 in <ref type="figure" target="#fig_1">Fig. 12</ref> finds a nearest point Q * â CLOSED in its neighbor or radius R and on a different surface patch. We believe that for "opposite" points on the same surface, their normal would annihilate each other along the line linking them, i.e. (Normal(P 1 ) + Normal(P 2 ))â¥(P 2 â P 1 )). A local "opposite" point for P is searched for through Line 8-15. In the figure, N' is the reflection of N along line PR * . This algorithm favors those points R whose normals agree with N'(R) or -N'(R). After the best R * is found, the two patches are merged into one single patch. All point normals in one of the two patches will be flipped if N'(R * ) agree with -N(R * ).</p><p>for the current seed P DO // P has been put in CLOSED 1. Nb P â all neighbor points in P's vicinity of radius R 2. Q * = Ã, DistQ * = â 3. FOR each Q â Nb P DO // find a nearest "alien" 4. IF Q â CLOSED AND Q on a different patch from P 5.</p><p>IF Dist(P,Q) &lt; DistQ * , Q * =Q and DistQ * = Dist(P,Q) 6. END FOR 2. 7. IF Q * = Ã GOTO 19. 8. Nb Q â all neighbor points in Q * 's vicinity of radius R 9. R * = Ã, AngleR * = 0 10.FOR each R â Nb Q DO // find the best opposite point in Nb Q 11. IF R â CLOSED AND R on the same patch as Q * 12.</p><p>N'=Reflect(Normal of P), N R = Normal or R * 13.</p><formula xml:id="formula_7">IF | N , N R | â¥ |AngleR * | 14.</formula><p>AngleR * = N , N R and R * = R 15. END FOR 10 16. IF |AngleR * | &lt; â 3/2 GOTO 19 17. IF AngleR * &lt; 0 flip all normals in the patch containing R * 18. merge the two patches contain P and R * 19. end procedure </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Numerical Techniques</head><p>In our work, many geometric properties on the local fitting quadrics such as local curvature, fitting error, etc. are required to be calculated accurately and efficiently. In this section, we introduce some algorithms we developed for local surface property evaluation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Curvature at a surface point</head><p>The curvature of an implicit surface at a surface point p can be evaluated efficiently without introducing a local parametrization <ref type="bibr" target="#b19">[Xie and Qin 2002]</ref>. </p><formula xml:id="formula_8">Let M = { â f â x i â x j } i,</formula><formula xml:id="formula_9">K(p) = g â4 g â¢ M * â¢ g<label>(5)</label></formula><p>Mean curvature:</p><formula xml:id="formula_10">H(p) = 1 2 g â3 g â¢ H â¢ g<label>(6)</label></formula><p>For a quadratic polynomial f , entries of M are just the coefficients of its second degree terms. The total curvature at p is defined as T = 4H 2 â 2K.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Variation of normal and gradient</head><p>The normal variation near a point p within a neighborhood of radius R is important for sharp feature detection and local model selection. Using the curvature at this point is not always a good estimation of the local normal change. In <ref type="figure" target="#fig_3">Fig. 13(a)</ref>, the curvature at point p vanishes, but a sharp edge of infinite curvature is nearby. Ideally, the local normal variation for a surface point p should be defined as the maximum angle spanned by any two normals in its vicinity of a given radius R, as shown in <ref type="figure" target="#fig_3">Fig. 13(a)</ref>. This definition can also capture the cases when two surfaces come close together as shown in <ref type="figure" target="#fig_3">Fig. 13(b)</ref>. But because normal is not a linear function of the implicit function f , evaluation of normal change can be expensive, let alone the calculation of the maximum normal angle spanned in a region. An alternative approach is to measure the local gradient change instead of normal change. Prior to our derivation, we define:</p><formula xml:id="formula_11">V gx = max(2|a|, |d|, | f |), V gy = max(2|b|, |d|, |e|), V gz = max(2|c|, |e|, | f |). (7) Var = (V gx ,V gy ,V gz )<label>(8)</label></formula><p>Now consider a quadric surface q = ax 2 + by 2 + cz 2 + dxy + eyz + f zx + gx + hy + iz + j, the gradient at a point p = (x, y, z) is,</p><formula xml:id="formula_12">g = (g, h, i) + (2ax + dy + f z, 2by + dx + ez, 2cz + ey + f x) .</formula><p>The variable part, that is, the second term, can only vary within a cuboid</p><formula xml:id="formula_13">[âRV gx , RV gx ] Ã [âRV gy , RV gy ] Ã [âRV gz , RV gz ],<label>(9)</label></formula><p>where, R is the radius of the neighborhood around p. Note that (8) is constant with respect to p and invariant under translation of f 1 . By translating the origin of coordinate system to p, we can define the gradient variance in p's vicinity of radius R as:</p><formula xml:id="formula_14">V = RVar â f (p)<label>(10)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Experiments</head><p>In <ref type="figure">Fig.1</ref> on the front page, we show the feature detecting capability embedded in our prioritized incremental surface construction algorithm. At the final stage of the shape growing, the remaining active points (in green) outline the dragon as its feature lines. In <ref type="figure" target="#fig_4">Fig. 14,  we</ref> show the segmentation power of our incremental surface construction algorithm. In <ref type="figure" target="#fig_14">Fig. 15</ref>, we show the normal propagation algorithm. We can also see that with implicit quadrics, the normals take abrupt changes at sharp edges as we expected. But quadrics have a drawback that it can not express corners well where more than two faces meet. This remains one of our future work. In <ref type="figure" target="#fig_5">Fig. 16</ref>, we show the denoising process of our algorithm. Since the noise rate is very high (about one fiftieth of the size of the object), surface details are wiped out. But at the tail, which is a cusplike shape, our algorithm presents better results than many other point-based denoising methods. <ref type="figure" target="#fig_6">Fig. 17</ref> shows our work for accurate models. We see that the Shepard's method works well even for low sampling rate point sets. <ref type="figure" target="#fig_4">Figure 14</ref>: Ambiguous topology determination. In this figure, we show the segmentation power of our incremental surface growing algorithm. The sample points of the top two spheres are mixed together due to noise. The bottom two spheres are thinned and separated into two groups. Due to high sensitivity of the model (two-sheeted quadrics) to local noise, we still see several points between them. This needs a further process to discard outliers.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Conclusions and Future Work</head><p>In this paper, we have presented a new intelligent incremental surface reconstruction system based on local fitting and blending of implicit quadric surfaces. The incorporation of implicit quadrics as basic local fitting models allows us to reconstruct local features more accurately and to blend local fitted surface patches in a clean and efficient manner. To deal with noisy data set and topological ambiguity, we design a prioritized incremental algorithm, in which, flatter areas are fitted prior to areas with features. The already fitted areas can subsequently guide the local fitting of its neighboring points. We also implement a method for automatic selection of local bandwidth and local fitting models. Finally, we implement a robust orientation alignment method as well as a set of algorithms on efficient evaluation of local geometric information. Our system has displayed the capability and flexibility of our novel algorithms. Some potential applications include feature line extraction, segmentation of close objects, etc. Despite all the merits that our algorithms have displayed, they still suffer from some limitations. The quadric surfaces can not reconstruct the shapes well at sharp corners where more than two faces meet or at places where more than two objects come close. Extension of this method to a more flexible function set will definitely enhance its capability. Our system still has some empirical parameters. Deep study of the regularity metric is also an open issue. We see from (b) to (c), the two traversed patches get aligned. Note that these two patches have not collided each other yet. In (d) we show the resulting sample points with lowest priority. These points constitute the so-called feature lines. In (e), we can see that the normals have the right directions even near a very acute edge. In (f) a shaded result is shown with edges marked.</p><p>(a) (b) (c) <ref type="figure" target="#fig_5">Figure 16</ref>: Denoising functionality of our algorithm. In (a) a dinosaur is sampled noisily (note that the dinosaur has a relatively cuspate tail with noise rate close to its feature size). In (b) we show the resulting thinned point cloud. In (c), the thinned point cloud is rendered by PointShop (by Zwicker, Pauly et al.).</p><p>(a) (b) (c) <ref type="figure" target="#fig_6">Figure 17</ref>: Some models from accurate point clouds. The sampling rates for these models are lower than the previous models. The Shepard's method works well for blending implicit fields generated at each sample point together. All the resulting models are rendered in polygonal meshes extracted by marching-cubes algorithm.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Noise results in topological ambiguity when two faces come too close.(c) Abrupt burst of high noise.(d) Incorrect orientation alignment around an acute angle.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Reconstruction difficulties due to sharp edges and noise.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Local reference frame and fitting. (b) Sharp edge hazard.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Standard moving least squares fitting.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Shepard's local blending method. In the middle are a set of representative functions with their centers c i and local support R i marked. To the left are the projections of each weighted representative functions. To the right we show two classical weight functions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>The data structure for the front propagation algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Prioritized front propagation algorithm. â= pri. means inserting into the end of a segment of the active list based on priority.P</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Selection of local polynomial degree and local fitting bandwidth.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 :</head><label>10</label><figDesc>Local implicit quadrics fitting and model selection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 11 :</head><label>11</label><figDesc>Normal orientation alignment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 12 :</head><label>12</label><figDesc>Normal orientation alignment algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head></head><label></label><figDesc>j=0,1,2 be the Hessian matrix of f . Denote M * = det(M) M â1 , which is sometimes called adjoint matrix of M, H = M â tr(M) I and g = â f (p), we have, Guassian curvature:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 13 :</head><label>13</label><figDesc>Normal (gradient) variation near a point.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 15 :</head><label>15</label><figDesc>Normal propagation and alignment. Yellow points are not traversed yet. Red samples point outside and blue ones point inside.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>1</head><label></label><figDesc>Introduction * email:{xhui | jianning | jinghua | qin | ari}@cs.sunysb.edu</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>be sampled from a surface S with possible measurement noise. For an arbitrary test point r â R 3 (not necessarily from {p i }) near the surface, we first find a local reference domain (plane) H for r. The local plane H</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>1. OPEN â all sample points 2. ACTIVE â Ã; CLOSED â Ã 3. WHILE ACTIVE = Ã OR OPEN = Ã 4. IF ACTIVE = Ã, ACTIVE â= pri. PâOPEN of smaller Irr. 5. CUR = first point in ACTIVE 6. local fitting around CUR 7. new Irr.(CUR) = Curvature(CUR) + FitError(CUR) 8. calculate new Priority(CUR) based on new Irr.(CUR) 9. IF new Priority(CUR) &gt; old Priority(CUR) 10.</figDesc><table><row><cell></cell><cell>ACTIVE â= pri. CUR; GOTO 19 // back into active list</cell></row><row><cell cols="2">11. create successors of CUR</cell></row><row><cell cols="2">12. FOR each successor S 13. Priority(S)=Priority(CUR); ACTIVE â= pri. S</cell></row><row><cell>14.</cell><cell>IF ACTIVE| priorityâ¤current priority = Ã</cell></row><row><cell>15. 16.</cell><cell>find T â OPEN, such that Prior.(T) â¤ Prior.(CUR) ACTIVE â= pri. T, if there is such a T</cell></row><row><cell cols="2">17. END FOR 12.</cell></row><row><cell cols="2">18. CLOSED â= CUR</cell></row><row><cell cols="2">19. END WHILE 3.</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">A mathematically accurate version of Var is defined as the largest eigenvalue of the Hessian matrix of f , which is invariant under translation and rotation.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This research is supported in part by the NSF CAREER award CCR-9896123, the NSF grant DMI-9896170, the NSF ITR grant IIS-0082035, the NSF grant IIS-0097646, the NSF grant IIS-0326388, the NSF grant ACI-0328930, the NSF grant CCR-0306438, Alfred P. Sloan Fellowship and Honda Initiation Award.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Point set surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Behr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fleishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization</title>
		<meeting>the IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001-10" />
			<biblScope unit="page" from="21" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The power crust</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Choi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Kolluri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the Sixth ACM Symposium on Solid Modeling and Applications</title>
		<imprint>
			<biblScope unit="page" from="249" to="266" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Automatic reconstruction of surfaces and scalar fields from 3D scans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 22nd Annual Conference on Computer Graphics and Interactive Techniques</title>
		<meeting>the 22nd Annual Conference on Computer Graphics and Interactive Techniques</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The ball-pivoting algorithm for surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mittleman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Rushmeier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="349" to="359" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Reconstruction and representation of 3d objects with radial basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Beatson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B</forename><surname>Cherrie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">R</forename><surname>Fright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">C</forename><surname>Mccallum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Evans</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Annual Conference Series</title>
		<imprint>
			<biblScope unit="page" from="67" to="76" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note>Computer Graphics Proceedings</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Smoothing by local regression: Principles and methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Loader</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Murray Hill, NY</pubPlace>
		</imprint>
		<respStmt>
			<orgName>AT&amp;T Bell Laboratories</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A volumetric method for building complex models from range images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Proceedings, ACM SIGGRAPH Annual Conference Series</title>
		<imprint>
			<biblScope unit="page" from="303" to="312" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Three-dimensional alpha shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Mcke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="43" to="72" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A study of variable bandwidth selection for local polynomial regression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Gijbels</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-C</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L.-S</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Statistica Sinica</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="113" to="127" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Piecewise smooth surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Halstead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mc-Donald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schweitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH Annual Conference Series</title>
		<imprint>
			<biblScope unit="page" from="295" to="302" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
	<note>Computer Graphics Proceedings</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Surfaces generated by moving least squares methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lancaster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Salkauskas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Mathematics of Computation</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="141" to="158" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Curve reconstruction from unorganized points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I.-K</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="161" to="177" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The approximation power of moving least-squares</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematics of Computation 67</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="volume">224</biblScope>
			<biblScope unit="page" from="1517" to="1531" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Mesh-independent surface interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">4th International Conference on Curves and Surfaces</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="46" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Drawing contours from arbitrary data points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Mclain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Computer Journal</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="318" to="324" />
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Smooth interpolation for large sets of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">F G</forename><surname>Nielsen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. Journal for Numerical Methods in Engineering</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1691" to="1704" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Multi-level partition of unity implicits</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ohtake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Belyaev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Alexa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH Annual Conference Series</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>To appear</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Multivariate interpolation of large sets of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Renka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Mathematical Software (TOMS)</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="139" to="148" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A two-dimensional interpolation function for irregularly-spaced data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shepard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1968 23rd ACM national conference</title>
		<meeting>the 1968 23rd ACM national conference</meeting>
		<imprint>
			<date type="published" when="1968" />
			<biblScope unit="page" from="517" to="524" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A physics-based framework for subdivision surface design with automatic rules control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">10th Pacific Conference on Computer Graphics and Applications</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="304" to="315" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Implicit and nonparametric shape reconstruction from unorganized data using a variational level set method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-K</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Merriman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Vision and Image Understanding</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="295" to="314" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
