<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fairing Scalar Fields by Variational Modeling of Contours</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Bertram</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Kaiserslautern</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Fairing Scalar Fields by Variational Modeling of Contours</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>G.1.2 [Numerical Analysis]: Approximation-Approximation of Surfaces and Contours</term>
					<term>G.1.6 [Numerical Analysis]: Optimization-Constrained Optimization</term>
					<term>I.4.3 [Image Processing and Computer Vision]: Enhancement-Smoothing Contours, Fairing, Variational Modeling</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Volume rendering and isosurface extraction from three-dimensional scalar fields are mostly based on piecewise trilinear representations. In regions of high geometric complexity such visualization methods often exhibit artefacts, due to trilinear interpolation. In this work, we present an iterative fairing method for scalar fields interpolating function values associated with grid points while smoothing the contours inside the grid cells based on variational principles. We present a local fairing method providing a piecewise bicubic representation of two-dimensional scalar fields. Our algorithm generalizes to the trivariate case and can be used to increase the resolution of data sets either locally or globally, reducing interpolation artefacts. In contrast to filtering methods, our algorithm does not reduce geometric detail supported by the data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Visualization of two-and three-dimensional scalar fields, like terrain models and computer tomography images, is mostly based on bilinear (trilinear) interpolation of function values sampled on regular rectangular (hexahedral) grids. Multilinear interpolation is efficiently evaluated, but it often provides contours of poor quality due to lacking smoothness and incorrect topology when reconstructing small features, see figure 1. (Contours denote level curves f (x, y) = const. in two-dimensional scalar fields and isosurfaces f (x, y, z) = const. in volume data sets.) Artefacts of this kind can be reduced by gaussian filtering of the discrete data set, but this also will corrupt geometric details of fine resolution.</p><p>Smooth interpolation using, for example cubic B-splines, will provide smoother contour components without attempting to preserve topological features. A smooth scalar field may still have many contour components of high curvature that could be merged to larger and smoother contours. An approach is needed for fairing each individual contour such that it is consistent with the discrete data (located at the grid points) and does not intersect other contours. Fairing parametric curves and surfaces is well known, but in our case the geometry is implicitly defined and cannot be processed using the same techniques.</p><p>In the present work we attempt to overcome this problem by performing an optimization process on the entire domain of the scalar field. Therefore, we minimize the variation of the scalar field's gradient along all individual contours. This gradient defines the normal vector of a contour multiplied with the local slope of the scalar field. Minimizing its variation along the tangent vector (plane) of a contour in every point of the volume provides a representation with smoother contours, emphasizing regions of great slope.</p><p>The contents of the paper are organized as follows. In section 2, we summarize related work. Section 3 presents the theory of our optimization method, independent of the choice of basis functions. We develop a concrete algorithm based on a bicubic B-spline representation and local fairing with linear time complexity in section 4. Sections 5 and 6 provide numerical examples and conclusions, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>A variety of different contouring schemes exist for the reconstruction of isosurfaces from piecewise trilinear scalar fields. The original marching cubes algorithm <ref type="bibr" target="#b7">[Lorensen and Cline 1987]</ref> has been adapted to hierarchical data representations <ref type="bibr" target="#b13">[Westermann et al. 1999]</ref>. Feature lines can be recognized in the extracted contours <ref type="bibr" target="#b6">[Kobbelt et al. 2001]</ref>. Efficient methods extract multiple contours for volume rendering purposes <ref type="bibr" target="#b4">[Gerstner 2001</ref>].</p><p>An important breakthrough is the extraction of topologically correct isosurfaces with respect to the trilinear interpolant <ref type="bibr" target="#b9">[Nielson 2003</ref>]. Topological analysis of scalar fields provides critical points where the topology of contours changes when a passing a certain isovalue <ref type="bibr" target="#b10">[Weber et al. 2003</ref>]. Unfortunately, the topology of a trilinear interpolant is often different from the topology of an original scalar field prior to discretization. The question arises how to find the best reconstruction of the original shape consistent with the discrete data.</p><p>Image processing techniques like anisotropic diffusion <ref type="bibr" target="#b11">[Weickert 1998;</ref><ref type="bibr" target="#b3">Diewald et al. 2000]</ref> are capable of recognizing local features, but they modify the data. Such approaches are mostly useful when the data is contaminated with noise. Fairing techniques of this kind are also applicable to the fairing of geometric shapes <ref type="bibr" target="#b2">[Desbrun et al. 1999;</ref><ref type="bibr" target="#b1">Clarenz et al. 2000]</ref>.</p><p>Variational modeling <ref type="bibr" target="#b12">[Welch and Witkin 1992;</ref><ref type="bibr" target="#b5">Hagen et al. 1993</ref>] provides a useful tool for fairing individual surfaces. An efficient method extracting and fairing a single isosurface consistent with the discrete data has recently been described <ref type="bibr" target="#b8">[Nielson et al. 2003</ref>]. In the present work, we extend the variational methods to fairing the entire set of contours in a scalar field. We present a local fairing algorithm blending local estimates into a global representation, in analogy to a fitting method developed earlier for scattered data approximation <ref type="bibr" target="#b0">[Bertram et al. 2003</ref>].</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Variational Modeling of Contours</head><p>In this section, we first summarize related work on variational modeling. Then, we introduce our new approach for fairing contours. Fairness is measured in terms of low curvature providing visually pleasant curves and surfaces. We obtain fairness by minimizing the <ref type="bibr">IEEE Visualization 2003</ref><ref type="bibr">, October 19-24, 2003</ref>, Seattle, Washington, USA 0-7803-8120-3/03/$17.00 ©2003 IEEE </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Classical Optimization Methods</head><p>Consider a parametric surface f (s,t) satisfying some interpolation constraints</p><formula xml:id="formula_0">f (s i ,t i ) = a i ,<label>(1)</label></formula><p>Where a i are interpolation values with corresponding parameter locations (s i ,t i ), see figure 2. The goal is to modify f , such that it minimizes some smoothness criterion, like thin-plate energy, and satisfies above interpolation constraints. We search this optimum in the space spanned by a certain basis, for example using B-splines. In order to simplify the optimization process, we use two sets of basis functions, Φ and Ψ, where Φ contains one basis function for every interpolation constraint and Ψ provides the remaining degrees of freedom used for fairing. One can easily construct these bases such that</p><formula xml:id="formula_1">f (s,t) = ∑ i:φ i ∈Φ a i φ i (s,t) + ∑ k:ψ k ∈Ψ c k ψ k (s,t), φ i (s j ,t j ) = δ i j , and ψ k (s j ,t j ) = 0. (2)</formula><p>For the fairing process, the coefficients c k need to be determined, minimizing a certain criterion. Note that the coefficients a i coincide with the given interpolation values, due to equation (2). As fairness criterion, often thin-plate energy is minimized:</p><formula xml:id="formula_2">f ss 2 + 2 f st 2 + f tt 2 ds dt → min,<label>(3)</label></formula><p>where f ss , f st , and f tt denote second partial derivatives of f . If the norm to be minimized is induced by a scalar product, for example, &lt; f , g &gt; T P = f ss g ss + 2 f st g st + f tt g tt ds dt,</p><p>then the constraints ∂ ∂ c k &lt; f , f &gt;= 0 necessary for optimization provide a linear system of equations, <ref type="bibr">(5)</ref> in matrix notation: Ac = b. The matrix A is positive definite and its rank equals the number of degrees of freedom |Ψ|. The solution of this system provides the remaining coefficients c representing f in equation <ref type="formula">2</ref>, minimizing the norm (3) among all choices of c. Optimization methods of this kind are known as variational modeling, see <ref type="bibr" target="#b12">[Welch and Witkin 1992;</ref><ref type="bibr" target="#b5">Hagen et al. 1993</ref>]. An example for thin-plate energy minimization is shown in figure 1(b).</p><formula xml:id="formula_4">∑ i:ψ i ∈Ψ c i &lt; ψ i , ψ k &gt; = − ∑ i:φ i ∈Φ a i &lt; φ i , ψ k &gt; ∀k : ψ k ∈ Ψ,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Fairing Contours</head><p>Now, we consider a two-dimensional scalar field f (x, y) bound to some interpolation constraints f (x i , y i ) = a i , as in equation <ref type="formula" target="#formula_0">1</ref>. Selecting a certain isovalue α, we want to fair the corresponding contour line composed of all points (x, y) satisfying f (x, y) = α. We note that the following deliberations also generalize to volumes, where contours are surfaces.</p><p>Suppose that we get hold of a parametric representation of the contour associated with isovalue α, say g(s) such that</p><formula xml:id="formula_5">f (g(s)) = α.<label>(6)</label></formula><p>Using this parametric form, fairing the contour can be achieved by minimizing its second derivative,</p><formula xml:id="formula_6">g (s) 2 ds → min.<label>(7)</label></formula><p>In the case of an arc-length parametrization, this is equivalent to minimizing the variation n s := ∂ n ∂ s of the contour's normal vector n along g(s), see figure 3:</p><formula xml:id="formula_7">n s (s) 2 ds → min. (8) ∆ ∆ ∆ s n g(s)</formula><p>g' n g' <ref type="figure">Figure 3</ref>: Deviation of g and n are equal in absolute value.</p><p>To emphasize regions of steep gradient in the fairing process, we replace the normal n(s) =</p><formula xml:id="formula_8">∇ f (g(s))</formula><p>∇ f (g(s)) by the gradient ∇ f in equation (8). The variation of this gradient has two components: n • ∇ 2 f orthogonal to g(s) and n × ∇ 2 f parallel to g(s). Hence, we have</p><formula xml:id="formula_9">∂ ∂ s ∇ f (g(s)) = n × ∇ 2 f ,<label>(9)</label></formula><p>since the derivative g has unit length (due to arc-length parametrization) and is orthogonal to n. The optimization problem for a single contour g(s) becomes</p><formula xml:id="formula_10">n × ∇ 2 f 2 ds → min.<label>(10)</label></formula><p>Finally, we eliminate the need for constructing an arc-length parametrization for every contour g. Since we intend fairing all contours of the scalar field in one single process, we need to integrate equation (10) with respect to α, which is equivalent to</p><formula xml:id="formula_11">n × ∇ 2 f 2 dx dy → min.<label>(11)</label></formula><p>Unfortunately, both n and ∇ 2 f depend on the scalar field f , turning this optimization problem into a non-linear problem requiring an iterative solution. In every iteration of this process, we use the normalized gradient field n(x, y) of the previous estimate for f . With the fixed normal field n = (n 1 , n 2 , 0) T , our scalar product inducing the norm for the optimization process becomes</p><formula xml:id="formula_12">&lt; f , g &gt; n = (n 2 f xx − n 1 f xy )(n 2 g xx − n 1 g xy ) +(n 2 f xy − n 1 f yy )(n 2 g xy − n 1 g yy ) dx dy.<label>(12)</label></formula><p>Inserting this norm into equation <ref type="formula">5</ref>and solving this system of equations provides the next estimate for f . The complete iterative algorithm works as follows: First, we compute f (0) using thin-plate energy minimization based on the scalar product &lt; •, • &gt; T P from equation (4). In order to compute f (i+1) from f (i) , we first sample the normalized gradient field n <ref type="bibr">(i)</ref> from f <ref type="bibr">(i)</ref> . Then, we compute f (i+1) from the optimization process using</p><formula xml:id="formula_13">&lt; f , g &gt; = (1 − w) &lt; f , g &gt; n (i) +w &lt; f , g &gt; T P ,<label>(13)</label></formula><p>where w is a small number, say 0.01. We added a small portion of thin-plate energy minimization to increase numerical stability (note that our criterion is fairing all contours while ignoring what isovalues are associated with these). All scalar products between basis functions are computed by numerical integration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Local-optimization Algorithm</head><p>The method developed in the previous section can be applied to smooth B-spline surfaces and volumes providing additional modeling degrees compared to multilinear interpolation. The remaining issues addressed in the following are constructing the bases Φ and Ψ satisfying equation <ref type="formula">2</ref>and localizing the fairing process to obtain linear computation time. Given a rectangular grid with associated function values, we consider every inner vertex with its 8-neighborhood for local fairing. We create four bicubic patches interpolating these 2 × 2 function values. Finally, the computed patches are blended into one single, piecewise bicubic representation. Generalization to volumes is straight forward. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Local Fairing</head><p>Considering a 2 × 2-matrix of scalar values a i j , we construct an interpolating bicubic B-spline surface composed of four bicubic patches. The two knot vectors are both {0, 0, 0, 0, 1, 2, 2, 2, 2}, providing interpolation of the four corner values and C 2 -continuity at the inner patch boundaries. The set of one-dimensional B-splines is illustrated in figure 4. <ref type="figure" target="#fig_1">Figure 5</ref> depicts the bivariate case.</p><p>Interpolation of the inner scalar values is obtained by a simple ϕ <ref type="figure">Figure 6</ref>: Transformed B-splines used for interpolation (φ 0 , φ 2 , φ 4 ) and optimization (φ 1 , φ 3 ).</p><formula xml:id="formula_14">s ∈ [0, 1) ϕ 0 (s) = −s 3 + 3s 2 − 3s + 1 ϕ 1 (s) = 2.25s 3 − 5.25s 2 + 3s ϕ 2 (s) = −2s 3 + 3s 2 ϕ 3 (s) = 7.5s 3 − 7.5s 2 ϕ 4 (s) = 0 s ∈ [1, 2] ϕ 0 (s) = 0 ϕ 1 (s) = −7.5s 3 + 3.75s 2 − 6s + 3 ϕ 2 (s) = 2s 3 − 9s 2 + 12s − 4 ϕ 3 (s) = −2.25s 3 + 8.25s 2 − 9s + 3 ϕ 4 (s) = s 3 − 3s 2 + 3s − 1</formula><p>basis transform:</p><formula xml:id="formula_15">ϕ 0 = N 04 , ϕ 1 = N 14 − 0.5N 24 , ϕ 2 = 2N 24 , ϕ 3 = N 34 − 0.5N 24 , ϕ 4 = N 44 . (14)</formula><p>The coefficients of the basis functions ϕ i depicted in <ref type="figure">figure 6</ref> are provided in table 1. The reader may verify the following properties: ϕ 0 (0) = 1, ϕ i (0) = 0, i = 1, 2, 3, 4; ϕ 2 (1) = 1, ϕ i (1) = 0, i = 0, 1, 3, 4; ϕ 4 (2) = 1, ϕ i (2) = 0, i = 0, 1, 2, 3. <ref type="formula">15</ref>The basis functions used for the optimization process are tensor products ϕ i j (s,t) = ϕ i (s)ϕ j (t). The set Φ of interpolating functions is composed of ϕ i j : i, j ∈ {0, 2, 4}. The remaining functions provide degrees of freedom for the optimization process and are thus elements of Ψ. In the bivariate case, we obtain |Φ| = 9 and |Ψ| = 16. (In the trivariate case: |Φ| = 27 and |Ψ| = 98.)</p><p>Using the bases Φ and Ψ, the optimization process described in section 3 is performed. We found that the iterative process converges very fast, such that two or three iterations are sufficient. After computing local representations of the scalar field, we need to blend the overlapping B-spline patches into a global representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Merging Surface Components</head><p>For merging the B-spline surfaces located around the inner grid points, we transform every surface into 2 × 2 Bézier patches. Start-ing with the surface representation</p><formula xml:id="formula_16">h(s,t) = 4 ∑ i=0 4 ∑ j=0 c i j ϕ i (s)ϕ j (t),<label>(16)</label></formula><p>the basis transform provides a 7×7-matrix of Bézier points defining the four patches.</p><p>Considering only one row (column) of coefficients c i , the representation</p><formula xml:id="formula_17">4 ∑ i=0 c i ϕ i (s), s ∈ [0, 2]<label>(17)</label></formula><p>is transformed into two cubic Bézier segments</p><formula xml:id="formula_18">3 ∑ i=0 b i B 3 i (s), s ∈ [0, 1) and 3 ∑ i=0 b i+3 B 3 i (s − 1), s ∈ [1, 2],<label>(18)</label></formula><p>where <ref type="formula">B</ref> </p><formula xml:id="formula_19">b 0 = c 0 , b 1 = c 1 , b 2 = c 2 + 0.25c 1 − 0.25c 3 , b 3 = c 2 , b 4 = c 2 − 0.25c 1 + 0.25c 3 , b 5 = c 3 , b 6 = c 4 .<label>(19)</label></formula><p>This one-dimensional transform is applied to the rows and then to the columns providing the Bézier points of the four patches.</p><p>For every inner grid cell, we have four Bézier patches computed from the local fairing around each of the four corner points. From the fairing process around a grid point p, we keep only those Bézier points that are closer to p than to any other inner grid point, see <ref type="figure" target="#fig_3">figure 8</ref>.</p><p>The final representation of the scalar field is now C 1 -continuous, since only the first partial derivatives are continuous across patch boundaries. C 2 -continuity is approximated, since we merge multiple overlapping B-spline surfaces. We note that a B-spline representation of the final scalar field using double knots is more memory efficient than the Bézier representation. If a multilinear representation is preferred, our algorithm can be used to increase the resolution in regions of high geometric complexity. The smooth scalar field representation is then sampled at a finer resolution with respect to the initial data. Hierarchical representations can be stored in a quadtree (octree), see <ref type="bibr" target="#b13">[Westermann et al. 1999]</ref>. We note that a refined representation will not carry more geometric detail than provided by the data at its initial resolution. Our objective is removing geometric detail which is due to interpolation artefacts.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Numerical Examples</head><p>The examples in figures 1, 9, and 10 were computed on a PC equipped with a 1466 MHz AMD Athlon Processor. The computation times for fairing a 7 × 7 and a 10 × 10 data set are summarized in table 2. These examples show that the algorithm is still time consuming, despite of its linear time complexity. Hence, it may be used in a preprocessing step for data preparation. Our algorithm is easily implemented in parallel.</p><p>no. vertices 49 (25) 100 <ref type="formula">64</ref>thin-plate 1.16 2.96 one iteration 2.60 6.72 <ref type="table">Table 2</ref>: Computation times in seconds for thin-plate energy minimization and for one iteration of the fairing process. Note that the number of inner vertices (in brackets) determines the number of local surfaces to be computed.</p><p>The local fairing examples in figure 9 suggest a fast convergence rate. The global examples in figures 1 and 10 show the improved contours with respect to the bilinear interpolant. In particular, diagonal features are better represented after fairing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions and Future Work</head><p>We presented a new variational modeling method for fairing contours of scalar fields. Despite of linear time complexity, our algorithm is computationally expensive. However, it is easily implemented in parallel for processing large data sets. We have presented bivariate examples for our technique, but we have not yet explored its behavior in trivariate applications. We expect that the proposed technique will significantly improve volume rendering of poorly sampled data, eliminating artefacts due to trilinear interpolation. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :Figure 2 :</head><label>12</label><figDesc>(a) Bilinear interpolation of a regularly sampled feature; (b) bicubic interpolation with local minimization of thin-plate energy; (c) local fairing of contours.overall curvature of a geometric shape within a prescribed space of basis functions representing the geometry. Interpolating parametric surface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 5 :</head><label>5</label><figDesc>Every local B-spline surface is defined by 25 coefficients (de Boor points) satisfying 9 interpolation constraints.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 7 :</head><label>7</label><figDesc>Relation between coefficients c i , de Boor points d i , and Bézier points b i . The relation to the coefficients c i , the corresponding de Boor points d i , and the Bézier points b i is shown in figure 7. The two Bézier segments composed of the points b 0 , b 1 , b 2 , b 3 and b 3 , b 4 , b 5 , b 6 , are obtained by</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 8 :</head><label>8</label><figDesc>Grid with 6 × 5 interpolation points and 5 × 4 Bézier patches. The shaded regions indicate which Bézier points are determined by each B-spline surface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 9 :Figure 10 :</head><label>910</label><figDesc>Iterative fairing for two different local situations. (a) Initial thin-plate minimization; (b) first iteration; (c) second iteration; (d) result after ten iterations. Circle sampled by 10 × 10 points. (a) Bilinear contours; (b) fair contours after two iterations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>One-dimensional basis functions.</figDesc><table><row><cell>ϕ</cell><cell>0</cell><cell>ϕ</cell><cell>2</cell><cell>ϕ</cell><cell>4</cell></row><row><cell></cell><cell>1</cell><cell></cell><cell>ϕ</cell><cell>3</cell><cell></cell></row><row><cell>0</cell><cell></cell><cell></cell><cell>1</cell><cell></cell><cell>2</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Adaptive smooth scattered-data approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bertram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, IEEE, Data Visualisation</title>
		<meeting>VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, IEEE, Data Visualisation</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="177" to="184" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Nonlinear anisotropic diffusion in surface processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Clarenz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Diewald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;00</title>
		<meeting>Visualization&apos;00</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="397" to="405" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Implicit fairing of irregular meshes using diffusion and curvature flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Siggraph&apos;99</title>
		<meeting>Siggraph&apos;99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="317" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Anisotropic diffusion in vector field visualization on euclidean domains and surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Diewald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Preusser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="139" to="149" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Fast multiresolution extraction of multiple transparent isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, IEEE, Data Visualisation</title>
		<meeting>VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization, IEEE, Data Visualisation</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Variational principles in curve and surface design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Brunnett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Santarelli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Surveys on Mathematics for Industry</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1" to="27" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Feature-sensitive surface extraction from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Schwanecke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Siggraph&apos;01</title>
		<meeting>Siggraph&apos;01</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="57" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Marching cubes: a high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Siggraph&apos;87</title>
		<meeting>Siggraph&apos;87</meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Shrouds: optimal separating surfaces for enumerated volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Graf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Holmes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Phielipp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization</title>
		<meeting>VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="75" to="84" />
		</imprint>
	</monogr>
	<note>Data Visualisation</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">On marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="283" to="297" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Detecting critical regions in scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization</title>
		<meeting>VisSym&apos;03, Joint Eurographics and IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="85" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weickert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Anisotropic diffusion in image processing</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Variational surface modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Siggraph&apos;92, ACM</title>
		<meeting>Siggraph&apos;92, ACM</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="157" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Real-time exploration of regular volume data by adaptive reconstruction of isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="100" to="111" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
