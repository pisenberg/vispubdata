<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Monte Carlo Volume Rendering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Balázs</forename><surname>Csébfalvi</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">László</forename><surname>Szirmay-Kalos</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Control Engineering and Information Technology Technical</orgName>
								<orgName type="institution">University of Budapest</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<address>
									<postCode>2003</postCode>
									<settlement>Seattle</settlement>
									<region>Washington</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Monte Carlo Volume Rendering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>G.3 [Probability and Statistics]: Probabilistic Algorithms</term>
					<term>I.3.3 [Computer Graphics]: Picture/Image Generation-Display Algorithms</term>
					<term>I.3.7 [Computer Graphics]: Three-dimensional Graphics and Realism X-ray volume rendering, Monte Carlo integration, importance sampling, progressive refinement</term>
				</keywords>
			</textClass>
			<abstract>
				<p>(a) 1M samples. (b) 4M samples. (c) 16M samples. Figure 1: Perspective quasi-Monte Carlo volume rendering of an engine block using progressive refinement.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Due to the dynamic development of modern 3D scanning technologies, like CT or MRI, the size of the acquired data drastically increases. Therefore efficient and meaningful visualization of large data sets is still one of the most important problems in volume rendering research. In a high resolution volume, one single lowopacity voxel, like a drop in the bucket, has a minimal visual contribution. The question is, whether it is really necessary to process every single voxel in the data to compute high precision pixel values, which are finally quantized anyway. In this paper, an alternative solution is searched for, where instead of a regular resampling an importance-sampling strategy is followed in order to explore the relevant information contained in the data.</p><p>Exploitation of coherence: Applying the classical volume rendering methods, like ray casting <ref type="bibr" target="#b15">[Levoy 1988;</ref><ref type="bibr" target="#b3">Drebin et al. 1988]</ref>, or splatting <ref type="bibr" target="#b32">[Westover 1990</ref>], a volume of size N 3 can be rendered in O(N 3 ) time, since all the voxels have to be traversed. Many acceleration techniques exploit the data coherence by efficiently skipping the empty regions along the viewing rays <ref type="bibr" target="#b2">[Danskin and Hanrahan 1992;</ref><ref type="bibr" target="#b13">Lacroute and Levoy 1994;</ref><ref type="bibr" target="#b1">Cohen and Sheffer 1994]</ref>. However, this approach is data dependent and does not improve the worst case time complexity. From practical point of view, interactive rendering of large data sets can be ensured by applying progressive refinement, which is usually based on a hierarchical or multi-resolution decomposition of the volume <ref type="bibr" target="#b16">[Levoy 1990;</ref><ref type="bibr" target="#b14">Laur and Hanrahan 1991]</ref>. According to this approach, the lower resolution representation of the volume is interactively rotated and whenever the viewing angle is fixed, higher resolution representations are rendered progressively refining the image.</p><p>Improved time complexity: Another research direction aims at a lower time complexity exploiting a simplified visualization model rather than relying on the data coherence. For example, based on the Fourier projection-slice theorem, a simulated X-ray image of a volume of size N 3 can be rendered in O(N 2 log N) time <ref type="bibr" target="#b19">[Malzbender 1993]</ref>. Although the extended version of Fourier Volume Rendering (FVR) supports also shading and depth cueing <ref type="bibr" target="#b28">[Totsuka and Levoy 1993]</ref>, the compositing is limited to a simple intensity integration. Using FVR for rendering large data sets, it might also be a problem that its memory complexity is O(N 3 ). Therefore, if the Fourier transform of the volume does not fit into the main memory, the inverse transform of a slice with an arbitrary orientation might not be calculated efficiently enough to achieve interactive frame rates.</p><p>In order to allow progressive refinement in frequency domain rendering, FVR was successfully combined with the wavelet transform <ref type="bibr" target="#b6">[Gross et al. 1997]</ref>. This approach benefits from the fact that the Fourier transform of the wavelets and scaling functions can be computed analytically. Fourier Wavelet Volume Rendering (FWVR) <ref type="bibr" target="#b30">[Westenberg and Roerdink 2000]</ref> is another combined method, which incorporates the advantageous properties of Wavelet Splatting (WS) <ref type="bibr" target="#b17">[Lippert and Gross 1995]</ref> and frequency domain rendering. WS was proposed to extend the splatting method by using the wavelets as reconstruction filters. Due to the hierarchical wavelet transform, the data can be visualized by WS at different levels of detail. Similarly to the original splatting method, the time complexity of WS is O(N 3 ). In contrast, FWVR inherits the O(N 2 log N) time complexity of FVR and allows a quick progressive refinement by directly computing the wavelet decomposition of the rendered image. Frequency domain techniques, however, are limited to parallel projection and X-ray like compositing.</p><p>Hardware acceleration: Although the time complexity of brute-force volume-rendering methods is O(N 3 ), their hardware supported implementation can significantly reduce the constants in the "O notation". One possibility is to exploit the 3D texture mapping capability of the conventional graphics hardware <ref type="bibr" target="#b0">[Cabral et al. 1994;</ref><ref type="bibr" target="#b31">Westermann and Ertl 1998</ref>]. The main drawback of this technique is that large volumes (more than 256 3 voxels) currently cannot be loaded into the limited texture memory. Recently, a hierarchical wavelet decomposition of the volume was proposed, where only the levels of detail necessary for display are decompressed and sent to the texturing hardware <ref type="bibr" target="#b8">[Guthe et al. 2002]</ref>. However, it might happen that the hierarchical representation does not fit even into the main memory, so the performance is drastically reduced because of inefficient swapping. Similar problems arise when the special-purpose VolumePro board <ref type="bibr" target="#b21">[Pfister et al. 1999</ref>] is used to visualize large data sets.</p><p>Taking the above aspects into account, in this paper the strategy of reducing the time complexity as well as the memory complexity is followed. Therefore, similarly to FVR, a simplified optical model is applied. In Section 2 it is explained, how to calculate pixel intensities according to this simplified model by using Monte Carlo sampling. Applying this integration technique, in Section 3 a novel point-based X-ray volume-rendering algorithm is presented. Previously point-based techniques were proposed for surface rendering <ref type="bibr" target="#b29">[Wand et al. 2001;</ref><ref type="bibr" target="#b7">Grossman and Dally 1998</ref>], volume rendering <ref type="bibr" target="#b33">[Wilson et al. 2002;</ref><ref type="bibr" target="#b34">Zwicker et al. 2001]</ref>, non-photorealistic illustration <ref type="bibr" target="#b18">[Lu et al. 2002;</ref><ref type="bibr" target="#b24">Secord et al. 2002]</ref>, and volume previewing <ref type="bibr" target="#b12">[Kreylos et al. 2000;</ref><ref type="bibr" target="#b23">Saito 1994</ref>], but according to our knowledge, Monte Carlo point sampling for X-ray like volume visualization has not been published before. In Sections 4 and 5, the applied quantization method, and the extension to depth cueing and shading are discussed. In Section 6 the deterministic version of the proposed method is introduced. In Sections 7 and 8 the Monte Carlo and quasi-Monte Carlo volume-rendering methods are evaluated and compared to previous techniques. Finally, in Section 9 the contribution of this paper is summarized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Monte Carlo Volume Rendering</head><p>Assume that the input volume is available as a finite number of density samples f (x i, j,k ) located at regular grid points. The convolution of this discrete representation with an appropriate reconstruction kernel h(x) results in a continuous 3D density function:</p><formula xml:id="formula_0">f (x) = ∑ i, j,k f (x i, j,k ) • h(x − x i, j,k ).</formula><p>(1)</p><p>In classical X-ray volume rendering, a viewing ray is cast through the center of each pixel and the line integral of f (x) is evaluated along the given ray. According to our approach, a pixel intensity I i, j is calculated as a volumetric integral of f (x) over a pyramidal domain V i, j which is projected onto the given pixel (see <ref type="figure" target="#fig_0">Figure 2</ref>). The calculation of such a volumetric integral can be interpreted as an evaluation of infinitely many rays piercing through the rectangular pixel area. Applying the Monte Carlo method <ref type="bibr" target="#b25">[Sobol 1994</ref>], a volumetric integral</p><formula xml:id="formula_1">i j I V i, j image plane volume V i, j</formula><formula xml:id="formula_2">I = g(x)dx (2)</formula><p>is formulated as an expected value computation:</p><formula xml:id="formula_3">I = g(x) p(x) p(x)dx = E g(x) p(x) ,<label>(3)</label></formula><p>where p(x) is a probability density function of samples x. Taking a large number of x k samples obtained with density p(x), the expected value is estimated by the following average:</p><formula xml:id="formula_4">I = E g(x) p(x) ≈ 1 M M ∑ k=1 g(x k ) p(x k ) .<label>(4)</label></formula><p>The ideal probability density function is proportional to the integrand, and makes the variance of the estimation zero. The computation of this ideal density, however, would require integral I, thus it is not a feasible alternative. Therefore, in a usual application of Monte Carlo integration, the importance-sampling probability density only mimics the integrand, and is not exactly proportional to it. However, there is a class of problems where the application of the "ideal" sampling probability makes sense. Suppose that the integrals of a function need to be computed over many subdomains and the integral is known over the entire domain, that is the union of these subdomains. Thus we are able to construct an "ideal" sampling probability for the entire domain. If this probability density is used for the integrals in the subdomains, the error caused by the variation of the function can be eliminated, only the variation of the subdomain integrals remains. Using this scenario for volume rendering, a pixel intensity I i, j is calculated as follows:</p><formula xml:id="formula_5">I i, j = V i, j f (x)dx = V f (x)v i, j (x)dx = E f (x)v i, j (x) p(x) ,<label>(5)</label></formula><p>where the visibility function v i, j (x) is defined as:</p><formula xml:id="formula_6">v i, j (x) = 1 if x ∈ V i, j 0 otherwise.<label>(6)</label></formula><p>The visibility function v i, j (x) takes only those x samples into account which fall into the domain V i, j . This function is introduced in order to formulate integral I i, j over the entire volume V rather than over the domain V i, j . Since we want to use the same set of random samples x k to generate different views of the volume, the probability density function p(x) is defined proportional only to the view-independent term of the integrand, that is the reconstructed density function itself:</p><formula xml:id="formula_7">p(x) = f (x) V f (x)dx .<label>(7)</label></formula><p>The probability that a random sample x k falls into the domain V i, j is expressed as:</p><formula xml:id="formula_8">p i, j = V i, j p(x)dx.<label>(8)</label></formula><p>Due to the importance sampling, Equation 5 is simplified as follows:</p><formula xml:id="formula_9">I i, j = E f (x)v i, j (x) p(x) = V f (x)dx • E[v i, j (x)].<label>(9)</label></formula><p>When the integrals are mapped onto pixel intensities, their relative differences are important and not their absolute values. Therefore a normalized intensity I i, j is assigned to the corresponding pixel rather than the absolute value of integral I i, j :</p><formula xml:id="formula_10">I i, j = I i, j V f (x)dx = p i, j = E[v i, j (x)].<label>(10)</label></formula><p>Taking M number of x k random point samples according to the probability density function p(x), the expected value E[v i, j (x)] can be estimated by an average calculation:</p><formula xml:id="formula_11">E[v i, j (x)] ≈ 1 M M ∑ k=1 v i, j (x k ) = M i, j M ,<label>(11)</label></formula><p>where M i, j is the number of those point samples which fall into the domain V i, j . In fact, the random variable M i, j takes its value according to a binomial distribution:</p><formula xml:id="formula_12">P[M i, j ] = M M i, j p M i, j i, j (1 − p i, j ) M−M i, j .<label>(12)</label></formula><p>Therefore the variance</p><formula xml:id="formula_13">Var[M i, j /M] of the random variable M i, j /M is derived as follows: Var M i, j M = Var[M i, j ] M 2 = M p i, j (1 − p i, j ) M 2 = p i, j (1 − p i, j ) M .<label>(13)</label></formula><p>Thus, taking M random point samples, the random variable M i, j /M gives an unbiased estimation of the normalized pixel intensity I i, j with standard deviation O(M −1/2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">X-Ray Volume Rendering</head><p>Applying the results presented in the previous section, an X-ray like volume-rendering algorithm can be implemented in a very simple way. First the input volume is preprocessed and a point cloud of random samples is generated according to the probability density function p(x). Afterwards the point samples are projected onto the image plane. The normalized intensity of each pixel is estimated as the number of samples projected onto the given pixel divided by the number of all the samples in the point cloud.</p><p>In order to generate random point samples according to the probability density function p(x), a uniform random distribution has to be transformed into the required distribution <ref type="bibr" target="#b25">[Sobol 1994</ref>]. Let us denote the ith voxel in the sequence of voxels represented by the input file by v i . Assume that r 1 , r 2 , . . . , r M is a sequence of uniformly distributed and independent random numbers in the interval [0, 1]. Each random sample x k in the point cloud is generated in two steps from the corresponding random number r k in the following way. First a voxel location <ref type="figure">Figure 3)</ref>, where the distribution function F(v i ) is defined as:</p><formula xml:id="formula_14">v i(k) is randomly selected if r k &gt; F(v i−1 ) and r k ≤ F(v i ) (see</formula><formula xml:id="formula_15">F(v i ) = 1 ∑ n f (v n ) i ∑ j=1 f (v j ). (14) r k i 1 F( ) v i F( ) v i-1</formula><p>Figure 3: Random selection of the ith voxel.</p><p>In the second step, the normalized reconstruction kernel h (x) = h(x)/ h(y)dy (see Equation 1) is used as a local probability density function for generating a random translation vector t k , which is added to the voxel location v i(k) selected in the first step (such an irregular sampling is similar to interleaved sampling <ref type="bibr" target="#b9">[Keller and Heidrich 1998</ref>], which was proposed to reduce inter-pixel aliasing). Thus the kth random sample in the point cloud is calculated as</p><formula xml:id="formula_16">x k = v i(k) + t k .</formula><p>The restrictions for the reconstruction kernel h(x) are the following:</p><p>1. h(x) is separable as a direct product of 1D kernels, 2. h(x) is non-negative over its domain,</p><p>3. the integral of h(x) exists over all intervals.</p><p>In practice, the number of samples in the point cloud is a compromise between image quality and rendering speed, therefore it can be adapted to the available hardware resources. On the one hand, the point cloud has to fit into the main memory to avoid swapping during the rendering. On the other hand, the rendering speed depends on the performance of the processor. The trade-off between image quality and speed, however, can be controlled by progressive refinement (see <ref type="figure">Figure 1)</ref>. A subset of the point samples can be interactively rotated, and after having the appropriate viewing direction fixed, the rest of the samples are projected onto the image plane progressively refining the estimation.</p><p>A naive implementation of the preprocessing would require a random access to the voxels, and it might cause an inefficient swapping if the entire volume does not fit into the main memory. Therefore it is worthwhile to sort random sequence r 1 , r 2 , . . . , r M in an ascendant order beforehand, since in this case the voxels v i can be accessed in the order as they are stored in the data set. Thus the volume can be processed slice by slice without loading it entirely into the main memory. However, the random point samples have to be projected onto the image plane in an order which corresponds to the generation order of random numbers r i because of the progressive refinement. Therefore, after the preprocessing, the point samples are written into an output file in this original order. Note that, if the input volume is anisotropic, it can be preprocessed as it was an isotropic one, and afterwards the generated point samples can be scaled according to the real sampling distances.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Quantization</head><p>A simulated X-ray image of the volume is rendered by quantizing the estimated normalized intensities onto L gray levels provided by the available display device. For each pixel, the quotient M i, j /M is mapped onto a quantized pixel intensity Q i, j using the following formula:</p><formula xml:id="formula_17">Q i, j = L − 1 if L •W H • B • M i, j /M ≥ L L •W H • B • M i, j /M otherwise,<label>(15)</label></formula><p>where W and H are the width and height of the image in pixels respectively, while B is the average luminance taken from the interval [0, 1]. Such a mapping of the estimated normalized intensities maintains the average pixel brightness in images of different resolutions generated from the same number of random samples.</p><p>It is easy to see that the average pixel variance of the generated image is maximum if the projection of the volume is uniformly distributed. In this worst case p i, j = 1/W H, therefore the variance Var[M i, j /M] is derived from Equation 13 as follows:</p><formula xml:id="formula_18">Var M i, j M = 1 M 1 W H − 1 W 2 H 2 .<label>(16)</label></formula><p>The probabilistic error of the image is characterized by the average standard deviation of the quantized pixel intensities Q i, j , which can be reduced under the level of quantization error if the following condition is fulfilled:</p><formula xml:id="formula_19">M &gt; 1 W H − 1 W 2 H 2 •W 2 H 2 B 2 L 2 ≈ W HB 2 L 2 .<label>(17)</label></formula><p>For example, assuming an image resolution of 256 × 256, 256 quantization levels (L = 256), and a brightness factor B = 1/16, a simulated X-ray image of an arbitrarily large volume can be generated from 16M random samples keeping the average standard deviation of pixel values under the level of quantization error. From practical point of view, an appropriate image quality can be ensured by taking even fewer samples, since a human eye can distinguish less then 256 gray levels. The number of samples necessary for a certain accuracy depends on the square of the brightness factor B. On the other hand, setting a higher value of B, more pixels will "burn out" (intensity is quantized to L − 1) making their variances zero. Therefore these pixels will not contribute to the overall image error.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Depth Cueing and Shading</head><p>The main drawback of the classical X-ray like volume rendering is the low contrast of the generated images and the lack of depth information. The spatial impression can be improved by depth cueing and shading. For shading computations surface normals are necessary, therefore gradients at grid points have to be estimated by using, for example, the method of central differences. Note that the gradients of random samples can be calculated during the preprocessing by trilinearly interpolating the estimated gradients at the eight closest grid points. The interpolated and normalized gradients, that are considered to be surface normals, are stored together with the location vectors in an array representing a point cloud. In the rendering process, each density sample f (x k ) is multiplied by a depth-cueing factor d(x k ) and a shading factor s(x k ) calculated according to normal n k and the lighting conditions. In this case, pixel intensity I i, j is estimated in the following way:</p><formula xml:id="formula_20">I i, j ≈ 1 M M ∑ k=1 f (x k ) p(x k ) • v i, j (x k ) • s(x k ) • d(x k )<label>(18)</label></formula><formula xml:id="formula_21">= V f (x)dx • 1 M M ∑ k=1 v i, j (x k ) • s(x k ) • d(x k ).</formula><p>MCVR also supports surface enhancement, where each sample intensity is weighted by the corresponding interpolated gradient magnitude rather than by the interpolated density value. In this case, the probability density function p(x) is calculated by normalizing the reconstructed function of gradient magnitudes instead of the reconstructed density function. Due to this modification, samples are taken with a higher probability from the vicinity of well defined isosurfaces rather than from homogeneous regions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Quasi-Monte Carlo Integration</head><p>The convergence can be slightly accelerated by applying quasi-Monte Carlo (QMC) <ref type="bibr" target="#b11">[Keller 1998</ref>] integration, which is formally equivalent to Monte Carlo (MC) integration but it operates with deterministic sequences instead of random numbers. However, its theoretical interpretation is different since terms like probability distribution cannot be used.</p><p>In order to generate a point cloud, a 3D low-discrepancy Halton sequence <ref type="bibr" target="#b10">[Keller 1996</ref>] defined in the unit cube is transformed into the required distribution. The kth vector in this 3D Halton sequence is calculated as</p><formula xml:id="formula_22">h k = [H 5 k , H 3 k , H 2 k ]</formula><p>, where H b k denotes the kth number in a 1D Halton sequence of base b. Each sample x k = [x k , y k , z k ] in the point cloud is generated from the corresponding Halton point h k according to the following equations:</p><formula xml:id="formula_23">H 2 k = z k 0 p(x, y, z)dxdydz,<label>(19)</label></formula><formula xml:id="formula_24">H 3 k = y k 0 p(x, y|z k )dxdy, H 5 k = x k 0 p(x|y k , z k )dx, where p(x, y, z) = f ([x, y, z]) f ([x, y, z])dxdydz , p(x, y|z k ) = p(x, y, z k ) p(x, y, z k )dxdy , p(x|y k , z k ) = p(x, y k , z k ) p(x, y k , z k )dx .</formula><p>In fact, these equations define a transformation T (x) which maps a sample location x in volume V onto a point h in the unit cube. Using this mapping for variable transformation, a pixel intensity I i, j can be formulated as follows:</p><formula xml:id="formula_25">I i, j = V c i, j (x)dx = [0,1] 3 c i, j (T −1 (h)) ∂ T −1 (h) ∂ h dh,<label>(20)</label></formula><p>where</p><formula xml:id="formula_26">c i, j (x) = f (x) • v i, j (x) • s(x) • d(x)</formula><p>, and</p><formula xml:id="formula_27">∂ T −1 (h) ∂ h</formula><p>is the Jacobian determinant of the inverse transformation <ref type="bibr" target="#b10">[Keller 1996;</ref><ref type="bibr" target="#b27">Szirmay-Kalos et al. 1998</ref>]. Applying the quasi-Monte Carlo approach, integral 20 is approximated as follows <ref type="bibr" target="#b11">[Keller 1998;</ref><ref type="bibr" target="#b20">Niederreiter 1992]</ref>:</p><formula xml:id="formula_28">I i, j ≈ 1 M M ∑ k=1 c i, j (T −1 (h k )) ∂ T −1 (h k ) ∂ h .<label>(21)</label></formula><p>According to the Koksma-Hlawka inequality <ref type="bibr" target="#b20">[Niederreiter 1992</ref>], the error of such an approximation is upperbounded by the product of the Hardy-Krause variation of the integrand and the discrepancy of the point set (which is O(log 3 M/M) for the threedimensional Halton series). Unfortunately, the integrands contain discontinuities at the domain boundaries, that are not necessarily parallel to the coordinate axes, thus the variation is infinite. The generalization of the Koksma-Hlawka inequality for such functions <ref type="bibr" target="#b26">[Szirmay-Kalos and Purgathofer 1999;</ref><ref type="bibr" target="#b22">Press et al. 1992]</ref> shows that in such cases the convergence rate is O(M −2/3 ).</p><p>The quasi-Monte Carlo preprocessing, similarly to MCVR, can also be performed without loading the entire data set into the main memory. If the 3D Halton points h k are sorted according to their z-coordinate, the corresponding samples x k can be generated processing the input volume slice by slice. Assuming that M = 2 m − 1, where m is a positive integer, the sorted sequence of z-components H 2 k is: 1/2 m , 2/2 m , . . . , (2 m − 1)/2 m . Due to this property of the Halton sequence of base 2, there is no need to use any conventional sorting algorithm. The corresponding y and x components can be easily generated from the z-component by using an inverse Halton generator for calculating the index k from H 2 k . Because of the progressive refinement, the x k samples are written into an output file in an order which corresponds to the generation order of points h k .</p><p>7 Implementation (Q)MCVR was implemented in C++ and tested on a 2GHz AMD Athlon XP 2600 PC with 1GB of RAM. The test CT data sets containing a lobster, an engine block, and an Xmastree, represent volumes of small (120 × 120 × 34), medium (256 × 256 × 110), and large size (512 × 512 × 999) respectively. <ref type="figure" target="#fig_1">Figure 4</ref> shows the RMS errors of the images generated by using MCVR (a, c) and QMCVR (b, d) for X-ray (a, b) and shaded (c, d) rendering. The normalized intensities were mapped onto the interval [0, 256) and the RMS errors were calculated before the quantization. The horizontal axis represents the M number of samples on a logarithmic scale. The image resolution was 256 × 256 for all the three test volumes, and the accurate solutions were calculated for this fixed image resolution by analytically integrating the translated and scaled copies of the reconstruction kernel, taking only those regions into account which are visible from the given pixel. The absolute error levels are mainly influenced by the brightness factors, which were B = 0.125 for X-ray rendering and B = 0.5 for shaded rendering. <ref type="figure">Figure 5</ref> shows the X-ray (a -f) and shaded images (g -l) generated by QM-CVR using 1M (a -c, g -i) and 16M (d -f, j -l) samples.</p><p>In order to demonstrate that our method does not necessarily require an expensive graphics card to achieve high performance, we implemented it purely in software without exploiting the 3D hardware acceleration. Frame rates of X-ray rendering and shaded rendering are shown in <ref type="table">Table 1</ref>. In case of shaded rendering the Lambertian model was used with three light sources of different colors (red, green, and blue).</p><p>In our future work, we intend to implement (Q)MCVR more efficiently using the latest generation graphics cards, which support additive alpha blending in 128-bit floating-point mode. In lowerprecision modes accumulated pixel values would easily overflow.  If high-precision alpha blending is supported, the GPU can execute all the tasks necessary for rendering, like projection, depth cueing, shading, and accumulation based on additive alpha blending. Furthermore, the performance can be optimized by loading the point cloud (or a subset of the point cloud), as a static vertex array, into the local video memory for a more efficient vertex processing. Although, taking the same number of sample points, QMCVR provides more accurate results than MCVR does, its preprocessing cost is significantly higher due to the more complicated generation of sample points. In a practical application, a hybrid approach can be applied as a trade-off between MC and QMC preprocessing. For example, using a deterministic Halton sequence to generate quasi random numbers (r k = H 2 k ) for the cumulative technique presented in Section 3, almost the same image quality can be achieved as using QMC sampling. Furthermore such a hybrid preprocessing is even faster than a pure MC sample generation, since there is no need to sort the samples (see Section 6). <ref type="table" target="#tab_1">Table 2</ref> shows the preprocessing times for MCVR and QMCVR generating 16M sample points. In both cases a direct product of a tent filter was used as a reconstruction kernel h(x), which is equivalent to a trilinear interpolation. When samples are produced for X-ray rendering only the location vectors have to be calculated, while for shaded rendering at each sample point an additional gradient has to be interpolated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Comparison to Previous Methods</head><p>(Q)MCVR is based on volumetric rather than line integration, therefore a quantitative comparison to previous methods does not make sense. Considering the advantageous and disadvantageous properties, (Q)MCVR is compared to FVR and hardware accelerated 3D texture mapping (TM) in <ref type="table">Table 3</ref>. Among the previous techniques, FVR is considered to be theoretically the fastest volume-rendering method due to its O(N 2 log N) time complexity, while from the practical point of view, TM is one of the most popular hardware accelerated techniques, which provides interactive frame rates for volumes of medium size (256 3 ).</p><p>According to Section 4, the time complexity as well as the memory complexity of MCVR is proportional to the number of pixels (O(W H)) and does not depend on the number of voxels. However, projecting a volume of size N 3 onto an image of resolution N 2 seems to be a good base for fair comparison of time and memory costs. In this sense, the time complexity as well as the memory complexity of MCVR is O(N 2 ) (after a preprocessing of O(N 3 ) time complexity), where it is assumed that the image resolution is fixed (W = H = N) and zooming is not allowed. The same is valid for QMCVR since its asymptotic error bound is lower than that of MCVR. Although FVR and TM have time complexities O(N 2 log N) and O(N 3 ) respectively, due to the constants in the "O notation", (Q)MCVR provides lower frame rates when small data sets need to be rendered. </p><formula xml:id="formula_29">FVR TM (Q)MCVR time complexity O(N 2 log N) O(N 3 ) O(N 2 ) memory complexity O(N 3 ) O(N 3 ) O(N 2 ) accuracy</formula><p>depends on the slicing discrete approximation QMC: O(M −2/3 ), MC: O(M −1/2 ) compositing intensity integration alpha-blending intensity integration shading linear or approximate models Phong shading no restrictions projection parallel parallel or perspective parallel or perspective <ref type="table">Table 3</ref>: Comparison of (Q)MCVR to Fourier volume rendering (FVR) and texture mapping (TM).</p><p>However, in case of large volume data sets, the bottleneck of previous techniques is mainly their memory cost. For instance, FVR assumes that the frequency domain representation of the volume is stored in the main memory, therefore slicing can be performed efficiently enough to achieve interactive frame rates. Using 3D texture mapping, if the entire volume cannot be loaded into the limited 3D texture memory, it has to be decomposed into blocks, which are then swapped. In this case, it might also be a problem if the volume does not fit even into the main memory, so the performance is significantly reduced. In contrast, (Q)MCVR can be adapted to the available hardware resources, since the number of samples which guarantees a certain accuracy does not depend on the size of the input volume. If there is not enough memory to load the point cloud or the processor is not fast enough to achieve high frame rates, a lower-quality approximation can still be rendered interactively by projecting only an appropriate subset of the samples. Furthermore, network applications based on progressive refinement are also supported by (Q)MCVR.</p><p>Considering the image quality, it is difficult to compare (Q)MCVR to previous methods, since the visualization models they are based on are different. Theoretically FVR provides accurate line integrals along the viewing rays. In practice, however, the image quality strongly depends on the resampling filter applied for the slicing, which influences also the performance. Using TM, the discrete approximation of the volume rendering integral is calculated by resampling the volume along each viewing ray at evenly located sample points. Nevertheless, the image quality can be improved by using pre-integrated volume rendering <ref type="bibr" target="#b4">[Engel et al. 2001]</ref>. Applying MCVR a probabilistic O(M −1/2 ) error bound can be ensured, while QMCVR has O(M −2/3 ) error bound.</p><p>The major drawback of (Q)MCVR is that compositing is limited to intensity integration, like in case of FVR. On the other hand, FVR is restricted to linear (like hemispherical illumination) or approximate shading models <ref type="bibr" target="#b5">[Entezari et al. 2002]</ref>, while using (Q)MCVR there is no such a restriction. Furthermore FVR is limited to parallel projection, while (Q)MCVR supports also perspective projection.</p><p>One further drawback of (Q)MCVR is, that it is designed for external views. Therefore, similarly to some previous methods, like FVR or the shear-warp algorithm <ref type="bibr" target="#b13">[Lacroute and Levoy 1994]</ref>, volume navigation and high-quality zooming are not supported. </p><p>Figure 5: X-ray (a -f) and shaded (g -l) images of the test data sets generated by quasi-Monte Carlo volume rendering using 1M (a, b, c, g, h, i) and 16M (d, e, f, j, k, l) samples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Conclusion and Future Work</head><p>In this paper novel volume-rendering methods based on Monte Carlo and quasi-Monte Carlo integration have been presented. These techniques are mainly proposed to interactively visualize large data sets, which do not necessarily fit into the main memory. It has been shown, that the time complexity as well as the memory complexity of (Q)MCVR is proportional to the number of pixels and does not depend on the number of voxels. Assuming a fixed image resolution, there exists an M number of samples such that the average error of the estimated pixel intensities is under the level of quantization error regardless of the size and the content of the data. In this sense, accurate X-ray like images of arbitrarily large volumes can be produced in constant time after the preprocessing. Moreover, our method supports depth cueing, shading, and progressive refinement. Its main drawback, however, is that compositing is limited to intensity integration. Therefore, in our future work, we will investigate, how to introduce occlusion into (Q)MCVR.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Calculation of a pixel intensity as a volumetric integral over the corresponding pyramidal domain.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>RMS errors of X-ray (a, b) and shaded (c, d) images generated by Monte Carlo (a, c) and quasi-Monte Carlo (b, d) volume rendering.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>MC and QMC preprocessing times for 16M samples.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work has been supported by OTKA 42735, IKTA 00159/2002 and the Slovenian-Hungarian Action Fund. The Xmastree data set was provided by the Institute of Computer Graphics and Algorithms at the Vienna University of Technology as a large benchmark scene for volume-rendering algorithms (http://ringlotte.cg.tuwien.ac.at/datasets/XMasTree/).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Accelerated volume rendering and tomographic reconstruction using texture mapping hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on</title>
		<meeting>IEEE Symposium on</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">Visualization</biblScope>
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Proximity clouds -an acceleration technique for 3D grid traversal</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Sheffer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="38" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Fast algorithms for volume ray tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Danskin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Workshop on Volume Visualization</title>
		<meeting>Workshop on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH &apos;88</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page" from="65" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">High-quality pre-integrated volume rendering using hardware-accelerated pixel shading</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Engel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROGRAPHICS/SIGGRAPH Workshop on Graphics Hardware</title>
		<meeting>EUROGRAPHICS/SIGGRAPH Workshop on Graphics Hardware</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="9" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Shading for Fourier volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Entezari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scoggins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Volume Visualization and Graphics</title>
		<meeting>IEEE Symposium on Volume Visualization and Graphics</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="131" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Two methods for wavelet-based volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lippert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Dittrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Häring</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="237" to="252" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Point sample rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Grossman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Dally</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROGRAPHICS Workshop on Rendering</title>
		<meeting>EUROGRAPHICS Workshop on Rendering</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="181" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Interactive rendering of large volume data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gonser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strasser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="45" to="52" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Interleaved sampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Keller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Heidrich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROGRAPHICS Workshop on Rendering</title>
		<meeting>EUROGRAPHICS Workshop on Rendering</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="269" to="276" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The fast calculation of form factors using low discrepancy sequences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Keller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Spring Conference on Computer Graphics</title>
		<meeting>Spring Conference on Computer Graphics</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="195" to="204" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Quasi Monte Carlo Methods for Photorealistic Image Synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Keller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Shaker Verlag Aachen</publisher>
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A multi-resolution interactive previewer for volumetric data on arbitrary meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Workshop on Computer Graphics and Virtual Reality</title>
		<meeting>Workshop on Computer Graphics and Virtual Reality</meeting>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Fast volume rendering using a shear-warp factorization of the viewing transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lacroute</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<ptr target="http://www-graphics.stanford.edu/papers/shear/" />
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH &apos;94)</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="451" to="457" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Hierarchical splatting: A progressive refinement algorithm for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;91</title>
		<meeting>SIGGRAPH &apos;91</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="285" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Volume rendering by adaptive refinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="2" to="7" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Fast wavelet based volume rendering by accumulation of transparent texture maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lippert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROGRAPHICS &apos;95</title>
		<meeting>EUROGRAPHICS &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="431" to="443" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Non-photorealistic volume rendering using stippling techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rheingans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="211" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Fourier volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Malzbender</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="233" to="250" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Random number generation and quasi-Monte Carlo methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Niederreiter</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<pubPlace>SIAM, Pennsilvania</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">The VolumePro real-time ray-casting system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hardenbergh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Knittel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Lauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Seiler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH &apos;99</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="251" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Flannery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Vetterling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerical Recipes in C</title>
		<imprint>
			<date type="published" when="1992" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
	<note>Second Edition</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Real-time previewing for volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Saito</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Symposium on Volume Visualization</title>
		<meeting>IEEE Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="99" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Fast primitive distribution for illustration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Secord</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Heidrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">M</forename><surname>Streit</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROGRAPHICS Workshop on Rendering</title>
		<meeting>EUROGRAPHICS Workshop on Rendering</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="215" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">A Primer for the Monte Carlo Method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sobol</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>CRC Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Analysis of the quasi-Monte Carlo integration of the rendering equation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Szirmay-Kalos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Purgathofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Winter School of Computer Graphics</title>
		<meeting>Winter School of Computer Graphics</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="281" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Importance driven quasi-random walk solution of the rendering equation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Szirmay-Kalos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Csébfalvi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Purgathofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Winter School of Computer Graphics</title>
		<meeting>Winter School of Computer Graphics</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="379" to="385" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Frequency domain volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Totsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<ptr target="http://www-graphics.stanford.edu/papers/fvr/" />
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH &apos;93</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The randomized z-buffer algorithm: Interactive rendering of highly complex scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">M</forename><surname>Auf Der Heide</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strasser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH 2001</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Frequency domain volume rendering by the wavelet X-ray transform</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Westenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">B T M</forename><surname>Roerdink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1249" to="1261" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Efficiently using graphics hardware in volume rendering applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH &apos;98</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="169" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Footprint evaluation for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;90</title>
		<meeting>SIGGRAPH &apos;90</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="144" to="153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Interactive visualization of particle beams for accelerator design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Qiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ryne</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICCS 2002</title>
		<editor>M.A. Sloot et al.</editor>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">2331</biblScope>
			<biblScope unit="page" from="352" to="361" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">EWA volume splatting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Baar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="29" to="36" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
