<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualization of Volume Data with Quadratic Super Splines</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Rössl</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><surname>Zeilfelder</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Institut für Mathematik</orgName>
								<orgName type="institution">Universität Mannheim</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Günther</forename><surname>Nürnberger</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Institut für Mathematik</orgName>
								<orgName type="institution">Universität Mannheim</orgName>
								<address>
									<settlement>Mannheim</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Max-Planck-Institut für Informatik</orgName>
								<address>
									<settlement>Saarbrücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<settlement>Seattle, Washington</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visualization of Volume Data with Quadratic Super Splines</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>G.1.2 [Numerical analysis]: Approximation-Spline and piecewise polynomial approximation ; I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Splines volume rendering</term>
					<term>reconstruction</term>
					<term>quadratic super splines</term>
					<term>tetrahedral partition</term>
					<term>Bernstein-Bézier techniques</term>
					<term>isosurface rendering</term>
					<term>ray-casting</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Figure 1: Isosurfaces of the synthetic Marschner-Lobb benchmark [Marschner and Lobb 1994] (41 3 samples, isovalue 1 2). The approximation error to the original function in the uniform norm is color coded (from red≥ 0.075 to blue=0) for the standard trilinear model (left) and our new quadratic super splines (right). The center image shows a visually perfect reconstruction using our model for (4 × 41) 3 samples. The maximum error is 0.0065 (center) compared to 0.088 (right) which illustrates that the quasi-interpolating spline yields nearly optimal approximation order.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Three dimensional scalar fields defined over a set of discrete samples arise in many applications such as scientific visualization or medical imaging. Volume rendering is an important technique for visualizing these data sets. A fundamental problem is to find a nondiscrete model or reconstruction of the data, e.g. a density function. An ideal model would provide efficient approximation of huge, often noisy data sets, as well as efficient and exact evaluation of function values and gradients which are required for high-quality visualization. Finding an appropriate model is an extremely difficult task for general data sets.</p><p>The problem is less complex if the data is structured so that the samples are arranged on a regular three-dimensional grid. For instance, CT or MRI sensors, seismic applications or results from numerical simulations typically generate this type of gridded data which is subsequently visualized by volume rendering. In this paper, we present new models of such gridded volume data, namely quadratic, trivariate super splines on uniform tetrahedral partitions which yield efficient approximations that can be evaluated and implemented easily.</p><p>Reconstruction of volume data has been an active area of research for the last decades and many different models have been proposed. General reconstruction of a discrete sampling is well studied in signal processing, and Fourier analysis leads to optimal models. However, optimal models are often not feasible in practice as they are based on global properties. In order to keep computational costs low, local methods have been studied extensively <ref type="bibr">(cf. [LaMar et al. 1999;</ref><ref type="bibr" target="#b27">Marschner and Lobb 1994;</ref><ref type="bibr" target="#b30">Mitchell and Netravali 1988;</ref><ref type="bibr" target="#b31">Möller et al. 1998]</ref>). It turns out that local (piecewise) polynomial constructions are often preferred due to their simplicity, efficiency and satisfying reconstructions.</p><p>In this context, the simplest model is a piecewise constant approximation based on the closest sample or on some averaging of nearby samples. The next natural model is to use trivariate linear polynomials i+j+k≤1 a i,j,k x i y j z k , where a i,j,k ∈ R, i + j + k ≤ 1. Using these functions, a tetrahedral partition ∆ is needed, and the model becomes a linear trivariate spline on ∆ (see <ref type="bibr" target="#b4">[Bonneau et al. 1996;</ref><ref type="bibr" target="#b6">Carr et al. 2001;</ref><ref type="bibr" target="#b13">Gerstner and Rumpf 2000;</ref><ref type="bibr" target="#b14">Grosso et al. 1997]</ref>, for instance). More sophisticated models are needed if gradient information is required, e.g. for high quality shading. One of the most popular models in volume visualization is to use trilinear interpolants i,j,k=0,1 a i,j,k x i y j z k , where a i,j,k ∈ R, i, j, k = 0, 1, i.e. piecewise polynomials with total degree three of specific type (cf. <ref type="bibr" target="#b27">[Marschner and Lobb 1994;</ref><ref type="bibr" target="#b38">Parker et al. 1998</ref>], and the references therein). Approaches of this type often use central differences of the surrounding data samples to faithfully determine the gradient at a given point location.</p><p>Alternatively, models satisfying smoothness properties have been constructed. In this case, the necessary gradient information is directly available from the model, but the data stencil needed for the reconstruction generally increases. In order to keep computational costs low, local methods have been proposed. In some of these approaches (cf. <ref type="bibr" target="#b25">[LaMar et al. 1999;</ref><ref type="bibr" target="#b27">Marschner and Lobb 1994;</ref><ref type="bibr" target="#b30">Mitchell and Netravali 1988;</ref><ref type="bibr" target="#b31">Möller et al. 1998</ref>]) the models are based on tricubic splines (also known as cubic filters), i.e. piecewise polynomials of the form 3 i,j,k=0 a i,j,k x i y j z k , where a i,j,k ∈ R, i, j, k = 0, . . . , 3. These are special polynomials of total degree nine. Recently, smooth approximation models using triquadratic tensor splines have been proposed to further reduce the polynomial degree. In this case, the data stencil consists of 27 grid points, and 27 a i,j,k ∈ R, i, j, k = 0, 1, 2 coefficients determine each polynomial piece. These methods are based on the piecewise monomial representation (cf. <ref type="bibr" target="#b3">[Barthe et al. 2002;</ref><ref type="bibr" target="#b32">Mora et al. 2001]</ref>) or on the B-spline expansion of tensor splines (cf. <ref type="bibr" target="#b43">[Thévenaz and Unser 2001]</ref>), and the total degree of the polynomial pieces is six.</p><p>Moreover, reconstructions with high smoothness are discussed in <ref type="bibr" target="#b31">[Möller et al. 1998;</ref><ref type="bibr" target="#b43">Thévenaz and Unser 2001]</ref>, a mathematical framework using NURBS was developed in <ref type="bibr" target="#b28">[Martin and Cohen 2001]</ref>, and trivariate Coons patches were proposed in <ref type="bibr" target="#b17">[Holliday and Nielson 2000]</ref>. We note that the so called A-Patch methods (cf. e.g. <ref type="bibr" target="#b1">[Bajaj 1997;</ref><ref type="bibr" target="#b0">Bajaj et al. 1995;</ref><ref type="bibr" target="#b9">Dahmen 1989;</ref><ref type="bibr" target="#b8">Dahmen and Thamm-Schaar 1993]</ref> and the references therein) the zero-sets of trivariate piecewise polynomials are used for surface construction. The literature shows that designing an appropriate model for the visualization of volume data is always a compromise between computational efficiency and visual quality, where the most successful methods are based on local reconstructions. For further information on the field, we refer the interested reader to the recent books <ref type="bibr" target="#b2">[Bajaj 1999;</ref><ref type="bibr" target="#b7">Chen et al. 2000]</ref>, the surveys <ref type="bibr" target="#b5">[Brodlie and Wood 2001;</ref><ref type="bibr" target="#b22">Kaufman 2000;</ref><ref type="bibr" target="#b29">Meissner et al. 2000;</ref><ref type="bibr" target="#b33">Nielson 2000;</ref><ref type="bibr">Theußl et al. 2003</ref>] and the references therein.</p><p>In this paper, we present a new approach to efficiently visualize gridded volume data using a local spline model. In contrast to the existing approaches, the splines used here are piecewise polynomials of lowest possible total degree, namely, the polynomial pieces have the form i+j+k≤2 a i,j,k x i y j z k , where a i,j,k ∈ R, i + j + k ≤ 2. This means that the total degree is two. The quadratic splines are defined with respect to a tetrahedral partition ∆, hence their polynomial pieces are given on tetrahedra. Splines of this natural type have not yet been studied in the context of local volume data reconstruction. Based on our theoretical investigations of the structure concerning smooth trivariate splines of arbitrary degree (cf. <ref type="bibr" target="#b16">[Hangelbroek et al. 2003</ref>], and the references therein) and the facts known for bivariate splines (see <ref type="bibr" target="#b34">[Nürnberger and Zeilfelder 2000]</ref> and the references therein), we choose an appropriate uniform tetrahedral partition ∆ (see <ref type="figure" target="#fig_0">Fig. 2</ref>) and design a super spline model which we show to be appropriate for efficient volume visualization. We develop a natural and completely symmetric reconstruction method for these trivariate splines. Their coefficients are computed locally and directly by repeated averaging of the given data, while appropriate smoothness properties necessary for the visualization are automatically satisfied. Here, we take advantage of the (trivariate) Bernstein-Bézier representation of the quadratic polynomial pieces. This piecewise representation allows us to exploit the Bernstein-Bézier techniques well known from Computer Aided Geometric Design (CAGD) (see e.g. <ref type="bibr" target="#b21">[Hoschek and Lasser 1993]</ref>) to efficiently represent, compute, evaluate and visualize our volume spline model.</p><p>Our approach allows efficient and high-quality visualization of volume data, which we illustrate by rendering isosurfaces of wellknown synthetic and measured test data sets using ray-casting. Along an arbitrary ray the quasi-interpolating splines are univariate piecewise quadratics and consequently their exact intersection for a prescribed isovalue can be easily determined in an analytic and exact way by solving quadratic equations. Note that all the methods described above (except for those based on constant and linear trivariate splines on ∆) need to solve higher order equations through either approximative numerical methods, or -for cubic and quartic equations -implementation of Cardano's and Ferrari's exact formulae, respectively (cf. <ref type="bibr" target="#b41">[Schwarze 1990]</ref>). Finally, the gradient, necessary for quality shading, is determined efficiently in our method using Bernstein-Bézier techniques.</p><p>The paper is organized as follows. In Section 2, we describe quadratic super splines on a uniform tetrahedral partition ∆ and their piecewise Bernstein-Bézier form. The new approach based on these splines is given in Section 3. We proceed by describing computational aspects of further processing of the splines including the computation of point locations in ∆ and barycentric coordinates (Section 4), and the efficient evaluation of the polynomial pieces and their derivatives (Section 5). Precise and efficient rayisosurface intersection for rendering is discussed in Section 6. The paper concludes with computational results (Section 7) and comments on future investigations (Section 8). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Quadratic Trivariate Super Splines and Bernstein-Bézier Form</head><p>Our reconstruction is based on quadratic splines, i.e. piecewise polynomials of total degree two, on a natural uniform tetrahedral partition ∆. The partition ∆ is carefully chosen such that the local reconstruction described in the next section is possible. According to our experience, a simpler tetrahedral partition (where each cube is subdivided into five or six tetrahedra, for instance, cf. <ref type="bibr" target="#b6">[Carr et al. 2001</ref>] for a survey on uniform tetrahedral partitions) would not allow the construction of quadratic splines with the same smoothness and approximation properties. On the other hand, we observed in various tests that these properties are essential for high-quality visualization. Let ♦ be a uniform cube partition of the cubic domain Ω = [0, n] 3 ⊆ R 3 , where every cube Q ∈ ♦ has side length 1. We split each of the n 3 cubes Q into six (Egyptian) pyramids by connecting its center point vQ with the four vertices of every face of Q. Then, we insert both diagonals in these six faces of Q and connect their intersection points with vQ. This subdivides each of the six pyramids in Q into four tetrahedra, forming a natural, uniform</p><formula xml:id="formula_0">a 1,1,0,0 a 0,1,0,1 a 0,0,0,2 a 0,0,2,0 a 0,0,1,1 a 1,0,0,1 a 1,0,1,0 v 0 a 2,0,0,0 a 0,2,0,0 v 1 v 2 v 3 w 1 w 2 w q 1 q q 2 a 0,1,1,0</formula><p>T:</p><formula xml:id="formula_1">Figure 3:</formula><p>The ten Bézier points (white dots) of a quadratic polynomial inside a tetrahedron T are associated with the Bernstein-Bézier coefficients. The restriction of this trivariate polynomial piece to an arbitrary ray (red line) is a quadratic, univariate polynomial (red curve) which is uniquely determined by the values (red boxes) at three points (black boxes).</p><p>tetrahedral partition ∆ of Ω, where every cube Q ∈ ♦ contains 24 congruent tetrahedra. A more intuitive way to describe ∆ is to say that ∆ is the tetrahedral partition obtained by slicing Ω with the six planes which contain opposite edges of Ω. The partition ∆ is a generalization of the four-directional mesh which is well-known in the bivariate setting (cf. <ref type="bibr" target="#b8">[Chui 1988;</ref><ref type="bibr" target="#b10">Davydov and Zeilfelder 2003;</ref><ref type="bibr" target="#b15">Haber et al. 2001]</ref>). <ref type="figure" target="#fig_0">Fig. 2</ref> illustrates the construction of ∆. In the following we are interested in consistent splines which satisfy many smoothness conditions -such splines are called super splines.</p><p>The space of quadratic super splines with respect to ∆ is defined by S2(∆) = { s ∈ C(Ω) : s|T ∈ P2, for all T ∈ ∆, and</p><formula xml:id="formula_2">s is smooth at v, for all v vertices of ♦ }, where P2 = span {x i y j z k : i, j, k ≥ 0, i + j + k ≤ 2}</formula><p>denotes the ten-dimensional space of quadratic polynomials, i.e. the space of trivariate polynomials of total degree two. In our approximation method described in the next section we use quasi-interpolating splines from S2(∆) which possess many additional natural smoothness properties. Mathematically speaking, this means that we deal with appropriate subspaces of S2(∆), where the number of free parameters is considerably lower. A spline s ∈ S2(∆) can be written in its piecewise Bernstein-Bézier form (cf. <ref type="bibr" target="#b8">[Chui 1988;</ref><ref type="bibr" target="#b11">de Boor 1987;</ref><ref type="bibr">Farin 1986;</ref><ref type="bibr" target="#b21">Hoschek and Lasser 1993]</ref>), i.e. for every tetrahedron T = <ref type="bibr">[v0, v1, v2, v3]</ref> of ∆, we have</p><formula xml:id="formula_3">s|T = p = i+j+k+l=2 a i,j,k,l B i,j,k,l ,<label>(1)</label></formula><p>where a i,j,k,l ∈ R are called the Bernstein-Bézier coefficients of the polynomial piece p ∈ P2 associated with the Bézier points <ref type="figure">Fig. 3</ref>, where we indicate the ten Bernstein-Bézier coefficients by white dots.) Here, the ten polynomials</p><formula xml:id="formula_4">i 2 v0 + j 2 v1 + k 2 v2 + l 2 v3, i + j + k + l = 2. (See</formula><formula xml:id="formula_5">B i,j,k,l = 2! i!j!k!l! λ i 0 λ j 1 λ k 2 λ l 3 ∈ P2, i + j + k + l = 2,</formula><p>are the quadratic Bernstein polynomials with respect to T , and λν ∈ P1 = span {1, x, y, z}, ν = 0, . . . , 3, are the barycentric coordinates with respect to T . The barycentric coordinates are determined by the interpolation conditions λν (vµ) = δν,µ, µ = 0, . . . , 3 (δν,µ denotes Kronecker's symbol), and it is easy to see that for any point q ∈ R 3 , the barycentric coordinates λν (q) ∈ R, ν = 0, . . . , 3, of q are uniquely determined as the solution of the 4 × 4 linear system</p><formula xml:id="formula_6">λ0(q) v 0 1 + λ1(q) v 1 1 + λ2(q) v 2 1 + λ3(q) v 3 1 = q 1 .</formula><p>(2) The Bernstein-Bézier representation (1) for (piecewise) polynomials is well known and frequently used in CAGD (cf. <ref type="bibr" target="#b21">[Hoschek and Lasser 1993;</ref><ref type="bibr" target="#b39">Prautzsch et al. 2002]</ref>) and multivariate spline theory (see e.g. <ref type="bibr" target="#b8">[Chui 1988;</ref><ref type="bibr" target="#b10">Davydov and Zeilfelder 2003;</ref><ref type="bibr" target="#b16">Hangelbroek et al. 2003;</ref><ref type="bibr" target="#b23">Kohlmüller et al. 2003;</ref><ref type="bibr" target="#b24">Lai and Méhauté 2003;</ref><ref type="bibr">Nürnberger et al. 2003b;</ref><ref type="bibr" target="#b34">Nürnberger and Zeilfelder 2000;</ref><ref type="bibr" target="#b40">Schumaker and Sorokina 2003]</ref>). We use this piecewise representation, where we take advantage of the Bernstein-Bézier techniques to efficiently represent, construct, evaluate and visualize the volume spline model described in the next section. <ref type="figure">Figure 4</ref>: In each cube Q ∈ ♦ (grey) the splines are reconstructed by using a stencil of 27 data samples (black boxes). The derivative of the splines at the grid points of ♦ in each of the three space directions are determined as the average of four differences. For instance, the x derivative at the lower right vertex of Q is obtained from averaging the differences illustrated by the green arrows. Similarly, the y derivative and z derivative at this point are obtained by averaging the differences associated with the red and blue arrows, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Reconstruction by Super Splines</head><p>Given gridded volume data, i.e. data points of the form</p><formula xml:id="formula_7">( 2i+1 2 , 2j+1 2 , 2k+1 2 ) ∈ R 3 , with corresponding data values f i,j,k ∈ R, i, j, k = −1, .</formula><p>. . , n, the outline of our reconstruction method is as follows: The coefficients in the piecewise representation (1) of the reconstruction s from S2(∆) are determined by repeated averaging of the data values. First, for every vertex v of ♦, we determine the Bernstein-Bézier coefficients of s close to v by using an averaging of the data values at the center points of the eight cubes which have v as a common vertex. This uniquely determines the value s(v) and the three derivatives ( ∂s ∂x )(v), ( ∂s ∂y )(v), and ( ∂s ∂z )(v). Then, we use repeated averaging of the Bernstein-Bézier coefficients associated with these nodal values at the eight vertices of every cube Q ∈ ♦ to uniquely determine the 65 coefficients of s|Q in its piecewise representation (1) while satisfying additional natural appropriate smoothness conditions. Hence, similarly to <ref type="bibr" target="#b3">[Barthe et al. 2002;</ref><ref type="bibr" target="#b32">Mora et al. 2001]</ref>, where a triquadratic tensor spline model is used as a reconstruction, the 27 data values at the centers of the cubes which have a non-empty intersection with Q are needed to reconstruct s|Q for every cube Q ∈ ♦ (see <ref type="figure">Fig. 4</ref>). Note that although in one variable our method would coincide with these approaches, this is completely different in the multivariate case. An illustration of our reconstruction is given in <ref type="figure" target="#fig_1">Fig. 5</ref>, where we show the Bézier points from one face of the three different layers within an arbitrary cube Q of ♦. Here, the different colors indicate the order of determining the corresponding coefficients of the splines, as described below. The details of our natural and completely symmetric reconstruction are as follows. Let Q ∈ ♦ be an arbitrary cube. For every edge e of Q, we first determine the Bernstein-Bézier coefficient ae associated with the Bézier point at the midpoint of e (blue dot in <ref type="figure" target="#fig_1">Fig. 5</ref>). We do this by averaging the four data values f0, f1, f2, f3, which correspond to the data points at the center points of the four cubes in ♦ which share a common edge e, i.e. we set ae = 1 4 (f0 + f1 + f2 + f3).</p><p>We then determine the Bernstein-Bézier coefficient av associated with the Bézier point at every vertex v of Q (red dot in <ref type="figure" target="#fig_1">Fig. 5</ref>). This is done by choosing two edges e1 and e2 with endpoint v which lie on the same line segment of ♦ and by averaging the two Bernstein-Bézier coefficients ae 1 , ae 2 , i.e. we set av = 1 2 (ae 1 + ae 2 ). Note that av is uniquely determined and independent from the chosen line segment of ♦ since for each of the three possible choices of edges e1 and e2 with endpoint v, we obtain due to uniformity</p><formula xml:id="formula_9">av = 1 8 (f0 + f1 + f2 + f3 + f4 + f5 + f6 + f7),<label>(4)</label></formula><p>where f0, . . . , f7, are the data values at the center points of the eight cubes with vertex v. Moreover, the derivatives ( ∂s ∂x )(v), ( ∂s ∂y )(v), and ( ∂s ∂z )(v) are uniquely determined in an automatic way. For instance, it follows from a standard relation (cf. <ref type="bibr">[Farin 1986</ref>]) of ( ∂s ∂x )(v) with the two Bernstein-Bézier coefficients associated with the points v = (i, j, k) and ( 2i+1 2 , j, k) that</p><formula xml:id="formula_10">( ∂s ∂x )(v) = 1 4 (f i,j−1,k−1 − f i−1,j−1,k−1 + f i,j,k−1 − f i−1,j,k−1 +f i,j−1,k − f i−1,j−1,k + f i,j,k − f i−1,j,k ) .</formula><p>This means that ( ∂s ∂x )(v) is determined as an average of four simple differences which approximate the derivative in x-direction. Similar interpretations hold for ( ∂s ∂y )(v) and ( ∂s ∂z )(v) (see <ref type="figure">Fig. 4</ref>). Note that in contrast to the standard central differences approach for approximating derivative information in volume graphics, similarly as in <ref type="bibr" target="#b3">[Barthe et al. 2002;</ref><ref type="bibr" target="#b32">Mora et al. 2001]</ref>, no information from an intermediate data sample is lost here.</p><p>We proceed by setting the remaining five Bernstein-Bézier coefficients associated with points on each of the six faces of Q. Let F be a square face of Q, d the point where the two diagonals in F intersect, and m1, m2, two midpoints of edges in the interior of F which lie on the same diagonal in F. The Bernstein-Bézier coefficient am 1 associated with the Bézier point m1 (green dot in <ref type="figure" target="#fig_1">Fig. 5</ref>) is determined by averaging the two Bernstein-Bézier coefficients ae 1 , ae 2 , where e1 and e2 are the edges of F from ♦ which intersect at the vertex of Q closest to m1, i.e. we set am 1 = 1 2 (ae 1 + ae 2 ).</p><p>We determine the coefficient am 2 analogously. Then, we set the Bernstein-Bézier coefficient a d associated with the Bézier point d (yellow dot in <ref type="figure" target="#fig_1">Fig. 5</ref>) as a d = 1 2 (am 1 + am 2 ). It is well known in bivariate spline theory (see e.g. <ref type="bibr" target="#b10">[Davydov and Zeilfelder 2003;</ref><ref type="bibr">Nürnberger et al. 2003b;</ref><ref type="bibr" target="#b34">Nürnberger and Zeilfelder 2000]</ref>) that a d is uniquely determined, independently of the two possible choices for m1 and m2. Moreover, this setting implies the smoothness within the faces of Q. In particular, the directional derivative ( ∂s ∂ς )(d) is uniquely determined, where ς = 0 is an arbitrary vector in three-dimensional space which lies in the plane through the origin parallel to F.</p><p>We proceed by setting the remaining 15 Bernstein-Bézier coefficients associated with points from the interior of Q. First, let c be a midpoint of an edge of ∆ which connects the center vQ with a vertex v of Q, and let e be the common edge of any two faces F, F * of Q with vertex v. Moreover, let m1 and m * 1 be the midpoints of the edges in the interior of F and F * with endpoint v, respectively.</p><p>Using the same notation as above, the Bernstein-Bézier coefficient ac associated with c (white dot in <ref type="figure" target="#fig_1">Fig. 5</ref>) is determined by ac = (am 1 + a m * 1 ) − 1 2 (av + ae).</p><p>We note that it follows from a standard relation (cf. <ref type="bibr" target="#b11">[de Boor 1987;</ref><ref type="bibr">Farin 1986</ref>], see also <ref type="bibr" target="#b16">[Hangelbroek et al. 2003</ref>]) that this setting (together with (5)) now guarantees that s ∈ S2(∆). Moreover, ac is uniquely determined independent of the three possible choices of F and F * . The coefficient ag associated with the midpoint g of the edge which connects the intersection point d of the diagonals of a face F of Q with vQ (black dot in <ref type="figure" target="#fig_1">Fig. 5</ref>) is now determined by setting ag = 1 4 (ac 0 + ac 1 + ac 2 + ac 3 ), where c0, . . . , c3, are the midpoints of the edges which connect the vertices of F with vQ. It remains to determine the Bernstein-Bézier coefficient av Q at the center vQ of Q (magenta dot in <ref type="figure" target="#fig_1">Fig. 5</ref>).</p><p>This done by setting av Q = 1 3 (ag 0 + ag 1 + ag 2 + ag 3 + ag 4 + ag 5 ) − 1 8 (ac 0 + ac 1 + ac 2 + ac 3 + ac 4 + ac 5 + ac 6 + ac 7 ),</p><p>where g0, . . . , g5, are the midpoints of the edges which connect the intersection point of the diagonals of the six faces of Q with vQ, and c0, . . . , c7, are the midpoints of the eight edges which connect the vertices of Q with vQ. The above settings for ag and av Q are motivated by the fact that they are the average of two and twelve smoothness conditions, respectively, which would have been satisfied simultaneously by an overall smooth spline (cf. <ref type="bibr" target="#b16">[Hangelbroek et al. 2003</ref>]), and hence the approximation properties of the model are preserved by an argument of weak-interpolation type (cf. e.g. ). Now all the coefficients of the spline s are set appropriately. The computation of the 65 coefficients for a single cube Q ∈ ♦ of s|Q requires 66 multiplications with constants and 121 additions. The implementation of the model is straightforward. Finally we note that a close inspection shows that the resulting quadratic quasi-interpolating spline s is smooth for all points on the faces of any Q ∈ ♦, and s as well as the (piecewise) derivatives of s yield to nearly optimal approximation order of smooth functional data (see <ref type="bibr">[Nürnberger et al. 2003a]</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Point Location and Barycentric Coordinates</head><p>In order to compute the value of the spline s and the gradient at a given point q ∈ Ω (see Section 5), we need to know the location of q in the partition ∆ and its local barycentric coordinates. Hence, we have to determine a cube Q ∈ ♦ with q ∈ Q, a tetrahedron T ⊆ Q with q ∈ T , and the barycentric coordinates λν (q) ∈ R, ν = 0, . . . , 3, of q with respect to T . The indices of the cube Q with q ∈ Q are found by simple rounding the coordinates of q = (xq, yq, zq), i.e. we have Q = <ref type="bibr">[zq ]</ref> , where [b] denotes the maximal integer ≤ b. The uniformity of ∆ allows a translation of q such that the remaining computations can be performed for (the tetrahedral partition of) the unit cube Q0 = [− 1 2 , 1 2 ] 3 , hence from now we may assume that q ∈ Q0.</p><formula xml:id="formula_12">Q [xq ],[yq ],</formula><p>For finding the tetrahedron which contains q, we use the observation mentioned in Section 2 that the partition of Q0 in 24 congruent tetrahedra is obtained by slicing with the six planes Pν (x, y, z) = 0, ν = 0, . . . , 5,</p><p>where</p><formula xml:id="formula_14">P0(x, y, z) = x + y, P1(x, y, z) = x − y, P2(x, y, z) = x + z, P3(x, y, z) = x − z, P4(x, y, z) = y + z, P5(x, y, z) = y − z.</formula><p>The orientation of q with respect to these planes is determined by performing one addition to compute Pν (q) followed by a sign check for each of the six planes. This gives a 6-bit binary code for the orientation of q and the tetrahedron T ⊆ Q0 with q ∈ T is found by a simple table lookup. The whole operation requires six additions, six sign checks and five bit shifts. For determining the barycentric coordinates λν (q), ν = 0, . . . , 3, of q with respect to T , the vertices of T = <ref type="bibr">[v0, v1, v2, v3]</ref> are organized such that v0 is the origin, v1 and v2 are two corner vertices of Q0, and v3 is the intersection point of the diagonals in a face of Q0. We use the precomputed general solution of the system (2). For instance, if v1 = (− 1 2 , − 1 2 , − 1 2 ), v2 = ( 1 2 , − 1 2 , − 1 2 ), and v3 = (0, 0, − 1 2 ), we have λ0(q) = 1 + 2 zq, λ1(q) = −xq − yq, λ2(q) = xq − yq, and λ3(q) = 2 (yq − zq). Similar expressions for the barycentric coordinates involving five of the variable factors from the ordered list</p><formula xml:id="formula_15">L = (Lν ) 5 ν=0 = [xq, yq, zq, − xq, − yq, − zq]</formula><p>, are obtained for the other 23 tetrahedra in Q0. We exploit this simple fact for generating another lookup table with 24 entries of the precomputed solutions. If T is the tetrahedron from the above example, its entry E in this table is given by</p><formula xml:id="formula_16">E = [ (2, 2) | (3, 4) | (0, 4) ],</formula><p>with the interpretation that the barycentric coordinates of q with respect to T are computed from L by setting λ0(q) = 1 + L2 + L2 ,λ1(q) = L3 + L4 λ2(q) = L0 + L4 , and λ3(q) = 1 − λ0(q) − λ1(q) − λ2(q). These are seven additions and five essential table lookups. In this way, we determine the barycentric coordinates of q while avoiding expensive rotation or transformation operations, without branching over 24 cases and without performing any multiplication (not even by −1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Evaluation of Polynomial Pieces and its Gradients</head><p>Once the location of a point q in a tetrahedron T = <ref type="bibr">[v0, v1, v2, v3</ref>] ∈ ∆ and its barycentric coordinates λν (q), ν = 0, . . . , 3, have been determined, the value of the spline s from Section 3 at q and the gradient of its polynomial pieces can be computed. This information is needed to properly visualize s (see Section 6). This can be done for our model by applying (the trivariate version) of the well established algorithms from CAGD. For the polynomial piece p = s|T ∈ P2 in the form (1) the trivariate version of the de Casteljau algorithm (cf. <ref type="bibr" target="#b12">[de Casteljau 1963]</ref>, see also <ref type="bibr">[Farin 1986;</ref><ref type="bibr" target="#b21">Hoschek and Lasser 1993]</ref>) to determine the value p(q) = a </p><formula xml:id="formula_17">For = 1, 2, compute a [ ] i,j,k,l = λ0(q) a [ −1] i+1,j,k,l + λ1(q) a [ −1] i,j+1,k,l + λ2(q) a [ −1] i,j,k+1,l +λ3(q) a [ −1] i,j,k,l+1 , i + j + k + l = 2 − ,<label>(7)</label></formula><p>where a</p><formula xml:id="formula_18">[0] i,j,k,l = a i,j,k,l , i + j + k + l = 2.</formula><p>In general, this algorithm needs a total number of 20 multiplications and 15 additions to determine the value of p at q. If one or even two of the barycentric coordinates of q vanish, then the algorithm degenerates to its bivariate and univariate versions, respectively. In these cases, q lies in the interior of a triangular face of T or on an edge of T , and the number of necessary arithmetic operations reduces to 12 multiplications and 8 additions, and 6 multiplications and 3 additions, respectively.</p><p>For the proper shading of surfaces obtained from the volume model at the point q (see Section 6) it is necessary to compute the gradient (∇p)(q) = (( ∂p ∂x )(q), ( ∂p ∂y )(q), ( ∂p ∂z )(q)) .</p><p>If we let ςν be a vector in the direction of the edge vν+1 − v0 of T with length vν+1 − v0 ( . is the Euclidian distance), then the partial derivative of p in direction of ςν denoted by ∂p ∂ςν ∈ P1 is given as</p><formula xml:id="formula_20">∂p ∂ςν = 2 i+j+k+l=1 (a i,j+jν ,k+kν ,l+lν − a i+1,j,k,l ) λ i 0 λ j 1 λ k 2 λ l 3 ,</formula><p>where (jν , kν , lν ) = (δν,µ) 2 µ=0 , ν = 0, 1, 2 (cf. <ref type="bibr" target="#b21">[Hoschek and Lasser 1993]</ref>). Hence, there exist unique α0, α1, α2 ∈ R such that, for instance,</p><formula xml:id="formula_21">∂p ∂x = α0 ∂p ∂ς 0 + α1 ∂p ∂ς 1 + α2 ∂p ∂ς 2 .</formula><p>This shows that no more than 21 multiplications and 21 additions are required to compute the gradient in (8) for a given point q. Again, we use a lookup table for the precomputed numbers αµ for the different tetrahedra. Since each tetrahedron of ∆ has two edges which are axis-parallel, the total number of arithmetic operations required for the gradient is less than 42. </p><formula xml:id="formula_22">= ||(x, y, z) ||, (x, y, z) ∈ [− 1 2 , 1 2 ] 3 .</formula><p>The angular deviation from the perfect gradient ∇f is color coded (from red≥ 1 • to blue=0 • ) on the isosurface f (x, y, z) = 0.4. As expected, the underlying grid structure imposes visible artifacts for this extreme diagram.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Visualization: Isosurface Rendering by Precise Ray-Casting</head><p>A visualization technique for volume data frequently used in computer graphics is rendering isosurfaces from a given reconstruction model. Ray-casting is an image-space technique to compute particular views of these surfaces. Other methods such as the marching cubes algorithm are described e.g. in <ref type="bibr" target="#b5">[Brodlie and Wood 2001;</ref><ref type="bibr" target="#b7">Chen et al. 2000;</ref><ref type="bibr" target="#b26">Lorensen and Cline 1987]</ref>. Ray-casting considers the model along arbitrary rays r,</p><formula xml:id="formula_23">r = r(t) : t → q0 + t r0, t ≥ 0,<label>(9)</label></formula><p>where the goal is to find the smallest (intersection) parameter t * ≥ 0, such that the model along r coincides with a prescribed isovalue. Here, q0 ∈ R 3 is the position of the viewer and r0 ∈ R 3 is the (normalized) viewing direction determined as the difference of the current pixel position in the projection plane and q0. Therefore q * = r(t * ) is the point closest to the viewer position, where the model intersects the isosurface. A standard ray-casting algorithm generates rays through all pixel positions, examines the model along each ray in order to find the closest intersection point q * with the isosurface, and (if q * exists) finally evaluates the gradient for proper shading of the isosurface at the current pixel position. In order to show the potential of our method for efficient visualization of volume data, we apply ray-casting on the reconstruction model s ∈ S2(∆) from Section 3. In the following, we focus on the specific advantages of our model in contrast to other reconstructions, namely the efficient and exact computation of the intersection point q * of s along r, and the effective determination of exact gradient information at q * . Since the approximation s along r is a quadratic univariate spline, and by the choice of the underlying space S2(∆), it follows that these computations can be made by solving a very simple equation and applying the tools described in Sections 4 and 5. This uniquely distinguishes our approach from the previously developed methods.</p><p>Let r be an arbitrary ray as in (9), and let us assume that Q ∈ ♦ lies within the current region of interest when casting r through Ω. This means that r intersects Q at two points. In the following, we call these points enter and exit points of Q, respectively. We must then process all the tetrahedra in Q which intersect r. A naive approach would be to intersect r with the six cutting planes from (6) and to obtain a sequence of all intersection points with the tetrahedra in Q by sorting the (non-negative) ray parameters. In order to avoid unnecessary computations, we first determine a tetrahedron T0 in Q from the enter point of Q as described in Section 4. The intersected face of T0 is axis aligned. In this case, the second intersection point of r with T0 lies in another non-axis aligned face of T0. The three candidate faces lie in one of the six cutting planes from (6). If needed, we analogously determine another tetrahedron in Q containing the second intersection point from T0, and proceed similarly. We eventually iterate until r meets the tetrahedron which contains the exit point of Q. As Q is sliced by six planes, previously computed results can be reused here, and we calculate at most six intersection parameters at a cost of two additions and one division each.</p><p>Given r as in (9) and a prescribed isovalue which we may assume to be zero, for the current tetrahedron T ∈ ∆, we have to determine the closest point q * ∈ T to the viewer, where the trivariate polynomial piece p = s|T ∈ P2 vanishes along r, and we have to find out quickly when such a point q * does not exist in T . Let q1 = r(t1) and q2 = r(t2), where t1 &lt; t2, be two intersection points of r with T . Then, the restriction of p to the line segment [q1, q2] is a quadratic, univariate polynomial (see <ref type="figure">Fig. 3</ref>). It is therefore obvious that we only have to consider a quadratic equation, whose roots can be found in an analytic way with only small computational effort. For setting up the necessary equation, we first compute the values w1, w, and w2 of p at the three points q1, q = q 1 +q 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>, and q2 in T , i.e. w1 = p(q1), w = p(q), and w2 = p(q2). This is done by applying de Casteljau's algorithm from Section 5. We quickly access the 10 coefficients of p via an index table into the 65 coefficients for the whole cube. Since the points q1 and q2 both lie within a triangular face of T , we first perform the bivariate version of the de Casteljau algorithm twice. The third run of the algorithm is done for the point q. This is the only run which is of trivariate type, in general. We use some previously computed results such that the total number of required operations reduces to 15 multiplications and 13 additions. Note that except for the triangle T0 (containing the enter point of a cube Q) the above bivariate version of de Casteljau's algorithm has to be performed only once per tetrahedron, since the second intersection point q2 of T becomes a point of type q1, when we move on to the adjacent tetrahedron. The intersection point q * is now determined as follows. Using a precomputation of Newton's interpolation form, we find the unique quadratic polynomial on an appropriate interval [0, δ], which interpolates the three values w1, w, and w2 at the points 0, δ 2 and δ. From this, we obtain the quadratic equation</p><formula xml:id="formula_24">α τ 2 + δ β τ + δ 2 γ = 0, τ ∈ [0, δ],<label>(10)</label></formula><p>where α = 2 (w1 +w2 −2 w), β = 4 w −3 w1 −w2, and γ = w1. Hence, once w1, w and w2 are determined, the equation <ref type="formula" target="#formula_24">10</ref>is set up by using 10 additions. If (10) degenerates to a linear equation, i.e. α = 0, we obtain t * = t1 + δ 2 ( w 1 w 1 −w ) (t2 − t1). Otherwise, we get</p><formula xml:id="formula_25">t * = t1 + δ 2α −β ± β 2 − 4 αγ (t2 − t1),<label>(11)</label></formula><p>and we choose the (smaller) solution in [t1, t2] to fix q * , if it exists. The latter is not the case if β 2 − 4 αγ &lt; 0, or, otherwise, if the solution(s) from the above equations do not lie in <ref type="bibr">[t1, t2]</ref>. Note that depending on α, β and γ the solution can always be determined in a numerically stable way, switching to another formula of same type if needed. The necessary arithmetic operations are at most 5 multiplications, 6 additions and one square root evaluation. Still, in the worst case, all the tetrahedra T ⊆ Q along r have to be processed in order to check if s|Q is not intersected by the isosurface. We can easily accelerate this process by applying a quick conservative test on whether s restricted to r cannot intersect the isosurface locally in a tetrahedron or in a cube. If p = s|T is given in the form (1), then we check σ a i,j,k,l &gt; 0, i + j + k + l = 2, where σ ∈ {−1, 1}. If this sign criterion is satisfied, then we do not have to consider T and can skip it because of the well-known convex hull property of the Bernstein-Bézier form. A similar test can be applied to all the 65 coefficients of s|Q, where the minimum and maximum coefficients can be precomputed and stored for each cube, e.g. in a min-max-octree for optimized ray-casting with eventually varying isovalues.</p><p>Once an intersection point q * = r(t * ) is found, we determine the gradient (∇p)(q * ) as defined in (8) following Section 5. A well-known result from differential geometry shows that the normal vector n * at q * is given by n * = (∇p)(q * )/ (∇p)(q * ) . The normal n * is required for shading computations, e.g. using the standard Phong illumination model. The results given in the next section show that the isosurfaces are visually smooth due to the high quality normals obtained from the local gradients from our spline model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results</head><p>We applied our new reconstruction by quadratic super splines to a number of well-known volume data sets. The figures show the visualization of isosurfaces using classical perspective ray-tracing as previously outlined. All local calculations such as evaluation and intersection are performed efficiently. However, our overall raycasting algorithm is not yet tuned for speed and not competitive to more sophisticated systems like e.g. <ref type="bibr" target="#b3">[Barthe et al. 2002;</ref><ref type="bibr" target="#b38">Parker et al. 1998</ref>] which may even aim towards interactive frame rates (see <ref type="bibr" target="#b44">[Wald and Slusallek 2001]</ref> for a recent survey). As there are numerous optimizations of the general ray-casting algorithm, a discussion is beyond the scope of this paper. Any optimization can be combined with our model in a straightforward way with a direct benefit in ray-casting performance. In particular, this includes hierarchical space partitioning or efficient cube traversal by an objectorder ray-casting algorithm as applied for triquadratic tensor spline models (cf. <ref type="bibr" target="#b3">[Barthe et al. 2002;</ref><ref type="bibr" target="#b32">Mora et al. 2001]</ref>).</p><p>We perform a simple preprocessing of the data for a given isovalue, precomputing all cubes and storing relevant ones which potentially intersect the isosurface (typically only some few percent for our experiments). This allows us to provide timings for the construction of a single cube and to estimate a faithful lower bound for more sophisticated preprocessing as the generation of a min-maxoctree. All runtimes are measured on a 2.8GHz Intel Xeon CPU, where we observe 0.27µs for the construction of the spline on a single cube (Section 3) plus an average of 0.13µs for the convex hull tests to determine the relevance of a cube (Section. 6). We report per frame timings for quadratic reconstruction (average 38.7µs per ray), as well as the isovalues and the percentages of relevant (and precomputed) cubes for the <ref type="figure">Figures 8, 9</ref> and 10 which are rendered into a 512x512 viewport. For all respective figures, we computed higher quality, non-local gradients on the trilinear model (see below) to ensure a fair visual comparison. The difference between the models becomes most visible for high frequency areas (e.g. bonsai's leaves, arteries) with a feature size of only few samples. <ref type="figure" target="#fig_2">Fig. 1  and 6</ref> show a synthetic benchmark, and <ref type="figure" target="#fig_4">Fig. 7</ref> emphasizes the quality of the gradients.</p><p>Regarding the number of floating point operations, our quadratic approach is close to the simple trilinear interpolation and much cheaper than a triquadratic model. The same is true for the computation of the gradients. However, as the trilinear model does not satisfy smoothness conditions, local gradient evaluation is inexact for general data, while the costs for better gradients such as using central differences from evaluation in six neighboring cells (as used here) is more expensive. The price for our approach is a slight overhead of point location in a tetrahedron and the need to store 65 coefficients instead of 27 (triquadratic) or working directly on the data (trilinear). The evaluation of roots along a ray is exact and inexpensive for quadratic polynomials, non-trivial for cubics <ref type="bibr" target="#b41">[Schwarze 1990</ref>] (trilinear) and analytically impossible for degree six polynomials (triquadratic), i.e. a numerical root finding algorithm must be applied. In addition, the univariate quadratic polynomials allow efficient integration by applying quadrature formulae and evaluation of the extreme values along a ray. The necessary computations can be performed in a straightforward way by following the method from Section 6. <ref type="figure">Figure 10</ref>: More isosurfaces rendered from our quadratic model. engine courtesy of General Electric (141 × 198 × 110 samples, isovalue c = 80, 2.5s (full) and 1.95s (close-up), 9.7% relevant cubes). skull courtesy of Siemens Medical System, Forchheim, Germany (256 3 , c = 40, 4.3s and 5.41s, 5.2%). foot courtesy of Philips Research, Hamburg, Germany (256 3 , c = 90, 8.7s and 6.8s, 2.37%).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions and Future Work</head><p>We presented a new model for the reconstruction of discrete volume data given on a regular grid which is a typical problem in volume rendering. In contrast to earlier approaches, our method approximates the data by quadratic trivariate super splines on a tetrahedral partition. The reconstruction is natural, completely symmetric and efficient. The local quasi-interpolating spline model can be evaluated efficiently including precise local gradients due to appropriate smoothness properties. The new approach uses piecewise polynomials of total polynomial degree two and it compares to existing trilinear and triquadratic approaches based on piecewise polynomials of total degree three and six, respectively. We exploit this fact for efficient and precise isosurface ray-casting. Our results show that the model is effective, efficient, simple in implementation and appropriate for high-quality volume rendering.</p><p>In future work, we will study the much more difficult problem of efficient reconstruction from scattered data. As we shift the focus from pure reconstruction to approximation issues, the use of lower dimensional spaces providing automatic data compression becomes an interesting topic of future research.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>The tetrahedral partition ∆ is obtained by uniformly subdividing each cube of ♦ into 24 tetrahedra.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 5 :</head><label>5</label><figDesc>The Bernstein-Bézier coefficients of the polynomial pieces of s associated with the Bézier points on the three different layers of coefficients in a cube are determined in the following order: blue, red, green, yellow, white, black, magenta.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 6 :</head><label>6</label><figDesc>Zoomed regions of Fig. 1 (same color code for upper image parts): Trilinear (left) and our quadratic (right) reconstruction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>Isosurfaces showing the error of the respective models' gradient for the trilinear (a),(c) and for our quadratic (b),(d) reconstruction of 8 3 (a),(b) and 16 3 (c),(d) samples of a spherical function f (x, y, z)</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors would like to thank Joel Carranza and Olga Sorkine for proofreading the manuscript.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Automatic reconstruction of surfaces and scalar fields from 3D scans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;95</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Implicit Surface Patches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Introduction to Implicit Surfaces</title>
		<editor>J. Bloomenthal</editor>
		<imprint>
			<publisher>Morgan Kaufmann</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="99" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<title level="m">Data Visualization Techniques</title>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Triquadratic reconstruction for interactive modelling of potential fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Barthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mora</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dodgson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sabin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Shape Modeling International</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="145" to="153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">BLaC-Wavelets: A multiresolution analysis with non-nested spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G.-P</forename><surname>Bonneau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hahmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="43" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Recent Advances in Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Brodlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="125" to="148" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Simplicial subdivisions and sampling artifacts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snoeyink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="99" to="106" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cubicoids: modeling and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Chui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Siam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Dahmen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T.-M</forename><surname>Thamm-Schaar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="89" to="108" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
	<note>CBMS</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Smooth piecewise quadric surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Dahmen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Math. Methods in CAGD</title>
		<editor>T. Lyche and L. Schumaker</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1989" />
			<biblScope unit="page" from="181" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Scattered data fitting by direct extension of local polynomials with bivariate splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Davydov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Comp. Math</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">B-form basics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>De Boor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Geometric Modelling</title>
		<meeting><address><addrLine>SIAM, G. Farin, Ed</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="131" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Triangular Bernstein-Bézier patches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>De Casteljau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">André Citroën, Automobiles SA</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="83" to="127" />
			<date type="published" when="1963" />
		</imprint>
	</monogr>
	<note>CAGD</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Multiresolutional Parallel Isosurface Extraction based on Tetrahedral Bisection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gerstner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rumpf</surname></persName>
		</author>
		<editor>Graphics, Springer, M. Chen, A. Kaufman, and R. Yagel</editor>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="267" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The multilevel finite element method for adaptive mesh optimization and visualization of volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grosso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lürig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="387" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Smooth approximation and rendering of large scattered data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Davydov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="341" to="347" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">On the dimension of C 1 splines of arbitrary degree on a tetrahedral partition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hangelbroek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rössl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>preprint</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Progressive volume models for rectilinear data using tetrahedral Coons volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Holliday</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="83" to="92" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Trilinear (left) and our quadratic (center and right) reconstruction (12</title>
	</analytic>
	<monogr>
		<title level="m">Isosurface of the aneurism data set (courtesy of Philips Research</title>
		<meeting><address><addrLine>Hamburg, Germany</addrLine></address></meeting>
		<imprint>
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
	<note>256 3 samples, isovalue 50. 7s and 11.7s, 0.66% relevant cubes</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Isosurface of the bonsai data set (courtesy of Stefan Röttger</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<pubPlace>VIS, University of Stuttgart, Germany</pubPlace>
		</imprint>
	</monogr>
	<note>256 3 samples, isovalue 40</note>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m">Trilinear (left) and our quadratic (center and right) reconstruction (7.1s and 9.1s, 3.1% relevant cubes</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Fundamentals of Computer Aided Geometric Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hoschek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lasser</surname></persName>
		</author>
		<editor>A.K. Peters</editor>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">State-of-the-art in volume graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<editor>Graphics, Springer, M. Chen, A. Kaufman, and R.Yagel</editor>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="3" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Construction of cubic 3D spline surfaces by Lagrange interpolation at selected points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Kohlmüller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Curve and Surface Fitting</title>
		<meeting><address><addrLine>Saint-Malo</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="245" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A new kind of trivariate C 1 spline</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-J</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename><surname>Méhauté</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Comp. Math</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">High-quality rendering of smooth isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lamar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visualization and Computer Animation</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="79" to="90" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="page" from="79" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">An evaluation of reconstruction filters for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Marschner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Lobb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="100" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Representation and extraction of volumetric attributes using trivariate splines: a mathematical framework</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Solid Modelling and Applications</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="234" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A practical comparison of popular volume rendering algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meissner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Craw-Fis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Volume Visualization and Graphics</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="81" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Reconstruction filters in computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Netravali</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="volume">88</biblScope>
			<biblScope unit="page" from="221" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Design of accurate and smooth filters for function and derivative reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Kurzion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="143" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Visualization of isosurfaces with parametric cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mora</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-P</forename><surname>Jessel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Caubet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="377" to="384" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Volume modelling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
		<editor>Graphics, Springer, M. Chen, A. Kaufman, and R.Yagel</editor>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="29" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Developments in bivariate spline interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Appl. Math</title>
		<imprint>
			<biblScope unit="volume">121</biblScope>
			<biblScope unit="page" from="125" to="152" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Lagrange interpolation by bivariate C 1 -splines with optimal approximation order</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Comp. Math</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">The smoothness and approximation properties of piecewise quadratic quasi-interpolants in three variables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rössl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>preprint</note>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Lagrange interpolation by C 1 cubic splines on triangulated quadrangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nürnberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Schumaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Zeilfelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Comp. Math</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Interactive ray tracing for isosurface rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-P</forename><surname>Sloan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization 1998</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="233" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Bézier and B-Spline Techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Prautzsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Boehm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Paluszny</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Quintic spline interpolation on type-4 tetrahedral partitions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Schumaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sorokina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Adv. Comput. Math</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Cubic and quartic roots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schwarze</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Gems, A. Glassner</title>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="404" to="407" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Reconstruction issues in volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Theussl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hladuvka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gröller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Visualization: The State of the Art</title>
		<editor>F. Post, H. B., and G.-P. Bonneau</editor>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="109" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">High-quality isosurface rendering with exact gradients</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Thévenaz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Unser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICIP&apos;01</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="854" to="857" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">State of the art in interactive ray tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Wald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Slusallek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STAR, EUROGRAPHICS</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="21" to="42" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
