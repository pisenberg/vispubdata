<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Feature-Space Analysis of Unstructured Meshes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ariel</forename><surname>Shamir</surname></persName>
							<email>arik@idc.ac.il</email>
							<affiliation key="aff0">
								<orgName type="department">The Interdisciplinary Center</orgName>
								<address>
									<settlement>Herzliya</settlement>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<address>
									<settlement>Seattle, Washington</settlement>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Feature-Space Analysis of Unstructured Meshes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Curve</term>
					<term>surface</term>
					<term>solid</term>
					<term>and object representations; I.4.6 [Image Processing and Computer Vision]: Segmentation unstructured meshes</term>
					<term>segmentation</term>
					<term>clustering</term>
					<term>feature-extraction</term>
					<term>mean-shift</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Unstructured meshes are often used in simulations and imaging applications. They provide advanced flexibility in modeling abilities but are more difficult to manipulate and analyze than regular data. This work provides a novel approach for the analysis of unstructured meshes using feature-space clustering and feature-detection. Analyzing and revealing underlying structures in data involve operators on both spatial and functional domains. Slicing concentrates more on the spatial domain, while iso-surfacing or volumerendering concentrate more on the functional domain. Nevertheless, many times it is the combination of the two domains which provides real insight on the structure of the data. In this work a combined feature-space is defined on top of unstructured meshes in order to search for structure in the data. A point in feature-space includes the spatial coordinates of the point in the mesh domain and all chosen attributes defined on the mesh. A distance measures between points in feature-space is defined enabling the utilization of clustering using the mean shift procedure (previously used for images) on unstructured meshes. Feature space analysis is shown to be useful for feature-extraction, for data exploration and partitioning.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Unstructured meshes provide greater modeling flexibility in simulation and imaging. First they extend the possibilities to fit any given structure and shapes of various genus, and second they present the ability to follow the underlaying field structure <ref type="bibr" target="#b25">[Nielson 1997;</ref><ref type="bibr" target="#b32">Wiley et al. 2002;</ref><ref type="bibr" target="#b5">Dyn et al. 1990</ref>]. Nevertheless, unstructured meshes also impose difficulties in analysis and visualization of the data due to their non-regular structure. Analysis and visualization operators try to extract structure from the data and impose organization leading to insight. Some of those operators such as slicing, isosurfacing and volume rendering were adapted for use on unstructured data <ref type="bibr" target="#b31">[Treece et al. 1999;</ref><ref type="bibr" target="#b2">Cignoni et al. 1998</ref>]. Some operators work on the spatial domain (slicing), some on the functional domain (iso-surfacing), and some use both domains (volume-rendering).</p><p>Figure 1: Feature space analysis of an unstructured mesh can be used to reveal the internal structure of a three dimensional scalar field (top) and to partition the mesh into meaningful components, e.g. areas of pressure from high to low (bottom).</p><p>Nevertheless, many times it is the combination of the two domains that provide real insight on the structure of the data. Towards this end we present a data-analysis approach for meshes based on the definition of a feature-space. The basis of the analysis operators we define is a clustering algorithm for mesh elements which uses the mean-shift procedure <ref type="bibr" target="#b3">[Comaniciu and Meer 2002]</ref>.</p><p>In this paper we concentrate on simplicial complex meshes as a common representation for unstructured meshes. The basic element in a simplicial complex is the simplex: point, line, triangle, tetrahedron etc. In fact, most meshes can be decomposed into simplicial components (e.g. one can triangulate any polygon in 2D, but not all polyhedra can be tetrahedralized <ref type="bibr" target="#b25">[Nielson 1997])</ref>. A mesh M becomes a simplicial complex if it is composed of simplexes alone, every face of a simplex of M is in M, and the intersection of any two simplexes of M is a face of each of them <ref type="bibr" target="#b23">[Munkres 1993]</ref>. We further assume some scalar or vector attributes such as temperature, electrostatic potential, or speed are defined on the mesh. The feature-space of a mesh is defined by combining the spatial coordinates of the mesh domain with its attribute functional values. For instance, a 3D unstructured mesh with a scalar function and a gradient field will be mapped to a 7D feature-space. The key ingredient for using clustering in mesh feature-space analysis is the definition of a distance measure between the points in feature-space. This is achieved by combining the distance in the spatial domain with distances in all sub-spaces defined by each attribute.</p><p>The main reasons for employing the mean-shift procedure (previously defined for images and regular data) is its ability to find natural borders between clusters of points in feature space. These borders are defined by valleys of point densities and not synthetic structures imposed on the space (e.g. hyper-planes in the k-means algorithm). Mapping such clusters back to the mesh domain will provide the basis on which structure and organization are found in the data (see <ref type="figure">Figure 1</ref>). The mean-shift procedure uses the neighborhood of a feature-space point as an estimator for the density function of the mesh and its attributes <ref type="bibr" target="#b3">[Comaniciu and Meer 2002]</ref>.</p><p>The modes (maximum points) of this function are found in a gradient ascent manner and classification is performed based on the mapping from a point to its mode.</p><p>The clusters that are found using the mean shift are in fact connected blobs in feature space. Nevertheless, once they are projected back to geometric space they can form unconnected components. For some applications (e.g. visualization of structure) this may not cause a problem, while for others (e.g. mesh segmentation) this is undesirable. Hence, when additional constraints on the size, connectivity or genus of the clusters in geometric space are given, we define an additional stage of incremental growing to create the actual partitions. Using incremental growing can guarantee these constraints employing local tests while adding elements to existing clusters.</p><p>The basic operation running the mean-shift procedure is the computation of a centroid point in feature space. This is performed by averaging of the point neighborhood. Therefore, the search for neighbors in feature-space is a key component in the algorithm and affects the efficiency and feasibility of the algorithm. In a structured environment such as images or uniform meshes this operation can be performed easily by simple computation of indexes or even convolution. In contrast, for unstructured meshes techniques such as breadth first search must be used in order to collect neighbors. This can impose a serious slowdown on the algorithm. In fact, the naive implementation of a mean-shift on unstructured meshes is too slow for any practical purpose. In our implementation we utilized both the hierarchical mean shift algorithm <ref type="bibr" target="#b4">[DeMenthon 2002</ref>] and a bin-type search structure to overcome this problem.</p><p>Our main contribution is the definition of an analysis operator for unstructured meshes based on the efficient adaptation of the mean shift procedure to unstructured domain. The effectiveness of this analysis operator is illustrated in several examples of data exploration and interrogation. Furthermore, we present an incremental clustering algorithm based on our analysis operator. This algorithm segments the mesh into meaningful components and can guarantee constraints on size, connectivity or genus of the components.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>It is out of the scope of this work to provide overview on analysis and visualization techniques for volumetric data such as isosurfacing <ref type="bibr" target="#b17">[Levoy 1988;</ref><ref type="bibr" target="#b19">Lorensen and Cline 1987;</ref><ref type="bibr" target="#b31">Treece et al. 1999]</ref> and volume-rendering <ref type="bibr" target="#b15">[Kaufman 1996;</ref><ref type="bibr" target="#b2">Cignoni et al. 1998</ref>]. However, some recent work uses advanced data analysis techniques to enhance visualization operators <ref type="bibr" target="#b27">[Pfister et al. 2001]</ref>. In <ref type="bibr" target="#b12">[Jankun-Kelly and Ma 2001;</ref><ref type="bibr" target="#b16">Kniss et al. 2001]</ref> data-dependent transfer functions are defined for volume rendering and in <ref type="bibr" target="#b1">[Bajaj et al. 1997]</ref> iso-value are selected intelligently for iso-surface rendering. These works point in the direction of using the combined spatial and feature domains in order to better analyze and catch internal structures in the data. Nevertheless, it is important to note that most work in the field concentrates on uniform mesh grids. We demonstrate on unstructured meshes that clustering in feature space is an operator which can be used to enhance the visualization of scalar and vector fields and to help reveal internal structures in the data.</p><p>Clustering, partitioning and segmentation for general data analysis appear in many fields such as image processing, vision, datamining and machine-learning <ref type="bibr" target="#b0">[Arabie et al. 1996]</ref>. Most clustering approaches can be classified as being either 'parametric' or 'nonparametric' <ref type="bibr" target="#b29">[Roberts 1997]</ref>. In a parametric approach, the number of clusters (i.e. the parameter) is either known or preset in advance, and all elements (or points) must be assigned to one of them. Examples of methods using this approach are the K-means procedure (see for example <ref type="bibr" target="#b9">[Guralnik and Karypis 2001]</ref>) and the Gaussian mixture model <ref type="bibr" target="#b33">[Zhuang et al. 1996]</ref>. Non-parametric approaches do not rely or preset the number of clusters, hence no parameter is needed. The number of clusters can change as the algorithm progresses, becoming one of the results of the algorithm along with the partitioning itself. Examples of algorithms which use this approach for image segmentation are bilateral filtering <ref type="bibr" target="#b30">[Tomasi and Manduchi 1998</ref>] and the mean shift <ref type="bibr" target="#b3">[Comaniciu and Meer 2002;</ref><ref type="bibr" target="#b8">Gordon 1996]</ref>. Examining unstructured mesh data, it is often unrealistic to determine the number of clusters in advance. This is one of the reasons we chose a non-parametric method as the basis for this work. The term feature-space is often used in image and video processing. In that context, the input data which is an image, can be viewed as a uniform mesh of sample points. Image or video segmentation assigns each pixel to a cluster of pixels similar to our mesh-element clustering. In this paper we address the main difficulty in employing such techniques on unstructured meshes and utilize a hierarchical mean shift algorithm to expedite the processing time. Boundary (embedded) mesh partitioning has also been the subject of extensive research in recent years. Most approaches follow some form of non-parametric hierarchical approach by clustering primitive elements (triangles or others) into larger regions of similar attributes <ref type="bibr" target="#b18">[Levy et al. 2002;</ref><ref type="bibr" target="#b20">Mangan and Whitaker 1998;</ref><ref type="bibr" target="#b28">Pulla et al. 2001;</ref><ref type="bibr" target="#b7">Garland et al. 2001;</ref><ref type="bibr" target="#b13">Kalvin and Taylor 1996;</ref><ref type="bibr" target="#b11">Inoue et al. 2001]</ref>. Nevertheless, most of these approaches concentrate mainly on geometric features (planarity, curvature), only some use mesh attributes <ref type="bibr" target="#b10">[Hoppe 1999]</ref>, and none deal with unstructured volumetric meshes.</p><p>A large body of literature exists on mesh decomposition techniques in the finite-elements and meshing community. Nevertheless, most of these works use a transformation of the mesh decomposition problem into a graph decomposition problem and use various clustering techniques (see for example <ref type="bibr" target="#b21">[Moulitsas and Karypis 2001;</ref><ref type="bibr" target="#b14">Karypis and Kumar 1999;</ref><ref type="bibr" target="#b26">Nikos and Nave 1999]</ref>). The approach taken in this paper is somewhat different as we use the notion of a feature-space taking into account the geometry and mesh-attributes to perform clustering by finding natural borders of feature-space point densities and projecting them back to the mesh domain.</p><formula xml:id="formula_0">(a) h s ∼ 16% h f ∼ 12% (b) h s ∼ 22% h f ∼ 12% (c) h s ∼ 28% h f ∼ 12% (d) h s ∼ 22% h f ∼ 20%</formula><p>Figure 3: The effect of changing the the mean-shift kernel radius (denoted as percent from the bounding box). Each line connects a simplex to the simplex containing its mode projection. The color represents the scalar value of the mode. (a)-(c) illustrate the effect of enlarging the spatial kernel h s and (d) the effect of enlarging the function kernel. From (a) to (c), when larger areas are covered in the averaging, the local modes are replaced by more global modes. In (d) since more values are combined in the averaging, the separation between modifications of function values is blurred out.</p><p>the most simplest are constant and linear. Constant blending (or no blending) results in a piecewise-constant function. Using linear blending attributes are interpolated linearly between the samples. If simplicial elements are used, linear interpolation of node values leads also to a linear function inside the elements. Any subset of those attributes can be chosen in order to characterize the featurespace. The values in this space are defined explicitly on the sampled points (center of mesh elements or mesh nodes) and for all other points in space they are defined using the same blending functions used on the mesh. Usually features in a field are defined as lower dimension elements. For instance, mesh partitioning defines the nodes, edges, and faces as the boundary elements between clusters. This means we would like to segment the set of highest dimension simplexes of the mesh into clusters. Using scalar node values and linear blending, the gradient field inside the simplexes is constant. Hence, one gradient vector can be used to characterize each element <ref type="bibr">(Figure 2(b)</ref>). However, using node values (and not element values) means the scalar function is linear inside the simplex. As an approximation, we define the value of a simplex as the average of its node values at the center of a simplex <ref type="figure" target="#fig_0">(Figure 2(a)</ref>). This gives a piecewise constant approximation for both the scalar field and the gradient of the field. If this approximation is too crude, one can use subdivision of simplexes to approach a desired error tolerance.</p><p>The above example creates a 7D feature-space for a 3D unstructured mesh. Three coordinates in this space are the spatial coordinates of the points, one is the scalar function value and three more define the gradient. For simplicity in the following discussion we will continue to use this space as an example, although any vector or multi-scalar fields can be used similarly. The first step for mesh feature-space analysis is the definition of a representative point P in feature-space for each simplex S in the mesh. In our example, this point will be</p><formula xml:id="formula_1">P s = (p s , f s , g s )</formula><p>where p s is the simplex center, f s is the simplex function value (either given or an average of its vertices) and g s is the simplex gradient. The second, and most important step is the definition of a valid distance measure between the points. This measure will play a key role in the stages of the partitioning algorithm.</p><p>Since the nature and range of these sub-spaces can be extremely diverse, we will examine each sub-space separately and define the distance measure restricted to the sub-space. In the spatial subspace we use a simple Euclidean distance as the distance measure between points. Similarly, the distance measure between scalar function sub-spaces is the absolute difference of the function values. However, when we turn to vector sub-spaces such as the gradient sub-space, there are several options for the definition of a distance. We have found two distance definitions to be adequate. The first uses the difference in polar coordinates of the vectors, normalizing the difference in length to [0,1], by dividing by the maximum length of all vectors. The second (mostly used in gradient analysis) just uses a measure of the 3D-angle φ between the vectors ((1 − cos φ )/2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Mean Shift Procedure</head><p>Any partitioning technique that creates clusters around local density maxima in feature-space will produce coherent clusters in terms of the resemblance between elements in a cluster. The mean-shift procedure starts from a point in feature-space and follows an estimation of the density function using gradient ascent. The feature-space itself can be regarded as the empirical probability density function. This means that dense regions in feature-space correspond to local maxima in the unknown probability density function (see <ref type="bibr" target="#b3">[Comaniciu and Meer 2002]</ref> for details and proof). Therefore, the meanshift procedure finds modes (i.e. local maxima) in feature-space by moving towards them incrementally. Applying this procedure to all points will create clusters around the modes. When mapped back to the mesh, the boundaries between the clusters are mapped to boundaries between meaningful components in the data (e.g. similar material areas, constant value or constant direction areas).</p><p>The distance measure between points in feature-space is used in the mean-shift procedure to define a neighborhood Ω. This neighborhood is used to calculate the weighted mean of the point in feature-space. More specifically, if P is a feature-space point, the mean M h (P) of P is defined using a radially symmetric kernel K in feature-space with a monotonically decreasing profile g(x). For instance, we have used the common profile g(x) = norm(x) = e −x 2 /2 . The kernel it creates is called the normal kernel. The discrete mean of the point P using g(x) in a neighborhood Ω with radius h around P is defined as:</p><formula xml:id="formula_2">M h (P) = ∑ P ∈Ω P • g D Φ (P,P ) h 2 ∑ P ∈Ω g D Φ (P,P ) h 2<label>(1)</label></formula><p>Where the distance function D Φ (P, P ) is Euclidean in all subspaces and the weighing term g(||</p><formula xml:id="formula_3">D Φ (P,P ) h</formula><p>|| 2 ) is in fact separated into multiplicative components (see Eqn. 4 below).</p><p>The definition of the mean-shift vector in feature-space is the difference between the point and its mean point:</p><formula xml:id="formula_4">MSV h (P) = M h (P) − P<label>(2)</label></formula><p>This vector points in the direction of maximum increase in density. We will call the sequence of feature-space points P 0 , P 1 . . . P m where P i = P i−1 + MSV h (P i−1 ) for each 1 ≤ i ≤ m, the mean-shift sequence. This sequence can be viewed as a type of gradient ascent sequence in the density estimator. It is guaranteed to converge (i.e. to reach a point where P i − P i+1 &lt; ε) on regular uniform grid under the assumption that the kernel K has a convex monotonically decreasing profile <ref type="bibr" target="#b3">[Comaniciu and Meer 2002]</ref>. This means that starting from any feature-space point and iterating by following the mean-shift sequence will lead to a feature-space mode.</p><p>However, in unstructured mesh domains the elements are neither regular nor uniform anymore. The whole domain may be highly unstructured and may contain holes and gaps. Re-sampling the mesh onto a regular grid may lose the mesh structure and can be quite costly. Using our definitions for the feature-space, we have a piecewise constant space, where the values of attributes is constant in the domain of each simplex. Therefore, instead of sampling this space, we can use the volume of our mesh simplexes to approximate the estimator distribution. Since we use discrete representative points for each simplex, we weigh the contribution of each point by the volume of the simplex it represents. In practice, for all featurespace points P we find the simplex S that contains the projection of P (p ∈ S ) and use volume(S ) as the weighing factor. Using Equation 1 we get:</p><formula xml:id="formula_5">MSV h (P) = ∑ P ∈Ω P • g D Φ (P,P ) h 2 • volume(S ) ∑ P ∈Ω g D Φ (P,P ) h 2 • volume(S ) − P (3)</formula><p>For example, using the normal kernel in equation 3 and separating the three sub-spaces of spatial, function and gradient coordinates leads to:</p><formula xml:id="formula_6">g D Φ (P, P ) h 2 = g( ||p − p || h s 2 )g( | f − f | h f 2 )g( d(g, g ) h g )<label>(4)</label></formula><p>The number of clusters and their size depends on the radius h of the kernel used in the computation of the mean. The larger the kernel radius is, the greater the probability that clusters will merge, the smaller the number of clusters will remain and the greater the size of clusters will become. It is important to note that the separation of distance measures to sub-spaces gives greater flexibility in the definition of the neighborhood Ω. For each feature sub-space one can define a separate kernel radius defining the point neighborhood limited to this sub-space. In our example we have a spatial kernel radius h s , a function value kernel radius h f and a gradient kernel radius h g . Their union is the kernel for the whole feature-space denoted symbolically with h = (h s , h f , h g ) defining the feature-space neighborhood Ω. Enlarging or reducing each kernel radius independently may result in a different clustering.</p><p>The mean-shift procedure on unstructured meshes starts for all simplexes with the simplex representative feature-space point P 0 . It then follows the mean-shift sequence in feature-space by iteratively moving from P i to P i+1 = M h (P i ) until convergence. Note that although the first point is a representative point of a simplex, all other points in the sequence can be placed anywhere in featurespace (e.g. have any function value, gradient and position in our example). Nevertheless, for a convex neighborhood of points, the mean is just a convex combination of the points and therefore must be inside its convex hull. Therefore, for most P i , i &gt; 0 in the meanshift sequence we can find a simplex containing it by projecting it back to p i in the mesh domain and finding S i ∈M such that p i ∈ S i . The search for S i starts at S i−1 and continues by moving to an adjacent simplex S until we reach S such that p i ∈ S. The next adjacent In situations where p i falls outside the mesh boundaries (non-convex or high genus meshes), we find the closest simplex in the above sense (the last simplex in the search), project p i back to the simplex face, and continue from there.</p><p>Once the modes of all simplexes are found, we classify each simplex using the values of its mode point. This creates 'blobs' of representative points in feature-space. All simplexes belonging to 'blobs' with the same values are considered in the same cluster. However, when these clusters are projected back to the spatial subspace of the mesh they can easily create unconnected components (see for example <ref type="figure">Figure 1</ref>). There are times when this phenomenon is undesirable (e.g. for mesh partitioning) and we will address this later in Section 6.2. <ref type="figure">Figure 3</ref> shows some results of running the mean-shift procedure using different choices for sub-spaces kernel radii on the field defined in <ref type="figure" target="#fig_0">Figure 2</ref>. <ref type="figure" target="#fig_1">Figure 4</ref> illustrates clustering of a vector field (gradient) of a high genus object. It is clear from these examples that simplexes are moving away from regions of high diversity of attributes and into regions of higher uniformity. This means the surface boundaries between the region clusters can be designated as features (e.g. a place where the attributes change rapidly). We use a two-dimensional simplicial mesh to illustrate this idea in   </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Implementation</head><p>Our implementation of the mean-shift procedure conveyed similar behavior to previous reports of using the mean-shift procedure on regular grids. The modes found in feature-space show that information beyond the local kernel is accumulated and the average number of iterations until convergence remains very low (the average number grows with the growth of the kernel radius but remains around 3-5 iterations per point even when the kernel radius is 25% of the whole space).</p><p>The basic operation in each iteration is the point mean calculation. The key factor in this calculation is the search for all representative points belonging to the neighborhood Ω that will be combined in the mean computation. On a regular grid this can be performed using simple indexing, but in unstructured domain a real search is needed. In order to expedite this search, we divide the feature-space into k bins in all spatial dimensions and in some attribute dimensions. We then distribute each representative featurespace point of all simplexes in the appropriate bins. For a given point P This enables fast creation of a candidate set of points Ω (where Ω ⊇ Ω) by collecting all points in the bins which are inside or touching the kernel with radius h centered at P. This set is then filtered before the mean calculation to include only points which are truly in Ω. For this scheme to be effective, the value of k should create bins around half the size of the kernel radius in each sub-space (in practice we have often used k = 10).</p><p>However even using this approach, computation time of a naive implementation of mean shift is very large. This is because as the kernel radius becomes larger (usually it is around 10% to 20%), the size of the neighborhood Ω becomes a function of the mesh size (covering a given fraction of the mesh). Hence, if n is the number of simplexes in the mesh, each iteration of each point in the meanshift sequence can take an order of n, leading to an overall O(n 2 ) complexity, which was also observed in practice. Towards this end, we use the hierarchical mean-shift approach. This approach clusters the feature-space points locally to local modes, saving computation time by combining small neighborhoods in the mean calculations. Then the points are replaced by their local modes representative, weighted by the number of points each mode represents. The kernel radius is then enlarged, but the new set of point is smaller, again saving computation time. This process is repeated until the desired kernel radius is reached.</p><p>The following table presents some timing results of the hierarchical mean shift on the various mesh examples of the paper. All tests were performed on a Pentium-4 2GHz with 256Mb RAM. We have found that the computation time depends not only on the number of simplexes and the size of kernel, but also on the type of unstructured mesh. Uniform size meshes (e.g. the engine in <ref type="figure">Figure 6</ref> or the foot in <ref type="figure">Figure 11</ref>) tend to perform better than adaptive meshes (e.g. the fighter wing of <ref type="figure" target="#fig_5">Figure 7)</ref>. We assume the reason is that kernel and bins sizes that are a function of the bounding box size, create neighborhoods with a large number of points in places where the mesh is more refined, which slows down computation.  <ref type="figure">Figure 6</ref>: The internal structure of of a temperature field of an engine block model (a) is revealed (b) using clustering. Analysis has found clusters of temperature from high (c) to low (f).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Applications and Results</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Structure Analysis and Interrogation</head><p>One of the main roles of visualization is to assist in interpretation and understanding of raw data. Visualization operators such as isosurfacing, volume rendering and slicing of 3D data are used as tools to investigate and search for structure. However, it is sometimes extremely difficult to find good iso-values or good transfer functions that will reveal such structures. Feature space analysis can be used as a tool that helps focus on specific areas of interest in the data and reveal internal structure. By working in feature-space this is achieved simultaneously in the spatial and functional domains. In the following figures we give several examples to illustrate this. In <ref type="figure">Figure 1</ref> and <ref type="figure">Figure 6</ref> a three dimensional scalar field is defined on unstructured grid. Using feature-space we analyze the data and create clusters. We then visualize the boundaries between the clusters as feature surfaces. In both cases the internal structure is revealed by exposing elements inside the volume: ball boundaries in the scalar field of <ref type="figure">Fig 1,</ref> and a ring of high temperature around the central hole of the engine block of <ref type="figure">Fig. 6</ref>. It is important to note that those boundaries are not iso-surfaces but rather boundaries between important segments of the data. Furthermore, as can be seen in the examples, many such boundaries are found and displayed all at once creating a map of the whole field structure. In contrast, using iso-surfaces or volume rendering to create such a map would be an extremely time-consuming process.</p><p>Feature space analysis can focus the attention of the viewer in the important parts of the data. The pressure field around the wing of a plane can have an extremely complex structure. Using iso-surfaces reveals many small components that resemble noise. By clustering the data and displaying the feature boundaries the viewer can be focused on the important parts of the data (i.e. below and above the wing and around the body of the plane) and the majority of the data can be ignored <ref type="figure" target="#fig_5">(Figure 7)</ref>. In fact, one can use the clusters found in the analysis as filters for other visualization primitives and examine the data focusing on specific meaningful parts of the data.   In <ref type="figure">Figure 8</ref> such filtering is used to display the gradient of the field separately in two clusters. It can be seen that these images are much more informative than displaying the whole gradient field at once. Lastly, Feature space analysis still gives the user flexibility for interrogation. For example, changing the function-value kernel radius in the mean shift procedure creates different clusters and different views for the structure map of the scalar field ( <ref type="figure">Figure 10</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Constrained Mesh Partitioning</head><p>Mesh partitioning is an important problem in many applications such as data-interrogation, data-simplification, compression, matching, and re-meshing. Feature-space analysis can be used to partition the mesh into meaningful parts. <ref type="figure">Figure 11</ref> shows examples of applying analysis to medical data. Segment boundaries (and not iso-surfaces) correlate to material boundaries (skin, bone, brain gray and white matter etc.), and segmentation of material can be achieved. However, many times additional constraints are given on the desired results of the mesh partitioning. One of the most frequent requirements for a cluster is that it would have one connected component in the mesh domain. Another common requirement is that the genus of the cluster be 0. Other requirements may limit the size or shape of the clusters. These constraints are more easily  satisfied using local verifications in the mesh domain than global control on the clustering. Connectivity, genus and size are easier to verify when adding one simplex at a time to a given cluster than when merging two whole clusters. For this reason we adopt an incremental clustering approach when constrained mesh partitioning is required.</p><p>The incremental clustering algorithm for mesh partitioning is a simple greedy algorithm. The algorithm begins with a seed simplex and adds possible neighboring simplexes one by one to the cluster until no more simplexes can be added due to the constraints. It then moves on to the next seed simplex and continues the growth. This algorithm uses a queue and is defined in <ref type="figure" target="#fig_0">Figure 12</ref>.</p><p>The two key factors for the resulting quality of the incremental clustering algorithm are choosing a good set of seeds to start the clustering process and finding a good scheme to add neighboring elements incrementally. Here we use the information collected in feature space analysis. A good seed for clustering would be a simplex which is positioned as far as possible from mesh features and as central as possible in a uniform region of the mesh in terms of the mesh attributes. These correlate exactly to the modes found in the mean-shift procedure. Hence, we run the mean shift algorithm first, but instead of using the clusters of the algorithm, we use the modes of the clusters as seeds for incremental clustering. We choose the modes from the largest (in terms of its spatial sub-space cluster) to the smallest. While constructing a new cluster, only simplexes which were not clustered already are considered as candidates for clustering. Furthermore, when examining whether to include a simplex in a cluster, instead of using the feature-space point of the simplex itself we use the values of mode of the simplex, from the mean shift algorithm. Using this scheme we succeed in transferring the information from the analysis stage to the incremental stage.</p><p>The connectivity constraint is guaranteed by the fact that we always add a neighboring simplex to a cluster. A combinatorial size constraint can be maintained by limiting the number of simplexes added to the cluster. A geometric size constraint can be maintained by preventing the addition of simplexes which are too far from the seed of the cluster. The genus constraint can be maintained by preserving and monitoring the boundary of the cluster (see <ref type="figure" target="#fig_1">Figures 13  and 14)</ref>.</p><p>The main drawback using an incremental scheme is that when all the mode seeds are exhausted, there could still remain simplexes which are not clustered. Clustering such simplexes can either be (a) <ref type="figure">Figure 13</ref>: Partitioning of the engine with connectivity constraint. done by starting a new cluster from non-mode simplexes or by dissolving them into neighboring clusters. However, it is possible that some simplexes will remain separated and fail to cluster to any neighboring cluster. For instance, a simplex may be a neighbor of a single cluster but cannot be added to that cluster since it will violate a genus constraint (close a loop in the cluster). Hence if such simplexes are found one must try and dissolve one of the neighboring clusters and re-cluster its simplexes in a different order.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion and Future Extensions</head><p>In the domain of unstructured meshes we have shown that feature space analysis using the mean shift procedure can provide a powerful tool for visualizing and interrogating data. We also presented a partitioning algorithm for unstructured meshes based on featurespace analysis that can guarantee constraints on connectivity, genus and size of clusters and does not need (but also cannot set) the number of clusters as a prior knowledge.</p><p>Although care has been taken for fast implementation of the algorithm, the computation time is still somewhat a limiting factor for very large data (millions of simplexes). This can be solved by performing the analysis as a pre-processing stage on the data. However, as a tool for interrogative visualization we are examining ways to bring down computation time even further. These include working on multi-resolution representations of the data, and a pre-computation of some mean approximations for points. Another possibility follows from the fact that different regions in unstructured meshes might have different element sizes. A possible modification for the mean shift would be to use an adaptive kernel in different regions of the mesh according to mesh element size or function values. Supporting other constraints such as convexity of clusters and smoothness of boundaries between clusters are also often desirable. Other possible extensions to this work include the definition of time-dependent partitioning for meshes with timedependent attributes. This can be done by defining the time as an extra dimension in feature-space. Lastly, we would like to investigate the possibility to extend this method to the partitioning of boundary embedded meshes with attributes. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>(a) An illustration of the simplex average approximation of the scalar field fromFig. 1. (b)The gradient vector field (both are shown on a low-resolution mesh for clarity).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>Clustering using of a gradient field (a): a closeup of the mean shift modes (b) and the clusters with the gradient vectors displayed (c) simplex is chosen by always following the vector p i − center(S).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Figure 3 shows some results of running the mean-shift procedure using different choices for sub-spaces kernel radii on the field defined in Figure 2. Figure 4 illustrates clustering of a vector field (gradient) of a high genus object. It is clear from these examples that simplexes are moving away from regions of high diversity of attributes and into regions of higher uniformity. This means the surface boundaries between the region clusters can be designated as features (e.g. a place where the attributes change rapidly). We use a two-dimensional simplicial mesh to illustrate this idea in Figure 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Mean shift on a 2D unstructured mesh (a): the dots represent simplexes which contain a projection of a mode in featurespace. Note how simplexes are moving away from regions of high diversity to regions of higher uniformity (b), designating the boundaries between clusters as features and revealing the field structure (c)-(f).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Feature space analysis focuses the attention of the viewer to the important parts of a complex pressure field around a Fighter model. The boundaries of small clusters are displayed in different color, while discarding all background data (a). Compare this to iso-surfaces of the data which seem extremely noisy (b-c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>The result of applying cluster filtering to the Gradient field. Applying segmentation filtering as an operator before isosurface extraction results in noise reduction: compare (a) and (c) iso-surfaces without filtering to (b) and (d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 10 :Figure 11 :</head><label>1011</label><figDesc>The effect of changing the functional kernel radius on the map of internal structure (top) and on the clusters (bottom). Using feature-space analysis to segment materials in medical data. Top: segmentation between background, gray and white matter in the brain. Bottom: a detail of one slice (left), the mean shift modes (center) and the clusters (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 12 :</head><label>12</label><figDesc>The incremental clustering stage of the mesh partitioning algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 14 :</head><label>14</label><figDesc>High genus object constrained clustering. (a) The high genus mesh and field. (b)-(f) Clusters with no constraints. (g) If only genus constraint is used, some unpredictable shapes may result. (h) The clusters using genus, connectivity and size constraints.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Initialize a queue of simplices Q While there are more seeds Clear all visited flags Choose the next seed simplex sd Create a new cluster C with sd Insert sd into Q Mark sd as visited and clustered Loop until Q is empty Get the next element s from Q if s can be clustered into C</figDesc><table><row><cell>cluster s into C</cell></row><row><cell>mark s as clustered</cell></row><row><cell>for all neighbors s of s</cell></row><row><cell>if s is not clustered and not visited</cell></row><row><cell>insert s to Q</cell></row><row><cell>mark s as visited</cell></row><row><cell>Eliminate too small clusters</cell></row><row><cell>Dissolve un-clustered simplexes</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">Feature SpaceMany scalar or vector attributes can be defined either on nodes or on the highest dimension simplexes of the mesh, which we will call elements. These can include temperature, density, pressure, speed, wind-direction or simply color. In order to define a function on the whole mesh domain from sampled attributes on nodes or elements some form of blending must be used. There are several blending possibilities described in literature<ref type="bibr" target="#b24">[Nielson et al. 1997]</ref>,</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgment</head><p>This research is partially supported by the Israel Ministry of Science and Education grant "Virtual Reality and Medical Applications".</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Clustering and Classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Arabie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hubert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Desoete</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>World Scientific Publishers</publisher>
			<pubPlace>River Edge, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The contour spectrum</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization 97</title>
		<meeting>IEEE Visualization 97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="167" to="173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Tetrahedra Based Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Springer Verlag</publisher>
			<biblScope unit="page" from="3" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Mean shift: A robust approach towards feature space analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Comaniciu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Meer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="603" to="619" />
			<date type="published" when="2002-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Spatio-temporal segmentation of video by hierarchical mean shift analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dementhon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Statistical Methods in Video Processing Workshop</title>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Data dependent triangulations for piecewise linear interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dyn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rippa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IMA journal of numerical analysis</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="137" to="154" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Simplifying surfaces with color and texture using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualziation &apos;98</title>
		<meeting>IEEE Visualziation &apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="263" to="269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Hierarchical face clustering on polygonal surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Willmott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM Symposium on Interactive 3D Graphics</title>
		<meeting>ACM Symposium on Interactive 3D Graphics</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Hierarchical classification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Gordon</surname></persName>
		</author>
		<editor>Clustering and Classification, R. Arabie, L. Hubert, and G. DeSoete</editor>
		<imprint>
			<date type="published" when="1996" />
			<publisher>World Scientific Publishers</publisher>
			<biblScope unit="page" from="65" to="105" />
			<pubPlace>River Edge, NJ</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A scalable algorithm for clustering protein sequences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Guralnik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Data Mining in Bioinformatics</title>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="73" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">New quadric error metric for simplifying meshes with appearance attributes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualziation &apos;99</title>
		<meeting>IEEE Visualziation &apos;99</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="59" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Face clustering of a large-scale cad model for surface mesh generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Inoue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Takayuki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Atsushi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Tomotake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kenji</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The 8th International Meshing Roundtable Special Issue: Advances in Mesh Generation</title>
		<imprint>
			<date type="published" when="2001-03" />
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A study of transfer function generation for time-varying volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">J</forename><surname>Jankun-Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Second International Workshop on Volume Graphics</title>
		<meeting><address><addrLine>N.Y., Stony Brook, N.Y.</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="51" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Superfaces: Polygonal mesh simplification with bounded error</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Kalvin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename><surname>Taylor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page">3</biblScope>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Multilevel algorithms for multiconstraint graph partitioning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 36th ACM/IEEE conference on Design automation conference</title>
		<meeting>the 36th ACM/IEEE conference on Design automation conference</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="343" to="348" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computing Surveys</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="165" to="167" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Interactive volume rendering using multi-dimensional transfer functions and direct manipulation widgets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kniss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="255" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Least squares conformal maps for automatic texture atlas generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Petitjean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maillot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics, Proc. SIGGRAPH</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="362" to="371" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="170" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Surface segmentation using morphological watersheds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Mangan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Visualization 1998 Late Breaking Hot Topics</title>
		<meeting>IEEE Visualization 1998 Late Breaking Hot Topics</meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Multilevel algorithms for generating coarse grids for multigrid methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Moulitsas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the</title>
		<meeting>the</meeting>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m">ACM/IEEE conference on Supercomputing</title>
		<imprint>
			<biblScope unit="page" from="45" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Elements of Algebraic Topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Munkres</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Simplicial Complexes and Simplicial Maps</title>
		<imprint>
			<publisher>Perseus Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="7" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Scientific Visualization: Overviews, Methodologies, and Techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Müller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>IEEE Computer Society Press</publisher>
			<pubPlace>Los Alamitos, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Tools for triangulations and tetrahedrizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Visualization: overviews, methodologies, techniques</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="429" to="528" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Simultaneous mesh generation and partitioning for delaunay meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Nikos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Nave</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Meshing Roundtable</title>
		<meeting>the 8th International Meshing Roundtable</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="55" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">The transfer function bake-off</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Avila</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Raghu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="16" to="22" />
			<date type="published" when="2001-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Improved curvature estimation for watershed segmentation of 3-dimensional meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pulla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Razdan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Farin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
	<note>manuscript</note>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Parametric and non-parametric unsupervised cluster analysis. Pattern Recognistion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Roberts</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="327" to="345" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Bilateral filtering for gray and color images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Tomasi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Manduchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the sixth international Conference of Computer Vision</title>
		<meeting>of the sixth international Conference of Computer Vision</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="839" to="846" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Regularised marching tetrahedra: improved iso-surface extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Treece</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Prager</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Gee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="583" to="598" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Using quadratic simplicial elements for hierarchical approximation and visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">F</forename><surname>Wiley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Childs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization and Data Analysis</title>
		<meeting>Visualization and Data Analysis</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">4665</biblScope>
			<biblScope unit="page" from="32" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Gaussian mixture density modeling: Decomposition and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Palaniappan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Image Processing</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="1293" to="1302" />
			<date type="published" when="1996-09" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
