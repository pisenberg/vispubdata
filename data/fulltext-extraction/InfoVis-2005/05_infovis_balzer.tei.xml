<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Voronoi Treemaps</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Balzer</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">University of Konstanz</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><surname>Deussen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">University of Konstanz</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Voronoi Treemaps</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:51+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>H.5.2 [Information Interfaces and Presentation]: User Interfaces</term>
					<term>I.3.6 [Methodology and Techniques]: Interaction Techniques</term>
					<term>I.3.8 [Computer Graphics]: Applications Voronoi Treemaps, Information Visualization, Hierarchies, Trees, Treemaps, Voronoi Tessellations</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Treemaps are a well-known method for the visualization of attributed hierarchical data. Previously proposed Treemap layout algorithms are limited to rectangular shapes, which causes problems with the aspect ratio of the rectangles as well as with identifying the visualized hierarchical structure. The approach of Voronoi Treemaps presented in this paper eliminates these problems through enabling subdivisions of and in polygons. Additionally, this allows for creating Treemap visualizations within areas of arbitrary shape, such as triangles and circles, thereby enabling a more flexible adaptation of Treemaps for a wider range of applications.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Hierarchical structures are an often used abstraction for the classification, sorting, and organization of a broad variety of data. Small structures can be efficiently represented by graphs, whereas for the visualization of large information spaces the approach of Treemaps by Shneiderman and Johnson <ref type="bibr" target="#b10">[11]</ref> is an approved method. The idea is the space-filling recursive subdivision of a given area without producing holes or overlappings, whereby area sizes correspond to given attributes in the data set. Their wide variety of applications ranges from family trees and organization structures over file systems and software structures <ref type="bibr" target="#b1">[2]</ref> to financial analysis <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b26">26,</ref><ref type="bibr" target="#b27">27]</ref>, sports reporting <ref type="bibr" target="#b9">[10]</ref>, and many other areas.</p><p>Since the first presentation of Treemaps in 1991, many different layout algorithms have been introduced. The main characteristic of all existing Treemap layout algorithms is that they are based on the subdivision in rectangles. In this paper, Treemaps based on the subdivision in arbitrary polygons are presented. These have advantages concerning the aspect ratio of the subareas and the interpretability of the hierarchical structure. Due to the recursive pattern of Treemaps, this method is not limited to layouts within rectangles, but rather enables Treemap layouts within circles, triangles or other polygonal shapes. This allows for a more flexible adaptation of Treemaps within a wider range of applications, e.g. the combination of Treemap layouts with other visualization techniques.</p><p>The basic idea for the generation of polygonal Treemap layouts is the utilization of centroidal Voronoi tessellations <ref type="bibr" target="#b4">[5]</ref>. This method is widely-used for energy minimizations in many domains of application, for example data compression, image processing, mesh refinement, resource planning, scientific visualization <ref type="bibr" target="#b5">[6]</ref>. In the domain of information visualization, the underlying Voronoi tessellation is commonly used <ref type="bibr" target="#b20">[20,</ref><ref type="bibr" target="#b22">22,</ref><ref type="bibr" target="#b18">18,</ref><ref type="bibr" target="#b8">9]</ref>, whereas the enhancement to centroidal Voronoi tessellations is uncommon.</p><p>In the following Section 2, fundamental aspects of Treemaps and corresponding layout algorithms are discussed. Section 3 introduces the concept of Voronoi Treemaps by explaining the theory of Voronoi tessellations, their utilization for Treemaps, and the resulting layout algorithm. A discussion of the achieved results is given in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head><p>The common approach for visualizing hierarchical structures, so called trees, are graphs. They consist of nodes representing the objects in the hierarchy, and edges that illustrate the containment. This method is ideal for small hierarchies, but not appropriate for hierarchical structures with hundreds or thousands of nodes. The main reason for this is the under-utilization of the available display area. Unlike graphs, Treemaps <ref type="bibr" target="#b10">[11]</ref> remedy this problem by subdividing the given rectangular display area according to an attributed hierarchy without producing holes or overlappings. Thereby the term 'attributed' signifies that each node in the hierarchy has a value which represents its size relating to a given measurement.</p><p>The construction of Treemaps is exemplified in <ref type="figure" target="#fig_0">Figure 1</ref>. Each node in the hierarchy has a name and an associated size, whereas the size of an internal node is the sum of the sizes of its contained leaf nodes. The Treemap is constructed via recursive subdivision of the initial rectangle. The direction of each one-dimensional subdivision step alternates per level: first horizontally, next vertically, again horizontally, etc. The area size of each sub-rectangle corresponds to the size of the represented node. As a result of its construction, the Treemap reflects the structure of the tree and the sizes of its nodes. This original Treemap layout is called Slice-and-Dice. A substantial problem of this initial layout algorithm is the restriction of subdividing the plane in each step solely in one dimension. As a result, thin elongated rectangles with a high aspect ratio between width and height emerge. Such rectangles are difficult to see, select, compare in size, and label <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b23">23,</ref><ref type="bibr" target="#b2">3]</ref>. <ref type="figure" target="#fig_1">Figure 2</ref> presents an example of a real-world data set containing 698 nodes at 5 hierarchy levels. The left image visualizes this hierarchy with nodes of different sizes, whereby small nodes are hard to recognize. The same hierarchy with nodes of equal size is presented in the right image, illustrating the divergence of actual and perceived node sizes in Slice-and-Dice layouts. The reason for both problems is unerringly the high aspect ratio of the rectangles. Consequentially, in the further developments of Treemap layout algorithms mainly the issue of the high aspect ratio was addressed, for instance in Clustered Treemaps <ref type="bibr" target="#b27">[27]</ref>, Squarified Treemaps <ref type="bibr" target="#b2">[3]</ref>, Ordered Treemaps <ref type="bibr" target="#b21">[21]</ref>, and Modifiable Treemaps <ref type="bibr" target="#b25">[25]</ref>. These algorithms employ a two-dimensional subdivision in each recursion step, meaning horizontally and vertically at the same time. Their main optimization criterion is the approximation of the subrectangles to the shape of a square, so that the overall aspect ratio between width and height of the sub-rectangles is minimized. Aside from the aspect ratio criterion, other criteria have also been considered. For example, the order of nodes or the nearness of two or more nodes, whereby these other criteria are mostly related to the respective application domain. A demonstrative member of this group of advanced Treemap layout algorithms is presented in <ref type="figure">Figure</ref> 3, visualizing the same data set as in <ref type="figure" target="#fig_1">Figure 2</ref> with a Squarified Treemap layout. Similarly, nodes of different sizes are shown in the left image and nodes of equal size in the right image. Obviously, this layout algorithm maintains a much better aspect ratio, resulting in a better separation of the nodes and perception of their sizes. Disadvantageous in the mentioned sophisticated algorithms is the unclear representation of the hierarchical structure, whereas it is preserved by Slice-and-Dice Treemap layouts. For example, <ref type="figure">Figure</ref> 2 clearly represents a hierarchy with a root node containing six child nodes, which is conform to the data set. The indication therefor is the alternating horizontal and vertical subdivision. In contrast, this observation can not be made in <ref type="figure" target="#fig_2">Figure 3</ref>. Here the number of child nodes of the root node is ambiguous. A variant is a root node with two child nodes A and B, whereby A contains two and B four of the original six child nodes. Aside from this example, more delude interpretations are possible. The reason for not producing a one-to-one mapping between the hierarchical structure and the corresponding Treemap layout, is the grouping of nodes during the subdivision. For example, in the Squarified Treemap layout shown in <ref type="figure" target="#fig_2">Figure 3</ref> the two largest nodes are vertically divided from the other four smaller nodes due to the functioning of the algorithm. This 'internal' division step may be interpreted as branching in the hierarchical structure.</p><p>Another problem of the existent algorithms are edges that seemingly run into each other, whereby a distinction of nodes between and within different hierarchy levels becomes even more difficult. The reason is the still limited degree of freedom in each subdivision step. By aligning each edge only horizontally or vertically, the probability that the end point of an edge is near the starting point of another equally aligned edge is quite high, which results in the impression of one single edge instead of two separate edges. Depending on the hierarchical position of the nodes that are separated by these two edges, the interpretation of the hierarchical structure may be further deluded by the visualization.</p><p>The representation of the hierarchical structure is a crucial requirement to Treemaps. Already Shneiderman and Johnson enhanced their initial Treemap layouts by assigning borders in every subdivision step, called Nested Treemaps <ref type="bibr" target="#b10">[11]</ref>. The approach of Cushion Treemaps <ref type="bibr" target="#b24">[24]</ref> employs shading to improve the perception of structure by feigning specular reflection and thereby simulating a curved surface. This method is also adapted for the enhancement of Nested Treemaps to Framed Treemaps <ref type="bibr" target="#b2">[3]</ref>, resulting in quasi-threedimensional borders. Another option is to use transparencies <ref type="bibr" target="#b1">[2]</ref> to hide uninteresting or unwanted parts of the hierarchy. These layout-independent methods can be applied to the existing Treemap algorithms and may reduce, but do not prevent, misinterpretations concerning the hierarchical structure.</p><p>So far, all existent Treemap layout algorithms have one thing in common: they are based on and are thereby restricted to axisaligned rectangles. A slight exception are ET-Maps <ref type="bibr" target="#b19">[19]</ref> that generate shapes composed of axis-aligned rectangles, but their general appearance is identical. This limited degree of freedom drastically restricts the space of layout variability. The issues of high aspect ratios and misinterpretations concerning the hierarchical structure are consequential symptoms. Additionally, this restriction to rectangles implies that the layout of Treemaps can only take place within rectangular display areas. More complex shapes like circles, triangles, and arbitrary polygons are not possible. Although, these shapes may not be necessary if Treemap visualizations are used independently. However, by embedding Treemap layouts within more complex visualizations, a better adaptability is quite useful or even necessary.</p><p>Hence, the approach of Voronoi Treemaps is presented, enabling a polygon-based two-dimensional subdivision following the Treemap paradigm. It offers low aspect ratios, better interpretability of hierarchical structures, and flexible adaptability regarding the enclosing shape.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">VORONOI TREEMAPS</head><p>Global application-independent constraints and optimization criteria for a Treemap layout regarding the shape of the Treemap subareas are:</p><p>1. Constraint: The division in subareas must fully utilize the given overall area, thereby avoiding holes and overlappings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Optimization criterion:</head><p>Subareas should have an overall aspect ratio between width and height that converges to one.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Optimization criterion:</head><p>Siblings in the hierarchy should not be grouped during the layout process, thereby making the identification of the hierarchical structure non-ambiguous.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Optimization criterion:</head><p>Subareas of the Treemap should have non-regular shape, so that edges between the subareas do not seemingly run into each other.</p><p>Obviously, polygons can be used for the division of a given area into subareas. A polygon is defined as a closed plane figure with n sides. Each polygon can be subdivided into smaller polygons, hereby satisfying the constraint number 1. Polygons can have arbitrary shapes, and polygons with many sides can approximate curves. Both refer to the optimization criteria number 2, 3, and 4.</p><p>The principle structure of the layout algorithm is similar to the original Treemap layout algorithm. The first step is to create a polygonal subdivision of the given display area according to the top hierarchy level. The output is a set of polygons representing the nodes of the top hierarchy level. For the next hierarchy level, this procedure is performed recursively for all top level nodes within the respective polygons. When the recursion ends, a complete Treemap layout is obtained.</p><p>The basic concept for generating polygonal subdivisions is to utilize Voronoi tessellations. They enable an iteratively computation of good layouts in accordance to the given constraint and optimization criteria. Finding an optimal solution is a NP-complete problem-even for layouts based on axis-aligned rectangles. However, a good approximation is sufficient for Treemaps. To clearly convey the idea of Voronoi Treemaps, necessary theoretical knowledge of Voronoi tessellations is given in the subsequent Section 3.1. The layout algorithm for computing Voronoi Treemaps is explained in detail in Section 3.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Voronoi Tessellations</head><p>Voronoi tessellations enable the partitioning of a m-dimensional space without producing holes or overlappings. For an easier understanding of their underlying theory, the explanations in this section are restricted to relevant aspects regarding their application for Treemap layouts. Here only planar Voronoi tessellations in the twodimensional Euclidian space are considered. All definitions and denotations are according to <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b4">5]</ref>.</p><p>Basic Properties: Let P := {p 1 , ...., p n } be a set of n distinct points in R 2 with the coordinates (x 1 , y 1 ), ..., (x n , y n ). These points are the generators. The subdivision of R 2 into n Voronoi regions V (p i ), with the property that a point q(x, y) lies in the region V (p i ) if and only if distance(p i , q) &lt; distance(p j , q) for each p i , p j ∈ P with i = j, is defined as the Voronoi tessellation V (P) := {V (p 1 ), ...,V (p n )}. The denotation distance(p i , q) represents a specified distance function between the generator p i and the point q. In general, a Voronoi tessellation is defined in an unbounded space. Having a bounded space S, the set V ∩S (P) := {V (p 1 ) ∩ S, ...,V (p n ) ∩ S} is called a bounded Voronoi tessellation of P by S. An ordinary Voronoi tessellation V ε (P) is a Voronoi tessellation using the Euclidian metric, defined by</p><formula xml:id="formula_0">distance ε (p i , q) := p i − q = (x i − x) 2 + (y i − y) 2 , (1)</formula><p>as their distance function. The bisector of two regions  Weighted Voronoi Tessellations: In the basic Voronoi tessellation V (P) it is implicitly assumed that each generator has the same weight. As an extension, a set of parameters W may be given, and to each generator p i ∈ P a parameter w i ∈ W is assigned. These parameters are the weights. By using weighted generators, it is possible to define weighted distance functions, generating weighted Voronoi tessellations V (P,W ).</p><formula xml:id="formula_1">V ε (p i ) and V ε (p j ) of</formula><p>An additively weighted Voronoi tessellation V aw (P,W ), briefly the AW Voronoi tessellation, uses the following distance function between a generator p i ∈ P with its assigned weight w i ∈ W and a point q:</p><formula xml:id="formula_2">distance aw (p i , w i , q) := p i − q − w i .<label>(2)</label></formula><p>The bisector of two regions</p><formula xml:id="formula_3">V aw (p i , w i ) and V aw (p j , w j )</formula><p>of an AW Voronoi tessellations forms a hyperbolic curve with foci p i and p j . The left image in <ref type="figure" target="#fig_5">Figure 5</ref> presents an example for an AW Voronoi tessellation. The distance function for the additively weighted power Voronoi tessellations V pw (P,W ), briefly PW Voronoi tessellation, is:</p><formula xml:id="formula_4">distance pw (p i , w i , q) := p i − q 2 − w i .<label>(3)</label></formula><p>This distance function yields a bisector of two regions</p><formula xml:id="formula_5">V pw (p i , w i ) and V pw (p j , w j )</formula><p>that is a straight line. The bisector corresponds to the perpendicular bisector of p i and p j moved away from their midpoint depending on their weights w i and w j . The right image in <ref type="figure" target="#fig_5">Figure 5</ref> presents an example for a PW Voronoi tessellation. Both, the AW and the PW Voronoi tessellation, may be illustrated as Voronoi tessellations that are using circles as generators. This is obvious, if circles are considered as points with a size or weight parameter. Thereby, the weight w i in the AW distance function represents directly the radius of the circle, whereas in the PW distance function, w i is the square of the radius. To satisfy the continuity of AW Voronoi tessellations, the circles are not allowed to overlap. Additionally, the abstraction of circles with negative radii has to be made in order to achieve the complete spectrum of possible Voronoi tessellations for the AW and the PW distance function. </p><formula xml:id="formula_6">= V (p i ) xdx. A centroidal Voronoi tessellation,</formula><p>briefly CVT, is a special Voronoi tessellation with the property that each generator p i is itself the center of mass c i of the corresponding Voronoi region V (p i ). Obviously, there exist many different CVTs for a given number of generators.</p><p>The mathematical importance of the CVT is founded by its relationship to the energy function</p><formula xml:id="formula_7">K (P, V (P)) = ∑ i V (p i ) x − p i 2 dx.<label>(4)</label></formula><p>It is proven that a necessary condition for K (P, V (P)) to be minimized is that V (P) is a CVT <ref type="bibr" target="#b4">[5]</ref>. Since to find a CVT of a given number of generators with K (P, V (P)) in a global minimum is NP-complete <ref type="bibr" target="#b4">[5]</ref>, approximations of CVTs that are located in local minima of K (P, V (P)) are used. CVTs can be iteratively computed with the Lloyd's method <ref type="bibr" target="#b15">[16]</ref>: By starting with an initial distribution of generators P within a bounded plane S, in each iteration step each generator p i ∈ P is moved into the center of mass c i of its Voronoi region V ∩S (p i ) ∈ V ∩S (P). This iterative computation stops when the difference between each generator p i and its corresponding center of mass c i is below a chosen error threshold ε. <ref type="figure" target="#fig_6">Figure 6</ref> exemplifies this method. The concept of CVTs can be generalized to non-Euclidian distance functions and spaces, and can also be extended to weighted Voronoi tessellations. The only prerequisite is that the existence of a however defined center of mass for each Voronoi region is guaranteed.</p><p>Computational Complexity and Algorithms: A lower bound of the worst-case time complexity for constructing the ordinary Voronoi tessellation V ε (P) of n generators is O(n log n). A lower bound of the space complexity for computing V ε (P) is O(n) in the worst case. Both lower bounds for V ε (P) are tight in the sense that actually there exist optimal algorithms having these lower bounds <ref type="bibr" target="#b16">[17]</ref>.</p><p>The computations of the AW Voronoi tessellation V aw (P,W ) and the PW Voronoi tessellation V pw (P,W ) have the same time and space complexity as V ε (P) in the worst case. Optimal algorithms are existent, for instance <ref type="bibr" target="#b7">[8]</ref> for V aw (P,W ), and <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b14">15]</ref> for V pw <ref type="figure">(P,W )</ref>.</p><p>The time complexity of the iterative computation of an approximation of a CVT is O(dO V ) with d as the number of iterations and O V as the complexity of the used Voronoi tessellation. Thereby d is not directly related to the number of generators, but rather to the minimal approximation error that should be achieved, and it therefore does not affect the overall complexity. The complexity of the calculation of the centers of mass of a Voronoi region does also not affect the overall complexity, because it is only O(n), and each Voronoi tessellation has at least a time complexity of O(n). Thus, the overall time complexity for computing the approximation of a CVT is equal to the time complexity of the used Voronoi tessellation. Nevertheless, CVT algorithms are very time-consuming, since often many iterations are necessary for obtaining a good approximation. By taking advantage of the fact that it is not necessary to calculate the Voronoi tessellations itself for obtaining a CVT, it is possible to use distributed computing environments for their computation <ref type="bibr" target="#b11">[12]</ref>. The idea is to calculate only the centers of mass in each iteration step by using large random sets of discrete sample points. This method achieves a nearly perfect linear speed-up with the number of processors used, and has the same time complexity as the respective Voronoi tessellation. The space complexity of the iterative computation of an approximation of a CVT is O(n).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Voronoi Treemap Algorithm</head><p>The principle structure of the algorithm is similar to the recursive structure of the original Treemap layout algorithm. The modification for Voronoi Treemaps is applied to the subdivision in each recursion step. Therefor the computation of the centroidal Voronoi tessellation is utilized.</p><p>CVTs enable the subdivision of a given area without producing holes and overlappings, which satisfies the constraint for Treemap layouts. CVTs minimize the overall energy of the Voronoi tessellation. The energy of the CVT is thereby equivalent to the overall aspect ratio of the subareas of the Treemap layout <ref type="bibr" target="#b4">[5]</ref>, which refers to optimization criterion number 2. In a Voronoi tessellation each generator is treated separately from the other generators. CVTs are special cases of Voronoi tessellations, and therefore also do not group their generators. This refers to the optimization criterion number 3. Non-degenerated vertices within Voronoi tessellations arise from three generators that have the same distance to a point, whereby each non-degenerated vertex is assigned to three edges. The energy minimization in CVTs simultaneously minimizes the number of degenerated vertices, and maximizes the distances between vertices and the angles between the edges of a vertex <ref type="bibr" target="#b4">[5]</ref>. In combination with the general non-regular topology of CVTs, this refers to the optimization criterion number 4. Concluding it can be stated that CVTs are suitable for generating good Treemap layouts in reference to the given constraint and optimization criteria.</p><p>The essential characteristic of Treemaps is that their subarea sizes correspond to the sizes of the nodes in the hierarchy. In standard CVTs using the Euclidian distance function, the sizes of the Voronoi regions are roughly the same, which disqualifies them for the generation of Treemap layouts. CVTs with weighted distance functions have the property to produce divisions with variable sized subareas. The problem is that during the computation of a CVT with an arbitrarily defined distance function, the area sizes of the Voronoi regions are not observed. For that reason, an extension of the standard CVT computation method is necessary in order to control the size of every Voronoi region. The idea is to adaptively alter the weight parameter of each generator in the next iteration step according to the size of the dedicated Voronoi region in the current iteration step. For example, if the size of a node in the hierarchy is 20% of the size of the parent node, and in the current iteration step the dedicated Voronoi region covers only 16% of the overall area, it is tried to increase the area size of this Voronoi region in the next iteration step from 16% to 20% by increasing the weight of the generator by 25%. Due to the facts that the relation between the weight of a generator and the area size of the dedicated Voronoi region is not a linear dependency, and the weight and positions of the other generators are changing at the same time, the correct area size is most likely not achieved in the next iteration step. Rather it is presumed that a better approximation is obtained. By performing these adjustments of the generator weights in each iteration step, the computation stops in a stable state, whereby the error between the designated relative size of each node in the hierarchy and the relative area size of the dedicated Voronoi region is below a chosen maximum error ε. This extended computation method for weighted CVTs for the generation of Treemap layouts is further outlined by means of Algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Voronoi Treemap subdivision</head><p>Input: bounded plane S in R 2 ; set of n values A desired := {a 1 desired , ..., a n desired } with 0 &lt; a i desired ≤ 1 and ∑ a i desired = 1; error threshold ε</p><formula xml:id="formula_8">Output: subdivision of S in n disjoint subareas s i ⊂ S with AreaSize(s i ) AreaSize(S) − a i desired &lt; ε 1:</formula><p>initialize a set of n points P :</p><formula xml:id="formula_9">= {p 1 , ..., p n } with p i ∈ S, p i = p j 2:</formula><p>initialize a set of n weights W := {w 1 , ..., w n } with w i = 1 3: initialize a data structure for the Voronoi tessellation V ∩S (P,W ) 4: repeat</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5:</head><p>ComputeVoronoiTessellation(V ∩S (P,W )) <ref type="bibr" target="#b5">6</ref>:</p><formula xml:id="formula_10">stable = true 7:</formula><p>initialize a set of n values A := {a 1 , ..., a n }</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>8:</head><p>for each a i ∈ A do 9:</p><formula xml:id="formula_11">a i = AreaSize(V (p i ,w i )) AreaSize(S) with Voronoi region V (p i , w i ) ∈ V ∩S (P,W )</formula><p>10: </p><formula xml:id="formula_12">if |a i − a desired | ≥ ε</formula><formula xml:id="formula_13">for each w i ∈ W do 15: Ad justWeight(w i , a i , a i desired ) 16:</formula><p>end for <ref type="bibr" target="#b16">17</ref>:</p><formula xml:id="formula_14">MoveGenerators(P,W, V ∩S (P,W )) 18: until stable == true 19: ExtractSubareas(V ∩S (P,W ))</formula><p>In general, arbitrary weighted distance functions may be used for the described subdivision algorithm. However for the application of Treemaps and the given optimization criteria, especially the additively weighted distance function-with restriction to distributions equivalent to non-overlapping circles-and the additively weighted power distance function are qualified. This is caused by the continuous topology of their resulting Voronoi regions. The difference between the AW and the PW Voronoi tessellation is the shape of the bisector of two regions. AW Voronoi tessellations create hyperbolic curves, and PW Voronoi tessellations create straight lines. Thus, it has to be distinguished between AW Voronoi Treemaps and PW Voronoi Treemaps. Additionally, the different characteristics of the AW and PW distance functions necessitate a different handling of the auxiliary functions Ad justWeight() and MoveGenerators() in Algorithm 1.</p><p>During the computation of AW Voronoi Treemap subdivisions, it is necessary that the weight parameter w i can have negative values. If not, it may be possible that the area size error of small regions will not get below the chosen error threshold ε. Furthermore, the special case has to be observed that the weight w i in AW tessellations does not become zero or nearby zero. Therefore, it has to be checked against a very small value δ . In contrast, according to experience, the convergence of the algorithm for PW Voronoi Treemap subdivisions is improved, if each w i ≥ 1.  </p><formula xml:id="formula_15">w i = sign(w i ) • δ 4: end if 5: w i = w i + |w i | • a i desired −a i a i desired</formula><formula xml:id="formula_16">w i = w i • 1 + a i desired −a i a i desired 2: if w i &lt; 1 then</formula><p>3:</p><formula xml:id="formula_17">w i = 1 4: end if</formula><p>For granting continuous AW Voronoi regions during the subdivision algorithm, it is required that the distribution of generators in combination with the according weights is equivalent to a distribution of non-overlapping circles. This can be achieved by again adjusting the weights after the generators have been moved into the centers of mass of the dedicated Voronoi regions, while keeping the ratio between the weights. Thereby all weights are multiplied by a maximum factor, so that for each subset of generators {p i , p j } ⊂ P, with i = j, their Euclidian distance is not smaller than the sum of the assigned weights w i and w j . Algorithm 4 outlines the implementation of the function MoveGenerators() for AW Voronoi Treemaps. For PW Voronoi Treemaps, no additional conditions must be satisfied. Thus, the function MoveGenerators() for PW Voronoi Treemaps is reduced to moving each generator p i into the center of mass of the dedicated Voronoi region</p><formula xml:id="formula_18">V pw (p i , w i ) ∈ V pw∩S (P,W )).</formula><p>The formal declaration of an algorithm is set aside.</p><p>For the standard CVT computation method with constant weights, it has been shown that the energy K i (P, V (P)) in iteration i is lower than the energy K i−1 (P, V (P)) in iteration i − 1, and therefore the computation stops in a local minimum <ref type="bibr" target="#b4">[5]</ref>. This cannot be proven for the extended CVT computation method because of the permanently changing weights of the generators. Nevertheless, from experience it can be stated that in most cases this extended CVT computation method also stops in a local minimum. If not, this problem can be remedied by a re-initialization of the generators with new random positions. Aside from the energy of the Algorithm 4 MoveGenerators() for AW Voronoi Treemaps Input: set of n points P := {p 1 , ..., p n }; set of n weights W := {w 1 , ..., w n }; AW Voronoi tessellation V aw∩S (P,W ) Output: set of n points P :</p><formula xml:id="formula_19">= {p 1 , ..., p n } with p i = CenterO f Mass(V aw (p i , w i )) and V aw (p i , w i ) ∈ V aw∩S (P,W ); set of n weights W := {w 1 , ..., w n } with p i − p j 2 − (w i + w j ) ≥ 0 for {p i , p j } ⊂ P, i = j 1: for each p i ∈ P do 2: p i = CenterO f Mass(V aw (p i , w i )) with V aw (p i , w i ) ∈ V aw∩S (P,W ) 3: end for 4: f actorWeight = ∞ 5: for each {p i , p j } ⊂ P with i = j do 6: f = p i −p j 2 w i +w j 7:</formula><p>if 0 &lt; f &lt; f actorWeight then for each w i ∈ W do 13:</p><formula xml:id="formula_20">w i = w i • f actorWeight 14:</formula><p>end for 15: end if Voronoi tessellation, the area size error of each Voronoi region and the overall area size error is also reduced during the computation. Indeed, at the end of the computation, this error does not reside in a local minimum, but rather below a chosen threshold ε. <ref type="figure" target="#fig_8">Figure 7</ref> illustrates a typical convergence of the maximum area size error of a Voronoi region and of the overall area size error of the Voronoi tessellation during the computation of a CVT with an AW and a PW distance function. The data set consisted of ten generators with different sizes. The area size error of each Voronoi region was less than 0.1% at iteration 185 for the AW distance function, and at iteration 206 for the PW distance function. The entire AW and PW Voronoi Treemap layouts are generated by using the described computation of CVTs in the subdivision step of the Treemap recursion. <ref type="figure">Figure 8</ref> presents the result for a layout with the AW distance function, and <ref type="figure">Figure 9</ref> presents the result for a layout with the PW distance function. All four images use the data set with 698 nodes at 5 hierarchy levels, as in the examples of Sliceand-Dice and Squarified Treemap layouts in Section 2. Again, the left images visualize the hierarchy with nodes of different sizes, and the right images with nodes of equal size. Similarly to the other Treemap layout algorithms, enhancements like borders, adaptive edge sizes, cushions, coloring, etc., may also be applied to the described layout method. This additionally supports the user in the perception and interpretation of the Treemap visualization. Examples for such enhanced Voronoi Treemap layouts are presented in <ref type="figure" target="#fig_0">Figures 10-12</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION</head><p>This paper presents a new approach for the generation of Treemap layouts. Contrary to existent layout algorithms that are based on the subdivision in rectangles, this new layout algorithm enables the subdivision in arbitrary polygons. This also allows to create Treemap visualizations within areas of arbitrary shape, such as circles or triangles. The evidence for the suitability of the introduced layout method has been produced by the constraints and global application-independent optimization criteria for Treemaps. Especially, the minimization of the overall aspect ratio of the subareas is explicitly attributed to the proven energy minimization in centroidal Voronoi tessellations. This minimization does thereby not entail ambiguities of the interpretability of the hierarchical structure in the visualization, such as observed in other Treemap layout algorithms.</p><p>Because of the intricacy of the expanded degree of freedom for these layouts, the presented method iteratively computes an approximation of a layout with an error below a desired threshold. Depending on this threshold, the number of iterations required may become very large. Thus, with regard to computation time, other Treemap layout algorithms outperform this method by far. This problem is diminished by using distributed computing environments. The recursive structure of the Treemap algorithm and the ability to massively parallelize the computation of the CVTs, enable an almost perfect linear scalability with the number of processors used. In the existing prototype implementation of the layout algorithm, a variable number of compute servers is utilized to generate even large Treemap layouts within a reasonable time-using eight Intel Xeon CPUs each with 2.4 GHz, the computation of <ref type="figure" target="#fig_0">Figure 10</ref> required 7:13 minutes, and that of <ref type="figure" target="#fig_0">Figure 11</ref> required 5:48 minutes. Indeed, this method is not appropriate for real time calculation.</p><p>In future work, the properties and abilities of the presented layout method will be studied extensively. For example, the restriction of the movement of the generators, and the temporal coherence of the subareas, will be investigated. That will permit ordered layouts, and the visualization of time-variant data sets respectively. Also, adaptations of the presented method to other layout problems outside the Treemap domain will be addressed, such as the visualization of georeferenced statistical data.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Tree and corresponding Treemap-each node is labeled with its name and size; the area sizes in the Treemap correspond to the node sizes Please see supplementary material on conference DVD. IEEE Symposium on Information Visualization 2005 October 23-25, Minneapolis, MN, USA 0-7803-9464-X/05/$20.00 ©2005 IEEE.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Slice-and-Dice Treemap layouts of 698 nodes at 5 hierarchy levels with nodes of different sizes (left) and nodes of equal size (right)-the high aspect ratio between width and height causes the hard recognition of small nodes and the bad perception of node sizes</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Squarified Treemap layouts of the same data set as in Figure 2-the interpretation of the hierarchical structure is ambiguous and often edges seemingly run into each other</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>an ordinary Voronoi tessellations is the perpendicular bisector of the generators p i and p j . Examples for an unbounded and a bounded planar ordinary Voronoi tessellation are given inFigure 4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Unbounded and bounded planar ordinary Voronoi tessellation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Weighted Voronoi tessellations using the AW and the PW distance function Centroidal Voronoi Tessellations: The center of mass, or centroid, c i of a Voronoi region V (p i ) within the Euclidian space is calculated by c i</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Voronoi tessellation of 20 random points and an associated CVT-traces illustrate the movements of the points during the computation of the CVT</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>11 :</head><label>11</label><figDesc>if f actorWeight &lt; 1 then 12:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>Typical convergence of the maximum area size error of a Voronoi region and of the overall area size error of the Voronoi tessellation during the computation of a CVT with an AW and a PW distance function</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>AW Voronoi Treemap layouts of the same data set as in Figure 2 with nodes of different sizes (left) and nodes of equal size (right) PW Voronoi Treemap layouts of the same data set as in Figure 2 with nodes of different sizes (left) and nodes of equal size (right)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 10 :</head><label>10</label><figDesc>Enhanced AW Voronoi Treemap layout of 4075 nodes at 10 hierarchy levels (a brighter color indicates a lower hierarchy level)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>The resulting algorithms for the Ad justWeight() function are outlined in Algorithm 2 for AW Voronoi Treemaps and in Algorithm 3 for PW Voronoi Treemaps.</figDesc><table><row><cell>Algorithm 2 Ad justWeight() for AW Voronoi Treemaps</cell></row><row><cell>Input: weight value w i ; area size value a i ; desired area size value a i desired = 0</cell></row><row><cell>Output: adjusted weight value w i</cell></row><row><cell>1: 0 &lt; δ ≪ 1 2: if |w i | &lt; δ then 3:</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Power diagrams: Properties, algorithms, and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Franz</forename><surname>Aurenhammer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="78" to="96" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Voronoi treemaps for the visualization of software structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Balzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><surname>Deussen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Claus</forename><surname>Lewerentz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Symposium on Software Visualization</title>
		<meeting>the ACM Symposium on Software Visualization</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Squarified treemaps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Bruls</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kees</forename><surname>Huizing</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarke</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint Eurographics and IEEE TCVG Symposium on Visualization</title>
		<meeting>the Joint Eurographics and IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="33" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Computational Geometry: Algorithms and Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Mark De Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Van Kreveld</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Otfried</forename><surname>Overmars</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schwarzkopf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Germany</pubPlace>
		</imprint>
	</monogr>
	<note>2nd rev. edition</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Centroidal voronoi tessellations: Applications and algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vance</forename><surname>Faber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Gunzburger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Figure 11: Enhanced PW Voronoi Treemap layout of 16288 nodes at 7 hierarchy levels</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="637" to="676" />
		</imprint>
	</monogr>
	<note>a brighter color indicates a lower hierarchy level</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Centroidal voronoi tessellation based algorithms for vector fields visualization and segmentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoqiang</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization</title>
		<meeting>the IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The information capacity of the human motor system in controlling the amplitude of movements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><forename type="middle">M</forename><surname>Fitts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Experimental Psychology</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="381" to="391" />
			<date type="published" when="1954" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A sweepline algorithm for voronoi diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steven</forename><forename type="middle">J</forename><surname>Fortune</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="153" to="174" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Evaluating a system for interactive exploration of large, hierarchically structured document repositories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Granitzer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Kienreich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vedran</forename><surname>Sabol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Keith</forename><surname>Andrews</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Werner</forename><surname>Klieber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="127" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Tennisviewer: A browser for competition trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liqun</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="63" to="65" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Tree maps: A space-filling approach to the visualization of hierarchical information structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2nd International IEEE Visualization Conference</title>
		<meeting>the 2nd International IEEE Visualization Conference</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="284" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Probabilistic methods for centroidal voronoi tessellations and their parallel implementations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lili</forename><surname>Ju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qiang</forename><surname>Du</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename><surname>Gunzburger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Parallel Computing</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1477" to="1500" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Adapting treemaps to stock portfolio visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Walter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Jungmeister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Turo</surname></persName>
		</author>
		<idno>UMCP-CSD CS-TR- 2996</idno>
		<imprint>
			<date type="published" when="1992" />
			<pubPlace>College Park, Maryland 20742, USA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Maryland</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Voronoi diagram of a circle set from voronoi diagram of a point set: I. Topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deok-Soo</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donguk</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kokichi</forename><surname>Sugihara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="541" to="562" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Voronoi diagram of a circle set from voronoi diagram of a point set: II. Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deok-Soo</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donguk</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kokichi</forename><surname>Sugihara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="563" to="585" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Least square quantization in PCM</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Stuart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lloyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Information Theory</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1982" />
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page" from="129" to="137" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Atsuyuki</forename><surname>Okabe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Barry</forename><surname>Boots</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kokichi</forename><surname>Sugihara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sung</forename><forename type="middle">Nok</forename><surname>Chiu</surname></persName>
		</author>
		<title level="m">Spatial Tessellations: Concepts and Applications of Voronoi Dia</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Comparison of four Treemap layout algorithms-at first, the top hierarchy level was subdivided with the Squarified Treemap algorithm, then for each of the four subareas according to its label a different layout algorithm was used (a brighter color indicates a lower hierarchy level) grams</title>
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<date type="published" when="2000" />
			<publisher>John Wiley and Sons Ltd</publisher>
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Information space regionalization using adaptive multiplicatively weighted voronoi diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rene</forename><surname>Reitsma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stanislav</forename><surname>Trubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Saurabh</forename><surname>Sethia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 8th International Conference on Information Visualisation</title>
		<meeting>the 8th International Conference on Information Visualisation</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="290" to="294" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">A scalable self-organizing map algorithm for textual classification: A neural network approach to thesaurus generation. Communication and Cognition -Artificial Intelligence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dmitri</forename><surname>Roussinov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsinchun</forename><surname>Chen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="81" to="112" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Hierarchical data representations based on planar voronoi diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shirley</forename><surname>Schussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Bertram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint Eurographics and IEEE TCVG Symposium on Visualization</title>
		<meeting>the Joint Eurographics and IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Ordered treemap layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ben</forename><surname>Shneiderman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Wattenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="73" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Generalized distance transforms and skeletons in graphics hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Strzodka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandru</forename><surname>Telea</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Joint Eurographics and IEEE TCVG Symposium on Visualization</title>
		<meeting>the Joint Eurographics and IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="221" to="230" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Improving the visualization of hierarchies with treemaps: Design issues and experimentation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Turo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 3rd Conference on Visualization</title>
		<meeting>the 3rd Conference on Visualization</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="124" to="131" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Cushion treemaps: Visualization of hierarchical information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jarke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Huub</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van De Wetering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization</title>
		<meeting>the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="73" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Modifiable treemaps containing variable-shaped units</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frederic</forename><surname>Vernier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laurence</forename><surname>Nigay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Extended Abstracts of the IEEE Symposium on Information Visualization</title>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Map of the market</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Wattenberg</surname></persName>
		</author>
		<ptr target="http://smartmoney.com/marketmap" />
	</analytic>
	<monogr>
		<title level="j">SmartMoney.com</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Visualizing the stock market</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Wattenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Extended Abstracts on Human Factors in Computing Systems</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="188" to="189" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
