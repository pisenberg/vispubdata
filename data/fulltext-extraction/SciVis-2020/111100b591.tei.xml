<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Data-Driven Space-Filling Curves</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Liang</forename><surname>Zhou</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Weiskopf</surname></persName>
						</author>
						<title level="a" type="main">Data-Driven Space-Filling Curves</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Space-filling curves</term>
					<term>comparative visualization</term>
					<term>ensemble visualization</term>
					<term>multivariate visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Visualizations of an ensemble of volumetric data. The key idea is to employ a mapping from 3D space (as in the volume renderings) to 1D space via space-filling curves, which then allows us to show boxplots of the data distributions. The ensemble is generated by sampling from Gaussian distributions of data values in the nucleon data with varying extents of uncertainty. The boxplots of the ensemble linearized with the Peano-Hilbert curve (bottom) do not preserve the coherency of 3D features-the small torus structure of high intensity cannot be readily identified. In contrast, our data-driven space-filling curve method (top) preserves features from 3D even in the 1D linearized representation as high intensities are more concentrated. This observation is confirmed by brushing-and-linking-the torus could be covered by one brush and its surroundings with two brushes with our method (see the volume rendering on the right and the yellow and purple regions in &quot;Data-driven space-filling curve&quot;), whereas multiple brushes are required by the Peano-Hilbert curve (yellow and purple regions in &quot;Peano-Hilbert curve&quot;).</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Space-filling curves (SFCs) linearize an n-D image through a oneto-one mapping into one dimension. Such linearization is useful in visualization as a tool for dimensionality reduction for 2D and 3D datasets. In this paper, we propose a data-driven space-filling curve method for data on regular or multiscale grids. Our main goal is to preserve spatial coherency (i.e., locality) and data coherency (i.e., data features) at the same time. We construct a faithful representation of the original 3D or 2D data after linearization. The method is intended for easy feature identification in the 1D visualization of space-filling curves-as line-plots-and facilitates subsequent user interactions, e.g., brushing-and-linking in comparative visualizations.</p><p>An important factor for choosing an appropriate space-filling curve is how well the locality of a dataset is preserved. Among typical spacefilling curves, the Peano-Morton curve does not effectively preserve the locality, whereas the Peano-Hilbert curve <ref type="bibr" target="#b9">[10]</ref>  better locality, and, therefore, is popular in visualization. However, these space-filling curves ignore the content of a dataset. This issue is illustrated in <ref type="figure">Fig. 1</ref>. It shows the visualization of an ensemble of a nucleon volumetric dataset generated by sampling from Gaussian distributions with varying extents of uncertainty: the volume rendering generated with a blue-white-red color map is shown in <ref type="figure">Fig. 1 (left)</ref>. Boxplots along the Peano-Hilbert curve are shown in <ref type="figure">Fig. 1 (central bottom)</ref>, where the feature coherency in 3D is not preserved-the small torus structure of high intensity cannot be identified. In fact, the torus is split into distant pieces in the 1D space and multiple brushes are required to select the feature (yellow areas in the "Peano-Hilbert curve" of <ref type="figure">Fig. 1</ref>). By contrast, with our method ( <ref type="figure">Fig. 1 (central top)</ref>), the torus can be identified as a feature spanning a much smaller range in 1D, and can be selected with a single brush (as seen in the yellow region) thanks to better preservation of features in the spatial domain. With brushing-and-linking, the same regions are highlighted in yellow in 3D ( <ref type="figure">Fig. 1 (right)</ref>) using linearizations with our method and the Peano-Hilbert curve. The better feature preservation of our method is also demonstrated with the purple brushes.</p><p>Our main contribution is a data-driven space-filling curve approach that comprises two variants of techniques: one for 2D and 3D regular grids, and another for 2D and 3D multiscale data. For regular grids, our method generates Hamiltonian cycles by replacing a minimum spanning tree using an objective function that combines locality and position terms; for multiscale data-quadtrees and octrees-our method finds adaptive Hamiltonian paths across data scales in a greedy fashion. To enable the calculation of Hamiltonian paths for multiscale data, we make a second contribution: a simple and efficient technique that finds a Hamiltonian path given only the entry and exit edges (2D) and faces (3D) of bounding rectangles/boxes of (all vertices of) grid graphs (e.g., north, east, south, west of the bounding rectangle of a 2D grid graph). We evaluate our method for each data type by comparing it to the Peano-Hilbert curve and scanline ordering on synthetic and real-world datasets. The effectiveness of our overall method is demonstrated through typical examples of 2D and 3D multivariate and ensemble data on regular grids and multiscale. The source code of our method is available online 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Space-filling curves <ref type="bibr" target="#b23">[24]</ref>, discovered by Peano <ref type="bibr" target="#b18">[19]</ref>, are traditional topics in mathematics but now have various applications across different areas in computer science. Well-known space-filling curves include the Peano curve <ref type="bibr" target="#b18">[19]</ref>, the Gray code ordering <ref type="bibr" target="#b7">[8]</ref>, and the Peano-Hilbert curve <ref type="bibr" target="#b9">[10]</ref>. These methods consider only spatial discretization on regular grids. Adaptively refined space-filling curves are available for multiscale data structures, specifically, quadtrees and octrees, for dynamic load balancing for high-performance computing <ref type="bibr" target="#b3">[4]</ref>. However, these methods use static configurations that are independent of the content of the data and relate only to the size of the data.</p><p>The context-based space-filling curve <ref type="bibr" target="#b4">[5]</ref> is one of the few examples of a data-dependent curve. It targets to improve autocorrelation in 2D image and video encoding. There, a "dual graph" (we use this redefinition by Dafner et al. <ref type="bibr" target="#b4">[5]</ref> throughout our paper) is generated from the input image and then a minimum spanning tree of the graph is found, where weights are determined by an objective function. Finally, the space-filling curve is constructed by replacing the minimum spanning tree with a Hamiltonian path from a Hamiltonian cycle. However, this method is limited to 2D data and does not support multiscale data, making it unsuitable for many visualization applications. Unlike this method, our data-driven space-filling curves support 3D volume data and multiscale data of 2D and 3D, which are not possible with the context-based space-filling curves <ref type="bibr" target="#b4">[5]</ref>. In addition, our method introduces a new objective function that achieves both feature and locality coherency, making it more flexible than the context-based method. Another example is an approximation method of the spacefilling curve with a data-driven metric <ref type="bibr" target="#b25">[26]</ref>. However, only simple 2D examples with distributed points are demonstrated and it is unclear how the method could be extended to more complex data such as images and volumes. A random space-filling curve method <ref type="bibr" target="#b12">[13]</ref> based on the "cover and merge" strategy is not data-driven but inspires the computational framework of the context-based space-filling curve <ref type="bibr" target="#b4">[5]</ref> as well as our regular grid techniques.</p><p>Space-filling curves are useful for many visualization purposes. They facilitate comparative visualizations due to locality preservation, i.e., points that are close on the space-filling curve are close in the original 2D/3D space (not necessarily the other way around). Space-filling curves are used in ensemble visualization of 3D volumetric data <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b27">28]</ref>. Peano-Hilbert curves are calculated for 3D ensemble data of multiple levels-of-details, and the linearized results are visualized as interactive enhanced line charts <ref type="bibr" target="#b5">[6]</ref> making comparisons of 3D members possible. Similarly, a nonlinear compression method is available for the linearized 3D ensemble calculated using Peano-Hilbert curves <ref type="bibr" target="#b27">[28]</ref>. Hilbert attention maps <ref type="bibr" target="#b15">[16]</ref> use Peano-Hilbert curves to visualize timevarying eye-tracking data sampled on 2D regular grids as a static image, allowing features of interest that span a small neighborhood to be traced easily in the attention maps. For all methods above, brushingand-linking is used as the major exploration approach that relates the 1D linearization and the original data. Since our technique improves space-filling curves implementations for visualization, all of these visualization applications could potentially benefit from our method.</p><p>Hamiltonian paths and cycles form the computational basis of our method. A Hamiltonian path/cycle is a path/cycle that visits each node in a graph exactly once, and a Hamiltonian cycle can be easily converted to a Hamiltonian path by a single cut on the cycle. The computation of the general Hamiltonian path problem is NP-hard <ref type="bibr" target="#b0">[1]</ref>. For restricted scenarios, however, more efficient solutions are possible. <ref type="bibr" target="#b0">1</ref> https://github.com/zhou-l/DataDrivenSpaceFillCurve.git</p><p>The existence/nonexistence of a Hamiltonian path is proven for 2D grid graphs <ref type="bibr" target="#b10">[11]</ref>; for 3D graphs of even-numbered nodes along each dimension, a Hamiltonian path can be generated from a Hamiltonian cycle <ref type="bibr" target="#b1">[2]</ref>. However, these methods require specified entry and exit nodes, which is infeasible for data-driven space-filling curves for multiscale data. This is because if a path leaves a block of finer nodes and enters to a block of coarser nodes, we only know the exiting face of the block of finer nodes and the entering face of the block of coarser nodes. We propose a more flexible Hamiltonian path generation method-for both 2D and 3D regular grids, given only edges/faces of entry and exit of a bounding rectangle/box-as a building block for our method.</p><p>Ensemble visualization, an active and challenging visualization topic <ref type="bibr" target="#b17">[18]</ref>, is one of the target applications of our technique. Besides the aforementioned methods using space-filling curves <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b27">28]</ref>, there are alternative techniques that use depth-based statistics <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b28">29]</ref>, scatterplots and parallel coordinates <ref type="bibr" target="#b22">[23]</ref>, trend graphs and parallel coordinates <ref type="bibr" target="#b16">[17]</ref>, and a flexible linked-view system with a configurable collection of statistical representations <ref type="bibr" target="#b19">[20]</ref>. Depth-based statistics is a fundamental building block for ensemble visualization. The computation and visualization of depth-based statistics is available for 1D functions <ref type="bibr" target="#b26">[27]</ref>, 2D surfaces <ref type="bibr" target="#b8">[9]</ref>, 2D contours <ref type="bibr" target="#b28">[29]</ref>, 3D contours <ref type="bibr" target="#b20">[21]</ref>, and 2D and 3D curves <ref type="bibr" target="#b13">[14]</ref>. In our paper, we employ a 3D extension of the surface boxplot <ref type="bibr" target="#b8">[9]</ref> together with our data-driven curves to visualize ensemble datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PROBLEM FORMULATION</head><p>To support regular grids data and multiscale data with a unified representation, we model the input data in 2D and 3D as a graph:</p><formula xml:id="formula_0">G = (V, E, L) ,</formula><p>where vertices V are nodes/vertices of the grid, edges E connect neighboring vertices (typically 4-neighbor and 6-neighbor for 2D and 3D data, respectively), and L is the level of the scale of the vertex. Our formulation facilitates a flexible multiscale representation with the per-vertex scale L, as shown in <ref type="figure">Fig. 2</ref>.</p><formula xml:id="formula_1">V G E V G L = 3 L = 2 L = 1 E quadtree Pmin Fig. 2. A 2D multiscale graph G = (V, E, L)</formula><p>on a quadtree with a Hamiltonian path P min .</p><p>Regular grids are a special case of G where the level is constant (L = 1) for all vertices and the graph becomes a grid graph <ref type="figure" target="#fig_0">(Fig. 3)</ref>. Typical space-filling curves <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b23">24]</ref> focus on the geometry of the curves, i.e., the geometry of V and E, which concerns only the preservation of locality but not data features as the curves are ignorant of the underlying data s(V ). Our goal is to generate space-filling curves that preserve both locality and data features. This requires the scan order to be updated according to the data. We focus on data-driven space-filling curves that traverse through connected nodes within the graph G. Counterexamples (curves that jump between unconnected nodes) are known to have poor locality coherency, e.g., the scanline and the Peano-Morton curve. In our case, the space-filling curve problem is equivalent to a Hamiltonian path problem <ref type="bibr" target="#b10">[11]</ref> with coherency preservation, which allows us to formulate the generation of data-driven space-filling curves as an optimization problem of Hamiltonian paths with an objective function that takes measures of both locality preservation and datafeature preservation into account. Finding the minimum total weight of all possible Hamiltonian paths is hard on regular grids <ref type="bibr" target="#b4">[5]</ref> and also on multiscale grids. We denote a Hamiltonian path P through all vertices V as a sequence:</p><formula xml:id="formula_2">G Grid graph G c Circuit graph u2 u1 c a b w1 Ci Cj L = 1 V E C</formula><formula xml:id="formula_3">P = (v 1 , v 2 ,...,v n ) ,</formula><formula xml:id="formula_4">where v i ∈ V is adjacent to v i+1 for 1 ≤ i &lt; n.</formula><p>We aim to find a path P min that minimizes an objective function f (P):</p><formula xml:id="formula_5">P min = arg min P f (P) .</formula><p>The objective function is formulated to be the sum of weights W that is comprised of a feature preservation term N that concerns data values s(v) of vertex v, and a locality preservation term R:</p><formula xml:id="formula_6">f (P) = n−1 ∑ i=1 W (v i , v i+1 ) ,<label>(1)</label></formula><formula xml:id="formula_7">W (v i , v i+1 ) = (1 − α)N(s(v i ), s(v i+1 )) + αR(v i , v i+1 ) ,</formula><p>where α ∈ [0, 1] is a user-set blend factor. Our locality preservation term is a simplified, first-order locality measure. The true locality measure of space-filling curves is multiscale, and, therefore, much more complicated. However, our simplified model still yields better positional coherency compared to the scanline and the context-based method, as shown in Section 6. Solving the minimization problem is infeasible except for extremely small datasets, and, therefore, we find an approximate optimum of the objective function. For regular grids, the optimum of f (P) is approximated by adopting the strategy used by the context-based method <ref type="bibr" target="#b4">[5]</ref> but with our new objective function and an extension to 3D. Steps involved in the framework of regular grids are illustrated in <ref type="figure" target="#fig_6">Fig. 4</ref>.</p><p>In Section 4, we briefly review the setup of the framework of the regular grid and elaborate on our new objective function and its impact. The rationale and details of this framework can be found elsewhere <ref type="bibr" target="#b4">[5]</ref>. For multiscale data, we propose approximately minimizing the objective function f (P) using a top-down and recursive greedy algorithm, which is explained in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SPACE-FILLING CURVE GENERATION FOR REGULAR GRIDS</head><p>The steps for computing data-driven space-filling curves on regular grids are described in Algorithm 1. Our new contributions are a new objective function as explained in Section 4.1 and the extension to 3D detailed in Section 4.2.</p><p>We briefly review the computational framework <ref type="bibr" target="#b4">[5]</ref> using a 2D example as illustrated in <ref type="figure" target="#fig_6">Fig. 4</ref>. For a regular grid G with an even number of vertices in each dimension, we first convert it to a graph G c of small circuits C <ref type="figure" target="#fig_0">(Fig. 3)</ref>, and then compute the dual graph G c (refer to the redefinition in the context-based method <ref type="bibr" target="#b4">[5]</ref>) of G c <ref type="figure" target="#fig_6">(Fig. 4 (a)</ref>). With the dual graph of small circuits, we are able to find P min by constructing the minimum spanning tree of G c . The width and height of G c are w d and h d respectively; each node of G c corresponds to a circuit C k for k ∈ {1,...,w d × h d } of 2×2 vertices. The task of evaluating the weight between any vertex v j adjacent to vertex v i in P is now transformed to evaluating the weight on circuits W (C i ,C j ), where C i and C j are adjacent, and the dual of C i is already in the minimum spanning tree ( <ref type="figure" target="#fig_0">Fig. 3 (right)</ref>). A minimum spanning tree is the tree that minimizes the sum of weights among all possible trees <ref type="bibr" target="#b24">[25]</ref>, i.e., it guarantees to find W (C i ,C i+1 ) as the minimum among all W (C i ,C j ) in each step. The minimum spanning tree is built by joining edges of G c using Prim's algorithm ( <ref type="figure" target="#fig_6">Fig. 4 (b)</ref>). Next, the minimum spanning tree is converted to a Hamiltonian cycle by merging the circuits according to the minimum spanning tree with the cover-and-merge strategy <ref type="bibr" target="#b12">[13]</ref> ( <ref type="figure" target="#fig_6">Fig. 4 (c)</ref>). Finally, a Hamiltonian path P min is created by making a single cut anywhere in the Hamiltonian cycle <ref type="bibr" target="#b4">[5]</ref>  <ref type="figure" target="#fig_6">(Fig. 4 (d)</ref> </p><formula xml:id="formula_8">G c ← buildSmallCircsDualGraph(G) G-2D/3D grid graph, G c -dual graph of small circuits graph of G 3: W ← calculateDualGraphWeights(G c ) W -weights on G c 4: MST ← findMinSpanTree(G c ,W )</formula><p>MST-minimum spanning tree <ref type="bibr" target="#b4">5</ref>:</p><formula xml:id="formula_9">P min ← mergeHamCycleAndCut(MST, v s ) v s -entry vertex, P min -data-driven SFC 6:</formula><p>return P min</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Objective Function</head><p>In our new objective function, the definition of weights of circuits on regular grids by adding the circuit C j to the minimum spanning tree reads:</p><formula xml:id="formula_10">W (C i ,C j ) = (1 − α)N(C i ,C j ) + αR(C i ,C j ) , α ∈ [0, 1] , (2)</formula><p>where C i and C j are adjacent circuits, and the dual of C i is already in the minimum spanning tree.</p><p>For value coherency, we reuse the definition of value weights of circuits of the context-based method <ref type="bibr" target="#b4">[5]</ref>. The value weight that grows</p><formula xml:id="formula_11">S Cj S Ci Cj Ci Fig. 5</formula><p>. G c is partitioned (the blue dash-dot line) into blocks denoted by their centers (e.g., S C i and S C j ) to accommodate the new positional term of the objective function. <ref type="figure">Fig. 6</ref>. Comparison of linearization methods applied to a slice of the nucleon dataset (a). Our new data-driven space-filling curve is compared to previous methods: the context-based space-filling curve, the Peano-Hilbert curve, and scanline ordering. The spatial layout of the respective curves is shown in (b), and the linearization of the data values in (c). The spatial layout (b) is colored by the traversal order of curves (the horizontal axis of (c)) with the parula colormap (right of (b) Ours). Autocorrelations of value (d) and radial distance (e) quantify data coherency and locality preservation, respectively. The plots show that our approach provides the best compromise between the two conflicting goals. Note that the autocorrelations of data values of our method and the context-based method are largely overlapping. the minimum spanning tree with C j reads:</p><formula xml:id="formula_12">N(C i ,C j ) = |u 1 | + |u 2 | + |w 1 | + |w 2 | + |c| − |b| − |a| ,<label>(3)</label></formula><p>where u 1 , u 2 , w 1 , and w 2 belong to edges along the growing direction of the minimum spanning tree, whereas a, b, and c belong to faces across the growing direction. All values above are differences of data values s(v) of vertices along corresponding edges in the grid graph as defined in <ref type="figure" target="#fig_0">Fig. 3</ref> (right).</p><p>To measure the positional coherency, we first partition the dual graph into blocks with width w b and height h b , and denote the block center of circuit C k as S Ck , as shown in <ref type="figure">Fig. 5</ref>. Then, we derive our positional coherency term that measures the distance of the 2D position of the circuit to the block center. The positional term is defined as follows:</p><formula xml:id="formula_13">R(C i ,C j ) = R pos (C j ) = ||(C j .x,C j .y) − (S Cj .x, S Cj .y)|| ,<label>(4)</label></formula><p>where R pos (C j ) measures the positional difference as the spatial distance between C j and the center of the block S Cj . Since an edge weight is required for finding the minimum spanning tree, we assign R pos (C j ) to the edge C i -C j in the dual graph to facilitate a unified weight definition with the value term. A comparison of our data-driven curve for 2D regular grids and other linearization techniques is shown in <ref type="figure">Fig. 6</ref>. It can be seen that our method ( <ref type="figure">Fig. 6</ref> (Ours)) yields coherent results and correctly reveals the two peaks as coherent and neighboring features. The context-based space-filling curve <ref type="figure">(Fig. 6 (Context-based)</ref>) also reveals such structures but its spatial layout is not localized <ref type="figure">(Fig. 6 (b, Context-based)</ref>), which is confirmed by a similar autocorrelation of value ( <ref type="figure">Fig. 6(d)</ref>) and a inferior autocorrelation of radial distance ( <ref type="figure">Fig. 6</ref>(e)) compared to our new method). This indicates that our new method yields more coherent results than the context-based method. The scanline order <ref type="figure">(Fig. 6 (Scanline)</ref>) generates a cluttered line chart that goes up and down and it is not possible to see the data content; the Peano-Hilbert curve ( <ref type="figure">Fig. 6</ref> (Peano-Hilbert)) fails to show the two bright regions as neighboring features, and the concentrated overall structure is shown along the whole span of the line chart.</p><p>In our method, the blend factor α allows the user to flexibly change the importance of value coherency and positional coherency, which is not possible in the context-based space-filling curve <ref type="bibr" target="#b4">[5]</ref>. <ref type="figure" target="#fig_1">Fig. 7</ref> shows the effect of α on the traversal order of an image. The impact of α on value coherency and positional coherency is data-dependent and nonlinear. We empirically used an α value of 0.1 (except for <ref type="figure">Fig. 16</ref>, where α = 0) as tests on datasets for evaluation (Section 6) show that such a value yields a good balance between the positional coherency and data-value coherency. We recommended using α = 0.1 as a default. Fine-tuning using trial-and-error may be required for a specific dataset to achieve desired properties.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">3D Volumes</head><p>Because a data-driven or context-based space-filling curve technique for 3D data on regular grids is useful for visualization applications <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b27">28]</ref>, we extend our data-driven space-filling curve to 3D regular grids. <ref type="figure">Fig. 8</ref> shows a comparison of linearizations of a synthetic volume data-a sphere with increasing data value from exterior to interior ( <ref type="figure">Fig. 8 (d)</ref>)using our data-driven method, the Peano-Hilbert curve, and scanline ordering. It can be seen that our method ( <ref type="figure">Fig. 8 (a)</ref>) best preserves the value signature of the sphere as a concentrated continuous single peak with least noise, which is not possible with the Peano-Hilbert curve ( <ref type="figure">Fig. 8 (b)</ref>) or the scanline <ref type="figure">(Fig. 8 (c)</ref>), the sphere is split into many pieces make the feature unidentifiable. We extend the computational framework of the aforementioned 2D method (Algorithm 1) to 3D. Here, G c -the equivalent to the circuit graph in 2D-is now comprised of small unit cubes-of 2×2×2 voxels-instead of circuits. The weights in the objective function have the same form as of Equation 2, but the two coherency terms are modified accordingly for 3D:</p><formula xml:id="formula_14">N(C i ,C j ) = 4 ∑ r=1 (|u r | + |w r | + |c r | − |b r | − |a r |) , R(C i ,C j ) = R pos (C j ) , R pos (C j ) = ||(C j .x,C j .y,C j .z) − (S Cj .x, S Cj .y, S Cj .z)|| .<label>(5)</label></formula><p>As an analogy to the 2D case, u r and w r are edges along the growing direction, while a r , b r , and c r are faces across the growing direction. The value weights of cubes on 3D regular grids are illustrated in <ref type="figure">Fig. 9 (a)</ref>. Instead of four neighbors (top, down, left, right) in the 2D case, six neighbors (with front and back as additional neighbors) are used in the 3D case when building the minimum spanning tree. The fact that a 3D unit cube is no longer directly a cycle as in the 2D case makes the conversion from the minimum spanning tree to a Hamiltonian cycle more complicated. There exist six possible cycle configurations in a unit cube as shown in <ref type="figure">Fig. 9 (b)</ref>.</p><p>After building the minimum spanning tree, we grow the Hamiltonian cycle by traversing the tree and associating unit cycles with a random configuration (from the six configurations) with association rules <ref type="bibr" target="#b1">[2]</ref>. Two association rules for two neighboring unit cycles are adopted <ref type="figure">(Fig. 9 (c)</ref>): if parallel neighboring edges exist, we break the parallel edges and associate the four endpoints; if parallel edges do not exist, we need to break the neighboring edges and associate all eight endpoints.</p><p>Our data-driven technique could be extended for n data attributes, where multidimensional data values live in regular grids in a 2D or 3D spatial domain. The vertices in the graph now have vector-based data values, and the weights of the objective function can be defined as certain metrics of the vectors, e.g., L2-norm. Our current visualization is based on the linearization of one data attribute for multidimensional data, and one member (typically, the median) for ensemble datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">MULTISCALE DATA-DRIVEN SPACE-FILLING CURVES</head><p>Our data-driven curve for a multiscale data is equivalent to finding a minimum Hamiltonian path that traverses every leaf node in a quadtree or octree T . However, the aforementioned regular grid strategy is not applicable to build a dual graph for multiscale graphs because they often do not contain even-numbered vertices along each dimension <ref type="figure" target="#fig_4">(Fig. 10 (a)</ref>), and, therefore, a Hamiltonian cycle does not exist. As a result, we resort to an approximation strategy to the minimum Hamiltonian path on multiscale grids with top-down adaptive refinement. return P min The process of our mutliscale data-driven space-filling curve method is summarized in Algorithm 2. Given a multiscale dataset on a quadtree <ref type="figure" target="#fig_4">(Fig. 10 (a)</ref>  <ref type="figure" target="#fig_4">(Fig. 10 (b)</ref>). Based on the number of nodes in the coarsest pyramid level, the path is calculated using either the regulargrid-based data-driven curve method as described in Section 4 or the general Hamiltonian path method as discussed in Section 5.1. Then, we adaptively refine each element of the top-level curve P top (i.e., a multiscale node in the corresponding quadtree/octree)-at each level, a minimum Hamiltonian path is found with our flexible Hamiltonian path method that improves the Hamiltonian path method on grid graphs <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b14">15]</ref>  <ref type="figure" target="#fig_4">(Fig. 10 (c)</ref>). Finally, the linearization is achieved: both the data value and the scale of the vertex are recorded ( <ref type="figure" target="#fig_4">Fig. 10 (d)</ref>).</p><p>The objective function is approximately minimized during the process. The data value coherency term is minimized approximately with the flexible Hamiltonian path generation for each level in a block, and by finding the best entry node during adaptive refinement; the locality term is implicitly minimized by the hierarchical block-by-block advancing of the curve similar to the Peano-Hilbert curve.</p><p>In the rest of this section, we explain the flexible Hamiltonian path generation method, and then, the adaptive refinement process; finally, we discuss scenarios when the multiscale technique or the regular grids technique should be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Flexible Hamiltonian Path for 2D and 3D Grid Graphs</head><p>Typical Hamiltonian path methods solve the problem, i.e., <ref type="figure">(G, v s , v t )</ref>, on a regular grid G with distinct, explicitly given entry and exit vertices v s and v t . However, this is not appropriate for our method as the adjacent vertices are of different scales. For example, as shown in <ref type="figure" target="#fig_4">Fig. 10</ref>, the exit vertex of the top-level block 3 <ref type="figure" target="#fig_4">(Fig. 10 (b)</ref>) cannot be known beforehand, but only the exit face of the block is known given the top-level space-filling curve. Therefore, in our formulation, we rewrite the Hamiltonian path problem as where F t is the exit side/face of the bounding rectangle/box of G. The task is then to calculate the minimum path from v s to a valid vertex on F t . We have to compute the minimum path among all possible paths from entry point v s to all valid vertices on F t . Here, the objective function f (P) is simplified to describe only the data value coherency of the sequence, and it is defined as the sum of gradient magnitude of data values s(V ) along the path:</p><formula xml:id="formula_15">(G, v s , F t ) ,<label>(6)</label></formula><formula xml:id="formula_16">f (P) = n−1 ∑ i=1 ||s(v i+1 ) − s(v i )|| .<label>(7)</label></formula><p>Therefore, a smoothly changing path is encouraged and a path that fluctuates significantly is punished. We can find (or show the nonexistence of) a Hamiltonian path through given entry and exit vertices for small grids directly by using exhaustive search. A larger graph has to be partitioned into smaller ones: in practice, the largest graph that can be solved directly is 8 × 4 for 2D or 4 × 4 × 2 for 3D on our test machines. The limitation of the partitioning is that it may break coherent features in space, e.g., in <ref type="figure">Fig. 12</ref>, single disks/spheres are occasionally broken into different blocks and become less coherent compared to being in the same block. Therefore, we suggest as few partitions as possible if it is supported by the hardware and computational time allows. The partition is based on the relationship between the entry face and exit face of the bounding box/rectangle of the graph.</p><p>Examples of our flexible Hamiltonian path technique are shown in <ref type="figure" target="#fig_5">Fig. 11</ref>: a horizontal partitioning and a vertical partitioning of 2D graphs are shown in <ref type="figure" target="#fig_5">Fig. 11 (a)</ref> and (b), respectively; exit faces F t on the left and top for 3D graphs are shown in (c) and (d). Since the flexible Hamiltonian path method is the building block of our multiscale space-filling curve techniques, exhaustive search is implemented in an non-recursive fashion using stacks to improve efficiency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Adaptive Refinement</head><p>The refinement method refine-as described in Algorithm 3-is the core of the space-filling curve for multiscale data. If any of the nodes within the block is not a leaf node, it has to be refined all the way down to the finest level in a data-driven fashion. The key is to determine the suitable entry node for blocks at different levels (the findBestEntry function in Algorithm 3): we keep track of the last vertex v last in the Hamiltonian path and utilize it to find the matching entry node in the next block, i.e., the node within the adjacent block to v last that has the minimum difference to its data value. The combination of this process and the Hamiltonian path generation function linearizeHamPath (Section 5.1) approximates the minimization. <ref type="figure">Fig. 12</ref> (Quadtree) shows the linearization with our data-driven technique for quadtree on a synthetic image <ref type="figure">(Fig. 12</ref> (Quadtree, first column)). The resulting multiscale linearizations and their reconstructed linearizations are shown in the second column of <ref type="figure">Fig. 12 (row 1)</ref>. Here, "reconstructed" refers to generating the linearization back to the regular grid using the visit order of the coordinates of multiscale nodes and their scale information. It can be seen that our technique preserves the value signatures of five disks-each as a peak-which is more prominent in the reconstructed space-filling curve. <ref type="figure">Fig. 12 (row 1,  third column)</ref> shows the geometry of the space-filling curve over the quadtree color mapped by the traversal order (from blue to yellow). An octree data of five spheres is shown in <ref type="figure">Fig. 12 (Octree)</ref>: the linearization using our technique <ref type="figure">Fig. 12 (Octree, second column, top)</ref> preserves the value pattern of five spheres, more evident in the reconstructed version <ref type="figure">Fig. 12 (Octree, second column, bottom)</ref>. The spatial configuration of the space-filling curve is shown in <ref type="figure">Fig. 12 (Octree, third column)</ref>, with the color map showing the scan order.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EVALUATION</head><p>Our method is evaluated by numerical comparison of autocorrelations of our techniques (α = 0.1 for regular grid techniques) to existing linearization methods. Autocorrelation is the correlation of a signal and a shifted copy of the signal; the measurement indicates the coherency of a signal, and is suitable for measuring the effectiveness of space-filling curves <ref type="bibr" target="#b4">[5]</ref>. In our evaluation, autocorrelations of two measures are calculated: 1) autocorrelation of linearized data values u(i) that measure the data coherency of space-filling curves; 2) autocorrelation of radial Euclidean distances of elements in the linearization t(i) that measures the spatial coherency, i.e., locality, of the curves. The definitions of the <ref type="figure">Fig. 12</ref>. Data-driven space-filling curves for quadtree and octree. The input data are shown in the first column, the linearizations in the second column, and the spatial configurations of the space-filling curves in the third column.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 3 Refinement of a Multiscale Block</head><p>1:</p><formula xml:id="formula_17">procedure REFINE({I 1 , I 2 , ••• , I Lc }, T , block, v last ) 2: v s ← findBestEntry(v last )</formula><p>finds the best entry vertex v s (data-driven) <ref type="bibr" target="#b2">3</ref>:</p><p>if needRefine(block) then </p><formula xml:id="formula_18">P currTop ← linearizeHamPath(I block , T , v s )</formula><p>finds the top-level SFC P currTop of the current data block I block (data-driven) <ref type="bibr" target="#b5">6</ref>:</p><formula xml:id="formula_19">for i in range(1, length(P currTop )) do 7: ctopBlock ← T(P currTop [i])</formula><p>ctopBlock: top-level sub-block within the current block </p><formula xml:id="formula_20">if i ≥ 2 then 10: v last ← P currTop [i − 1]</formula><p>11: </p><formula xml:id="formula_21">P finer ← refine({I 1 , I 2 , ••• , I Lc }, T , ctopBlock, v</formula><formula xml:id="formula_22">P curr ← linearizeHamPath(I block , block, v s ) data-driven 17:</formula><p>return P curr two measures are shown as follows:</p><formula xml:id="formula_23">u(i) = s(P(i)) , t(i) = ||[P(i).x, P(i).y, P(i).z] − [0, 0, 0]|| .</formula><p>Note that the distance measure t(i) is applicable only to regular grids and P(i).z = 0 for 2D cases. We use benchmark datasets commonly employed in scientific visualization and average the autocorrelations of each dataset for each linearization technique. Specifically, 11 datasets-typically, slices of volume data (one slice each of downsampled volume datasets of aneurysm, beetle, bonsai, MRI brain, engine, foot, fuel, hurricane Isabel, neghip, and nucleon-all from a public volume data library 2 ; and an image of 5 randomly placed disks)-are used in the evaluation of 2D methods, and 5 volumetric datasets (fuel, neghip, nucleon, heart ischemia, and a procedural volume generated with a tangle function; all downsampled to 32 3 ) are used for 3D. Autocorrelations are shown in <ref type="figure" target="#fig_0">Fig. 13</ref>, where the horizontal axis is the lag (shift) of the signal, and the vertical axis is the value of normalized autocorrelation. Averaged autocorrelations of data values in 2D ( <ref type="figure" target="#fig_0">Fig. 13 (a)</ref>) indicate that our regular grid method (green) has almost the same feature coherency as the context-based curve (purple) as they are overlapping, and both perform much better than the Peno-Hilbert curve (blue) and the scanline (red); our data-driven method for quadtree (black) performs better than the Peano-Hilbert curve and scanline. In terms of averaged autocorrelations of radial distance <ref type="figure" target="#fig_0">(Fig. 13 (b)</ref>), the Peano-Hilbert curve (blue) performs best and is followed by our data-driven method (green), and then the context-based method (purple); the scanline method (red) has much worse performances than other techniques.</p><p>For 3D data, the evaluation compares our regular grid-based datadriven technique, our multiscale technique for octree, the Peano-Hilbert curve, and the scanline. As shown in <ref type="figure" target="#fig_0">Fig. 13 (c)</ref>, our regular-grid method (green) tops other techniques for averaged autocorrelation of data value, and our octree technique (black) follows, and then, the Peano-Hilbert curve (blue), and the scanline (red). For autocorrelations of radial distance ( <ref type="figure" target="#fig_0">Fig. 13 (d)</ref>), our regular grid method is better than the scanline but out-performed by the Peano-Hilbert curve.</p><p>The evaluation confirms that our data-driven technique balances the data value coherency and locality coherency, and is more flexible than existing techniques. The comparisons also suggest that our regular grid techniques have better data value coherency performance than our multiscale techniques-the former is preferred when high-quality linearization is needed for volumetric data and computational time is not a limiting factor.</p><p>Our multiscale techniques are most suitable for multiscale data by nature, e.g., multiscale simulation of particles. An octree can be built to have a few (even just one) particles in the finest level node so that accurate data values of almost all particles could be preserved. However, for regular grids, this is more difficult if not impossible. Either more particles are averaged out or a very fine grid has to be built. In addition, multiscale techniques are faster than regular grid techniques as fewer nodes have to be visited in multiscale structures compared to regular grids for the same input data.</p><p>In contrast, our regular grid techniques yield more coherent linearization results than our multiscale curves. This is due to that the multiscale curve uses the top-down approach to ensure a Hamiltonian path exists, but it breaks coherent features in space on certain occasions as demonstrated in <ref type="figure">Fig. 12</ref> (Octree). The aforementioned numerical comparison of coherency confirms that the regular grid techniques have higher coherency than multiscale techniques.</p><p>Therefore, we recommend using the multiscale technique for intrinsically multiscale data, especially, point datasets, and for reducing computation time. The regular grids techniques are recommended for higher linearization quality for images and volumetric data on uniform grids. Furthermore, preprocessing the input data with a segmentation could improve the coherency, and, potentially, the efficiency of our method (for regular grids, fewer comparisons are needed when neighbors are homogeneous).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">VISUALIZATION, USER INTERACTION, AND IMPLEMENTA-TION</head><p>Our method facilitates visualizations that use the horizontal axis for any spatial configuration along the space-filling curve, freeing the vertical space to visualize values aligned within the spatial configuration. For multivariate data, each variable can be visualized as a line plot <ref type="figure" target="#fig_6">(Fig. 14)</ref>, whereas for ensemble data, functional boxplots are used <ref type="figure">(Fig. 1,15,16)</ref>. Here, we employ the surface boxplot <ref type="bibr" target="#b8">[9]</ref> for 2D ensemble datasets; an extension of the method <ref type="bibr" target="#b8">[9]</ref> to 3D is applied to 3D ensemble datasets. The conventional color scheme used for boxplots is adopted.</p><p>We have built an interactive visualization tool to support the exploration of space-filling curve-based visualization of datasets. The tool comprises three linked views: a line plot view that shows the linearized data; a 3D renderer that renders volumetric data with direct volume rendering, and particle datasets with polygon-based rendering; a 2D renderer that shows the data slice. The line plot view is linked with 2D and 3D renderers using the scan order of the space-filling curve that records the pixel ID of the line plot and its associated pixels/voxels in the original data. Brushing-and-linking allows us to brush regions in the line plot view, highlighting them in the 2D and 3D renderings. Interactive zooming and panning are supported in the line plot view so that both the overall structure and details of the line visualizations can be examined.</p><p>Our space-filling curve techniques were implemented using Matlab. The visualization tool is built using C++, Qt, and OpenGL, and is accelerated by the GPU. The QCustomPlot library <ref type="bibr" target="#b6">[7]</ref> was used to aid the implementation of the line plot view. Our method was tested on a 2019 13-inch Macbook Pro with 2.3 GHz Intel i5 CPU, 8 GB main memory, and an Intel Iris 655 integrated GPU. The data-driven spacefilling curve only needs to be computed once for a given dataset, and the computation time depends on the number of vertices in the graph representation of the dataset. Timings of generating data-driven spacefilling curves for examples of the paper are summarized in <ref type="table" target="#tab_5">Table 1</ref>. Full interactivity was achieved for the exploration of all examples. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">EXAMPLES</head><p>We demonstrate the usefulness of our method with examples of multiscale multivariate particle data, ensemble of medical images on 2D regular grids, and volumetric ensemble datasets on regular grids. Visualizations of ensemble datasets are based on linearizations of the median members. The smooth particle hydrodynamics (SPH) dataset shown in <ref type="figure" target="#fig_6">Fig. 14</ref> is a timestep in a dam break simulation <ref type="bibr" target="#b21">[22]</ref>; the dataset contains particles with six attributes: density, pressure, speed, and velocity in X, Y , and Z directions, respectively. The data is decomposed into an octree and linearized using our octree-based data-driven curves. Data values of all attributes are linearized with the spatial layout of the space-filling curve of the pressure attribute. We highlight regions that are distinct from their neighborhood in the linearizations: low values of density, high values of pressure, and high values of speed and velocity. Here, the most prominent feature is the highest pressure region (brushed in purple) with values over 50,000 as shown in the zoom-in. The particles within the brushed regions can be seen in the 3D rendering ( <ref type="figure" target="#fig_6">Fig. 14 (a)</ref>). Our method yields a new visual debugging method that shows clear, non-occluded quantities of each attribute embedded in a spatial context. It could complement non-spatial multivariate plots <ref type="bibr" target="#b21">[22]</ref> for a more comprehensive visual debugging system. <ref type="figure">Fig. 15</ref> shows the visualization of a series of open-access MRI slices <ref type="bibr" target="#b11">[12]</ref>. The boxplot linearized with our method <ref type="figure">(Fig. 15 (b, center)</ref>) exhibits a more coherent feature that is more concentrated than in the Peano-Hilbert curve linearization <ref type="figure">(Fig. 15 (b, bottom)</ref>). As shown in the zoom-in of <ref type="figure">Fig. 15 (b, top)</ref>, the outlier (the red curve) has wider <ref type="figure">Fig. 15</ref>. Visualization of a brain atlas with our data-driven space-filling curve and a Peano-Hilbert curve (with images padded to size of 256 × 256 with zeros). The median image (bottom) and an outlier image (top) are shown in (a) with brushing-and-linking (purple box) on the space-filling curves (b, center). The 1D layout with the space-filling curve allows for easy interaction, including brushing and zooming on spatial details, and it supports rendering boxplots that separate the brain from its surrounding and show that the outlier has wider low-value regions than the band at the lateral ventricle (red curves in the gray boxes in the zoom-in). <ref type="figure">Fig. 16</ref>. Ensemble visualizations of a heart ischemia simulation. The median member is volume-rendered in (a)-with 1D functional boxplots linearized with (b) our data-driven space-filling curve (top) and a Peano-Hilbert curve (bottom). The ischemic region that has potential value greater than 3 eV is selected in the boxplots and highlighted in (c).</p><p>low-value regions (inside the gray boxes) than the band as shown in the zoom-in. With brushing-and-linking, it is confirmed that the outlier image ( <ref type="figure">Fig. 15 (a, top)</ref>) has larger lateral ventricle area than the median image ( <ref type="figure">Fig. 15 (a, bottom)</ref>) with the brush on the boxplot linearized with our data-driven space-filling curve.</p><p>The myocardial ischemia dataset was generated by image-based, experimentally derived cardiac electrical potential simulation <ref type="bibr" target="#b2">[3]</ref>. We use a subset of ensemble runs of the simulation and sample the data on regular grids for our experiment. Here, we are interested in the acute ischemic regions associated with mean potentials greater or equal to 3 eV. As shown in <ref type="figure">Fig. 16 (b, top)</ref>, the linearized 3D boxplot using data-driven technique yields more concentrated global features than the linearization with the Peano-Hilbert curve <ref type="figure">(Fig. 16 (b, bottom)</ref>). The region of interest (high potential regions) is bounded in a small neighborhood with our method that could be selected with one brush <ref type="figure">(Fig. 16 (b, top)</ref>), whereas the Peano-Hilbert curve yields a more scattered result-a large number of brushes are required ( <ref type="figure">Fig. 16 (b,  bottom)</ref>). The volume rendering ( <ref type="figure">Fig. 16(a)</ref>) of the median ensemble member shows that the region of interest is spatially continuous (white in the rendering); the highlighted regions in space <ref type="figure">(Fig. 16 (c)</ref>) verify that our method gives good coherency of the feature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION AND FUTURE WORK</head><p>We have introduced data-driven space-filling curves for 2D and 3D visualization. We have designed our methods to preserve coherency of both data value and locality after the mapping from the spatial domain to 1D. The methods are applicable for data on regular grids and in multiscale. We have modeled the problem as finding a Hamiltonian path that approximates the minimum of an objective function that blends a data value term and a locality term. Two variants of techniques are available for regular grids and multiscale data (quadtrees and octrees). The effectiveness of our method has been evaluated by comparing to existing methods on various datasets with qualitative visual comparison and quantitative comparisons of autocorrelations. We have confirmed that existing methods cannot preserve both data features and locality after linearization. Through multivariate and ensemble visualization examples with a wide range of real-world datasets, we have demonstrated the usefulness of our data-driven space-filling curves.</p><p>In the future, we would like to extend our method for time-varying data to understand the coherency in time. The positional term for regular grids requires uniform blocks of a user-defined size, which should be improved to be data-driven. The method could be used for multi-field visualization such that different field data, e.g., scalar, vector, and tensor, could be visualized in a linear layout for non-occluded comparisons and investigation of correlations. Finally, we would also like to accelerate our method with parallel computing to support larger datasets.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 3 .</head><label>3</label><figDesc>(Left) A 2D graph on a regular grid G = (V, E, 1) with corresponding data values (black = 0, red = 1), and its associated circuit graph G c (right) of circuits C. Adjacent circuits of C i are drawn in light blue. The edge weights of data values between circuits C i and C j are shown on the right.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 7 .</head><label>7</label><figDesc>The effect of different α (left-right: 0, 0.01, 0.03, 0.1, 0.3, and 1.0) on the scan order of our space-filling curves for the nucleon slice data (left). The order is color-coded using the same color map as inFig. 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 8 .Fig. 9 .</head><label>89</label><figDesc>Linearizations (top) of a synthetic volume data of a sphere (left) with our data-driven curve, the Peano-Hilbert curve, and scanline ordering. The scan orders of curves are shown in the bottom row. The value weights of cubes on 3D regular grids (a). The cubes need to be converted into cycles during merging. There exist (b) six cycle configurations of a unit cube, and the cycles are merged with (c) two association rules.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>) or octree whose nodes are of levels 1 ≤ L ≤ L c , where 1 is for the finest level and L c is for the coarsest level, we prepare an image/volume pyramid of L c levels {I 1 , I 2 , ••• , I Lc } for subsequent computations. First, the top-level space-filling curve P top of the coarsest level I Lc is found</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 10 .</head><label>10</label><figDesc>Steps to compute a data-driven space-filling curve for multiscale data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 11 .</head><label>11</label><figDesc>Flexible Hamiltonian paths for 2D and 3D grid graphs. Exit sides are on the (a) right and (b) left for these examples of 2D graphs. The example 3D graph has exit faces on the (c) left and at the (d) top.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>4 :P</head><label>4</label><figDesc>curr ← [] P curr -SFC of the current multiscale block 5:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>2Fig. 13 .</head><label>13</label><figDesc>http://schorsch.efi.fh-nuernberg.de/data/volume/ Autocorrelations of data value (first column) and radial distance (second column) for our 2D techniques (first row) and our 3D techniques (second row). Note that larger autocorrelation means better coherency.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 14 .</head><label>14</label><figDesc>Visualization of an SPH simulation of dam break: (a) rendering of particles with brushed regions, (b) multivariate line charts generated using our octree-based data-driven space-filling curve.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>is considered to have • Liang Zhou is with National Institute of Health Data Science, Peking University. E-mail: zhoul@bjmu.edu.cn. This work was done while he was with SCI Institute, University of Utah. • Chris R. Johnson is with SCI Institute, University of Utah. E-mail: crj@sci.utah.edu. • Daniel Weiskopf is with Visualization Research Center (VISUS), University of Stuttgart. E-mail: weiskopf@visus.uni-stuttgart.de.</figDesc><table /><note>Manuscript received xx xxx. 201x; accepted xx xxx. 201x. Date of Publication xx xxx. 201x; date of current version xx xxx. 201x. For information on obtaining reprints of this article, please send e-mail to: reprints@ieee.org. Digital Object Identifier: xx.xxxx/TVCG.201x.xxxxxxx</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>).</figDesc><table><row><cell>Algorithm 1 Data-Driven SFC for Regular Grids</cell></row><row><cell>1: procedure DDSFCREGGRID(G)</cell></row><row><cell>2:</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>Pz ← refine({I 1 , I 2 , ••• , I Lc }, T , block, v last )Pz-SFC of the current block computed by adaptive refinement (data-driven)</figDesc><table><row><cell cols="3">Algorithm 2 Data-Driven SFC for Multiscale Data</cell></row><row><cell cols="3">1: procedure SFCMULTISCALE({I 1 , I 2 , ••• , I Lc }, T )</cell><cell>T: tree</cell></row><row><cell></cell><cell>structure (quadtree/octree)</cell><cell></cell></row><row><cell>2:</cell><cell cols="3">P top ← findTopLevelSFC(I Lc ) computes P top -the top level</cell></row><row><cell></cell><cell>SFC (data-driven)</cell><cell></cell></row><row><cell>3: 4:</cell><cell>P min ← [] v last ← 0</cell><cell cols="2">P min -SFC of the whole data v last -the last SFC node</cell></row><row><cell>5:</cell><cell>for i in range(1, length(P top )) do</cell><cell></cell></row><row><cell>6:</cell><cell cols="3">block ← T (P top [i])) retrieves the corresponding block of</cell></row><row><cell></cell><cell>the current SFC node from the tree</cell><cell></cell></row><row><cell>7:</cell><cell></cell><cell></cell></row></table><note>8: P min ← [P min , Pz] appends P min with Pz9: v last ← P min [last] records the last member of P min 10:</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 1 .</head><label>1</label><figDesc>Computation time of data driven space-filling curves on example datasets.</figDesc><table><row><cell>Dataset</cell><cell>Size</cell><cell>Time</cell></row><row><cell>Nucleon slice</cell><cell>64×64 pixels</cell><cell>12s</cell></row><row><cell>Nucleon</cell><cell>32×32×32 voxels</cell><cell>24s</cell></row><row><cell>Brain atlas</cell><cell>176×208 pixels</cell><cell>3m39s</cell></row><row><cell>SPH</cell><cell>4000 particles/11796 octree nodes</cell><cell>43s</cell></row><row><cell>Myocardial ischemia</cell><cell>128×128×128 voxels</cell><cell>4h31m</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work is supported in part by the Intel Graphics and Visualization Institutes of XeLLENCE, the National Institute of General Medical Sciences of the National Institutes of Health under grant numbers P41 GM103545 and R24 GM136986 and the Department of Energy under grant number DE-FE0031880, and by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) Project-ID 251654672 -TRR 161 (project B01). The GPU used for this research was donated by the Nvidia Corporation. The SPH dataset is provided by Stefan Reinhardt.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Graph Theory: An Introductory Course</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bollobas</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-1-4612-9967-7</idno>
		<imprint>
			<date type="published" when="1979" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">3D hardware canaries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Briais</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Caron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-M</forename><surname>Cioranesco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-L</forename><surname>Danger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guilley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-H</forename><surname>Jourdan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Milchior</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Naccache</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Porteboeuf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Cryptographic Hardware and Embedded Systems -CHES 2012</title>
		<editor>E. Prouff and P. Schaumont</editor>
		<meeting><address><addrLine>Berlin; Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A framework for image-based modeling of acute myocardial ischemia using intramurally recorded extracellular potentials</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Burton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Aras</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Good</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tate</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Zenger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Macleod</surname></persName>
		</author>
		<idno type="DOI">10.1007/s10439-018-2048-0</idno>
	</analytic>
	<monogr>
		<title level="j">Annals of Biomedical Engineering</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Dynamic octree load balancing using space-filling curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Campbell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">D</forename><surname>Devine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Flaherty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">G</forename><surname>Gervasio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Teresco</surname></persName>
		</author>
		<idno>CS-03-01</idno>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
		<respStmt>
			<orgName>Williams College Department of Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Context-based space filling curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Dafner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Or</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Matias</surname></persName>
		</author>
		<idno type="DOI">10.1111/1467-8659.00413</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="209" to="218" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Multi-charts for comparative 3D ensemble visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Demir</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Dick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2346448</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2694" to="2703" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Qt Plotting Widget QCustomPlot</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Eichhammer</surname></persName>
		</author>
		<ptr target="https://www.qcustomplot.com/index.php/introduction" />
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Gray codes for partial match and range queries</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<idno>doi: 10. 1109/32.6184</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="1381" to="1393" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Genton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Potter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Stenchikov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Surface boxplots. Statistical Journal</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Ueber die stetige Abbildung einer Line auf ein Flächenstück</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Hilbert</surname></persName>
		</author>
		<idno type="DOI">10.1007/BF01199431</idno>
	</analytic>
	<monogr>
		<title level="j">Mathematische Annalen</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="459" to="460" />
			<date type="published" when="1891" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Hamilton paths in grid graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Itai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Papadimitriou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Szwarcfiter</surname></persName>
		</author>
		<idno>doi: 10. 1137/0211056</idno>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Computing</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="676" to="686" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Open access series of imaging studies (OASIS): Crosssectional MRI data in young, middle aged, nondemented, and demented older adults</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Marcus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">G</forename><surname>Csernansky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Buckner</surname></persName>
		</author>
		<idno type="DOI">10.1162/jocn.2007.19.9.1498</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Cognitive Neuroscience</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1498" to="1507" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A video scrambling technique based on space filling curves (extended abstract)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Matias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
		<idno type="DOI">10.1007/3-540-48184-235</idno>
	</analytic>
	<monogr>
		<title level="m">Advances in Cryptology -CRYPTO &apos;87</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="page" from="398" to="417" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Curve boxplot: Generalization of boxplot for ensembles of curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mirzargar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Kirby</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2014.2346455</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2654" to="2663" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Hamiltonian paths through two-and three-dimensional grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">F</forename><surname>Mitchell</surname></persName>
		</author>
		<idno type="DOI">10.6028/jres.110.012</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Research of the National Institute of Standards and Technology</title>
		<imprint>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="127" to="136" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Hilbert attention maps for visualizing spatiotemporal gaze data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Netzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<idno type="DOI">10.1109/ETVIS.2016.7851160</idno>
	</analytic>
	<monogr>
		<title level="m">Second Workshop on Eye Tracking and Visualization (ETVIS)</title>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="21" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Visual trends analysis in timevarying ensembles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Obermaier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bensema</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2015.2507592</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="2331" to="2342" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Future challenges for ensemble visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Obermaier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<idno>doi: 10. 1109/MCG.2014.52</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="8" to="11" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Sur une courbe, qui remplit toute une aire plane</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Peano</surname></persName>
		</author>
		<idno type="DOI">10.1007/BF01199438</idno>
	</analytic>
	<monogr>
		<title level="j">Mathematische Annalen</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="157" to="160" />
			<date type="published" when="1890" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Ensemble-Vis: A framework for the statistical visualization of ensemble data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Potter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Williams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Doutriaux</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 IEEE International Conference on Data Mining Workshops</title>
		<meeting>the 2009 IEEE International Conference on Data Mining Workshops</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Evaluating shape alignment via ensemble visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Raj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mirzargar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Preston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Kirby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
		<idno type="DOI">10.1109/MCG.2015.70</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="60" to="71" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Visual Debugging of SPH Simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Reinhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Huber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Dumitrescu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Eberhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
		<idno>doi: 10. 1109/iV.2017.20</idno>
	</analytic>
	<monogr>
		<title level="m">21st International Conference Information Visualisation (IV)</title>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="117" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">muView: A visual analysis system for exploring uncertainty in myocardial ischemia simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Rosen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Burton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Potter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-24523-23</idno>
	</analytic>
	<monogr>
		<title level="m">Visualization in Medicine and Life Sciences III</title>
		<imprint>
			<publisher>Springer Nature</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="49" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Space-Filling Curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sagan</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-1-4612-0871-6</idno>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sedgewick</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984" />
			<publisher>Addison-Wesley Longman Publishing Co., Inc</publisher>
			<pubPlace>Boston, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Applications of the space-filling curves with data driven measure-preserving property</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Skubalska-Rafajłowicz</surname></persName>
		</author>
		<idno type="DOI">10.1016/S0362-546X(97)00277-0</idno>
	</analytic>
	<monogr>
		<title level="m">Nonlinear Analysis: Theory, Methods &amp; Applications</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="page" from="1305" to="1310" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Functional boxplots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">G</forename><surname>Genton</surname></persName>
		</author>
		<idno type="DOI">10.1198/jcgs.2011.09224</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational and Graphical Statistics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="316" to="334" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Dynamic volume lines: Visual comparison of 3D volumes through space-filling curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Weissenböck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Fröhler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gröller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kastner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Heinzl</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2864510</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1040" to="1049" />
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Contour boxplots: A method for characterizing uncertainty in feature sets from simulation ensembles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mirzargar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Kirby</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2013.143</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2713" to="2722" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
