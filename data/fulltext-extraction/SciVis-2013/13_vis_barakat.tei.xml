<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Adaptive Refinement of the Flow Map Using Sparse Samples</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2013-10-13">13 October 2013</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Samer</forename><forename type="middle">S</forename><surname>Barakat</surname></persName>
							<email>sbarakat@purdue.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Xavier</forename><surname>Tricoche</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">S</forename><surname>Barakat</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">X</forename><surname>Tricoche</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Purdue University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Computer Science Department</orgName>
								<orgName type="institution">Purdue University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Adaptive Refinement of the Flow Map Using Sparse Samples</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2013-10-13">13 October 2013</date>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2013; accepted 1 August 2013; posted online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Lagrangian flow visualization</term>
					<term>flow map</term>
					<term>edge features</term>
					<term>scattered data interpolation</term>
					<term>sparse sampling</term>
					<term>adaptive refinement</term>
					<term>parallel reconstruction</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a new efficient and scalable method for the high quality reconstruction of the flow map from sparse samples. The flow map describes the transport of massless particles along the flow. As such, it is a fundamental concept in the analysis of transient flow phenomena and all so-called Lagrangian flow visualization techniques require its approximation. The flow map is generally obtained by integrating a dense 1D, 2D, or 3D set of particles across the domain of definition of the flow. Despite its embarrassingly parallel nature, this computation creates a performance bottleneck in the analysis of large-scale datasets that existing adaptive techniques alleviate only partially. Our iterative approximation method significantly improves upon the state of the art by precisely modeling the flow behavior around automatically detected geometric structures embedded in the flow, thus effectively restricting the sampling effort to interesting regions. Our data reconstruction is based on a modified version of Sibson&apos;s scattered data interpolation and allows us at each step to offer an intermediate dense approximation of the flow map and to seamlessly integrate regions that will be further refined in subsequent steps. We present a quantitative and qualitative evaluation of our method on different types of flow datasets and offer a detailed comparison with existing techniques.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Fluid flows enter the description of countless physical and biological processes. Their precise understanding is therefore an important aspect of many endeavors in science, engineering, and medicine. Over the last two decades, computational fluid dynamics (CFD) has become an essential means to investigate and predict a broad range of flow behaviors. CFD simulations are now routinely used in research and industry where they produce increasingly large datasets that require massive storage resources and scalable data analysis solutions.</p><p>Scientific visualization has contributed a wide range of powerful techniques to depict the salient properties of fluid flows datasets <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b27">28]</ref>. In particular, the characterization and extraction of remarkable structures has been the focus of an intense research effort in topological <ref type="bibr" target="#b21">[22]</ref> and feature-based <ref type="bibr" target="#b28">[29]</ref> methods. In recent years, the notion of Lagrangian coherent structure (LCS) has emerged as a compelling alternative to study the qualitative behavior of transient flows. At the core of the LCS definition lies the concept of flow map, which describes how the position of massless particles changes over time under the action of the flow. As such, the flow map captures all the properties that are relevant to a Lagrangian analysis of a fluid flow and its transport properties. Unfortunately, studying the flow map poses a fundamental challenge from a visualization perspective since its computation requires to integrate trajectories from a dense set of spatial locations. And while flow visualization techniques such as path surfaces <ref type="bibr" target="#b8">[9]</ref> and time surfaces <ref type="bibr" target="#b19">[20]</ref> are concerned with 2D and 3D (respectively) restrictions of the flow map, the computation of LCS necessitates the integration of space-filling trajectories over the 4D domain of definition of the flow. Practically, this advection imposes that multiple time steps be fetched into memory thus increasing the I/O transfer time. In addition, the inherently multiscale nature of turbulent flow structures makes it necessary to carry out this computation across different spatial and temporal scales.</p><p>Several adaptive refinement methods have been proposed in recent years to approximate the flow map and its differential attributes. Yet, even with these techniques, extracting structural features from large-scale CFD datasets remains very difficult. In particular, existing approximation schemes tend to produce poor results when applied to the nonlinear and multi-scale characterization of salient structures from the flow map.</p><p>In this paper, we propose a massively parallel and adaptive technique for the sampling and reconstruction of the flow map from a sparse set of trajectories. Specifically, this work makes two main contributions. First, we propose a new model to explicitly describe and detect sharp features in the flow map, and we introduce a reconstruction technique based on an extension of Sibson's interpolation to account for the steep changes associated with these features. Existing methods for signal approximation are highly dependent on the structure of the sample points and they typically lead to poor approximation quality in the vicinity of sharp features. As a consequence, flow structures extracted from an approximated flow map signal (e.g., LCS) exhibit significant artifacts due to their correlation with sharp boundaries in the flow map. Our reconstruction technique overcomes these issues. Our second contribution corresponds to a new adaptive sampling strategy that consistently reduces reconstruction errors to deliver an approximation quality that clearly outperforms existing refinement techniques using the same number of samples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Different topological and geometrical approaches for flow visualization have been explored by the scientific visualization community <ref type="bibr" target="#b22">[23]</ref>. While the Eulerian perspective underlying topology is primarily relevant to the characterization of instantaneous flow features <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b39">40]</ref>, Lagrangian techniques advect particles along the flow to identify transient patterns. One category of these techniques requires the advection of a spatially limited set of particles (seeding set) and the computation of intermediate locations across time such as stream lines/surfaces <ref type="bibr" target="#b10">[11]</ref> and path surfaces <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b19">20]</ref>. If only a sparse set of the particles is advected and used to approximate the flow map at the intermediate time steps, both the overall cost of the advection and the latency introduced by the associated velocity data transfers can be significantly reduced.</p><p>Another category of Lagrangian techniques revolve around the concept of Lagrangian coherent structures and therefore require the advection of particles covering the entire spatial domain of the analysis. LCS have attracted significant attention in both fluid dynamics <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b35">36]</ref>, and visualization communities <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b33">34,</ref><ref type="bibr" target="#b18">19]</ref>. Haller has shown in his pioneering work <ref type="bibr" target="#b14">[15]</ref> that LCS can be obtained as the ridges of the finitetime Lyapunov exponent (FTLE), a scalar field that characterizes the amount of stretching of the flow about the trajectory of a point over a finite time interval. This research was followed by Haller's work on the variational characterization of LCS <ref type="bibr" target="#b15">[16]</ref>, which provides a more sound and accurate definition of flow separation structures. Both definitions rely on the computation of the flow map.</p><p>Garth et al. <ref type="bibr" target="#b9">[10]</ref> proposed a method for the acceleration of FTLE computation for 2D flows by mapping particle advections to the GPU. The approximation of the flow map was addressed by Garth et al. <ref type="bibr" target="#b7">[8]</ref> using an adaptive regular refinement technique. Their method uses two discretization sequences at consecutive resolution levels to assess the quality of the approximation. New samples are acquired at locations of unsatisfactory approximation quality. Agranovsky et al. <ref type="bibr" target="#b0">[1]</ref> proposed a method to compute the FTLE field from scattered flow map samples using Moving Least Squares (MLS). They suggested using staggered sampling to eliminate the possibility of a skewed MLS neighborhood. Both regular refinement and MLS fitting neighborhood requirements impose a lower bound on the number of samples that could be used. Brunton et al. <ref type="bibr" target="#b4">[5]</ref> proposed a technique that exploits the similarities between trajectories of a sequence of flow maps over time to speed up the computation. A germane idea was applied by Hlawatsch et al. <ref type="bibr" target="#b16">[17]</ref> who introduced a new hierarchical computation scheme for integral curves and described a GPU implementation. A sequence of regular grids is used to approximate the flow map over small time intervals. Both approaches trade computational complexity for increased memory footprint, which is tied to the spatial and temporal resolution. Investigating fine scales can become an expensive task especially for time-dependent data sets.</p><p>Concerning the direct approximation of LCS, Sadlo and Peikert <ref type="bibr" target="#b31">[32]</ref> proposed a method that adaptively refines grid cells based on the presence of FTLE height ridges in their interior. Least squares fit is used to approximate the gradient and Hessian of the flow map at the sample points. Continuous changes in points neighborhoods due to consecutive small refinements at the boundary of the ridges forces excessive re-evaluation of the ridge criteria. This introduces an inter-point dependency that limits efficiency on parallel architectures. Barakat et al. <ref type="bibr" target="#b3">[4]</ref> discussed a view-dependent method for the interactive refinement of FTLE. The visual feedback drives a dynamic hierarchical refinement strategy that optimizes the use of memory and computational resources. Also, Chen et al. <ref type="bibr" target="#b6">[7]</ref> attempted to reduce the computation time of the flow map by identifying appropriate minimal integration durations.</p><p>The flow map is characterized by a intricate set of edge structures that make its approximation difficult in their vicinity. Unfortunately, it is precisely at these sharp features that the accurate reconstruction of the flow map is needed most. Indeed, sharp boundaries highlight significant differences in the behavior of the trajectories of neighboring particles. The detection of jump discontinuities has been discussed before in the literature of signal approximation. A variety of approaches based on radial basis functions <ref type="bibr" target="#b17">[18]</ref>, variations cubic splines <ref type="bibr" target="#b37">[38]</ref>, wavelets <ref type="bibr" target="#b30">[31]</ref> and explicit representation of the value transition structures <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b1">2]</ref> have been proposed. A reconstruction of the flow map from data obtained through a coarse sampling strategy must avoid introducing approximation artifacts or distorting the continuity of these boundaries as they reflect on the quality of structures extracted using the flow map in a later stage. In this paper, we introduce a new method that could be considered as an extension of explicit techniques. However, our method models discontinuities differently to ensure smoothness for both 2D and 3D signals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">FLOW MAP COMPUTATION AND INTERPOLATION</head><p>In this section, we briefly introduce the basic concepts that are necessary to understand the steps involved in the computation of the flow map and its Jacobian. We also introduce the smooth C 1 interpolation scheme used by our method for the approximation of the flow map. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Flow Map</head><formula xml:id="formula_0">Let v : (I ⊂ IR) × (D ⊂ IR 3 ) → IR</formula><formula xml:id="formula_1">ẋ(t, t 0 , x 0 ) = v(t, x(t, t 0 , x 0 )) x(t 0 , t 0 , x 0 ) = x 0 .<label>(1)</label></formula><p>The map x(•, t 0 , x 0 ) : t → x(t, t 0 , x 0 ) describes a particle trajectory.</p><p>The map x t := x(t, t 0 , •) is called flow map x t (x 0 ): it indicates the position reached at time t by a particle released at x 0 at time t 0 .</p><p>With previous notations, one considers the spatial variations of the flow map x t , whereby t = t 0 + τ and τ is finite. The variations of this flow map around a given position x 0 are locally determined by its spatial derivative, the matrix J x (t,t 0 , x 0 ) := ∇ x 0 x(t,t 0 , x 0 ) at x 0 . However, it is also possible to compute the flow map Jacobian using a single advection trajectory <ref type="bibr" target="#b34">[35]</ref>. Since</p><formula xml:id="formula_2">∂ x t (x 0 ) ∂t = v(t, x t (x 0 ))</formula><p>the derivative with respect to the initial start position x 0 can be formu-</p><formula xml:id="formula_3">lated as ∂ ∂ x 0 ∂ x t (x 0 ) ∂t = ∂ ∂ x 0 v(t, x t (x 0 ))</formula><p>by applying the chain rule and changing the order of the derivation on the left hand side we get</p><formula xml:id="formula_4">∂ ∂t ∂ x t (x 0 ) ∂ x 0 = ∂ ∂ x t (x 0 ) v(t, x t (x 0 )) ∂ x t (x 0 ) ∂ x 0 = ∇ x t (x 0 ) v(t, x t (x 0 )) ∂ x t (x 0 ) ∂ x 0 .</formula><p>where</p><formula xml:id="formula_5">∇ x t (x 0 ) v(t, x t (x 0 ))</formula><p>is the spatial derivative of the vector field. Hence,</p><formula xml:id="formula_6">∂ ∂t J x (t,t 0 , x 0 ) = ∇ x t (x 0 ) v(t, x t (x 0 ))J x (t,t 0 , x 0 )<label>(2)</label></formula><p>The ordinary differential equation (ODE) in equation 2 can be solved alongside the ODE in equation 1 by integrating a higher-dimensional ODE of both the location and the Jacobian entries for each particle advection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Sibson's C 1 Continuous Interpolant</head><p>The notion of natural neighbor interpolation was first discussed by Sibson <ref type="bibr" target="#b36">[37]</ref> to provide a C 1 interpolation of multivariate scattered samples. The method has the advantage of creating a smooth approximation that can reproduce spherical quadrics using a Voronoi tessellation of the scattered sites. </p><formula xml:id="formula_7">λ i (x).</formula><p>Sibson <ref type="bibr" target="#b36">[37]</ref> proposed a C 1 continuous interpolation method that relies on both the function value and its gradient for all sample points p i ∈ P. The method can exactly reproduce spherical quadrics of the form Φ(x) = a + b t x + γx t x. The proof assumes that the gradient of Φ at the data points is known or can be approximated from the function values.</p><p>Sibson's Z 1 interpolant is a combination of the linear interpolant Z 0 = ∑ i λ i (x)z i , where z i are the input values, and an interpolant ξ which is the weighted sum of the first degree functions:</p><formula xml:id="formula_8">ξ i (x) = z i + g i t (x − p i ), ξ (x) = ∑ i λ i (x) ||x−p i || ξ i (x) ∑ i λ i (x) ||x−p i || (3)</formula><p>where g i is the input gradient at p i . Sibson observed that the combination of Z 0 and ξ reconstructs exactly a spherical quadric if they are mixed as follows:</p><formula xml:id="formula_9">Z 1 (x) = α(x)Z 0 (x) + β (x)ξ (x) α(x) + β (x) where α(x) = ∑ i λ i (x) ||x−p i || 2 f (||x−p i ||) ∑ i λ i (x) f (||x−p i ||) and β (x) = ∑ i λ i (x)||x − p i || 2 and f (||x − p i ||) = ||x − p i || 2 .</formula><p>This first order interpolant can take advantage of both values and derivatives of the flow map defined based on sparse samples. The method can also take advantage of parallel architectures as will be discussed in section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ADAPTIVE REFINEMENT</head><p>In this section we discuss a new refinement strategy based on the C 1 continuous Sibson's interpolation method discussed in section 3.2. There are no constraints on the locations of the samples and no need to compute additional samples only to preserve a certain organization. The refinement strategy we propose consists of two steps. In the first step, we compute an indicator of the local error everywhere in the domain. In the second step, we add a fixed number of new samples guided by the error measure. This number is can be selected by the user based on the computational and memory resources available for the flow map computation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Estimating the Approximation Error</head><p>We now discuss how an error indicator can be computed using the formula defining Sibson's interpolation. As described in section 3.2, the C 1 Sibson's interpolation is a weighted combination of the linear interpolation Z 0 and a weighted sum of the first degree function defined in equation <ref type="bibr" target="#b2">(3)</ref>. The C 1 continuity of Sibson's interpolation is due to the Z 1 term ξ (x). This term can be viewed as the weighted sum of different value suggestions made by the natural neighbors of the reconstruction site x. The weight of each suggestion is directly proportional to the natural coordinate and inversely proportional to the distance between the natural neighbor and the considered reconstruction site. The first order suggestion made by each of the data sites ξ i (x) assumes a constant gradient in the neighborhood of the data sites. Obviously, this assumption is particularly invalid close to regions of high frequency details where the higher order terms are significant. Therefore, it is expected to see that value suggestions made by the different first order approximations have larger discrepancies close to these regions where insufficiently resolved details are present.</p><p>In order to evaluate the discrepancies between the first order suggestions, we use their weighted variance. Practically, our indicator can be formulated as:</p><formula xml:id="formula_10">ε(x) = log(S ∑ i λ i (x) ||x−p i || (ξ i (x) − ξ (x)) 2 ∑ i λ i (x) ||x−p i || )</formula><p>We use the factor S to scale the weighted variance values to the unit interval. The weights ensure that the effect of a certain data site on the variance is equivalent to its effect on the value of ξ (x). Hence, a data site that is further away from the reconstruction point x compared to other data sites will have a smaller effect on the variance. A consequence of this weighting is to create a tendency for ε(x) to increase away from any of the data sites since if the distance between x and any of the sites is particularly small this will reduce the variance as well. This in turn implies that using the described weighted variance as an oracle for the refinement will automatically avoid oversampling since ε(x) has a local minimum at each existing site. The weighted variance can be computed alongside Sibson's interpolation. The strong skewness of the weighted variance can be rectified through logarithmic damping. Finally, the function ε(x) computed for different components of the flow map can be aggregated to a single function using a max operator.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Sampling Distribution</head><p>The locations of the new samples are identified by mapping the value ε(x) at each reconstruction point x to a probability distribution P(x) that indicates the possibility of selecting it as a new sampling location. P(x) is computed as the probability density function of an exponential distribution with the random variable (−ε(x)):</p><formula xml:id="formula_11">P(x) = λ e −λ .K.(−ε(x))</formula><p>The term K is simply a constant scaling factor. The mean of the exponential distribution λ is a user-controlled parameter that indicates how the new samples are distributed across the domain between regions of different approximation errors. A low value for λ allows for more samples to be allocated in regions of relatively low approximation error. This permits the discovery of any missing details that were not captured by existing samples so far. A relatively high value for λ attempts to restrict the sampling to regions of high approximation errors. It might be useful to use a low value for λ during the first few iterations. In figure 1(e) and 1(f), we show the effect of different values for λ on the distribution of the new samples.</p><p>For efficiency, binning is used with the inverse transform sampling from the exponential distribution. A bin is first selected then a point from the bin is selected assuming all points in the each bin have equal probabilities. We impose an additional constraint on the addition of new samples to avoid the selection of several nearby points with high approximation errors simultaneously. This is done by limiting the number of new samples added to each Voronoi cell. If a new sample is to be added to a cell that already contains k new samples than the additional sample will be retained with a probability 1/(k + 1) otherwise it will be discarded. Hence, we add a new point at a time in each cell to avoid computing samples that might only have a small effect on the approximation error given other surrounding points have been added already.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">FLOW MAP RECONSTRUCTION</head><p>Sibson's interpolant can be used for the reconstruction of the flow map fields from the scattered data sites and can also be used to compute the field ε(x) needed for the refinement. Each of the scattered data samples corresponds to a single particle trajectory, and is associated with the flow map value and its Jacobian computed as discussed in section 3.1. However, regular Sibson's interpolation suffers from a critical drawback. The interpolation is sensitive to the distribution of the data sites especially close to regions of sharp gradients. This sensitivity takes the form of artifacts that distorts the shape of the edge features. Also, the first order functions when combined with the high gradient magnitude often found at the surrounding data sites will create a set of min and max critical points not originally present in the scalar topology of the individual scalar coordinates of the flow map field. These points will in turn lead to artifacts in the FTLE field computed from the flow map. In this section, we demonstrate how both approximation error and structure artifacts can be reduced through a modified version of Sibson's interpolation that takes advantage of an explicit model of the edge features in the data. In this paper, we model these features as smooth open or closed manifolds.</p><p>Our solution for the adaptive refinement and reconstruction consists of multiple phases as shown in figure 3. Initially, we use a coarse set of regular samples for the reconstruction of the flow map using Sibson's method. Edge detection can then take place preceding our edgebased reconstruction that will be described hereafter. The reconstruction method passes feedback to the refinement through the indicator of the approximation error ε as discussed in section 4. After the new samples are added through refinement, the process can be repeated again. It is also possible to use our edge-based reconstruction in an exploration scenario to give the user an intermediate visualization free of artifacts before more samples are computed. Above all, this reconstruction can save on the total number of samples needed in order to achieve a certain approximation quality. We begin our explanation by describing how the sharp features are detected from the sparse samples and how the corresponding surfaces are modeled. We move next </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Sharp Features Detection and Modeling</head><p>The edge features can be found by applying a standard edge detection technique to the individual scalar channels of the flow map constructed using the regular Sibson's interpolant. We have chosen to apply Canny's edge detection filter <ref type="bibr" target="#b5">[6]</ref> for its simplicity in addition to its good localization and robustness. The localization property means that identified edges are the closest possible to the real edges in the 3D image. Canny's edge detection filter applies hysteresis thresholding to the gradient magnitude in order to prevent the 3D image noise from creating false edges. We estimate the values of the upper and lower thresholds through a heuristic that maps each threshold to a percentage of the voxels in the data. These percentages are user specified and should reflect the density of edge structures in the data. Binning, based on the gradient magnitude, is used to match the percentages to the threshold values. The steep changes in the flow map have the shape of smooth surfaces that capture the separation of neighboring particles due to their advection. However, the edges discovered are likely to be non-smooth and noisy due to undersampling as seen in figures 1(d) for a magnified region selected from a 2D turbulent flow. Our goal is to build a smooth surface representation of the edge features through fitting. It is not computationally efficient to use all the edge points for the fitting. It is also not desirable because a smooth reconstruction of the feature surface will become a much harder task in the presence of possibly a large number of noisy edge points. We therefore identify the subset of edge points where each fall closest to at least one site compared to all other edge points. We pair each of these edge points to its closest data site. For each connected edge, this subset of edge points are used for the fitting of a single surface that topologically approximates the feature.</p><p>To create a surface representation of the edge features while preserving the smoothness property, we use a variation of the moving least-squares (MLS) method. Specifically, we use the Algebraic Point Set Surfaces (APSS) method described by Guennebaud and Gross <ref type="bibr" target="#b13">[14]</ref>. Our main motivation here is to use a normal constrained smooth fitting of the sharp features in the data. The normals are computed as the normalized gradients at the fitting edge points. The value transition itself is tangent to the level sets in its infinitesimal close neighborhood. These level sets are by definition orthogonal to the gradient of the field. By constraining the shape of the value transition to be orthogonal to the gradient, we increase its consistency with the known values and gradients at the samples in its neighborhood.</p><p>The APSS fitting defines a potential function corresponding to the signed distance to the surface. The domain of this function is bounded to the surface neighborhood defined through a set of spheres centered at the fitted edge points. Hence, each edge point is equipped with a fitting radius. To find the potential at a certain query point all edge points with spheres containing the point in question will be used for the fitting. This radius must be large enough to ensure the smoothness of the surface but not so large as to affect the topology through excessive smoothing. Therefore, we set the radius to twice the distance between the edge point and its furthest natural neighbor as computed from the preceding regular Sibson's reconstruction. Thus, the radius is directly dependent on the density of the samples in its neighborhood. One problem arises, however, when computing the potential function at the boundaries of an open surface. An additional check is needed to ensure that a point is projected orthogonal to the surface and within its boundaries before the potential function is assumed valid. In <ref type="figure">figure 4</ref>, we show the surface fitting at a point x that is located within the radius of three surface edge points. The distance from the point to the surface can be computed as the distance to its projection on the fitting circle.</p><p>The Eigen algebraic sphere fitting used by the APSS method can be efficiently computed for a large number of points while maintaining a fitting quality close to that achieved by geometric sphere fitting.</p><formula xml:id="formula_12">p i p j point not in surface neighborhood p k</formula><p>Point projection to the surface <ref type="figure">Fig. 4</ref>. Sphere fitting of the surface at x using three edge points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Modified Discrete Sibson's Interpolation</head><p>In this section, we explain the two steps of the modified Sibson's interpolation we propose. The first step is the computation of the natural neighbors in the presence of the feature surfaces. The second step consists of adapting the Sibson's interpolant to integrate information derived from the surfaces for the reconstruction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Natural Neighbors</head><p>The Voronoi diagrams of continuous data such as lines and curves in the 2D plane or surfaces in the 3D space have been discussed before in the context of transfinite Sibson's interpolation <ref type="bibr" target="#b12">[13]</ref>. It was shown that a continuous Voronoi diagram can be computed for a set of line and/or curve segments in the plane. The natural coordinates of a query point x remains defined as the volume the potential Voronoi cell of x steals from existing cells when inserted in the diagram (see <ref type="figure" target="#fig_3">figure 5</ref>). The only difference is that an existing Voronoi cell might belong to a surface instead of a point. The computation of the continuous Voronoi cells is a challenging task however especially with the presence of complex surfaces. We therefore propose an extension to the discrete Sibson's interpolation discussed by Park et al. <ref type="bibr" target="#b24">[25]</ref> to compute the natural neighbors of the reconstruction points in the presence of surfaces.  The main idea behind the efficient computation of the natural neighbors as described by Park et al. <ref type="bibr" target="#b24">[25]</ref> is to scatter the value V c (i) at point i to all output raster positions p that are inside the sphere centered at i and having a radius of d(i,V c (i)). The value V c (i) is the closest data site to the point i. <ref type="figure">The radius d(i,V c (i)</ref>) is the distance between the In the presence of surfaces, V c (i) can be either a data site or a surface. When V c (i) is a surface the function d(i,V c (i)) is the distance between the point i and the surface (the absolute potential function). For the regular discrete Sibson's interpolation, the closest site V c (i) can be found using a kd-tree containing all the sites. In our case, we also need to find the distance between i and each surface. Computing the potential function with the associated MLS fitting at each raster position i for all surfaces would be a time consuming task especially for large volumes. We can instead use the natural neighbors from the regular Sibson's interpolation to identify if the point i is close to any surface. If none of the natural neighbors of the point from the regular Sibson's method is contributing to a particular surface (not paired with any fitting edge point) then the potential function does not need to be evaluated. This is true because the surface cannot be a natural neighbor of the point if none of its original natural neighbors is among the surface sites. The computation of the natural neighbors is summarized in algorithm 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.2">Modified Interpolant</head><p>Unlike the natural neighbors that correspond to sample sites, a surface natural neighbor lacks a flow map value and corresponding gradient. Yet, we need to compute both z i (x) and ξ i (x) for a surface natural neighbor i with natural coordinate λ i in order to perform the Sibson's interpolation described in section 3.2. The computation of z i for a query point x can be done using the data sites surrounding the surface and discussed in section 5.1. These sites provide information about the field in the neighborhood of the surface. We assume that the field dynamics in that neighborhood can be expressed in term of the distance to the surface. Recall that the surface itself is orthogonal to the gradient and hence to the level sets in its infinitesimal neighborhood.</p><p>In order to compute the value of z i , we attempt to fit the values at the data sites relative to the surface. As we compute the potential v(x) for the point x, we gain information about all the data sites that belong to the feature surface (paired with the fitting edge points) and that fall in the neighborhood of the point in question. For the computation of z i through the fitting of the data relative to the surface, we project these sites to the surface and compute the corresponding potential values. Hence, for a site i located at p i , we have the value y i , and the potential v i . For each site i, we have the following fitting constraint f (v i ) = y i , with weight r i = ||x − p i ||. The distance based weights are used to penalize further data sites compared those closer to x. We use a local circle algebraic fit <ref type="bibr" target="#b29">[30]</ref> in the 2D domain of y i and v i in order to compute the corresponding value for the potential v(x). This is illustrated in <ref type="figure">figure 6</ref>. We have chosen to use the algebraic fit because of its flexibility in representing the shape of the smooth value transition in addition to its efficiency. It is worth noting that the sample sites of the surfaces are only used for this 1D fitting as they are discarded from the Voronoi diagram. This is because of the large gradient magnitude at these sites that tends to negatively affect Sibson's interpolation. In addition, these gradients close to the steep transitions in value are often more susceptible to noise. Finally, z i can be computed as:</p><formula xml:id="formula_13">z i = f (v(x))</formula><p>Since z i (x) provides an estimation of the value exactly at the location x, we do not need the gradient for the first order function ξ i (x) and we can simply set ξ i (x) = z i (x).</p><p>In <ref type="figure" target="#fig_4">figure 1</ref>, we show a side-by-side comparison between the 2D flow map approximated using the regular and our modified Sibson's interpolation. The red and blue color channels correspond to the first and second components of the flow map respectively. The difference in approximation quality is particularly clear close to the edge features. The FTLE fields computed from the approximated flow maps is shown in <ref type="figure" target="#fig_5">figure 7</ref>. The ridges of FTLE which coincide with the edges of the flow map are much clearer and less distorted using our edge-based reconstruction. In <ref type="figure">figure 2</ref>, we demonstrate the approximation quality of our method in comparison to various other existing approximation techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">SCALABLE IMPLEMENTATION</head><p>Designing an algorithm that scales to massively parallel architectures is imperative due to the huge size of dataset produced through CFD simulations. Both the flow map reconstruction and the adaptive refinement procedures described in this paper were designed with scalability in mind. For the reconstruction, the investigation and detection of the edges using Canny's filter is done in parallel <ref type="bibr" target="#b23">[24]</ref>. The reconstruction time is dominated by the computation of the natural neighbors for both the regular discrete Sibson's interpolation and our method which also requires computing the potential function with respect to the surfaces. A kd-tree data structure is used to keep track of the data samples and to locate the site V c ((i)) closest to any raster position i in parallel as described in algorithm 1. The loop over all raster positions is executed in parallel. However, there are two operations that might lead to a race condition. The first consists of inserting a new natural neighbor for a position p. We therefore have a lock assigned to the natural neighbor list at each position p. The second operation is incrementing the weight of the natural neighbors n(p,V c (i)). This operation has to be atomic. This has negligible effect on performance. The natural neighbor list itself is an unsorted vector where all items' locations in memory remain valid after their insertion despite following insertions. This alleviates the need for read locks that require synchronization between processors causing larger delays compared to a linear search of the list. As more samples are inserted due to refinement, the radius r for raster positions i decreases and consequently reduces the rasterization cost. The computation of the reconstructed value using the natural neighbors is inherently parallel for all output positions. It is worth noting however, that computing the potential function for the data sites in order to perform the 1D function fitting is a costly operation. Instead, we pre-compute the potential function for all data sites with respect to all surfaces before applying the interpolation. For the adaptive refinement, the integration of different particles tangent the flow velocity is an inherently parallel process. The selection of the new samples locations as described in section 4.2 can be executed in parallel. However, care must be taken while updating the count of new samples in each existing Voronoi cell.</p><p>Notice here that the computation of the natural coordinates at any point poses no significant dependency that would limit parallelism. Hence, a large group of samples can be added everywhere in the domain simultaneously through refinement before rasterization is performed in parallel. This is in contrast to approaches that require incremental local reconstruction through MLS fitting intertwined with the repeated computation of FTLE and the corresponding ridge extraction <ref type="bibr" target="#b31">[32]</ref>  <ref type="bibr" target="#b0">[1]</ref>. To achieve a smooth approximation through MLS a large 3D fitting neighborhood is needed in order to avoid skewed situations especially due to the FTLE complexity. As a local small set of new samples are added in a region growing fashion, the MLS fitting and structure investigation need to be repeated for all nodes in the mentioned neighborhood. The fitting might be performed dozens of times at a single node for each new sample added to its domain before the region is considered at sufficient approximation accuracy. These methods also fail to provide an intermediate view of all the structures in the domain and might miss small features. It is worth mentioning that in our case, the limited 1D MLS fitting is only needed in the close neighborhood of the surfaces. This neighborhood is consistently shrinking as new samples are added. Hence, the main difference is that adding new samples reduces the fitting computations instead of increasing it.</p><p>A natural and compelling application of our technique is the efficient and scalable computation of Lagrangian coherent structures. These structures can create a portrait of transient flows. The most popular characterization of these structures is based on the concept of FTLE. Note that alternative definitions of LCS that apply a variational approach to their characterization <ref type="bibr" target="#b15">[16]</ref> will benefit from our method even more given the high smoothness that they require from the flow map. It is indeed as important as the high-quality reconstruction of the flow map to provide also a high-quality reconstruction of its derivatives since those are directly relevant in the characterization of important flow behaviors.</p><p>We have tested our adaptive refinement and reconstruction on five datasets as listed in table 1. The computation of the flow map is performed for a regular grid using a velocity field defined on an unstructured grid. For the steady and analytical test cases, the computation was run on an NVIDIA GTX 590 GPU using CUDA. For the Delta Wing, the computation was performed using the CPU on a shared memory multiprocessor machine with 32 cores. The same machine was used to document performance numbers for our method. For all datasets used, we compare our refinement and approximation to the four-point adaptive scheme described by Garth et al. <ref type="bibr" target="#b7">[8]</ref>. The method provides a scalable algorithm for the approximation of the flow map using a four-point subdivision sampling scheme combined with smooth reconstruction kernel. However, the method cannot use gradient information provided at the data sites. We also compare our edge-based approximation to that achieved by the Sibson's interpolation that was adapted to use our refinement strategy. The λ parameter of the refinement has been fixed to 4.0 for all datasets. The computation of the hysteresis thresholds of Canny's edge detection is done based on the percentages listed in table 1 (described in section 5.1).</p><p>The first dataset we consider is the standard analytical ABC (Arnold-Beltrami-Childress) flow. The ABC flow is a canonical test case, exhibiting complex turbulent structures <ref type="bibr" target="#b14">[15]</ref>. In figure 11, we provide a visual comparison of the FTLE ridges extracted at two different refinement stages of the flow map. Using only 1.2% of the full resolution, our edge-based method was able to extract a smooth surface for the FTLE ridges. The adaptive four-point scheme was less successful in providing an accurate visualization of these structures. The regular hierarchical organization of the samples has a significant effect on the approximation of the flow map gradient close to the surfaces. Our adaptive version of the Sibson's interpolation also suffered from artifacts due to the coarse sampling. The first order term of the Sibson's interpolant combined with the large gradients close to the edge features leads to a high sensitivity to the site locations. At a following refinement stage, we see a considerable improvement in the results achieved by the adaptive four-point scheme and our adaptive version of Sibson. However, the improvement remains behind that achieved by the method presented in this paper. The mean square distance (MSD) relative to the full resolution flow map, shown in figure 10(a), clearly indicates a significant gap between the methods compared in favor of our technique. The refinement method described also leads to a steeper decline in the error especially at the early refinement stages.</p><p>The Delta Wing dataset is concerned with the study of the transient flow above a delta shaped wing moving at low speed and an increasing angle of attack. Scientists are mainly interested in the formation of vortices on both sides of the wing and their breakdown. In <ref type="figure" target="#fig_4">figure 12</ref>, we demonstrate the FTLE ridges extracted using around 4.2% of the full resolution samples. Our method is particularly superior showing structures near the shear surface at the wing front, and near the turbulent vortex in the back. The mean square distance between the original and the approximated flow maps indicates a significant decay in error using the refinement method discussed for the <ref type="bibr">Sibson</ref> The Ellipsoid dataset is produced through a flow simulation around an ellipsoid. Vortex shedding can be observed as several layers at the boundary and above the ellipsoid. The FTLE ridges extracted from the flow map at different refinement stages is shown in figure 14. Our reconstruction leads to smoother surfaces at all refinement stages particularly when only 2% of the full resolution samples are used. In <ref type="figure" target="#fig_4">figure 10</ref>(c), we can clearly observe a smaller approximation error achieved by our method especially when less than 4% of the full resolution samples are used. Looking to the mean square errors (MSE) of the FTLE field in <ref type="figure" target="#fig_4">figure 10(d)</ref>, the differences between the approximation methods is more obvious (also see <ref type="figure" target="#fig_4">figure 13</ref>). It is worth noting that even the small differences between the curves in this graph are significant because they mainly correspond to differences around the structures which are only a small percentage of the entire volume.</p><p>The Hill's Vortex dataset corresponds to a simple analytic vortex ring model based on Hill's spherical vortex <ref type="bibr" target="#b25">[26]</ref>. In <ref type="figure" target="#fig_4">figure 10</ref>(e), we show a comparison of the different flow map approximations based on the mean square distance. Our edge-based reconstruction is clearly superior. We also notice that the adaptive four-point scheme has a smaller difference to the ground truth than the adaptive Sibson's method for the early iterations. However, the four-point scheme introduces systematic errors due to its sampling pattern. These errors lead to significant artifacts in the FTLE field as seen in figure 10(f). This is further illustrated in <ref type="figure" target="#fig_4">figure 8 (figure 13</ref> for the Ellipsoid dataset). Similar ridge extraction parameters are applied to all test cases. However, we tuned the parameters in favor of the four-point scheme results. Changes to the parameters might reduce the artifacts only at the expense of loosing portions of the structures. It is important to notice, that our approximation explicitly attempts to preserve the gradient directions orthogonal to the surface through the fitting. Hence, the gradients for the flow map fields in our case are better preserved. Since the FTLE computation relies on the Jacobian of the flow map, it is then expected to see differences for ridges extracted from FTLE. Another analytical dataset we consider, is the Double Gyre dataset <ref type="bibr" target="#b26">[27]</ref>. The reconstruction times for the adaptive Sibson's method and our method is under 3 seconds. In <ref type="figure" target="#fig_8">figure 9</ref>, we compare the FTLE field computed by the various approximations. We clearly notice the artifacts introduced by the adaptive four-point scheme. Our method is superior especially close to the ridges of FTLE.</p><p>The computation time needed by the adaptive Sibson's approximation for all datasets is documented in <ref type="figure" target="#fig_4">figure 10(h)</ref>. The cost declines as the number of samples increases due to the decreasing rasterization radius for the points in the refined regions. The computation time of our method is dominated by the need to compute the projection of all data sites to all surfaces. We believe that this cost can be reduced significantly if this projection was limited to those sites close to the structures. This however requires further investigation on the ideal representation to keep track of the domain. Due to the poor edge detection in early refinement stages, the number of surfaces could be highly affected by fragmented surfaces and leading to high computation times. This cost decreases as the refinement progresses until the number of surfaces is fixed (see <ref type="figure" target="#fig_4">figure 10(h)</ref>). The computation times for the adaptive four-point method are indicated in table 1. Each refinement iteration for the four-point subdivision scheme requires eight times the time and space of the preceding iteration. We therefore limit the number of iterations to three, and experiment with the threshold parameter until we achieve the needed number of samples. This is impractical in reality since the refinement should be driven by the quality of the approximation making the number of iterations unknown and possibly significantly larger. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION AND FUTURE WORK</head><p>In this paper, we have presented a method that allows for the efficient and accurate reconstruction of the flow map at a high resolution using a small number of scattered samples. For that, we have proposed a new model for the edge structures that are exhibited by the flow map and used this model to steer the reconstruction. We have shown that a careful modification of Sibson's natural neighbor interpolation near the flow structures can in fact improve the approximation both quantitatively and qualitatively. We have also discussed a new method for the incremental refinement of the approximation using a criteria derived from the proposed interpolation model. The experiments performed on 3D flow datasets demonstrated superiority in preserving the visual quality of the extracted LCS structures based on the approximated flow map compared to the state of the art methods. The results obtained also show that the presented method can consistently reduce the approximation error through refinement and essentially achieve smaller error than existing methods using the same number of samples. There are several ideas to extend this work in the future. We have attempted to reduce the number of samples without consideration to the possible coherence between the trajectories of certain groups of nearby samples. It might be advantageous to explore such coherency to reduce the cost of the samples used or to improve the quality of the approximation. Another avenue for improvement concerns making the detection of the edge features and the modification of their representations applied on the fly locally as new samples are added. We intend to explore other alternatives for the 1D fitting of the values as a function of the potentials at the data sites. Some fitting strategies lead to considerably better results than the ones discussed in this paper at the expense of a much higher computational cost. Also, we would like to extend the method to approximate a sequence of flow map computations corresponding to multiple integration durations. Finally, we want to investigate the use of the method described in this paper to support an interactive visualization of the flow structures, whereby our reconstruction would be applied in a view-dependent manner.    </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc><ref type="bibr" target="#b2">3</ref> be a smooth time-dependent threedimensional vector field defined over a spatial domain D and a time interval I describing the velocity of a fluid flow. The corresponding dynamical system describes the motion of massless particles along the flow:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .Fig. 2 .Fig. 3 .</head><label>123</label><figDesc>2D flow map: (a) Original high resolution flow map fields, (b) Regular Sibson's reconstruction (MSE is 2.2 × 10 −5 and 0.8 × 10 −5 ), (c) Our feature based reconstruction (MSE is 1.2 × 10 −5 and 0.3 × 10 −5 ), (d) Edge features, (e) Refinement new samples with λ = 2.0, and (f) Refinement new samples with λ = 4.0. The approximation errors for different interpolation techniques: (a) Moving least-squares fit, (b) Multiquadircs radial basis function, (c) Thinplate spline radial basis function, (d) Regular Sibson's interpolation, and (e) Our edge based reconstruction. to introducing our modified Sibson's method that takes advantage of the discovered edge features. Diagram showing the different components of our solution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>The Voronoi tessellation in the presence of both curves and data sites. A simulated insertion of a new sample at p will create a new Voronoi cell taking from the area of the surrounding cells. The area of the pixel i in the discrete sense will belong to the Voronoi cell of p because the position p is inside a circle of radius r around i. Where r is the distance between the point i and the curve of its cell.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Algorithm 1 :</head><label>1</label><figDesc>The computation of the natural neighbors Input: The natural neighbors from the regular Sibson's interpolation method oc Input: Map from sites to surfaces Q Output: The normalized natural neighbors coordinates c Construct a kd-tree form m sites. foreach output raster position p do Initialize c(p) = φ . end Execute loop in parallel for different values of i foreach raster position i do Find the closest site p n in the kd-tree. F := φ . foreach site s in oc(i) do F := F ∪ Q(s). end foreach surface f in F do if d(i, p n ) &gt; d(i, f) then p n := f. end end Calculate r = d(i, p n ). foreach raster position p inside a d-dimensional sphere of radius r around i do if V c (i) not in c(p) then Acquire the lock for p if V c (i) not in c(p) then Add V c (i) to c(p). end Release the lock for p end Next statement is atomic Increment c(p,V c (i)) by one. end end Execute loop in parallel for different values of p foreach output raster position p do Sum all natural coordinates weights to compute n(p). Set c(p) = c(p)/n(p). end point i and the data site V c (i)).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 7 .</head><label>7</label><figDesc>2D FTLE field: FTLE computed from (a) the regular Sibson's interpolation reconstruction of the flow map, and (b) from our feature based reconstruction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>'s based methods. The Delta Wing dataset contains a dense set of structures and the availability of gradient information to the Sibson's methods helped improve the convergence. For the same reason the Sibson's based methods performed poorly when less than 4% of the samples are used. This is because the first order term of the Sibson's interpolant is likely to perform poorly when insufficient samples are available to capture any structures in the flow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>The FTLE ridges from: (a) The full resolution flow map, (b) adaptive four-point approximation, and (c) our edge-based approximation. The number samples used is 369098 (2.2% of the full resolution).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>The FTLE field from: (a) The full resolution flow map, (b) adaptive four-point approximation (FTLE MSE is 2.3 × 10 −2 ), (c) the adaptive Sibson's approximation (FTLE MSE is 1.2 × 10 −2 ), and (d) our method (FTLE MSE is 9.2 × 10 −3 ). The number samples used is 27262 (5.2% of the full resolution).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 11 .</head><label>11</label><figDesc>FTLE ridges for the ABC dataset extracted from the approximated flow map: (a) Adaptive four-point scheme using 201326 samples (1.2% of full resolution), (b) Our method using 201326 samples (1.2% of full resolution), (c) Adaptive four-point scheme using 704643 samples (4.2% of full resolution), (d) Our method with using 704643 samples (4.2% of full resolution).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 12 .</head><label>12</label><figDesc>FTLE ridges for the Delta Wing dataset extracted from the approximated flow map: (a) Adaptive four-point scheme using 940584 samples (4.2% of full resolution), (b) Our method using 940584 samples (4.2% of full resolution), (c) Adaptive four-point scheme using 2284277 samples (10.2% of full resolution), (d) Our method using 2284277 samples (10.2% of full resolution).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Fig. 10 .</head><label>10</label><figDesc>The approximation errors for the ABC (a), Delta Wing (b), Ellipsoid (c)(d), and Hill's Vortex datasets (e) (f). In (g) and (h), we show the reconstruction times for both the adaptive Sibson's method and our method.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Fig. 13 .</head><label>13</label><figDesc>A cross section of the FTLE for the Ellipsoid dataset computed using our approximation of the flow map (b) and using the adaptive fourpoint approximation (c). (a) The edge features used for our reconstruction. paper is based in part upon work supported by the National Science Foundation under Grants No. OCI-1150000 and CMMI-1030326 and by a gift by Intel Corporation. The implementation of this work greatly benefited from following open-source libraries: Teem http://teem.sf.net, ITK http://www.itk.org, and CGAL http://www.cgal.org.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Fig. 14 .</head><label>14</label><figDesc>FTLE ridges for the Ellipsoid dataset extracted from the approximated flow map: (a) Adaptive four-point scheme using 161480 samples (2.2% of full resolution), (b) Adaptive Sibson's method using 161480 samples (2.2% of full resolution), (c) Our method using 161480 samples (2.2% of full resolution), (d) Adaptive four-point scheme using 308281 samples (4.2% of full resolution), (e) Adaptive Sibson's method using 308281 samples (4.2% of full resolution), (f) Our method using 308281 samples (4.2% of full resolution).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>The natural neighbor coordinates of a point are defined from the Voronoi diagram of the data sites. The natural coordinate of a point x with respect to a data site p i corresponds to the volume taken by the Voronoi cell of the point x from the volume of the Voronoi cell of the data site p i if the point x is to be inserted in the Voronoi diagram. This volume is referred to as the natural coordinate</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Fig. 6. The edge data sites near x and its natural neighbors are used for the 1D value fit.</figDesc><table><row><cell></cell><cell cols="2">Value</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Sample sites</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>Discontinuity surface</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>p 1</cell><cell></cell><cell></cell><cell>p 8</cell><cell>p 1</cell><cell></cell></row><row><cell>p 5</cell><cell>p 3</cell><cell>p 7</cell><cell>p 4 p 2</cell><cell>p 6</cell><cell>Potential</cell></row><row><cell>p 2</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>p 6</cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell>p 8</cell><cell></cell><cell></cell></row><row><cell>p 4</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>p 3</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell>p 7</cell><cell></cell><cell></cell><cell></cell></row><row><cell>p 5</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 .</head><label>1</label><figDesc>Dataset Information and performance numbers. τ refers to the integration duration.</figDesc><table><row><cell>Dataset</cell><cell>Dimensions</cell><cell>Flow map</cell><cell>τ</cell><cell>Time steps</cell><cell>Edge detection</cell><cell>Refinement</cell><cell>λ</cell><cell>Adaptive four-point</cell></row><row><cell></cell><cell cols="2">computation time (hour)</cell><cell></cell><cell></cell><cell>percentage parameter</cell><cell>Step (sec.)</cell><cell></cell><cell>scheme (sec.)</cell></row><row><cell>ABC</cell><cell>256x256x256</cell><cell>4.83</cell><cell>5</cell><cell>analytical</cell><cell>0.06, 0.06, 0.06</cell><cell>4.17</cell><cell>4.0</cell><cell>38</cell></row><row><cell>Ellipsoid</cell><cell>256x128x224</cell><cell>2.32</cell><cell>1.0</cell><cell>steady</cell><cell>0.05, 0.035, 0.05</cell><cell>1.83</cell><cell>4.0</cell><cell>54</cell></row><row><cell>Delta Wing</cell><cell>288x324x240</cell><cell>14.26</cell><cell>1.5</cell><cell>20</cell><cell>0.04, 0.04, 0.04</cell><cell>6.13</cell><cell>4.0</cell><cell>120</cell></row><row><cell>Hill's Vortex</cell><cell>256x256x256</cell><cell>1.85</cell><cell>10</cell><cell>analytical</cell><cell>0.015, 0.015, 0.02</cell><cell>3.12</cell><cell>4.0</cell><cell>40</cell></row><row><cell>Double Gyre</cell><cell>1024x512</cell><cell>0.07</cell><cell>10</cell><cell>analytical</cell><cell>0.04, 0.04, 0.04</cell><cell>0.08</cell><cell>4.0</cell><cell>27</cell></row><row><cell>(a)</cell><cell>(b)</cell><cell>(c)</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We wish to thank Christoph Garth from the University of Kaiserslautern for providing the implementation of his method <ref type="bibr" target="#b7">[8]</ref>. This</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Extracting flow structures using sparse particles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Agranovsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Vision, Modeling, and Visualization</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="153" to="160" />
		</imprint>
	</monogr>
	<note>The Eurographics Association</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Accurate approximation of unknown fault lines from scattered data, mem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Allasia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Besenghi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Cavoretto</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Accad. Sci. Torino Cl. Sci. Fis. Mat. Natur</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="page" from="3" to="26" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Approximating scattered data with discontinuities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Arge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Floater</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Numerical Algorithms</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="149" to="166" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive computation and rendering of finite-time Lyapunov exponent fields. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Barakat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1368" to="1380" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Fast computation of finite-time Lyapunov exponent fields for unsteady flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Brunton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rowley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Chaos: An Interdisciplinary Journal of Nonlinear Science</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="17503" to="017503" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A computational approach to edge detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Canny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="679" to="698" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Morse set classification and hierarchical refinement using conley index</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Deng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Szymczak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="767" to="782" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Efficient computation and visualization of coherent structures in fluid flow applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Gerhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1464" to="1471" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Generation of accurate integral surfaces in time-dependent vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Krishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1404" to="1411" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<title level="m">Visualization of coherent structures in transient 2d flows. Topology-Based Methods in Visualization II</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1" to="13" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Surface techniques for vortex visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Salzbrunn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Eurographics -IEEE TCVG Symposium on Visualization</title>
		<meeting>Eurographics -IEEE TCVG Symposium on Visualization</meeting>
		<imprint>
			<date type="published" when="2004-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Detection of Lagrangian coherent structures in three-dimensional turbulence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Green</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rowley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Haller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">572</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="111" to="120" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A transfinite form of Sibson&apos;s interpolant</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Farin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">93</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="33" to="50" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Algebraic point set surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Guennebaud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page">23</biblScope>
			<date type="published" when="2007" />
			<publisher>ACM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Distinguished material surfaces and coherent structures in three-dimensional fluid flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Haller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica D: Nonlinear Phenomena</title>
		<imprint>
			<biblScope unit="volume">149</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="248" to="277" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A variational theory of hyperbolic Lagrangian coherent structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Haller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica D: Nonlinear Phenomena</title>
		<imprint>
			<biblScope unit="volume">240</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="574" to="598" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Hierarchical line integration. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hlawatsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sadlo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1148" to="1163" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">An iterative adaptive multiquadric radial basis function method for the detection of local jump discontinuities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Jung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Durante</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied Numerical Mathematics</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1449" to="1466" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Localized finite-time Lyapunov exponent for unsteady flow analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kasten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Petz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hotz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Noack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Vision Modeling and Visualization</title>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="265" to="274" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Time and streak surfaces for flow visualization in large time-varying data sets. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Krishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1267" to="1274" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The state of the art in flow visualization: Dense and texture-based techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Doleisch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Vrolijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weiskopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="203" to="221" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Topology-based flow visualization, the state of the art. Topology-based methods in visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="1" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Over two decades of integration-based, geometric flow visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mcloughlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1807" to="1829" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Improvement and parallel implementation of canny edge detection algorithm based on GPU</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Niu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE 9th International Conference on ASIC (ASICON)</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="641" to="644" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Discrete Sibson interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">W</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Linsen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Kreylos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Owens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="243" to="253" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Flow topology beyond skeletons: Visualization of features in recirculating flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sadlo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Topology-Based Methods in Visualization II</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="145" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Geometry of cross-stream mixing in a doublegyre ocean model</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Poje</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Haller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of physical oceanography</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1649" to="1665" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Feature extraction and visualization of flow fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Vrolijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Doleisch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics 2002 State-ofthe-Art Reports</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="69" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The state of the art in flow visualisation: Feature extraction and tracking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Vrolijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Doleisch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2003" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="775" to="792" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Direct least-squares fitting of algebraic surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pratt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIG-GRAPH Computer Graphics</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1987" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="145" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">2d-discontinuity detection from scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rossini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computing</title>
		<imprint>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="215" to="234" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Efficient visualization of Lagrangian coherent structures by filtered amr ridge extraction. Visualization and Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sadlo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1456" to="1463" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sadlo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
		<title level="m">Visualizing Lagrangian coherent structures and comparison to vector field topology. Topology-Based Methods in Visualization II</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="15" to="29" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Time-dependent visualization of Lagrangian coherent structures by grid advection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Sadlo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rigazzi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Peikert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Topological Methods in Data Analysis and Visualization</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="151" to="165" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Smooth stream surfaces of fourth order precision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wiebel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 11th Eurographics / IEEE -VGTC conference on Visualization, EuroVis&apos;09</title>
		<meeting>the 11th Eurographics / IEEE -VGTC conference on Visualization, EuroVis&apos;09<address><addrLine>Airela-Ville, Switzerland, Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>Eurographics Association</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="871" to="878" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Definition and properties of Lagrangian coherent structures from finite-time Lyapunov exponents in two-dimensional aperiodic flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shadden</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lekien</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marsden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physica D: Nonlinear Phenomena</title>
		<imprint>
			<biblScope unit="volume">212</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="271" to="304" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<monogr>
		<title level="m" type="main">A brief description of natural neighbour interpolation. Interpreting multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sibson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981" />
			<biblScope unit="volume">21</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">A two-stage algorithm for discontinuitypreserving surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sinha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schunck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="36" to="55" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Feature flow fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the symposium on Data visualisation 2003</title>
		<meeting>the symposium on Data visualisation 2003</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="141" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Topology tracking for the visualization of time-dependent two-dimensional flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wischgoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="249" to="257" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
