<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fast Blending Scheme for Molecular Surface Representation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Julius</forename><surname>Parulek</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrea</forename><surname>Brambilla</surname></persName>
						</author>
						<title level="a" type="main">Fast Blending Scheme for Molecular Surface Representation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:34+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Molecular visualization</term>
					<term>geometry-based techniques</term>
					<term>implicit surfaces</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Three molecular surface representations of the phospholipase (blue) bound to the lipid membrane (red) (34490 atoms in total). Left: Gaussian surface model. Middle: Our representation. Right: Solvent excluded surface model. The function evaluation of the implicit surface has linear complexity for the Gaussian model and cubic complexity for the solvent excluded surface. Our technique has linear complexity and is able to produce a surface representation that resembles the solvent excluded surface model.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The research field of computational molecular biology aims at improving the understanding of the molecular machinery of life at the highest magnification level. Molecules are not static objects and it is necessary to take their dynamics and their mutual interactions into account. Molecular interactions can be studied through the analysis of molecular dynamics (MD) simulations. The simulations result in large datasets, called trajectories, containing the sequence of molecular structures (thousands of MD structures) as they vary along the simulation time.</p><p>With respect to molecular visualization, the essential requirement is to display a large amount of atoms at interactive frame rates in order to enable the visual analysis of molecular surfaces. Moreover, simulated datasets do not longer consist of only one moderately sized macromolecules, but instead of molecular systems representing complex interactions, e.g., a phospholipid vesicle membrane together with proteins anchored in the membrane <ref type="figure">(Fig. 1</ref>). Therefore, one can easily obtain datasets where tens or hundreds of thousands of atoms are animated throughout thousands of time-steps. Computational biologists are now approaching a new level of interactive molecular dynamics that allows for changing the MD structure in real-time by utilization of coarse grained simulations <ref type="bibr" target="#b5">[6]</ref>. Here, MD datasets have to be visualized directly from the simulation: streamed molecular surface visualization. In such a case, preprocessing of frames should be eliminated and the sequence should be rendered in real-time without adopting any proxy structure, such as octree or other space partitioning schemes.</p><p>The exploratory process of MD simulation is often concerned with the visual identification of binding sites of ligands to a host macromolecule. Usually 3D molecular visualization conveys the molecular structure so that the binding sites can be located through visual inspection. The state-of-the-art molecular representation is called solvent excluded surface (SES) <ref type="bibr" target="#b32">[33]</ref>. It reveals possible binding sites by rolling a solvent (approximated by a ball of radius R) on the solvent accessible surface. The main drawbacks of the SES representation, with respect to visual exploration, are the high computational complexity and the need for substantial pre-computations <ref type="bibr" target="#b34">[35,</ref><ref type="bibr" target="#b41">42]</ref>. There are several approaches in the literature that generate and visualize the SES representation on the GPU <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b15">16]</ref>. They can achieve fast rendering performances, but they rely on pre-computations and their scalability is limited. Additionally, their primary focus is on the rendering aspects, while the actual volumetric representation still remains unsolved.</p><p>For these reasons, the Gaussian model is still preferred in practical applications. It is easier to implement, to render and it can be also easily converted to a voxel-based representation <ref type="bibr" target="#b2">[3]</ref>. However, the approximation provided by the Gaussian model does not fully imitate the solvent accessibility <ref type="bibr" target="#b16">[17]</ref>. Recently, Parulek and Viola <ref type="bibr" target="#b28">[29]</ref> introduced an implicit representation for SES. Their approach allows to perform, for instance, the voxelization of the model. However, the computational complexity still remains very high.</p><p>In our paper, we propose a new representation for molecular surfaces that is easy to implement and evaluates the molecular function locally, similarly to the Gaussian model. As a reference we take the SES representation, where we imitate the rolling of the solvent sphere using a new blending scheme. Initially our scheme blends two atoms together while computing the first and second order partial derivatives, that are later employed to iteratively merge all other atoms. Moreover, we introduce a method that efficiently visualizes such a function by means of ray-casting. We adopt the A-buffer technique <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b43">44]</ref> that lets us determine the ray-surface intersection without employing any underlying data structure. We compare our new representation qualitatively and quantitatively with the Gaussian and SES models. Our contribution can be summarized as follows: i) a new solvent excluded representation for molecular surface, that needs no pre-computations, and is free of any supporting structure, i.e., no grids nor octrees. ii) a demonstration of the potential of our approach for interactive molecular dynamics visualization, i.e., real-time adjustments of solvent radius and atom positions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>We relate our work to three areas. Firstly, we introduce techniques of molecular representation and visualization. Secondly, we describe implicit modeling techniques. Finally, we present real-time rendering techniques of implicit surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Representation of Molecular Surfaces</head><p>There are several types of molecular surface representations that can be found in the literature. Due to space limitation, we address only the ones closely related to our technique. One of the basic representations is given by depicting the atoms as spheres. The radius of the spheres corresponds to the so-called van der Waals force (vdW surface) <ref type="bibr" target="#b20">[21]</ref>. The extension of spherical radii by a solvent radius R is called solvent accessible surface, and it provides information about the areas accessible to a solvent molecule of radius R. Closely related to the solvent accessible surface is the SES representation. It is formed by rolling a sphere of radius R (the solvent), over the vdW spheres, while its center lies on the boundary of the solvent accessible surface <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b9">10]</ref>. The SES is the most widely used representation for binding site analysis. However, due to its high-computational cost, convolution kernels are frequently preferred <ref type="bibr" target="#b35">[36]</ref>.</p><p>One of the most popular kernels with respect to molecular surfaces is based on the Gaussian model <ref type="bibr" target="#b2">[3]</ref>. Our approach does not involve a kernel function, but instead it iteratively blends atoms together according to the solvent sphere radius. We develop a method that efficiently incorporates the solvent sphere and, at the same time, retain interactivity. In 2007, Bates et al. <ref type="bibr" target="#b1">[2]</ref> described a method that generates the molecular surface by means of curvature minimization. This entire approach requires a grid representation of the molecular structure, where the surface is iteratively minimized by computing eigenvalues of Hessian matrices. In contrast, in our blending scheme, we specify one of the surface principal curvatures using the circular model directly.</p><p>There has been a lot of effort put into efficient generation and visualization of SES in the literature. In 1983, Connolly <ref type="bibr" target="#b4">[5]</ref> proposed an analytical description of the SES representation. More than ten years later, Sanner et al. <ref type="bibr" target="#b34">[35]</ref> presented the reduced surface algorithm for construction of SES. In the same year, Totrov and Abygyan introduced the contour-buildup algorithm <ref type="bibr" target="#b41">[42]</ref> to form the SES representation, which was later optimized and parallilized by Lindow et al. <ref type="bibr" target="#b21">[22]</ref>. The visualization is then performed using a ray-casting method. Recently, Krone et al. <ref type="bibr" target="#b17">[18]</ref> improved the computation of the contour-buildup algorithm. In 2009, Krone et al. <ref type="bibr" target="#b15">[16]</ref> also introduced the utilization of the reduced surface method for direct ray-casting of molecular surfaces. Both these GPU techniques focus only on rendering aspects, and build quadric and quartic primitives prior to surface rendering.</p><p>In 2012, Parulek and Viola <ref type="bibr" target="#b28">[29]</ref> proposed an algorithm that computes a signed distance to the SES representation. Their approach provides direct computation and visualization of the molecular surface. Nevertheless, the implicit function evaluation at a given point has cubic time complexity, which limits the interactive performance. Moreover, it also requires an underlying data structure to hold the atom locations. In our approach the function evaluation complexity is linear. Additionally, no supporting data structure is required, which allows us to instantly render molecular surfaces from a given set of atoms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Modeling through Implicit Space</head><p>Implicit surfaces (implicits) provide a way to easily model biological structures <ref type="bibr" target="#b6">[7]</ref>. They naturally enable modelling of smooth objects in a convenient way.</p><p>The set of techniques, known today as implicit modeling, was proposed for the first time by Blinn <ref type="bibr" target="#b2">[3]</ref>. Blinn introduced the Gaussian convolution kernel in order to blend atom potentials. Later on, Pasko et al. generalized the representation of implicits, by combination of the different forms of implicit models <ref type="bibr" target="#b29">[30]</ref>. This generalization was described by the inequality f (x) ≥ 0. This predicate describes an implicit solid object, where</p><formula xml:id="formula_0">x = (x 1 , x 2 , x 3 ) ∈ R 3 .</formula><p>Function f is called implicit surface function (implicit function), and it classifies the space into two half-spaces, i.e., f (x) &gt; 0 and f (x) &lt; 0. We employ this representation to form the molecular surface function. The major advantage is the possibility to build more complex objects using binary operators, such as union or intersection <ref type="bibr" target="#b7">[8]</ref>. More advanced modeling techniques use the so-called implicit space, proposed by Barthe et al. <ref type="bibr" target="#b0">[1]</ref>. A user can interactively sketch the required shape modifications in the space formed by the potential fields of both input functions,</p><formula xml:id="formula_1">I 2 = [ f 1 (x), f 2 (x)].</formula><p>Nevertheless, this method does not reflect the mutual orientation and position of the objects at a given point x. In 2008, Fayolle et al. <ref type="bibr" target="#b7">[8]</ref> proposed a method that computes a correct distance surface measure for CSG operations in I 2 . However, the obvious limitations are the same as in the work of Barthe et al. <ref type="bibr" target="#b0">[1]</ref>. In 2012, Gourmel et al. <ref type="bibr" target="#b8">[9]</ref> introduced a technique that allows to specify the final surface shape according to the function values and also their gradients. In our approach, we use I 2 to form a circular model based on the radius R and the gradients of both input objects. Therefore, the work of Gourmel et al. is related to ours in terms of gradient-based modeling. Their work was primarily focused on merging two objects only, while blending more than two objects was just sketched, and thus remained unsolved. Here we propose how to solve the blending between multiple objects that in our case are molecular atoms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Real-time Rendering of Implicit Objects</head><p>In order to visualize models based on implicits, one can convert them to a mesh representation and later render them as a set of patch primitives <ref type="bibr" target="#b23">[24]</ref>. For instance, efficient triangulation of SES was proposed by Ryu et al. <ref type="bibr" target="#b33">[34]</ref>. However, when dealing with complex models and shapes such as molecular surfaces, we would need to generate millions of triangles in order to obtain a fully detailed surface representation. Therefore, with the recent advancements of GPU hardware, researchers turned to direct visualization techniques, in particular to raycasting methods. Since implicts encompass different forms of geometrical models, the various ray-casting methods are designed according the type of the implicit that has to be rendered. The ray-casting of SES presented by Krone et al. <ref type="bibr" target="#b15">[16]</ref> and Lindow et al. <ref type="bibr" target="#b21">[22]</ref> is performed by ray-tracing quadrics, after the molecular surface has been decomposed into set of basic spherical and toroidal primitives. In general, the ray-casting of algebraic surfaces, such as quadrics, is extensively covered by the computer graphics literature and goes back several decades. Hanrahan introduced ray-casting of algebraic implicit models up to the fourth order <ref type="bibr" target="#b10">[11]</ref>. Later work addressed ray-casting of large number of quadrics on GPU aimed at molecular visualization as well <ref type="bibr" target="#b40">[41,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b22">23]</ref>. Later on, Sigg et al. <ref type="bibr" target="#b36">[37]</ref> introduced very fast GPU rendering of spheres, ellipsoids and cylinders, focusing mainly on molecular rendering.</p><p>In 1994, Hart introduced a more robust approach for ray-casting of distance-based implicit surfaces called sphere tracing <ref type="bibr" target="#b11">[12]</ref>. Hart's technique is efficient and easy to implement. So, since we also deal with distance-based implicit functions, we included it in our pipeline.</p><p>Several studies address ray-casting of general implicit surfaces on the GPU using interval arithmetic <ref type="bibr" target="#b14">[15]</ref>. Nevertheless, interval arithmetic requires the definition of dedicated mathematical operators, which is very challenging when dealing with compound objects. Another GPU-based ray-casting of implicits is achieved via the adaptive marching point method <ref type="bibr" target="#b37">[38]</ref>. However, this method assumes the function is defined globally, whereas our function is computed only locally.</p><p>The fast rendering of metaballs on GPU hardware was proposed by Szecsi and Illes <ref type="bibr" target="#b38">[39]</ref>, which employs the A-buffer technique or fragment linked list. Here we present a similar approach, although the function computation is different, since, in their work, the main goal was to render molecules defined by blobby objects. Additionally, they assume that the scene is already ordered. In contrast, we make no assumptions regarding ordering, and our rendering parameters defining the molecular surface can be varied arbitrarily.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PROPOSED APPROACH</head><p>MD datasets are composed of a large set of atoms describing the structure of one or more molecules. Specifically, let m be the number of atoms in a dataset. The atom i ∈ {1, 2, . . . , m} is described by its center c i ∈ R 3 and the corresponding van der Waals radius r i ∈ R.</p><p>We define a set of m implicit functions</p><formula xml:id="formula_2">G = {g 1 , g 2 , . . . , g m }, such that g i (x) = r i − ||x − c i ||,<label>(1)</label></formula><p>with x ∈ R 3 . Then, every atom i can be represented by the iso-surface g i (x) = 0 of the corresponding implicit function. Each function g i is a distance function and it divides the spatial domain into two halfspaces: the interior of the atom (g i (x) ≥ 0) and the exterior (g i (x) &lt; 0). From now on, when the meaning is clear, we will not specify the spatial location x, e.g., we will write</p><formula xml:id="formula_3">g i = 0 instead of g i (x) = 0.</formula><p>We define an implicit function l : R 3 → R such that the iso-level l = 0 represents the surface of the molecule. For a given point x, l(x) expresses a distance measure of the point x from the molecular surface, with positive values inside and negative values outside the molecule. The function l(x) is evaluated locally by blending a subset G x ⊆ G of the atom functions according to the solvent radius R. At a given location our blending scheme requires the gradient ∇g i and the Hessian H g i of each atom function g i . The whole computation process is iterative, and the gradient ∇l and the Hessian H l of function l have to be evaluated at each iteration (Alg. 1).</p><p>Algorithm 1 Evaluation of the implicit function for a point x. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1: build the set of atoms</head><formula xml:id="formula_4">G x = {g 1 , g 2 , . . . , g n } affecting x (Eq. 4) 2: for each g i ,</formula><formula xml:id="formula_5">v = (x − c i ). Then, the gradient of an atom function g i is ∇g i (x) = 1 |v| [v x , v y , v z ] T .<label>(2)</label></formula><p>The Hessian H g i , instead, is the matrix of second order partial derivatives</p><formula xml:id="formula_6">H g i (x) = 1 |v| 3 2   −(v 2 y + v 2 z ) v x v y v x v z v x v y −(v 2 x + v 2 z ) v y v z v x v z v y v z −(v 2 x + v 2 y )   . (3)</formula><p>The algorithm begins by determining the set of atoms G x ⊆ G that may affect the function value in x (line 1). This is in analogy to the Gaussian representation, which takes into account only the atoms within the area of influence of the Gaussian kernel. More details are provided in Section 3.1.</p><p>The function l is then evaluated by looping over the set G x . At every iteration, a new atom g i ∈ G x is taken into account. A simple test (line 5) determines if g i has to be blended with the current function l. If the test is passed, the merging procedure is carried out. The blending scheme is based on the implicit space approach: the two functions are blended by an implicit circle whose radius is defined by the solvent radius R (Sec. 3.3). This results in a new function value representing a distance measure to the spherical blend of both input functions. The computation involves the gradient ∇l and the Hessian H l of the current function. These values have to be updated every time a new atom is blended, since they will be required in the next iteration (Sec. 4).</p><p>The computation of l is performed on the fly during ray-casting. After l is evaluated at a location x, the ray-casting procedure continues and the ray advances to the next point. The intersection between the ray and the molecular surface is detected when the value of l(x) is close to 0 (up to a small threshold). We based our ray-casting procedure on the A-buffer technique, since it allows for fast empty space skipping. Moreover, it lets us determine the set of relevant atoms G x in a simple and efficient way (Sec. 5.1).</p><p>The ray-casting algorithm is implemented in CUDA and runs in parallel on the GPU. Ray-traversal and the consequent function evaluations are performed for every image pixel. Finally, according to the evaluated function values, depth and normals/gradients, we compute shading, silhouettes and depth enhancement by means of screen space ambient occlusion <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Relevant Atoms</head><p>The set G x = {g 1 , g 2 , . . . , g n } is given by all the atoms that may affect the value of the target function l at point x. Specifically, G x is constituted by the functions g i such that x lies within a distance of 2R from the iso-surface g i = 0, i.e.,</p><formula xml:id="formula_7">G x = {g i |g i (x) ≥ −2R}.<label>(4)</label></formula><p>An example of this can be seen in <ref type="figure" target="#fig_0">Figure 2</ref>. The definition of G x is directly derived from the detection of two incident atoms, which holds if ||c i − c j || − r i − r j ≤ 2R. This property was already shown by Varshney et al. <ref type="bibr" target="#b42">[43]</ref>. Before initiating the main loop, in order to improve efficiency, each function g i is evaluated in x. The gradients ∇g i and the Hessians H g i are computed as well.</p><p>Function l is computed iteratively, so its initial value (and the initial values of its gradient and Hessian) has to be set. Theoretically, any g i ∈ G x could be used for the initialization l. However, we obtain better results if we use the function g i with the highest value, i.e., the one corresponding to the closest atom to x. This difference is related to the approximation scheme adopted for the higher order derivatives (see Section 4.2).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Implicit Space Model</head><p>For the sake of simplicity, let us first focus on the case where only two atoms are contributing to the evaluation of l. Let f and g be the implicit functions representing the two atoms, that is G x = { f , g}. Our goal is to determine the new value of l by blending f and g in a way that resembles rolling a ball of radius R. This is achieved by performing a circular blend in the so-called implicit space <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b7">8]</ref>. The current point x is mapped to a bi-dimensional space where each axis represents one of the participating functions. In our case, the implicit coordinates of point the</p><formula xml:id="formula_8">x are [ f (x), g(x)].</formula><p>The direct way of computing the union of two implicit functions at x is to take the maximum of the values of the two functions. However, this approach generates sharp discontinuities, as shown in <ref type="figure" target="#fig_1">Figure 3</ref> (top). In the implicit space, our goal can be reformulated as defining an implicit function that smoothly blends the iso-lines of f and g according to a circle of radius R. It is also required that the shape of the circular blend is preserved for every iso-level ( <ref type="figure" target="#fig_1">Fig. 3 bottom-right)</ref>. Such a function can be constructed by sweeping an implicit circle of radius R along the line f = g, passing through the origin. We express the center of this circle as (l − R, l − R). Then the circle is given by the equation:</p><p>(</p><formula xml:id="formula_9">f − (l − R)) 2 + (g − (R − l)) 2 = R 2 .</formula><p>Here l represents the distance of the current point from the circumference, which is also the value we need to express. For more designing principles, we refer the readers to the study of Fayolle et al. <ref type="bibr" target="#b7">[8]</ref>. Solving the previous equation for l yields two solutions:</p><formula xml:id="formula_10">l = 1 2 ( 2R + f + g ± √ 2R 2 − ( f − g) 2 ) .<label>(5)</label></formula><p>It is sufficient to consider only the top-right circular section ( <ref type="figure" target="#fig_1">Fig. 3</ref> bottom-right), which is represented by the smaller of both distances, i.e., the one with the minus sign in Equation 5. Additionally, Equation 5 has to be evaluated only for points that lie between the two dark blue lines <ref type="figure" target="#fig_1">(Fig. 3)</ref>. Outside this area we employ the direct union operator max( f , g) in order to merge the two functions. This test corresponds to line 5 of Algorithm 1. In order to evaluate this condition, the following inequalities have to be fulfilled: f ≤ g + R and g ≤ f + R. For simplicity, they can be put together into a single predicate:</p><p>( <ref type="figure" target="#fig_1">Figure 3</ref> (bottom-left) shows the result of this approach when merging two atoms. Although the iso-contour of f is indeed smooth, the curvature increases as the iso-contour approaches the area lying inbetween the circles. This distortion is due to the fact that the implicit space model does not take into account the actual spatial relationship between the two input functions. Additionally this causes holes <ref type="figure">(Fig. 5  left)</ref> for atoms having their iso-contours separated by a distance within [R, 2R], while they should be merged.</p><formula xml:id="formula_11">f (x) − g(x)) 2 R 2 ≤ 1.<label>(6)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Model Scaling</head><p>One of the possible ways to overcome this issue is to adaptively scale the radius R. We propose to encode the information regarding the spatial relationship between the functions using the dot product of their gradients, i.e., k(x) = ∇ f (x) • ∇g(x). The utilization of gradients to encode spatial relationships has been already proved to be efficient for implicit modeling <ref type="bibr" target="#b8">[9]</ref>. We replace the constant radius R with the function r(x) = Rr k (x), where r k : [−1, 1] → R depends on the dot product k. The radius scaling function r k affects the curvature of the blending regions. It can be defined in different ways, but it has to satisfy the following constraints. Since we have to compute its second derivatives (Sec. 4.1), r k must be at least C 2 continuous. It should be monotonically decreasing, because the radius should decrease as the angle between the gradients gets smaller (and vice versa). Finally, the scaled radius should be positive, therefore r k must be positive as well in [−1, 1]. According to these constraints, we set</p><formula xml:id="formula_12">l(x) l(x) [-R,-R]</formula><formula xml:id="formula_13">r k (x) = 1 − sin ( π 4 k(x) ) ,<label>(7)</label></formula><p>which we found suitable for mimicking the SES representation (Sec. 6). <ref type="figure" target="#fig_2">Figure 4</ref> (left) shows a plot of r k against the values of the dot product, while <ref type="figure" target="#fig_2">Figure 4</ref> (right) shows r k (x) with respect to the two atom examples of <ref type="figure" target="#fig_1">Figure 3</ref>. We replace R with r(x) in Equations 5 and 6. Using the scaled radius, our target function l becomes l = 1 2</p><formula xml:id="formula_14">( 2r + f + g − √ 2r 2 − ( f − g) 2 ) .<label>(8)</label></formula><p>By applying Equation 8 to the example in <ref type="figure" target="#fig_1">Figure 3</ref>, the resulting function is shown in <ref type="figure" target="#fig_2">Figure 4</ref> (bottom). Now, in the situation when the distance between the iso-contours is within [R, 2R], Equation 8 correctly produces a smooth blend between the two atoms ( <ref type="figure">Fig. 5 right)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ITERATIVE REPRESENTATION</head><p>The previous considerations are limited to the simple case of two atoms. When the set G x includes more than two atoms, we propose to compute l using an iterative approach. The basic idea is to start from a single atom. Then, at every iteration, a new function from G x is blended with the current function, according to the implicit space model. In practice, we are iteratively  <ref type="formula" target="#formula_13">7</ref>applied to the dot product of both input gradients. Top-right: Depiction of the function r k in R 2 . Note the way how the function/radius increases (the arrow) towards the line segments connecting both sphere centers (line segment). Bottom: An example of the final iso-contour obtained by the scaled radius r k for the same spheres as in <ref type="figure" target="#fig_1">Figure 3</ref>. The area of influence (6) is marked by two vertical curves.</p><p>evaluating Equation 8, and every time we replace f with the function computed in the previous iteration.</p><p>Formally, given the set of relevant atom functions G x = {g 1 , g 2 , . . . , g n }, we consider a series of functions {l 1 , l 2 , . . . , l n }. The i-th function l i is given by the iterative blending of the functions {g 1 , g 2 , . . . , g i }. Therefore, the n-th function l n corresponds to our target function l.</p><p>As mentioned before, we start the iteration from the atom closest to the point x. Therefore, without loss of generality, we assume that the first function g 1 represents such an atom. We start by setting l 1 = g 1 , ∇l 1 = ∇g 1 and H l 1 = H g 1 . Then, at each iteration, l i is computed according to Equation 8 with f = l i−1 and g = g i :</p><formula xml:id="formula_15">l i = 1 2 ( 2r + l i−1 + g i − √ 2r 2 − (l i−1 − g i ) 2</formula><p>) .</p><p>The main difference is that, after the first iteration, function f does not represent an atom but a compound object, so we cannot evaluate it according to Equation 1. Similarly, we cannot use Equation 2 to compute its gradient, but we have to define a proper formula. It is worth pointing out that, at every iteration, the predicate of Equation 6 has to be evaluated using the atom g i and the previous function l i−1 . If the condition is not satisfied, g i is not taken into account. In rare cases, it may happen that the test fails because l i−1 has not been fully evaluated yet. This issue can be simply addressed by iterating over G x one more time. During this second pass, l n has been already computed, so the functions g i , that were incorrectly excluded, will now be correctly taken into account.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Derivatives of l</head><p>Let us have a closer look at a single iteration i. For the sake of simplicity, in the following discussion we adopt the notation of Equation 8. We refer to the current function l i as l, to the previous function l i−1 as f , and to the current atom g i as g. In every single iteration, our goal is to compute l(x). The function l depends on the scaled radius function r, which in turn depends on the dot product k = ∇ f • ∇g. Since g = g i represents an atom, ∇g can be computed analytically (Eq. 2). On the other hand, ∇ f = ∇l i−1 is the gradient of l from the previous iteration, so it has to be computed iteratively. Since l is a composite function, its derivation is based on the chain rule:</p><formula xml:id="formula_17">dl dx = ∂ l ∂ f d f dx + ∂ l ∂ g dg dx + ∂ l ∂ r dr dx .<label>(10)</label></formula><p>Switching to the nabla notation, and taking into account that r is a function of the dot product k, Equation 10 can be rewritten as:</p><formula xml:id="formula_18">∇l = ∂ l ∂ f ∇ f + ∂ l ∂ g ∇g + ∂ l ∂ r ∂ r ∂ k ∇k.<label>(11)</label></formula><p>The partial derivatives of l are obtained deriving Equation 8:</p><formula xml:id="formula_19">∂ l ∂ f = ∂ l ∂ g = 1 2 ( 1 + ( f − g) q ) , ∂ l ∂ r = ( 1 − r q ) , where q = √ 2r 2 − ( f − g) 2 .</formula><p>The partial derivative of r depends on how r k is defined, and in our case (Eq. 7) it is given by</p><formula xml:id="formula_20">∂ r ∂ k = − πR 4 cos ( π 4 k ) .</formula><p>Finally, the gradient ∇k can be obtained by applying the derivation rule for the dot product <ref type="bibr" target="#b19">[20]</ref>:</p><formula xml:id="formula_21">∇k = ∇ (∇ f • ∇g) = H f ∇g + H g ∇ f ,<label>(12)</label></formula><p>where H f and H g are the Hessian matrices of function f and g respectively.</p><p>In analogy with the gradients, H g can be computed analytically (Eq. 3). In contrast, H f should be computed iteratively and the resulting formula would include third order derivatives. In other words, the exact evaluation of l i requires derivatives up to order i − 1 from the previous iterations.</p><p>It is worth mentioning that the product H f ∇g could be computed directly using the algorithm proposed by Pearlmutter <ref type="bibr" target="#b30">[31]</ref>. However, his approach is based on special differential operators applied in an iterative manner. This would mean evaluating a whole iterative procedure every time a new function g i is taken into account, resulting in a drastic loss of performance. <ref type="figure">Fig. 5</ref>. Two atoms whose iso-contours are separated by a distance between R and 2R. Using the constant radius R (Eq. 5), the two atoms will not blend. When applying the scaled radius (Eq. 8), the correct blended surface is obtained. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Approximated Evaluation</head><p>Dealing with derivatives of arbitrary order is highly challenging, especially when real-time performance is a requirement. However, we do not need an exact evaluation of the function l: since thousands of atoms are shown simultaneously, the global structure of the molecule is much more relevant than the fine details. We can achieve different trade-offs between accuracy and performance (and memory consumption) simply disregarding the derivatives from a certain order on.</p><p>A first rough approximation can be obtained by neglecting the second order derivatives, i.e., setting H f (x) = H g (x) = 0. In practice, we are implicitly assuming that the gradients ∇ f (x) and ∇g(x) do not change within an infinitesimal neighborhood. Consequently, their dot product k(x) does not change as well, which means ∇k(x) = 0. The result obtained from this approximation can be seen in <ref type="figure" target="#fig_3">Figure 6</ref> (left). The global structure of the molecule is well conveyed, and the typical blobby appearance of the Gaussian representation is avoided (compare with <ref type="figure">Figure 1 left)</ref>.</p><p>The red circle in <ref type="figure" target="#fig_3">Figure 6</ref> (left) shows a 3x magnification of a small area of the molecule. The connections between atoms present small discontinuities, which are due to the approximation scheme. Since higher magnification levels are sometimes required for specific tasks, such as cavity inspection and analysis, it is worth investigating better approximations.</p><p>Second order derivatives can be also computed. The Hessian H g can be computed analytically according to Equation 3. In contrast, H f = H l i−1 is the Hessian of our iterative function l, so it has to be computed iteratively as well. The components of the Hessian H l are given by the second derivatives of l:</p><formula xml:id="formula_22">H i j l = d 2 l dx i dx j = d dx i ( dl dx j</formula><p>) .</p><p>In practice, we have to derive once again the gradient ∇l, given by Equation 11. Applying again the chain rule, H l can be rewritten as:</p><formula xml:id="formula_23">H l = ∂ l ∂ f H f + ∂ l ∂ g H g + J TḢ l J + ∂ l ∂ r ∂ 2 r ∂ k 2 ∇k (∇k) T + ∂ l ∂ r ∂ r ∂ k H k ,<label>(13)</label></formula><p>where J is the matrix obtained from function gradients taken column-wise</p><formula xml:id="formula_24">J = [ ∇ f , ∇g, ∂ r ∂ k ∇r ] ,</formula><p>andḢ l is the symmetric matrix of second partial derivativeṡ</p><formula xml:id="formula_25">H l =     ∂ 2 l ∂ f 2 ∂ 2 l ∂ f ∂ g ∂ 2 l ∂ f ∂ r . ∂ 2 l ∂ g 2 ∂ 2 l ∂ g∂ r . . ∂ 2 l ∂ r 2     = 1 q 3   r 2 −r 2 −r( f − g) . r 2 r( f − g) . . ( f − g) 2   .</formula><p>The second derivative of r is in our case</p><formula xml:id="formula_26">∂ 2 r ∂ k 2 = π 2 R 16 sin ( π 4 k ) .</formula><p>The last unknown variable in Equation 13 is the Hessian H k of the gradients' dot product k. It can be computed by applying the derivation rules for sum and product to the right-hand side of Equation 12:</p><formula xml:id="formula_27">H k = d dx (∇k) = dH f dx ∇ f + dH g dx ∇g + 2H f H g ,</formula><p>which includes third order derivatives. At this point, we can define a new approximation scheme by neglecting the third order derivatives. In practice, we compute the Hessian of k as H k = 2H f H g . <ref type="figure" target="#fig_3">Figure 6</ref> (right) shows a result obtained with this approximation: the surface has a smoother appearance and, even when magnified, no significant discontinuities can be detected.</p><p>Notice that the actual difference between this and the previous approximation scheme is the evaluation of Equation 13. We have implemented our technique on the GPU, which is particularly efficient in handling vector and matrix operations, therefore there is just a slight decrease in performance. But most importantly, the computational complexity of the algorithm is unchanged.</p><p>Considering also third or higher order derivatives may lead to even smoother results. However, deriving the necessary equation would be increasingly challenging, while the actual visual improvements would be smaller and smaller.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">VISUALIZATION</head><p>We describe a method to visualize our molecular function instantly using the well-known A-buffer technique. Afterwards, we discuss the benefits for MD and also the potential for interactive MD.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Ray-casting</head><p>Since the molecular representation is evaluated on the fly, the rendering pipeline consists of several steps. In the first one, we render the van der Waals atoms as spheres with an increased radius that defines their area of influence <ref type="figure">(Fig. 7)</ref>. This area is defined by the solvent diameter 2R, i.e., each atom is rendered as a sphere with its van der Waals radius increased by 2R. We do not perform sphere ray-casting, we just quickly splat spheres using billboarding <ref type="bibr" target="#b39">[40]</ref>. The splatted spheres are not displayed, but stored in the so-called A-buffer <ref type="bibr" target="#b3">[4]</ref>. For each pixel of the image space sphere, the correct entry and exit depths are computed and stored <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b26">27]</ref>. The implementation exploits the recent shader extension that allows to simultaneously read and write data in 2R X <ref type="figure">Fig. 7</ref>. An illustration of the ray-casting procedure based on the A-buffer. The entry and exit point of the extended spheres can be located along the ray (black and red lines). Therefore, at any location along the ray the set of influencing atoms G x can be easily computed. For example, point X (blue point) is affected by the two pink atoms. Ray-casting starts from the first sphere along the ray (yellow point). When a point is in an area not affected by any atom, it is automatically shifted to the first unprocessed atom boundary along the ray (orange point). the fragment shader. Essentially, the A-buffer is a linked list of fragments generated for every individual pixel using atomic operations on the GPU <ref type="bibr" target="#b43">[44]</ref>. Here, the limitation is the amount of graphics memory, since the linked lists can become very long for large datasets. This can be easily solved by avoiding rendering all the atoms at once, but rather render them in a slab-wise fashion.</p><p>In the second step, before the actual ray-casting, we sort the fragment records in ascending order of entry depth. This is a worthy investment, since, when looking for the ray-surface intersection, it lets us easily identify the relevant atoms ( <ref type="figure">Fig. 7 vertical lines on the ray)</ref>.</p><p>In the third step, the A-buffer is rendered. Here, a ray is cast for each image pixel, and an input 3D point x is generated according to the entry depth of the first sphere <ref type="figure">(Fig. 7, yellow point)</ref>. Afterwards, in analogy with the sphere tracing algorithm <ref type="bibr" target="#b11">[12]</ref>, we process the ray in a step-wise fashion until either the iso-surface is hit, or the last sphere exit depth is reached. The step size is determined by the approximated distance function value s = l(x)/|∇l(x)|. Additionally, when the ray is in an area where no sphere of influence is present, it is automatically advanced to the first unprocessed sphere along the ray, i.e., the next one in the linked list <ref type="figure">(Fig. 7, orange point)</ref>. This allows us to perform empty space skipping very efficiently.</p><p>The precision threshold used to detect the ray-surface intersection (|l| ≤ ε) drives the overall performance of the rendering. It is crucial to specify the threshold value ε reasonably in order to maintain the surface details, especially for areas close to the viewer. On the other hand, we can afford a lower precision for areas far away from the viewer. Therefore we adjust ε adaptively according to the depth of the current point x. We set ε = ε 0 d(x)/(2c), where d(x) is the ray depth of the point x, c represents the camera distance to the projection plane and ε 0 is the overall iso-surface precision. In our demonstrations we specify ε 0 = 0.1R, where R is the solvent radius.</p><p>When the surface is hit, we compute the Phong shading model.</p><p>Additionally, we compute silhouettes using edge-detection in image space. In the last step of our rendering pipeline, we add screen space ambient occlusion based on the method proposed by Luft et al. <ref type="bibr" target="#b24">[25]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Molecular Dynamics</head><p>We demonstrate the potential of our approach to visualize the structures of MD simulations. We employ the Protein Data Bank (PDB) file format, which stores the protein information (e.g., atom types and initial positions). The MD trajectories of the atoms are stored in the DCD file format that is a standard in the Visual Molecular Dynamics (VMD) tool <ref type="bibr" target="#b12">[13]</ref>. We studied two MD datasets, one containing only Proteinase 3 (Pr3, 3523 atoms) <ref type="figure" target="#fig_4">(Fig. 8 top)</ref> and one where Pr3 is bound to a lipid membrane (34490atoms) <ref type="figure">(Fig. 1)</ref>. These datasets are composed by thousands of timesteps, therefore it can be difficult to identify the ones containing features of interest. In order to visualize a molecular surface, the proposed approach simply requires to upload the corresponding set of atoms to the GPU. Therefore, our system can be used as a tool for browsing through large temporal datasets (see the attached video). The only limitation here is given by the time required to upload the large amount of data to the GPU. Thanks to the lack of pre-computations, our approach can be potentially integrated into steering systems for MD simulations. The area studying interactive steering of molecular dynamics is called interactive molecular dynamics <ref type="bibr" target="#b5">[6]</ref>. The goal is to provide instant feedback from the MD simulation, so that a domain expert can interactively tune, for example, simulation parameters, the molecular context and the environment. We do not have access to such simulation systems yet, therefore, in order to imitate the changes of MD structures, we simply apply a random motion to each atom. Through a simple user interface, we can add a small displacement to the positions of the atoms. As shown in the enclosed video, the updated molecular representation is instantly visualized. An example illustrating the instant update of the MD structure is shown in <ref type="figure" target="#fig_4">Figure 8</ref> (top).</p><p>Our technique also allows to interactively configure the molecular representation. In MD applications, the solvent radius is typically set to approximate the size of the water molecule (R = 1.4Å). Our method allows to change the radius on real-time basis. Typically, existing approaches have to firstly update underlying support structure, and then recompute the surface primitives, either by reduced surface <ref type="bibr" target="#b15">[16]</ref> or Voronoi diagrams <ref type="bibr" target="#b21">[22]</ref>. In our case, we just need to splat again the extended spheres using the updated solvent diameter 2R. A demonstration of increasing the solvent radius is depicted in <ref type="figure" target="#fig_4">Figure 8</ref> (bottom).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">QUANTITATIVE AND QUALITATIVE COMPARISON</head><p>We compare our technique with Gaussian and SES models via visual comparison and in terms of frames per second (FPS). We also compute volumes and surface areas of all the three representations, in order to provide a quantitative comparison. We considered the following biomolecular structures:  <ref type="figure" target="#fig_7">Figures 1 and 10</ref> showcase the three molecular surface models in a side-by-side visualization. Our technique is in the middle. The first noticeable difference is that the sharp surface features present in the SES model ( <ref type="figure" target="#fig_7">Fig. 10 right)</ref> appear often smoothed in our model. This is a direct consequence of the definition of our implicit surface, since Equation 9 cannot represent sharp discontinuities. On the other side, compared to the Gaussian model, our representation approximates the solvent radius more closely. We discussed our results with computational biologists. The most relevant point they raised was that our visualization provides sufficient details with respect to binding site exploration. More specifically, the information conveyed by our model is equivalent to the one provided by the SES representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Visual Comparison</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Performance</head><p>We evaluated the performance of our approach on several static structures and MD simulations. We implemented our framework in Python, utilizing the pyCUDA and PyOpenGL libraries for the implementation of the GPU-based ray-casting algorithm. In order to achieve better performance, we plan to migrate our framework to C++.</p><p>It is important to mention here that the existing rendering approaches <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b21">22]</ref> can achieve higher FPS compared to our approach, since they rely on pre-computed auxiliary primitives that are then efficiently rendered. On the other hand, due to the simple volumetric representation, it is possible to voxelize our implicit function into a 3D scalar grid, which then can be efficiently rendered via marching cubes on the GPU, similarly to Krone et al. <ref type="bibr" target="#b18">[19]</ref>.</p><p>Nevertheless, we are able to achieve interactive frame rates via raycasting even for very large proteins <ref type="figure">(Fig. 9)</ref>. The performance measurements were carried out on a workstation equipped with two 2GHz processors, 12GB of RAM and a NVIDIA GeForce GTX 680 GPU. We implemented the Gaussian model <ref type="bibr" target="#b2">[3]</ref> and the full SES representation <ref type="bibr" target="#b28">[29]</ref> in the same framework, and we computed them on the same workstation. We evaluated the performance on six proteins, with the solvent radius set to the approximate size of the water molecule, i.e., R = 1.4Å. Please note that the A-buffer is re-created every time the scene is rendered. The performance results, including the A-buffer formation, are summarized in the following table (in FPS): Note that our framework shows almost the same performance for either small (such as (e)) or large molecules (such as (d)). This can be explained by the actual size of the A-buffer. Some molecules can occupy the buffer evenly, while others can lead to unbalanced fragments min(r) max(r) <ref type="figure">Fig. 9</ref>. Visualization of asymmetric chaperonin complex (58674 atoms) and bacteriophage containing 5 monomers (150720 atoms). Even for these large molecules, we are still able to achieve 9 and 4 FPS respectively. The colors represent the scaled radius r of the implicit circle.</p><p>distributions, causing bottlenecks for certain pixel areas. When compared to the Gaussian model, our technique is almost at the same level of performance. On the other hand, the improvement with respect to the implicit SES representation is at least by factor of 2. Domain experts found this level of interactivity satisfactory. Although they have not been provided with the tool yet, they positively commented our demonstrations. They stated that our model has a strong potential with respect to the interactive update of MD structures and the rapid browsing through large temporal datasets. They compared our system with the tool they normally use, i.e., VMD. They found our models on the same qualitative level as the ones obtained with VMD. Moreover, in VMD, it is necessary to wait until the model is polygonized for each simulation time step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Volume and Surface Areas</head><p>We performed a quantitative model verification by computing two global surface measures. Specifically, we computed the volumes and the surface areas of the molecular representations for each of the three models. Note that the evaluation of local shape measures, such as the mean or Gaussian curvature, would require the definition of a molecular metric for the curvatures. To the best of our knowledge, there is no literature describing such a measure.</p><p>A possible way to compute volume and surface area is to convert the functional representation into a volumetric one. However, this would require a very high grid resolution in order to achieve the necessary level of detail. In the case of large molecules the resulting grid would be massive and consequently difficult to handle. Therefore we opted for an evaluation based on Monte-Carlo integration techniques. The basic idea is to approximate the volume and surface integrals by evaluating the implicit function in randomly placed sampling points. The points are normally generated within a bounded region, e.g., the bounding box of the molecule <ref type="bibr" target="#b25">[26]</ref>. The estimated volumes and surface areas are summarized in the following tables:</p><p>Vol We observe that our model is very similar to SES with respect to volumes. The surface area is instead slightly underestimated, but, on average, much closer to the SES than the Gaussian model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">SUMMARY AND FUTURE WORK</head><p>We proposed a conceptual framework for representing an approximation of the solvent excluded molecular surfaces. The core of our system is a blending operator defined by a circular model in implicit space. We compared our model qualitatively and quantitatively with the Gaussian and the SES representations. The comparisons showed that our technique is better than the Gaussian in approximating the SES model. At the same time, the rendering performance of our technique is much better than the SES and it approaches the same frame rates of the Gaussian.</p><p>The necessary mathematical foundations has been discussed and the resulting equations are described throughout the paper. Therefore, re-implementing our function evaluation procedure is straightforward.</p><p>One of the disadvantages is that our representation does not match any specific physical property of the model: while the SES correctly conveys the rolling of the solvent sphere, we just provide an approximation of the solvent radius.</p><p>As a next step, we believe that our model can be reformulated as a convolution-based approach. The related kernel would take into account the two areas of influence defined by 2R and by Equation 6. This will be subject of future investigations.</p><p>Our system allows for the immediate visualization of MD structures as molecular surfaces. This allows for a wide range of future extensions. As already discussed, we plan to integrate our technique into interactive molecular dynamics tools. This would let domain experts investigate potential binding sites while modifying the MD structure.</p><p>The functional representation can be easily sampled, as we showcased in Section 6.3. This property can be exploited in order to ease the detection and the analysis of potential binding sites <ref type="bibr" target="#b27">[28]</ref>. We could also take advantage of the functional representation, for example, for developing a probe for 3D molecular exploration. A user could place the probe in the spatial domain and observe the actual distance of the probe from the molecular surface.</p><p>Due to the space limitation, we have not gone into details about different definitions of the scaling function r k . A spline, for instance, would be a valid alternative, since it could be interactively edited through a transfer function widget, while the resulting surface is immediately displayed.</p><p>The implementation of clipping objects is straightforward. Essentially, it is sufficient to take into account only the atoms that lie inside (or outside) the clipping primitive. The clipping object could be displaced or modified, and the surface would be updated simultaneously.</p><p>There is also a strong potential in exploiting the computed function values, gradients and Hessian matrices. For example, they could be used to provide non photorealistic rendering effects such as the ones described by Kindlmann et al. <ref type="bibr" target="#b13">[14]</ref>.</p><p>Finally, notice that building blocks of our implicit circular model are the gradient and the Hessian of the function. Therefore, our technique can be easily extended to generic implicit objects, as long as their first and second partial derivatives can be computed.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>2RFig. 2 .</head><label>2</label><figDesc>Forming the point set G x . Out of all the atoms, the set G x represents those (yellow circles) that belong to the area of influence of the point x (blue circle).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>An illustration of implicit space blending. Top-Left: Function values of the functions f and g. Function f represents an implicit circle with center [1, 0] and radius 0.8, and function g a circle with center [−1, 0] and the same radius 0.8. The 0 iso-contours (in black) are defined using the max operation, i.e., the union of f and g. Top-Right: The function values represent a two dimensional point in the implicit space. The x-axis stands for the 0 iso-surface of function f while the y-axis is the 0 iso-surface of function g. The iso-contours are defined again by the max operator although in the implicit space this time. Bottom-Right: When the point belongs to the area delineated by two blue lines f + R and g + R (Eq. 6), we evaluate the implicit circle model of center [−R, −R] with radius R (Eq. 5). Elsewhere, the resulting function equals max( f , g). Bottom-left: The final object obtained in the spatial domain. The effective area (Eq. 6) in object space is delineated by the two blue curves.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>An example of scaling the circular model. Top-left: To scale the solvent radius R, we employ function</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 6 .</head><label>6</label><figDesc>Comparison of two different approximations. Left: second order derivatives are neglected. Right: second order derivatives are computed iteratively, while third order derivatives are neglected; this results in a smoother surface with less discontinuities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 8 .</head><label>8</label><figDesc>Top: Illustration of instantaneous updates after the MD structure is changed. Interactive displacements of atoms demonstrates the interactive rendering capabilities of our approach. The overall displacement increases from left to right. The example is demonstrated on Proteinase 3 (3523 atoms). Bottom: Interactively changing the solvent radius on proliferatic cell nuclear antigen (12555 atoms). Our method allows quick adjustments of the solvent radius, from left to right: R = 1.4Å, R = 1.8Å, R = 2.2Å and R = 2.6Å.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>(a) Proteinase 3 bound to the lipid membrane (34490 atoms), (b) Proteinase 3 alone (3523 atoms), (c) Proliferatic cell nuclear antigen (12555 atoms), (d) Aquaporin (1852 atoms), (e) Immunoglobin (12530 atoms) and (f) Tubulin (14744 atoms).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Models\Molecules (a) (b) (c) (d) (e) (f)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>Side-by-side comparison of the three surface models of immunoglobin. Our method (middle) resembles solvent excavation more closely than the Gaussian model (left). On the other hand, our representation is not as sharp as the SES (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>compute ∇g i and H g i (Eqs. 1,2 and 3) 3: initialize l, ∇l and H l 4: for all g ∈ G x do 5:if x lies in the area influence of l and g (Eq. 6) then Let us first give a formal definition of ∇g i and H g i . Recall that the gradient is a vector given by the first order partial derivatives. Let</figDesc><table><row><cell>6:</cell><cell>compute the dot product k = ∇l • ∇g</cell></row><row><cell>7:</cell><cell>update l (Eq. 9)</cell></row><row><cell>8:</cell><cell>update ∇l (Eq. 11)</cell></row><row><cell>9:</cell><cell>update H l (Eq. 13)</cell></row><row><cell>10:</cell><cell>end if</cell></row><row><cell cols="2">11: end for</cell></row><row><cell cols="2">12: return l</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We thank Nathalie Reuter for providing the molecular dynamics simulation datasets and the necessary feedback. We would also like to thank Paolo Angelelli, Ivan Kolesar and Mattia Natali for helping in fine-tuning the paper. Thanks to Helwig Hauser and the VisGroup in Bergen for the numerous useful discussions. Finally, we thank the anonymous reviewers for their valuable comments.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Extrusion of 1d implicit profiles: Theory and first application</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Barthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Gaildrat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Caubet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Shape Modeling</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="179" to="199" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Minimal molecular surfaces and their applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">W</forename><surname>Bates</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zhao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Chemistry</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="380" to="391" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A generalization of algebraic surface drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="235" to="256" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The a -buffer, an antialiased hidden surface method. SIG-GRAPH</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="103" to="108" />
			<date type="published" when="1984-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Analytical molecular surface calculation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Connolly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Applied Crystallography</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="548" to="558" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Complex molecular assemblies at hand via interactive simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Delalande</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Frey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Grasseau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Baaden</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Chemistry</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">15</biblScope>
			<biblScope unit="page" from="2375" to="2387" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Implicit surfaces for dynamic growth of digestive system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Durikovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Czanner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Shape Modeling International, 2002. Proceedings</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="111" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Sardf: signed approximate real distance functions in heterogeneous objects modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Fayolle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pasko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schmitt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Heterogeneous objects modelling and applications</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2008" />
			<biblScope unit="page" from="118" to="141" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A Gradient-Based Implicit Blend</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Gourmel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Barthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-P</forename><surname>Cani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Wyvill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bernhardt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Paulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Grasberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Macromolecular shape and surface maps by solvent exclusion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Greer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">L</forename><surname>Bush</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the National Academy of Sciences of the United States of America</title>
		<meeting>the National Academy of Sciences of the United States of America</meeting>
		<imprint>
			<date type="published" when="1978-01" />
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="303" to="310" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Ray tracing algebraic surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGGRAPH Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="83" to="90" />
			<date type="published" when="1983-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Sphere tracing: A geometric method for the antialiased ray tracing of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="527" to="545" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">VMD: visual molecular dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Humphrey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dalke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Schulten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of molecular graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">14</biblScope>
			<biblScope unit="page" from="33" to="38" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Curvature-based transfer functions for direct volume rendering: methods and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tasdizen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Moller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003" />
			<biblScope unit="page" from="513" to="520" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fast Ray Tracing of Arbitrary Implicit Surfaces with Interval and Affine Arithmetic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Knoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hijazi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kensler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="26" to="40" />
			<date type="published" when="2009-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Interactive visualization of molecular surface dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Bidmon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1391" to="1399" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Interactive Exploration of Protein Cavities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Falk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rehm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="673" to="682" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Parallel contour-buildup algorithm for the molecular surface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grottel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Biological Data Visualization (BioVis), 2011 IEEE Symposium on</title>
		<imprint>
			<date type="published" when="2011" />
			<biblScope unit="page" from="17" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fast visualization of gaussian density surfaces for molecular dynamics and particle system trajectories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Krone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Stone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Schulten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EuroVis 2012 Short Papers</title>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Calculus (with Analytical Geometry): 8th Edition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">P</forename><surname>Hostetler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">H</forename><surname>Edwards</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<pubPlace>Brooks Cole</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">The interpretation of protein structures: estimation of static accessibility</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">M</forename><surname>Richards</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of molecular biology</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="379" to="400" />
			<date type="published" when="1971-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Accelerated Visualization of Dynamic Molecular Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Lindow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Baum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Prohaska</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2010" />
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="943" to="952" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Real-time GPU rendering of piecewise algebraic surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Loop</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics (TOG)</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="664" to="670" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGGRAPH Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Image enhancement by unsharp masking the depth buffer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Luft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Colditz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1206" to="1213" />
			<date type="published" when="2006-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Level Set Methods and Dynamic Implicit Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Osher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Fedkiw</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<publisher>Springer Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Seamless abstraction of molecular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parulek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ropinski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 29th Spring Conference on Computer Graphics, SCCG &apos;13</title>
		<meeting>the 29th Spring Conference on Computer Graphics, SCCG &apos;13</meeting>
		<imprint>
			<date type="published" when="2013" />
			<biblScope unit="page" from="120" to="127" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Implicit surfaces for interactive graph based cavity analysis of molecular simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parulek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Turkay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Reuter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Biological Data Visualization (BioVis), 2012 IEEE Symposium on</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="115" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Implicit representation of molecular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Parulek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Viola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Pacific Visualization Symposium</title>
		<meeting>the IEEE Pacific Visualization Symposium</meeting>
		<imprint>
			<date type="published" when="2012-03" />
			<biblScope unit="page" from="217" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Function representation in geometric modeling: concepts, implementation and applications. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pasko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Adzhiev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sourin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">V</forename><surname>Savchenko</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="429" to="446" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Fast exact multiplication by the hessian</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Pearlmutter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Comput</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="147" to="160" />
			<date type="published" when="1994-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Hardware-accelerated glyphs for mono-and dipoles in molecular dynamics visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Reina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROGRAPH-ICSIEEE VGTC Symposium on Visualization, volume xx</title>
		<meeting>EUROGRAPH-ICSIEEE VGTC Symposium on Visualization, volume xx</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="177" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Areas, volumes, packing, and protein structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">M</forename><surname>Richards</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annual Review of Biophysics and Bioengineering</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="151" to="176" />
			<date type="published" when="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Triangulation of molecular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ryu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Cho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D.-S</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer-Aided Design</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="463" to="478" />
			<date type="published" when="2009-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Reduced surface: an efficient way to compute molecular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Sanner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">.</forename><forename type="middle">J</forename><surname>Olson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Spehner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biopolymers</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="305" to="320" />
			<date type="published" when="1996-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Kernel functions in convolution surfaces: a comparative analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sherstyuk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="171" to="182" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">GPU-based ray-casting of quadratic surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sigg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weyrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics Symposium on Point-Based Graphics</title>
		<imprint>
			<publisher>Citeseer</publisher>
			<date type="published" when="2006" />
			<biblScope unit="page" from="59" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Real-time ray tracing of implicit surfaces on the GPU</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Narayanan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="261" to="72" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Real-Time Metaball Ray Casting with Fragment Lists</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Szecsi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Illes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Eurographics Association</title>
		<imprint>
			<biblScope unit="page" from="93" to="96" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Ambient occlusion and edge cueing to enhance real time molecular visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tarini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="1237" to="1244" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Extending the graphic pipeline with new gpuaccelerated primitives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Toledo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lvy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
		<respStmt>
			<orgName>INRIA-ALICE</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">The contour-buildup algorithm to calculate the analytical molecular surface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Totrov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Abagyan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of structural biology</title>
		<imprint>
			<biblScope unit="volume">116</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="138" to="181" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Computing smooth molecular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Brooks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jr</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">V</forename><surname>Wright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Comput. Graph. Appl</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="19" to="25" />
			<date type="published" when="1994-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Real-time concurrent linked list construction on the gpu</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hensley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Grün</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Thibieroz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21st Eurographics conference on Rendering, EGSR&apos;10</title>
		<meeting>the 21st Eurographics conference on Rendering, EGSR&apos;10<address><addrLine>Aire-la-Ville, Switzerland, Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>Eurographics Association</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="1297" to="1304" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
