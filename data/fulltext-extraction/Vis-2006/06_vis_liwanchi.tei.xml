<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Representing Higher-Order Singularities in Vector Fields on Piecewise Linear Surfaces</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wan-Chiu</forename><surname>Li</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bruno</forename><surname>Vallet</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nicolas</forename><surname>Ray</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bruno</forename><surname>Lévy</surname></persName>
						</author>
						<title level="a" type="main">Representing Higher-Order Singularities in Vector Fields on Piecewise Linear Surfaces</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>vector field visualization</term>
					<term>higher-order singularities</term>
					<term>line integral convolution</term>
					<term>GPU</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Accurately representing higher-order singularities of vector fields defined on piecewise linear surfaces is a non-trivial problem. In this work, we introduce a concise yet complete interpolation scheme of vector fields on arbitrary triangulated surfaces. The scheme enables arbitrary singularities to be represented at vertices. The representation can be considered as a facet-based &quot;encoding&quot; of vector fields on piecewise linear surfaces. The vector field is described in polar coordinates over each facet, with a facet edge being chosen as the reference to define the angle. An integer called the period jump is associated to each edge of the triangulation to remove the ambiguity when interpolating the direction of the vector field between two facets that share an edge. To interpolate the vector field, we first linearly interpolate the angle of rotation of the vectors along the edges of the facet graph. Then, we use a variant of Nielson&apos;s side-vertex scheme to interpolate the vector field over the entire surface. With our representation, we remove the bound imposed on the complexity of singularities that a vertex can represent by its connectivity. This bound is a limitation generally exists in vertex-based linear schemes. Furthermore, using our data structure, the index of a vertex of a vector field can be combinatorily determined. We show the simplicity of the interpolation scheme with a GPU-accelerated algorithm for a LIC-based visualization of the so-defined vector fields, operating in image space. We demonstrate the algorithm applied to various vector fields on curved surfaces.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Vector fields on surfaces are important objects which appear frequently in scientific simulation in CFD (Computational Fluid Dynamics) or modeling by FEM (Finite Element Method) <ref type="bibr" target="#b20">[21]</ref>. To be visualized, such vector fields are usually linearly interpolated for the sake of simplicity and performance considerations. Namely, the vector field is sampled at each vertex of the underlying piecewise linear surface and interpolated linearly, similarly to what is done for the geometry. However, the price that one pays for the simplicity that comes with the linearity is that only linear (or first-order) singularities can be represented in the triangles <ref type="bibr" target="#b23">[24]</ref>. This leads to the mis-representation of some vector fields where higher-order singularities are present (e.g. a dipole of a magnetic field). This mis-representation of the singularities changes the perception of the topology of the vector fields and hence may lead to mis-interpretation of the simulation results. Therefore, finding a simple representation that enables the meaningful information of the higher-order singularities to be preserved is a research direction worths exploring.</p><p>Among the pioneers in this direction, Tricoche et al. <ref type="bibr" target="#b24">[25]</ref> explored the possibility of representing higher-order singularities using only piecewise linear 2D vector field. Their approach creates higher-order singularities at vertices by using a sequence of the three basic sector types (see <ref type="figure" target="#fig_3">Figure 3)</ref>. The technique had been applied to simplify the topology of 2D vector fields <ref type="bibr" target="#b29">[30]</ref>. In <ref type="bibr" target="#b22">[23]</ref>, Theisel proposed an approach that enables one to design piecewise linear vector field and hence vector field compression. The main limitation of the purely piecewise linear schemes is that the complexity of singularities that a vertex can represent is limited by its connectivity. Moreover, the elliptic sectors need to be split in two due to their non-linearity.</p><p>In <ref type="bibr" target="#b18">[19]</ref>, Scheuermann et al. proposed a mixed higher-order/linear vector field scheme to visualize non-linear vector field topology. Some non-linear schemes, for instances, <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b31">32]</ref> were also proposed to rep-</p><p>• Wan-Chiu Li is with INRIA-Alice, France, E-mail: wan-chiu.li@loria.fr.</p><p>• Bruno Vallet is with INRIA-Alice, France, E-mail: vallet@loria.fr.</p><p>• Nicolas Ray is with University Nancy 2, France, E-mail: ray@loria.fr.</p><p>• Bruno Lévy is with INRIA-Alice, France, E-mail: levy@loria.fr.  . Two examples of non-linear vector fields on the sphere represented by our facet-based data structure (left). First-order (yellow) and higher-order (red) singularities are defined at vertices. The top one is a vector field (with singularities of indices 2,1,-1). The bottom one is a vector field with sign ambiguity (with singularities of indices 1,1/2,-1/2). The vector fields are visualized using our LIC-based method (middle). On the right, we show the same two vector fields represented by the classic vertex-based piecewise linear representation. Note that the higherorder singularities are split into combinations of first-order singularities. resent higher-order singularities. Unfortunately, mixed and non-linear schemes impede the acceleration by graphics hardwares. It is therefore difficult to achieve an interactive frame rate with those approaches.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Contributions</head><p>In the context of interactive vector field visualization, linear interpolation schemes are often preferred due to both their simplicity and performance issues. However, they are limited by the bound imposed on the complexity of the singularities that a vertex can represent by its connectivity. In this work, we present a novel scheme to "encode" vector fields on piecewise linear surfaces such that any higher-order singularity can be represented without the mentioned upper bound.</p><p>In our setting, the vector field is piecewise defined over the surface Top: a sphere with only two higher-order singularities of index +5 (front) and -3 (back), the sum of which equals the Euler characteristic (2 for a sphere). Bottom: zooming in the vicinity of the singularities. One can observe that the hyperbolic and elliptic structure of the curvilinear sectors, which have been described in Tricoche et al.'s work (see <ref type="figure" target="#fig_3">Figure  3</ref>). Note that using our approach, the separatrices of the curvilinear sectors do not need to appear on the incident edges (black lines) of the vertex.</p><p>by a simple interpolation scheme, over the cells of the subdivision complex (or barycentric triangulation, as shown <ref type="figure" target="#fig_4">Figure 5</ref> further in the paper). We give a detailed description in Section 2. In short, the vector field is described in polar coordinates on each facet. In addition, an integer that we call the period jump specifies the number of turns that the vector field undergoes when crossing the edge. Hence, we remove the ambiguities when interpolating the field across an edge shared by two facets. To interpolate the vector field over the whole surface, we proceed as follows: first, we linearly interpolate the direction and norm of the vector field along each dual edge; then, we interpolate the vector field over the whole surface using a variant of side-vertex interpolation <ref type="bibr" target="#b14">[15]</ref>. The interpolation scheme combined with our notion of period jump enable us to represent non-linear curvilinear sectors in a cell of the subdivision complex (which is not possible in Tricoche et al.'s scheme in which they have to split elliptic sectors into two triangles).</p><p>Hence, we remove the bound imposed on the complexity of singularities that a vertex can represent by its connectivity. Using our representation, one can represent arbitrary indices (see Section 3). Moreover, by construction, singularities can only exist at vertices of the surface and the index of each vertex can be found combinatorily.</p><p>The reason that we define the vector on the facets is that, on a surface in R 3 , due to the curvature, i.e. geometry of the embedding, two tangent vectors on the surface defined at two vertices need a parameterization, either local or global, to be compared. On the other hand, comparing two vectors defined on a pair of adjacent facets can be sim- In order to demonstrate the simplicity of the representation, we show a GPU-accelerated LIC-based visualization of the so-defined vector fields, operating in image space.</p><p>The remainder of the paper is organized as follows. We will first review the previous work on the representation of higher-order singularities in vector fields as well as vector field visualization by line integral convolution. Then, in Section 2, we will introduce our representation of vector fields. Section 3 deals with the particular issue of representing arbitrary singularities on piecewise linear surfaces. In Section 4, we will explain how to convert existing vector fields into our representation. The LIC-based visualization algorithm accelerated by GPU is presented in Section 5. In Section 6, the results are discussed. Finally, conclusions are drawn.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Previous work</head><p>In this section, we review the previous work that concerns the representation of higher-order singularities, using linear and non-linear interpolation schemes. We also review the methods to visualize vector fields on surfaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2.1">Representing Higher-order Singularities in Vector Fields</head><p>Different methods have been proposed to encode vector fields on surfaces, using either linear schemes, or more sophisticated higher-order schemes. In all these methods, the vector fields are supposed to be sampled at the vertices of the piecewise linear domains.</p><p>Linear schemes: Tricoche et al. <ref type="bibr" target="#b24">[25]</ref> explored the possibility of representing non-linear singularities with a piecewise linear vector field. They proposed a way to model singularities with complex topologies at a vertex and conversely, given a vertex, to classify the possible types of singularities encountered at that vertex. They pointed out that a singularity in a 2D vector field located at a vertex is generally non-linear since there is no neighborhood of the singularity completely lying in the definition domain of a single linear field. By construction, the complexity of the singularity at a vertex is limited by its connectivity, namely, the number of incident triangles. They "synthesize" non-linear singularities at vertices by using sequences of parabolic, hyperbolic and elliptic sectors (see <ref type="figure" target="#fig_3">Figure 3</ref>). This is based on the observation that the vicinity of a critical point in a 2D vector field can be characterized as a sequence of these three basic sector types <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref>. In fact, they can be understood as three possible interpolations of two radial vectors originated from the vertex in the counter-clockwise direction. In the parabolic and hyperbolic sectors, the angle of rotation is defined as ang(v(q 2 ), v(q 1 )), where ang(., .) means the natural rotation which is always in (−π, π]. This angle is always positive (resp. negative) in parabolic (resp. hyperbolic) sector. In the elliptic sector, the angle of rotation defined as 2π + ang(v(q 2 ), v(q 1 )). Note that since the elliptic sector is non-linear, it has to be split into two triangles when being modeled by linear triangles. In <ref type="bibr" target="#b29">[30]</ref>, the above scheme was used to simplify 2D vector fields. First, singularities to be merged are clustered. Then, each cluster is represented by a piecewise linear vector field with only one higher-order singularity.</p><p>In <ref type="bibr" target="#b22">[23]</ref>, Theisel introduced a method to design piecewise linear vector fields with prescribed topology. With his approach, all types of critical points of a 2D vector field can be represented. As with Tricoche et al.'s method, higher-order singularities are "synthesized" at vertices with the three basic sector types. Thus, as far as higher-order singularities are concerned, this method also suffers from the fact that the maximum complexity of a singularity at a vertex is bounded by the number of triangles meeting at that vertex.</p><p>Weinkauf et al. <ref type="bibr" target="#b27">[28]</ref> extended the idea in <ref type="bibr" target="#b22">[23]</ref> to 3D vector fields. Similarly to the 2D case, the vicinity of a critical point is segmented into sectors with a regular behavior of the flow. They achieved the construction of higher-order 3D vector fields by designing their topological skeletons.</p><p>In <ref type="bibr" target="#b28">[29]</ref>, an approach is proposed to extract and classify higher-order singularities of 3D vector fields. This is achieved by extracting the topological skeleton of a 2D vector field on a convex surface around the area of interest. They demonstrated vector field simplification as an application for this method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Mixed schemes and non-linear schemes:</head><p>In <ref type="bibr" target="#b18">[19]</ref> Scheuermann et al. proposed a method to first detect higherorder singularities by computing the indices of the triangles in the nonlinear singular regions and then approximating the singularities by using polynomials of high degrees. In the non-singular regions, they use piecewise linear interpolation to represent the field.</p><p>To improve the approximation of higher-order singularities in a given non-linear vector field, Scheuermann et al. <ref type="bibr" target="#b19">[20]</ref> proposed a C 1 interpolation scheme (based on Powell-Sabin and Nielson's interpolants) for 2D vector field defined on a piecewise linear planar domain. Although higher-order singularities are still split into combinations of first-order ones, the overall topology of the vector field is better reflected by their C 1 interpolation scheme as compared to previous work.</p><p>In <ref type="bibr" target="#b31">[32]</ref>, Zhang et al. presented a non-linear scheme to represent non-linear singularities through the use of exponential maps (around the one-ring of a vertex) and parallel transport. The non-linear property makes the interpolation scheme quite complicated and computationally expensive. More specifically, the construction of the exponential map, which is basically a local parameterization of the one-ring of a vertex, impedes the acceleration by graphics hardware. They extended the definitions to tensor fields in <ref type="bibr" target="#b30">[31]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2.2">Visualization of Vector Fields on Surfaces</head><p>Since the introduction of LIC (Line Integral Convolution) by Cabral and Leedom in 1993, the method has been widely used for the visualization of 2D vector fields. In this work, we have also chosen to use the concept of LIC to visualize our vector fields. After the invention of this method, much work have been done to accelerate the original algorithm. For instance, in <ref type="bibr" target="#b21">[22]</ref> Stalling and Hege presented the FastLIC method, which employs simple box filters. This method minimizes the total number of streamlines and hence accelerates the original LIC by an order of magnitude.</p><p>Later, work have been done to extend the 2D LIC technique to visualize vector fields on surfaces. As said in <ref type="bibr" target="#b13">[14]</ref>, these methods can be classified into mainly three types according to the space in which LIC operates:</p><p>Parametric space: Forssell and Cohen <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref> proposed a method that allows the operation of LIC through a parameterization <ref type="bibr" target="#b5">[6]</ref> of the surface. However, a global parameterization of a general surface may not always be obtained easily. Battke et al. <ref type="bibr" target="#b1">[2]</ref> and Carr et al. <ref type="bibr" target="#b3">[4]</ref> proposed methods that allow the operation of LIC in parametric space per triangle packing algorithms. Triangle packing can be considered as the simplest local parameterization of the surface by triangle. Nevertheless, the drawback of the triangle packing is that it is quite sensitive to the quality of the mesh. Object space: Immersing the vector field on the surface into a 3D volume enables the field to be treated as 3D, which means that streamline tracing can be performed <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b11">12]</ref>. Image space: Recently two methods, ISA (Image Space Advection) <ref type="bibr" target="#b12">[13]</ref> and IBFVS (Image Based Flow Visualization for Curved Surfaces), <ref type="bibr" target="#b25">[26]</ref> have been proposed to enable high-performance visualization of flow on surfaces. A side-by-side comparison of the two methods can be found in <ref type="bibr" target="#b13">[14]</ref>. Working in this space, no parameterization of the surface is needed. Moreover, LIC can be accelerated by taking advantage of graphics hardware <ref type="bibr" target="#b9">[10]</ref>. Seeing the advantages of image space based methods, in this work, we have chosen to carry out LIC in image space as well.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">OUR DISCRETE VECTOR FIELD REPRESENTATION</head><p>In this paper, bold letters (n, v, u...) denote vectors in R 3 defined on a connected oriented mesh M =&lt; V , E , F &gt;, where V , E , F denotes the set of vertices, edges and facets respectively. By oriented, we mean facets and edges are oriented. The orientation allows the definition of the normal n on each facet. The vector field v we handle in this paper is embedded in the mesh, hence as a 3-vector, it needs to satisfy v • n = 0. This section explains how to interpolate such a field on M.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Local Basis and Polar Coordinates</head><p>The first step in defining an interpolation for v is to define a local orthonormal basis (x( f ), y( f )) on each facet f ∈ F . A convenient way to do so is to choose x( f ) to be a unit vector along one of the (oriented) edges of f , and take y( f ) = n × x( f ). The main idea is that we interpolate in polar coordinates in the local basis. Hence on each facet, we write:</p><formula xml:id="formula_0">v = r cos θ r sin θ = ru r = ||v|| u = v ||v|| = cos θ sin θ<label>(1)</label></formula><p>where r denotes the norm of v, and u its direction. The norm and direction of v will be interpolated separately. Being a scalar, the norm can be interpolated easily. On the other hand, the direction interpolation will be more tricky. The direction u is parameterized by its angle θ ∈ R. The fact that we take the angle in R and not in (−π, π] is very important. It allows the continuity of a direction on a triangle to be defined, even if the direction rotates by more than 2π within the triangle. This choice gives us more freedom for the interpolation, but generates an ambiguity. We will now explain how to handle such ambiguities in interpolating directions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Direction Interpolation Ambiguity</head><p>Let us start with a simple example to explain direction interpolation ambiguity. Assume that we want to interpolate a direction u along an edge [AB] knowing u(A) and u(B). If u is continuous, the angular variation along [AB] satisfies: <ref type="figure">Fig. 4</ref>. Direction interpolation ambiguity: between two directions given at points A and B, we have different possible interpolations, which can be chosen using the variable p. where we call p ∈ Z the period jump, and ang(., .) the angle in (−π, π].</p><formula xml:id="formula_1">∆θ ([AB]) = B A dθ = ang(u(B), u(A)) + 2pπ<label>(2)</label></formula><p>The angular variation has infinitely many possible values for all the possible values of p (see <ref type="figure">Figure 4</ref>). Hence to interpolate the direction field on [AB], we need both the values at A and B and an integer p (period jump), such that the linearly interpolated value at a point P = (1 − t)A + tB is written:</p><formula xml:id="formula_2">θ (P) = θ (A) + ∆θ ([AB])t<label>(3)</label></formula><p>We can take θ (A) ∈ (−π, π], but according to the choice for p, θ (B) can be outside this interval. The choice of the period jump p is of great importance, and we explain in Section 4 how to compute it when converting an existing vector field into our structure. Using this idea of integer period jumps to remove the direction interpolation ambiguity, we will now explain how to interpolate a vector field on the mesh M in three steps of increasing dimension: facet centers (0D), dual edges (1D), mesh (2D). This interpolation may be thought of as a variant of the "side-vertex" interpolation scheme <ref type="bibr" target="#b14">[15]</ref>. As the reader will see in the following, in our case, the value along the side is interpolated linearly while it is constant (identical to the side value) along a side-vertex path.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Step 1: 0D</head><p>From now on, we call [v 0 ...v i ] the simplex (edge or triangle) based on points v 0 ...v i and G(s) the gravity center of a simplex, s. The first step of the interpolation is to define the vector v( f ) = r( f )u( f ) at the gravity center G( f ) of each facet f ∈ F . r( f ) is simply a scalar, and u( f ) at G( f ) can be defined by its angle θ ( f ) ∈ R, which is the angle between u( f ) and the facet reference vector, x( f ). Notice that v( f ), u( f ), r( f ) and θ ( f ) are values given at G( f ). They will be interpolated, so they are not constant on the whole facet, but we omit the G for the sake of brevity since it is not ambiguous. Moreover, it corresponds to the implementation where a couple θ ( f ), r( f ) is stored for each facet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Step 2: 1D</head><p>The second step of the interpolation is to define the direction field on the edges of the barycentric dual of M (see <ref type="figure" target="#fig_4">Figure 5</ref>). For an edge</p><formula xml:id="formula_3">e = [v 1 v 2 ] between a pair of adjacent triangles f = [v 1 v 2 v 3 ] and f = [v 2 v 1 v 4 ]</formula><p>, we can geometrically define the barycentric dual edge:</p><formula xml:id="formula_4">e * = [G( f )G([v 1 v 2 ])] ∪ [G([v 1 v 2 ])G( f )]<label>(4)</label></formula><p>Given a period jump p(e * ) (see Section 4 for the choice of p(e * )), the angular variation along e * is given by:</p><formula xml:id="formula_5">∆θ (e * ) = e * dθ = ang(x( f ), x( f )) + θ ( f ) − θ ( f ) + 2p(e * )π (5)</formula><p>where the angle ang(., .) is measured after flattening the pair of triangles f , f along their common edge e. The main difficulty of this step is to split the angular variation along the two parts of the dual edge. We chose to split according to the height ratio above the common edge (see <ref type="figure" target="#fig_4">Figure 5</ref>):</p><formula xml:id="formula_6">α(G( f ), G([v 1 v 2 ])) = h(G( f ), G([v 1 v 2 ])) H(G( f ), G( f )) = || − −−− → v 1 G( f ) × − − → v 1 v 2 || || − −−−−−− → G( f )G( f ) × − − → v 1 v 2 || = || − − → v 1 v 3 × − − → v 1 v 2 || || − − → v 4 v 3 × − − → v 1 v 2 ||<label>(6)</label></formula><p>This gives a natural linear interpolation for P</p><formula xml:id="formula_7">∈ [G( f )G([v 1 v 2 ])] given in barycentric coordinates P = (1 − t)G( f ) + tG([v 1 v 2 ])</formula><p>:</p><formula xml:id="formula_8">θ (P) = θ ( f ) + ∆θ (e * )αt<label>(7)</label></formula><p>For the norm, the same considerations lead to a linear interpolation of the form:</p><formula xml:id="formula_9">r(t) = r( f ) + ∆r(e * )αt<label>(8)</label></formula><p>with ∆r(e * ) = r( f ) − r( f )</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Step 3: 2D</head><p>The third step is to interpolate the field over the whole mesh, by a piecewise defined interpolation on the subdivision simplices S i, j,k of the mesh M. The subdivision simplices are simply defined as the triangles</p><formula xml:id="formula_10">S i, j,k = [v i G([v i v j ])G([v i v j v k ])] ∀(i, j, k)|[v i v j v k ] ∈ F<label>(9)</label></formula><p>Notice that because of the possible permutations for (i, j, k), there are six subdivision simplices per facet of the mesh (see <ref type="figure" target="#fig_4">Figure 5</ref>). On each subdivision simplex of a facet f =</p><formula xml:id="formula_11">[v i v j v k ]</formula><p>, the field is known on the edge</p><formula xml:id="formula_12">[G([v i v j ])G( f )].</formula><p>As for the remainder of the triangle, it is interpolated such that the vector is constant along each segment between a point of this edge and the primal vertex v i . Another way of saying that is that we obtain the vector at a point P as the vector at the intersection P between (v i , P) and [G( <ref type="figure">Figure 6</ref>). This interpolation may be thought of as a variant of the "side-vertex" interpolation scheme <ref type="bibr" target="#b14">[15]</ref>. In our case, the side value is interpolated linearly while along a side-vertex path, the value is constant, which equals to the side value. This gives a very simple expression in barycentric coordinates. If we write:</p><formula xml:id="formula_13">[v i v j ])G( f )] (see</formula><formula xml:id="formula_14">P = (1 − t )v i + t ((1 − t)G( f ) + tG([v i v j ]))</formula><p>then we have: <ref type="figure">Fig. 6</ref>. Our "side-vertex" interpolation over a subdivision simplex: we obtain the interpolation value at P as the value at its projection P on the (magenta) dual edge.</p><formula xml:id="formula_15">P = (1 − t)G( f ) + tG([v i v j ])<label>(10)</label></formula><p>and we obtain the vector direction and norm by the interpolation described in Equations 7 end 8. Our interpolation scheme has two advantages: 1) It is straightforward to implement on a GPU (see Section 5).</p><p>2) It allows arbitrary singularities to be represented at vertices of the mesh. In the following section we describe and classify these singularities, and explain how our framework enables singularities of arbitrary index to be represented.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">VECTOR FIELD SINGULARITIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Singularity Classification</head><p>Vector field singularities in the plane have been much studied. For a 2D vector field v :</p><formula xml:id="formula_16">(x, y) ∈ R 2 → (v x , v y ) ∈ R 2</formula><p>, a point q where the vector field vanishes is called a singularity or critical point. The first classification of singularities is done using the Jacobian matrix J of v at q:</p><formula xml:id="formula_17">J = ∂ v x ∂ x ∂ v x ∂ y ∂ v y ∂ x ∂ v y ∂ y (11)</formula><p>The singularities are then classified by the two eigenvalues of J. If they are non-zero, the singularity is said to be linear or first-order. Otherwise the singularity is said to be non-linear or higher-order. A finer classification can be made according to other criteria (eigenvalues are real, complex or purely imaginary, real and imaginary parts are of same or opposite sign).</p><p>However, the Jacobian matrix is not always well behaved around q, and does not allow to classify higher order singularities. For instance, a dipole generated by a magnetic field has a singularity which "looks" different from the singularities classified above. To classify a wider class of singularities, we can use the index of a singularity, typically defined as:</p><formula xml:id="formula_18">2πI v (q) = γ(q) dθ (12)</formula><p>where γ(q) is a closed curve making one counterclockwise turn around q and containing no other singularity, and θ is the angle between the direction v and a reference vector, such that v x = r cos θ and v y = r sin θ . This integral is always an integer multiple of 2π, such that the index of a singularity is always an integer. Notice that it depends only on the direction of the field and not on its norm, hence the choice of polar coordinates to study singularities is justified. It can be shown that the singularities for which the Jacobian is well defined at q can only have index -1, 0 or 1, whereas the dipole has a singularity of index 2. This comes from the fact that using the Jacobian at q leads to making a linear approximation of the field at q. This also explains why classical linear interpolations do not capture high index singularities. We will now show how our framework allows arbitrary indices to be represented very easily.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Singularities with Integer Indices</head><p>We have a very simple closed curve around a vertex v to compute its index: the set of all edges dual to the edges emanating from v. This curve is the boundary of the dual facet so we call it ∂ v * . However, because we are not in the plane anymore, the integral in Equation 12 does not necessarily lead to an integer value. This is easily corrected by adding the angle defect A d (v):</p><formula xml:id="formula_19">2πI v (v) + A d (v) = ∂ v * dθ = ∑ e * ∈∂ v * ∆θ (e * ) = ∑ e * ∈∂ v * ang(x( f ), x( f )) + 2p(e * )π<label>(13)</label></formula><p>Note that when summing along ∂ v * , the θ ( f ) − θ ( f ) terms of the dual edges cancel out. As the angle defect, and the ang(</p><formula xml:id="formula_20">x( f ), x( f ))</formula><p>solely depend on the geometry of the field, one can express Equation 13 in the following form:</p><formula xml:id="formula_21">I v (v) = I 0 (v) + ∑ e * ∈∂ v * p(e * )<label>(14)</label></formula><p>where</p><formula xml:id="formula_22">I 0 (v) = 1/2π(∑ ang(x( f ), x( f )) − A d (v))</formula><p>is a "geometric" index that solely depends only on the choice of the basis vector for each facet. Hence after computing I 0 , the index of any vertex on M can be obtained very easily by summing period jumps around the vertex.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Singularities with Fractional Indices</head><p>For many applications, we are interested in directions in the weak sense, without orientation (there is a ± sign ambiguity). In that case, angles are only given in (−π/2, π/2]. For instance, an eigenvector field of a second-order tensor field needs such flexibility. Our framework allows such fields to be handled in a very simple manner by authorizing period jumps to be multiples of 1/2, which will allow representation of more general singularities of index multiples of 1/2 (see the bottom vector field in <ref type="figure" target="#fig_1">Figure 1</ref>). Authorizing period jumps to be multiples of 1/4 allows even more general singularities to be captured, which applies for vector fields with higher levels of symmetry, referred to as "cross" fields in <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b26">27,</ref><ref type="bibr" target="#b15">16]</ref>. Before explaining how to visualize vector field represented by our data structure (Section 5), we explain in the next section how to convert existing vector fields into our representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ENCODING AN EXISTING VECTOR FIELD</head><p>To manipulate existing vector fields (static or dynamic) represented in other forms, it is necessary to convert them into our data structure. This is possible as long as the vector field v(q) to be converted is known at each point q of the surface M. This is the case in FEM modeling where the vector field is described as a sum of basis functions defined on the whole mesh. If the vector field we wish to convert is only known at discrete samples, we suggest to simply linearly interpolate it between the samples. The conversion is done in four steps: 1) Singularity placement: Singularities are detected in the original vector field. If a singularity is not at a vertex, in order to preserve the exact location of singularities, we need to add a vertex at its exact position by a facet-split operation, which leads to splitting the corresponding facet in three. 2) Choose any one of the three oriented edges as the reference vector</p><p>x( f ) on each facet. 3) Compute the angle θ ( f ) = ang(v(G( f )), x( f )) and norm r( f ) = ||v(G( f ))|| at each facet barycenter G( f ). 4) Compute the period jumps such that the field rotation along dual edges is preserved. This rotation is given by the integral of the angular field variation along the dual edge:</p><p>∆θ (e * ) = <ref type="figure">Fig. 7</ref>. Left: the period jump p(e * ) must be set according to Equation 15 to ensure that the field rotation along the dual edge is the same as in the original vector field (visualized by the gray integral lines); Right: Converting a singularity of the type source. One can check that the index computed using Equation 14 equals to 1.</p><formula xml:id="formula_23">e * dθ = e * v x dv y − v y dv x v 2 x + v 2 y</formula><p>This value can be evaluated using the analytic representation of the field. Once the ∆θ (e * ) is evaluated from the original field, one compute the period jump of the dual edge using Equation 5:</p><formula xml:id="formula_24">p(e * ) = 1 2π (∆θ (e * ) − ang(x( f ), x( f )) − θ ( f ) + θ ( f )) (15)</formula><p>In <ref type="figure">Figure 7</ref>, we show an example of how to compute θ ( f ) and period jump p(e * ). We illustrate as well a concrete example of converting a singularity of the type source (index=1) into our representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE GPU-BASED VISUALIZATION ALGORITHM</head><p>In this section we present an algorithm to visualize our vector fields. We adopted a GPU-accelerated LIC-based approach working in image space, which is inspired by the Image Space Advection method proposed in <ref type="bibr" target="#b12">[13]</ref>. The algorithm is done in three passes (see <ref type="figure" target="#fig_5">Figure 8</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Pass 1: Depth Value for Geometric Discontinuities</head><p>In order to remove undesired visual continuity across the geometric discontinuities of surfaces when LIC is carried out in image space. We adopted the criteria to distinguish the geometric discontinuities proposed in <ref type="bibr" target="#b12">[13]</ref> as follows.</p><formula xml:id="formula_25">z i+1 − z i &gt; ε q i+1 − q i (16)</formula><p>where ε is a threshold chosen to be 0.15 for the results shown in this paper. The test compares the depth values in the object space z i and z i+1 of two consecutive points q i and q i+1 along the integral path in the image plane. A positive result of the test identifies a geometric discontinuity. To allow performing the above test in the LIC pass, the Z-buffer is rendered to the frame buffer and stored as a texture, T depth .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Pass 2: Object to Image Space Projection</head><p>Since the LIC is performed in image space, the vectors at the points along the forward and backward line integral paths need to be known in advance. We achieve this by storing the vector field of the surface as follows. First, for each visible point of the surface, we compute its vector using the interpolation scheme as described in Section 2. We only interpolate the direction since we are only using the directional component of the vector for the LIC pass. The norm of the vectors can also be interpolated to give more effects of the visualization as done in <ref type="bibr" target="#b2">[3]</ref>. More specifically, in our GPU implementation, we associate (1,0,0), (0,1,0) and (0,0,1) to the vertices of the subdivision simplex</p><formula xml:id="formula_26">G( f ), G([v i v j ]) and v i respectively, where f = [v i v j v k ], as their barycentric coordinates (1 − λ 1 − λ 2 , λ 1 , λ 2 )</formula><p>. The direction of a point in the subdivision simplex (except v i , where it is undefined) is given by the angle of rotation, θ measured with respect to the base direction x( f ). Using Equations 10 and 7, the θ value is given by θ ( f ) + ∆θ αλ 1 /(1 − λ 2 ). Then, the obtained vector in object space is projected onto the image plane, which is then normalized. The vector in image space is rendered to the frame buffer as color, which will be resampled as a texture, T vector , in the third pass.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Pass 3: LIC in Image Space</head><p>Brief review: LIC (Line Integral Convolution) was proposed by Cabral and Leedom <ref type="bibr" target="#b2">[3]</ref> to perform a texture synthesis for the visualization of 2D vector fields. By convolving an input white noise texture T noise with a low-pass filter τ(w) along streamlines, the pixel intensity is highly correlated along individual streamlines but independent in the perpendicular direction. Considering a streamline γ(s), line integral convolution gives the intensity for a pixel x 0 = γ(s 0 ) as follows:</p><formula xml:id="formula_27">Intensity(x 0 ) = s 0 +L s 0 −L τ(s − s 0 )T noise (γ(s))ds<label>(17)</label></formula><p>We carry out LIC in image space using a programmable GPU as follows: For a visible point on the surface projected onto the image space, starting from this point q 0 , the streamline is traced in the positive and negative directions by coordinate advection. The advection is done by using vectors obtained by resampling the vector image T vector stored in the first pass.</p><p>The time step ∆s is defined such that n • ∆s = L, where n is the number of steps and L = 1/10, in the both directions. We use only the direction of the vector as done in <ref type="bibr" target="#b2">[3]</ref> and we found that the results obtained are satisfactory. As for the convolution kernel, we chose to use a rather simple low-pass filter, which is of value 1/2L in [−L, L] and zero elsewhere. Namely, the average of the 2n + 1 sample of the T noise along the streamline. We chose this box filter basically for the reason of performance. To implement more complicated kernels such as the Hanning filter as done in <ref type="bibr" target="#b2">[3]</ref>, one needs more precomputation and extra storage (a one-dimensional texture as discussed in <ref type="bibr" target="#b8">[9]</ref>).</p><p>The integral in a direction (positive or negative) stops at q i whenever the position q i gives a positive result to Equation 16 by resampling the depth information, T depth , stored in the second pass. Random noise value is assigned to the unsampled points on the rest of the streamline. This ensures visual discontinuities at geometric discontinuities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RESULTS, DISCUSSIONS AND CONCLUSIONS</head><p>We have shown examples of vector fields that are represented by our construction on several types of surface. All the examples are visualized by the LIC-based algorithm that we presented, which is implemented on a machine with a 1.7 GHz Pentium processor and 1 GB of RAM equipped with a GeForce FX5650 graphics card. We achieved 15 f rames/s to visualize the Statue (50k facets) at resolution 800 × 600.</p><p>In every example that we have shown, using our representation, singularities can only appear at vertices. <ref type="figure" target="#fig_1">Figure 1</ref> shows the comparison of our representation and the classic piecewise linear vector field. Note that our interpolation scheme is C 0 smooth except at vertices. It is not C 1 , but our choices lead to continuity of the derivative across edges in direction perpendicular to the crossed edge.</p><p>We also show examples of vector fields defined on surfaces of various genuses. <ref type="figure" target="#fig_1">Figures 1, 2 and 9</ref> show genus-0 surfaces, <ref type="figure" target="#fig_5">Figure 8</ref> shows a genus-2 surface and <ref type="figure" target="#fig_1">Figure 10</ref> shows a genus-3 surface with more geometric detail. Amongst the examples, <ref type="figure" target="#fig_2">Figure 2</ref> is especially interesting. One can see in this figure that curvilinear sectors in the vicinity of a higher-order singularity correspond to the three basic sector types. Moreover, it shows that the complexity of the singularities that a vertex can represent is not limited by its connectivity. Finally, the index that we have defined in Equation 14 satisfies the Poincaré- Hopf index theorem as we have proved in <ref type="bibr" target="#b16">[17]</ref>. One can check for instance in <ref type="figure" target="#fig_2">Figure 2</ref> that the indices of the two singularities of the sphere sum to 5 − 3 = 2 = χ(g = 0), where g is the genus and χ is the Euler characteristic of the surface.</p><p>Our representation also enables singularities with fractional indices to be represented. This is achieved by using period jumps multiple of 1/2 or 1/4 instead of integers. Examples are shown in <ref type="figure" target="#fig_2">Figure 2</ref>, 1-bottom and 9 for the three cases respectively.</p><p>In terms of memory consumption, vertex-based vector field encoding schemes on surfaces require three real numbers (4 bytes) to be stored per vertex. Our facet-based encoding requires two real numbers to be stored per facet corresponding to the angle and norm, and one integer (1 byte) per edge corresponding to the period jump. If we denote V the number of vertices, and considering that the number of facets (resp. edges) of a mesh is around 2 (resp. 3) times the number of vertices, our approach requires around (2 × 4 × 2 + 2 × 3)V = 22V bytes to be stored while it needs around (3 × 4)V = 12V bytes in the classic vertex-based encoding scheme. This difference is explained by the fact that our sampling is on facet barycenters, which are around twice as dense as vertices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Limitations</head><p>We have adopted the side-vertex interpolation scheme not only for efficiency and simplicity considerations, but also for a nice visualization of singularities of arbitrary index. The drawback of this choice is that field discontinuities may appear at non-singular vertices. However, the visual quality is affected only when one zooms very closely to a vertex or on a coarse mesh where a vector field with high variations is defined. In such cases, one can use other types of interpolation at non-singular vertices to make the field smoother. This will be one of the directions in the future work.</p><p>With our representation, singularities can only occur at vertices, whereas in piecewise linear vector fields, first-order singularities may appear anywhere on facets. This is more an advantage than a flaw since it gives direct control over the singularity placement. Moreover, we can allow a singularity anywhere on the mesh by simply creating a new vertex at the desired singularity position and splitting the corresponding facet in three.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions and Future Work</head><p>In this paper, we have introduced a concise yet complete representation of vector fields on triangulated surfaces with arbitrary topology. The representation enables the user to capture or represent higher-order singularities in a given continuous vector field, for example using a FEM function basis. The vector field is described in polar coordinates on each facet, with a facet edge being chosen as the reference to define the angle. We have introduced an integer called the period jump, which is associated to each edge of the triangulation to remove the ambiguity in interpolating the angle between two facets sharing an edge. The field is interpolated over the whole surface by using a variant of side-vertex interpolation, which combined with the notion of the period jump removes the bound on the complexity of singularities that a vertex can represent imposed by its connectivity. Since the singularities can only be located at vertices and their indices can be found combinatorily, tracking of singularities over time may become easier as compared to traditional methods that use only numerical detection. To visualize the so-defined vector field at interactive frame rate, we have presented a LIC-based GPU-accelerated algorithm operating in image space.</p><p>There are several directions for the future work. Most naturally, the representation may be extended to represent 3D vector fields with higher-order singularities. Besides, by adopting our representation, one can carry out visualization of dynamic flow on surfaces. Finally, as discussed in the previous section, a different interpolation scheme can be studied for non-singular vertices. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Manuscript received 31</head><label>31</label><figDesc>March 2006; accepted 1 August 2006; posted online 6 November 2006. For information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1</head><label>1</label><figDesc>Fig. 1. Two examples of non-linear vector fields on the sphere represented by our facet-based data structure (left). First-order (yellow) and higher-order (red) singularities are defined at vertices. The top one is a vector field (with singularities of indices 2,1,-1). The bottom one is a vector field with sign ambiguity (with singularities of indices 1,1/2,-1/2). The vector fields are visualized using our LIC-based method (middle). On the right, we show the same two vector fields represented by the classic vertex-based piecewise linear representation. Note that the higherorder singularities are split into combinations of first-order singularities.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Top: a sphere with only two higher-order singularities of index +5 (front) and -3 (back), the sum of which equals the Euler characteristic (2 for a sphere). Bottom: zooming in the vicinity of the singularities. One can observe that the hyperbolic and elliptic structure of the curvilinear sectors, which have been described in Tricoche et al.'s work (see Figure 3). Note that using our approach, the separatrices of the curvilinear sectors do not need to appear on the incident edges (black lines) of the vertex.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 3 .</head><label>3</label><figDesc>Modeling a higher order singularity with the three types of curvilinear sectors by Tricoche et al.'s method ply done by flattening the pair due to the zero Gaussian curvature along the common edge.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Illustration on two adjacent (primal) triangles of a primal mesh (light blue) and its barycentric dual (magenta). Subdivision simplices are triangles based on a primal vertex (green), a dual vertex (red), and an edge middle (dark blue). Their edges are based on primal and dual edges, and edges between primal and dual vertices (yellow).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>The three passes of the LIC on GPU.Left: the geometric discontinuities identified; middle: vectors on the surface encoded in colors;right: result of the LIC process on a vector field with a singularity of index -2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 9 .</head><label>9</label><figDesc>One can have singularities with indices of multiples of 1/4. If the period jumps used are of multiples of 1/4. Left: indices of the singularities from left to right and from top to bottom are 1/4, -1/4, 1/2 and 1. Right: a zoom to the singularity of index 1/4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 10 .</head><label>10</label><figDesc>A vector field defined using our representation on a genus-3 surface. Yellow dots are first-order singularities with indices -1 and 1. Red dots are higher-order singularities of indices both -2.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>The authors are greatly indebted to the reviewers for their excellent feedback. Special thanks to Eric Kow for the proof-reading of the manuscript.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Qualitative theory of second-order dynamic systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Andronov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Leontovich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Maier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Israel Program For Scientific Translation</title>
		<imprint>
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast line integral convolution for arbitrary surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Battke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization and Mathematics</title>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="181" to="195" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Imaging vector fields using line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Leedom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="263" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Meshed atlases for real-time procedural solid texturing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">A</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="106" to="131" />
			<date type="published" when="2002-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Firby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gardiner</surname></persName>
		</author>
		<title level="m">Surface Topology</title>
		<imprint>
			<publisher>Ellis Horwood Ltd</publisher>
			<date type="published" when="1982" />
			<biblScope unit="page" from="115" to="135" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Surface Parameterization: a Tutorial and Survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">S</forename><surname>Floater</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hormann</surname></persName>
		</author>
		<editor>N. A. Dodgson, M. S. Floater, and M. A. Sabin</editor>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Springer-Verlag</publisher>
			<biblScope unit="page" from="157" to="186" />
			<pubPlace>Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualizing flow over curvilinear grid surfaces using line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="240" to="247" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Using line integral convolution for flow visualization: Curvilinear grids, variable-speed animation, and unsteady flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Forssell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="133" to="141" />
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Image space advection on graphics hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Grabner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 21st Spring Conference on Computer Graphics and its Applications</title>
		<meeting>the 21st Spring Conference on Computer Graphics and its Applications</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="75" to="82" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Applications of pixel textures in visualization and realistic image synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Heidrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Symposium on Interactive 3D Graphics</title>
		<meeting>Symposium on Interactive 3D Graphics</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="127" to="134" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Illustrating smooth surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hertzmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zorin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="517" to="526" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Illustrating surface shape in volume data via principal direction-driven 3D line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Interrante</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Image space based visualization of unsteady flow on surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schneider</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="131" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">ISA and IBFVS: Image space-based visualization of flow on surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jobard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="637" to="648" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The side-vertex method for interpolation in triangles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Approximation Theory</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="318" to="336" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Periodic global parameterization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sheffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint/>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">N-symmetry direction fields on surfaces of arbitrary genus</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Ray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Vallet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Levy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006-01" />
		</imprint>
		<respStmt>
			<orgName>INRIA-ALICE</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Interactive exploration of volume line integral convolution based on 3D-texture mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rezk-Salama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hastreiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Christian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="233" to="240" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Visualizing non-linear vector field topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kruger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Menzel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rockwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="109" to="116" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">C1-interpolation for vector field topology interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Framework for visualizing higher-order basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bertel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Malaterre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Pebay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Fast and resolution independent line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="249" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Designing 2D vector fields of arbitrary topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Forum (Proceedings Eurographics</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="595" to="604" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Vector and Tensor Topology Simplification, Tracking, and Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Schriftenreihe Fachbereich Informatik</title>
		<imprint>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="2002" />
		</imprint>
		<respStmt>
			<orgName>University of Kaiserslautern</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Higher order singularities in piecewise linear vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Mathematics of Surfaces IX</title>
		<meeting><address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="99" to="113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Image based flow visualization for curved surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="123" to="130" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Texture synthesis over arbitrary manifold surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L.-Y</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGGRAPH</title>
		<meeting>ACM SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="355" to="360" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Topological construction and visualization of higher order 3d vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Forum (Proceedings Eurographics</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="469" to="478" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Extracting higher order critical points and topological simplification of 3d vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="559" to="566" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">A topology simplification method for 2D vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">H X</forename><surname>Tricoche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="359" to="366" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<title level="m" type="main">Interactive design and visualization of tensor fields on surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hays</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
		<respStmt>
			<orgName>Oregon State University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Vector field design on surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mischaikow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Accepted by ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="page" from="4" to="16" />
			<date type="published" when="2004" />
		</imprint>
		<respStmt>
			<orgName>Georgia Institute of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
	<note>pending revision</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
