<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">High-Quality Extraction of Isosurfaces from Regular and Irregular Grids</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Schreiner</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carlos</forename><forename type="middle">E</forename><surname>Scheidegger</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Cláudio</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
						</author>
						<title level="a" type="main">High-Quality Extraction of Isosurfaces from Regular and Irregular Grids</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Isosurface Extraction</term>
					<term>Curvature</term>
					<term>Advancing Front</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Isosurfaces are ubiquitous in many fields, including visualization, graphics, and vision. They are often the main computational component of important processing pipelines (e.g. , surface reconstruction), and are heavily used in practice. The classical approach to compute isosurfaces is to apply the Marching Cubes algorithm, which although robust and simple to implement, generates surfaces that require additional processing steps to improve triangle quality and mesh size. An important issue is that in some cases, the surfaces generated by Marching Cubes are irreparably damaged, and important details are lost which can not be recovered by subsequent processing. The main motivation of this work is to develop a technique capable of constructing high-quality and high-fidelity isosurfaces. We propose a new advancing front technique that is capable of creating high-quality isosurfaces from regular and irregular volumetric datasets. Our work extends the guidance field framework of Schreiner et al. to implicit surfaces, and improves it in significant ways. In particular, we describe a set of sampling conditions that guarantee that surface features will be captured by the algorithm. We also describe an efficient technique to compute a minimal guidance field, which greatly improves performance. Our experimental results show that our technique can generate high-quality meshes from complex datasets.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Implicit surfaces are a powerful and effective technique with a wide range of applications in many scientific areas. In particular, they are used in many modeling and geometric tasks in scientific visualization and computer graphics. An isosurface S a is defined as the preimage of a function f : R n → R and value a; it is the set of points in the domain that map to a, i.e. S a = {x ∈ R n : f (x) = a} <ref type="bibr" target="#b16">[17]</ref>. We then say f is the implicit function and a is the isovalue. Part of the popularity of implicit surfaces comes from their representation power, solid theoretical foundation, and relative ease of manipulation <ref type="bibr" target="#b8">[9]</ref>. Their acceptance has partly been driven by the number of successful techniques for their computation and rendering. Following the discovery of Marching Cubes algorithm <ref type="bibr" target="#b32">[33]</ref>, the last two decades have seen a constant stream of work on effective techniques for the computation and visualization of isosurfaces (see, e.g., <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b38">39,</ref><ref type="bibr" target="#b48">49]</ref>).</p><p>Although a number of techniques have been proposed to solve the isosurface generation problem, the Marching Cubes (MC) algorithm <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b38">39]</ref> forms the basis for many widely used methods. MC works by sampling the function f at a grid of fixed resolution, and uses a table of possible configurations of range signs to create a triangulated surface out of those samples. The main strengths of MC are its generality, simplicity and robustness, which have made it one of the most used meshing algorithms in practice (e.g., 3D photography <ref type="bibr" target="#b28">[29]</ref>). The main problem with MC is the inherent bias caused by only placing vertices on edges which intersect the surface. This also implies that the sampling density is proportional to the grid resolution, and not to any intrinsic surface properties. Meshes generated by MC (and variants) are typically over-tessellated, and contain many bad triangles <ref type="bibr" target="#b0">(1)</ref>. The low quality makes them unsuitable for further geometry processing, and typically they require some form of post-processing (e.g., smoothing) before being used in applications.</p><p>There are a number of ways to improve the quality of MC meshes. One approach is to apply a remeshing technique <ref type="bibr" target="#b2">[3]</ref> to optimize sampling, grading, size, and shape of elements, while keeping the overall</p><p>• John Schreiner, Carlos E. Scheidegger and Cláudio T. <ref type="bibr">Silva</ref>  geometry the same. This can be challenging, since MC meshes are often large, complex, and contain many geometric degeneracies. To make the meshes simpler, and overall of better quality, a geometric simplification (or at least a smoothing) step is applied to them <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b29">30]</ref>. We note that this is currently the preferred way to deal with MC meshes. Existing simplification techniques are very robust and scalable, and they are able to simplify even the largest isosurfaces. One issue with this approach is that the use of multiple steps makes it hard to control the approximation accuracy throughout the process. Another way to solve this problem is to develop a direct technique for isosurface extraction which avoids the intermediate step of generating a MC mesh. One such example is the algorithm of Wood et al. <ref type="bibr" target="#b50">[51]</ref>, which first creates a coarse mesh with the correct topology and iteratively refines it with a force based solver. This produces an adaptively sampled mesh, but the transition regions are created with right triangles which leads to abrupt changes in the triangle sizes. An alternative approach is the advancing front paradigm, whose basic idea is to tile the surface one triangle at a time by performing a sequence of local decisions <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b25">26]</ref>. Our work fits in this category. In particular, we build upon a recently proposed class of advancing front methods by Schreiner et al. <ref type="bibr" target="#b44">[45]</ref> to develop a new general technique for isosurface generation.</p><p>The main contributions of our paper are:</p><p>• A new technique for extracting high-quality triangulated meshes of isosurfaces defined from functions sampled on regular and irregular grids. Our algorithm is efficient and guarantees bounded distance from the isosurface while being adaptive to curvature.</p><p>• An extension of the theoretical foundations of the guidance field approach of <ref type="bibr" target="#b44">[45]</ref> that shows the conditions under which the reconstructed triangulated surface accurately reflects the implicit surface.</p><p>• An efficient way to cull redundant information from the guidance field, improving memory usage by a factor of ten or more, and speed by up to a factor of five.</p><p>• A set of detailed experimental results on both regular and unstructured grids that shows the effectiveness of our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PREVIOUS WORK</head><p>Since the introduction of the classical Marching Cubes algorithm <ref type="bibr" target="#b32">[33]</ref>, there has been an immense amount of work in the polygonization of implicit surfaces. The original algorithm contained ambiguities, where . Triangle meshes generated from Marching Cubes have inherently biased sampling, which produces badly shaped triangles. Our advancing front algorithm ensures appropriate mesh grading and curvature adaptation, and generates triangle meshes with excellent triangle shape. The triangulation produced by Marching Cubes is shown on the left side, and our technique is shown on the right side.</p><p>some configurations could be interpreted in more than one way, possibly generating non-manifold meshes. Nielson and Hamann's asymptotic decider <ref type="bibr" target="#b38">[39]</ref> was among the first to address the topic using bilinear interpolation to resolve face ambiguities, and now the issue of ambiguity in MC has been thoroughly examined <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b36">37]</ref>. There are many variants of MC. For instance, the Marching Tetrahedra (MT) <ref type="bibr" target="#b39">[40,</ref><ref type="bibr" target="#b46">47]</ref> class of algorithms work well for tetrahedral meshes, and does not have ambiguous cases. Dual methods generate the topological dual of the MC surfaces, and reproduce sharp features by extrapolating the sampled normals <ref type="bibr" target="#b24">[25]</ref>. Much effort has been put into making MC more efficient, with particular emphasis on avoiding empty cells <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b30">31,</ref><ref type="bibr" target="#b48">49]</ref>. There has also been work on generating high-quality triangulated isosurfaces. Physically based simulation offers a way of computing a good grid in which to perform the MC tests <ref type="bibr" target="#b19">[20]</ref>, and using repulsion forces to sample a surface to be triangulated <ref type="bibr" target="#b47">[48]</ref>. Hybrid approaches are also possible. For example, Wood et al. <ref type="bibr" target="#b50">[51]</ref> first create a coarse mesh with topology equivalent to the MC mesh, then use a physically based repulsion solver to semi-regularly tile the surface.</p><p>Curvature is an important geometric concept that is useful in processing isosurfaces. Kindlmann et al. <ref type="bibr" target="#b26">[27]</ref> introduced a framework for computing differential properties of a volume through carefully constructed spatial filters. We use their formulation for curvatures of a level set to guarantee an accurate reconstruction of the isosurface. Witkin and Heckbert <ref type="bibr" target="#b49">[50]</ref>, and later Meyer et al. <ref type="bibr" target="#b33">[34]</ref> use curvature information to appropriately sample implicit surfaces with particles. Crossno and Angel combine curvature information with physically based simulation to sample implicit surfaces with particle systems <ref type="bibr" target="#b17">[18]</ref>. However, when particles are used as triangle vertices, triangles tend to be poorly shaped wherever there are abrupt changes in curvature. Curvature has also been essential in the development of advancing front algorithms. Scheidegger et al. <ref type="bibr" target="#b43">[44]</ref> introduced an advancing front algorithm for triangulating point set surfaces which made use of a guidance field to both provide curvature adaptability and restrict the change in triangle sizes. Schreiner et al. <ref type="bibr" target="#b44">[45]</ref> (reviewed in the next section) builds a solid theoretical advancing front framework on top of these initial ideas. In this paper, we provide a condition which guarantees that the entire surface is accurately triangulated. We also describe a procedure to build a minimal guidance field that contains no irrelevant samples, making the triangulation more efficient.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">AN ADVANCING FRONT FRAMEWORK FOR MESHING IM-PLICIT SURFACES</head><p>Advancing front (also referred to as surface tracking and continuation) algorithms are a class of surface meshing algorithms that begin with a seed point, and grow the triangulation across the surface. The front is the boundary of the mesh that has already been generated. It is advanced by choosing an edge in the front and creating a new triangle attached to it. If the new triangle causes a front to intersect itself, it is split into two separate fronts. If it intersects a different front, the two are merged. There has been a substantial amount of previous work on using advancing front techniques for mesh generation <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b45">46]</ref>, and in particular, for implicit surface triangulation <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b23">24]</ref>.</p><p>The meshing research community has for a long time used advancing fronts for generating high-quality meshes suitable for numerical simulation <ref type="bibr" target="#b40">[41]</ref>. In that context, a meshing algorithm starts with welldefined domain representations and creates a piecewise linear representation, progressively increasing the dimension of the primitive: edges, triangles, and then tetrahedra. The essential difference in our setting is the absence of a well-defined description of the components of the volume. We assume a much more general model -any surface defined as an isosurface whose gradient and Hessian is non-zero everywhere. In this case, it would be a challenge in itself to find any charts for the reconstructed surface, let alone one that is suitable for use in meshing. Some works have tried to create a mesh under more general conditions. To the best of our knowledge, these seem limited to ad hoc steps like smoothing a mesh generated from preclassified images <ref type="bibr" target="#b11">[12]</ref>. Some other problems we discuss have previously been noticed in that community as well. Borouchaki et al. discuss methods for achieving gradation control: enforcing that the length ratio of two consecutive edges is bounded <ref type="bibr" target="#b9">[10]</ref>. As section 3.1 points out, we achieve gradation by careful construction of the guidance field.</p><p>In order to accurately mesh a surface, triangle sizing should be inversely proportional to the maximum curvature of the surface. This adaptivity to the local surface also prevents the output mesh from becoming unreasonably dense. Most early work did not adapt triangle size to geometric features, and thus depended on an a priori compromise between the size of the resulting mesh and the representation of small features of the isosurface. These algorithms were quickly followed by adaptive variants <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b25">26]</ref>. While these help reduce the size of the resulting mesh, they still have several drawbacks. These algorithms essentially replace the assumption of maximum curvature (embodied by the predetermined triangle size) by an assumption of small curvature changes along the surface. Since these algorithms sample curvature locally, it is still possible to step over important geometrical and topological features of the isosurface. Because of these limitations, previous advancing front algorithms relied on heuristics for checking front interference <ref type="bibr" target="#b25">[26]</ref>.</p><p>In itself, adapting the surface to curvature introduces another problem: sharp changes in curvature across the surface lead to sharp changes in triangle size and poorly shaped triangles <ref type="bibr" target="#b9">[10]</ref>. Additionally, robust front interference tests are highly non-trivial. This is important, since the test is critical to the correct behavior of the algorithm. If the test fails to detect front interference, there will be two or more sheets of triangles over portions of the surface. The following figure from <ref type="bibr" target="#b43">[44]</ref> shows a common geometric situation where usual adaptive advancing front algorithms fail to reconstruct the surface correctly. The inset at the left shows the consequences of determining triangle sizes completely locally, while the right inset shows the desired correct behavior: triangles need to be made smaller before they reach the geometric feature.</p><p>The advancing front algorithm of Schreiner et al. <ref type="bibr" target="#b44">[45]</ref> solves these issues robustly, by introducing a solid theoretical foundation for advancing front algorithms. In their algorithm, they use a guidance field to help edge and triangle size selection. The guidance field is a scalar function g defined on the surface, which determines how long the edges incident to a point may be. They show how to construct g in such a way that it has two important properties. First, g(x) is bounded above by 2 sin(ρ)/κ max , where κ max is the maximum absolute curvature of the surface at point x, and ρ is a user defined parameter. This ensures that all of the features in the surface are captured accurately to the degree defined by ρ, independently of their scale. Second, the gradient magnitude of g is never greater than 1 − η −1 , where η is another user defined parameter. This prevents the triangle sizes from changing too rapidly and poorly shaped triangles from being formed. They also show that their guidance field construction can be used to bound both the aspect ratio of most of the triangles, and the Hausdorff distance between the original surface and the output mesh. This in turn can be used to create a front intersection test procedure which can be proven to be robust.</p><p>Their algorithm addresses all of the major issues hindering advancing front algorithms, but their robustness arguments depend critically on two assumptions. First, they assume that the surface being triangulated is smooth (even though it is certainly not the case for remeshing applications, the focus of their work). For the case of implicit surfaces, we need only assume that the gradient of the implicit function is defined and non-zero at all points in the surface. This is a reasonable assumption to make. Second, they assume that the guidance field has been sufficiently sampled so that the first property of g will hold. In their work, they simply sample the mesh densely, but have no means to check for sufficiency. Features smaller than the sampling density can easily be missed by the triangulation. In Section 4.1 we present a sampling condition which can be used to determine how many samples are truly required. Additionally, there typically will be many more samples in the guidance field than are actually required, leading to increased memory usage and execution times. In Section 4.2 we present a procedure for culling out unnecessary samples, effectively computing a guidance field of minimal size. The following pseudocode is a summary of our algorithm: Note that the functions are plotted against the parameter t, not the curve itself. g(C) is the lower envelope of allg. At the sample pointss i ,g i is minimum, and it grows linearly as the distance froms i increases. Note that if the sampling is too coarse, g(C) might not bound ι(C) (as shown in the region inside the red circle). Section 4.1 shows how to provably prevent this. Finally, some samples will not influence g(C) (in the figure, the sample shown in blue). Section 4.2 shows how to efficiently remove these points.</p><formula xml:id="formula_0">TRIANGULATE(f , ∇ f , H(f ), k, ρ, η) 1 let S be defined by all x such that f (x) = k 2 g ← GENERATE-SAMPLES(S , ∇ f , H(f )) (see Section 4.1) 3 CULL( g , ρ, η) (see</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Guidance field construction</head><p>Due to the central importance of the guidance field, we summarize the construction method of Schreiner et al. <ref type="bibr" target="#b44">[45]</ref>. We start defining a function which gives the ideal edge length at a point s on the surface:</p><formula xml:id="formula_1">ι(s) = 2 sin(ρ/2) κ max (s)</formula><p>This function essentially determines the ideal size to be the length that subtends a constant angle ρ on the minimum osculating circle of the surface at x. Amenta and Bern <ref type="bibr" target="#b3">[4]</ref> show that the local feature size (LFS) bounds the curvature by below. ι(x) could be defined in terms of the LFS, and every property of the guidance field will still hold. We use curvature because computing the medial axis is much costlier. We want edge lengths to smoothly grade as triangles come closer to s. To achieve this, we create, for each point s in the isosurface, another function, induced by ι(s). This function is defined over the entire embedding space of the isosurface:</p><formula xml:id="formula_2">g s (x) = (1 − η −1 ) • |x − s| + η −1 • ι(s)</formula><p>This is just a cone centered at s, with slope 1 − η −1 . If s was the only point sampled from the surface,g s would tell us exactly how large an edge we could create at any other point on the surface. Note thatg s is conservative:g s (s) &lt; ι(s). This will be important for our sampling condition described in Section 4.1. Since we want all the constraints to be satisfied, we define the guidance field g to be the lower envelope of all of theg's induced at each point on the surface: <ref type="figure" target="#fig_1">Figure 2</ref> illustrates g(x) for a low-dimensional case. We restrict ourselves to isotropic reconstruction: triangle edge lengths are independent of their orientation on the surface. The algorithm behavior depends on only two parameters, ρ and η, which control respectively the reconstruction accuracy and well-shapedness of triangles. ρ controls the approximation error <ref type="bibr" target="#b43">[44]</ref>, and η determines the rate of triangle expansion: every two adjacent edges e 1 and e 2 such that |e 1 | &gt; |e 2 | should respect |e 1 |/|e 2 | ≤ η. There are some noteworthy features of the constructed guidance field. As shown in <ref type="bibr" target="#b44">[45]</ref>, g(x) is Lipschitzcontinuous, and so triangles will have good grading <ref type="bibr" target="#b42">[43]</ref>. Additionally, its exact value can be evaluated efficiently by kd-tree queries, requiring no splatting of values in a regular grid or other, similar strategies <ref type="bibr" target="#b1">[2]</ref>.</p><formula xml:id="formula_3">g(x) = min s∈Sg s (x)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Application to isosurfaces</head><p>Kindlmann et al. <ref type="bibr" target="#b26">[27]</ref> show how to compute the geometry tensor G for implicit surfaces. G encodes all curvature information, and so we use  <ref type="table">Table 1</ref>. Sample of results of guidance field culling. "before" refers to running time without culling, and "after" refers to running time after culling.</p><p>it to compute κ max . We assume the isosurface does not pass through critical points of f , and we denote n = (∇ f )/|∇ f |. Then,</p><formula xml:id="formula_4">P = I − nn T H =      ∂ 2 f ∂ x 2 ∂ 2 f ∂ x∂ y ∂ 2 f ∂ x∂ z ∂ 2 f ∂ x∂ y ∂ 2 f ∂ y 2 ∂ 2 f ∂ y∂ z ∂ 2 f ∂ x∂ z ∂ 2 f ∂ y∂ z ∂ 2 f ∂ z 2      G = PHP/|∇ f |</formula><p>κ max is given by the spectral radius of G, which is easily computable from matrix invariants. From κ max evaluated at s, we compute ι(s), which determines a sample on the guidance fieldg s .</p><p>Advancing front algorithms must start from a seed point. In these algorithms, there can only be as many connected components as there are seed points, so these are an important part of the process. There are efficient algorithms for computing these seed points, e.g., <ref type="bibr" target="#b5">[6]</ref>. These points are then projected on the surface using gradient descent.</p><p>We sample the surface curvature by generating a jittered random set of sample points inside cells that neighbor the surface and then project each of them on the surface, again through gradient descent. Section 4.1 describes how to determine the number of points that are necessary to guarantee correct reproduction of features. Finally, each new triangle is created by determining the correct size as described in <ref type="bibr" target="#b44">[45]</ref>. The point is projected on the surface by using the dihedral angle of the edge as the free parameter, and searching for the isovalue similarly to the technique described in <ref type="bibr" target="#b12">[13]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">GUIDANCE FIELD ENHANCEMENTS</head><p>In this section, we describe two contributions to the theory of advancing front algorithms. The first one shows for the first time how to guarantee that all features of the surface will be represented in the triangle mesh, by determining an upper bound on the curvature of the isosurface. This gives a condition for sufficiency of the guidance field. The second contribution significantly improves the efficiency of the guidance field evaluation. We show that most samples do not affect the guidance field in any way, and we give an algorithm to compute the minimal set of samples that are required to define g.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Creating a sufficient guidance field</head><p>The guidance field described in the previous section offers an ideal way to control the mesh gradation of the reconstruction. The fundamental problem, though, is how to determine whether a surface has been appropriately sampled. The guidance field is defined to be bounded above by ι over all of the points on the mesh. However, with an arbitrarily sampled guidance field, this may not be the case as can be seen in <ref type="figure" target="#fig_1">Figure 2</ref>. The consequence of ι not bounding g is that there will be points on the surface where the edge length created by the advancing front will be larger than the curvature at that point allows. Fortunately, sinceg s (s) conservatively bounds ι(s), an infinite sampling density is not required to bound of ι on g. In this section, we show how a sufficient sampling density can be computed. We call a guidance field sufficient when it is less than ι at every point on the surface. <ref type="figure">Fig. 3</ref>. Minimal guidance fields. The two figures are rendered using only the points in the guidance field -the black "regions" are simply the inside of the surface without any illumination. After trimming, all the tan-colored points are removed from the data structures, leaving only the red points for querying.</p><p>We begin by taking note of two aspects of the guidance field. First, we note that it can be made more conservative by simply reducing the radius of curvature for a sample point when it is inserted into the guidance field. This will never cause a sufficient guidance field to become insufficient, but it may cause an insufficient guidance field to become sufficient. Second, we note that given a guidance field sample s, and another point on the surface x where |x − s| ≤ ι(s), theng s (x) ≤ ι(s). Assume that we can compute the minimum ι over all of the points in the surface, and call it ι . We can now redefine the guidance field samples to be in terms of ι . This has the effect of making the guidance field more conservative, as in the first note above. It is now clear that the guidance field is sufficient if there are no points x in the surface such that there are no guidance field samples s with |x − s| ≤ ι . Stated conversely, the guidance field might not be sufficient if there exists a point x such that |x − s| &gt; ι for all guidance field samples s.</p><p>The final remaining issue is how to compute ι . Since ι is inversely proportional to κ max , this means that we must find an upper bound on κ max . In order to compute this bound, recall that κ max is defined as the absolute value of the largest eigenvalue of the geometry tensor G. Notice that this is exactly the spectral radius of G: κ max = r(G). We will now bound the spectral radius of G. First, recall that the spectral radius is bounded by any consistent matrix norm:</p><formula xml:id="formula_5">r(M) ≤ M</formula><p>Recall, also, the submultiplicative property of matrix norms:</p><formula xml:id="formula_6">A • B ≤ A • B<label>(1)</label></formula><p>We use the Frobenius norm of a matrix, M 2 = ∑ i, j m 2 i j . We bound G by directly applying Equation (1) to the κ max definition.</p><formula xml:id="formula_7">r(G) = κ max ≤ G ≤ PHP/|∇ f | r(G) ≤ P • H • P • I/|∇ f |<label>(2)</label></formula><p>We denote the normal n = ∇ f /|∇ f | = [n x n y n z ] T , and we compute P by summing the diagonal terms and then the off-diagonal ones:</p><formula xml:id="formula_8">P 2 = (1 − n x 2 ) 2 + (1 − n y 2 ) 2 + (1 − n z 2 ) 2 + 2n x 2 n y 2 + 2n y 2 n z 2 + 2n x 2 n z 2 P 2 = 3 − 2(n x 2 + n y 2 + n z 2 ) + n x 4 + n y 4 + n z 4 + 2n x 2 n y 2 + 2n y 2 n z 2 + 2n x 2 n z 2 P 2 = 3 − 2(n x 2 + n y 2 + n z 2 ) + (n x 2 + n y 2 + n z 2 ) 2 = 2,</formula><p>since |n| = 1, and so n x 2 + n y 2 + n z 2 = 1. Another simple calculation shows that I/|∇ f | = √ 3/|∇ f |, and so</p><formula xml:id="formula_9">r(G) ≤ 2 √ 3 |∇ f | H<label>(3)</label></formula><p>This inequality shows that κ max is intimately related to |∇ f | and the Hessian H. More importantly, it shows us that to bound κ max above, it is enough to give a lower bound on |∇ f | and an upper bound on H . Since bounding these values over all of the points in the isosurface is very difficult without a parameterization, a looser bound can be found by taking it over all of the points in the domain of the implicit function.</p><p>Creating a sufficient guidance field in the way described above would have the effect of making g flat -the edge lengths of the triangulation would be almost uniform over the entire surface. Additionally, the bound on κ max may go to infinity as the gradient magnitude goes to zero. These two issues can easily be addressed by adaptively subdividing the domain of the implicit surface, and creating sufficient guidance fields in the separate regions independently. The guidance fields are merged by using the new sample points from all separate regions: this ensures that the resulting guidance field is sufficient and Lipschitz-continuous. Since we assume that the implicit function has non-zero gradient at all the points on the surface and the function is at least C 1 continuous, this procedure is guaranteed to find a finite bound: there is always a tubular neighborhood of the surface where the gradient is non-zero.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Minimal guidance field</head><p>Creating the guidance field with sufficiently many samples to capture all of the details in the surface can produce a very large number of points. The size of the guidance field directly affects the memory usage and running time of our algorithm, so it is desirable to remove as many irrelevant samples as possible. Though many of the samples are necessary, a large portion of them provide no information to the guidance field. This happens when the edge length required for the curvature at a sample s 1 in the guidance field is always smaller than that of another sample s 2 . In this situation, we say that s 1 dominates s 2 , as illustrated in <ref type="figure" target="#fig_1">Figure 2</ref>.</p><p>A naïve procedure for culling the unnecessary samples is to compare each sample to every other sample of the guidance field. This is simple since determining if a single point dominates another is straightforward. Since our guidance fields often initially contain millions of samples, this O(n 2 ) algorithm is not practical.</p><p>Looking at <ref type="figure" target="#fig_1">Figure 2</ref>, notice how each of the samples define a cone in R n+1 , where n is the dimension of the embedding space. This analogy translates perfectly into the case of 2-manifolds embedded in R 3 : eachg defines a right cone in [x, y, z, r] space. By constructing a hierarchical data structure in this space, we can perform carefully constructed range queries and remove entire sets of unnecessary samples in a single query.  <ref type="figure" target="#fig_0">(η/η − 1)</ref>. This cone is completely defined by the sample's location and the user parameters ρ and η. Finding all of the samples that are dominated by s is now reduced to a kd-tree query to find all of the points that lie inside of this cone. Such a query relies on bounding box / cone intersection and point-in-cone tests, both of which are quite simple given that the cones are always aligned with the r axis. When doing the kd-tree query, we simply mark all of the samples that lie inside of the cone. If all of the children of a node have been marked, the node is also marked. This effectively prunes off branches of the kd-tree from subsequent queries. Ideally, we would query the cones of the samples that dominate the most samples first, thus pruning off large parts of the tree early in the process. However, since this information is not known or easily computed, we use a heuristic. We note that a given sample will never be dominated by another sample with lower curvature. By sorting the samples by their curvature and doing the queries in descending order, we can perform the culling in about ten seconds for a million samples. When more than this many samples are present in the original guidance field, we recursively subdivide until the culling can be performed on a smaller subset. The following pseudocode summarizes the algorithm.</p><formula xml:id="formula_10">CULL(g, ρ, η) 1 tree ← kd-tree(s) 2 Sort(s, κ max (s)) 3 for 0 ≤ i ≤ |s|: 4 do if Not(Marked(s i )) 5 then c ← Cone(s i , ρ, η) 6</formula><p>MarkIfInside(tree, c) 7 Discard all markeds i from g(x)</p><p>This procedure typically removes a large percentage of the sample points, resulting in much lower memory usage and significantly faster guidance field queries. <ref type="table">Table 1</ref> shows some of the results of culling the guidance field. Notice that even though culling requires additional processing, the total running time improves significantly. Also, notice how in some cases, less than half of a percent of the points remain in the guidance field after culling. <ref type="figure">Figure 3</ref> shows the location of the guidance field samples in space. It is clear that the samples in the high curvature areas are the most significant, and tend to dominate the low curvature samples in their vicinity. Surprisingly, this effect is quite non-local, which accounts for the drastic reduction in the total sample count.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DEFINING THE IMPLICIT FUNCTION</head><p>An important advantage of our advancing front technique is its generality. The algorithm itself is entirely oblivious to how the implicit function is defined. We only require within a band of the desired isosurface, that the function be continuous (at least C 1 , preferably higher order continuity), and that its value, first, and second order partial derivatives can be evaluated. We also require that the gradient is nonzero at all points in the isosurface. These requirements are quite mild and allow our algorithm to be applied to many different implicit function definitions. Choosing the definition can be left up to the user. This allows the implicit function being used by our advancing front algorithm to exactly match the function used to generate the data. For example, if the user wishes to extract the isosurfaces of a high order finite element simulation which assumes a specific polynomial interpolation scheme, the same interpolation could be plugged into our algorithm. We have been careful in our implementation to make this an easy step for the user. In this paper we show examples generated with four different surface definitions -two for structured grids and two for unstructured grids. See <ref type="table" target="#tab_3">Table 2</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Structured Grids</head><p>To define an implicit function over a regular grid of sample points, we use piecewise cubic trivariate polynomials generated by two different spline types. To generate an implicit function that interpolates the data points, we use Catmull-Rom splines <ref type="bibr" target="#b10">[11]</ref>. These splines can be thought of as using finite differences at each data point to generate gradients. The function is then extended to the interior of each cell by Hermite interpolation. This results in cubic polynomials which are C 1 continuous across cell boundaries. B-splines <ref type="bibr" target="#b41">[42]</ref> are another popular spline. These produce polynomials in each cell that maintain C 2 continuity across the boundaries, but do not interpolate the input data. This may be desirable if the data is noisy. Since the Catmull-Rom splines interpolate, they tend to produce functions with high curvature when noise is present. Though we can triangulate these surfaces without problem, the high curvature isosurfaces require more triangles to be accurately captured (see <ref type="figure" target="#fig_2">Figure 4</ref>). These spline representations are ideal because they define analytic, piecewise polynomials, which can easily be differentiated to compute gradient and curvature information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Unstructured Grids</head><p>Extending the implicit function from the data points to the interior of the cells of unstructured meshes is much more challenging. Here, we have a mesh defined by a set of connected tetrahedra with values assigned at each vertex. A scheme for defining the function on the interior of each tetrahedra that is at least C 1 continuous across faces must be created. In this paper we tried two such schemes. Splines cannot easily be applied to this situation because of the irregular nature of tetrahedral meshes. Similar to regular grids, we use one implicit function definition that is C 1 and interpolates the data values, and one that has higher order continuity but only approximates the data.</p><p>The irregular mesh interpolation scheme that we use is that of Nielson et al. <ref type="bibr" target="#b37">[38]</ref>. We have chosen this method for its simplicity, though other techniques are available, such as A-patches <ref type="bibr" target="#b4">[5]</ref> and DMS-splines <ref type="bibr" target="#b18">[19]</ref>. Nielson interpolation requires that the gradients of the implicit function are known at the vertices. Since this is generally not the case, we substitute an approximation. To estimate the gradient at vertex, we fit a trivariate quadratic polynomial to the 2-ring neighborhood of the vertex. We define the gradient of the implicit function to be the gradient of this polynomial at the vertex. The Nielson scheme first uses the function and gradient information of the vertices to define the function and gradient along all of the edges in the mesh. It then uses this edge information and extends it to be defined across all of the faces. Finally, the function is extended from the faces to the interiors of the tetrahedra. Each of the extension procedures (vertices to edges to faces to tetrahedra) is based on Hermite interpolation, and is constructed in a way that maintains C 1 continuity across the cell boundaries. The resulting implicit function definition for the interior of the tetrahedra is a complicated rational function that is not practical to differentiate analytically. Instead of resorting to finite differencing, we use C++ metaprogramming to automatically compute the function and its derivatives by encoding the chain rule for all of the primitive functions used. We use the popular moving least squares (MLS) method <ref type="bibr" target="#b27">[28]</ref> as an implicit function definition that approximates the input data. The idea of the MLS method is to compute a low degree polynomial that best approximates the input data, weighted by a function of the distance from the evaluation point to the data points. The function value at the evaluation point is then simply the value of the polynomial at that point. This has a smoothing effect on the data, so it is especially useful when noise is present in the input data. A nice property of MLS is that the smoothness of the resulting function is exactly that of the chosen weighting function. We use rapidly decaying gaussians as the weighting functions, with widths determined by the local point density. Though the function is very smooth, it is not possible to directly compute its derivatives because every evaluation involves the solution of a linear least squares problem. We have found that using quadratic polynomials for the fitting and using their differential properties as an approximation of the function performs well in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPERIMENTAL RESULTS AND DISCUSSION</head><p>We have implemented the algorithm in C++, and in this section we describe the results of a series of experiments. All timings were performed on a PC with two dual-core AMD Opteron processors running at 2.25GHz, with 4GB of main memory, running SuSE Linux 10.0. Advancing front algorithms are mostly local, allowing decisions and actions to be taken independently of the reconstruction of distant surface parts. Our implementation is multi-threaded, and it tries to take advantage of this and distribute the work of projecting points on the fronts to a set of worker threads. The guidance field computation and culling is also performed entirely in parallel. We use four threads for all shown experiments. <ref type="table" target="#tab_4">Table 3</ref> shows a summary of the experimental results of our implementation. The running times for our algorithms are typically in the order of several minutes for the larger datasets we used. The histogram column shows the distribution of triangle circle ratios (the ratio of the incircle to the circumcircle). Notice that the distribution is excellent, and also uniform across different models and parameter settings. For many of the rectangular grids, the number of triangles generated is significantly less than the output of MC.</p><p>The triangle quality generated by our algorithm is very good, as the circumcircle ratio histograms of <ref type="table" target="#tab_4">Table 3</ref> show. For all models generated, 99% of the triangles have quality at least half of optimal, and the triangle with median quality is within 3% of optimal. These results hold across different models, ρ and η values, and different surface definitions. In terms of running time, our algorithm is not as fast as MC or MT implementations. However, it should be noted that the triangulations created by our technique will tend to require negligible or no downstream processing, unlike the results of MC or MT.</p><p>The surfaces generated by our algorithm are dependent on the intrinsic geometry of the implicit function, and not on the grid on which they were sample. As a consequence, we are able to generate highquality meshes for high-curvature surfaces. Naturally, Catmull-Rom splines tend to generate surfaces with higher curvatures, while Bsplines offer an overall smoother result. We show both schemes, together with MC, on <ref type="figure" target="#fig_2">Figure 4</ref>. Notice that the topology of the Catmull- Rom isosurface is strictly different than the one generated by the assumption of trilinearity imposed by Marching Cubes. This precludes using the MC mesh as a base mesh for refining isosurfaces defined by different filters. Finally, the excess topology eventually generated by noise could be removed using an approach such as the one suggested by Guskov and Wood <ref type="bibr" target="#b21">[22]</ref>. For unstructured meshes, notice the geometry generated for the Nielson interpolation scheme on <ref type="figure" target="#fig_3">Figure 5</ref>. The tetrahedral mesh might be coarse, but the defined function has high curvature inside each cell, and so an accurate sampling requires more triangles. A more relaxed scheme such as MLS aproximation creates isosurfaces with less curvature, and hence less triangles are needed. All isosurfaces presented in this paper are smooth: both gradient and Hessian are well-defined. This is a reasonable assumption given the necessarily band-limited reconstruction of sampled volumes. Additionally, a surface with a sharp corner will not admit a regular isosurface representation (i.e., one where f (x) = k, ∇ f (x) = 0). More advanced representations that keep the flexibility of implicit surfaces might be possible, but they are outside the scope of this paper.</p><p>Triangle counts are often less than MC triangle counts, and while one of the schemes generates much denser triangle meshes than seems necessary, overall they tend to be well within the applicability range of downstream processing methods. Additionally, the mesh has both bounded distance and (trivially, cf. Section 3.1) bounded normal error. If that proves to be too restrictive, a downstream tool might choose to relax any of these constraints and simplify the mesh accordingly. It should also be clear that the results generated in this paper are easily generalizable to different surface formulations. If a function admits gradient and Hessian, we can use our technique to extract a high-quality, high-fidelity triangulation of any of its regular isosurfaces. This is especially true for high-order meshes, where the image of each cell is dictated by a high-order (typically around degree 10 <ref type="bibr" target="#b35">[36]</ref>) polynomial. In this case, pieces of the isosurface might have a much higher frequency than the one implied by the vertex spacing. Our model, however, is entirely oblivious of the underlying mesh, and given a function that computes gradient and Hessian, will still work as if it were dealing with a low-order mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION AND FUTURE WORK</head><p>We have presented a robust algorithm for extracting surfaces from implicit functions. Our algorithm generates meshes that combine triangle quality, adaptiveness and fidelity, easing the process of making isosurface meshes more directly applicable for downstream processing. We believe this algorithm can be adapted for processing gigantic data with minimal changes, by combining the generation of the guidance field with the actual isosurface extraction and out-of-core techniques. We would also like to give triangle shape guarantees for the meshes generated by the algorithm. These are all intriguing avenues for future work. <ref type="figure">Fig. 6</ref>. Some results of our algorithm, compared to MC and MT. From left to right: CT scans of an aneurism, a bonsai and an engine block, and isopotential surfaces of a human torso simulation. The first three datasets are regular grids, while the last one is a tetrahedral mesh.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1</head><label>1</label><figDesc>Fig. 1. Triangle meshes generated from Marching Cubes have inherently biased sampling, which produces badly shaped triangles. Our advancing front algorithm ensures appropriate mesh grading and curvature adaptation, and generates triangle meshes with excellent triangle shape. The triangulation produced by Marching Cubes is shown on the left side, and our technique is shown on the right side.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Section 4.2) 4 Active ← SEED-FRONTS(S ) (see Section 3.2) 5 while | Active | &gt; 0 6 do front ← GET-ANY-FRONT(Active) 7 if OK-TO-ADD-TRIANGLE( f ront, ρ, η) 8 then ADD-TRIANGLE-TO-FRONT(front, ρ, η) 9 else other ← GET-INTERFERING-FRONT(front) 10 if other = front 11 then (f1, f2) ← SPLIT(front) 12 REMOVE-FRONTS(Active, {front}) 13 ADD-FRONTS(Active, {f1, f2}) 14 else new-front ← MERGE(front, other) 15 REMOVE-FRONTS(Active, {front, other}) 16 ADD-FRONTS(Active, {new-front}) The guidance field g(t) on a parametric curve C = f (t) : R → S .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Isosurfacing a structured grid of a silicium lattice simulation. From left to right: marching cubes output, and our method for ρ = 0.3, using respectively Catmull-Rom and B-splines for reconstruction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Isosurfacing unstructured grids. From left to right: MT output, and our method for ρ = 0.5, using respectively Nielson interpolation and Moving Least Squares for reconstruction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>The most important observation is this: if a point s 1 dominates a point s 2 , s 2 lies inside the cone defined by s 1 . Also, the dominates relation is transitive: if s 1 dominates s 2 and s 2 dominates s 3 , then s 1 dominates s 3 . This means that if s 1 culls a set of points {s i }, the cones induced by all {s i } need not be checked at all. All of the points in the guidance field are initially inserted into a 4-dimensional kd-tree. The coordinates for each sample s are [s x , s y , s z , s r ], where [s x , s y , s z ] is the sample's location in R 3 , and s r is the height of the functiong s at s. Note now that the set of points {[x, y, z,g s ([x, y, z])]}, x, y, z ∈ R 3 , can be represented by a 4dimensional cone with apex [s x , s y , s z , s r ], axis [0, 0, 0, 1], and angle tan −1</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 .</head><label>2</label><figDesc>The four surface definitions implemented in this paper.</figDesc><table><row><cell></cell><cell>Interpolating</cell><cell>Approximating</cell></row><row><cell>Structured</cell><cell cols="2">Catmull-Rom (CR) B-Splines (BS)</cell></row><row><cell>Unstructured</cell><cell>Nielson (NI)</cell><cell>MLS</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 3 .</head><label>3</label><figDesc>Sample of results of our implementation, and comparison with MC and MT. The histograms show the distribution of circumcircle ratios, where the three lines represent the minimum, the first half percentile and the median. The legend for the second column follows the conventions of the rest of the paper. Dataset sizes: Aneurism, 256 3 bytes; Silicium, 98 × 34 × 34 bytes; Engine, 256 × 128 × 128 bytes; Skull, 256 × 256 × 226 bytes; SPX, 13k tetrahedra; Torso, 1.1 million tetrahedra.</figDesc><table><row><cell>Model</cell><cell>Alg.</cell><cell>ρ</cell><cell>η</cell><cell>time</cell><cell># tris Histogram</cell><cell>Model</cell><cell>Alg.</cell><cell>ρ</cell><cell>η</cell><cell>time</cell><cell># tris Histogram</cell></row><row><cell cols="2">Aneurism MC</cell><cell>-</cell><cell>-</cell><cell cols="2">0:07 133.5K</cell><cell>SPX</cell><cell>MT</cell><cell>-</cell><cell>-</cell><cell>0:00</cell><cell>2.3K</cell></row><row><cell></cell><cell>BS</cell><cell>0.2</cell><cell>1.2</cell><cell cols="2">5:18 461.7K</cell><cell></cell><cell>NI</cell><cell cols="4">0.5 1.2 14:06 645.9K</cell></row><row><cell>Silicium</cell><cell>MC</cell><cell>-</cell><cell>-</cell><cell>0:00</cell><cell>29.8K</cell><cell></cell><cell cols="3">MLS 0.5 1.2</cell><cell>1:48</cell><cell>26.7K</cell></row><row><cell></cell><cell>CR</cell><cell>0.3</cell><cell>1.2</cell><cell cols="2">1:30 192.1K</cell><cell cols="2">Torso-1 MT</cell><cell>-</cell><cell>-</cell><cell>0:01</cell><cell>3.1K</cell></row><row><cell></cell><cell>CR</cell><cell cols="2">0.5 1.33</cell><cell>0:58</cell><cell>92.1K</cell><cell></cell><cell>NI</cell><cell cols="2">0.5 1.2</cell><cell>2:28</cell><cell>72.8K</cell></row><row><cell>Engine</cell><cell>MC</cell><cell>-</cell><cell>-</cell><cell cols="2">0:09 592.1K</cell><cell></cell><cell cols="3">MLS 0.5 1.2</cell><cell>2:04</cell><cell>702</cell></row><row><cell></cell><cell>BS</cell><cell>0.3</cell><cell cols="3">1.2 12:16 304.4K</cell><cell cols="2">Torso-2 MT</cell><cell>-</cell><cell>-</cell><cell>0:02</cell><cell>24.2K</cell></row><row><cell>Skull</cell><cell>MC</cell><cell>-</cell><cell>-</cell><cell cols="2">0:06 393.2K</cell><cell></cell><cell>NI</cell><cell cols="3">0.5 1.2 12:48</cell><cell>656K</cell></row><row><cell></cell><cell>CR</cell><cell>0.5</cell><cell>1.2</cell><cell cols="2">5:50 259.2K</cell><cell></cell><cell cols="3">MLS 0.5 1.2</cell><cell>4:24</cell><cell>2.4K</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>Our research is funded by the National Science Foundation (grants CCF-0401498, EIA-0323604, OISE-0405402, IIS-0513692, CCF-0528201), the Department of Energy, Sandia National Laboratories, Lawrence Livermore National Laboratory, an IBM Faculty Award, and a University of Utah Seed Grant.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Adaptive implicit surface polygonization using marching triangles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Akkouche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Galin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="67" to="80" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Variational tetrahedral meshing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cohen-Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Yvinec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="617" to="625" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Recent advances in remeshing of surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Alliez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Ucelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Attene</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">State-of-the-art report of the AIM@SHAPE EU network</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Surface reconstruction by voronoi filtering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Amenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">W</forename><surname>Bern</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Computational Geometry</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="39" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Modeling with cubic a-patches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="133" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fast isocontouring for improved interactivity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1996 Volume Visualization Symposium</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="39" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The ball-pivoting algorithm for surface reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bernardini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mittleman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Rushmeier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="349" to="359" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">An implicit surface polygonizer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bloomenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Gems IV</title>
		<editor>P. Heckbert</editor>
		<meeting><address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="324" to="349" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Introduction to Implicit Surfaces</title>
		<editor>J. Bloomenthal</editor>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Morgan Kaufmann Publishers Inc</publisher>
			<pubPlace>San Francisco, CA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Mesh gradation control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Borouchaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Hecht</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Frey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">6th International Meshing Roundtable</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="131" to="141" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Computer Aided Geometric Design, chapter A Class of Local Interpolating Splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Catmull</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rom</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1974" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">From medical images to CFD meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Cebral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Löhner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">8th International Meshing Roundtable</title>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="321" to="331" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Adaptive edge spinning algorithm for poligonization of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cermák</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Skala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics International</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="36" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Reconstruction of topologically correct and adaptive trilinear isosurfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Ganoveii</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="399" to="418" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Speeding up isosurface extraction using interval trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Marino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="158" to="170" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Optimal isosurface extraction from irregular volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<idno>0-89791-741-3</idno>
	</analytic>
	<monogr>
		<title level="m">Volume Visualization Symposium</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="31" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Introduction to Calculus and Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Courant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>John</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1974" />
			<publisher>John Wiley and sons</publisher>
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Isosurface extraction using particle systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Crossno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Angel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<editor>R. Yagel and H. Hagen</editor>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="495" to="498" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Blossoming begets bsplines built better by b-patches</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Dahmen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Micchelli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Math. Comp</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page" from="97" to="115" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Physicallybased methods for polygonization of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">H</forename><surname>De Figueiredo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gomes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopolous</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Velho</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface</title>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 1997</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Topological noise removal</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Guskov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Wood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface</title>
		<imprint>
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A marching method for the triangulation of surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Hartmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="95" to="108" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Marching triangles: Range image fusion for complex object modelling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hilton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Stoddart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Illingworth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Windeatt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Image Processing</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="381" to="384" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Dual contouring of hermite data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Losasso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Schaefer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="339" to="346" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Curvature-dependent triangulation of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Karkanis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Stewart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="60" to="69" />
			<date type="published" when="2001" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Curvature-based transfer functions for direct volume rendering: Methods and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tasdizen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lancaster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Salkauskas</surname></persName>
		</author>
		<title level="m">Surfaces generated by moving least squares methods. Mathematics of Computation</title>
		<imprint>
			<date type="published" when="1981" />
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="page" from="141" to="158" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">The digital michelangelo project: 3D scanning of large statues</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Pulli</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Curless</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ginzton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Anderson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ginsberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Shade</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fulk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIG-GRAPH 2000</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="131" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Out-of-core simplification of large polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 2000</title>
		<imprint>
			<publisher>ACM Press/Addison-Wesley Publishing Co</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="259" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">A near optimal isosurface extraction algorithm using the span space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="73" to="84" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Interactive point-based isosurface extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tricoche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="457" to="464" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Marching Cubes: A high-resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 1987</title>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Robust particle systems for curvature dependent sampling of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Georgel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Shape Modeling and Applications</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="123" to="133" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">On generating topologically consistent isosurfaces from uniform samples. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K</forename><surname>Natarajan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="52" to="62" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Ray-tracing polymorphic multi-domain spectral/hp elements for isosurface rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Kirby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions in Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="114" to="125" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">On marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="283" to="297" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Scientific Visualization, chapter 20</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Müller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>IEEE Computer Society</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">The asymptotic decider: Removing the ambiguity in marching cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="83" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">An evaluation of implicit surface tilers</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Ning</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bloomenthal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="33" to="41" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">A survey of unstructured mesh generation technology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Owen</surname></persName>
		</author>
		<ptr target="http://www.andrew.cmu.edu/user/sowen/survey/index.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
		<title level="m" type="main">The NURBS book</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Piegl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Tiller</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">A new and simple algorithm for quality 2-dimensional mesh generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ruppert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Discrete Algorithms</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Triangulating point set surfaces with bounded error</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">E</forename><surname>Scheidegger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fleishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Geometry Processing</title>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="63" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Direct (re)meshing for efficient surface processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schreiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Scheidegger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fleishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics</title>
		<meeting>Eurographics</meeting>
		<imprint>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Greedy cuts: An advancing front terrain triangulation algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S B</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM-GIS</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="137" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Regularised marching tetrahedra: Improved iso-surface extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Treece</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Prager</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="583" to="598" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Re-tiling polygonal surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 1992</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Octrees for faster isosurface generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="201" to="227" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Using particles to sample and control implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Witkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 1994</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="269" to="277" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Semi-regular mesh extraction from volumes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">J</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Breen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbrun</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="275" to="282" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
