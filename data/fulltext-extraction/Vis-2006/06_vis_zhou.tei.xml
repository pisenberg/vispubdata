<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Point-Based Rendering of Higher-Order Tetrahedral Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuan</forename><surname>Zhou</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
						</author>
						<title level="a" type="main">Interactive Point-Based Rendering of Higher-Order Tetrahedral Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-20T19:43+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Computational simulations frequently generate solutions defined over very large tetrahedral volume meshes containing many millions of elements. Furthermore, such solutions may often be expressed using non-linear basis functions. Certain solution techniques, such as discontinuous Galerkin methods, may even produce non-conforming meshes. Such data is difficult to visualize interactively, as it is far too large to fit in memory and many common data reduction techniques, such as mesh simplification, cannot be applied to non-conforming meshes. We introduce a point-based visualization system for interactive rendering of large, potentially non-conforming, tetrahedral meshes. We propose methods for adaptively sampling points from non-linear solution data and for decimating points at run time to fit GPU memory limits. Because these are streaming processes, memory consumption is independent of the input size. We also present an order-independent point rendering method that can efficiently render volumes on the order of 20 million tetrahedra at interactive rates. Index Terms-Interactive large higher-order tetrahedral volume visualization, point-based visualization.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Irregular tetrahedral finite element meshes are used in a great many scientific and engineering simulations. Traditionally, these meshes are almost always conforming-vertices are prohibited from falling on an edge or face of an adjacent tetrahedron-and the solutions defined over them are often piecewise linear. However, large tetrahedral meshes that are non-conforming and which represent higher order solution fields are becoming increasingly common. For instance, discontinuous Galerkin finite element methods can easily be formulated on non-conforming meshes as they use independent higher-order basis functions within each element.</p><p>Providing effective visualizations of such data is a challenging problem. The meshes are usually quite large, containing many millions of elements. Higher order basis functions significantly increase the memory cost; a piecewise cubic field, for instance, has an order of magnitude more coefficients than a linear field. Consequently, these data sets are generally far too large to fit into main memory, making it very difficult to achieve interactive rates with any volume rendering technique that requires depth sorting. A number of simplification and compression methods have been proposed to help manage such large data, but they are generally not applicable to the kind of nonconforming meshes with potentially discontinuous higher-order solutions that arise in our target applications.</p><p>We have developed a point-based system for interactively visualizing higher-order tetrahedral finite element solutions on commodity desktop machines. By choosing a point-based architecture, we are able to cleanly handle non-conforming meshes and discontinuous data fields in the same manner as more typical datasets. While this results in some loss in rendering quality as compared to a mesh-based renderer, the loss is small and is more than outweighed by the resulting performance benefits.</p><p>The foundation of our system is a novel adaptive view-independent point sampling method based on a variant of Lloyd relaxation. Because of its size, we process the mesh in a streaming fashion, sampling points from each tetrahedron independently. The memory consump- tion of this process is thus bounded by a small constant. It is also guided by an error metric that attempts to minimize the error between the underlying algebraic solution and the point-based function approximation that we construct. We have developed an importance-based stratified point decimation method that automatically tailors the sampled point set at run time to the capacity of the user's hardware. We propose an order-independent point rendering algorithm that replaces explicit depth sorting with a depth-based weighted blending and attenuation scheme. This preserves many depth cues while maintaining high point throughput. We also use a selective shading function to emphasize important interior features. Our rendering method allows us to perform all rendering and blending on the GPU with great efficiency.</p><p>Finally, we demonstate the use of our system for visualizing shock surfaces in spacetime elastodynamic simulations. The solutions are produced by a discontinuous Galerkin finite element method and contain up to 17.6 million elements, each of which defines a piecewise cubic displacement field. The shock surfaces that we visualize capture much of the interesting structure of the solution in this kind of problem domain, and can provide significant insight into the behavior of the physical process being simulated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Volume rendering methods can be broadly classified as either indirect methods, such as isosurfacing <ref type="bibr" target="#b19">[20]</ref>, or direct methods such as ray casting <ref type="bibr" target="#b32">[33]</ref>, splatting <ref type="bibr" target="#b33">[34]</ref>, and cell-projection <ref type="bibr" target="#b25">[26]</ref>. Many direct volume rendering methods can be accelerated by modern graphics hardware <ref type="bibr" target="#b17">[18]</ref>. Most direct methods require depth sorting whereas a relatively small number, most notably maximum intensity projection (MIP) <ref type="bibr" target="#b13">[14]</ref> and X-ray methods <ref type="bibr" target="#b30">[31]</ref>, are order independent. These have a significant performance advantage when handling huge data sets, but their quality is often rather poor because of the loss of depth cues, especially the occlusion. Several methods have been suggested to help provide useful depth cues, including perspective, shading, and stereo rendering <ref type="bibr" target="#b20">[21]</ref>.</p><p>Data reduction methods, such as simplification <ref type="bibr" target="#b10">[11]</ref>, compression <ref type="bibr" target="#b29">[30]</ref> and other multiresolution methods <ref type="bibr" target="#b8">[9]</ref>, are often used to handle large volume meshes efficiently. However, these methods almost universally assume that the underlying mesh is conforming, and cannot be applied to meshes that violate this assumption. While any mesh may be made conforming by a sequence of edge and face splits, this is generally impractical as it can substantially increase the total data size.</p><p>Since Levoy <ref type="bibr" target="#b18">[19]</ref> proposed using points as display primitives, many point rendering techniques have been developed. They have been used to interactively render large volume data <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b21">22]</ref> and complex scenes <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b9">10]</ref>. Hierarchical structures and multiresolution methods <ref type="bibr" target="#b26">[27,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b5">6]</ref> are usually used to sample or render large numbers of points. Point-based models are also naturally suited to memory efficient stream processing <ref type="bibr" target="#b24">[25,</ref><ref type="bibr" target="#b7">8]</ref>. Point sets are often sampled by stochastic sampling <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b6">7]</ref> or other importance-based techniques.</p><p>Less common are methods based on point approximation theory. A notable recent example is the work of Grimm et al. <ref type="bibr" target="#b11">[12]</ref>, who use a Taylor series expansion to allocate points in a volume described by a regular grid. Point sets are often rendered by splatting <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b14">15]</ref>, but this normally requires depth sorting of the points. To save time and space when rendering large point sets, order-independent methods <ref type="bibr" target="#b6">[7]</ref> can be used. Various techniques can be used to improve the quality of meshless methods so that they rival mesh-based alternatives <ref type="bibr" target="#b1">[2]</ref>. Only a handful of existing methods address the visualization of higher order volume data. Most of those that do were designed for rendering surfaces within the volume either by plane slicing <ref type="bibr" target="#b34">[35]</ref> or by ray casting <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b2">3]</ref>. An alternative to directly processing higher order data is to build a sufficiently accurate piecewise linear refinement of the mesh <ref type="bibr" target="#b28">[29]</ref>; however, this can also increase data size substantially. Sadowshy et al. <ref type="bibr" target="#b27">[28]</ref> directly render higher-order volumes by computing higher-order attenuation integrals for projected tetrahedra. Unfortunately, performance can degrade quickly as the size of the integral grows exponentially in the degree of the field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">OVERVIEW</head><p>Our primary target application is the visualization of solutions produced by spacetime discontinuous Galerkin finite element methods <ref type="bibr" target="#b0">[1]</ref>. The solution datasets typically consist of non-conforming tetrahedral meshes with tens of millions of elements. For the elastodynamic problems we study here, the solution itself is a displacement field defined per-element as a linear combination of higher order basis functions-cubics for all examples shown here. <ref type="figure" target="#fig_0">Figure 1</ref> shows the three spacetime mesh examples used in this paper. Each is a 3-D spacetime built over a 2-D spatial domain with time following the blue arrows. The simulation shown in <ref type="figure" target="#fig_0">Figure 1a</ref> models crack-tip wave scattering within an elastic solid subjected to shock loading. The presence of shock waves is implicit, and clearly visible, in the refinement of the mesh. In <ref type="figure" target="#fig_0">Figure 1b</ref> we see a simulation of wave scattering in a section of a solid rocket booster. Again, the mesh refinement alone hints at a complicated pattern of interweaving superimposed shocks in spacetime. Finally, <ref type="figure" target="#fig_0">Figure 1c</ref> represents a multiscale simulation of circular waves scattering from the middle of a plate through two arrays of void spaces.</p><p>The motivation for our work is to provide a more complete visualization of the obvious and important shock structure that is indirectly apparent in the pattern of mesh refinement. These shocks correspond to sudden changes in the velocity field. Shock waves in a 2-D spatial domain sweep out shock surfaces in 3-D spacetime. Assuming that we could define a scalar "shock strength" scalar field (see §7), it would be natural to consider displaying these surface-like shock features using isosurfacing. However, as we can see in <ref type="figure">Figure</ref> 2, which shows an example of applying Marching Tetrahedra to the crack-tip dataset, this is obviously unsatisfactory. The underlying displacement field is, by its nature, discontinuous between elements. These discontinuities can become even more pronounced in the derivative fields used to compute velocity gradients, and hence the presence of shocks. These discontinuities, coupled with the non-conforming nature of the mesh, make it very difficult to produce a good isosurface. Moreover, due to numerical imprecision, it is extremely difficult to identify a single isovalue that corresponds precisely with a given shock surface. Shock waves frequently interweave each other, resulting in complex pattern of shock surfaces, as shown in In <ref type="figure" target="#fig_0">Figure 1b</ref>.</p><p>Rather than isosurface rendering, we aim to produce interactive high-quality volume visualizations of these interweaving superimposed surface-like shock features. We accomplish this by building a point-based approximation of the shock strength field as described in Sections 4 and 5. To render these point sets in real time, we have developed a high-performance order-independent rendering algorithm described in Sec. 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">POINT GENERATION</head><p>We take a point-based approach to visualizing these large datasets. In this section, we describe our algorithm for generating a point-based representation of the volume from the initial tetrahedral mesh. This sampling algorithm attempts to produce a point set that provides a good approximation of the underlying scalar field. It is thus generated without regard to run-time constraints on rendering capacity or viewing parameters.</p><p>Because of the size of the meshes we wish to process, memory ef-ficiency is a crucial concern. Therefore, we process each tetrahedron independently, treating the entire mesh as a single data stream. Total memory consumption for sampling is thus bounded by a small constant. For each tetrahedral element, we wish to generate a set of one or more point samples. We assume that the data we wish to render within an element is a scalar field f : R 3 → R expressed as a linear combination of non-linear basis functions. This function f may be the solution itself or a derived field. In our elastodynamics examples, for instance, f is based on velocity gradient magnitudes derived from the underlying displacement field and the basis functions are cubic rational polynomials.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Sampling at a Point</head><p>For a single point at location x i ∈ R 3 , we wish to record some data about the function f that will allow us to reconstruct it at run time for the purposes of rendering. Like Grimm et al. <ref type="bibr" target="#b11">[12]</ref>, we define a generic sample at x i to be a partial prefix of the coefficients of the Taylor expansion of f about x i . However, unlike their work, we operate on continuous functions defined within an element rather than discrete functions defined over regular grids. Therefore we can algebraically compute the Taylor expansion of f</p><formula xml:id="formula_0">f (x i + h) = f (x i ) + ∇ f (x i ) T h + 1 2 h T [H f (x i )]h + ••• (1)</formula><p>where ∇ f and H f are the gradient vector and Hessian matrix of f , respectively. A generic point sample will thus consist of selected coefficients from the sequence</p><formula xml:id="formula_1">( f (x i ), ∇ f (x i ), H f (x i ), •••).</formula><p>For the rendering system we present in this paper, we require only the coefficients through first order. Thus for each sample point x i we record the pair ( f (x i ), ∇ f (x i ). Furthermore, because the renderer restricts point footprints to be isotropic, we will use only the order-0 terms for reconstructing the function f and the order-1 terms for normal and shading computations.</p><p>To each point sample x i we assign a spherical influence region of radius ρ i . For a tetrahedron containing k samples, we set these radii so that the volume of each ball is 1/k the volume of the tetrahedron. Within each spherical influence volume, we define the approximation error</p><formula xml:id="formula_2">Er(x i ) = ( f (x i ) − f (x)) 2 dV<label>(2)</label></formula><p>using the value f (x i ) that was sampled at x i . The total approximation error for a tetrahedron containing a set of samples X is simply the sum</p><formula xml:id="formula_3">Er(X) = ∑ x i ∈X Er(x i )<label>(3)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Estimating Sample Set Size</head><p>Before allocating point samples within an element, we wish to make a rough estimate of the number of sample points needed. This will make the relaxation algorithm described in the next section more efficient. Since we are rendering scalar volumetric data with piecewiseconstant samples, the number of points to be sampled from each element should be related to the range of the scalar field over this element. With a tetrahedron τ, we define the local contrast S as the ratio of the function range within τ to the function range over the entire volume:</p><formula xml:id="formula_4">S = max f τ − min f τ max f − min f (4)</formula><p>We choose the initial number of points K to be sampled from τ to be</p><formula xml:id="formula_5">K = S S T + 1<label>( 5 )</label></formula><p>where S T is user-alterable contrast threshold, for which we generally use a value of 10 −3 . Also note that this definition guarantees at least 1 sample point per tetrahedron.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Picking Sample Locations</head><p>We now have an initial estimate of how many points should be sampled from a given tetrahedron. Using this as a starting point, we apply a Lloyd relaxation method to find a good number of point samples and their proper positions so that the point approximation error is small. We begin by picking a discrete set of N "testing" points within the tetrahedron at which to evaluate the field. This approximation in lieu of actually computing the error integrals defined above avoids considerable overhead. These points are distributed on a regular grid in the barycentric space of the element, and we find a sampling density of about 300 points per tetrahedron works well. We pick K testing points at random to become sample points, and associate each testing point with the sample point which minimizes the approximation error at the testing point. This partitions the testing points into clusters with each sample point being the "representative" of its corresponding cluster. Having constructed these clusters, we move the representative sample points to the geometric barycenter of their associated testing points. We repeat this process of clustering and sample relocation until the samples are not moved or the total error reaches a specified threshold. If the process converges with an error higher than the threshold, or if it does not converge within some maximum number of iterations, we insert additional sample points. <ref type="figure">Figure 3</ref> illustrates this process.</p><p>This algorithm is quite similar to the well known Lloyd relaxation method for k-means clustering. However, notice that we use the Taylor approximation error to grow clusters and the Euclidean metric for repositioning samples in clusters. Consequently, the approximation error will not always shrink monotonically. Therefore, in cases where we terminate relaxation due to hitting the maximum iteration count, we may need to look back through past iterations to find the sample point configuration with smallest total error.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">POINT DECIMATION</head><p>After generating points within all tetrahedra, the entire point set has been built on disk. Since the sampling is performed with respect to approximation error, it may well contain more points than can be efficiently rendered on the target PC. Therefore, we must be able to select a subset of the sampled points that will fit within the rendering capacity of the user's hardware while still faithfully reproducing the solution data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Importance Culling</head><p>For most simulations, including those we examine here, there are large regions of the solution domain in which relatively little of interest is happening. In our elastodynamic examples, these are the regions where the velocity gradient is near 0. We consider it safe to cull points in these less important regions-excluding points on the volume boundary-which are devoid of "interesting" features. In typical examples, a very large number of points can be culled in this manner.</p><p>In our solid rocket dataset, for instance, a total of 10.4 million points, about 56% of the total, can be culled due to lack of importance. When a suitable importance threshold is known a priori, as it is with our examples, we can integrate culling into the sampling phase. After the set of samples for a single tetrahedron has been generated, any sampled point which falls below the threshold is simply discarded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Stratified Decimation</head><p>At this stage, we have a collection of "important" points. Based on the memory size and rendering efficiency of the target GPU, we can compute a target number of points to retain that can be rendered at interactive rates. To achieve this target, we need a decimation procedure that can be executed when the renderer is initialized. It is obviously essential that the decimation process be extremely efficient, so that it adds only minimal overhead to the total initialization time. To achieve this goal, we use an importance-based stratified field decimation method that removes important points uniformly.</p><p>One stratified field sampling approach, such as the one used by Callahan et al. <ref type="bibr" target="#b3">[4]</ref>, is to divide the range of f into uniform intervals and to randomly select equal numbers of samples from each interval. This is quite effective if the histogram of samples is fairly uniform over the range of f . However, for cases such as those of interest to us, where the histogram is extremely uneven and where the majority of samples occur in small ranges of the histogram, this approach does not work well.</p><p>Instead of uniformly stratifying the range of f , we uniformly stratify by sample density. First, we sort all points by their sample value. We can now construct m intervals with (nearly) equal numbers of points. If our point target is n, then we will randomly select n/m points from each interval. For the solid rocket section shown in <ref type="figure" target="#fig_3">Figure 4a</ref>, about 1.5 million points were removed from the raw 7.5 million point set.</p><p>After decimation, we must adjust the influence regions of the surviving points so that the volume is covered appropriately. Since we remove points uniformly, we can simply enlarge the volume of each influence region by the ratio of the sizes of the original and surviving point sets. <ref type="figure" target="#fig_3">Figure 4</ref> illustrates the results of our decimation process on the solid rocket section data. The point set size for <ref type="figure" target="#fig_3">Figure 4a</ref> was chosen to achieve interactive rendering rates. In addition, we selected progressively smaller sizes while simultaneously decreasing the output resolution. As we can see, the output quality is maintained quite well by our decimation approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">POINT RENDERING</head><p>Our aim is to produce high-quality visualizations of complex interweaving shock surfaces in such a way that their structure will be clearly revealed. We also want to enhance these surface-like features so that they stand out from the surrounding volume. Kraus <ref type="bibr" target="#b16">[17]</ref> renders isosurfaces with order-dependent volume rendering techniques, enhancing them with effects such as silhouette illumination. However, this method renders the isosurfaces with uniform opacity and color, independently of the local gradient of the visualized scalar field, and this is not suitable for our data where multiple surface interweave with wide scalar value ranges.</p><p>We have already discussed the fact that it is difficult to visualize datasets that are too large to fit into memory using typical volume rendering methods. One of the primary reasons for this is their reliance on depth sorting. Disregarding the use of parallel clusters for visualization, establishing efficient data structures and out-of-core sorting are expensive and will not in general allow us to achieve interactive rendering rates. For our problem, the somewhat atypical orderindependent methods, such as MIP and X-ray rendering, are attractive alternatives. They independently combine any sampled value in any order to obtain the final value. But while order-independent methods have good performance characteristics for very large volumes, they necessarily lose occlusion depth cues. Therefore, we augment the basic order-independent method with additional terms that help provide enhanced depth cues without depth sorting.</p><p>The core of our order-independent rendering method is a weighted accumulation technique where the weight of a point depends on its depth. The color I(q) of a pixel q is a weighted sum over the set of points {p} whose screen space footprints contain q</p><formula xml:id="formula_6">I(q) = ∑ p I p W p ∑ i W p<label>(6)</label></formula><p>The contribution I p for each point p is determined using the selective shading function</p><formula xml:id="formula_7">I p = C( f ), f &lt; F S( f ), f ≥ F<label>(7)</label></formula><p>We distinguish points by whether their function value f is above or below a threshold F. For those below, we simply use a direct color mapping indicated by C( f ); all examples in this paper use a rainbow color ramp for this mapping. Those points above the threshold are considered surface features, which we shade using the standard Phong illumination model. This shading function, indicated by S( f ) uses the sampled gradient of the scalar field f as the normal for shading. The purpose of this selective shading is to enhance the important interior features (e.g., shocks in our elastodynamic examples).</p><p>The weight W p for a point at depth d is</p><formula xml:id="formula_8">W p = α 0 e −d , f &lt; F α 1 e −d , f ≥ F<label>(8)</label></formula><p>Here again, we assign different attenuation rates to non-feature (α 0 ) and feature (α 1 ) points. By choosing α 1 &gt; α 0 we can prevent distant feature points from being unnecessarily obscured by intervening nonfeature regions.</p><p>Recall that we assign each point a spherical influence region. Therefore, the screen projection of the point should be the projection of the corresponding sphere. However, for efficiency we wish to approximate this using a quadrilateral which bounds the projection of the sphere.</p><p>To take advantage of the performance of modern graphics hardware, our weighted blending scheme is implemented entirely on the GPU. This requires two passes where all processing is performed in fragment programs. The first pass processes each point in a streaming fashion. For each point, we compute its contribution to every pixel within its projection. Each pixel has its own accumulator storing the contribution from all points. The contribution is the shading value weighted by the distance attenuation function. The distance weight is also recorded for normalization in second pass. All accumulation values are stored in a texture containing one texel per screen pixel. After all points are rendered to this texture, on the second pass, the accumulated values for each pixel are fetched and normalized by the accumulated weights. We use 16-bit floats for these computations as 8-bit pixels have insufficient dynamic range and 32-bit floats incur an unacceptably large performance penalty on current hardware.   <ref type="figure" target="#fig_7">Figure 7</ref>. <ref type="figure" target="#fig_4">Figure 5a</ref> is an image generated using order-independent unweighted color blending. Since all depth information is lost, it is very hard to see the structure of the shock surfaces that we are viewing. For instance, it is unclear whether the left vertical lines are closer or further than the right vertical lines. <ref type="figure">Figure</ref> 5b is rendered using our depth-weighted blending. Clearly, more of the structure of the solution has become evident. However, the picture looks monotone because distant features are attenuated by the distance-based weight function. <ref type="figure" target="#fig_4">Figure 5c</ref> is generated by our method. We assign a different diminishing factor for feature and non-feature parts. And large scalar field regions are selectively shaded to enhance the feature. This rendering clearly provides much clearer depth cues than either of the other images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">SHOCKS IN SPACETIME ELASTODYNAMIC SIMULATIONS</head><p>For the examples used in this paper, the solution field is a 2dimensional displacement field. They are represented using a cubic polynomial barycentric basis, containing 20 individual functions. For each point (x, y,t) in spacetime, − → α = (α 1 , α 2 , α 3 , α 4 ) represents the barycentric coordinates of (x, y,t) within the surrounding tetrahedron, and the displacement is:</p><formula xml:id="formula_9">u( − → α ) = 20 ∑ i=1 c i m i ( − → α )<label>(9)</label></formula><p>Here, the 2-D coefficient vectors c i are the finite element solution data and m i ranges over the barycentric coordinate bases. We wish to detect shocks in the solution. They are among the most important structural features of the solutions. Shocks are discontinuities in nature. They are abrupt changes of some attribute. To find these discontinuities, the natural approach is to look for very high gradients.</p><p>The simulation problems on which we focus lie in a spacetime domain, which is different from the general 3-D domain since the spatial and temporal dimensions can be decoupled. Rather than using gradients in the general 3-D domain, we use spatial derivatives in the spacetime domain. Therefore, to find the shocks of some field in spacetime, we compute the spatial derivatives of that field. Specifically, we will detect shocks by computing gradients of the velocity field.</p><p>The spacetime velocity field v( − → α ) is the temporal derivative of the displacement field.</p><formula xml:id="formula_10">v( − → α ) = 20 ∑ i=1 c i 4 ∑ j=1 ∂ m i ( − → α ) ∂ α j • ∂ α j ∂t<label>(10)</label></formula><p>We are interested in the spatial derivatives of the velocity field: <ref type="bibr" target="#b11">(12)</ref> Note that only 4 components of the basis functions' spatial temporal derivatives</p><formula xml:id="formula_11">v x ( − → α ) = 20 ∑ i=1 c i 4 ∑ j=1 4 ∑ k=1 ∂ṁ i ( − → α ) ∂ α j ∂ α k • ∂ α k ∂ x ∂ α j ∂t (11) v y ( − → α ) = 20 ∑ i=1 c i 4 ∑ j=1 4 ∑ k=1 ∂ṁ i ( − → α ) ∂ α j ∂ α k • ∂ α k ∂ y ∂ α j ∂t</formula><formula xml:id="formula_12">∂ṁ i ( − → α ) ∂ α j ∂ α k</formula><p>are non-zero, therefore only 4 components from c i are relevant to this computation.</p><p>We define the shock function S as the squared magnitude of the velocity gradient.</p><formula xml:id="formula_13">S( − → α ) = v x ( − → α ) 2 + v y ( − → α ) 2<label>(13)</label></formula><p>We allow the user to define a suitable threshold T such that any point with a shock value above T will be considered to lie on a shock.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">RESULTS AND DISCUSSIONS</head><p>In this section, we examine the visual performance of our visualization system. All images were generated interactively at a resolution of 800×600 at roughly 20 frames per second. The machine used for these tests was a Windows XP desktop system with a 3 GHz Pentium 4 Xeon processor, 2 GB of memory, and an nVidia QuadroFX 4500 graphics card. <ref type="figure" target="#fig_6">Figure 6</ref> shows an elastodynamic simulation of a shock wave scattering off a crack in a solid metal plate. Sudden traction loading along one edge of the domain initiates a shock wave that travels across the plate and reflects off the opposite side. This is clearly visible as two planar sheets extending through the spacetime volume. When the shock strikes the crack tip, it creates a new circular wave. In this spacetime rendering, it is visible as a cone-shaped feature. The apex of the cone-shaped region indicates the initial scattering event, as both shown in the left-most images on spacetime mesh in <ref type="figure" target="#fig_0">Figure 1</ref> and visualization in <ref type="figure" target="#fig_6">Figure 6</ref>. As shown in the side view images in <ref type="figure" target="#fig_6">Figure 6</ref>, the outer perimeter of the cone indicates the progress of the faster-moving dilatational shock wave, while the dark circular band within the cone traces the trajectory of the slower shear shock wave. Our visualization faithfully reflects this physical simulation. The visible presence of a Rayleigh wave-the lighter and steeper wave ascending from the initial edge-is a particularly important feature of use to the engineers engaged in this project. These waves are typically too weak to be found and visualized, whereas our method makes them quite clear. About 6.54 million points are rendered. <ref type="figure" target="#fig_7">Figure 7</ref> shows a multiscale model where pressure and shear shock waves propagate from a circular plate in the domain through two arrays of voids at either end of the circular plate. The faster pressure shock waves are reflected, the shear waves at right are slower and are not reflected during this simulation. Two vertical bands are generated as the waves pass through two arrays of voids. For the coarser array at right, the shear waves are scattered in different directions because of the disturbance from the void. For the dense array of voids at left, there is almost no scattering of shocks to be captured. Viewing this obvious abnormal phenomenon leads our engineering collaborators to examine their simulation more carefully, discovering areas of insufficient numerical precision and overly weak boundary conditions. Thus, we have first-hand evidence that our visualization system can serve as a useful and practical diagnostic tool for engineers engaged with a particular simulation problem. About 6.95 million points are rendered. <ref type="figure" target="#fig_10">Figure 8</ref> is an example showing that our distance weighted orderindependent rendering method can visualize complicated interweaving shocks without losing depth information. This is a model of a single sector of a 2-D cross section of a star shaped solid rocket grain. As combustion initiates within the rocket core, the grain is subjected to sudden pressurization. Pressure and dilatational waves are transmitted through the section, and surface waves are moving along the sector boundaries. As time advances, these waves inter-reflect and intersect  other waves, forming a complex wave pattern (see, for instance, the upper right corner of the volume in the left-most image). Our pictures clearly convey the history of even these complicated shock wave behaviors. About 6.5 million points are rendered.</p><p>The quality of our meshless point-based volume visualization method result is very close to the quality of rendering by direct ray casting. This comparison is illustrated in <ref type="figure" target="#fig_8">Figure 9</ref>. We rendered this 11.6 million tetrahedra mesh using both our interactive renderer ( <ref type="figure" target="#fig_8">Figure 9a</ref>) and a ray caster <ref type="figure" target="#fig_8">(Figure 9b</ref>). Both used the same orderindependent rendering equation and the same transfer function. The interactive point renderer produced an image in 0.05 seconds for about 6.54 million points while the tetrahedron ray caster took 10 minutes. Despite the huge discrepancy in running time, the rendered results are practically identical. Our visualization method was developed with a specific application-rendering spacetime shock surfaces-foremost in mind. However, there is nothing that prevents us from using it to visualize more traditional kinds of finite element solution data. Shown in <ref type="figure" target="#fig_0">Figure 10</ref> is the well-known blunt fin dataset, which we have converted to a fully conforming tetrahedral mesh with linear basis functions. Here we are visualizing the energy field of the solution. Our system is able to produce quality renderings that highlight much of the structure of the solution while maintaining a 20 fps rendering rate.  <ref type="table" target="#tab_1">Table 1</ref> summarizes the flow of data through our system. The input meshes range in size up to 17.62 million tetrahedra. The number of points sampled is generally fairly close to this size; the solution order is low enough that only a small number of points (usually 1) are required in each tetrahedron. Large numbers of points can frequently be culled as "unimportant". The final point set sizes are all roughly the same as they were all rendered on the same hardware and were thus subject to the same capacity constraints. <ref type="table">Table 2</ref> summarizes the overall performance of the various stages of our system. Point generation is clearly the dominant cost in the system. However, this is done off-line and must be done only once for each dataset. Culling of unimportant points requires very little time. Decimation, which must be performed during initialization of the renderer, requires on the order of 15 seconds. While it would be ideal if this were instantaneous, we note that this amount of time is roughly comparable to the time it takes to parse and load the data without decimation. We also note that, for large meshes with higher order solution   <ref type="table">Table 2</ref>. Running time and space requirements for sampling and rendering our example models.</p><p>fields, our point conversion approach results in a fairly significant reduction in space. The exception is the blunt fin dataset, which is fairly coarse to begin with and, more importantly, uses only linear basis functions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION AND FUTURE WORK</head><p>In this paper, we have introduced a point-based visualization system for interactive rendering of large, potentially non-conforming, tetrahedral meshes with high order solutions. We proposed an adaptive viewindependent point sampling scheme considering the high order nature of the data. We presented a new importance-based stratified point decimation method which automatically adjust target decimation size for target PC, and a depth-based order-independent point rendering methods. Our system can visualize shocks from tens of millions tetrahedra with cubic order solution in real time.</p><p>While our system has already proved useful in a number of ways, there are several areas for possible future work. More sophisticated polynomial approximations could be used in place of Taylor approximation. Our point decimation approach is fairly direct; algorithmic improvements that would result in lower memory consumption should be possible. Using higher-order point primitives in rendering also appears to be a particularly promising avenue for improvement.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>(a) Crack-tip scattering (11.6M tets) (b) Solid rocket section (17.6M tets) (c) Multiscale propagation (9M tets) Spacetime tetrahedral meshes for 2-D elastodynamic simulations. Elements vary considerably in size and contain numerous T-junctions. The blue arrows indicate the time axis.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Visualizing shock isosurfaces for the crack-tip problem(Fig. 1a) produces unsatisfactory results.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a) Points assigned to centers (b) Centers are updated (c) New center inserted (d) Points are reassigned Fig. 3. An illustration of one iteration of Lloyd relaxation, with which we position sample centers in each tetrahedron.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Decimation of the point set for the solid rocket section at multiple levels of detail. Labels indicate number of points rendered, and images are shown at proportionally reduced resolutions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Adding depth weighting and selective shading to simple color blending produces substantially enhanced images.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5</head><label>5</label><figDesc>shows the impact of our rendering enhancements on the multi-scale propagation dataset. This group of pictures are the side view of the model in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 6 .</head><label>6</label><figDesc>Shock visualization in crack-tip scattering problem from different views. About 6.54 million points are rendered interactively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Shocks visualization for multiscale simulation model from different views. About 6.95 million points are rendered.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>(a) Point rendering (0.05 s) (b) Ray casting (10 min) Using 6.54M points, our renderer achieves quality comparable to ray casting of 11.6M tetrahedra in a fraction of the time.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Visualizing the energy field of the blunt fin dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 8 .</head><label>8</label><figDesc>Shock visualization in solid rocket model from different views. About 6.5 million points are rendered.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>•</head><label></label><figDesc>Yuan Zhou is with Department of Computer Science University of Illinois at Urbana-Champaign, E-mail: yuanzhou@cs.uiuc.edu.</figDesc><table /><note>• Michael Garland is with NVIDIA Corporation, E-mail: mjgarland@acm.org. Manuscript received 31 March 2006; accepted 1 August 2006; posted online 6 November 2006. For information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Measurements for the point generation and decimation process for the models shown.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell cols="2">Points (million)</cell></row><row><cell></cell><cell cols="2">Tets (mil.)</cell><cell>Sampled</cell><cell cols="2">Culled</cell><cell>Decimated</cell><cell>Rendered</cell></row><row><cell>Crack-tip</cell><cell cols="2">11.59</cell><cell>11.85</cell><cell></cell><cell>5.374</cell><cell>0.450</cell><cell>6.542</cell></row><row><cell>Rocket</cell><cell cols="2">17.62</cell><cell>17.96</cell><cell></cell><cell>10.47</cell><cell>1.449</cell><cell>6.509</cell></row><row><cell>Multiscale</cell><cell cols="2">9.009</cell><cell>9.013</cell><cell></cell><cell>2.522</cell><cell>0.496</cell><cell>6.946</cell></row><row><cell>Bluntfin</cell><cell cols="2">0.225</cell><cell>7.879</cell><cell></cell><cell>0.929</cell><cell>0.400</cell><cell>6.549</cell></row><row><cell></cell><cell></cell><cell></cell><cell>Time (s)</cell><cell></cell><cell></cell><cell cols="2">Size (MB)</cell></row><row><cell></cell><cell>Gen.</cell><cell>Cull</cell><cell cols="2">Decimate</cell><cell>Draw</cell><cell>Input</cell><cell>Point set</cell></row><row><cell>Crack-tip</cell><cell>2400</cell><cell>1.0</cell><cell></cell><cell>15.0</cell><cell>0.05</cell><cell>1920</cell><cell>213</cell></row><row><cell>Rocket</cell><cell>3600</cell><cell>1.3</cell><cell></cell><cell>16.8</cell><cell>0.05</cell><cell>2920</cell><cell>242</cell></row><row><cell>Multiscale</cell><cell>1800</cell><cell>1.0</cell><cell></cell><cell>14.5</cell><cell>0.05</cell><cell>1500</cell><cell>227</cell></row><row><cell>Bluntfin</cell><cell>290</cell><cell>0.89</cell><cell></cell><cell>14.9</cell><cell>0.05</cell><cell>4.68</cell><cell>212</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>This research was funded in part by the National Science Foundation under an ITR grant DMR-0121695. We thank the numerous people involved in the CPSD spacetime discontinuous Galerkin project for producing the simulation results visualized here. We would like to specifically thank Reza Abedi for providing us with his simulation data.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">A spacetime discontinuous Galerkin method for linearized elastodynamics with element-wise momentum balance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Abedi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Petracovici</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Methods in Applied Mechanics and Engineering</title>
		<imprint>
			<biblScope unit="volume">195</biblScope>
			<biblScope unit="page" from="3247" to="3273" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">High-quality point-based rendering on modern gpus</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Botsch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Pacific Graphics</title>
		<meeting>of Pacific Graphics</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="335" to="343" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Rendering planar cuts through quadratic and cubic finite elements</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brasher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haimes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="409" to="416" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive rendering of large unstructured grids using dynamic level-of-detail</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Callahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Comba</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Silva</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="199" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Hardware-accelerated adaptive EWA volume splatting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Zwicker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="67" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hierarchical clustering for unstructured volumetric scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Co</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Heckel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="325" to="332" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Monte carlo volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Csbfalvi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Szirmay-Kalos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="449" to="456" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Sequential point trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Dachsbacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Vogelgsang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stamminger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGGRAPH</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="657" to="662" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Multiresolution tetrahedral meshes: An analysis and a comparison</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Danovaro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Samet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Shape Modeling and Applications</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page">83</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Interactive visualization of complex plant ecosystems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Colditz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stamminger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Drettakis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="219" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Quadric-based simplification in any dimension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transaction on Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="209" to="239" />
			<date type="published" when="2005-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">VOTS: VOlume doTS as a point-based representation of volumetric data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grimm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bruckner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kanitsar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Gröller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="668" to="661" />
			<date type="published" when="2004-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Interactive rendering of large volume data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gonser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Straer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="53" to="59" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Interactive maximum projection volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Heidrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mccool</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stevens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="11" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Hierarchical splatting of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hopf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="433" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Statistical geometry representation for efficient transmission and rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kalaiah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transaction on Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="348" to="373" />
			<date type="published" when="2005-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Scale-invariant volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="295" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Acceleration techniques for gpu-based volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Krüger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="287" to="292" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">The use of points as a display primitive</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Whitted</surname></persName>
		</author>
		<idno>85-022</idno>
		<imprint>
			<date type="published" when="1985" />
		</imprint>
		<respStmt>
			<orgName>University of North Carolina at Chapel Hill</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3d surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorenson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH</title>
		<meeting>of SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Instant volumetric understanding with orderindependent volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mora</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Eurographics</title>
		<meeting>of Eurographics</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="487" to="497" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Tetsplat: Real-time rendering and volume clipping of large unstructured tetrahedral meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Museth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lombeyda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="433" to="440" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Ray-tracing polymorphic multidomain spectral/hp elements for isosurface rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Kirby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="114" to="125" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Efficient simplification of pointsampled surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pauly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="163" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Stream-processing points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Renato</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="239" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hardware-accelerated volume and isosurface rendering based on cell-projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rottger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">QSplat: A multiresolution point rendering system for large meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rusinkiewicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH</title>
		<meeting>of SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2000" />
			<biblScope unit="page" from="343" to="352" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Rendering tetrahedral meshes with higher-order attenuation functions for digital radiograph reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Sadowsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Taylor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="303" to="310" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Framework for visualizing higher-order basis functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bertel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Malaterre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Pebay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>O'bara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Tendulkar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Tetrahedral mesh compression with the cut-border machine</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gumhold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Guthe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Straber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="51" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Frequency domain volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Totsuka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH</title>
		<meeting>of SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The randomized z-buffer algorithm: Interactive rendering of highly complex scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wand</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Peter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Meyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Straßer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of SIGGRAPH</title>
		<meeting>of SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Hardware-based ray casting for tetrahedral meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Weiler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kraus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Merz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2003" />
			<biblScope unit="page" from="333" to="340" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Footprint evaluation for volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. of SIG-GRAPH</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="367" to="376" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Pixel-exact rendering of spacetime finite element solutions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of IEEE Visualization</title>
		<meeting>of IEEE Visualization</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="page" from="425" to="432" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
