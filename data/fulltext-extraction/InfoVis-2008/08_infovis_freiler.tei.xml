<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Visual Analysis of Set-Typed Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Freiler</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE Computer Society</roleName><forename type="first">Krešimir</forename><surname>Matković</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Member, IEEE</roleName><forename type="first">Helwig</forename><surname>Hauser</surname></persName>
						</author>
						<title level="a" type="main">Interactive Visual Analysis of Set-Typed Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:55+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Interactive Visual Analysis</term>
					<term>Multidimensional Multivariate Data Visualization</term>
					<term>Categorical Data Visualization</term>
					<term>Interactive Visualization</term>
					<term>Focus+Context Visualization</term>
					<term>Multiple Coordinated Views</term>
				</keywords>
			</textClass>
			<abstract>
				<p>While it is quite typical to deal with attributes of different data types in the visualization of heterogeneous and multivariate datasets, most existing techniques still focus on the most usual data types such as numerical attributes or strings. In this paper we present a new approach to the interactive visual exploration and analysis of data that contains attributes which are of set type. A set-typed attribute of a data item-like one cell in a table-has a list of n ≥ 0 elements as its value. We present the set&apos;o&apos;gram as a new visualization approach to represent data of set type and to enable interactive visual exploration and analysis. We also demonstrate how this approach is capable to help in dealing with datasets that have a larger number of dimensions (more than a dozen or more), especially also in the context of categorical data. To illustrate the effectiveness of our approach, we present the interactive visual analysis of a CRM dataset with data from a questionnaire on the education and shopping habits of about 90000 people.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Data and information, as commonly addressed by visualization, are often heterogeneous. A large amount of time is generally spent on data preparation and cleaning. Often data has to be reorganized as the methods at hand only support few types of data. Columns-by-rows data tables, which often are the structural basis for data visualization, usually support numerical data. Often also nominal and categorical data are handled. More complex data components such as higher-dimensional values (vectors, tensors, etc.) or images, longer texts, or videos are supported increasingly often (even though still only rarly). Set-typed data, however, which generally shows up quite naturally, is usually not treated in its inherent (set) form (i.e., without being transformed into another form, e.g., multiple binary columns). Cars (or products in general) have sets of properties, documents have sets of keywords, photos have tags, patients have symptoms, etc. Properties, keywords, tags, etc., have in common, that they are of set type by nature. Usually, sets are converted to multiple categorical (binary) dimensions, because those are manageable in most existing visualization frameworks.</p><p>In this paper, we now introduce a new approach to the interactive visual exploration and analysis of set-typed data. We provide a solution for treating set-typed data also as sets in the visualization. This makes it possible to deeply explore set properties and to better understand correlations among the set elements. This is also much more intuitive, since set elements semantically belong to a set, and users are used to treat them as sets in real life. For visualization, we propose a new visual metaphor -here called the set'o'gram -to convey relevant information about a set-typed data dimension. To show that this approach also integrates with the powerful analysis concept of coordinated, multiple views (CMV), we also demonstrate, how standard views can be adapted to show set-typed data, such as the histogram, the scatterplot, and parallel coordinates. We note, however, that it were exactly the just moderately satisfying experiences from "just adapting" standard views that led to the development of the set'o'gram.</p><p>One choice we have made for the set'o'gram was to realize it as a frequency-based visualization (instead of an item-based approach). Doing so, we achieve a more coherent visual representation (instead of the less intuitive situation where multiple visualization elements appear for individual data items -one per set element).</p><p>• Special attention is paid to interaction and to the interactive exploration and analysis of set-typed data. Useful analysis procedures and brushing capabilities are supported. Also, we see that the duality between multiple, binary (categorical) dimensions and set-typed data conveniently allows for effective dimension reduction. Given a dataset with multiple categorical dimensions, several of them can be grouped together and represented as one, set-typed dimension, thus leading to dimension reduction in visualization. The remainder of this paper is organized as follows: we discuss related work in section 2, before we detail on the new data model in section 3. In section 4, we introduce our new visualization approach, i.e., the set'o'gram, and in section 5 we describe how interactive visual data analysis is supported. We demonstrate the utility of our approach by presenting an analysis of CRM data (more than 90000 questionaires) in section 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The amount of previous work that specificlly addresses the native visualization of set-typed data is very limited. One example is the work by Kestler et al. <ref type="bibr" target="#b8">[9]</ref>, which is based on Venn diagrams, and which of course also inherits the limitations of Venn diagrams as discussed later in this paper.</p><p>A larger body of relevant previous works, however, is closely related to our approach such as the visualization of categorical data. Hofmann <ref type="bibr" target="#b2">[3]</ref>, for example, developed several useful techniques for the visualization of categorical data. Mosaic plots are a useful tool when two categorical dimensions are investigated. They can be seen as nested histograms, using the width of bars rather than the height, to reflect the amount of data items as represented by a visual element. Due to the fact that Mosaic plots divide the available screen-space recursively as proposed by Friendly et al. <ref type="bibr" target="#b1">[2]</ref>, the order of the dimensions has a significant impact on the visualization. Spence et al. <ref type="bibr" target="#b12">[13]</ref> have developed the Attribute Explorer, an application which helps finding interesting data records in large datasets by defining interesting ranges of values for various dimensions. A widget called LinkCrystal, allows different coloring of data records that satisfy different combinations of the user-supplied selections.</p><p>The List View in JigSaw, a visualization tool developed by Stasko et al. <ref type="bibr" target="#b13">[14]</ref>, is capable of displaying relations between multiple dimensions. Connections between elements are represented by lines. However, because the entities' names are printed on the screen, scrolling is needed in these lists. With pixel bar charts, Keim et al. <ref type="bibr" target="#b6">[7]</ref> introduced a technique that does not only use the size of a rectangle to represent data, but also uses the area to describe it further. Every data item is represented by a pixel with a color that displays a numerical value. In 2002, hierarchical pixel bar charts have been introduced <ref type="bibr" target="#b7">[8]</ref> -they allow to display hierarchies by dividing bars and displaying the resulting thinner bars a bit lower. This way of displaying hierarchies works best with few subdivisions. With value-cell bar charts, Keim et al. <ref type="bibr" target="#b5">[6]</ref> have proposed another way of using the screen-space inside histogram bars to display additional information. In this case, bars represent the amount of income for a certain timespan, while differently colored cells in each bar represent the value of single transactions.</p><p>When Inselberg et al. <ref type="bibr" target="#b3">[4]</ref> introduced parallel coordinates, they used this technique mainly to display high-dimensional geometry. Later, they became very useful in data analysis, because a relatively high number of dimensions can be visualized conveniently in 2D visualization space. However, parallel coordinates are not really well-suited for categorical data, so various improvements have been made over time. Rosario et al. <ref type="bibr" target="#b11">[12]</ref> proposed to build up a class tree, representing a hierarchy on the available categories. The distance measure obtained by this tree can be used to place similar categories next to each other. Kosara et al. <ref type="bibr" target="#b9">[10]</ref> introduced parallel sets, a technique that combines the advantages of Mosaic plots and parallel coordinates. Instead of lines, parallelograms are used to connect the axes. The heights of these connections are scaled according to the number of data items they represent. By using different colors for each category of a single dimension, the bars can be traced when they split up at other axes. Parallel sets work best with multiple categorical dimensions with only few categories, otherwise split-up bars may become too small to visualized properly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DATA MODEL</head><p>The visualization process often follows a model described by Card et al. <ref type="bibr" target="#b0">[1]</ref>. After a dataset is acquired from a computational simulation or from measurements, etc., it has to be prepared and stored in a convenient format for visualization. Data tables are often used for abstract data. Most average users are familiar with spreadsheet applications like Microsoft R 1 Excel R , where attributes are listed in columns and each row represents one data record. A data record contains one value per attribute dimension, which is referred to as a data item. A spreadsheet can also be interpreted as a multidimensional space with each row representing a point in space (with as many dimensions as columns). Depending on the values which an attribute dimension can contain, we distinguish between different data types. There can be one-dimensional values like numeric, categorical, or nominal values, and values of higher dimensionality like vectors, series of values, or even objects like full texts or pictures.</p><p>A data type, which not yet has been treated natively in visualization (in the context of a multi-variate dataset), is the set as known from mathematics. A set is a collection of an arbitrary number of elements that can also be empty. Such a set of elements can be used as a value that lists various attributes that are assigned to a data item. The dimension itself is defined by a superset containing all available elements. The order of elements in a set does not matter, but the elements in a set-typed dimension can be reordered. It is useful to maintain the same order in different visualizations, but it has no consequences for the data records themselves. We confine ourselves to simple sets here, i.e., we do not treat multisets (set elements with higher multiplicity) or hierarchical sets (sets as elements of sets).</p><p>Set-typed data definitely is not a new thing and there are many case of sets in real-world applications. Whenever we map an arbitrary number of semantically connected attributes to data items, using sets is the most natural way to retain the characteristics of the data. Currently such data is usually stored using multiple categorical dimensions, which has various disadvantages. Naturally connected items which semantically belong together are disconnected. It is not intuitive and at the same time it also increases data dimensionality.</p><p>To keep the terminology in this document consistent, some terms concerning sets have to be defined. A dimension in a multivariate dataset containing set-typed values is called a set-typed dimension. It provides a group of possible elements, that can be assigned to all values in this dimension. If we refer to a value in a set-typed dimension, which contains a subset of all possible elements, we call it a set. We end up with datasets that contain data records in its rows and dimen- The picture on the left shows a Venn diagram with four shapes. Each shape defines an area, where data items that contain a specific element can be placed. A data item containing two elements must be placed in the intersection area of the two respective shapes (and outside the other two shapes). To provide room for each possible combination of elements, the edge of a new shape has to intersect each of the currently available areas. This visualization is very intuitive for a small number of shapes, but it becomes confusing very soon when new elements are added. The picture on the right shows a Mosaic plot <ref type="bibr" target="#b2">[3]</ref> representing the same dataset. Here the available screen-space is divided recursively for each possible element in our set-typed dimension. The size of the two halves represents the number of data records in this rectangle. However, large amounts of screen-space are needed for a higher number of elements, and the resulting visualization heavily depends on the order of subdivisions. The picture in the middle displays the same dataset in a set'o'gram. This visualization shows one bar for each possible element in our set-typed dimension. One data record containing multiple elements is represented by multiple bars in the view. The blocks provide additional information on how many other elements are in the sets represented by a block. However, to find out which other elements are contained in these sets, interaction is needed. sions in its columns. Each data record contains one value in each dimension. If this dimension is set-typed, the value itself is a set and can be composed of multiple elements. Our analysis prototype assumes the set elements to be of string type (even though other element types are principally possible, of course).</p><p>To illustrate how sets can be interactively explored and visualized, we consider a simple dataset example (called "Columbus Dataset" in this paper), containing some data about used cars that recently have been for sale in Columbus, Ohio. These cars have various parameters like price or mileage, that are stored as traditional numerical values. Manufacturer or model names are stored in categorical dimensions. However, we also have features, like air-conditioning or cruise control. Since each car can have any combination of all available features, we have two possibilities here, in principal. We can either store each feature in a single categorical dimension that contains boolean values like true and false, or we can create one set-typed dimension that stores all features of a car in a list of elements. Besides reducing the number of dimensions, we can also rearrange elements and have their order reflected in each view.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">INTEGRATING SETS IN VISUALIZATION</head><p>The data type set has been integrated into a coordinated multiple view framework which supports interactive visual analysis of multivariate data. This framework offers a variety of views using established information visualization techniques. To enable interactive visual analysis of set-typed data, we extended three standard views, which are often used to analyze tabular data, i.e., the histogram view, the 2D scatterplot, and the parallel coordinates view.</p><p>Our visualization framework supports item-based visualization like scatterplots and parallel coordinates, as well as frequency-based visualization like histograms. While in item-based visualization each data item is represented by a visual element, e.g., a dot in a scatterplot, frequency-based visualization represents the cardinality or frequency of items with particular characteristics. These two types of visualization behave differently when set-typed dimensions are visualized. In an item-based visualization, each data item is represented by a visual item. The item's position represents its values in one or more dimen- It is easy to see which features occur often, and which are rare. However we cannot see which features occur in combination with others. The lower picture shows a parallel coordinates view displaying six features of the cars in our dataset. Parallel coordinates are not well-suited for visualizing dimensions with low cardinalities, because the amount of congruent lines can not be estimated well. The only thing we could tell from this visualization is that there is no car with a DVD player that does not have air-conditioning or a CD-Player.</p><p>sions. If a set-typed dimension is visualized, there usually are multiple elements in each set (per data item). This translates into drawing multiple visual items for one data item on the screen, e.g., one graphical element for each feature of a car. In frequency-based visualization, data items are divided into categories, especially when discrete data are addressed. In case of set-typed dimensions, a set containing multiple elements accordingly belongs to multiple categories, also. The frequencies of multiple categories are increased for a single data item.</p><p>With the traditional approach, each boolean attribute would have two possibilities, i.e., a car either has a feature or not. In case of settyped data, cars can have any combination of features, or no feature at all. Just as in mathematics, we also have to account for empty sets, accordingly. We therefore embed an explicit representation of the empty set in the visualization. We utilize a differentiated (deemphasized) visual appearance for this special category.</p><p>In mathematics, Venn diagrams are often used to illustrate a set. By drawing partly overlapping shapes, different element combinations are assigned to areas. However, with an increasing number of set elements, this approach becomes impractical. It is very hard to make all possible combinations of elements visible, and provide enough room for data items in areas where these items belong. For example, if we add an element e to figure 1, the additional shape has to cover parts of all areas in the view, without covering one single area completely.</p><p>Another approach to combine multiple categorical dimensions are Mosaic plots <ref type="bibr" target="#b2">[3]</ref>. Here, the available area is subdivided into multiple rectangles. If we consider set elements, we have to split the area into two parts for each elements, recursively. This works well for few elements, but if we subdivide each rectangle too often, we need large amounts of screen-space, and our visualization becomes similar to a treemap <ref type="bibr" target="#b4">[5]</ref>. A treemap is well suited for hierarchies, because there the order of subdivisions is already given. A set with multiple elements does not necessarily have an inherent hierarchy, therefore we do not know, which element should be taken into account for the first split. This is an important fact, because the first splits are very well visible in the visualization, while later subdivisions are harder to see. Because of the problems mentioned before, we decide not to visualize each and every possible combination of set elements. Instead, we visualize frequencies of elements, and in a second step, we visualize additional information on the cardinality of sets. This approach needs less screen-space and scales well with a higher number of elements. While treemaps would need 2 n rectangles to visualize sets with n elements, we only need n rectangles to show frequencies and n 2 rectangles to visualize cardinalities. With interaction we can then reveal the details about which set elements co-occur with which others (which the static visualization does not show as a consequence of the above mentioned compromise).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Sets in Histograms</head><p>The histogram is a very useful instrument to examine the distribution of data values. It is well suited for categorical data and can be nicely extended to visualize sets, as shown here. A histogram is composed of (usually) vertical bars representing all possible elements of a set-typed dimension. Because one set-typed value usually contains multiple elements, it generally contributes to multiple bars in the histogram. As a consequence, the sum of all histogram contributions generally exceeds the total number of data items. Histogram bars are compared to each other to understand the frequency of each possible element in a set-typed dimension. If we want to display the same information as in the histogram in figure 2 without the use of set-aware visualization techniques, we would either require more views (i.e., one histogram for each attribute), or views that can display more than three dimensions, like parallel coordinates. However, figure 2 shows that parallel coordinates are not well suited for dimensions with low cardinalities.</p><p>If we use one histogram for each dimension with only two different values, we end up with only two bars representing the values 1 and 0. The set-enabled histogram is simply a collection of all 1-bars of all those histograms. The additional empty set bar is not simply a collection of all "false" bars, however. It represents only those items which have "false" values for all features, otherwise the data records represented by this bar would not show up in our visualization at all.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The Set'o'gram</head><p>Although we have already visualized set-typed data in an intuitive way which also provides some additional information, we still miss other valuable information such as which data items have a (set) value with just one particular element, or maybe two specific ones. Since questions of this kind are quite natural in the analysis of set-typed data, we have to support them in the visualization, also. For conveying more details about the distribution of set-typed data, we utilize the space provided by the individual histogram bars (other approaches such as PixelBarCharts <ref type="bibr" target="#b7">[8]</ref> also do this).</p><p>One important aspect of interactive visual analysis is to identify deeper relations between elements. Elements show up individually or in combination with each other. The set'o'gram has been designed to visualize such relations (see <ref type="figure" target="#fig_2">figure 3)</ref>. Each bar (except the first one, which represents the empty set) contains blocks. The maximal number of blocks in a bar equals the maximal number of possible elements in the set-typed dimension. The lowest block indicates the number of data items having only one element, i.e., the one which is represented by the bar which contains this block. The next block above represents data items which show up in combination with exactly one other element. This (other, second) element can be different for each of the data items represented by the block, but none of them comes in combination with fewer or more other elements. The next block represents all data items containing two additional elements, and so on. Without making use of any interaction techniques we can already gain additional information from the set'o'gram. Wide blocks indicate set elements that do not occur with other elements, tall narrow blocks represent elements that often occur in combination with other elements . This can already be valuable information about a dataset.</p><p>In order to distinguish the blocks easily, we vary the blocks' widths. This is necessary since not all blocks have to exists in each bar. With an increasing number of elements in a set, the width of the blocks is reduced. While the lowest block is of full width, the widths of the other blocks is reduced by a fixed value for each additional element in its sets. Alternating color stripes in the background make it easier to compare the widths. If a set'o'gram displays brushed data, the corresponding amount of data is highlighted in each block and in each bar. To avoid the brushed area of a bar being hidden, one stripe next to it is never covered with blocks. This stripe is also drawn with alternating colors to make it look different from regular bars. Because empty sets do not contain elements, the empty set bar does not contain any blocks (see <ref type="figure" target="#fig_2">figure 3)</ref>.</p><p>Another possibility to represent cardinalities is dividing the blocks' widths by the number of elements in the respective sets. A block representing data items that contain two elements, has then a width of one half of a bar. Because each one of these data items is represented in two different blocks (once in the bar of its first element, and second time in the bar of its second element) of half width, the amount of screen-space used for blocks is equal for all data items. This avoids overrepresenting items containing many elements. However, in sets with many elements, the differences between block widths become very small, which makes them hard to distinguish (see <ref type="figure">figure 7)</ref>.</p><p>To help users to distinguish single blocks, they are separated. Especially in sets containing many elements, these blocks can be very small, therefore it is not good to separate them using lines or any other additional graphics. Instead we chose to use a color gradient for each block, similar to the cushion approach <ref type="bibr" target="#b14">[15]</ref>. The more sophisticated cushion approach also represents the level information, for example, in hierarchies. By making the upper left corner brighter, the borders of all blocks are easy to recognize.</p><p>Sometimes it can be very useful to compare blocks inside a bar. Especially blocks in very low bars are hard to compare to each other. To simplify this, the set'o'gram also supports a relative mode as shown in figure 3. In this mode, all bars are scaled to the same total height. In relative mode, blocks inside bars can easily be compared to each other or to the enclosing bar. It is also very useful to show the relative amount of brushed data for each bar. However, blocks between different bars cannot be compared to each other, because they can be scaled differently. <ref type="figure">Fig. 4</ref>. When the mouse cursor is moved over a block in the set'o'gram, this block is highlighted along with parts of other related blocks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ANALYSIS OF SET-TYPED DATA</head><p>Up to now we have shown how interested analysts can gain more information out of set-typed data using an innovative visualization approach. In the following, we demonstrate how appropriate interaction and analytic procedures can lead to deep insight. Two main tasks can be identified in related analysis procedures. Users want to explore selected sets themselves. Additionally, they aim at exploring correlations of set-typed data with other dimensions in the dataset. When analyzing sets is not enough, for example, when comparing prices of cars with many features to those with few, multiple views and interaction techniques are needed.</p><p>Highlighting selected blocks of interest, for example, makes the analysis of sets a lot easier and enables additional insights. The main idea is to allow the user to place the mouse pointer over a block, and the respective block is highlighted. Furthermore, all corresponding block parts in other bars are highlighted as well. For illustration we consider a simple example. If the user points to the block which represents cars with airbags and two other features, (figure 4) the corresponding parts of blocks in other bars are highlighted as well. The user can then see, that each one of these cars also has exactly two other features, all of them have air-conditioning, one has keyless entry, and three have cruise control. Such relations can be very interesting when analyzing a dataset.</p><p>In order to support the analysis of overall correlations in the data set, we use coordinated multiple views. Just as in standard linked views we support brushing (graphical selection of a subset of data in a view) and linking (highlighting corresponding points in all other views). All views are linked and the set'o'gram highlights blocks depending on the selection in other views.</p><p>While brushing &amp; linking are state of the art techniques <ref type="bibr" target="#b10">[11]</ref>, that are used by many others for data exploration, also, there are some specialities to keep in mind when working with sets. The main difference between sets and conventional data types like numbers or categories is that each element of a set must be represented in a view. In case of histograms, this means, that a data item containing multiple elements has to be represented by multiple bars -brushing and linking is affected, accordingly! In scatterplots and parallel coordinates, each element is represented by a separate visual item.</p><p>If a data item is brushed, all of its visual representations, including all elements in the set-typed dimension, are brushed, too. These elements can be represented by multiple visual items, that are not necessarily connected to each other (graphically). When brushing one of these items, other items belonging to the same set have to be visually highlighted, also, even if they are outside the brush geometry. As an example we may look for cars with all-wheel drive, and most of these cars will also have other features. The corresponding parts of the visualization that represent them have to be highlighted too.</p><p>The newly introduced histogram extension supports brushing of complete bars and brushing of separate blocks. Again, as in every other view that displays sets, there generally are highlighted areas also outside the brush geometry. As another source of information, the set'o'gram does not only highlight parts of bars, but also parts of blocks (see <ref type="figure" target="#fig_3">figure 5</ref> for an example). After brushing a bar in a set'o'gram we can see the brushed amount of data for each block and each bar in the view. As expected, tall bars like AC have a larger brushed area than short bars, like keyless. In the lower image, the view is switched to relative mode, and each bar is scaled to the same height. This view shows, that a relatively large amount of the bar keyless has been brushed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">DEMONSTRATION</head><p>To demonstrate the usefulness of our new visualization approach to set-typed data, we analyze a large CRM dataset as provided by one of our industry partners. This dataset contains returned questionnaires on education, technical devices, and shopping habits of more than 93000 people. Its main challenge is its high dimensionality. The questionnaire contained many multiple choice questions, which can be very useful, because the test persons can specify information in a very detailed way. Instead of picking their favorite shop, users can indicate multiple shops they frequently visit. It is also possible to indicate multiple educational institutions instead of only checking the last one.</p><p>When being solely dependent on categorical data dimensions, we have to create one dimension for each shop, and one for each educational institution, aso., which results in a large amount of dimensions (about 100) that are hard to visualize. By grouping coherent dimensions to set-typed dimensions, we can reduce their number and make them easier to visualize, too. <ref type="table">Table 1</ref> shows a summary of all settyped dimensions that have been created. 65 categorical dimensions have been converted into ten set-typed dimensions which results in a dimensionality reduction by more than 84%. Although all set elements are stored as strings, the size of the dataset shrunk from 23 MB to 18 MB. It is up to the user to create set-typed dimensions and join or split dimensions to suit his or her needs. It would be possible, for example, to split shops into discounters and higher-priced supermarket chains, or to join dry and canned dog food.</p><p>Shops -When looking at a set'o'gram containing information on shop preferences -see figure 6 -, we can immediately gain useful information. Generally, there are only few people that selected one or two shops. Most people purchase items at different shops, probably comparing price and quality. The discounter "Hofer", for example, has the highest number of customers in our dataset, but they only have a very small amount of exclusive customers. In contrast to that, "Billa" and "Spar" have a much larger number of customers who buy their everyday necessities only in that particular shop. However, even there the number of exclusive customers is quite low. We could reason that cheap special offers are a bad method to attract customers, because they will probably not buy the more expensive products. Maintaining fair prices for a wide range of products is probably a better approach. While this is considered an artefact, it contains more information than the regular visualization. To remove these artefacts without losing information, the number of elements in the settyped dimension can be reduced (e.g. by splitting the dimension), or the number of screen-space can be increased.  <ref type="table">Table 1</ref>. 65 categorical columns are reduced to ten set-typed dimensions. Overall, the number of dimensions has been reduced from 105 to 50, being an effective dimension reduction by more than 2/3.</p><p>Washing Agents - <ref type="figure">Figure 7</ref> shows two set'o'grams displaying customers preferences on types of washing agents. One fact is quite obvious when looking at it: people tend to stick with their regular type of washing agent, because in each block, the full width bar is the highest one. Only customers of liquid washing agents (third bar) tend to use other agents too. A possible consequence for marketing departments could be, that liquid washing agents should not be advertised as a sole solution, but as an addition to other types. Although the view gives no information on preferred brands, we could also suppose, that it may be more likely for customers to switch brands than to switch agent types. If new types of washing agents are produced, the production of conventional ones should not be discontinued, because customers might rather change to another brand than to the new type of washing agent. <ref type="figure">Fig. 7</ref>. Two set'o'grams showing which types of washing agents customers prefer. Both views represent the same data, the upper one is drawn subtracting fixed values from the bars' widths. In the lower one, the bars' widths are divided by the number of elements in the sets they represent. The first mode is used throughout this paper and is best suited for a high number of elements. The second mode puts a stronger emphasis on area preservation and shows the amount of full width blocks even more obvious.</p><p>Computers &amp; Internet Access -In <ref type="figure" target="#fig_5">figure 8</ref> we reveal connections between education, computer usage, and the number of children in a household. Especially offline users are statistically different to overall computer and Internet users. While computer and Internet usage correlates with education, there is a noticable difference between households with children and those without. However, the correlation with education disappears when looking at computer users without Internet access. While Internet access is most commonly found in families with one child, computers without Internet access are common in families with four or more children.</p><p>Data Cleaning -Datasets can, especially when the data was provided by many people, contain errors. People may overlook some checkboxes, they can misunderstand questions, refuse to give information on specific topics or even provide wrong information intentionally. In some cases, wrong information can be detected or sometimes even corrected. A set'o'gram of all educational levels can be seen in <ref type="figure">figure 9</ref>. The educational levels are roughly sorted from the lowest to the highest. The first block in the bar representing university graduates shows, that about 40% of all university graduates did not check any other educational institutions. While we can assume, that these people have primary education, we do not know which type of high school they graduated from. In such a case, missing primary education could be possibly corrected, but missing secondary education can only be detected. It seems that many people just check the highest type of education they have, assuming that their educational development is not of any interest. <ref type="figure" target="#fig_0">Figure 10</ref> shows histograms depicting dog owners and dog food customers. Three persons indicate that they buy all kinds of dog food without even owning a dog. Although it is not necessary to own a dog in order to feed one, these data record can be discarded because it is very likely that the information provided by the user is not true. In fact, further research showed, that one of these persons also pretends to be a customer of all available shops and has reached all educational levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION</head><p>This section deals with some aspects that came up during the design and implementation of the here presented visualization methods for set-typed data. The implementation has been done in the context of ComVis, a CMV visualization system that supports different data types and visualization techniques. A screenshot of a workplace with set'o'grams, histograms, scatterplots and parallel coordinates is shown in <ref type="figure" target="#fig_0">figure 13</ref>. It is important to note that in most datasets it is necessary to handle a wide range of data types. Set-typed data can significantly improve our insight into the dataset, but we still have to support other ones, such as numeric or categorical data.</p><p>Apart from histograms, we also extended 2D scatterplots (figure 11) to handle set-typed data. If sets are visualized in a scatterplot, all available elements are placed in equal intervals along an axis. Of course it is possible to use sets for both dimensions. This is very similar to visualizing categorical data, the only difference is, that the first element on a set-axis is the empty set and that individual data items are (usu- In the top-most section, personal computers have been brushed. The education histogram shows, that people with higher education are more likely to own a computer. The other histogram shows, that households with children are more likely to own a computer, than those without. The highest amount of computer users lives in households with two children, however, these differences are very slight.</p><p>In the middle section, Internet users have been brushed. The upper left histogram looks very similar. The brushed sections are a bit lower, but we can still observe, that Internet usage increases with higher education. The upper right histogram tells us that households with one child are most likely to have Internet access. The relative amount of Internet users decreases very slightly in families with more children, but childless households are still the most unlikely group for Internet access.</p><p>In the third section, offline users have been brushed by first brushing computer users, and then subtracting Internet users. Surprisingly, the education's influence seems to disappear -all educational levels have about the same relative amount of offline computer users (with the empty set as an exception). As another surprise, the highest relative amount of computer without Internet access can be found in families with four or more children. <ref type="figure">Fig. 9</ref>. A set'o'gram of educational levels reveals some errors in the dataset. The full-width blocks should not exist in some bars, because primary education is a prerequisite for secondary education which by itself is mandatory for university students. <ref type="figure" target="#fig_0">Fig. 10</ref>. The two histograms on the right show the distribution of various brands of dry and canned dog food. Each single brand has been brushed, and all these brushes have been combined using AND operators yielding people who buy -or pretend to buy -all brands of dog food. The histogram on the left shows dog owners on the right and people without dogs on the left. The mouse cursor is positioned over the left bar, and the label at the left axis shows that three people pretend to buy all kinds of dog food without having a dog. ally) represented by multiple points (similar to the replication effect in histograms). Scatterplots are very useful to find correlations between two dimensions. If two set-typed dimensions are visualized, there are lots of congruent points which makes analysis harder. We found it especially useful to investigate the relation of one set-typed dimension with a second dimension of other type. Interaction helps (to a certain degree) to disambiguate the situation with multiple visualization cues per data item (especially in the case where only one of the two axes represent a set-typed attribute).</p><p>The parallel coordinates view (figure 12) is very useful, if multiple dimensions have to be displayed concurrently. Each data item is represented by a line strip intersecting all axes at positions, which represent the actual values of the data item in each of the depicted dimensions. Because parallel coordinates are also an item-based visualization, the main issue with set-typed data is, again, that one data item can contain multiple elements. Just as there are multiple points in scatterplots for single data items, there are multiple lines for single data items also in parallel coordinates. A line representing a data item with multiple elements in one dimension has to intersect the set-typed axis at multiple positions. Therefore, the line has to be split at the axis to the left of the axis which represents the set-typed attribute (if there is one) and joined again on the other side. If two set-typed axes are placed next to each other, each assigned element of the first axis has to be connected with the ones on the second axis. Because the number of line segments next to set axes can increase significantly it is possible to divide the opacity of a line segment by the number of segments belonging to this data item. Similar to the situation with scatterplots, we found it most useful to work with visualization configurations without two set-typed dimensions next to each other. <ref type="figure" target="#fig_0">Fig. 11</ref>. The 2D scatterplot can be adapted for set-typed data, if positions on the axis are assigned to elements. Sets can contain multiple elements, leading to multiple points in the scatterplot (even for one single data item). <ref type="figure" target="#fig_0">Fig. 12</ref>. This parallel coordinates view shows three dimensions of the Columbus dataset. The first two dimensions are categorical and the third one is set-typed. If a data record contains multiple elements in its set, the line representing this record has to split and intersect the set-typed axis at multiple positions. This becomes especially obvious in the second image: here, only one data record (i.e. one car) has been selected -and multiple lines connect the available features of this vehicle.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">SUMMARY AND CONCLUSIONS</head><p>In this paper we have introduced a new visualization approach to the interactive visual exploration and analysis of set-typed data. We adopt a frequency-based representation of set-typed data, related to Mosaic plots, histograms, and pixel-based approaches, which provides a useful compromise between a compact representation on the one hand and a level of detail on the other hand, which reaches beyond more traditional approaches. Especially the important cooccurrence information (which set elements cooccur with each other) is visualized and furthermore detailed through interaction. We identified advantages (such as a more compact visualization) of natively treating special data types (set-typed data in this case), instead of re-coding the data in different form (as set of boolean or categorical dimensions in our case) and using standard visualization approaches. The introduction of a visualization approach for set-typed data even allows to reverse this process and re-code semantically related boolean (or categorical) dimensions into set-type attributes, enabling an efficient and meaningful mean to dimension reduction in data analysis. One relevant conclusion of this work for related future research is that the set of available visualization solutions still is focussed on a limited set of standard data types (such as numeric or textual values). Thinking about better visualization opportunities for non-standard data types seems to be still rewarding. <ref type="figure" target="#fig_0">Fig. 13</ref>. A data analysis session based on the ComVis visualization prototype with different visualization techniques employed. Two set'o'grams (on the left) show two set-typed attributes in the data (education and technical devices), a scatterplot (top, middle) shows one categorical dimension (ZIP codes) vs. the set-typed dimension "Shops", the parallel coordinates show six dimensions, including four set-typed dimensions, and two "regular" views (one histogram and one scatterplot on the right). Households with children (brush #1 in the top right histogram) which are also online (brush #2 in the set'o'gram in the lower left) are highlighted.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Three visualization methods for set-typed data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>The upper image shows a histogram displaying one set-typed dimension of the Columbus dataset. Note that cars with multiple features are represented by multiple bars.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>The upper image shows a set'o'gram of the Columbus dataset depicting the set-typed dimension Features. The bright bars in the background show the same information as in the histogram. The blocks show the number of different elements in each set. The block of full width in the rightmost bar, for example, represents a car with all-wheel drive but no additional features. The narrower blocks on the bars' tops represent cars with many features. The lower image shows the same set'o'gram in relative mode. In this mode, all bars are scaled to the same height, which makes it easy to compare blocks within single bars.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>The upper image shows a set'o'gram of the Columbus dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>The upper set'o'gram shows peoples' shop preferences. The bars become too thin to show the upper blocks their correct size. Therefore, the minimum width is set to at least one whole stripe of the bar. The lower picture shows what happens, if we do not check the blocks' widths. The right edges of the upper blocks are moved to the left and are no longer inside the bars.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>All three sections show the same views: a histogram displaying relative brushed amounts of all educational levels, another one depicting the number of children, and a set'o'gram displaying technical devices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Wolfgang Freiler and Dr. Krešimir Matković are with the VRVis Research Center in Vienna, Austria, eMail: { Freiler | Matkovic } @VRVis.at. • Prof. Dr. Helwig Hauser is with the University of Bergen in Norway,</figDesc><table /><note>eMail: Helwig.Hauser@UiB.no. Manuscript received 31 March 2008; accepted 1 August 2008; posted online 19 October 2008; mailed on 13 October 2008. For information on obtaining reprints of this article, please send e-mailto:tvcg@computer.org.</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Trademarks mentioned in this paper belong to their respective owners.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Parts of this work have been done as part of the basic research on visualization at the VRVis Research Center in Vienna, Austria, which is funded by an Austrian research program called Kplus. We thank our industry partner for supporting this project.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Readings in information visualization: using vision to think</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999" />
			<publisher>Morgan Kaufmann Publishers Inc</publisher>
			<pubPlace>San Francisco, CA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Mosaic Displays for Multi-Way Contingency Tables</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Friendly</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>American Statistical Association</publisher>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="page" from="190" to="200" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Exploring categorical data: Interactive mosaic plots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hofmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Metrika</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="11" to="26" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Parallel coordinates: a tool for visualizing multi-dimensional geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inselberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Dimsdale</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Conference on Visualization</title>
		<meeting>of the IEEE Conference on Visualization<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="361" to="378" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Tree-maps: a space-filling approach to the visualization of hierarchical information structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Conference on Visualization</title>
		<meeting>of the IEEE Conference on Visualization<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="284" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Value-cell bar charts for visualizing large transaction data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Dayal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lyons</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="822" to="833" />
			<date type="published" when="2007-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Pixel bar charts: a new technique for visualizing large multi-attribute data sets without aggregation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ladisch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Dayal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Symposium on Information Visualization</title>
		<meeting>of the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="113" to="120" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Hao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Dayal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Hierarchical pixel bar charts. Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="255" to="269" />
			<date type="published" when="2002-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Generalized Venn diagrams: a new method of visualizing complex genetic set relations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A</forename><surname>Kestler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Mller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M</forename><surname>Gress</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Buchholz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1592" to="1595" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Parallel sets: interactive exploration and visual analysis of categorical data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kosara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Bendix</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="558" to="568" />
			<date type="published" when="2006-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">State of the Art: Coordinated &amp; Multiple Views in Exploratory Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Roberts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 5th International Conference on Coordinated &amp; Multiple Views in Exploratory Visualization</title>
		<meeting>of the 5th International Conference on Coordinated &amp; Multiple Views in Exploratory Visualization</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Mapping nominal values to numbers for effective visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">E</forename><surname>Rosario</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Rundensteiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="80" to="95" />
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The attribute explorer: information synthesis via exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Spence</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Tweedie</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Interacting with Computers</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="137" to="146" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Jigsaw: Supporting investigative analysis through interactive visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stasko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gorg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Singhal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Visual Analytics Science and Technology</title>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page" from="131" to="138" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Cushion treemaps: Visualization of hierarchical information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Van De Wetering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the IEEE Symposium on Information Visualization</title>
		<meeting>of the IEEE Symposium on Information Visualization</meeting>
		<imprint>
			<date type="published" when="1999" />
			<biblScope unit="page" from="73" to="78" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
