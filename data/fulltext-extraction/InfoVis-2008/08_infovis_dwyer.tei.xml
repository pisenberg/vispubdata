<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Exploration of Networks Using Overview+Detail with Constraint-based Cooperative Layout</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2008-10-19">19 October 2008</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Dwyer</surname></persName>
							<email>t-tdwyer@microsoft.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kim</forename><surname>Marriott</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Falk</forename><surname>Schreiber</surname></persName>
							<email>schreibe@ipk-gatersleben.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">J</forename><surname>Stuckey</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Woodward</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Wybrow</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">โข</forename><forename type="middle">Falk</forename><surname>Schreiber</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">are with Monash University</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">ICT</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">University of Melbourne</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">University of Melbourne</orgName>
								<address>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Exploration of Networks Using Overview+Detail with Constraint-based Cooperative Layout</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2008-10-19">19 October 2008</date>
						</imprint>
					</monogr>
					<note type="submission">received 31 March 2008; accepted 1 August 2008; posted online</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:55+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Graph drawing</term>
					<term>constraints</term>
					<term>stress majorization</term>
					<term>force directed algorithms</term>
					<term>multidimensional scaling</term>
				</keywords>
			</textClass>
			<abstract>
				<p>A standard approach to large network visualization is to provide an overview of the network and a detailed view of a small component of the graph centred around a focal node. The user explores the network by changing the focal node in the detailed view or by changing the level of detail of a node or cluster. For scalability, fast force-based layout algorithms are used for the overview and the detailed view. However, using the same layout algorithm in both views is problematic since layout for the detailed view has different requirements to that in the overview. Here we present a model in which constrained graph layout algorithms are used for layout in the detailed view. This means the detailed view has high-quality layout including sophisticated edge routing and is customisable by the user who can add placement constraints on the layout. Scalability is still ensured since the slower layout techniques are only applied to the small subgraph shown in the detailed view. The main technical innovations are techniques to ensure that the overview and detailed view remain synchronized, and modifying constrained graph layout algorithms to support smooth, stable layout. The key innovation supporting stability are new dynamic graph layout algorithms that preserve the topology or structure of the network when the user changes the focus node or the level of detail by in situ semantic zooming. We have built a prototype tool and demonstrate its use in two application domains, UML class diagrams and biological networks.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Scalability is a key issue for network visualisation paradigms. Examples of very large network datasets abound: biological pathways mapping out complex processes in living organisms; large social networks available through on-line resources like Facebook; or even the World-Wide Web itself. While it may be useful to look at small subnetworks in isolation, increasingly data is available to provide context in the form of a much larger neighbourhood. We believe an interactive system for exploring such data should provide flexible tools for interactively filtering and aggregating large networks to obtain a more manageable sub-network most relevant to a particular task; see e.g. <ref type="bibr" target="#b29">[30]</ref>. However, both during and after the query and filtering process the most common way to visualise network connectivity is as a classic node-link diagram. For this representation to convey information as effectively as possible, good layout is crucial.</p><p>There are a number of techniques for creating high-quality layout for small networks (fewer than 100 nodes). However, these algorithms do not scale up to larger networks (see ยง2.2). For this reason, much recent work on network layout has focused on applying the popular force-directed layout approach to very large graphs with hundreds or thousands of nodes in reasonable time. While these techniques are fast and are designed to reveal the overall structure of the network, they do not cater for the layout aesthetics that are important in a detailed view such as non-overlapping nodes and high-quality edge routing.</p><p>In this paper we couple these two kinds of layout to provide an overview to show context-using a high-speed layout method-and a detailed view using a slower, higher-quality layout algorithm. As well as providing scalability, the use of two different layout engines reflects that these two views have quite different aesthetic requirements. Our aims-largely based on previous research on interactive visualization of networks-when developing our model and the associated visualization tool were: Scalability-support for interactive visualization of very large graphs with thousands of nodes; Synchronizationthe overview and detailed layouts must remain synchronized; High quality layout-layout in the detailed view should satisfy widely accepted graph drawing aesthetics; Customizable-the user can impose application specific layout conventions and also so that they can create landmarks for better navigation; Levels of Detail (LOD)-where available in the network or in the textual or graphical content of nodes, LOD should be navigable through in-situ semantic zooming; Stability-the basic structure of the layout should remain stable as the detailed view moves about the network and also during changes of LOD; Continuity-there should be a smooth, continuous transition to new layouts during interaction.</p><p>Because of the desire to support high-quality, customizable layout in the detailed view, we decided to use a constrained graph layout method in combination with automatic connector routing. It supports non-overlapping node labels, nested sub-graphs (clusters), and high quality poly-line connector routing. Importantly for our application, it also allows the user to specify additional constraints such as downward pointing edges, distribution alignment and minimum separation constraints between nodes in the network. These allow the user to customize the presentation to their particular application specific style.</p><p>Our previous constraint-based network layout was based on a technique called constrained stress majorization <ref type="bibr" target="#b8">[9]</ref>. However, after working with constrained stress majorization in an interactive context we found it had a number of limitations that were not easily overcome. Thus, in this paper we present a new optimisation method based on gradient projection and Runge-Kutta integration, which is more easily extensible to different goal functions, and a new path-based force model called P-stress. This new force model removes long range attractive forces between loosely connected parts of the network and adds forces which consider all the line segments in an edge routing and act to minimise the total path length of that routing which leads to better layout with poly-line connectors.</p><p>One of the major benefits of our new approach is that it preserves the topology of the network during layout. This means that while nodes and connectors can move if this leads to better layout, they cannot move through each other to change the inherent topological structure of the layout. This helps to keep the layout stable during online ex-ploration when the user changes the focus node or the level of detail (LOD) by in situ semantic zooming. A byproduct of using such topology preserving layout is that it allows natural handling of clusters since topology preservation means that cluster boundaries remain inviolate.</p><p>In order to handle very large networks in the overview we use a fast multi-pole method for layout which is the state-of-the-art for simulating large N-body problems; of which the incremental force-directed network layout problem is effectively an instance. It is not possible for this layout method to support the full gamut of constraints provided in the detailed view without making it impractically slow. Instead, we show that simple fixed-position constraints are sufficient to require the contextual view to reflect the layout modifications applied at the detailed level. As the user-or users in a collaborative environmentexplore the larger network their local layout refinements (either automatic or through directed constraint inferencing) are gradually reflected in the holistic layout of the overview.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Interactive exploration of large networks</head><p>An early formal description of the on-line graph drawing problem is given by Eades et al. <ref type="bibr" target="#b11">[12]</ref>. They describe a system in which users navigate through a large graph by selecting a focal node. This focal node is centred on the display and a subgraph of a predefined graph-theoretic radius is expanded around that node. They used a basic Fruchterman-Reingold <ref type="bibr" target="#b17">[18]</ref> force-directed approach for layout where the iterations in the layout process are used as key-frames for animation as the subgraph is updated following a change of focal node. This general mode of on-line graph navigation has been revisited on numerous occasions. It has, for example been extended to hierarchical navigation of clustered graphs <ref type="bibr" target="#b12">[13]</ref>; used in a 3D visualisation of WWW browsing <ref type="bibr" target="#b4">[5]</ref>; updated with a more scalable Barnes-Hut force-model and applied to social network navigation <ref type="bibr" target="#b24">[25]</ref>; and it has also appeared in a commercial tool for navigating Google and Amazon search results. <ref type="bibr" target="#b0">1</ref> There has been considerable research into the underlying interaction issues that need to be considered in a general on-line network navigation system and which have guided the development of our tool.</p><p>Overview+detailed view: Graph viewing systems such as yEd 2 and Cytoscape 3 make use of an overview window to show the entire network and also a main window with a detailed view of part of the network. Unlike our system, the detailed view is simply a zoomed in view of the overview. This means that quality of the detailed view is restricted by the need to ensure scalability of the layout method for the overview. Furthermore, the network layout in these systems is static, and is not updated in response to user interaction or to optimise the part of the graph that is visible in the detailed display. The model we explore in this paper supports such local optimisations while reflecting all such local changes in the overview display in a synchronized, coordinated way.</p><p>Continuity: The on-line graph drawing paradigm seeks to make layout locally optimal for a small focal sub-graph, but when changing layout dynamically in response to user navigation events there are many lessons to be learned from related tasks in the information visualisation design space. Animation is known to be very useful in supporting the user's mental map through transitions of display focus <ref type="bibr" target="#b2">[3]</ref>.</p><p>Stability: Plaisant et al. <ref type="bibr" target="#b30">[31]</ref> investigated interactive exploration of large tree structures. While finding readable layout for trees is much easier than general graphs, their results concerning interaction remain applicable. In particular, they found in their user study that users were more easily able to find already visited nodes if the layout surrounding those nodes remained consistent from visit to visit. Thus, when navigating to a new focal node the part of the visible subgraph that remains on the screen should not be radically altered. Further, when re-displaying a previously visited node, its position relative to the structure around it should be recognisable <ref type="bibr" target="#b30">[31]</ref>.</p><p>There has been considerable interest in developing techniques for stable graph layout that preserve the user's mental model of the graph <ref type="bibr" target="#b27">[28]</ref>. These techniques are quite specialized to the underlying layout algorithms. The standard approach for supporting stability in force-directed approaches is to simply add a "stay force" on each node so that it does not move unnecessarily, e.g. <ref type="bibr" target="#b16">[17]</ref>. In the case of orthogonal graph layout, stability is gained by trying to preserve the current bend points and angles, e.g. <ref type="bibr" target="#b5">[6]</ref>. This has the effect of preserving the layout topology. Finally, North and Woodhill <ref type="bibr" target="#b28">[29]</ref> have given algorithms for preserving the current horizontal and vertical ordering between nodes in dynamic Sugiyama-style layered layout. Our approach is the first that we are aware of to base stability on topology preservation in a force-directed style layout. It has the advantage over stay forces that the layout is better able to adjust to changes while still preserving the original structure.</p><p>Customized landmarks: Ware <ref type="bibr" target="#b37">[38]</ref> gives extensive guidelines for navigation of large "abstract data spaces". His focus is on navigation in 3D environments but the guidelines drawn from numerous studies on wayfinding also apply to extended 2D environments, for example: "...cognitive spatial maps form easily and rapidly in environments where the viewer can see everything at once... The practical application of this is that overviews should be provided wherever possible in extended spatial information spaces." (p.331). Ware also discusses the importance of providing landmarks to support wayfinding tasks.</p><p>In-situ zooming: Distortion-oriented techniques <ref type="bibr" target="#b26">[27]</ref> are well accepted as providing in-situ zooming in information displays. So called "fisheye" techniques <ref type="bibr" target="#b18">[19]</ref> were quickly extended to graph visualization <ref type="bibr" target="#b33">[34]</ref>. More recent interest in this area has concentrated on semantic zooming of information by means of dynamic expansion of clustered graphs <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b36">37]</ref>. While these methods show promise, both may introduce edge crossings as various levels of detail are exposed or elided. Thus these methods potentially violate the fisheye or "rubbersheet" metaphor since they are not guaranteed to preserve topology. In this paper we explore a new method which guarantees preservation of topology of the surrounding network layout when individual nodes or subgraphs are expanded to show more detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Layout of large and small networks</head><p>We note that there is a divide between graph layout methods which work well for small and simple networks <ref type="bibr" target="#b3">4</ref> and those which are able to produce layouts for networks with hundreds or thousands of nodes in reasonable time. A very popular method for layout of small and simple directed graphs is the Sugiyama layered layout method <ref type="bibr" target="#b34">[35]</ref>. This method is able to produce layouts with mostly downward pointing directed edges and no overlap between nodes and edges. There has also been some effort to ensure that Sugiyama methods can run very fast for large graphs <ref type="bibr" target="#b14">[15]</ref>. However, regardless of run-time, it has been shown that when applied to larger graphs this method is poor at showing the large-scale structure of the network <ref type="bibr" target="#b7">[8]</ref>. Another family of layout methods which produce reasonably high quality layout for small and simple graphs and which have received much attention from graph drawing researchers is orthogonal layout <ref type="bibr" target="#b13">[14]</ref>. Orthogonal layout is also able to produce layouts without overlap between nodes and edges and to produce layouts with minimal crossings between edges. Again, however, the layout for larger graphs often obscures overall structure, e.g. see <ref type="figure" target="#fig_0">Fig. 1</ref>.</p><p>Constrained force-directed layout has been introduced as a method for obtaining high-quality layout with non-overlapping nodes and edges and other constraints for capturing various application specific drawing conventions, with the advantages of force-directed layout such as more uniform edge lengths <ref type="bibr" target="#b8">[9]</ref>. Unfortunately, the run-time scales poorly in the number of constraints.</p><p>On the other hand there has been much effort to develop fast layout methods for very large graphs. Hachul and Juenger give a good survey and comparison of the fastest techniques in <ref type="bibr" target="#b22">[23]</ref>. To briefly summarize, they found that Eigen-projection methods are fastest but perform poorly for treelike structures, while multiscale force-directed methods give a reasonable compromise between speed and quality.</p><p>Our approach attempts to overcome the different requirements for large scale layout (showing overall graph structure and speed) and small scale layout (high quality layout where every node and edge is easily visible), by marrying the two different approaches in an overview+detail display. Various choices could be made for the two layout methods but we are guided in our choice by the requirements for interactive navigation outlined in the previous section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">BASIC VISUALIZATION MODEL</head><p>Based on the classic overview+detail visualization model, the core innovation in our network exploration paradigm is that we use a slower, higher quality layout algorithm for layout of a small subset of the graph called the primary graph (which includes the sub-graph displayed in the detailed view) and a high-speed layout method for the remainder of the graph which is called the secondary graph. The user navigates through the network by repeatedly selecting a focal node. Nodes from a neighbourhood around the focal node are added to the primary graph until a threshold number of nodes is reached. The highquality layout is updated and the focal node is centred in the detailed view. Updating of the high-quality layout is done in isolation from the overall layout and only considers the nodes in the primary graph, although the starting point for the layout is the position of the nodes in the secondary graph. After this the layout for the secondary graph is updated using the fast network layout technique. This takes account of the positions of the nodes in the primary graph layout but is not allowed to move them.</p><p>Of course the primary graph is not allowed to become too large (e.g. &gt; 50 nodes) since this would defeat the aim of using fast layout techniques for most of the graph. We restrict its size by removing the nodes that are the furthest in graph-theoretic terms from the current focus node and were the last to be focus nodes. In order to ensure stability of layout, we cache the nodes' associated constraints and the routing for their associated edges and cluster boundaries. These are restored if the nodes come back into the primary graph.</p><p>We have elected to use a constrained graph layout method in combination with automatic poly-line connector routing for layout in the detailed view. This is a generic layout technique that provides high quality layout and also allows the viewer to tailor the layout in the detailed view by imposing placement constraints on the layout. The relationship is maintained in subsequent interaction until the author explicitly removes it. The great advantage of placement constraints over explicit positioning of nodes is that while they allow the author to control the layout, they still allow the layout to adjust sensibly to future interaction such as LOD changes.</p><p>A significant benefit of allowing constraints to be placed on the layout is that the user can use these to improve navigation through the network by for instance aligning nodes in an important metabolic pathway, or orthogonalising the layout and so creating landmarks to guide their subsequent exploration <ref type="bibr" target="#b37">[38]</ref>. In order to facilitate this, our tool provides two high-level styling tools that generate placement con-straints designed to make the layout more memorable by highlighting the largest cycles in a directed graph and by orthogonalising the layout.</p><p>Our visualization tool allows the user to change the LOD shown in an individual node, i.e. resizing the node label. They can also change the LOD in the network by choosing a cluster, i.e. a hierarchical collection of nodes, to be expanded or collapsed in the detailed view.</p><p>Example sessions with the tool are shown in Figures 4 and 5. In the next two sections we detail the layout algorithms used in our tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DETAILED DISPLAY</head><p>Our system utilizes so called constrained graph layout algorithms for layout of the primary graph <ref type="bibr" target="#b23">[24,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9]</ref>. These are related to the more common force-directed graph layout algorithms. Like force-directed methods, they find a layout minimizing a goal function such as stress. However, unlike force directed methods, constrained graph layout algorithms allow the goal to be minimized subject to placement constraints on the allowed layouts. To do so, they use sophisticated constrained optimization techniques to ensure that the generated layouts satisfy the constraints exactly. However, these layout algorithms were not designed to support interactive visualization. We had to extend the algorithms to support stability of layout, user driven changes to the LOD, and continuity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Network Diagrams</head><p>A network diagram (V, E,C) is a drawing of a graph with nodes V , a set of possibly directed edges E โ V รV , and a set of node clusters C. Each node v โ V has a rectangular bounding box with width w v and height h v . A cluster of nodes has a boundary which is a sequence of distinct node corners except that the first and last element is the same. This defines a closed region called the cluster region.</p><p>A route for an edge (u, v) โ E is a sequence of line segments starting from the centre of u, 0 or more corners of nodes around which the edge is routed and finishing at the centre of v.</p><p>A layout for a network diagram is a triple (X, R, B) giving a position</p><formula xml:id="formula_0">X v โก (x v , y v ) for each node v โ V</formula><p>, a route R e for each edge e โ E, and a boundary B c for each cluster c โ C.</p><p>We impose a number of automatically generated refinement constraints on the layout to ensure it is "tidy." There is a non-overlap constraint between each pair of basic graphic shapes. There is a membership constraint on each node cluster: node v is in cluster c iff v is in the cluster region of c. The last refinement constraint is that paths, i.e. edge routes and cluster boundaries, are not allowed to pass through nodes. In addition the author can impose placement constraints on the layout by using placement tools (see ยง4.2).</p><p>Constrained graph layout methods use a goal function to measure the quality of a layout. We use a new goal function we call P-stress (for path-stress). Given a layout (X, R, B), its P-stress is</p><formula xml:id="formula_1">โ i&lt; j w i j ((d i j โ ||X i โ X j ||) + ) 2 + โ pโP w p ((||p|| โ d p ) + ) 2<label>(1)</label></formula><p>where</p><formula xml:id="formula_2">w p = 1 d 2 p</formula><p>, z + is z if z โฅ 0 and 0 otherwise, and P is the set of paths {R e |e โ E} โช {B c |c โ C} in the network. The first component of P-stress is a modification of the stress function which penalizes nodes that are too close together. Unlike the stress function, nodes i and j that are more than their ideal distance d i j apart are not penalized, thus eliminating long range attraction which can cause problems in highly constrained problems (see <ref type="figure" target="#fig_1">Fig. 2</ref>). In this regard P-stress has more in common with a Fruchterman-Reingold force model <ref type="bibr" target="#b17">[18]</ref> than the stress model.</p><p>The second component of P-stress tries to make the length of each path p in the network no more than its ideal length d p . This will also have the effect of straightening edges and making clusters more compact and circular in shape, see <ref type="figure">Fig. ?</ref>?. The ideal length of an edge is a user defined parameter while the desired boundary length of cluster c is 2 ฯ โ vโc w v h v (i.e. proportional to the perimeter of the circle with area equal to the combined area of the constituent nodes). The development of the P-stress model was in part motivated by a previous attempt at adding edge straightening forces to the stress majorization method, see <ref type="bibr" target="#b9">[10]</ref>. In practice, however, that method was not reliably convergent and since it involved complex management of an excessive number of dummy nodes-one for every potential bend point on an edge-it scaled poorly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Placement tools</head><p>The user interface provides standard placement tools on horizontal or vertical positions of nodes: e.g. alignment and equally spaced distribution, minimum distance separation constraints, an anchor tool that allows the user to fix the current position of a selected object or set of objects. These are similar to the constraints provided in diagramming tools such as GLIDE <ref type="bibr" target="#b32">[33]</ref> and Microsoft Visio. Placement constraints are created by selecting objects and invoking a placement tool. These constraints have a visual representation and objects can be added to or removed from them by direct interaction. Placement constraints are persistent, meaning that if nodes involved in a constraint leave the primary graph, the constrained positions will be preserved (i.e. the positions fixed) in the secondary graph, and the constraint will be reinstated when the nodes return to the primary graph.</p><p>The visualization tool also provides two higher-level styling tools which automatically generate placement constraints. These constraints behave like author specified placement constraints and so the author is free to modify the layout by removing some or all of them. Both tools work on a user selected sub-graph of the detailed view.</p><p>The first styling tool "orthogonalizes" the layout by adding vertical and horizontal alignment constraints by a greedy traversal of the selection. It is worth pointing out that orthogonal layout has been shown to improve comprehensibility of UML class diagrams <ref type="bibr" target="#b31">[32]</ref>. An example is shown in <ref type="figure" target="#fig_4">Fig. 4</ref>.</p><p>The second styling tool, flow, makes the selected directed edges downward pointing with a separation constraint between the ypositions of the ends of each edge. Cycles are handled using a heuristic to identify an approximately maximal cycle in each strongly connected (directed) component, and places the nodes in this cycle on the boundary of a rectangle using alignment constraints. This process is repeated until no more strongly connected components exist. <ref type="bibr" target="#b4">5</ref> The choice of styling tools is not exhaustive. We expect that different applications will require different styling tools to capture particular layout conventions. However, so long as the styling tools generate placement constraints, it is straightforward to extend our visualization tool to support them. Using constraints to model layout style is one of the reasons our tool is very flexible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Topology-preserving layout</head><p>Constrained graph layout techniques have not been previously used for interactive visualization. In such a dynamic application we need layout algorithms that ensure stability of layout so that interaction does not destroy the user's mental model of the network. However, what is meant by stability? As discussed in ยง2, in previous systems stability has been modelled by (a) trying to keep the positions of nodes unchanged, (b) by keeping the relative horizontal and vertical position of nodes unchanged or (c) preserving the topology of the layout. It is simple to modify constrained graph layout to support approaches (a) and (b). However, both of these approaches severely restrict how the layout can adjust to changes such as expanding a hierarchical sub-graph. We believe that approach (c), preserving the topology of the layout during interaction with a weak preference that nodes do not move unnecessarily, is preferable. Such topology preserving layout fits well with P-stress minimization and has a simple, readily understood physical metaphor: The poly-line connectors and cluster boundaries act like rubber-bands, trying to shrink in length and hence straighten. Like physical rubber bands, the connectors and cluster boundaries are impervious in that nodes and other connectors cannot pass through them.</p><p>We have developed a novel algorithm for preserving topology of poly-line connectors during layout. Due to space limitations we give only a very brief outline of the algorithm. Full details can be found in <ref type="bibr" target="#b10">[11]</ref>. Assume that our initial layout is (X, R, B) and that we have a new position for the nodes X . Assume that X and X satisfy the nonoverlap and placement constraints and so does any linear interpolation between them. Then to find new edge routing R and boundary routing B for node placement X , conceptually, we move the nodes smoothly between X and X , updating the routing as we go. The two changes that can occur are: (a) two consecutive segments</p><formula xml:id="formula_3">(v 1 , v 2 ), (v 2 , v</formula><p>3 ) on a route straighten and merge into a single segment when the segments become co-linear, and (b) a segment</p><formula xml:id="formula_4">(v 1 , v 2 ) splits into two segments (v 1 , v) and (v, v</formula><p>2 ) when a node corner v "runs" into the segment.</p><p>It is impossible for nodes to go through edges, and so it is impossible for edges to go through edges and so introduce crossings, and it is also impossible for nodes or edges to go through a cluster boundary. Thus, the new layout (X , R , B ) preserves the topology of the original layout. And, as long as the initial layout is feasible, the cluster membership constraint and the requirement that edges do not intersect graphic objects will remain satisfied.</p><p>Another operation we need is to repair an edge route or cluster boundary given that the path may have become invalid because it now passes through a graphic object or could be shortened by straightening and merging some adjacent segments in the path. However, as much as possible we want to preserve the current path. In the case of an edge route we do this by finding a new route for the path and tracing the old path, effectively threading the path through the objects to the destination object. At all stages the connector acts like a rubber band, fitting snugly around objects on the route. The tool uses the connector routing library described in <ref type="bibr" target="#b38">[39]</ref> to dynamically route from the start object to the cursor location while preserving as much of the previous route as possible. More exactly, the last bend in the route is removed from the route whenever the bend angle around the node becomes 180 โข or more, and routing proceeds from the preceding bend.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Basic layout algorithm</head><p>The goal of the constrained graph layout engine is to find a layout that minimizes P-stress and which satisfies the refinement and placement constraints. We utilize a three stage algorithm. (1) A position for the nodes satisfying the placement and refinement constraints is found by projecting the current position of the nodes X 0 on to the placement constraints and then using a greedy heuristic to satisfy the non-overlap constraints and cluster containment constraints. We use the approach detailed in <ref type="bibr" target="#b8">[9]</ref>. (2) Edge routing is performed using the incremental poly-line connector routing library <ref type="bibr" target="#b38">[39]</ref> to compute poly-line routes for each edge, which minimise edge length and amount of bend. Cluster boundaries are obtained by using the convex hull of the objects in the cluster.</p><p>(3) The layout is optimized by iteratively improving the current layout by using a (non-linear) gradient projection approach. This preserves the topology of the initial layout. It is step (3) of the algorithm which is most novel. Its effect is illustrated in <ref type="figure">Fig. ?</ref>?. It uses a non-linear gradient projection approach <ref type="bibr" target="#b3">[4]</ref> to iteratively improves the current layout (X, B, R). It works by choosing a descent direction d and step-size ฮฑ in which to improve the current node position. However, the new position, X d = X + ฮฑd, for the nodes may violate the constraints. This is corrected by projecting X d on to the feasible region. <ref type="bibr" target="#b5">6</ref> One of the keys to the efficiency of our algorithm is that placement constraints are examples of so-called separation constraints in a single dimension. <ref type="bibr" target="#b6">7</ref> Since these only involve variables from a single dimension, it is correct to project on to each dimension independently. There are a number of algorithms for projection on to separation constraints. We use the algorithm given in <ref type="bibr" target="#b8">[9]</ref> which is based on an active set method (like the related Simplex algorithm). Non-overlap constraints are handled by using a heuristic to generate a separation constraint which ensures non-overlap. This choice of separation constraint is dynamically updated during the iterative optimization so as to allow objects to move around each other.</p><p>As part of the projection step we update the connector routing R and cluster boundaries B to be in accord with the projected node placement X d while preserving the original topology. Edge routing correction works as follows. Each node v is moved horizontally/vertically from the initial feasible solution X 0 for which the routing is correct, towards X d . The current horizontal/vertical position of v is given by (1 โ ฮฑ)X 0</p><formula xml:id="formula_5">v + ฮฑX d v</formula><p>where the interpolation factor ฮฑ โ [0, 1] indicates how far along the path to their optimal solution the nodes are. Initially ฮฑ = 0. We then increase ฮฑ until any further increase will cause one of the edge routing events (split or merge) to occur. We perform the event appropriately straightening or bending an edge or boundary segment and update the edge events. This continues until ฮฑ = 1, in which case we have found the updated routing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Smooth transitions</head><p>Smooth transitions as the layout is modified in response to changes in the primary graph are essential in supporting a user's mental map as they navigate through the larger secondary graph. One possible approach would be to simply wait for the algorithm to find the local minimum and then use a simple linear interpolation from the current node position to the new position. However, this has two limitations. First, it means that there is no feedback until the layout engine has finished computing the new layout. While layout is reasonably fast, it still means there is a noticeable lag during interaction. Second, Friedrich and Eades <ref type="bibr" target="#b15">[16]</ref> suggest that when animating changes in graph layout, intermediate frames that satisfy accepted layout aesthetic criteria are preferable to a simple linear interpolation of node positions. A compelling example is that in some cases such linear interpolation can momentarily collapse a diagram to a point before expanding back to the target layout. <ref type="bibr" target="#b5">6</ref> The projection of a point d on to constraints S is the closest feasible point to d. That is, the projection of d on to S is the vector y minimizing โ n i=1 (y i โ d i ) 2 subject to S. <ref type="bibr" target="#b6">7</ref> Separation constraints have the form u  At each iteration our gradient-projection-based constraint layout method seeks to improve the layout by moving nodes along a gradient related feasible descent vector d. A useful property of layout methods using such numerical optimisation is that they can easily be animated by redrawing at each iteration of the layout. With careful selection of step-size a reasonably smooth animation can be obtained of the layout converging on a local-minimum. We choose the step size from a second degree Taylor expansion of the P-stress function about the current set of positions x combined with application of the Armijo-rule <ref type="bibr" target="#b3">[4]</ref> to guarantee monotonic decrease of P-stress. Unfortunately, monotonic decrease in the cost function is not enough to guarantee that there will be no apparent vibration of nodes as the layout converges. High degree nodes can be particularly problematic in this regard. To alleviate this problem we also apply a fourth-order Runge-Kutta smoothing-essentially choosing each d as a weighted average of 4 (feasible) descent vectors in a neighbourhood from the starting x, see <ref type="bibr">[36, pp. 653-658]</ref>. In practice we find that this method leads to smooth animation without having to resort to the "fudge" factors or ad-hoc cooling schemes often applied in force-directed graph layout. Principled techniques from numerical optimisation theory are often eschewed in graph-layout implementations as either too costly or complex, and there is an overhead in computing second derivative information. However, since we are less interested in making our detailed layout method scale to very large graphs, and more interested in obtaining high quality layout and smooth animation we feel that such techniques are well justified in this instance. <ref type="table" target="#tab_0">Table 1</ref> gives an indication of the frame rates and total times to convergence achieved for various size primary graphs.</p><formula xml:id="formula_6">+ d โค v or u + d = v</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Layout modification</head><p>We now describe how the layout is modified during user interaction. All interactions trigger the same basic events: (a) Modify the primary graph if necessary, (b) Find a new layout satisfying the placement and topological constraints that changes the topology of the current layout as little as possible (c) Use step (3) of the layout algorithm ( ยง4.4) to optimize the layout while preserving its topology. (d) Center the detailed view on the focus node. Steps (c) and (d) are the same for all interactions, so we concentrate on describing steps (a) and (b). Changing the focus of the detailed view to a new node v. Compute the new nodes V , edges E and clusters C that need to be added to the primary graph to ensure v and the nodes it is connected to are in the primary graph. A position X for the new nodes satisfying the placement and non-overlap constraints is found by projecting the current position of the nodes in the secondary graph on to the placement constraints and then using a greedy heuristic to satisfy the non-overlap and containment constraints. Edge and boundary routes are computed for E and C using the incremental poly-line connector routing library if they have not been previously computed, or else if old routes exist because the edge or cluster has previously been in the primary graph the route is repaired. Changing the LOD of a single node v. This means resizing the node v. The primary graph remains unchanged. Let (X, R, B) be the current layout. The new layout (X , R , B ) is computed as follows. A new position X satisfying the placement and separation constraints generated from the non-overlap constraints is found by projecting the current position X on to these constraints. Updated edge and boundary routes R and B are computed from R and B using topology preserving interpolation from X to X . Collapse a cluster c of nodes into a single node v c . We record the edge routing and boundary routing for c-it will be used if the cluster is re-expanded. The primary graph is modified so as to collapse the cluster by removing internal edges and nodes, adding the new node v c and collapsing edges in and out of the cluster to edges to v c . The new layout is the same as the old layout except that the internal edges, boundary and nodes of c are no longer placed or routed, the node v c is placed at the center of where c used to be, and each edge to v c uses a repaired route of one of the original edges it was based on. Expand a node v c representing a cluster c of nodes. We remove v c and add the internal edges and nodes in c to the primary graph. A position for the nodes satisfying the placement and non-overlap constraints is found by projecting the current position of the nodes on to the placement constraints and then using a greedy heuristic to satisfy the non-overlap constraints. The new edge and boundary routes for the original edges and cluster boundaries are computed using topology preserving interpolation from the old node positions to the new. Edge routes for internal edges in c and boundary of c are computed using the incremental poly-line connector routing library and convex hull unless routing information has previously been recorded for them in which case this is repaired. Adding a placement constraint. The user can customize and improve the layout by adding placement constraints either manually or by using a styling tool. A new position X for the nodes in the primary graph is computed by projecting the current position of the nodes X on to the new set of placement constraints and then using a greedy heuristic to satisfy the non-overlap constraints. The edge and cluster routes are repaired. Removing a placement constraint. This simply removes the constraint. Direct manipulation. The user can also improve the layout by repositioning a node in the detailed view using direct manipulation. The layout engine is fast enough to provide "live" feedback. Thus the tool is really a kind of collaborative graph-layout tool in which the user can interact with the optimisation engine to improve the layout and escape local minima by providing user hints <ref type="bibr" target="#b6">[7]</ref>. By default topology is preserved during direct manipulation. However, if an "alt" key is held down during the manipulation then the user can reposition the node anywhere they like, modifying the topology and breaking any placement constraints. In this case, new routes for the edges from the node are continuously recomputed during the manipulation and other edges and boundaries repaired if the node involved in the direct manipulation is placed on top of them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">OVERVIEW DISPLAY</head><p>There are three key requirements for our overview display, it must be: Fast: layout for either the whole secondary graph or at least a large enough neighbourhood to give context must be completed in only a second or so, even for thousands of nodes; Able to support fixed position constraints: the positions of the nodes in the primary graph must be fixed in the positions obtained from the detailed layout algorithm, they should influence the layout of the secondary graph but should not be changed; Incremental: it should take as input a set of starting positions for all nodes in the secondary graph and fixed position constraints for the nodes in the primary graph and find a new layout satisfying the constraints while only moving the unconstrained nodes as little as necessary to beautify the overall layout.</p><p>There are now a number of fast layout methods for large graphs as surveyed in ยง2.2. Unfortunately the second and third requirements eliminate Eigen-projection methods such as ACE <ref type="bibr" target="#b25">[26]</ref> and the decomposition methods such as SPF <ref type="bibr" target="#b0">[1]</ref>. Fortunately, the above requirements are not dissimilar from those found in N-body physics simulations for which a whole family of methods are well known. Fast multi-pole methods-in which long range forces are approximated for clusters of particles allowing all repulsive forces to be computed in O(n log n) for n particles-represent the state of the art in this regard. Hachul and Juenger incorporated a multilevel scheme for graphs with a fast multi-pole method in <ref type="bibr" target="#b21">[22]</ref>. Unfortunately, it is not clear how such a multilevel scheme (in which a recursive coarsening of the graph is obtained and the layout applied to each level of granularity separately) can be made incremental. Thus, for all but the initial layout of the secondary graph we use a standard fast multi-pole method without the multilevel scheme of Hachul's so called FM 3 algorithm. Fixed position constraints are achieved by disregarding the forces on such nodes when computing the descent vector. Timings for initial and incremental layout of large graphs using the FM 3 and standard fast multi-pole methods respectively, are given in <ref type="table" target="#tab_0">Table 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CASE STUDIES</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">UML Class diagrams</head><p>UML Class diagrams can be quite large with hundreds of classes for a mature software project. They are naturally clustered either by module defining the classes or by aspect. The feature that differentiates UML Class diagrams from most other diagrams is the large amount of information that can be presented in each node. A full Class node may contain very detailed declarations of class attributes and methods, which may require substantial space to display. Simply displaying each Class node at full detail means that very little of the class structure can be viewed in the detailed view, so an essential requirement for browsing Class diagrams is the ability to semantically zoom nodes in situ, smoothly moving from simply the name of the Class to the full detailed definition. Because the size change can be so dramatic, topology preservation is very useful in maintaining the mental map of the diagram when performing semantic zooming. Orthogonalization of selected neighbourhoods ( ยง4.2) also provides landmarks to aid the mental map. <ref type="figure" target="#fig_4">Fig. 4</ref> gives an example use-case for UML diagram exploration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Biological pathways</head><p>Biological networks are used to represent processes in biological systems and to capture important dependencies between biological entities. Due to the steady growth of knowledge in the life sciences such networks are increasingly large and complex with hundreds and thousands of elements. They can be clustered, for example, by functional properties (e. g. different protein classes in protein interaction networks), by spatial information (e. g. cellular compartments to which parts of the network belong to), or user given hierarchies (e. g. the classification of metabolism into groups such as energy metabolism, amino acids synthesis and so on). The features that make biological networks interesting are different additional information which can be present at nodes and edges (such as structural formulas, experimental data) and their diverse visualization requirements <ref type="bibr" target="#b1">[2]</ref>. We demonstrate the investigation of metabolic networks which have a complex visual appearance and provide LOD: in each reaction metabolic network substances (nodes) are often divided into main and co-substances; and nodes can also be clustered either by cellular compartments or by user given hierarchies. The network in <ref type="figure" target="#fig_5">Fig. 5</ref> shows parts of the carbohydrate metabolism (glycolysis, gluconeogenesis) and several amino acid synthesis pathways derived from the MetaCrop database <ref type="bibr" target="#b20">[21]</ref>. <ref type="figure" target="#fig_5">Figures 5(a,b,c)</ref> show navigation around a large network with 432 nodes and 481 edges, note the ability to expand nodes and clusters to better show detailed node graphics or hidden subgraphs. <ref type="figure" target="#fig_5">Fig. 5(c)</ref> shows a region of the network where the user has expanded several nodes of interest and applied a number of placement constraints. Important paths in the network such as the backbone of particular pathways can be aligned horizontally or vertically. Using the presented framework users are able to smoothly investigate metabolic networks from abstract overview diagrams (where each pathway is represented by one node) to details of specific reactions (where many details are shown for a few nodes) and to produce high quality, user guided layout ready for publication.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION AND FURTHER WORK</head><p>We have presented a new model for interactive exploration of large networks and demonstrated its use for visualization of UML class diagrams and biological networks. Our strategy for combining overview and detail displays is novel as is our approach to providing stable incremental layout via topology preservation. We have built a prototype network browser that demonstrates the viability of our model. However, our experience with the prototype has revealed several limitations.</p><p>The first is the handling of large clusters. Currently, information about clusters is ignored in the overview, which shows the fully expanded network laid out as an unclustered graph. Even when the user explicitly collapses a cluster in the detailed view, the cluster remains expanded in the overview. We are investigating whether it would be better for cluster LOD to remain synchronized between the two views.</p><p>The second limitation is the treatment of nodes that have been removed from the primary graph because it has grown too large. Currently the position of these nodes remains fixed so as to ensure any constraints between these nodes remain satisfied. This makes the layout somewhat inflexible: it might be better to allow the nodes to move if the layout quality degrades. We also plan to explore if it is possible to extend the multi-pole algorithm to support penalty-based approximate satisfaction of constraints while still keeping efficiency.</p><p>The third limitation we have identified is edge routing in dense graphs. Currently, multiple edges may be routed for part of their length along the same path. We are exploring schemes for offsetting such edges so that their paths are not ambiguous, but this further complicates the algorithms and may increase running times.</p><p>A final potential limitation is how to choose which nodes to include in the detailed view if the focal node has a very high degree. This seems an inherent limitation of the focal node-based network exploration model. However, it has not been an issue in our case studies.</p><p>There are also a number of other avenues for future work. As described in our literature survey a number of different approaches to mental-map preserving exploration of graphs now exist. A comparative study of the various methods to determine the best approach for various applications would be useful. Further work could also explore the use of different layout algorithms, particularly for the detailed view. Our particular model for constraint-based layout may be a useful way to provide interactive refinement of combinatorial techniques such as Sugiyama and orthogonal layout, using these as styling tools to generate constraints, rather than for finding absolute positions.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Three popular methods for "high-quality" layout of relatively small graphs applied to a "Sierpinski triangle" graph with 123 nodes and 243 edges. Produced using the y-Ed software with default settings for the three layout styles. Moderate size examples where the combinatorial layout methods do not show large scale structure are easy to find.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>(a) Unconstrained stress or P-stress (b) Constrained stress (c) Constrained P-stress When a separation constraint is added between nodes a and b stress majorization gives undesirable attractive forces between not immediately connected nodes (b). By contrast P-stress leads to a layout that is less surprising (c).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Reducing P-stress by shortening edge routings improves the layout while preserving the topology of the initial layout.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>where u and v are variables representing horizontal or vertical position of a node and d is a constant giving the minimum separation required between u and v.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 4 .</head><label>4</label><figDesc>(a) Here the class FSSolidMatT is the initial focus (b) The user changes focus to FSIsotropicMatT and zooms in to some of its neighbours to see specific methods and attributes. Note that the topology of the common subgraph between this and the previous neighbourhood is preserved. (c) Here orthogonalization constraints have been added to a neighbourhood around the class SSSolidMatT Navigating a large UML collaboration diagram, from the Tahoe Development Server project (http://tahoe.ca.sandia.gov/) The diagram contains 267 classes and 373 relationships between classes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>Navigation of a metabolic pathway network with 432 nodes and 481 edges; and final precise layout with placement of a detailed subgraph.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Timings (in seconds) for the overview and detail layout during interaction on a 1.83 GHz MacBook Pro. FM 3 is the Fast Multilevel Multipole method used for initial overview layout, FM 2 Adj. is the Fast Multipole relayout method with fixed position constraints, and Avg. FR is the average frames (iterations) per second during full, topology preserving constraint layout of the detailed view of the primary graph with node set V .</figDesc><table><row><cell>Graph</cell><cell>|V |</cell><cell>|E|</cell><cell cols="2">FM 3 FM 2 Adj.</cell><cell cols="2">|V | Avg. FR</cell></row><row><cell cols="2">tahoe-small 36</cell><cell>51</cell><cell>0.04</cell><cell>0.01</cell><cell>20</cell><cell>19.1</cell></row><row><cell>tahoe-large</cell><cell cols="3">266 373 0.40</cell><cell>0.13</cell><cell>20</cell><cell>17.3</cell></row><row><cell>tahoe-large</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>40</cell><cell>16.6</cell></row><row><cell>biological</cell><cell cols="3">432 481 0.72</cell><cell>0.23</cell><cell>20</cell><cell>19.3</cell></row><row><cell>biological</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>40</cell><cell>18.4</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">http://www.touchgraph.com/ 2 http://www.yfiles.com/producs/yed/ 3 http://www.cytoscape.org/</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4">What is meant by "small and simple" is very dependent on the application and network structure, but, for example, let us assume we mean networks with around 50 nodes and most nodes having degree less than around 10</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">This is a very different approach to the largest acyclic subgraph strategy used to break cycles in Sugiyama methods. We prefer this approach because it emphasises cyclic components rather than disguising them by arbitrarily reversing edges.</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Smashing peacocks further: Drawing quasi-trees from biconnected components</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="13" to="820" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Handbook of Graph Drawing and Visualization, chapter Biological Networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bachmaier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Brandes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Schreiber</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
			<publisher>Chapman &amp; Hall/CRC Press</publisher>
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Does animation help users build mental maps of spatial information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Bederson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Boltman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 1999 IEEE Symp. on Information Visualization</title>
		<meeting>1999 IEEE Symp. on Information Visualization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="28" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Nonlinear Programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Bertsekas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Athena Scientific</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Dynamic WWW structures in 3D</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Brandes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kรครคb</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lรถh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Willhalm</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Graph Algorithms and Applications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="183" to="191" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">In-teractiveGiotto: An algorithm for interactive orthogonal graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Bridgeman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fanto</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Garg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tamassia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Vismara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GD 1997: Revised Papers from the 5th Int. Symp. on Graph Drawing</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="303" to="308" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">User hints for directed graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A D</forename><surname>Nascimento</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Revised Papers from the 9th Int. Symp. on Graph Drawing (GD &apos;01)</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="205" to="219" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Drawing directed graphs using quadratic programming</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="536" to="548" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">IPSep-CoLa: An incremental procedure for separation constraint layout of graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="821" to="828" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Integrating edge routing into force-directed layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wybrow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 14th Intl. Symp. Graph Drawing (GD &apos;06)</title>
		<meeting>14th Intl. Symp. Graph Drawing (GD &apos;06)</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007" />
			<biblScope unit="volume">4372</biblScope>
			<biblScope unit="page" from="8" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Topology preserving constrained graph layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wybrow</surname></persName>
		</author>
		<idno>227</idno>
		<ptr target="http://www.csse.monash.edu.au/publications/2008/tr-2008-227-full.pdf" />
		<imprint>
			<date type="published" when="2008" />
		</imprint>
		<respStmt>
			<orgName>Monash University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Online animated graph drawing for web navigation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">F</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 5th Int. Symp. on Graph Drawing (GD&apos;97)</title>
		<meeting>5th Int. Symp. on Graph Drawing (GD&apos;97)</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="330" to="335" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Navigating clustered graphs using forcedirected methods. Graph Algorithms and Applications: Special Issue on Selected Papers from</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Symp. Graph Drawing</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="157" to="181" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Orthogonal Graph Drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eiglsperger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Fekete</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Klau</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2001" />
			<publisher>Springer</publisher>
			<biblScope unit="page" from="121" to="171" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An efficient implementation of Sugiyama&apos;s algorithm for layered graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eiglsperger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Siebenhaller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kaufmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th Int. Symp. on Graph Drawing (GD&apos;04)</title>
		<meeting>12th Int. Symp. on Graph Drawing (GD&apos;04)</meeting>
		<imprint>
			<date type="published" when="2004" />
			<biblScope unit="volume">3383</biblScope>
			<biblScope unit="page" from="155" to="166" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Graph drawing in motion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Friedrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Graph Algorithms and Applications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="353" to="370" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Online dynamic graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Frishman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics/IEEE-VGTC Symp. on Visualization. Eurographics Association</title>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Graph drawing by forcedirected placement. Software -Practice and Experience</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">M J</forename><surname>Fruchterman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">M</forename><surname>Reingold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="1129" to="1164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Generalized fisheye views</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Furnas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of CHI&apos;86</title>
		<meeting>of CHI&apos;86</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1986" />
			<biblScope unit="page" from="16" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Topological fisheye views for visualizing large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>North</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOVIS &apos;04: Proc. IEEE Symp. on Information Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="175" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">MetaCrop-a detailed database of crop plant metabolism</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Grafahrend-Belau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Weise</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koschรผtzki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Scholz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">H</forename><surname>Junker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Schreiber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nucleic Acids Research</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="page" from="954" to="958" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Drawing large graphs with a potential-fieldbased multilevel algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hachul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jรผnger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 12th Int. Symp. on Graph Drawing (GD&apos;04)</title>
		<meeting>12th Int. Symp. on Graph Drawing (GD&apos;04)</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">3383</biblScope>
			<biblScope unit="page" from="285" to="295" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">An experimental comparison of fast algorithms for drawing general large graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hachul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jรผnger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Int. Symp. on Graph Drawing (GD&apos;05)</title>
		<meeting>13th Int. Symp. on Graph Drawing (GD&apos;05)</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="235" to="250" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Constrained graph layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Constraints</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="289" to="314" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Vizster: Visualizing online social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Boyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IN-FOVIS &apos;05: Proc. 2005 IEEE Symp. on Information Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Ace: A fast multiscale eigenvectors computation for drawing huge graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Koren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carmel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Harel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOVIS &apos;02: Proc. IEEE Symp. on Information Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page">137</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">A review and taxonomy of distortionoriented presentation techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">K</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Apperley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Computer-Human Interaction</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="126" to="160" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Layout adjustment and the mental map</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Misue</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sugiyama</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages and Computing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="183" to="210" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Online hierarchical graph drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Woodhull</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GD &apos;01: Revised Papers from the 9th Int. Symp. on Graph Drawing</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="232" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Balancing systematic and flexible exploration of social networks</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Perer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Trans. on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Spacetree: Supporting exploration in large node link tree, design evolution and empirical evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Plaisant</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Grosjean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Bederson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOVIS</title>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page">57</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Graph layout aesthetics in UML diagrams: User preferences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Purchase</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Allder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Carrington</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Graph Algorithms and Applications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="255" to="279" />
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">An interactive constraint-based system for drawing graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ryall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shieber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 10th Annual ACM Symp. on User Interface Software and Technology</title>
		<meeting>10th Annual ACM Symp. on User Interface Software and Technology</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="97" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Graphical fisheye views of graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Human Factors in Computing Systems, CHI&apos;92 Conference Proc.: Striking A Balance</title>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="83" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Methods for visual understanding of hierarchical system structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Sugiyama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Tagawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Toda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Systems, Man and Cybernetics (SMC)</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="109" to="125" />
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Tenenbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pollard</surname></persName>
		</author>
		<title level="m">Ordinary Differential Equations</title>
		<imprint>
			<publisher>Dover</publisher>
			<date type="published" when="1985" />
		</imprint>
	</monogr>
	<note>3rd edition</note>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Interactive visualization of small world graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">INFOVIS &apos;04: Proc. IEEE Symp. on Information Visualization</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="199" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Interacting with visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ware</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Information Visualization: Perception for Design</title>
		<imprint>
			<publisher>Elsevier</publisher>
			<date type="published" when="2004" />
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="317" to="350" />
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Incremental connector routing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wybrow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Stuckey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 13th Int. Symp. on Graph Drawing (GD&apos;05)</title>
		<meeting>13th Int. Symp. on Graph Drawing (GD&apos;05)</meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006" />
			<biblScope unit="volume">3843</biblScope>
			<biblScope unit="page" from="446" to="457" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
