<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SineStream: Improving the Readability of Streamgraphs by Minimizing Sine Illusion Effects</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chuan</forename><surname>Bu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Quanjie</forename><surname>Zhang</surname></persName>
							<email>zhangquanjie.cn@gmail.com</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qianwen</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Zhang</surname></persName>
							<email>zhangjian@sccas.cn</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Sedlmair</surname></persName>
							<email>michael.sedlmair@visus.uni-stuttgart.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><surname>Deussen</surname></persName>
							<email>oliver.deussen@uni-konstanz.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yunhai</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bartolomeo</forename><forename type="middle">&amp;</forename><surname>Hu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">C</forename><surname>Bu</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">Q</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">J</forename><surname>Zhang</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">M</forename><surname>Sedlmair</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">O</forename><surname>Deussen</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">•</forename><forename type="middle">Y</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Byron &amp; Wattenberg Turkey US</orgName>
								<address>
									<postCode>A2 B2</postCode>
									<country>Spain Italy Germany France UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">A1 SineStream</orgName>
								<address>
									<postCode>B3 A3</postCode>
									<country>France Turkey Iran Italy Spain Germany, UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<address>
									<country>Germany Spain Turkey Italy Iran US UK, France B1 Iran</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Shandong University</orgName>
								<address>
									<settlement>Qingdao</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="institution">HongKong University of Science and Technology</orgName>
								<address>
									<settlement>Hong Kong</settlement>
									<country key="CN">China</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="institution" key="instit1">VISUS</orgName>
								<orgName type="institution" key="instit2">University of Stuttgart</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="laboratory">and Shenzhen VisuCA Key Lab, SIAT</orgName>
								<orgName type="institution">Konstanz University</orgName>
								<address>
									<country>Germany, China</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">SineStream: Improving the Readability of Streamgraphs by Minimizing Sine Illusion Effects</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note type="submission">received xx xxx. 201x; accepted xx xxx. 201x.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:31+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"> <ref type="figure">Fig. 1</ref><p>. SineStream minimizes sine illusion effects stemming from strong slopes and improves the readability of streamgraphs by aligning the orthogonal and vertical orientations of each layer. We show the results on the COVID dataset <ref type="bibr" target="#b22">[23]</ref> (top) and the Bank Interest dataset <ref type="bibr" target="#b28">[30]</ref> (bottom). Sine illusions appear because the human eye is not able to accurately estimate the vertical distance between two curves with similar slopes. As indicated by the arrows on the top, our approach (A3, B3) better reflects the real thickness of layers (A2, B2) than previous works by Byron &amp; Wattenberg <ref type="bibr" target="#b3">[4]</ref> (A1) and Bartolomeo &amp; Hu <ref type="bibr" target="#b9">[10]</ref> (B1).</p><p>Abstract-In this paper, we propose SineStream, a new variant of streamgraphs that improves their readability by minimizing sine illusion effects. Such effects reflect the tendency of humans to take the orthogonal rather than the vertical distance between two curves as their distance. In SineStream, we connect the readability of streamgraphs with minimizing sine illusions and by doing so provide a perceptual foundation for their design. As the geometry of a streamgraph is controlled by its baseline (the bottom-most curve) and the ordering of the layers, we re-interpret baseline computation and layer ordering algorithms in terms of reducing sine illusion effects. For baseline computation, we improve previous methods by introducing a Gaussian weight to penalize layers with large thickness changes. For layer ordering, three design requirements are proposed and implemented through a hierarchical clustering algorithm. Quantitative experiments and user studies demonstrate that SineStream improves the readability and aesthetics of streamgraphs compared to state-of-the-art methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Index Terms-Streamgraphs, Sine Illusion, Readability</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Stacked graphs are a common visualization technique for displaying multiple time-series. In a stacked graph, the values of each time-series are represented by the thickness of a colored layer. Stacking these layers on top of each other allows to display the relative amount of each time-series as well as their total sum. In 2008 the New York Times published streamgraphs <ref type="bibr" target="#b3">[4]</ref>, a variant of stacked graphs with curved baseline, and immediately these graphs gained great popularity. Since then streamgraphs have been widely used for visualizing casual information <ref type="bibr" target="#b23">[24]</ref>, such as music listening histories <ref type="bibr" target="#b2">[3]</ref>, box office revenue of movies <ref type="bibr" target="#b3">[4]</ref>, and data from social media <ref type="bibr" target="#b25">[26]</ref>.</p><p>Stacking layers, however, inevitably introduces distortions, which affect the readability and aesthetics of the result. As a streamgraph is mainly controlled by its baseline (the bottom-most curve) and the ordering of layers, variants of streamgraphs have been proposed to reduce distortions by optimizing these two factors. For example, the above-mentioned streamgraphs <ref type="bibr" target="#b3">[4]</ref> minimize the "wiggle", the fluctuation of layers, resulting in a good compromise between aesthetics and readability. Their ordering, however, was specifically designed for displaying box office revenues of movies by using the "onset time" property, where the newly incoming layers are added at the top. To visualize more general data, Bartolomeo and Hu <ref type="bibr" target="#b9">[10]</ref> propose to incorporate baseline and ordering into an optimization framework combined with a refined wiggle measure. This allows to further reduce distortions. While many efforts have been made to improve their readability, the design of streamgraphs still lacks a clear perceptual foundation. Byron and Wattenberg <ref type="bibr" target="#b3">[4]</ref> speculate that the perception of such graphs is related to the principle of banking to 45 degrees <ref type="bibr" target="#b4">[5]</ref> but provide no detailed discussion.</p><p>One elementary task for a streamgraph is to show the thickness of layers over time. Its readability, however, is hampered by the difficulties of humans to accurately estimate and compare the vertical distance between two curves whose slopes have the same sign <ref type="bibr" target="#b5">[6]</ref>. As shown in <ref type="figure">Fig. 1</ref>, the human eye fails to perceive the actual thickness of layers, when they are slanted too much (A1, B1). This phenomenon also manifests in classical visualizations such as Playfair's trade-balance chart <ref type="bibr" target="#b21">[22]</ref>. Recently, VanderPlas and Hofmann <ref type="bibr" target="#b30">[32]</ref> related this phenomenon to the sine illusion <ref type="bibr" target="#b8">[9]</ref> and provided a perceptual explanation: our brain prefers to take the orthogonal distance rather than the vertical extent distance as the distance between two curves. This illusion is most prominent when the angle between the two orientations is large. Since one elementary task in reading stacked graphs (and streamgraphs) is to compare the thickness of layers (the vertical distance between the bottom and top curve), we were motivated to investigate the connection between sine illusion and streamgraphs; and we wanted to exploit the sine illusion to improve the readability of streamgraphs.</p><p>In this paper, we propose to use SineStreams, a variant of streamgraphs that minimizes such illusions. Therefore we revisit the mathematical model of streamgraph optimization and interpret it in terms of reducing sine illusions. This requires the slope of each layer to be close to zero as much as possible. We show that minimizing the sine illusion is equivalent to the original objective of optimizing streamgraphs, which is minimizing the sum of the squared slopes of all layers. However, to reduce the illusion over several layers stacked on top of each other, we additionally introduce a Gaussian weight to penalize layers with large variations and reduce the distortion imposed on other layers. Since a flat baseline allows viewers to read the total sum easily, we tried to order layers in a way that neighboring layers mutually cancel out their distortions to the greatest possible extent.</p><p>To arrive at an effective ordering, we propose a compensation degree measure, which tells us how well two layers would cancel out their wiggles. We combine this measure with the thickness and length of the layers, resulting in a pairwise distance measure between them. Based on this distance measure, we apply hierarchical clustering <ref type="bibr" target="#b16">[17]</ref> to construct a binary tree representation for all layers. We compute the final ordering from this tree by minimizing the sum of distances between adjacent layers with a leaf ordering algorithm <ref type="bibr" target="#b0">[1]</ref>. Once the ordering is obtained, we compute the baseline by improving Byron and Wattenbergs <ref type="bibr" target="#b3">[4]</ref> method using a Gaussian weight.</p><p>We demonstrate the effectiveness of SineStreams by quantitatively comparing them with other streamgraphs w.r.t. reducing wiggles and sine illusion effects. In addition, conduct a user study to asses the readability and aesthetics of SineStream by following the task design of Thudt et al. <ref type="bibr" target="#b29">[31]</ref>. The results demonstrate that SineStreams offer an improved readability and aesthetics. The source code is available for download on GitHub <ref type="bibr" target="#b0">1</ref> . In summary, the main contributions of this paper are:</p><p>• we revisit streamgraphs and show that their baseline computation and layer ordering can be re-formulated in terms of minimizing the sine illusion effect (Sect. 3); • we introduce three design requirements for ordering layers in a SineStream and propose an effective ordering algorithm (Sect. 4); • we quantitatively compare SineStreams to state-of-the-art methods and conduct user studies to show the effectiveness of our approach (Sect. 5).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>The use of streamgraphs can be traced back at least to Playfair's tradebalance chart of 1786 <ref type="bibr" target="#b21">[22]</ref>. Later on, increased computing power enabled users to create stacked graphs that incorporate large numbers of time-series, as well as creating variants with different appeals. When the design of streamgraphs was first discussed in The-meRiver <ref type="bibr" target="#b14">[15]</ref>, the authors introduced a baseline algorithm that produced a result symmetrical along the direction of the timeline. No specific ordering algorithm was proposed here, even though the authors mention the possibility of putting related layers close to each other. Because in a ThemeRiver layers are stacked upwards and downwards from the baseline, its outer layers are less distorted than the outer layers of the original stacked graphs and therefore it displays a higher readability and aesthetic appeal.</p><p>As mentioned above, Streamgraphs <ref type="bibr" target="#b3">[4]</ref>, a stacked graph with a curved baseline, are a variant of stacked graphs that is a widely-used visualization technique for displaying multiple time-series. The authors propose a baseline algorithm that reduced the distortion of each layer, thus further improving the readability with regard to ThemeRiver. By finding a baseline that minimizes the distortions of the layers, streamgraphs enable the user to easily read the thickness of each layer at the cost of perceiving the overall thickness of the whole graph less well. The authors discuss a set of distortion functions for baseline optimization, including silhouette, deviation, wiggle, and weighted wiggle. They conclude that weighted wiggle leads to the best balance between readability and aesthetics. An ordering algorithm was developed specifically for visualizing the box office revenues of movies. Since such revenues usually have a sudden increase and then a rapid decrease, the authors ordered the layers based on their "on-set" time so that layers with the biggest bursts are put at the outside of the graph and do not influence the layout of other layers. The authors also discuss the possibility of designing an ordering algorithm that allows to minimize the distortion function, but leave that as a promising direction for future research.</p><p>Since the "on-set" ordering was tailored for displaying box office revenues, Bartolomeo and Hu <ref type="bibr" target="#b9">[10]</ref> propose a new ordering algorithm, aiming to generalize streamgraphs to other types of data. Their ordering algorithm first generates an initial ordering in a greedy manner, and then iteratively refines the ordering to minimize the distortion value. This ordering scheme not only generalizes streamgraphs for more than box office revenues, but also further improves the readability of streamgraphs. For baseline optimization, the authors present an alternative definition of the wiggle distortion function based on the L1-norm, which allows to reduce distortions caused by sudden jumps in time-series.</p><p>Apart from optimizing baseline and ordering, interaction can also improve the readability of streamgraphs. TouchWave <ref type="bibr" target="#b1">[2]</ref> introduces interactive layout adjustments and data queries to streamgraphs, aiming to mitigate perceptual issues and improve readability. Thudt et al. <ref type="bibr" target="#b29">[31]</ref> propose an interactive baseline straightening for streamgraphs to improve the readability of a selected layer. By clicking on one individual layer, the baseline of this layer is straightened so that the thickness can be easily observed without distortion. Even though this is an effective operation, these interactions can not be applied to a wide range of statistic visualizations (e.g., posters), where optimizing the baseline and ordering is still the only solution to improve the readability.</p><p>In spite of these optimizations, streamgraphs still face considerable problems for their readability. Studies have been conducted to better examine the graphical perception of streamgraphs. In his blog post, Kirk <ref type="bibr" target="#b18">[19]</ref> reviewed a set of streamgraphs published on the web, investigated their usage scenarios, and compared their design trade-offs. He concluded that a streamgraph is "a fantastic solution to displaying large datasets to a mass audience". A user study conducted by Thudt et al. <ref type="bibr" target="#b29">[31]</ref> validated the effectiveness of these optimizations and interactions in improving the readability of streamgraphs. The authors compare the relative readability among different variants of streamgraphs with 16 participants in four types of tasks. The results show that baseline optimization improves the readability for value comparison tasks.</p><p>A number of applications for streamgraphs in formal visual analysis emerged recently, especially, but not exclusively, in the field of visual text analysis. In these applications, such graphs have been proposed to visualize complex relationships in time-series, such as merging and splitting of layers <ref type="bibr" target="#b6">[7]</ref>, their hierarchical structures <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b10">11]</ref>, and the competition among layers <ref type="bibr" target="#b25">[26,</ref><ref type="bibr" target="#b32">34]</ref>. Even though new ordering and baseline algorithms are proposed in these applications, they mainly aim to adapt streamgraphs to specific domain problems or scenarios, rather than addressing key perceptual issues. For example, Topic Streams <ref type="bibr" target="#b12">[13]</ref> visualize online conversations about large-scale events using modified streamgraphs. Layers are ordered here based on a global measure of the novelty of a topic, which is similar to the "on-set" ordering proposed in <ref type="bibr" target="#b3">[4]</ref>. Tiara <ref type="bibr" target="#b19">[20]</ref> adds word clouds inside layers of streamgraphs to show visual summarizations of large collections of text. In Tiara, layers are ordered based on several constraints, including semantic similarity among topics and their starting time. These applications demonstrate the usefulness of streamgraphs in formal analysis, but paid little attention to address key perceptual issues involved in this form of visualization.</p><p>In sum, while various baseline and ordering optimizations as well as interactions have effectively improved the readability of streamgraphs, these optimizations are mainly based on empirical observations. The design of such graphs still lacks a solid conceptual foundation. In this study, we revisit the optimization goal of streamgraphs and interpret it in terms of the sine illusion effect. New algorithms are proposed to improve the readability of streamgraphs by minimizing sine illusions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SINE ILLUSION IN STREAMGRAPHS</head><p>In this section, we introduce basic concepts of streamgraphs and afterwards connect them to the sine illusion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Streamgraphs</head><p>Unlike traditional stacked charts, which plot values along a straight x-axis, the layers of a streamgraph are stacked upon a curved baseline, thus resembling natural streams, which leads to an aesthetically pleasing effect. The geometry of a streamgraph is determined by two factors: the order of the layers and the shape of the baseline. In a typical algorithmic pipeline to construct a streamgraph, we first order the layers, then compute the shape of the baseline, upon which the ordered layers are stacked. Following the notation of previous studies, the time-series that form a streamgraph are modeled as lists of n real-valued, non-negative, differentiable functions [ f 1 , ..., f n ] that determine the thickness of each layer. This assumption is satisfied in many real world datasets and widely used in previous data analyses <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b9">10]</ref>. For simplicity, we assume that the order of the list of time series indicates the order of the layers in the streamgraph. Its baseline is denoted as g 0 and describes the y-coordinate of the bottom. Therefore, the top of the i th layer can be expressed as</p><formula xml:id="formula_0">g i = g 0 + ∑ i j=1 f j .</formula><p>In pursuit of producing an aesthetic and legible streamgraph, different baseline and ordering algorithms have been proposed. The core of these algorithms is to optimize a metric that quantifies the quality of a streamgraph, i.e., "what is the definition of a good streamgraph?" A set of metrics, including silhouette, deviation, wiggle, have been proposed <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b14">15]</ref>. Among these metrics the wiggle metric, which describes the distortion of layers, leads to the best balance between readability and aesthetics <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b29">31]</ref>. There are two common definitions of the wiggle metric. Byron and Wattenberg <ref type="bibr" target="#b3">[4]</ref> defined it as</p><formula xml:id="formula_1">Wiggle = n ∑ i=1 ( 1 2 (g i + g i−1 )) 2 • w i (1)</formula><p>where g is the derivative of g and w i is a positive weight for each layer. Bartolomeo and Hu <ref type="bibr" target="#b9">[10]</ref> criticize that this definition only works for smooth time-series, i.e., time-series whose values do not change dramatically over time. To tackle this issue, they proposed an alternative definition of the wiggle metric based on the L1-norm:</p><formula xml:id="formula_2">Wiggle n1 = n ∑ i=1 |g i | + |g i−1 | 2 • w i<label>(2)</label></formula><p>Ordering and baseline algorithms proposed by Bartolomeo and Hu <ref type="bibr" target="#b9">[10]</ref> are considered as the state of the art for streamgraph production. However, even though it is widely used, using the wiggle metric to optimize a streamgraph layout is mainly based on empirical observation and lacks a clear perception foundation. This is why we want to introduce the sine illusion at this point.  with uniform thickness is drawn along a sinusoidal curve. Perception leads us to using the orthogonal distance rather than the vertical distance to determine its thickness. (b) The green layer with dotted border in the streamgraph seems to have a constant thickness. However, a peak occurs in its vertical thickness (c).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">From Wiggles to the Sine Illusion</head><p>The sine illusion reflects the difficulty humans have in visually measuring the distance between two curves. In the cognitive literature, the sine illusion was first documented in the context of sinusoidal curves <ref type="bibr" target="#b8">[9]</ref>. In <ref type="figure" target="#fig_1">Fig. 2</ref>(a), a line with uniform thickness is centered along a sinusoidal curve. All line segments are of equal length (dashed lines) but viewers have the illusion that the line thickness varies along the curve.</p><p>The sine illusion is not restricted to sinusoidal curves. It has been reported and discussed extensively for other curves in the cognition literature but also in graphics <ref type="bibr" target="#b5">[6]</ref>. The strength of the sine illusion is influenced by two factors: the slope of the curve and the distance between the two borders of the curve <ref type="bibr" target="#b30">[32]</ref>. Increasing the slope, or decreasing the vertical distance leads to an increase of the sine illusion.</p><p>The illusion originates from our preference in evaluating the curve width as an orthogonal width rather than the difference along the vertical axis ( <ref type="figure" target="#fig_1">Fig. 2(a)</ref>). This preference is based on our perceptual experience with the surrounding three-dimensional world: tilting an object does not change its orthogonal width. Misapplying this preference to twodimensional charts leads to the sine illusion. Therefore, minimizing sine illusion requires orthogonal and vertical orientations to be aligned as much as possible. In other words, the slope of each layer should be as close to zero as possible.</p><p>Streamgraphs, consisting of many layers with curved boundaries (g 0 , g 1 ,...g n ), commonly produce sine illusions for the above reason. As shown in <ref type="figure" target="#fig_1">Fig. 2</ref>, the peak in the data (c) is barely visible in the layer of the streamgraph shown in (b). Thus, viewers can easily be misled by their visual perception and obtain a wrong understanding of the underlying data. Since an elementary task for understanding streamgraphs is to read and compare the thickness of layers, the sine illusion dramatically threatens their readability. It is therefore natural to measure the quality of a streamgraph in terms of the sine illusion, which can provide a solid perceptional foundation for their design.</p><p>As mentioned above, to minimize the effect of the sine illusion in streamgraphs, the slope of each layer 1 2 |g i + g i−1 | needs to be minimized. Interestingly, the wiggle based optimization (Eq. 1) can therefore be reinterpreted from the perspective of reducing the sine illusion:</p><formula xml:id="formula_3">Illusion = Wiggle = n ∑ i=1 ( 1 2 (g i + g i−1 )) 2 • w i = n ∑ i=1 (g 0 + 1 2 f i + i−1 ∑ j=1 f j ) 2 • w i (3)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SINESTREAM</head><p>Even though Byron and Wattenberg <ref type="bibr" target="#b3">[4]</ref> unintentionally reduced the sine illusion with minimizing their wiggle value during baseline optimization, they did not take the sine illusion into account when ordering the layers. Therefore, in the obtained streamgraphs the illusion was not minimized. Moreover, the authors choose an inappropriate weight w i = f i in their optimization that ignored the stronger sine illusion for thin layers. As shown in Eq. 3, the corresponding distraction of a streamgraph is determined by both g 0 and the order of</p><formula xml:id="formula_4">[ f 1 , f 2 ,..., f n ].</formula><p>SineStreams (Sine Illusion Minimized Streamgraphs), therefore aim to minimize the sine illusion in streamgraphs by using a refined baseline computation and an optimization algorithm for ordering layers appropriately.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Baseline Optimization</head><p>As shown in Eq. 3, the sine illusion is a function of g 0 and can be minimized when g 0 is properly chosen. As the w i are positive, we can get ∂ 2 Illusion ∂ 2 (g 0 ) = ∑ n i=1 2w i &gt; 0 and minimize the sine illusion when ∂ Illusion ∂ (g 0 ) = 0. Therefore, we share the solution of g 0 with Byron and Wattenberg <ref type="bibr" target="#b3">[4]</ref>, since their choice of g 0 simultaneously minimizes the value of the L2-norm-based wiggle measure in Eq. 1 and the value of  <ref type="bibr" target="#b9">[10]</ref> prefer a single distortion of a large layer rather than two smaller ones, which also leads to a larger illlusions.</p><p>sine illusion in Eq. 3:</p><formula xml:id="formula_5">g 0 = − 1 ∑ n i=1 w i n ∑ i=0 1 2 ( i ∑ j=1 f j + i−1 ∑ j=1 f j )w i = − ∑ n i=1 w i ( f 1 + ∑ i−1 j=1 ( f j + f j+1 )) 2 ∑ n i=1 w i<label>(4)</label></formula><p>This choice of g 0 has been widely been used since it was proposed, but recently it was challenged by Bartolomeo and Hu <ref type="bibr" target="#b9">[10]</ref>, who claimed that an L2-norm-based optimization only works well for relatively smooth time-series. Limits of Existing Techniques. According to Bartolomeo and Hu <ref type="bibr" target="#b9">[10]</ref>, an L2-norm-based optimization will lead to two main problems: a) it encourages [g i , g i−1 ] with equal absolute values and opposite signs, regardless of the increased distortion this might cause to other layers; b) it leads to unpleasant distortions when layers have sudden and big changes in thickness (i.e., data jumps). To eliminate these two issues, Bartolomeo and Hu propose an alternative L1-norm-based baseline optimization (Eq. 2).</p><p>Even though these two shortcomings do exist in Byron and Wattenbergs L2-norm-based optimization, we find that Bartolomeo and Hu's criticism is not accurate, since such unpleasant distortions are mainly caused by inappropriately chosen weights w i = f i instead of the L2-norm-based definition. In other words, the distortion of thinner layers is treated as less important than the one of the thicker layers during baseline optimization.</p><p>As shown in <ref type="figure" target="#fig_1">Fig. 2(a)</ref>, the thickness f i of the light green layers grows, which leads to a large weight w i = f i . Therefore, the L2-norm-based wiggle value of the thick layer is reduced to a great extent even though this significantly increases the 2-norm wiggle value of the two thin layers (dark green and dark blue). The same goes for the distortions caused by data jumps <ref type="figure" target="#fig_2">(Fig. 3(b)</ref>). If less weight is given to layers when they have a sudden data jump, i.e., the start of the dark green and the light green layer, the distortion of the other layers can be minimized during baseline optimization.</p><p>More importantly, an L1-norm-based optimization, even though solving the aforementioned two shortcomings, potentially introduces severe distortions and increases the effect of the sine illusion, as shown in <ref type="figure" target="#fig_2">Fig. 3(c)</ref>. Compared to the L2-norm-based optimization, it prefers a large distortion over several small ones. Thus, the baseline optimization by Bartolomeo and Hu increases the slope of the dark blue and the dark green layer. Since the sine illusion increases with the slope of the curves, an L1-norm-based optimization results in stronger illusions.</p><p>Gaussian Weight for Baseline Optimization. To solve these issues with existing techniques, we propose to use a modified weighting scheme for the baseline optimization in SineStreams. First, we propse to use the L2-norm, rather than the L1-norm as it allows to measure the effect of the sine illusion and avoids big slopes that might be introduced by the L1-norm ( <ref type="figure" target="#fig_2">Fig. 3(c)</ref>). We modify the original weight w i = f i by a Gaussian weight to reduce the influence of a layer when its thickness undergoes big changes:</p><formula xml:id="formula_6">w i = exp(− f i 2 2c</formula><p>2 ) • f i where c can be either the median, arithmetic mean, harmonic mean, or geometric mean of the | f 1 |, | f 2 |,...,| f n |. By adjusting the weight with the change of the thickness, streams with large fluctuations are penalized so that the ones with small fluctuations will have lower slopes ( <ref type="figure" target="#fig_2">Fig. 3(a)</ref>). In doing so, streams with large fluctuations can be perceived more easily. Based on our experiments, we choose to set c to be the median. When c = 0, we define w i = f i .</p><p>When the weight of a layer f i is lowered according to this formula, its neighboring layers gain a relatively larger weight and thus distortions caused by f i can be removed more effectively during baseline optimization. As shown in <ref type="figure" target="#fig_2">Fig. 3(a)</ref>, the dark blue and the dark green layers suffer from distortions caused by the thickness change of the light green layer. Our Gaussian weight increases their relative importance, thus flatting these two layers during baseline optimization and reducing the effect of the sine illusion. The same goes for <ref type="figure" target="#fig_2">Fig. 3(b)</ref>. At the beginning, the dark green and light green layers have a sudden thickness change and accordingly introduce distortions to the neighboring layers. By reducing the weights of these two layers at their start time, the Gaussian weight effectively removes the distortions of the neighboring layers.</p><p>Meanwhile, using a Gaussian weight also increases the relative weight of thin vs. thick layers. In real word datasets, a layer with large thickness changes f i is usually a thick layer. The term exp(− f i 2 /2c 2 ) is a monotonously decreasing function of f i and thus increases the relative weight of thin layers. As a result, our baseline optimization pays more attention to reducing the distortions of thinner layers. As the effect of the sine illusion increases with decreasing vertical distance between curves <ref type="bibr" target="#b30">[32]</ref>, a Gaussian weight helps minimizing the total amount of sine illusion in a SineStream. It is determined by the following function:</p><formula xml:id="formula_7">Illusion = n ∑ i=1 ( 1 2 (g i + g i−1 )) 2 • exp(− f i 2 2c 2 ) • f i<label>(5)</label></formula><p>As shown in <ref type="figure" target="#fig_3">Fig. 4</ref>, using the same ordering, the method of baseline optimization substantially influences the quality of the resulting streamgraph. Our proposed baseline optimization leads to the most satisfying layout.   <ref type="bibr" target="#b26">[28]</ref>, produced using the method of <ref type="bibr" target="#b3">[4]</ref>. A dramatic difference exists between the perceived thickness of the streamgraph and the actual thickness perceived with a flat baseline.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Optimizing the Layer Order</head><p>In streamgraphs, layers are stacked on top of each other. In some cases, they have a semantically intrinsic order, e.g., alphabetical <ref type="bibr" target="#b31">[33]</ref>. But in all other cases, layers can be reordered to enhance the readability.</p><p>Limits of Existing Techniques. Two main techniques exist for the ordering in streamgraphs: 1) LateOnset ordering <ref type="bibr" target="#b3">[4]</ref>; 2) TwoOpt  <ref type="figure">6</ref>. Examples about how the thickness weight and length weight help improve layer ordering. In the distance graph, each node represents a layer and the number on the edge indicates the distance value dist(i, j) between the two layers. Layers with low distances values (red edges) are put together in the streamgraph. For reducing the sine illustion effect, the thickness weight helps moving thin layers to the middle (a) while the length weight helps moving short layers to the outside (b).</p><formula xml:id="formula_8">dist(i, j)=comp(i, j) b a dist(i, j)=comp(i, j)•wlen(i, j) dist(i, j)=comp(i, j)•wth(i, j) Fig.</formula><p>ordering <ref type="bibr" target="#b9">[10]</ref>. Other ordering implementations are mainly based on modifications of these two techniques <ref type="bibr" target="#b12">[13,</ref><ref type="bibr" target="#b19">20]</ref>.</p><p>As mentioned above, LateOnset ordering was specifically tailored for displaying trends within box office revenues of movies in streamgraphs. In this ordering, layers are first sorted by their "on-set" time. Then the layers are stacked alternatively on either the bottom or the top of the existing streamgraph in order to achieve an even visual effect. The main purpose of LateOnset ordering is to pursue a better aesthetic appeal when displaying the revenues, which typically have a sudden increase and then decrease over time. LateOnset ordering can effectively move the maximum "burst" of each layer to the outside of the graph and thus achieves a smooth layout. While this leads to a smooth streamgraph that is visually pleasing, it tends to place layers on slanted edges, thus potentially introducing severe sine illusion effects, as shown in <ref type="figure" target="#fig_5">Fig. 5</ref>. Moreover, it is difficult to apply this algorithm to general time-series, for example when all time-series in a dataset have the same start time.</p><p>Contrary to LateOnset, TwoOpt ordering is designed for general time series. In TwoOpt ordering, an initial ordering is obtained by sorting all layers in a greedy manner. At each time step, a layer that introduces the lowest wiggle value to the streamgraph is selected and stacked on the graphs. Then, the initial ordering is iteratively refined by swapping adjacent layers if the swapping reduces the wiggle value. Swapping stops after a given number of iterations. Such iterative swapping is able to cancel out the total wiggle value of neighboring layers. This idea is already discussed in <ref type="bibr" target="#b3">[4]</ref>, but left to future work.</p><p>While successfully allowing streamgraphs to be applied to general time series, TwoOpt has several limits. First, being a greedy strategy, TwoOpt cannot always produce the same ordering. The method requires users to define the number of swapping operations and can generate different layer orderings for the same set of input data. During the refinement, iterative swapping also only considers canceling out the wiggle values of the two neighboring layers, wiggle canceling through merging more than two layers is not discussed. Moreover, TwoOpt ordering also suffers from inappropriate weights w i = f i , which give higher priority to reducing the wiggle of thick layers, as discussed above. As a result, during optimization thick layers are more likely to be put in the middle of a streamgraph, where layers are flatted and have small distortions. But as thick layers in practice tend to have larger thickness changes than thin layers, putting them in the middle introduces more distortions to the neighboring layers and the overall visualization. For example, in <ref type="figure" target="#fig_7">Fig. 8(b)</ref>, the thickest layer (6) in light green is put to the middle of the streamgraph. Its thickness changes will distort all neighboring layers.</p><p>Design Considerations for Layer Ordering. In SineStreams, we try to avoid thickness changes and examine layer ordering from the perspective of reducing sine illusions. We propose an ordering algorithm based on hierarchical clustering to produce a layer ordering that is better than the results of greedy neighbor swapping.</p><p>In the original streamgraph algorithm, the ordering of layers not only influences the sine illusion for individual layers (whose sum is represented by Eq. 3) but also the readability of the whole stream, which is related to the value of g 0 . As shown in Eq. 4, the solution of g 0 can be re-formulated as the sum of differences between the slopes of every two adjacent layers f i + f i−1 .</p><p>It has been reported that a flat baseline can help alleviating sine illusions for the whole stream <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b5">6]</ref> and increase its aesthetic quality <ref type="bibr" target="#b29">[31]</ref>. This observation motivates us to order layers in a way that neighboring layers mutually compensate their thickness changes. In other words, the absolute value of f i + f i−1 should be minimized to ensure an as-flat-as-possible baseline g 0 . We define the compensation degree comp(i, j) to describe the mutual compensation for every two layers f i , f j as:</p><formula xml:id="formula_9">comp(i, j) = 1 L T ∑ t=0 | f i (t) + f j (t)| | f i (t)| + | f j (t)|<label>(6)</label></formula><p>where L indicates the length of the combined layer. We define</p><formula xml:id="formula_10">| f i (t)+ f j (t)| | f i (t)|+| f j (t)| = 0 when | f i (t)| + | f j (t)| = 0.</formula><p>Apart from the amount of compensation, thickness and length of layers have also to be considered when ordering them. Since the sine illusion increases with decreasing vertical distance between curves <ref type="bibr" target="#b30">[32]</ref>, it is better to merge a pair of thinner layers if two pairs of layers have similar compensation degrees. The rationale behind this is that, compared to thicker layers with the same compensation degree, thinner layers have fewer changes in their thickness, and therefore introduce fewer distortions to their neighboring layers, and thus should be given higher priority during merging.</p><p>We introduce a thickness weight to describe our preference for the compensation of relatively thinner layers:</p><formula xml:id="formula_11">w th (i, j) = max{ f i (t) + f j (t) : t ∈ [1, m]}</formula><p>where f i (t) denotes the value of f i at the time point t and m indicates the number of time points. Apart from computing the maximum, we experimented with different functions for computing the thickness weight, including arithmetic mean, harmonic mean and geometric mean. The maximum, however, lead to the best results in our experiments.</p><p>Meanwhile, we observed that the merging of shorter layers will create a slanted baseline for the later merging of longer layers, but not the other way round <ref type="figure">(Fig. 6(b)</ref>). Since a slanted baseline will enhance sine illusions within surrounding layers, we give priority to the merging of longer layers if two pairs of layers have similar amounts of compensation. We use a length weight to describe our preference for the compensation of relatively longer layers:</p><formula xml:id="formula_12">w len (i, j) = max( m L i , m L j )</formula><p>where L i is the length of layer f i . Sometimes, a layer can be too thin to be observed. Therefore, when calculating the length of a layer, we only consider their parts with a thickness exceeding a threshold value (1/9 of the maximum thickness of each layer based on our experiments). <ref type="figure">Fig. 6</ref> gives examples about how thickness weight and length weight can help improving layer ordering. Each node represents a layer and the number of an edge indicates the distance dist(i, j) between the corresponding two layers f i , f j . Layer ordering is now obtained by minimizing the distance between neighboring layers. By adding w th to the distance function (a), the layer ordering tends to place thinner layers in the middle. By adding w len to the distance function (b), layer ordering is prone to place short layers on the outside.</p><p>So far, we have translated the three design considerations, compensation, thickness, and length, into a quantitative form. Within our optimization we multiply the corresponding values to get a distance function that reflects the relative importance of putting two layers together.</p><formula xml:id="formula_13">dist(i, j) = comp(i, j) • w len (i, j) • w th (i, j)<label>(7)</label></formula><p>The smaller dist(i, j), the higher the priority that should be given to ensure that layer f i and layer f j are adjacent to each other.</p><p>Hierarchical-Clustering-Based Ordering. We employ a hierarchical clustering algorithm <ref type="bibr" target="#b16">[17]</ref> for layer ordering, see <ref type="figure" target="#fig_6">Fig. 7</ref> At each time step (numbered in the blue circle), the two layers f i , f j with the shortest distance are merged to obtain a new combined layer f k = { f i + f j }. We then calculate the distances between this new layer f k and all other layers, and repeat merging (see <ref type="figure" target="#fig_6">Fig. 7(a)</ref>). Once the clustering is done, a hierarchical clustering tree is formed (see <ref type="figure" target="#fig_6">Fig. 7(b)</ref>), however, multiple orderings among layers can be generated by flipping internal nodes in this tree. Some orderings, however, might result in large sine illusions, see the red layer of the top streamgraph in <ref type="figure" target="#fig_6">Fig. 7(b)</ref>.</p><p>To guarantee an ordering that minimizes sine illusions, we create the final order by minimizing the sum of distances between adjacent layers:</p><formula xml:id="formula_14">arg min n−1 ∑ i=1 dist(i, i + 1)<label>(8)</label></formula><p>where the i th and i + 1th layers correspond to two adjacent leaf nodes of the hierarchical clustering tree. An leaf ordering algorithm <ref type="bibr" target="#b0">[1]</ref> is used to quickly obtain this final order. Most layers have smaller slopes in <ref type="figure" target="#fig_6">Fig. 7</ref>(c) than in <ref type="figure" target="#fig_6">Fig. 7(b)</ref>. It is worth noting that our goal is not to find the ordering that minimizes the sum of distances of adjacent layers but to enforce a compensation-based ordering. A comparison of different ordering algorithms is illustrated in <ref type="figure" target="#fig_7">Fig. 8</ref>. Using LateOnset, layers are added to the streamgraph based on their start time. New layers (e.g., Layer 2 in Pink) are usually put on a slanted baseline, which introduces distortions and sine illusion effects to these new layers. TwoOpt tends to put thick layers (Layer 6 in Light Green) in the middle, resulting in large distortions and strong sine illusion effects at the neighboring layers. Compared to LateOnset and TwoOpt, our ordering algorithm (c) leads to a visually pleasing streamgraph. Orthogonal and vertical orientations are aligned in most layers, thus sine illusions are minimized. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Time Complexity</head><p>SineStream has a comparable time complexity to previous methods. The following discussion assumes that each of the n time-series has m time points, i.e., the total data size is nm. Like the baseline optimization proposed by Byron et al. <ref type="bibr" target="#b3">[4]</ref> and Batholomeo et al. <ref type="bibr" target="#b9">[10]</ref>, our baseline optimization has a time complexity of O(nm). For each of the m time points it needs O(n) steps to calculate g 0 in Eq. 4.</p><p>The ordering optimization in SineStream consists of four parts: computing the compensation degree, length weight, and thickness weight as well as the hierarchical clustering. Calculating the first three parts requires going through all m time points, resulting in a time complexity of O(m). The original hierarchical clustering proposed by Johnson <ref type="bibr" target="#b16">[17]</ref> has a time complexity of O(n 3 ). Therefore, the total time complexity of ordering would be O(n 3 m). However, the hierarchical clustering can be improved to O(n 2 ) using the methods presented in <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b33">35]</ref>. In other words, the total time complexity of the ordering can be reduced to O(n 2 m), but in practice n will not be a large number, typically below 20.</p><p>LateOnset has a time complexity of O(mn + n log n). Layers are first sorted based on their "on-set" time (O(n log n)) and then added to the graph to balance the "weight" for summing up the whole time series (O(mn)). LateOnset has a lower time complexity than SineStream, but has an inferior performance for reducing sine illusions, see <ref type="figure" target="#fig_2">Fig. 3</ref>.</p><p>The time complexity of TwoOpt is O(r(n + snm + nm)), where s and r are custom parameters: s denotes the scanning time and r the time needed for iterative refinement. In practice, we set s = n, which leads to a time complexity of O(rn 2 m). The value of r depends on the data properties, therefore the optimal setting varies from dataset to dataset. In sum, our ordering algorithm is not slower than TwoOpt , while significantly reducing the sine illusion effects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EVALUATION</head><p>In this section, we compare SineStream with other existing streamgraph algorithms, first through quantitative measures and then through a controlled user study. Note that we only focus on streamgraphs in this evaluation. The comparison between streamgraphs and other multiple time-series visualizations is beyond the scope of this study. We refer the interested reader to Javed et al. <ref type="bibr" target="#b15">[16]</ref> for more details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Quantitative Evaluation</head><p>Experimental Design. We evaluated the effectiveness of the algorithms (LateOnset <ref type="bibr" target="#b3">[4]</ref>, TwoOpt <ref type="bibr" target="#b9">[10]</ref>, and Ours) in reducing layer distortion through three numerical metrics: the L2-norm wiggle defined in Eq. 1, the L1-norm wiggle defined in Eq. 2, and the sine illusion defined in Eq. 5. Since ordering algorithms are not specifically designed for certain baselines, we computed three baselines for each ordering algorithm and recorded the respective metric value for each baseline, generating 3 values for each ordering, that is, 3 × 3 combinations in total.</p><p>To achieve a comprehensive assessment, we collected 36 real world datasets from a variety of data sources:</p><p>• Agriculture statistics provided by the Food and Agriculture Organization of the United Nations <ref type="bibr" target="#b13">[14]</ref>. • GDP and population statistics provided by the National Bureau of Statistics of China [21] • Finance statistics provided by the World Bank <ref type="bibr" target="#b28">[30]</ref> • Disease statistics provided by the World Health Organization <ref type="bibr">[27]</ref> • Sports statistics provided by Sports-Reference.com <ref type="bibr" target="#b24">[25]</ref> For each dataset, we selected multiple time-series with a varying number of layers and time points, m ranging from 12 to 265 and n ranging from 6 to 35. For each dataset, the metric value was first calculated for each time point, then summed over time, and finally normalized to [0, 1]. We then ordered the layers in streamgraphs using the three methods LateOnset, TwoOpt, and our algorithm. Then, for each ordering, we computed baselines that optimize the L1-norm wiggle, L2-norm wiggle and the sine illusion. Since TwoOpt is not a deterministic algorithm, we calculated average metric values after running the ordering process 20 times, following the practices of the original paper <ref type="bibr" target="#b9">[10]</ref>. In this experiment, all algorithms were implemented in Javascript using Node.js and all experiments were executed on a computer with an i5-3320 core, 8G RAM and Windows 10 operating system. Results. <ref type="figure" target="#fig_8">Fig. 9</ref> summarizes the results of the quantitative evaluation. Except computation time, all values were normalized to the range of [0, 1]. The lower the values, the better the performance of an algorithm. We used a violin plot to show the distribution of the results. The white dot in the middle indicates the median value and the black bar represents the interquartile range. The width of the curved shape corresponds to the approximate frequency of data points in each region. The streamgraph layouts of all 36 datasets, computed with the three algorithms (LateOnset, TwoOpt and Ours), together with their respective metric values, are provided in the supplementary material. For all three metrics, TwoOpt and SineStream clearly outperform LateOnset. This scenario was expected since LateOnset is designed specifically for box office revenues and does not perform well for general time series.</p><p>Our algorithm outperforms TwoOpt for all three metrics. For the L2norm wiggle measure, the median values of our algorithm and TwoOpt are zero. For the L1-norm wiggle and the sine illusion measure, the median values of TwoOpt are slightly higher than that of our algorithms (L1-norm wiggle: 0.117 vs. 0, sine illusion: 0.023 vs. 0). In terms of value distribution, our algorithm led to a more concentrated distribution than TwoOpt for all three metrics. This is caused by the fact that TwoOpt is not a deterministic algorithm. Sometimes it produces unsatisfactory orderings that lead to large values for all three metrics.</p><p>The time complexity of the three algorithms has already been discussed in Sect. 4.3. The time complexity of LateOnset is O(mn + n log n), for TwoOpt it is O(rn 2 m), and for our algorithm O(n 3 m). We employed the default setting for the source code of TwoOpt and set s = n, r = 5 in this experiment. LateOnset has, as expected, the lowest computation time, but at the cost of increasing layer distortions. With a small mean value and a more concentrated distribution, our algorithm is more efficient than TwoOpt, but all three algorithms are able to compute reasonable streamgraphs within less than 20ms, allowing interactive computation rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">User Study</head><p>We conducted a user study to compare the readability of SineStream with other variants of streamgraphs. The design and analysis of the user study follow the practices of assessing stacked graphs by Thudt et al. <ref type="bibr" target="#b29">[31]</ref>. Here we report on the main findings. More information can be found in the supplementary material. Participants &amp; Apparatus. We recruited 24 participants (20 male and 4 female, age 18-26, μ = 23.375, δ = 1.64) through university mailing lists. All participants had no prior experience in designing streamgraphs. Conditions. We again compared the readability of SineStream with the LateOnset-based streamgraphs proposed by Byron et al. <ref type="bibr" target="#b3">[4]</ref> (called La-teOnsetStream), and the TwoOpt-based ones by Bartolomeo et al. <ref type="bibr" target="#b9">[10]</ref> (called TwoOptStream). LateOnsetStream is the most widely used type of streamgraph; TwoOptStream is considered to be the state of the art. To reduce the impact of colorization on the results, all streamgraphs used the same color scheme that was also used in <ref type="bibr" target="#b29">[31]</ref>. The names LateOnsetStream and TwoOptStream were only used during recording and analyzing of results. In the user study, we did not use any names for streamgraphs to avoid a potential user bias. Instead, they were randomly ordered and named based on their positions such as "left/right graph". Datasets. Following the experimental design in <ref type="bibr" target="#b29">[31]</ref>, the study was conducted on six datasets, including two real world datasets and four randomly generated datasets:</p><p>• A Call dataset <ref type="bibr" target="#b27">[29]</ref> that contains 10 time-series over 35 time points (n = 10, m = 30). Each time-series represents the number of complaint calls made to the New York 311 line on a topic over 35 days. All time-series have non-zero values over the whole time period and share a similar weekly pattern.</p><p>• A Movie dataset that contains 30 time-series with 20 time points (n = 30, m = 20). Each time-series represents the revenue of a single movie over 20 weeks. The time-series in this dataset have non-zero values over an average of 36.35% of the time points (weeks). • Four datasets that are randomly generated using the data generator by Byron et al. <ref type="bibr" target="#b3">[4]</ref>, where n = 15, 20, 25, 30 and m = 30, 35, 35, 40. The datasets show varying temporal patterns. Tasks. All participants were required to complete three tasks designed by Thudt et al. <ref type="bibr" target="#b29">[31]</ref> to assess the readability of the streamgraphs. T ind This task evaluates the ability of the participants to read the thickness of individual layers. Participants were asked to compare the thickness of two individual layers at two given time points.</p><p>Compared with comparing two timepoints of the the same layer (or two layers at the same timepoint), this task is more commonly performed in streamgraphs <ref type="bibr" target="#b15">[16,</ref><ref type="bibr" target="#b29">31]</ref>. We thus selected this task to help us better assess readability. T tre This task evaluates the ability of the participants to perceive the trend of an individual layer. Given an area chart on a straight baseline, participants were asked to select a layer whose thickness is presented by the line chart. T agg This task evaluates the ability of the participants to read the thickness of the whole streamgraph. Participants were asked to compare the thickness of the whole streamgraph at two given time points. Procedure. A within-subject design was employed for the user study. The independent variables were the streamgraph technique, the task, and the dataset and the dependent variables were the accuracy and the completion time. Each participant had to perform tasks for all independent variables, resulting in 3(technique) * 3(task) * 6(dataset) = 54 trials. With 24 participants, this user study produced a total of 1296 trials. The three types of streamgraphs were randomly associated with the six datasets using a balanced 3 * 6 Latin square in order to mitigate learning effects.</p><p>Before each task, participants familiarized themselves with the task and the question format through two training questions, whose correct answers were available to the participants. During each task, participants answered 3 * 6 = 18 single choice questions, covering 3 types of streamgraphs and 6 datasets. Each question for T ind and T agg had two options. For T tre , the participants answered a question by clicking the corresponding layer in the streamgraph. Participants were not allowed to use any measuring device and completed all tasks only based on their observation with the naked eye. After answering a question, participants had to move their mouses and click a "next" button to move to the next question. The "next" button was designed to ensure that the position of the cursor was reset for each question, reducing the possibility that the participants to just repeat the answer of the last question. We recorded the completion time and the participants' answer for each question.</p><p>After the tasks, we asked participants to score the three streamgraphs based on their aesthetic preference and perceived readability using a 7 point seven point likert scale. The user study took around 25 minutes for each participant.</p><p>Hypothesis. We have the following hypothesis: H1 For the accuracy in readability tasks (T ind &amp; T tre &amp; T agg ), SineStream leads to higher accuracy than the other two streamgraph variants. H2 For the completion time in readability tasks (T ind &amp; T tre &amp; T agg ),</p><p>SineStream cost less time than the other two streamgraph variants. We formulated H2 &amp; H1 because SineStream, with a reduced effect of sine illusion, should facilitate participants in reading the thickness of layers, thus reducing the completion time and improving the accuracy.</p><p>Results &amp; Analysis. The analysis follows the practices in <ref type="bibr" target="#b29">[31]</ref> and is based on effect sizes with bootstrapped confidence intervals. As the limits of null hypothesis significance testing (NHST) are concerned in various studies (summarized in <ref type="bibr" target="#b11">[12]</ref>), this approach is an alternative to NHST and is recommended by the American Psychological   Association.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>High accuracy Low accuracy Faster Slower</head><p>The readability for each type of streamgraphs is evaluated based on accuracy and completion time. <ref type="figure" target="#fig_9">Fig. 10</ref> shows the mean comparison and the pairwise comparison. The pairwise comparisons for A vs. B are computed by A − B for accuracy and log(A)/log(B) for completion time. When performing pairwise comparisons, the values are computed for each participant. In terms of accuracy, SineStream has the highest mean accuracy in all three tasks. Among the three tasks, T tre has the highest mean accuracy, indicating the task is relatively easy. In terms of completion time, all three streamgraphs show similar times except at T tre , where SineStream &lt; TwoOptStream &lt; LateOnsetStream. Among the three tasks, T tre has the longest completion time. This is expected as the questions in T tre have more options (n options) than the questions for T ind and T agg (2 options).</p><p>We interprete the pair-wise difference to be small if it is less than 10% and to be large if it is greater than 10%; the difference is treated as weak if the confidence interval crosses the 0/1 vertical line and otherwise is treated as strong. <ref type="figure" target="#fig_10">Fig. 11</ref> summarizes our findings, the thickness of the lines to represent whether the effect was small or large.</p><p>For the readability task (H1), on average, SineStream outperformes LateOnsetStream and TwoOptStream. The advantage is most obvious Q1: This graph has good aesthetic appearance.</p><p>Q2: This graph has good readability.  <ref type="figure" target="#fig_1">Fig. 12</ref>. Comparison of aesthetics and readability for three streamgraph versions from a post-study questionnaire (using a 7-point Likert scale). Agreeing scores are placed on the right, disagreeing on the left.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SineStream</head><p>for T agg . For T ind , SineStream and LateOnsetStream have higher accuracy than TwoOptStream,with a strong and large effect, which is surprising. TwoOptStream, as the current state-of-the-art and an improvement of LateOnsetStream, actually has a lower accuracy than LateOnsetStream in representing the true thickness of individual layers (T ind ). We believe this is because the L2-norm-based optimization in LateOnsetStream also reduces the effect of sine illusions in each layer. For T tre , all three types of streamgraphs have a similar accuracy. We suspect this is caused by the easiness of the task, which has the highest mean accuracy among three readability tasks. For T agg , SineStream has higher accuracy than LateOnsetStream (strong the small effect) and TwoOptStream (strong and large effect). This is expected since we flatten g 0 to improve the readability of the whole streamgraph during layer ordering.</p><p>Another aspect is the completion time for the readability tasks (H2). Overall, the three streamgraphs require similar completion times, except at T tre , where LateOnsetStream requires more time. For T ind and T agg , the similar completion time among the three streamgraph versions might indicate that users are equally certain about their answers across different versions, even though their answers have low accuracy for a certain version. For T tre , SineStream (with a strong and large effect) and TwoOptStream (with a strong and small effect) require less completion time than LateOnsetStream. We suspect the advantage of SineStream and TwoOptStream is caused by their ordering algorithms, which work well for general time-series in conrast to the speciallytailored ordering algorithm in LateOnsetStream.</p><p>Self-reported preferences of the participants for aesthetics and readability are presented in <ref type="figure" target="#fig_1">Fig. 12</ref>. Overall, the participants reported that SineStream is more aesthetically pleasing and readable than TwoOpt-Stream and LateOnsetStream. Participants also said that TwoOptStream is more aesthetically pleasing than LateOnsetStream. We suspect this is caused by the unpleasant distortions that appear in LateOnsetStream when layers have sudden jumps. There is no significant difference between the self-reported readability of LateOnsetStream and TwoOpt-Stream. In general, the self-reported readability of the three variants agrees with the results of the tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Case Study</head><p>To further demonstrate the effectiveness of SineStream, we conducted a case study and compared it with LateOnsetStream and TwoOptStream for four real world datasets ( <ref type="figure" target="#fig_2">Fig. 1 and Fig. 13</ref>  . LateOnsetStream orders the layers to balance the weight (i.e., the sum of time series) between the top and bottom and the baseline is calculated to minimize the weighted L2-norm wiggle value (Eq. 1). Since w i = f i in the weighted wiggle measure, LateOnsetStream mainly reduces the distortions in thick layers, e.g., the "Street light condition" layer in the Call dataset, the "UKR" layer in the Bank Interest dataset,  <ref type="figure" target="#fig_2">Fig. 13</ref>. Comparing LateOnsetStream <ref type="bibr" target="#b3">[4]</ref>, TwoOptStream <ref type="bibr" target="#b9">[10]</ref>, and SineStream for the Call dataset <ref type="bibr" target="#b27">[29]</ref> (top), the Bank Interest dataset <ref type="bibr" target="#b28">[30]</ref> (middle) and the Assistance dataset <ref type="bibr" target="#b28">[30]</ref> (bottom). The streamgraphs are drawn using different baselines and layer orderings.</p><p>the "PRE" and "MNA" layers in the Assistance dataset. Thus, the thickness of these thick layers can be read accurately. The thinner layers, however, suffer from strong effects of sine illusion, which are caused by the large thickness changes of the thick layers. These thin layers include the "Blocked driveway" layer in Call dataset, the "BOL" and "EGY" layer in the Interest dataset, and the "SAS" layer in the Assistance dataset. The top and bottom boundaries of these thin layers have the same sign, thus misaligning the orthogonal and vertical orientations and making it difficult to visually estimate the actual thickness. TwoOptStream, employs a heuristic algorithm, "TwoOpt", to order layers; the baseline is calculated to minimize the weighted L1-norm wiggle value (Eq. 2). As discussed in Sect. 4.2, "TwoOpt" tends to place thick layers in the middle, such as the "Noise" layer in Call dataset and the "PRE" layer in the Assistance dataset. The thickness changes of these thick layers will inevitably distort their neighboring layers. Meanwhile, the L1-norm-based baseline optimization in TwoOptStream prefers one big distortion over several small distortions. As a result, the distortion caused by the middle thick layers is mainly imposed to layers on one side and causes strong sine illusions. For example, in the Call dataset, the rapid thickness decrease in "Noise" introduces huge distortions to the layers below, i.e., the "Blocked driveway" and "Street light condition" layer.</p><p>Compared to LateOnsetStream and TwoOptStream, SineStream minimizes the effect of sine illusion and improves the readability through an improved baseline and ordering algorithms. In all four datasets, SineStream decreaes sine illusion effects for thin layers without significantly increasing such illusion for the thick layers. For example, in the Assistance dataset, SineStream significantly improves the readability of the "SAS" layer and the purple layer by flatting their baselines. The "PRE" layer is slightly distorted in SineStream, but the degree of this distortion is much smaller than the distortion of "SAS". Furthermore, the thick layers are more resistant to the sine illusion. This improvement is mainly cause by two factors: Compared to LateOnsetStream, SineStream introduces a Gaussian weight for the baseline computation and penalizes layers with large thickness changes. Compared to TwoOptStream, SineStream introduces a thickness weight in the ordering and tends to place thin layers in the middle. Moreover, our efforts to minimize ∑ n−1 i=1 dist(i, i + 1) let the slope of the baseline g 0 (Eq. 4) be closer to zero than the other two methods. For example, the SineStream result for the Call dataset is more flat than TwoOptStream; for the Interest dataset, SineStream is more flat than both LateOnset-Stream and TwoOptStream. This allows an easier comprehension of the thickness of the whole graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION &amp; FUTURE WORK</head><p>In this paper, we relate the optimization of streamgraph to the sine illusion and propose SineStream, a new version of streamgraphs with improved readability. The sine illusion provides a cognitive foundation for quantifying the readability of a streamgraph, i.e., how easy users can accurately read the layer thicknesses. Therefore, we re-formulate baseline computation and layer ordering in terms of minimizing the sine illusion effect. Apart from individual layers, SineStream also considers sine illusions for the whole stream when ordering layers. A quantitative comparison and a user study demonstrate that SineStream effectively improves the readability and aesthetics of streamgraphs compared to the state-of-the-art methods.</p><p>In the future, we plan to conduct large-scale user studies and a comprehensive evaluation to better understand SineStream and sine illusion effects in streamgraphs. SineStream models sine illusion using Eq. 5 and achieves good results in improving readability. However, how to precisely quantify the effect of sine illusion is still an open question. VanderPlas and Hofmann <ref type="bibr" target="#b30">[32]</ref> conclude that the sine illusion effect increases with the slope of curves but provided no further details, e.g., whether the relationship is linear or nonlinear. Cognitive studies are needed to help us better understand and capture the relationships between sine illusion effects and other visual variables in streamgraphs.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>(a) A line</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Each row represents streamgraphs with the same data and layer order, but different baseline computations. (a) Byron &amp; Wattenberg [4] encourages [g i , g i−1 ] to have equal absolute values and opposite signs, regardless of the increased sine illusion it causes to other layers. (b) This leads to unpleasant distortions when layers have sudden changes in thickness. (c) Bartolomeo &amp; Hu</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Three streamgraphs that use our ordering algorithm but different baseline optimizations: Wiggle norm2 , Wiggle norm1 , and sine illlusion.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 5 .</head><label>5</label><figDesc>The Ebb and Flow of Movies</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Layer ordering based on hierarchical clustering: (a) we hierarchically cluster layers with shortest distances and build a binary tree. Each node of the tree is a layer. The two children of an internal node are the two layers that are put together in the ordering. (b) Flipping internal nodes leads to different layer orderings, which incorporate different amounts of sine illusions. (c) We compute our ordering from the binary tree by minimizing the sum of distances between adjacent layers.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Three streamgraphs using the same baseline optimization but different ordering algorithms: LateOnset, TwoOpt, and our algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Performance of three algorithms in terms of L1-norm wiggle, L2-norm wiggle and sine illusion. The violin plots summarize the value distribution for 36 datasets, smaller values are better.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fig. 10 .</head><label>10</label><figDesc>Mean comparison and pairwise comparison in terms of accuracy and completion time. Error bars show 95% bootstrapped confidence intervals.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Fig. 11 .</head><label>11</label><figDesc>Summary of differences among the three variants of streamgraphs in accuracy and completion time. Within each cell, the horizontal position of the icons encode their performance, ordered from best (left) to worst (right). The same horizontal position indicates a similar performance.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>illustrate the comparison): • Call dataset: the number of complain calls made to New York 311 line about 10 topics over 35 days (n = 10, m = 35) [29]. • Bank Interest dataset: the bank interest rate of 10 developing countries from 1972 to 2019 (n = 10, m = 48) [30]. • Assistance dataset: Net official development assistance received by 11 countries over 59 years (n = 11, m = 59) [30]. • COVID dataset: the top 10 number of daily confirmed COVID-19 cases per country from Mar 1st to Apr 13th (n = 10, m = 34) [23]</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">https://github.com/VisLabWang/SineStream</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work is supported by the grants of the NSFC (61772315, 61861136012) and Deutsche Forschungsgemeinschaft (DFG) Project-IDs DE 620/26-1, as well as 251654672 (TRR 161 Quantitative methods for visual computing).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Fast optimal leaf ordering for hierarchical clustering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Bar-Joseph</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">K</forename><surname>Gifford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Jaakkola</surname></persName>
		</author>
		<idno type="DOI">10.1093/bioinformatics/17.suppl1.S22</idno>
	</analytic>
	<monogr>
		<title level="j">Bioinformatics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="22" to="29" />
			<date type="published" when="2001-06" />
		</imprint>
	</monogr>
	<note>suppl</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Touchwave: Kinetic multi-touch manipulation for hierarchical stacked graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Baur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
		<idno type="DOI">10.1145/2396636.2396675</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2012 ACM International Conference on Interactive Tabletops and Surfaces, ITS &apos;12</title>
		<meeting>the 2012 ACM International Conference on Interactive Tabletops and Surfaces, ITS &apos;12</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="255" to="264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Last. fm listening history-what have i been listening to</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Byron</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Stacked graphs -geometry aesthetics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Byron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wattenberg</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2008.166</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1245" to="1252" />
			<date type="published" when="2008-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The shape parameter of a two-variable graph</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Mcgill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcgill</surname></persName>
		</author>
		<idno type="DOI">10.1080/01621459.1988.10478598</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="issue">402</biblScope>
			<biblScope unit="page" from="289" to="300" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Graphical perception: Theory, experimentation, and application to the development of graphical methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcgill</surname></persName>
		</author>
		<idno>doi: 10. 1080/01621459.1984.10478080</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="issue">387</biblScope>
			<biblScope unit="page" from="531" to="554" />
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Textflow: Towards better understanding of evolving topics in text</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Tan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Tong</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2011.239</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2412" to="2421" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">How hierarchical topics evolve in large text corpora</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wei</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2346433</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2281" to="2290" />
			<date type="published" when="2014-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Sine of an illusion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">H</forename><surname>Day</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Stecher</surname></persName>
		</author>
		<idno type="DOI">10.1068/p200049</idno>
	</analytic>
	<monogr>
		<title level="j">Perception</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="49" to="55" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">There is more to streamgraphs than movies: Better aesthetics via ordering and lassoing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Di</forename><surname>Bartolomeo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12910</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="341" to="350" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Hierarchicaltopics: Visually exploring large text collections using topic hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Dou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ribarsky</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2013.162</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2002" to="2011" />
			<date type="published" when="2013-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Fair Statistical Communication in HCI</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Dragicevic</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-26633-613</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="291" to="330" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A visual backchannel for large-scale events</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dörk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gruen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Williamson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2010.129</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1129" to="1138" />
			<date type="published" when="2010-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Food and Agriculture Organization of the United Nations</title>
		<ptr target="http://www.fao.org" />
		<imprint>
			<biblScope unit="page" from="2020" to="2023" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Themeriver: visualizing thematic changes in large document collections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Havre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Hetzler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Whitney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Nowell</surname></persName>
		</author>
		<idno type="DOI">10.1109/2945.981848</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="9" to="20" />
			<date type="published" when="2002-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Graphical perception of multiple time series</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Javed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mcdonnel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Elmqvist</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2010.162</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="927" to="934" />
			<date type="published" when="2010-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Hierarchical clustering schemes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">C</forename><surname>Johnson</surname></persName>
		</author>
		<idno type="DOI">10.1007/BF02289588</idno>
	</analytic>
	<monogr>
		<title level="j">Psychometrika</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="241" to="254" />
			<date type="published" when="1967-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Chameleon: hierarchical clustering using dynamic modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Karypis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eui-Hong</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Kumar</surname></persName>
		</author>
		<idno type="DOI">10.1109/2.781637</idno>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="68" to="75" />
			<date type="published" when="1999-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Making sense of streamgraphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kirk</surname></persName>
		</author>
		<ptr target="www.visualisingdata.com/2010/08/making-sense-of-streamgraphs/" />
		<imprint>
			<date type="published" when="2010" />
			<biblScope unit="page" from="2020" to="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">X</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Qian</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Cai</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Lian</surname></persName>
		</author>
		<title level="m">Tiara: Interactive, topic-based visual text summarization and analysis</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title/>
		<idno type="DOI">10.1145/2089094.2089101</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Intell. Syst. Technol</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2012-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">The commercial and political atlas (london)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Playfair</surname></persName>
		</author>
		<imprint>
			<biblScope unit="page">1786</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">time-series of coronavirus cases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pombo</surname></persName>
		</author>
		<ptr target="https://github.com/pomber/covid19" />
		<imprint>
			<biblScope unit="page" from="2020" to="2024" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Casual information visualization: Depictions of data in everyday life</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Pousman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stasko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mateas</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2007.70541</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1145" to="1152" />
			<date type="published" when="2007-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
		<ptr target="https://www.sports-reference.com/" />
	</analytic>
	<monogr>
		<title level="j">S. References. Sports references</title>
		<imprint>
			<biblScope unit="page" from="2020" to="2023" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Evoriver: Visual analysis of topic coopetition on social media</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J H</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Liang</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2346919</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1753" to="1762" />
			<date type="published" when="2014-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">The New York Times. The ebb and flow of movies: Box office receipts</title>
		<ptr target="http://archive.nytimes.com/www.nytimes.com/interactive/2008/02/23/movies/20080223_REVENUE_GRAPHIC.html" />
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="2020" to="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<ptr target="https://nycopendata.socrata.com/" />
		<title level="m">The New York Times. Nyc open data</title>
		<imprint>
			<date type="published" when="2008" />
			<biblScope unit="page" from="2020" to="2021" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">The World Bank. Global development data</title>
		<ptr target="https://data.worldbank.org.cn" />
		<imprint>
			<biblScope unit="page" from="2020" to="2023" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Assessing the readability of stacked graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Thudt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Walny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Perin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Rajabiyazdi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Macdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Vardeleon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
		<idno>doi: 10. 20380/GI2016.21</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphics Interface</title>
		<meeting>Graphics Interface</meeting>
		<imprint>
			<date type="published" when="2016" />
			<biblScope unit="page" from="167" to="174" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Signs of the sine illusion-why we need to care</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Vanderplas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hofmann</surname></persName>
		</author>
		<idno type="DOI">10.1080/10618600.2014.951547</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational and Graphical Statistics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="1170" to="1190" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title level="m" type="main">Babyname wizard: Namevoyager</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wattenberg</surname></persName>
		</author>
		<ptr target="http://www.babynamewizard.com/voyager" />
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Visual analysis of topic competition on social media</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J H</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2013.221</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2012" to="2021" />
			<date type="published" when="2013-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Birch: An efficient data clustering method for very large databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ramakrishnan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Livny</surname></persName>
		</author>
		<idno type="DOI">10.1145/235968.233324</idno>
	</analytic>
	<monogr>
		<title level="j">SIGMOD Rec</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="114" />
			<date type="published" when="1996-06" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
