<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">StructGraphics: Flexible Visualization Design through Data-Agnostic and Reusable Graphical Structures</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theophanis</forename><surname>Tsandilas</surname></persName>
							<email>theophanis.tsandilas@inria.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">Université Paris-Saclay, Inria &amp; CNRS</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff0">
								<orgName type="institution">Université Paris-Saclay, Inria &amp; CNRS</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">StructGraphics: Flexible Visualization Design through Data-Agnostic and Reusable Graphical Structures</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note type="submission">received xx xxx. 201x; accepted xx xxx. 201x.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:27+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Visualization design</term>
					<term>graphical structures</term>
					<term>visualization grammars</term>
					<term>layout constraints</term>
					<term>infographics</term>
					<term>flexible data binding</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. The StructGrapher&apos;s user interface consists of: (a) a library of reusable visualization structures, (b) a visualization sketcher for drawing basic shapes and grouping them into collections, (c) a property inspector for exposing and structuring graphical properties, and (d) a spreadsheet for creating mappings between properties and data. The approach enables designers to construct data-agnostic visualizations and create flexible bindings with data. The bottom visualization design was originally published in the Financial Times [22].</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Visualization systems make use of diverse data representations to help people make sense of data. However, previous research has argued that traditional visualization systems have focused on data exploration and analysis tasks, paying less attention to presentation purposes <ref type="bibr" target="#b18">[19]</ref>. Past studies <ref type="bibr" target="#b7">[9,</ref><ref type="bibr" target="#b51">51]</ref> also suggest that traditional tools do not target designers and thus often fail to meet real design practices; some tools give little design freedom, while others require users to program. Recent systems address this limitation by integrating graphic design tools into the visualization creation process. Some systems focus on how to support expressive data-driven infographics <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b53">53,</ref><ref type="bibr" target="#b56">56,</ref><ref type="bibr" target="#b59">59]</ref>. Others <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b39">40,</ref><ref type="bibr" target="#b49">49]</ref> help visualization authors to produce rich layouts. Each approach has its own strengths and limitations and presents different solutions on how to produce expressive visualizations without programming.</p><p>Liu et al. <ref type="bibr" target="#b20">[21]</ref> argue that "designers use familiar tools to draw, select and manipulate vector graphics, and apply data encoding only when it is necessary." The above systems generally adopt a lazy databinding approach to support such practices, where the design of graphics precedes the data-binding step. Even so, these systems are largely data-driven and still rely on a specific dataset to derive a visualization structure. For example, Data Illustrator <ref type="bibr" target="#b20">[21]</ref> requires its users to assign data dimensions at the very beginning of the authoring process. Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref> collectively reflect on the assumptions and capabilities of Lyra <ref type="bibr" target="#b39">[40]</ref>, Data Illustrator <ref type="bibr" target="#b20">[21]</ref>, and Charticulator <ref type="bibr" target="#b32">[33]</ref>. They conclude that these systems target authoring rather than design tasks since they assume that users start their task with an "appropriately formatted dataset" and have a "specific chart design in mind."</p><p>In this paper, we target design tasks. Our goal is to help users explore visualization layouts without being constrained by data encodings. We adopt a data-agnostic approach that produces reusable visualization structures without programming. The approach combines techniques of graphical properties sharing <ref type="bibr" target="#b14">[15]</ref>, by-example specification <ref type="bibr" target="#b26">[27,</ref><ref type="bibr">31]</ref>, and persistent alignment and distribution <ref type="bibr" target="#b12">[13]</ref> into a new framework of nested property structures. We call it StructGraphics (in distinction with "Infographics") to emphasize its focus on graphical structures rather than data. StructGraphics enables designers to draw their visualization primitives and structure the constraints of their properties without relying on any specific dataset or data schema. Rather than being predefined, data structures are generated on the fly, as designers interactively construct their visualizations. Yet, as Liu et al. <ref type="bibr" target="#b20">[21]</ref> report, it is sometimes "beneficial to bring in real data" even during the shape-drawing phase. StructGraphics does not require real data but lets designers fully or partially link data to their designs at any moment. Such data bindings are flexible and not persistent, and allow designers to test a design with alternative encodings. Our data-binding mechanism is facilitated by a spreadsheet user interface that complements the manual entry of data <ref type="bibr" target="#b7">[9]</ref> with the constraints of a visualization structure. Overall, StructGraphics follows the inverse workflow than traditional visualization-design systems. Rather than transforming data dependencies into visualization constraints, it allows users to interactively define the property and layout constraints of their visualization designs and then translate these graphical constraints into alternative data structures. Since visualization designs are data-agnostic, they can be easily reused and combined with different datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>StructGraphics builds upon a vast volume of research on Information Visualization, Human-Computer Interaction, and Computer Graphics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Visualization Grammars and Toolkits</head><p>Wilkinson's <ref type="bibr" target="#b55">[55]</ref> and Wickham's <ref type="bibr" target="#b54">[54]</ref> seminal work on visualization grammars has led to powerful visualization creation systems such as ggplot2 <ref type="bibr">[2]</ref>. Other systems, such as Polaris <ref type="bibr" target="#b44">[45]</ref> and its commercial successor Tableau <ref type="bibr" target="#b4">[6]</ref>, provide expressive interaction tools that help users interactively visualize their data. A third stream of research has investigated programming toolkits <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b11">12]</ref> and declarative grammars <ref type="bibr" target="#b41">[42,</ref><ref type="bibr" target="#b43">44]</ref> that support interactive data visualization. Finally, hybrid approaches such as VisComposer <ref type="bibr" target="#b23">[24]</ref> combine rapid prototyping through interactive controls with visual or textual programming.</p><p>A number of authors <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b50">50,</ref><ref type="bibr" target="#b56">56]</ref> have pointed out that such systems impose a bottom-up workflow, where design is driven by data rather than by graphics, layout, and aesthetics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Studies of Design Practices</head><p>A number of past studies have investigated how professionals or novices design visual representations or work with graphics. Bigelow et al. <ref type="bibr" target="#b7">[9]</ref> studied how designers approach data and how data affect their visualization designs. They observed that designers prefer a "flexible design environment that does not enforce a specific order of operations" and create visualizations in a "top-down, graphical process." These observations are corroborated by Walny et al. <ref type="bibr" target="#b51">[51]</ref> who report that designers who tried to think in terms of "concepts extrinsic to the dataset" ended up with deeper observations about the data. Méndez et al. <ref type="bibr" target="#b24">[25]</ref> experimentally compared a bottom-up approach (Tableau <ref type="bibr" target="#b4">[6]</ref>) to a top-down approach (iVoLVER <ref type="bibr" target="#b25">[26]</ref>) with 10 non-expert participants. Their results show that although a top-down approach is more laborious and slower, it can help users get a better understanding of the creation process, feel more in control, and produce more varied designs.</p><p>Others have looked on how designers work with graphical structures. In particular, Maudet et al. <ref type="bibr" target="#b22">[23]</ref> point out that the creation of layout structures is an essential part of the graphics design process but also observe that many designers struggle when having to go beyond gridbased layouts. The authors argue that graphical properties must be described instead through versatile rules or constraints that they call "graphical substrates." How to describe the property constraints of a visualization design is a key challenge that we address in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Design-Oriented Visualization Authoring Tools</head><p>Several systems aim to bring visualization tools closer to the graphics design process. Roth et al. <ref type="bibr" target="#b34">[35]</ref> are probably the first to describe tools for binding data to the properties of graphical objects. Years later, Bret Victor <ref type="bibr" target="#b49">[49]</ref> demonstrates an interactive data-driven system for creating custom data visualizations through a loop-based workflow that resembles programming. Research systems that combine graphics-driven visualization authoring with programming workflows (either textual or visual) include iVoLVER <ref type="bibr" target="#b25">[26]</ref>, Hanpuku <ref type="bibr" target="#b9">[10]</ref>, and d3-gridding <ref type="bibr" target="#b50">[50]</ref>.</p><p>Meanwhile, the information visualization research has introduced a range of systems that support expressive visualization design without programming: Lyra <ref type="bibr" target="#b39">[40]</ref>, iVisDesigner <ref type="bibr" target="#b31">[32]</ref>, Data-Driven Guides <ref type="bibr" target="#b17">[18]</ref>, InfoNice <ref type="bibr" target="#b53">[53]</ref>, DataInk <ref type="bibr" target="#b56">[56]</ref>, Data Illustrator <ref type="bibr" target="#b20">[21]</ref>, Charticulator <ref type="bibr" target="#b32">[33]</ref>, and DataQuilt <ref type="bibr" target="#b59">[59]</ref> are representative examples. Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref> describe these systems as visual builders. Some visual builders <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b53">53,</ref><ref type="bibr" target="#b56">56,</ref><ref type="bibr" target="#b59">59]</ref> focus on how to help designers produce creative infographics. For example, Data-Driven Guides <ref type="bibr" target="#b17">[18]</ref> combines a vector graphics editor with a flexible data-binding mechanism to produce data-driven infographics. InfoNice <ref type="bibr" target="#b53">[53]</ref> offers similar functionality but targets users who are not design experts.</p><p>A second group of visual builders <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b39">40]</ref> focus on how to author visualizations with complex (e.g., layered or nested) visualization layouts. In particular, Data Illustrator <ref type="bibr" target="#b20">[21]</ref> provides tools for grouping graphical primitives, defining nested collections of similar objects, applying graphical layouts, and establishing lazy data bindings that act as constraints. Charticulator <ref type="bibr" target="#b32">[33]</ref>, instead, uses a constraint-based layout specification framework that can infer complex visualization layouts from partial user-driven specifications.</p><p>Despite their power, these systems still require users to bind data to graphics at the very first steps of the design process. Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref> acknowledge that these systems address the "the narrower activity of visualization authoring, where the author already has a desired visualization in mind, and has a dataset in the appropriate format." StructGraphics' approach is fully graphics-driven. Its goal is to encourage users to explore designs by directly interacting with a visualization's graphics, before dealing with concrete data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Sketch-Based Data Visualizations</head><p>Other systems focus on how to support visualization analysis and presentation tasks through expressive free-from sketches. For example, Sketchstory <ref type="bibr" target="#b19">[20]</ref> allows analysts to communicate results through informal sketch-based representations. SketchSliders <ref type="bibr" target="#b46">[47]</ref> support mobile data exploration through interactive sketch-based controllers. Datatoon <ref type="bibr" target="#b16">[17]</ref> allows users to produce "data comics" by sketching informal data presentations based on directed node-link diagrams. Finally, DataInk <ref type="bibr" target="#b56">[56]</ref> supports expressive shape primitives and free-form layout patterns but does not handle nested layouts. How to support sketchbased visualizations is beyond the scope of our work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Visualization by Example</head><p>Gold <ref type="bibr" target="#b26">[27]</ref> was probably the first system to support visualization creation by demonstration. Gold used various heuristics to interpret example graphics but supported a limited number of charts and required a wellformatted dataset. Visualization research has also looked at how to infer visual transformations from user-driven interactive demonstrations <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b37">38]</ref>. The approach supports visualization transformation tasks, rather than visualization authoring tasks, and is largely data-driven. Wang et al. <ref type="bibr" target="#b52">[52]</ref> have recently introduced a visualization-by-example technique that infers a visualization grammar from a partial visual sketch and a dataset. Unfortunately, the technique requires the pre-specification of inference rules for each visualization type (e.g., scatter plot, bar chart, and line chart) and further assumes that the input dataset is well formatted and labeled in accordance to the visualization example.</p><p>In StructGraphics, an example defines the bindings of graphical objects at one level each time, and from those, the system also infers the structure of data. Other approaches use Convolutional Neural Networks to extract the data <ref type="bibr" target="#b15">[16]</ref> or the grammar <ref type="bibr" target="#b29">[30]</ref> from a visualization image, but their success depends on the size and quality of a training dataset. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.6">Graphical Layouts and Property Constraints</head><p>HCI and Computer Graphics research has studied techniques that infer layouts constraints or aid their construction. Ryall et al. <ref type="bibr" target="#b35">[36]</ref> describe a number of techniques that constrain the layout of graphs, including alignment, equal spacing (i.e., distribution), ordering, and grouping. StickyLines <ref type="bibr" target="#b12">[13]</ref> take this approach further by making alignment and distribution constraints tweakable and persistent. Other approaches try to automatically infer layout constraints <ref type="bibr" target="#b57">[57]</ref> or specify layout designs by example <ref type="bibr">[31]</ref>. Also, Hoarau and Conversy <ref type="bibr" target="#b14">[15]</ref> present a drawing tool that enables users to interactively create dependencies between graphical properties and inspect multiple instances of a property at the same time. StructGraphics borrows ideas from all this line of work and applies them to nested visualization designs. Finally, some intelligent systems adaptively optimize a layout design <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b45">46]</ref> or provide suggestions <ref type="bibr" target="#b28">[29]</ref> to help users produce better layouts. StructGraphics does not target layout optimization. Its grouping tools rely on simple rules for inferring the intended structure of visual properties with coherent layout constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DESIGN PRINCIPLES</head><p>StructGraphics targets design-driven scenarios, where a data visualization is defined progressively as the user designs and interacts with its graphics. Bigelow et al. <ref type="bibr" target="#b7">[9]</ref> report that designers "try to understand the overall appearance of a visualization before plotting real data on axes" and "tend to think of influencing existing graphics that they have already created." Thus, our goal is to help designers explore the graphical structure of a visualization before committing to specific bindings with data. Moreover, we want to encourage users to reuse their previous designs. Overall, StructGraphics is based on four design principles. DP 1 : Detach the graphical structure from the data. Despite their flexible designs, visual builders like Lyra <ref type="bibr" target="#b39">[40]</ref>, Data Illustrator <ref type="bibr" target="#b20">[21]</ref>, and Charticulator <ref type="bibr" target="#b32">[33]</ref> require users to bind data early in the authoring process. As a result, visualization structures are largely determined by the data. In StructGraphics, the graphical structure of a visualization is constructed in an interactive way and independently from the dataset. The approach relies on a property sharing mechanism that allows users to define how the graphical properties of a visualization (e.g, the x and y positions of a scatterplot's points) are shared or vary across dimensions. DP 2 : Enable constrained but flexible layout designs. Grids, stacks, and packs are representative layout constraints in visualization authoring systems <ref type="bibr" target="#b40">[41]</ref>. StructGraphics' layout constraints are based, instead, on principles of persistent alignment and distribution <ref type="bibr" target="#b12">[13]</ref>. This approach allows for more malleable layouts, e.g., a grid with rows that are freely translated across the x direction. DP 3 : Encourage reusability at all levels of a graphical structure. Other systems support reusable visualization templates that can be exported as Vega specifications <ref type="bibr" target="#b39">[40]</ref> or Microsoft Power BI custom visual files <ref type="bibr" target="#b32">[33]</ref>. Such templates can be reused with different datasets but constrain the design process. For example, Charticulator <ref type="bibr" target="#b32">[33]</ref> templates are hard-coded to the original dataset schema and "any new data must be structured in an identical format" <ref type="bibr" target="#b40">[41]</ref>. In StructGraphics, visualizations are expressed as hierarchies of data-agnostic graphical structures, and every node in the hierarchy can be easily added to a library and later reused with simple drag-and-drop actions. DP 4 : Support late binding with flexible data schemas. Transforming a dataset into a convenient format requires the user to perform a series of data-formatting operations, such as filtering, transformation, restructuring, and aggregation. Not only are these steps laborious, but they also require careful preplanning. Unfortunately, when exploring design alternatives, designers may not have a clear idea about which data format is the most appropriate for their task. StructGraphics delays all data formatting decisions to the very end of the process, when the visualization structure has already been constructed. In StructGraphics, the data schema is defined by the structure of the graphics, rather than the opposite. We facilitate the conversion of graphical structures to data with a spreadsheet user interface. The spreadsheet serves as a playground for exploring alternative data encodings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">STRUCTGRAPHICS</head><p>We explain our approach with variations of the two visualization examples in <ref type="figure">Fig. 1</ref>. The top visualization is a custom infographic that presents the performance of a team of children across different dimensions. <ref type="figure" target="#fig_0">Fig. 2</ref> summarizes the main steps that a user can follow to create it. The bottom visualization reproduces a Sankey diagram published in the Financial Times <ref type="bibr" target="#b21">[22]</ref>. It depicts the change in council control after the UK local elections in 2018.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Overview</head><p>The StructGraphics user interface is composed of three fully synchronized components (see <ref type="figure">Fig. 1</ref>): Visualization Sketcher. The design of a visualization starts by drawing basic shapes with a vector graphics editor, the visualization sketcher. The sketcher provides tools for repeating shapes, varying their geometries, and grouping them together into groups of elementary shapes and collections (see <ref type="figure" target="#fig_0">Fig. 2</ref>). Through repetition, variation, and grouping, designers can create rich hierarchies of visualization collections.</p><p>The sketcher relies on techniques of persistent alignment and distribution <ref type="bibr" target="#b12">[13]</ref> for laying out visual objects (DP 2 ). This approach encourages exploration through trial and error. We further use by-example design specification <ref type="bibr">[31]</ref> to automate the extraction of layout constraints and further infer how graphical properties are shared or vary. For instance, the example in <ref type="figure" target="#fig_0">Fig. 2a</ref> indicates that the x-coordinate is shared among all three shapes to be grouped. In this case, StructGraphics will create a binding to make their x-alignement persistent. Based on this mechanism, StructGrapher constructs structures of graphical properties that define a visualization design without data (DP 1 ). At any moment, users can select a group or collection in their visualization structure and add it to a library (see <ref type="figure">Fig. 1a</ref>) for future reuse (DP 3 ). Property Inspector. The inspector exposes the graphical properties of a visualization and organizes them under a tree hierarchy. Inspired by the property sheet of Hoarau and Conversy <ref type="bibr" target="#b14">[15]</ref>, the inspector displays the full range of property values of a group of visualization objects and reveals their sharing constraints. We further extend this approach to nested graphical structures. Specifically, we distinguish between shared and variable properties at all levels of a visualization hierarchy. For example, the fill color of both the hull and the sail of the boats in the collection of <ref type="figure" target="#fig_0">Fig. 2d</ref> is shared, whereas the x and y coordinates and the rotation of the boats are variable. Variable graphical properties are automatically organized into wide and narrow tabular forms that serve as data templates (DP 4 ).</p><p>The inspector allows users to interactively restructure properties to correct their designs, or explore different variations of constraints. As opposed to other visualization authoring tools <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b31">32,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b39">40]</ref>, the StructGraphics inspector is not directly associated with a dataset and is not directly used for data-binding purposes (DP 1 ). Spreadsheet. Users can create mappings between graphical properties (either individual or grouped) and data at any moment, or at the very end of the process, when they need to populate real data values and We highlight a group that contains a rectangle, a triangle, and a text field.</p><p>generate axes, labels, and legends (DP 4 ). All data manipulations take place in a spreadsheet. Spreadsheets are extremely popular and have a key role in the workflow of many design experts <ref type="bibr" target="#b7">[9]</ref>. According to Dix et al. <ref type="bibr" target="#b13">[14]</ref>, spreadsheets "are often the best tools to use."</p><p>In the StructGraphics user interface, designers can create custom data templates (DP 4 ) by dragging individual properties or tabular property structures from the inspector to a spreadsheet (see <ref type="figure" target="#fig_0">Fig 2e)</ref>. Users can type a name in the spreadsheet to define a data variable and then apply a numerical transformation, or map it to a set of categorical values. They can also manually edit individual values or import them from external spreadsheet applications, such as Microsoft Excel.</p><p>Property constraints created in the sketcher and the inspector are translated into value dependencies in the spreadsheet. The spreadsheet user interface also allows designers to choose which variables to visualize as axes, labels, or legends. Rather than imposing a unique data schema, designers can explore alternative scale transformations and reuse a visualization design with different pieces of data (DP 3 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Visualization Structure</head><p>A StructGraphics visualization is a tree structure, whose leaf nodes are graphical primitives, called marks: lines, rectangles, ellipses, and text fields. As in Data Illustrator <ref type="bibr" target="#b20">[21]</ref>, marks can be grouped together to form collections and groups. Collections and groups can be nested under higher-level collections and groups. <ref type="figure" target="#fig_1">Fig. 3</ref> (left) describes the grammar of StructGraphics visualizations. <ref type="figure" target="#fig_1">Fig. 3</ref> (right) shows the visualization tree of our infographic in <ref type="figure">Fig. 1</ref>, where we highlight the group of the last "boat." As all nodes in the tree, the group has a unique identifier (1.4) but is further associated with a letter ("A") that specifies its hierarchy level. As we see later, this notation helps distinguish among the graphical properties of nodes at different hierarchy levels.</p><p>Groups and collections have a similar structure but distinct roles. Groups enable designers to create complex graphics and have a fixed graphical structure. Top-level groups serve as the glyphs <ref type="bibr" target="#b32">[33,</ref><ref type="bibr" target="#b40">41]</ref> of a visualization design. They expose the properties of individual shapes, which can vary independently from each other. For example, the fill color and height of the sail in <ref type="figure" target="#fig_1">Fig. 3</ref> vary independently of the fill color and height of the hull. In contrast, collections group together a variable (rather than fixed) number of children nodes, where all children have the same graphical structure. The top collection of our example ("B. Area Chart 1") contains four groups, where they all depict a sailboat.</p><p>We represent groups and collections (or for nested collections) as Cartesian coordinate systems (see <ref type="figure">Fig. 1</ref>), whose axes dynamically adapt to the size and position of their children nodes. We refer to these representations as skeletons. Skeletons serve as interaction handles, as reference lines for the coordinates of children nodes, and as scaffolds for creating the axes of the final visualization. Users can press on the button to hide them and show them back.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Properties Framework</head><p>At the core of the StructGraphics approach is a framework for structuring the graphical properties of a visualization tree.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Basic Graphical Properties</head><p>A mark is described by the following graphical properties: its type (e.g., line, rectangle, ellipse, triangle, or text field), its x and y position with respect to the origin of its parent group or collection, its width and height, its rotation angle, its fill color, and its stroke thickness and color. Text fields have additional text-specific properties. Marks have also properties that define their origin location: left, right, or center for the x axis, and bottom, top, and center for the y axis. We display them as vectors (arrows) (see <ref type="figure" target="#fig_2">Fig. 4</ref>) that depict the mark's orientation, where upwards and rightwards are positive directions. All properties have a name, a data type, and a value.</p><p>Groups and collections have their own graphical properties. These properties define the relative position and rotation angle of the group or collection, or alternatively, the layout of its children nodes. Other more specialized collection properties allow designers to customize connected visualizations, such as line or spline charts, area charts, and flow diagrams (see <ref type="figure">Fig. 1</ref>). Group and collection properties have a prefix (e.g., A.x and B.rotation) that reflects their hierarchy level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2">Layout Properties</head><p>Layout constraints are defined through the properties of groups and collections. Those include distribution and stickiness properties that constrain the relative positioning of their children (see <ref type="figure" target="#fig_2">Fig. 4</ref>). As Ciolfi Felice et al. <ref type="bibr" target="#b12">[13]</ref>, we support two types of distribution constraints: (i) equal spacing and (ii) equal distances. Such constraints are persistentthey are preserved as users translate or resize a node within a group or collection. Stickiness properties apply further constraints by gluing the children nodes of a group or collection on the x or y axis of its skeleton.</p><p>Combined with StructGraphics' property sharing mechanism (see below), these properties let users define grids, stacks, packs, or free layouts at any hierarchy level and later modify them as needed (DP 2 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.3">Property Structures and Property Sharing</head><p>StructGraphics distinguishes between the "self properties" of a node (mark, collection, or group) and the properties of its children. Collections and top-level groups gather the properties of all nodes in their subtree and organize them into property structures. Property structures take the form of nested property lists, which are then merged into larger tabular structures. For instance, consider the bottom visualization (Sankey diagram) in <ref type="figure">Fig. 1</ref>. The visualization is a B-level collection that contains two A-level collections with four children (rectangular marks) each. <ref type="figure" target="#fig_3">Fig. 5a</ref> shows the children properties of the first subcollection divided into two sections: (i) a section of shared properties, i.e., common properties among all children nodes; and (ii) a section of variable properties whose values vary across marks.</p><p>Property sharing is at the core of our approach. All visual relationships in a StructGraphics visualization are defined through property sharing. Sharing puts hard constraints on a group of property values. For example, since the width property is shared ( <ref type="figure" target="#fig_3">Fig. 5a</ref>), changing the width of a rectangle in the collection will cause the width of the other rectangles to change as well. Likewise, since the x property is shared, all the rectangles within each collection are vertically aligned. Thus, property sharing can serve as an alignment mechanism that further constrains a visualization layout (DP 2 ). <ref type="figure" target="#fig_3">Fig. 5b</ref> presents part of the children properties of the B-level collection. Observe that the fill property is shared at this level, and the same four colors are common in both A-level collections. In contrast, the y and height properties are variable at both levels, thus they can freely change. Users can modify a property structure by dragging the label of a property from the section of variable properties to the section of shared properties, and vice-versa.</p><p>The tabular structure in <ref type="figure" target="#fig_3">Fig. 5c</ref> shows all properties that are variable at least at one level of the visualization hierarchy, where each variable property is represented by a separate column. Two additional columns in the table represent the identifiers of the A-level collections (A.id) and the identifiers of the marks (id). Such tabular structures serve as templates for generating data tables in the spreadsheet (see Sec. 4.5), where each column can be mapped to a data variable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.4">Property Grouping and Scoping</head><p>As we discussed earlier, groups can expose the properties of individual marks. For example, the designer of our infographic in <ref type="figure">Fig. 1</ref> wants to vary the sail height but keep the height of the hull and the flag constant. StructGraphics supports this design through a fine-grained interface for structuring properties within groups. <ref type="figure" target="#fig_3">Fig. 5e</ref> shows how the inspector displays the property structure of a group. Notice that some properties (e.g., reference-y and thickness) are bound across all marks and have a common value (and name). Other properties (e.g., fill) are split into distinct properties and are named by the mark to which they refer (e.g., fill1, fill2, and fill3). Finally, some properties (e.g., reference-x) are only partially split for a subset of the marks in the group.</p><p>Unfortunately, the number of individual properties in a group can become large and cause the tabular structures of parent collections to explode in size. We address this problem with property scoping. Specifically, the inspector lets users pick which properties to make public, i.e., visible to parent collections, by hovering over a property of interest and pressing a key (see <ref type="figure" target="#fig_3">Fig. 5e-f)</ref>. As <ref type="figure" target="#fig_3">Fig. 5g</ref> shows, the property structure of a parent collection includes the public only properties of its children. Users can change the visibility of group properties at any moment, and the property structure of parent collections are constantly updated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.5">Connections and Directional Links</head><p>Collections provide additional properties to describe connections among their children. Connections that StructGraphics supports include poly lines, areas, and Bézier curves. The ordering of connections follows the natural ordering of the children in a collection. Connections can be created among the siblings of any type of node, including marks, groups, and sub-collections. Furthermore, StructGraphics allows for directional links between any two nodes within a collection. For example, the flow connections in the Sankey diagram of <ref type="figure">Fig. 1</ref> are weighted directional links between the marks of the two nested collections. As shown in <ref type="figure" target="#fig_3">Fig. 5d</ref>, links are represented as rows in a tabular structure. Each row includes the identifier of the link's source and destination, and a weight. For this type of visualization, the weight expresses the height of a flow connection in pixels. As with other property structures, the designer can later use the table of links as a template to generate the data that define the flows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Constructing Visualization Designs</head><p>The StructGraphics user interface provides a set of tools that enable designers to draw shapes, create groups and collections, reuse them, structure their properties, map them to data variables, and decorate visualizations with axes, labels, and legends.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.1">Drawing, Replicating, Grouping, and Linking</head><p>As in traditional vector-graphics editors, users can draw shapes on the canvas and then resize them with interactive handles. The effect of all object manipulations is communicated to users with an "elastic band." The band shows the trace of an ongoing manipulation to help users trace their edits and easily cancel them, e.g., by pressing ESC. Our implementation resembles the Dwell-and-Spring technique <ref type="bibr" target="#b6">[8]</ref> and serves as the base for all tools in the sketcher (see <ref type="figure" target="#fig_4">Fig. 6</ref>) by coupling direct manipulation with crossing-based selection <ref type="bibr" target="#b5">[7]</ref>.</p><p>A replication (multiply) tool accelerates the creation of multiple similar objects. The tool substitutes the "repeat action" of Data Illustrator <ref type="bibr" target="#b20">[21]</ref> but does not require the user to associate the action with a data dimension (see <ref type="figure" target="#fig_0">Fig. 2b</ref>). Users can replicate individual marks, groups, collections, and full visualization trees. As shown in <ref type="figure" target="#fig_4">Fig. 6</ref>, they can also extend the internal nodes of a collection to achieve a target design. In such cases, the tool ensures that the collection's layout and property sharing constraints are respected. StructGraphics provides additional tools for grouping canvas objects (marks, groups, or collections) into groups or collections . Users can also draw direct links between marks (see <ref type="figure" target="#fig_4">Fig. 6</ref>), where connected marks must belong to the same visualization tree, i.e., appear under the same top-level collection.</p><p>As users create collections, groups, and connections, property structures are automatically updated in a way that no conflicts arise. For example, StructGraphics ensures that the height property in the Sankey diagram of <ref type="figure">Fig. 1</ref> is not shared across rectangles. Likewise, the height of connected rectangles is constantly updated (e.g., the height of a source mark increases) to remain consistent with incoming and outgoing flows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.2">By-Example Design Specification</head><p>Creating the right property structure can be tedious, since the designer must specify which properties are shared or variable at each level of the visualization tree. StructGraphics' grouping tools relax this problem by trying to "guess" the designer's target structure based on the property values of the grouped objects, which serve as examples. To this end, we calculate statistics for alternative layout configuration and pick the most probable configuration. Overall, StructGraphics' by-example specification approach supports a design workflow with four main steps (see <ref type="figure" target="#fig_0">Fig. 2</ref> and <ref type="figure" target="#fig_4">Fig. 6</ref>): (i) draw a shape, (ii) replicate it, (iii) vary the properties of one or more replicas, and (iv) then group.</p><p>In order to decide whether a property is shared or variable, we analyze its variance (in pixels) across all grouped objects. If it is below a threshold value, the property is considered as shared. Likewise, we infer reference points, alignment, and distribution constraints by looking at all possible configurations of distance and spacing between grouped nodes. We then try to identify the most common patterns. When more than one possible configurations arise, e.g., equal distances between centers but also equal spacing, we choose a configuration based on a list of priority rules. We prioritize center-based alignments and distance-based distributions on the x-axis and bottom-based alignments and spacing-based distributions on the y-axis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4.3">Design Reuse</head><p>Since visualization designs are independent of raw data and data schemas, they can be easily reused (DP 3 ). StructGraphics supports reuse through a library of visualizations (see <ref type="figure">Fig. 1a</ref>), which can contain individual marks, groups, or collections. The library stores the full visualization tree of a node, including its property structures. Users simply need to right-click on the node and then choose from a menu to add it to the library. Later, they can drag its thumbnail from the library into the canvas to create a copy and work on a different variation.</p><p>Visualization nodes, trees, and full libraries are exported and saved as JavaScript Object Notation (JSON) specification files. They can be easily imported into the user's workspace and shared. Our gallery presents several examples of StructGraphics JSON specification files. In addition to the visualization structure, our JSON syntax can describe a full StructGraphics workspace, including the tabular structures in the spreadsheet and their transformations (see next section). Thus, it could be further used to capture the full history of a design process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Binding Visualization Designs with Data</head><p>A "clear trend" observed by Bigelow et al. <ref type="bibr" target="#b7">[9]</ref> was that "manual encoding is not only tolerated, but even embraced by designers <ref type="bibr">[...]</ref>." However, the authors also report that "manual encoding consumes significant time and effort <ref type="bibr">[...]</ref>." StructGraphics supports a manual data-encoding workflow but automates it by making use of the sharing relationships in a visualization property structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.1">From Graphical Properties to Data Variables</head><p>StructGraphics does not assume that a dataset pre-exists (DP 1 ). Instead, it helps users to create it from scratch from their design (DP 4 ). Property structures in the inspector (see <ref type="figure" target="#fig_3">Fig. 5</ref>), including individual property values, property lists, and property tables, are the basis for creating a data template. At any moment, the user can drag a property structure from the inspector into the spreadsheet. In the spreadsheet, properties are transformed into variables and appear in columns (see <ref type="figure">Fig. 7</ref>).</p><p>Initially, variables are named after properties, but users can designate names that represent real data dimensions, such as Time or Country. Users can then type text and numbers. Variables are bidirectionally bound to the original properties and are also subject to their structural constraints. As a result, changing a variable value by editing a cell <ref type="figure">Fig. 7</ref>. Transforming variables. Left: Applying a functional transformation to a variable that is bound to the height property. Right: Applying a symbolic transformation to the fill property and replacing its category values. Modifying the yellow value will cause all yellow cells to update.</p><p>in the spreadsheet will cause other cells to change, as long as they all correspond to the same property sharing. Such constraints automate the manual entry of data and prevent data-entry errors.</p><p>Alternatively, users can import data from external spreadsheet applications, such as Microsoft Excel, through copy and paste. StructGraphics thus takes advantage of the functionality of familiar applications for data formatting. Notice that a table in the spreadsheet can take a wide or a long form, depending on whether it is created from properties in the "Children Properties" section ( <ref type="figure" target="#fig_3">Fig. 5b)</ref> or the "Tabular Structure" section ( <ref type="figure" target="#fig_3">Fig. 5c</ref>) of the inspector. Therefore, a tuple in the spreadsheet does not necessarily represent a single glyph (see analysis by Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref>). It can also represent a lower-level collection. In this case, the properties of its children will appear as separate columns.</p><p>A StructGraphics spreadsheet is fully synchronized with the sketcher and the inspector. Changes in a visualization can be initiated at any of these three interfaces and are immediately propagated to the two others. When the user activates the "replicate" tool to add new children to a collection, the data representations of the collection are updated with new rows or columns. However, users cannot currently add new children to a collection from the spreadsheet.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.2">Data Transformations</head><p>Traditional visualization systems use scales <ref type="bibr" target="#b54">[54]</ref> to map data dimensions to visual properties. StructGraphics follows the inverse approach, where users optionally transform properties to real units. To this end, the spreadsheet interface supports two transformation types (see <ref type="figure">Fig. 7</ref>): Functional. They are expressed as mathematical functions and apply to numerical values. The spreadsheet provides a formula field for editing their syntax. To establish bidirectional mappings between original and transformed values, the system calls a solver to derive the inverse function. If, for example, the user types a function Seats = height/2−5, the solver will also derive the inverse function: height = Seats * 2 + 10. StructGraphics will then use this formula to map the values entered in the spreadsheet to height property values. Symbolic. They define 1-by-1 mappings between individual property values and alphanumerics that represent discrete categories. Struct-Graphics initially assigns default names as categories. Then, users can edit their values. All instances of a category are linked together since they are bound to a shared property (see <ref type="figure">Fig. 7</ref>-Right). Changing an instance will automatically cause all other instances to change as well.</p><p>Transformations apply to the variables in the spreadsheet, not to the original properties. Therefore, users can create multiple variables from a single property at different areas of the spreadsheet, where each variable can take a different function.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5.3">Axes, Labels, and Legends</head><p>Variables in a spreadsheet are also the basis for generating axes, labels, and legends. The user can right-click on a variable to activate a menu and choose to associate it with an axis or a legend, where only variables with symbolic transformations can generate legends. Likewise, the user can opt to decorate visualization nodes with a variable's values, e.g., to show the political parties ("Conservative", "Labour," etc.) on the flows of the Sankey diagram in <ref type="figure">Fig. 1</ref>. Collection skeletons serve as scaffolds for constructing axes. If the user activates an axis of a collection, the axis inherits the geometry and alignment constraints of its skeleton. <ref type="figure">Fig. 8</ref>. Alternative binding patterns for the fill property of a B-level collection. We take as example the bottom visualization of <ref type="figure">Fig. 1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.2.1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>No sharing</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Implementation Details</head><p>The StructGraphics system <ref type="bibr">[4]</ref> is a JavaFX <ref type="bibr" target="#b2">[3]</ref> application. The spreadsheet UI is an extension of the SpreadsheetView class of ControlsFX <ref type="bibr">[1]</ref>. The spreadsheet's formula solver uses the Symja algebra library <ref type="bibr">[5]</ref>.</p><p>A major implementation challenge was how to create a reactive and fully synchronized UI that continuously respects all constraints of property structures. We use the property design pattern of JavaFX but extend its bi-directional binding mechanism to a group (multidirectional) binding mechanism that ensures that each property in a sharing relationship is only updated once. StructGraphics applies group property bindings at different levels of a visualization hierarchy that determine how properties are shared within each group or collection. <ref type="figure">Fig. 8</ref> shows alternative bindings of the fill property for the bottom visualization of <ref type="figure">Fig. 1</ref>. The approach generalizes to larger numbers of hierarchy levels, where for each level, we add a new binding dimension.</p><p>StructGraphics ensures that all sharing bindings of the same level are synchronized. For example, if the A-level sharing breaks at the first subcollection of our example ("A. Collection 2.1"), then the sharing will also break at the second sub-collection ("A. Collection 2.2"). As a result, users can change a property structure at any level of a visualization tree, knowing that the system will automatically apply the change to all other nodes of the same level. Finally, StructGraphics ensures that different bindings (as well as layout constraints) do not conflict with each other. For example, suppose the marks in <ref type="figure">Fig. 8</ref> are equally spaced along the y axis through a spacing distribution constraint, while the height property is variable. Sharing their y property at the B-level would introduce positioning conflicts, and any change in the height of a rectangle would result in unpredictable behavior. StructGraphics automatically breaks the distribution constraint in this case to avoid the conflict.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EVALUATION</head><p>Ren et al. <ref type="bibr" target="#b33">[34]</ref> discuss several approaches for evaluating visualization authoring systems, including informative, reproduction, comparative, free-form user studies, and image or video galleries. More recently, Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref> introduce critical reflections as an informal method for comparing systems and assessing how each system meets its authors' assumptions. We use a mix of these methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Gallery</head><p>We demonstrate the expressive power of StructGraphics with a gallery of visualizations. It includes high-resolution images, videos that illustrate their creation process, as well as StructGraphics JSON files that specify the structure of each visualization and their full workspace. It is available at: https://www.lri.fr/˜fanis/StructGraphics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">User Feedback</head><p>We held individual sessions with seven participants to collect user feedback. The first two participants (P1, P2) participated in a laboratory environment in proximity with the investigator. However, due to the COVID-19 outbreak, we interrupted the study and adapted its protocol to remote sessions. We used the TeamViewer software <ref type="bibr" target="#b5">[7]</ref>, which allowed participants to view and take control of the investigator's remote workspace. Participants used a home setup that varied across sessions. Our materials and data are available at: https://osf.io/dgbae/. Participants: The participants were volunteers (four women) with diverse backgrounds. P1, P5, and P7 (denoted below as •) had 10-25 years of professional experience in graphic design and had practiced visualization design and infographics. P1 had also experience in information visualization research (Ph.D. level). P3 and P6 were faculty members with more than 12 years of experience in information visualization research. P2 was a Ph.D. student with expertise in visualization grammars, while P4 was postdoctoral researcher in interaction design. Method: Sessions lasted 70 to 85 minutes. The participants filled out a pre-study background questionnaire. The investigator introduced the StructGraphics user interface and provided a step-by-step tutorial (45 to 50 minutes) that explained its main features. During the tutorial, the participants carried out small tasks to test their understanding. After the tutorial, they were asked to complete a chart reproduction task, which involved building a nested visualization structure, applying data transformations, editing specific data values, and displaying axes and legends. After the end of the session, each participant was asked to complete a post-study questionnaire. The questionnaire evaluated the usability of the system with respect to learning, creation difficulty, and overall experience on a 5-point scale. The participants were also asked to report on their own approach to visualization creation (data-driven vs. graphics-driven) and reflect on uses and limitations of the system.</p><p>Results: The mean rating for learning difficulty was 2.43 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head><p>(1 = very easy, 5 = very difficult): the tool "is pretty easy to use and learn" (P7), "is straightforward to use once you understand the underlying mechanism" (P4). P3 found that it "is extremely flexible and rich, but requires some getting used to." P6 liked that "there were only a few tools/concepts in total" but added that "one difficulty compared to freeform drawing with Illustrator is that you have to think of constraints right from the start." A challenge that participants faced was understanding how to change the sharing of properties at the correct hierarchy level. P7 remarked that at higher collection levels, "shared/variable settings are a bit complex to understand" and wondered whether their presentation in the inspector could become simpler.</p><p>The mean rating for creation difficulty was 1.71 (1 = very easy, 5 = very difficult). P5 and P7 (expert designers) were enthusiastic. P5 explained that "it's very pleasing to be able to easily create graphics with this tool, as it takes me much longer with my usual software." P7 found that it is "both intuitive and logic" and "allows to start visually and then to insert the real values -really easier than struggling with the settings panels and tabs of a pre-existing graph in Excel."</p><p>Concerning the participants' overall experience, the mean rating was 2.0 2 3</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head><p>(1 = very enjoyable, 5 = very frustrating). P6 liked "that you can drag graphical properties to the spreadsheet, and edit them." According to this participant, this feature could be useful for other graphic design tasks "beyond linking visualizations to data." P3 reported that "this is a fun tool to experiment with. The logic behind the tool is intuitive and it can allow the creation of interesting visualizations with simple drag and drop operations." In contrast, P4 found that the grouping "is not 100% intuitive." She would prefer to manipulate "individual objects first, and then allow building groups later on."</p><p>Reflecting on their own approach, few only participants could identify it as purely data-driven (P2) or purely graphics-driven (P5). P1, P3, P6, and P7 explained that their approach depends on the type or the phase of the task. According to P3, data-exploration tasks are always data-driven, and the tool is not well adapted. However, "when building a vis for communication I often start with the message I want to communicate in mind and think of the visuals first <ref type="bibr">[...]</ref> the tool makes this process of adapting subtle properties very easy to do, helps customize all aspects of the visual and gives absolute control on what the vis will look at the end" (P3). P6 expressed the opinion that whether the task is data-driven ("graphic meant to communicate a message or insights about a particular dataset") or not ("designing a visualization meant to work with many datasets"), "visualization is always graphics-driven." The participant continued that "you can definitely design a visualization without a dataset" but "you eventually always have to test it and refine it by plugging data" (P6). In the same line, P7 argued that "data first" or "graphics first" are both true, since some graphic representations match specific datasets, while others do not. But the designer emphasized that "it is important to have an idea of what things could look like, even if data is not yet complete (or arrived)" (P7). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Critical Reflections</head><p>Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref> present their collective critical reflections. Here, although we report on the author's own reflections, we use the analysis of Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref> as reference. We reflect on StructGraphics' capabilities, assumptions, and limitations by referring to results of our user study. We also compare StructGraphics to existing visualization authoring systems and discuss future extensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.1">Comparative Scenario</head><p>We start with a scenario that reproduces A Field Guide to Red and Blue America, a nested visualization published in The Wall Street Journal <ref type="bibr" target="#b58">[58]</ref>. Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref> use the same scenario to compare Lyra <ref type="bibr" target="#b39">[40]</ref>, Data Illustrator <ref type="bibr" target="#b20">[21]</ref>, and Charticulator <ref type="bibr" target="#b32">[33]</ref>. The original visualization contains a bar chart for each of the 51 states of USA that depicts the balance between votes for Democrats and Republicans from 1980 to 2012. <ref type="figure" target="#fig_5">Fig. 9</ref> shows the full visualization on StructGraphics' sketcher, while part of the dataset is shown on the spreadsheet. A video demonstration of the creation process and the JSON specification of the visualization are included in our gallery.</p><p>As a first step, we bring a bar chart design from our library or build it from scratch. To do so, we draw a rectangle and replicate it along the x direction. Then, we vary the height of the rectangles and use the tool to create a collection. In the inspector, we make their fill property variable, apply a red and blue color, and refine their alignement constraints within the collection: A.sticky-x = Yes and A.sticky-y = Yes. As a second step, we create 50 copies of the bar chart and then create a B-level collection. We do so by replicating the bar chart: first along the y axis (×5) and then along the x axis (×10). In the inspector, we ensure that height and fill are variable at all levels. We then explore alternative layouts by freely moving the bar charts on the cavas.</p><p>We now decide to bind our visualization with the original dataset, which contains the following columns: State, GridX and GridY coordinates, Year, Inclination ("Dem." or "Rep."), and PV I, a relative vote measure that is negative for Democrats and positive for Republicans. We open it with Microsoft Excel and sort it first by Year and then by State. In the inspector, we navigate to the tabular structure of the top collection, drag the columns A.id, A.x, A.y, height, and f ill, and drop them into the spreadsheet. We rename A.id to "State," turn its transformation to symbolic, and bring the State column from Excel via copy and paste. Similarly, we make the f ill variable symbolic and copy the Inclination column. For the other variables (A.x, A.y, height), we keep a functional transformation and choose a convenient function (e.g., GridY = A.y/100, GridX = A.x/120, PV I = 0.7 * height) to map pixels to data units. When we copy their values from Excel, all bar charts take the correct height values and positions. To display the names of the states, we right-click on the "State" column and choose "Show on glyphs" from the menu. Later, we decide to drag the "Hawaii" chart further left to highlight the relative geographic location of this state.</p><p>Finally, we add a larger bar chart to explain the coloring scheme and dimensions of each bar chart (see <ref type="figure" target="#fig_5">Fig. 9</ref>). We copy the "West Virginia" bar chart, make its bars wider and vary their heights. We drag its x, y, and f ill properties to the spreadsheet, where we add labels and transformations (as above) and populate axis labels and a legend.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.2">Critical Reflections on System Components</head><p>We first reflect on the components of StructGraphics visualizations. Marks and Glyphs. Like Data Illustrator <ref type="bibr" target="#b20">[21]</ref>, StructGraphics requires its users to activate a tool from the toolbar to draw a mark. This approach facilitates the use of key shortcuts, which are extensively used by design experts <ref type="bibr" target="#b48">[48]</ref>. Currently, StructGraphics only supports predefined shapes (like Lyra and Charticulator), lacking Data Illustrator's capabilities of drawing arbitrary paths. As in Data Illustrator, StructGraphics groups are drawn directly on the canvas. In contrast to groups or glyphs in Data Illustrator and Charticulator, groups in StructGraphics can be infinitely nested. A strength of our design is that groups and collections share the same representation, behavior, and creation process.</p><p>Unlike Data Illustrator and Lyra, StructGraphics does not treat curves, areas, and connections as marks -it represents them as separate properties within collections. This design is closer to Charticulator, which also expresses connections as separate objects, but StructGraphics further lets users create connections among sub-collections (not only among glyphs). Data Editing and Data Binding. The spreadsheet is an integral component of the StructGraphics user interface. It enables users to shape their dataset based on the visual structure of the visualization design, apply data transformations to create mappings between pixels and data units, edit individual or multiple values (e.g., by copy-paste), and communicate with external spreadsheet applications. This is a fundamental difference between StructGraphics and current visualization authoring tools <ref type="bibr" target="#b40">[41]</ref>, which do not deal with data entry and data formatting.</p><p>The data-binding philosophy of StructGraphics is also distinct. In previous systems <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b39">40]</ref>, data-binding precedes and fully specifies the creation of all instances of a certain type of glyphs. In contrast, StructGraphics requires that all glyph instances are explicitly created by the user. For example, in our scenario, we created all 51 bar charts (one for each state) directly on the canvas (see <ref type="figure">Fig. 10</ref>). Unfortunately, the creation process becomes cumbersome as the number of glyphs increases. Thus, StructGraphics may not be suitable if the goal is to visualize large datasets with hundreds or thousands of data points.</p><p>Furthermore, even after property structures have been bound to data, StructGraphics still allows users to freely manipulate the graphical properties of their visualizations on the sketcher or the inspector. Bindings between data and graphical properties are fully bi-directional, allowing users to explore visual layouts without being constrained by specific data values. Users can further bind the same property structure with different pieces of data and transformations to explore alternative solutions. On the downside, this freedom raises ethical considerations, since users may be tempted to alter or fake their data in order to achieve a compelling visual result. Our study questionnaire asked our participants' opinion on this issue. Overall, participants did not view it as a problem: "fake graphs based on fake data is a really different problem" (P7), "if people want to create fake data, they can already do it without those tools" (P6). P3 expressed the same opinion but also added: "I believe it is easy to make mistakes <ref type="bibr">[...]</ref> if you have thousands of data points, this is hard to double-check." Adding common scales of measurement and data summarization mechanisms could potentially improve data entry and prevent errors in the spreadsheet interface. Scales, Axes, and Legends. In StructGraphics, scales, axes, and legends are generated at will by interacting with the data variables at the spreadsheet interface. However, the sketcher does not currently allow users to edit them and further customize them. Referring to this lack of support, P4 complained that "it is a little bit frustrating that you cannot manipulate everything on the interface." This is a clear limitation in comparison with the capabilities of existing tools <ref type="bibr" target="#b40">[41]</ref>. Layout. Lyra and Charticulator use anchors to reference and relatively position visual objets. In StructGraphics, anchors are replaced by x and y reference positions at the level of marks, and skeletons at the level of groups and collections. Skeletons are constantly visible such that designers can directly manipulate the position of groups and collections (P6: "I like that collections are reified. The fact that groups are invisible is definitely an issue with Illustrator"). Like Charticulator, StructGraphics can express layout constraints at the level <ref type="figure">Fig. 10</ref>. Main steps for creating the layout of the visualization in <ref type="figure" target="#fig_5">Fig. 9</ref>.</p><p>of graphics. Both systems support alignment and spacing constraints but through different mechanisms. Charticulator's constraints are based on the alignment and margin properties of marks and a mechanism of persistent snapping. StructGraphics' constraints are based on the stickiness and distribution properties of groups and collections and their sharing structures. Note that StructGraphics' sharing mechanism allows for linking together other properties of a glyph. For example, we can create a group of three rectangles to represent an error bar, where the fill, width, and height of the top and bottom rectangles are shared and thus commonly change. This mechanism relieves users from having to bind the properties of each individual object in a group to a data variable and facilitates reuse.</p><p>Charticulator makes use of a constraint solver that could potentially support more complex layout constraints. Nevertheless, further complexity comes with a cost, since users may not anticipate the solver's logic. A major requirement for StructGraphics' design was that object manipulations must be incremental across the full interface, where all layout constraints are constantly evaluated and propagated as the user directly manipulates objects. Such behavior requires simple rules with predictable outcomes.</p><p>StructGraphics uses the same layout mechanisms for groups and collections, while users can define the full layout without a dataset (see <ref type="figure">Fig. 10</ref>: Steps 1-4). In contrast, Lyra, Data Illustrator, and Charticulator require the visualization author to bind a layout structure to the variables of a dataset. As we discuss below, this key difference derives from our different assumptions about the user task. Finally, StructGraphics lacks Charticulator's support for polar and curve coordinates. In order to support alternative coordinate systems and nested 2D representations (e.g., as tree maps in Lyra), we need to extend StructGraphics with additional by-example-specification tools and layout mechanisms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3.3">Critical Reflections on our Assumptions</head><p>We also reflect on how StructGraphics' design meets our assumptions. The Task: Designing, not Authoring. A fundamental assumption of the developers of Lyra, Data Illustrator, and Charticulator "is that people want to author a chart, not to design one" <ref type="bibr" target="#b40">[41]</ref>. For StructGraphics, we reverse this assumption. We assume that users want to design a chart, not to author one. Our participants' feedback confirms this assumption. Several participants expressed the opinion that the tool is not well adapted to purely data-driven tasks, in particular data exploration (P3) or visualization generation from existing datasets (P1, P2, P4). In contrast, they all found it valuable for design-oriented tasks (P1, P2, P6, P7), for education purposes (P4), for generating "simulation data" (P4), or for data communication purposes <ref type="figure" target="#fig_1">(P3, P5)</ref>.</p><p>In summary, visualization authoring is a data-driven activity, whereas design tasks are often driven by graphics. StructGraphics lets designers focus on their graphics, where any reference to data is only implicit. The distinction between "explicit" and "implicit" data is fundamental for design tasks. Data can be incomplete or ill defined in the designer's mind and progressively emerge as a visual structure takes shape. The Designer: Literacy &amp; Skill Transfer. Since we target design practitioners, we assumed that StructGraphics users have experience with vector-graphics editing applications and spreadsheets, are familiar with visualization tools and grammars but may not know how to code. As we discussed earlier, the participants felt that the tool was overall not difficult to learn but were sometimes perplexed about how to locate and manage the property structures in the inspector. A possible direction for improving the editing experience of property structures is to reify their sharing relationships through constraint holders that users can directly interact with on the sketcher. P6 also remarked that the way transforma-tions are expressed in the formula editor (e.g., deaths = height * 10) is different from how "visualization practitioners are used to think" (e.g., height = deaths/10). Since the StructGraphics workflow may require users to think in either direction, a better approach might be to allow them to switch between those two representations.</p><p>The Data: Formatted during Design. Unlike Satyanarayan et al. <ref type="bibr" target="#b40">[41]</ref>, we do not assume that data are appropriately formatted prior to the task. In StructGraphics, the data schema is defined as the user constructs a visualization structure, based on the property sharing of its components. Users may also decide to not deal with specific data values at all, or even split their data into different areas of the spreadsheet. However, there are situations (like in our scenario) where users will need to bring real data. StructGraphics provides data-transformation capabilities but mostly relies on external spreadsheet applications for loading and transforming existing datasets. For the dataset of our example, we used the formula editor of Microsoft Excel to derive the Inclination column: IF(PV I &gt; 0, "Rep.", "Dem."). We then copied the column and pasted it to the StructGraphics spreadsheet to associate it with the fill property of the bars. However, the functional relationship between PVI (mapped to height) and Inclination (mapped to fill) is not expressed at the level of the property structures. Thus, if the user turns the height of a bar from positive to negative , its fill color will not automatically change to blue. More generally, StructGraphics cannot express functional dependencies between properties, which would require more expressive visual languages, such as iVoLVER <ref type="bibr" target="#b25">[26]</ref> or Linkify <ref type="bibr" target="#b22">[23]</ref>. We defer the study of this problem to future work.</p><p>Export, Reuse, &amp; Interoperability. Reuse is a fondamental activity of all design practices. A strength of StructGraphics is the fact that graphical structures of any nesting level are fully reusable and independent of datasets or data schemas. Designers can further build their own libraries of visualization structures and share them as lightweight JSON files. P1 commented that StructGraphics would be more valuable as an intermediate design tool, which requires better interoperability with other visualization software. A future direction is to develop wrappers to/from popular formats, such as Vega <ref type="bibr" target="#b42">[43]</ref> (as in Lyra <ref type="bibr" target="#b39">[40]</ref>), Power BI custom visuals (as in Charticulator <ref type="bibr" target="#b32">[33]</ref>), or ggplot2 [2] code snippets. Finally, during their task, some participants expressed the need to apply structural changes to their collections, such as directly adding shapes to existing groups in the canvas. In order to construct a visualization with StructGraphics, the designer has to start from its basic shapes and progressively move to higher-level groups and collections. Unfortunately, the reverse workflow is not currently supported. For example, suppose a designer reuses the structure of the Sankey diagram in <ref type="figure">Fig. 1</ref> but wants to replace the rectangular shapes by more complex glyphs, such as the sailboats of the top visualization in the same figure. Extending StructGraphics to support such top-down visualization constructions would allow designers to experiment with richer design-remixing workflows. Other interesting extensions in this direction include adding partitioning tools (as in Data Illustrator <ref type="bibr" target="#b20">[21]</ref>) and supporting embedded merge and split operations <ref type="bibr" target="#b38">[39]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">SUMMARY AND CONCLUSION</head><p>We presented StructGraphics, a new graphics-driven approach for data visualization design. StructGraphics enable designers to produce dataagnostic visualizations that they can then reuse with different datasets. We introduced a framework for constructing property structures that determine how graphical properties are grouped and shared among the nodes of a visualization hierarchy. We showed that property structures act both as graphical constraints and as templates for data.</p><p>Creating a visualization design tool that is appropriate for all users and design needs may be impossible or even not desirable <ref type="bibr" target="#b7">[9]</ref>. The StructGraphics approach provides a flexible design workflow but is still limited in the range of design solutions it supports. We second Liu et al. <ref type="bibr" target="#b20">[21]</ref> who throughout their design iterations observe that constructing a "coherent set of concepts and tools that behave consistently" can be "a great challenge." How to extend the StructGraphics approach to deal with more expressive visualizations and alternative design workflows is an exiting challenge for future research.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>(a) create a group (b) replicate (multiply) the group (c) vary the copies &amp; create a collection (d) make it an area chart &amp; r (e) initiate a dataset d r a g Representative scenario: (a) group primitive shapes; (b) create multiple copies of the group; (c) vary their properties to produce an example for a new collection; (d) customize the collection; and (e) drag its variable properties from the inspector to the spreadsheet to create a data table.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>StructGraphic visualization elements: marks, groups, and collections. Left: Their grammar. Right: An example of a visualization tree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 4 .</head><label>4</label><figDesc>Layout properties of a group. (a) The three marks in the group are equally spaced along the y axis. (b) The stickiness properties change to "Yes", so the marks are glued to the group's skeleton. (c) When changing the height of the rectangular mark, the other marks move upwards to respect the spacing distribution constraints. (d) The user manipulates the red handle to increase their in-between space.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 5 .</head><label>5</label><figDesc>Property structures of the visualizations in Fig. 1, as represented in the StructGraphics inspector. Left: (a) The children properties of the first A-level collection divided into two groups: shared and variable. (b) Part of the children properties of the B-level collection. (c) A tabular structure that summarizes all variable properties. (d) Structure of connections between nodes. Right: (e) Structure of the children properties of an A-level group. The user can choose which properties to make public. (f) Those properties are highlighted and appear in the "Public (Visible to Collections)" section. (g) The structure of children properties in the B-level collection. Observe that only public group properties are shown.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 6 .</head><label>6</label><figDesc>Creating nested collections: Sankey diagram of Fig. 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 9 .</head><label>9</label><figDesc>Recreating the Wall Street Journal's A Field Guide to Red and Blue America visualization<ref type="bibr" target="#b58">[58]</ref> with StructGraphics.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Replicate it (x51), and make a B-level collection 5</title>
		<editor>GridX -&gt; A.x GridY -&gt; A.y</editor>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="https://github.com/tidyverse/ggplot2" />
		<title level="m">ControlsFX</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Javafx</surname></persName>
		</author>
		<ptr target="https://openjfx.io/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<ptr target="https://gitlab.inria.fr/structgraphics/code" />
		<title level="m">StructGraphics code repository</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Tableau</surname></persName>
		</author>
		<ptr target="https://www.tableau.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">More than dotting the i&apos;s -foundations for crossingbased interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Accot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zhai</surname></persName>
		</author>
		<idno type="DOI">10.1145/503376.503390</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;02</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;02<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="73" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Dwell-and-spring: Undo for direct manipulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Appert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Chapuis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Pietriga</surname></persName>
		</author>
		<idno type="DOI">10.1145/2207676.2208339</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;12</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;12<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1957" to="1966" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Reflections on how designers design with data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bigelow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Drucker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2014 International Working Conference on Advanced Visual Interfaces, AVI &apos;14</title>
		<meeting>the 2014 International Working Conference on Advanced Visual Interfaces, AVI &apos;14</meeting>
		<imprint>
			<biblScope unit="page" from="17" to="24" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title/>
		<idno type="DOI">10.1145/2598153.2598175</idno>
		<imprint>
			<date type="published" when="2014" />
			<publisher>ACM</publisher>
			<pubPlace>New York, NY, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Iterating between tools to create and edit visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bigelow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Drucker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fisher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Meyer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2598609</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="481" to="490" />
			<date type="published" when="2017-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Protovis: A graphical toolkit for visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2009.174</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="1121" to="1129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">D3: Data-driven documents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Bostock</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Ogievetsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2011.185</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2301" to="2309" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Beyond snapping: Persistent, tweakable alignment and distribution with StickyLines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ciolfi Felice</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Maudet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Mackay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Beaudouin-Lafon</surname></persName>
		</author>
		<idno type="DOI">10.1145/2984511.2984577</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 29th Annual Symposium on User Interface Software and Technology, UIST &apos;16</title>
		<meeting>the 29th Annual Symposium on User Interface Software and Technology, UIST &apos;16<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="133" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Spreadsheets as user interfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dix</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Cowgill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bashford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mcveigh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ridgewell</surname></persName>
		</author>
		<idno type="DOI">10.1145/2909132.2909271</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the International Working Conference on Advanced Visual Interfaces, AVI &apos;16</title>
		<meeting>the International Working Conference on Advanced Visual Interfaces, AVI &apos;16<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="192" to="195" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Augmenting the scope of interactions with implicit and explicit graphical structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hoarau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Conversy</surname></persName>
		</author>
		<idno type="DOI">10.1145/2207676.2208337</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;12</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;12<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1937" to="1946" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">ChartSense: Interactive data extraction from chart images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Jung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hwang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Seo</surname></persName>
		</author>
		<idno type="DOI">10.1145/3025453.3025957</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems, CHI &apos;17</title>
		<meeting>the 2017 CHI Conference on Human Factors in Computing Systems, CHI &apos;17<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="6706" to="6717" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">DataToon: Drawing dynamic network comics with pen + touch interaction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">W</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Henry Riche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Bach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">A</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brehmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hinckley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pahud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Mcguffin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CHI 2019</title>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2019-05" />
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Data-Driven Guides: Supporting expressive design for information graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">W</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Schweickart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dontcheva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="issue">99</biblScope>
			<biblScope unit="page" from="1" to="1" />
			<date type="published" when="2017-01" />
		</imprint>
	</monogr>
	<note>PP</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Presentation-oriented visualization techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kosara</surname></persName>
		</author>
		<idno type="DOI">10.1109/MCG.2016.2</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="80" to="85" />
			<date type="published" when="2016-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">SketchStory: Telling more engaging stories with data through freeform sketching</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Habib Kazi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Smith</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2013.191</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page">2013</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Data Illustrator: Augmenting vector design tools with lazy data binding for expressive visualization authoring</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Wilson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dontcheva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Delorey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Grigg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kerr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stasko</surname></persName>
		</author>
		<idno type="DOI">10.1145/3173574.3173697</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems, CHI &apos;18</title>
		<meeting>the 2018 CHI Conference on Human Factors in Computing Systems, CHI &apos;18<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018" />
			<biblScope unit="volume">123</biblScope>
			<biblScope unit="page" from="1" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Labour fails to make big gains in england local elections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mance</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Pickard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hughes</surname></persName>
		</author>
		<ptr target="https://www.ft.com/content/5f2a3dcc-4f5b-11e8-a7a9-37318e776bab" />
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Beyond grids: Interactive graphical substrates to structure digital layout</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Maudet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Jalal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Tchernavskij</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Beaudouin-Lafon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Mackay</surname></persName>
		</author>
		<idno type="DOI">10.1145/3025453.3025718</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems, CHI &apos;17</title>
		<meeting>the 2017 CHI Conference on Human Factors in Computing Systems, CHI &apos;17<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="5053" to="5064" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">VisComposer: A visual programmable composition environment for information visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mei</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Guan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hu</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.visinf.2018.04.008</idno>
	</analytic>
	<monogr>
		<title level="m">Visual Informatics</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="71" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Bottom-up vs. top-down: Trade-offs in efficiency, understanding, freedom and creativity with infovis tools</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Méndez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Hinrichs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Nacenta</surname></persName>
		</author>
		<idno type="DOI">10.1145/3025453.3025942</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems, CHI &apos;17</title>
		<meeting>the 2017 CHI Conference on Human Factors in Computing Systems, CHI &apos;17<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="841" to="852" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">IVoLVER: Interactive visual language for visualization extraction and reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Méndez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Nacenta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Vandenheste</surname></persName>
		</author>
		<idno type="DOI">10.1145/2858036.2858435</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems, CHI &apos;16</title>
		<meeting>the 2016 CHI Conference on Human Factors in Computing Systems, CHI &apos;16<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="4073" to="4085" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Creating charts by demonstration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Myers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Goldberg</surname></persName>
		</author>
		<idno type="DOI">10.1145/191666.191715</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;94</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;94<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="106" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Combinatorial optimization of graphical user interface designs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Oulasvirta</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">Ramesh</forename><surname>Dayama</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Shiripour</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>John</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Karrenbauer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IEEE</title>
		<imprint>
			<biblScope unit="volume">108</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="434" to="464" />
			<date type="published" when="2020" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">DesignScape: Design with interactive layout suggestions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>O'donovan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Agarwala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hertzmann</surname></persName>
		</author>
		<idno type="DOI">10.1145/2702123.2702149</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems, CHI &apos;15</title>
		<meeting>the 33rd Annual ACM Conference on Human Factors in Computing Systems, CHI &apos;15<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="1221" to="1224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Reverse-engineering visualizations: Recovering visual encodings from chart images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Poco</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.13193</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="353" to="363" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Interactive by-example design of artistic packing layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Reinert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ritschel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<idno type="DOI">10.1145/2508363.2508409</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="2013-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">iVisDesigner: Expressive interactive design of information visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Höllerer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Yuan</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2346291</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2092" to="2101" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Charticulator: Interactive construction of bespoke chart layouts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brehmer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2865158</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="789" to="799" />
			<date type="published" when="2019-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Reflecting on the evaluation of visualization authoring systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brehmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Henry Riche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">BELIV Workshop at IEEE VIS: Evaluation and Beyond -Methodological Approaches for Visualization</title>
		<imprint>
			<date type="published" when="2018-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Interactive graphic design using automatic presentation knowledge</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
		<idno type="DOI">10.1145/191666.191719</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;94</title>
		<meeting>the SIGCHI Conference on Human Factors in Computing Systems, CHI &apos;94<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="112" to="117" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">An interactive constraint-based system for drawing graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ryall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shieber</surname></persName>
		</author>
		<idno type="DOI">10.1145/263407.263521</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 10th Annual ACM Symposium on User Interface Software and Technology, UIST &apos;97</title>
		<meeting>the 10th Annual ACM Symposium on User Interface Software and Technology, UIST &apos;97<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="97" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Demonstrational interaction for data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Saket</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Endert</surname></persName>
		</author>
		<idno type="DOI">10.1109/MCG.2019.2903711</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="67" to="72" />
			<date type="published" when="2019-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Visualization by demonstration: An interaction paradigm for visual data exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Saket</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">Y</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">T</forename><surname>Brown</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Endert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="331" to="340" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">Embedded merge split: Visual adjustment of data grouping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Sarvghad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Saket</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Endert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Weibel</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2865075</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="800" to="809" />
			<date type="published" when="2019-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Lyra: An interactive visualization design environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno>doi: 10. 1111/cgf.12391</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="351" to="360" />
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Critical reflections on visualization authoring systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stasko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brehmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="461" to="471" />
			<date type="published" when="2019" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Vega-Lite: A grammar of interactive graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="341" to="350" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Reactive Vega: A streaming dataflow architecture for declarative interactive visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Russell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hoffswell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="659" to="668" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Declarative interaction design for data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1145/2642918.2647360</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST &apos;14</title>
		<meeting>the 27th Annual ACM Symposium on User Interface Software and Technology, UIST &apos;14<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="669" to="678" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Polaris: A system for query, analysis and visualization of multi-dimensional relational databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Symposium on Information Visualization 2000, InfoVis &apos;00</title>
		<meeting>the IEEE Symposium on Information Visualization 2000, InfoVis &apos;00<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Sketchplore: Sketch and explore with a layout optimiser</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Todi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Weir</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Oulasvirta</surname></persName>
		</author>
		<idno type="DOI">10.1145/2901790.2901817</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 ACM Conference on Designing Interactive Systems, DIS &apos;16</title>
		<meeting>the 2016 ACM Conference on Designing Interactive Systems, DIS &apos;16<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="543" to="555" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">SketchSliders: Sketching Widgets for Visual Exploration on Wall Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tsandilas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bezerianos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Jacob</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the ACM Conference on Human Factors in Computing Systems</title>
		<meeting>the ACM Conference on Human Factors in Computing Systems</meeting>
		<imprint>
			<biblScope unit="page" from="3255" to="3264" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Seoul</forename><surname>Acm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">South</forename><surname>Korea</surname></persName>
		</author>
		<idno type="DOI">10.1145/2702123.2702129</idno>
		<imprint>
			<date type="published" when="2015-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">BricoSketch: Mixing paper and computer drawing tools in professional illustration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tsandilas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Grammatikou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Huot</surname></persName>
		</author>
		<idno type="DOI">10.1145/2817721.2817729</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 International Conference on Interactive Tabletops &amp; Surfaces, ITS 2015</title>
		<meeting>the 2015 International Conference on Interactive Tabletops &amp; Surfaces, ITS 2015<address><addrLine>Funchal, Portugal</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="127" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<monogr>
		<title level="m" type="main">Drawing dynamic visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Victor</surname></persName>
		</author>
		<ptr target="http://worrydream.com/DrawingDynamicVisualizationsTalkAddendum" />
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Structuring Visualization Mock-ups at a Graphical Level by Dividing the Display Space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Vuillemot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Boy</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2017.2743998</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="424" to="434" />
			<date type="published" when="2017-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">An exploratory study of data sketching for visual representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Walny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Huron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12635</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="231" to="240" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bodik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Cheung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Dillig</surname></persName>
		</author>
		<idno>doi: 10. 1145/3371117</idno>
		<title level="m">Visualization by example. Proc. ACM Program. Lang., 4(POPL)</title>
		<imprint>
			<date type="published" when="2019-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">InfoNice: Easy creation of information graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Yin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Hou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<idno type="DOI">10.1145/3173574.3173909</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems, CHI &apos;18</title>
		<meeting>the 2018 CHI Conference on Human Factors in Computing Systems, CHI &apos;18<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">A layered grammar of graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wickham</surname></persName>
		</author>
		<idno type="DOI">10.1198/jcgs.2009.07098</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational and Graphical Statistics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="28" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<monogr>
		<title level="m" type="main">The Grammar of Graphics (Statistics and Computing)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>Springer-Verlag</publisher>
			<pubPlace>Berlin, Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">DataInk: Direct and creative data-oriented drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Henry Riche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Chevalier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">De</forename><surname>Araujo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Wigdor</surname></persName>
		</author>
		<idno>doi: 10.1145/ 3173574.3173797</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems, CHI &apos;18</title>
		<meeting>the 2018 CHI Conference on Human Factors in Computing Systems, CHI &apos;18<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Global beautification of layouts with interactive ambiguity resolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Igarashi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-L</forename><surname>Tai</surname></persName>
		</author>
		<idno type="DOI">10.1145/2642918.2647398</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST &apos;14</title>
		<meeting>the 27th Annual ACM Symposium on User Interface Software and Technology, UIST &apos;14<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="243" to="252" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yeip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Welch</surname></persName>
		</author>
		<ptr target="http://graphics.wsj.com/elections/2016/field-guide-red-blue-america" />
		<imprint>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">DataQuilt: Extracting visual elements from images to craft pictorial visualizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Sultanum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bezerianos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Chevalier</surname></persName>
		</author>
		<idno type="DOI">10.1145/3313831.3376172</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems, CHI &apos;20</title>
		<meeting>the 2020 CHI Conference on Human Factors in Computing Systems, CHI &apos;20</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<biblScope unit="page">2020</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
