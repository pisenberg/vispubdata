<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Level of detail visualization of scalar data sets on irregular surface meshes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges-Pierre</forename><surname>Bonneau</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandre</forename><surname>Gerussi</surname></persName>
						</author>
						<title level="a" type="main">Level of detail visualization of scalar data sets on irregular surface meshes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:37+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>wavelets</term>
					<term>non-regular triangulations</term>
					<term>compression</term>
					<term>visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this article, we build a multi-resolution framework intended to be used for the visualization of continuous piecewise linear functions defined over triangular planar or spherical meshes. In particular, the dataset can be viewed at different level of detail, that&apos;s to say as a piecewise linear function defined over any simplification of the base mesh. In his multi-resolution form, the function requires strictly the same volume of data than the original input: It is then possible to go through consecutive levels by the use of so-called detail coefficients, with exact reconstruction if desired. We also show how to choose a decimation sequence that leads to a good compromise between the resulting approximation error and the number of removed vertices. The theoretical tools used here are inspired from wavelet-based techniques and extended in the sense that they can handle non-nested approximation spaces. The reader might also refer to [2], where a similar framework is discussed for piecewise constant functions.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Our aim is to build a sequence of level of detail representations of continuous piecewise linear scalar data sets defined on irregular planar or spherical triangulations. Our approach is based on vertex removal operations, and combines a local decomposition/reconstruction algorithm inspired from wavelet techniques, together with a global greedy algorithm, in order to construct the levels of detail. Following our previous work dedicated to piecewise constant data sets ( <ref type="bibr" target="#b1">[2]</ref>), we use a local wavelet-like decomposition, that maps a functional space onto a coarser space. The fact that the coarser space has no to be a subspace of the finer one (which must be the case in wavelet theory) enables to deal with irregular triangulations. At the global level, the choice of the order of removal of the vertices is made by a greedy algorithm that is guided by a simple error criterion.</p><p>In section 2, we briefly explain the global greedy algorithm. Section 3 describes the functional spaces and the basis functions result-LMC-CNRS, BP.53, F-38041 Grenoble Cedex 9, France.</p><p>ing from the vertex removal process. Section 4 is dedicated to the local decomposition/reconstruction at each vertex removal. Eventually section 5 presents numerical and visual results on a planar data set, and on a spherical data set with 1.3M faces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Previous work.</head><p>Previous work on level of detail representations are mostly dedicated to surface simplifications, i.e. they deal with geometric data sets, while we restrict ourselves with scalar data sets ( <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b4">5]</ref>). In other words, we are not trying to approximate a surface, we approximate a scalar function defined on a fixed surface.</p><p>Schr√∂der and Sweldens ( <ref type="bibr" target="#b7">[8]</ref>) have introduced spherical wavelets to build sequences of level of detail approximations to scalar data sets on the sphere. But since their approach relies strictly on the framework of wavelet theory, it is restricted to data sets defined on regular triangulations constructed by recursive 4-split of a base mesh.</p><p>Papers on level of detail for TIN (Triangular Irregular Network) deal with scalar data sets (height values) on irregular planar triangulations (see for example <ref type="bibr" target="#b3">[4]</ref>). <ref type="bibr" target="#b0">[1]</ref> deals with multivariate scalar data sets on arbitrary surface meshes. Like our paper, they are mostly based on vertex removal. But the crucial difference is that, after each vertex removal, we modify the values of the adjacent vertices, while they leave these values unchanged. In section 5, we will give some visual and numerical experiments that compare sub-sampling results with our algorithm, for the same sequence of vertex removal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Global level algorithm</head><p>Our algorithm is based on vertex removal operations. At the global level, a greedy algorithm based on a simple cost function is used to decide the order in which the vertices are removed. If M is a vertex with scalar value , and Mi are the vertices adjacent to M, with value i, we use the following cost for the removal of vertex M:</p><formula xml:id="formula_0">cost of removal = P i 1 + distmax , dM;Mi i P j 1 + distmax , dM;Mj , ; (1)</formula><p>where dM;Mi is the geodesic distance between M and Mi, and distmax = maxi dM;Mi.</p><p>We could have used the exact L2 error induced by the removal of each vertex, since our local decomposition is based on L2 approximation. But we found that the simple cost function (1) reduces the computation time noticeably and still works well in practice.</p><p>In addition to the cost function (1), it is possible to forbid the removal of some vertices in order to preserve important features in the data set. We have used this technique to preserve coast-lines in the earth data set (see section 5).</p><p>As stated in the introduction, we want to deal with piecewise linear functions. In fact in this paper we'll show results for such functions in two cases: a planar triangular mesh and a spherical one. The spherical case can be treated almost as the planar one, except for some details (for example the distances on the sphere are the geodesic distances, the re-triangulation criteria is based on a convex-hull property). We will now implicitly consider, in our illustrations, planar meshes.</p><p>We start with a 2D-triangulation Tn of n vertices M1; : : : ; M n. The global greedy algorithm described in section 2 is used to compute a sequence Tn; T n,1; : : : ; T m of simplified triangulations. The domain covered by Ti will be denoted by DTi. There are several ways to choose the new edges which re-triangulate the polygon. Our current implementation is based on a local greedy algorithm in a first step, followed by a local swap of the diagonals in each quadrilateral, in order to ensure the convexity of the triangulation for spherical triangulations, or an empty circle property for planar triangulations.</p><p>The sequence Ti, i = m ; : : : ; nis used to define the functional spaces forming our multi-resolution analysis: Let Vi, i = m ; : : : ; n , be the space of all functions that are defined and continuous over DTi and piecewise linear over each triangle of the mesh Ti (shortly: a CPLF, for continuous piecewise linear function).</p><p>The definition of a function of Vi is equivalent to the knowledge of its values at every vertex of Ti, and consequently the dimension of Vi is i. The basis of Vi is given by the i hat-functions: the hatfunction of the vertex Mj in Vi takes value 1 at Mj and then declines linearily to zero on each triangle of the PI of M in Ti (see <ref type="figure" target="#fig_1">figure 2</ref> for an illustration).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Local decomposition/reconstruction</head><p>The problem of computing the decomposition/reconstructionis similar at each level. Consequently, we shall now focus on the transition between Vi and Vi,1 for a fixed i, or, to hide the index i, between V f and V c (f=fine, c=coarse), where V c results from the removal of vertex M in V f . Our decomposition/reconstruction process is based on L2approximation between V f and V c . More precisely, given a function F f 2 V f , we want to compute two things: This decomposition/reconstruction process is inspired from wavelet-based techniques, and extents them, in the sense that it can be applied even if the coarse space V c is not included in the fine space V f . This extension has been introduced in a previous work in a different context <ref type="bibr">([3]</ref>, section 2). The reader might refer to <ref type="bibr" target="#b1">[2]</ref> or <ref type="bibr" target="#b2">[3]</ref> for a context-independent presentation of this extension.  We note M f i , i = 0 ; : : : ; kand M c i , i = 1 ::;k the basis of V f and V c , respectively. M f i is the hat function centered on vertex Mi in T f . We have just seen that, in fact, if we number 1 to l the 1neighbours of M (in T f ) then M f i = M c i 8i = l + 1 ; : : : ; k :</p><formula xml:id="formula_1">its L2-approximation F c in V c (which is the orthogonal pro- jection of F f in V c ),</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Basis functions in</head><formula xml:id="formula_2">V f and V</formula><p>To perform L2-approximation between V f and V c , we will have to compute the following matrices of scalar products between finer and coarser basis functions: wavelet theory, A can be seen as the matrix of scalar products between the fine scaling functions (in V f ) and the dual coarse scaling functions (in V c ).</p><formula xml:id="formula_3">G f = M f i ; M</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Decomposition</head><p>The decomposition step takes as input a function </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Coarse coefficients</head><p>The coarse coefficients a c : are computed from the fine coefficients a f : with the following formula: a c : = Aa f : :</p><p>In fact the matrix A ensures that F c is the best L2-approximation of F f in V c .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Detail coefficient</head><p>The detail coefficient is computed from the a f : coefficients through the equation:</p><formula xml:id="formula_4">b = Ba f : ;</formula><p>where B is a line-vector representing a dual wavelet function, in the basis of V f (see <ref type="bibr" target="#b1">[2]</ref> or <ref type="bibr" target="#b2">[3]</ref>).</p><p>This vector is computed as follows: First we know that it has to fulfill the orthogonal property A , G f ,1 B T = 0 (which means in analogy with wavelet theory, that the dual wavelet is orthogonal to the dual coarse scaling functions). This gives a one-dimensional space of solutions for the line-vector B. B is then determined uniquely by norming it to 1 in V f : B , G f ,1 B T = 1 . The orthogonalization and normalization on B ensure that the detail coefficient b is a measure of the approximation error between the input function F f and the output function F c .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Localization</head><p>One problem of importance is that the matrices G c , G f and U cf have to be computed at each vertex removal, and this is a too big amount of work since these matrices, although sparse, can potentially be very large. Nevertheless, since a vertex removal only changes basis functions in a small neighbourhood, it is quite intuitive that the best approximation of F f is not going to differ very much from F f outside of this neighbourhood.</p><p>Precisely, we parameter our decomposition/reconstruction process with a integer K 1 that reduces the global problem to a local one by doing the following: Instead of working with all basis functions, we only consider the basis functions which are based on vertices which are i,neighbours of M in T f , i = 1 ; : : : ; K(see <ref type="figure" target="#fig_7">figure   4</ref>). This means that F c is no longer the best L 2 -approximation of F f but it is supposed to be very close to. We won't try to quantify this difference here, but this assumption led to good results (K = 2 or 3 appeared to be large enough).  Another consequence of this strategy is that the global algorithm is now in on, because each local analysis/synthesis is made in constant time, independently of the number of vertices in Ti.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Computing the scalar products</head><p>Let's say a few words about the computations of the matrices G c , G f and U cf . Their coefficients are scalar products between the functions M f : and M c :</p><formula xml:id="formula_5">. Because M f i = M c i whenever i l , these</formula><p>three matrices have a lot of coefficients in common. Moreover, a function only has non zero scalar product with its 1-neighbour functions, and the support of two such functions only overlap over two triangles (see <ref type="figure" target="#fig_8">figure 5</ref>). In fact, the only difficult cases occur in the computation of scalar products of mixed type M f i ; M c j when i l and j l, because it is then necessary to compute the intersections between the fine and coarse triangles forming the inside of the PI of M in T f and T c respectively. Nevertheless, without sinking into too much detail, this problem is simpler than the general problem of finding the intersections between any two triangle sets, because the PI is a star-polygon, centered on the removed vertex.</p><p>Finally, the computation of the matrices only requires a reasonable amount of work, and this is crucial because our framework is intended to run on possibly very large datasets (see the next section and the application on the 1.3M faces spherical data set).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Reconstruction</head><p>The reconstruction process is relatively straightforward: the synthesis matrix is nothing but the inverse of the analysis matrix, thus, the fine coefficients a f : can be recovered from the coarse coefficients a c : and the detail coefficient b with the following formula:</p><p>a f : = A B ,1 a c : b</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Illustration</head><p>We shall conclude section 4 with an illustration of our decomposition algorithm. <ref type="figure" target="#fig_9">Figure 6</ref> shows at the top left an input function (the removed vertex is circled), at the top right the output function, and the bottom shows two views of the corresponding wavelet function. This decomposition was computed using the localization parameter </p><formula xml:id="formula_6">K = 2 .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Results</head><p>We start this section with some numerical examples of decomposition/reconstruction on a data set that was specifically constructed to test the stability of the algorithms. We have chosen a strongly irregular planar triangulation, and have mapped a non-smooth image on that triangulation: the triangulation was generated by Delaunayinserting random points in a square domain, and the data value at each vertex was sampled from the ETOPO5 data set from the National Oceanographic and Atmospheric Administration 1 , showing the elevation/bathymetry of the earth.</p><p>The data set has 25000 vertices. The coast-lines were preserved by the global greedy algorithm, as explained in section 2: the vertices to keep were detected by looking if a change of sign occured at the 1-neighbour vertices. The decomposition was computed using the localization parameter K = 2 (see section 4.3). We compare the results of our decomposition algorithm with the results obtained by simply sub-sampling the data set. <ref type="figure">Figure 7</ref> shows the relative L 2error versus number of vertices for our decomposition, and for subsampling. <ref type="figure">Figure 8</ref> shows two partial reconstructions with 2500 vertices out of 25000, one based on our algorithm (bottom right), and the other based on sub-sampling (bottom left), for the same sequence of removed vertices.</p><p>Color plate 1 illustrates our algorithm on a spherical data set consisting of 1.3M faces. The original data set is defined on a regular triangulation (4-to-1 split with 8 levels of subdivision starting on a <ref type="bibr" target="#b0">1</ref> Available via anonymousftp at ftp://ftp.ngdc.noaa.gov/Solid Earth/Topography/tbase 5min/ icosahedron). The data value at each vertex was sampled from the ETOPO5 data set (which consists of 2160 x 4320 samples on a uniform grid).</p><p>Our algorithm was applied using the localization parameter K = 2</p><p>(see section 4.3), and with preservation of the coast-lines. The upper part of color plate 1 compares the result our algorithm, with the result obtained from sub-sampling the data set: (a) shows the approximation resulting from our algorithm, and (c) shows the sub-sampling result. (b) shows the corresponding spherical mesh. The bottom part of color plate 1 shows different partial reconstructions computed from our algorithm: (g), (h), (i) show the spherical meshes corresponding to (d) (100000 vertices), (e) (200000 vertices) and (f) (300000 vertices).  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>By removing a vertex M from the mesh, the triangulation is only modified locally, over the so-called polygon of influence (PI) of M, which is the polygon whose vertices are adjacent to M (the 1neighbours of M). This is illustrated in figure 1. removing of a vertex from a triangulation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Example of a CPLF and its decomposition in the hat function basis a detail coefficient b, encoding the loss of information due to projection, and allowing exact reconstruction during the synthesis process.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>c</head><label></label><figDesc>Before going further with the actual computations, we should have a careful look at the basis functions in V f and V c . The hat function corresponding to the vertex M no longer exists in V c . This is the reason why dimV f = dimV c + 1 : Also, the hat functions based on the neighbours of M in T f disappear, since the vertex removal creates a new neighbourhood for all of them, but they are "replaced" by hat functions defined on the same vertices and their new neighbourhoods in T c . All the other basis function remain unchanged. By comparing the supports of the basis functions in figure 3, you can see the consequences of a vertex removal on the basis functions whose support overlaps the PI of the removed vertex.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Supports of hat basis functions, before and after vertex removal.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>:::;k; j=0;:::;k A = G c ,1 U cf G c and G f are the Gram-schmidt matrices in V c and V f respectively. And for those who are familiar with the terminology of</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>i M f i in the finer space V f , and outputs an approximation F c = P k i=0 a c i M c i in V c and a detail coefficient b. Note that there is only one detail coefficient since dimV f = dimV c + 1 . This detail coefficient is conceptually linked to the vertex M, it can be stored in place of a f 0 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 4 :</head><label>4</label><figDesc>the 1-and 2-neighbourhood of a vertex</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 :</head><label>5</label><figDesc>intersection of the supports of two basis functions.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 :</head><label>6</label><figDesc>Approximating a CPLF: top left = input function, top right = approximation, bottom = wavelet function (two views). The removed vertex is circled.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 7 :Figure 8 :</head><label>78</label><figDesc>Relative L2-error vs. # of vertices. 'o':subsampling,'+':L2-approximation 2500 vertices out of 25000, top=mesh, bottom left=subsampling, bottom right=L2-approximation</figDesc></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Error-bounded reduction of triangle meshes with multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Chandrajit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visual Data Exploration and Analysis III. SPIE</title>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Hierarchical decomposition of datasets on irregular surface meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges-Pierre</forename><surname>Bonneau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexandre</forename><surname>Gerussi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CGI &apos;98</title>
		<meeting>CGI &apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">BLaC-Wavelets: A multiresolution analysis with nonnested spaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georges-Pierre</forename><surname>Bonneau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefanie</forename><surname>Hahmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;96</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="43" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A pyramidal data structure for triangle-based surface description</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leila</forename><surname>De Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="67" to="78" />
			<date type="published" when="1989-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<idno>Au- gust 1997. ISBN 0-89791-896-7</idno>
	</analytic>
	<monogr>
		<title level="m">GRAPH 97 Conference Proceedings, Annual Conference Series</title>
		<editor>Turner Whitted</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 96 Conference Proceedings</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">View-dependent refinement of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 97 Conference Proceedings</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="189" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Spherical wavelets: Efficiently representing functions on the sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Schr√∂der</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wim</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 95 Conference Proceedings</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="161" to="172" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
