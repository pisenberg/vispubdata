<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">POPTEX: Interactive Ocean Model Visualization Using Texture Mapping Hardware</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Pherson</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Advanced Computing Laboratory Mathew Maltrud Theoretical Division Los Alamos National Laboratory</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">POPTEX: Interactive Ocean Model Visualization Using Texture Mapping Hardware</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Global circulation models are used to gain an understanding of the processes that affect the Earth&apos;s climate and may ultimately be used to assess the impact of humanity&apos;s activities on it. The POP ocean model developed at Los Alamos is an example of such a global circulation model that is being used to investigate the role of the ocean in the climate system. Data output from POP has traditionally been visualized using video technology which precludes rapid modification of visualization parameters and techniques. This paper describes a visualization system that leverages high speed graphics hardware, specifically texture mapping hardware, to accelerate data exploration to interactive rates. We describe the design of the system, the specific hardware features used, and provide examples of its use. The system is capable of viewing ocean circulation simulation results at up to 60 frames per second while loading texture memory at approximately 72 million texels per second.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction to POP</head><p>The Earth's climate is determined by a complicated interaction between the ocean, sea ice, atmosphere, and biosphere. Computer models that simulate numerically the behavior of this system are one of the best means we have for projecting future climate and the impact of humanity's activities on it. Present-day general circulation models (GCMs) are able to simulate satisfactorily many aspects of the current climate, though a new generation of models is needed that have finer spatial resolution and that more realistically treat the physical processes that control our climate. To meet these objectives, we need GCMs that run on massively parallel computers.</p><p>Scientists at Los Alamos have developed one such model: a global ocean circulation model named the Parallel Ocean Program (POP) <ref type="bibr" target="#b2">[3]</ref>. POP is based on the widely used Bryan-Cox-Semtner ocean model but was completely rewritten and reformulated for efficient execution on Connection Machine (CM-5) and Silicon Graphics (SGI) Origin 2000 supercomputers.</p><p>The global ocean simulation described here employs a grid containing 1280 uniformly spaced points in longitude (0:28 spacing) and 896 variably spaced points from 78 N to 78 S (0:17 average spacing), yielding a spatial resolution ranging from 31 km at the Equator to 7 km at 78 latitude. In the third dimension, the model uses 20 non-uniformly spaced depth levels and realistic bottom topography (bathymetry). This is one of the highest resolutions used in any global ocean simulation performed to date. Observed surface winds from the period 1985-1995 and realistic monthly mean heat and salt fluxes are used to force the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Approach to New Visualization</head><p>As POP runs it periodically writes data files representing the progress of the simulation. Although the simulation computes on a 30 minute time-step, these files are written every three days of simulated time. At each three day time-step, one file is written for each variable being computed: salinity, temperature, sea-surface height, flow vector, etc. These dump files represent the results of a simulation.</p><p>Historically, we've visualized this sequential collection of data files using video technology. Each file is converted to an image and normalized to some pre-defined color map appropriate for that particular variable. The images are then written to the video device, such as a laser videodisc, one frame at a time.</p><p>These video visualizations, while useful for viewing the progress of the simulation, have a serious drawback-they are static and can't be modified without creating a new video. Scientists can't experiment with new color mappings. They can't zoom in on areas of interest. They can't easily specify a section to loop over, nor can they run the video backwards or at variable rates, without scripting the device. Because large simulations are run infrequently, these video animations have long lifespans-their shortcomings become increasingly apparent as time goes on.</p><p>Our goal in developing POPTEX was to build a tool for scientists that provides the benefit of video visualizations (putting the results of the simulation into motion) while adding capabilities that enable dynamic, flexible, and interactive exploration of their data. To do this we used the powerful combination of hardware features available on the Laboratory's SGI Origin 2000. Specifically, we sought to exploit the following hardware features:</p><p>Large Texture Memory. Four Infinite Reality (iR) graphics pipes <ref type="bibr" target="#b6">[7]</ref> are attached to the Origin 2000. Each iR is equipped with 64MB of dedicated texture memory. The images in texture memory can be any of a number of formats (RGBA, intensity, etc.). The texture memory can be allocated to a few large images or a large number of smaller images.</p><p>Fast Texturing Performance. Textures can be duplicated on up to four RM7 Raster Manager boards. Each RM7 with its own 64MB of memory contains a full copy of each texture. The parallelism provided by multiple boards enables a near linear speed-up in texturing performance. Equipped with four RM7 boards, the iR can approach textured fill rates of 776M pixels/sec. <ref type="table">Table.</ref> A large texture lookup table (TLUT) provides a level of indirection between between the texture image and the actual colors used to texture the geometry. When using the TLUT, texture images are interpreted as indices into a table of color and alpha values. It is these values that are used to texture the geometry. The TLUT can be loaded much more quickly than texture memory enabling rapid manipulation of texture image mappings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Texture Lookup</head><p>Large Main Memory. Given our Origin 2000's 16GB of main memory, we can easily pre-load multi-variate data for an entire simulation.</p><p>Fast Texture Loading. Once loaded into main memory, the iR supports extremely fast (theoretically 320MB/sec) transfers to its texture memory. This fast transfer allows us to stream time-step images into the texture memory and render them at interactive rates.</p><p>We leveraged these hardware features to build POPTEX-a highly interactive tool used to explore the results of the POP ocean simulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Implementation</head><p>A full run of the simulation, representing roughly ten years of elapsed time, generates 1318 time-step dump files. Each dump file contains a copy of the simulation grid with floating point values at each cell location representing variables such as sea-surface height, temperature, and salinity. This 3-D grid is a Mercator projection of the globe, with 1280 cells in longitude and 896 cells in latitude, at each of 20 depths. We preprocess these dump files to extract those variables to be visualized at each depth layer. The dump files are converted to a format more suited to our visualization by normalizing each variable to 8-bit values that will act as indices into the 256-entry texture lookup table. The result of this pre-processing step is a collection of files for each time-step, one file for each variable at every depth layer.</p><p>POPTEX itself is written in C++ and uses SGI's version of the OpenGL graphics API. Because OpenGL requires that texture dimensions be a power-of-two, POPTEX splits the 1280 896 input files into two textures that waste the least amount of texture memory-one 1024 2 and another 2561024. Once these OpenGL textures have been created they can be loaded with images of any size (using glTexSubImage2DEXT) as long as they do not exceed the texture's dimensions. In this case, we load them with portions of the input data file-1024 896 into the larger texture and 256 896 into the smaller. An SGI-specific OpenGL extension, GL CLAMP TO BORDER SGIS, is used to ensure that the borders between the two textures are not visible.</p><p>These textures are mapped onto a sphere representing the globe. We use a Mercator decomposition of the sphere to more closely represent the simulation grid. The decomposition of the sphere must match the ratio of the two texture sizes so that texture coordinates at the texture's borders coincide with an edge of geometry in the spherical decomposition. Since 1280=256 = 5 we need only make sure that our decomposition in longitude is divisible by 5. We typically use a decomposition of 40 in latitude and 80 in longitude which produces a visually smooth horizon. From this decomposition we construct OpenGL quadrilateral meshes and compute the texture coordinates at the corner of each quad. Once calculated, the geometry and texture coordinates remain fixed and need not be re-computed. Note that the simulation grid only extends to 78 latitude which accounts for the holes at the poles in this visualization.</p><p>Finally, we create the TLUT that will be loaded with specialized colormaps for each variable as we view it. The 8-bit texture values are used as indices into this table and extract the RGBA colors to be used for texture interpolation. This additional level of indirection provides a convenience and a performance improvement-without the TLUT we'd have to reload the entire texture when its colors were changed. This is a much slower operation than reloading a 256 entry TLUT, which can be performed almost instantaneously.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Running POPTEX</head><p>When a user starts POPTEX it begins loading the time-step data files into memory. This process currently takes about 15 minutes for 1318 time-steps at each of four variables and uses roughly 6GB of main memory. Once all files have been loaded the user can explore the results of the simulation using various facilities provided by the tool.</p><p>Any variable may be selected for display by clicking on its corresponding tab. The data for the current time-step is mapped onto the sphere representing the globe. The globe can be rotated and zoomed to any view of interest using a virtual trackball in the main window. Additionally, the current color map for the selected variable is displayed in a panel below the globe. <ref type="figure" target="#fig_0">Figure 1</ref> shows sea-surface height selected with low values at the blue end of the spectrum and high values at the red end.</p><p>The user can select ranges of values to view, discarding those that they are not interested in, by replacing the contents of the TLUT. The TLUT is modified by manipulating a transfer function which is depicted graphically as an overlay on the current colormap. Iconic handles on the function are dragged to change the function's shape. As the function is being modified the TLUT is continuously reloaded, providing interactive feedback to the user. This can be very useful when certain model features need to be highlighted. For example, <ref type="figure" target="#fig_1">Figure 2</ref> shows a view of the salinity of the North Atlantic with all values visible. One of the more interesting water types in the ocean is the salty Mediterranean Sea water. This salty water results from the excess of evaporation compared to precipitation in that region and ends up circulating throughout the world's ocean basins. <ref type="figure" target="#fig_2">Figure 3</ref> shows the result of manipulating the transfer function towards the right, or high salinity, side of the colormap so that the modified TLUT highlights areas where Mediterranean Sea water is present.</p><p>Although most of the variables we visualize (sea-surface height, temperature, and salinity) are mapped to colors, we have experimented with some alternative mappings. For example, we've used the hillshading technique <ref type="bibr" target="#b4">[5]</ref> to display sea-surface height in shaded relief. <ref type="figure" target="#fig_3">Figure 4</ref> shows sea-surface height in the western Atlantic using this technique. Visualizations of sea-surface height are of interest in many areas of the world. For example, the strong eddies seen in the Caribbean and Gulf of Mexico can affect the operations of oil drilling platforms.</p><p>The main advantage of POPTEX is its animation capability. The collection of sequential data files in main memory can be continuously streamed into texture memory at an observed maximum rate of 72 million texels per second. This results in a maximum frame rate of slightly over 60Hz. At this rate, ten years of simulated time pass in just 21 seconds. More useful than end-to-end animation though, is the ability to choose a period of time and selectively animate over only that range-at any speed, forward of backward, pausing or changing the rate as desired. This technique is particularly useful when studying time-varying phenomena like El Niño. During normal, non-El Niño years, the prevailing winds at the equator tend to push warm water to the west where it collects. When the winds periodically weaken and shift during an El Niño event warm water is allowed to flow back towards the east. <ref type="figure" target="#fig_4">Figure 5</ref> shows the warm water pooling in the tropical Pacific while <ref type="figure" target="#fig_5">Figure 6</ref> shows the tongue of warm water surging back towards the east only a few months later due to El Niño conditions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Related Work</head><p>Nations, et.al. <ref type="bibr" target="#b7">[8]</ref> describe a solution to a similar ocean model visualization problem. Unlike us, they specifically eschew any postprocessing. Their system runs along with the simulation, visualizing results and helping steer the computation. We reject steering solutions for two reasons. First, the computational scientists are sometimes reluctant to share cycles with the visualization task. Second, simulations often run for weeks to calculate ten years of simulated data while POPTEX can visualize the same ten years of data in just seconds.</p><p>The ParVox system at JPL <ref type="bibr" target="#b5">[6]</ref> is a general purpose parallel volume rendering system based on the splatting algorithm. They have applied their system to a 640 624 37 volume of ocean data and achieved rendering rates of one frame per second using 256 processing elements of a Cray T3D.</p><p>Vis5D <ref type="bibr" target="#b3">[4]</ref> is a software system designed specifically for visualizing numerical climate models like ours. This system performs many of the functions of our system, though not at the rates we achieve by using specific hardware features.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions and Future Work</head><p>We have created an interactive tool that allows ocean researchers to interactively visualize their data without creating and viewing video-based animations. In the future we intend to extend the application, adding more features designed specifically to use additional high performance hardware capabilities. Some of these future enhancements are described below:</p><p>Disk Streaming -Our first task will be to implement data streaming directly from disk. This will eliminate the tedious process of pre-loading the data, allow the user to select different starting points, and enable the use of data sets that are larger than main memory. In recent experiments we have achieved disk transfer rates of 200MB per second using a striped SCSI file system. We're confident that we can achieve 320MB per second (which matches the theoretical texture load speed of the iR) by striping over more disks and controllers.</p><p>Volume Rendering -While visualization of individual depth layers is useful, there are phenomena that may be better understood by viewing all depth layers at once. One example is the Mediterranean outflow. Salty water from the Mediterranean Sea flows through the Strait of Gibraltar, sinking because it's heavier than the less salty water of the Atlantic, and forms a distinct water mass containing numerous eddies at a depth of 1 km. We plan to use the iR's 3-D texture memory for volume rendering <ref type="bibr" target="#b0">[1]</ref> on these types of visualizations.</p><p>Terrain and Bathymetry -We do not currently display terrain or bathymetry relief. To do so using geometry would quickly surpass even the iR's geometric processing capabilities. We intend to use the aforementioned hillshading technique to produce shaded relief images of global terrain and bathymetry that can then be used as textures and mapped to the sphere along with the simulation data. This should result in a more realistic visualization.</p><p>Flow Visualization -POP computes and dumps flow information, in the form of floating point vectors at each grid cell, which we currently do not visualize. We plan to experiment with global flow visualization techniques such as line integral convolution (LIC) <ref type="bibr" target="#b1">[2]</ref> to visualize the ocean currents. Sequential LIC images can be pre-computed and streamed onto the globe resulting in a dynamic animation of the flow.</p><p>Higher Resolution POP Runs -POP will soon be run at much higher resolution-up to 3500 2500 50. We plan to apply POPTEX to this high resolution data as soon as it becomes available.      </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Sea-surface height.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>High surface salinity of the Atlantic Ocean.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>TLUT modified to show areas of high surface salinity.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Sea-surface height shown in hillshaded relief.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Temperature at surface with no El Niño.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Temperature at surface during El Niño.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Acknowledgments</head><p>We would like to thank the other members of the ACL Visualization Team for their support and advice: Jim Ahrens, Pat M c Cormick and Jamie Painter. We would also like to thank additional members of the ocean team, Bob Malone and Rick Smith, for their feedback on early versions of this software. We acknowledge the Advanced Computing Laboratory of Los Alamos National Laboratory, Los Alamos, NM 87545. This work was performed on computing resources located at this facility.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Accelerated volume rendering and tomographic reconstruction using texture mapping hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nancy</forename><surname>Cam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Foran</surname></persName>
		</author>
		<idno>0-89791-741-3</idno>
	</analytic>
	<monogr>
		<title level="m">Symposium on Volume Visualization</title>
		<editor>Arie Kaufman and Wolfgang Krueger</editor>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Imaging vector fields using line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brian</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leith (casey)</forename><surname>Leedom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;93 Proceedings)</title>
		<editor>James T. Kajiya, editor</editor>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="263" to="272" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A reformulation and implementation of the Bryan-Cox-Semtner ocean model on the Connection Machine</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">K</forename><surname>Dukowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">C</forename><surname>Malone</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Atmos. Ocean. Tech</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="195" to="208" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Vis5D system for easy interactive visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hibbard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Santek</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;90</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="28" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Hillshading and the reflectance map. Proceedings of the IEEE</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">K P</forename><surname>Horn</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981" />
			<biblScope unit="volume">169</biblScope>
			<biblScope unit="page" from="14" to="47" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">ParVox-A parallel splatting volume rendering system for distributed visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peggy</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Whitman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Mendoza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Tsiao</surname></persName>
		</author>
		<idno>1-58113-010-4</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Parallel Rendering Symposium</title>
		<editor>James Painter, Gordon Stoll, and Kwan-Liu Ma</editor>
		<imprint>
			<date type="published" when="1997-11" />
			<biblScope unit="page" from="7" to="14" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">InfiniteReality: A real-time graphics system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">S</forename><surname>Montrym</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><forename type="middle">R</forename><surname>Baum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">L</forename><surname>Dignam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><forename type="middle">J</forename><surname>Migdal</surname></persName>
		</author>
		<idno>0-89791- 896-7</idno>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 97 Conference Proceedings, Annual Conference Series</title>
		<editor>Turner Whitted</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="293" to="302" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Nations</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Moorhead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kelly</forename><surname>Gaither</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steve</forename><surname>Aukstakalnis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rhonda</forename><surname>Vickery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Warren</forename><forename type="middle">C</forename><surname>Couvillion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jr</forename><surname>Daniel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Interactive visualization of ocean circulation models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Fox</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alan</forename><surname>Flynn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Wallcraft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ole</forename><forename type="middle">Martin</forename><surname>Hogan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Smedstad</surname></persName>
		</author>
		<idno>0-89791-864-9</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;96. IEEE</title>
		<imprint>
			<date type="published" when="1996-10" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
