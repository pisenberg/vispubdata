<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Tracking Scalar Features in Unstructured Datasets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deborah</forename><surname>Silver</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Electrical and Computer Engineering and CAIP Center</orgName>
								<orgName type="institution">Rutgers University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dept. of Electrical and Computer Engineering and CAIP Center</orgName>
								<orgName type="institution">Rutgers University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Tracking Scalar Features in Unstructured Datasets</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Scientific Visualization</term>
					<term>Time-varying Visualization</term>
					<term>Feature Tracking</term>
					<term>Computer Vision</term>
					<term>CFD</term>
				</keywords>
			</textClass>
			<abstract>
				<p>3D time-varying unstructured and structured datasets are difficult to visualize and analyze because of the immense amount of data involved. These datasets contain many evolving amorphous regions, and standard visualization techniques provide no facilities to aid the scientist to follow regions of interest. In this paper, we present a basic framework for the visualization of time-varying datasets, and a new algorithm and data structure to track volume features in unstructured scalar datasets. The algorithm and data structure are general and can be used for structured, curvilinear, adaptive and hybrid grids as well. The features tracked can be any type of connected regions. Examples are shown from ongoing research.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Most complex (continuum) simulations and observations generate data over a period of time at certain time intervals. This timevarying data is used to study the evolution of the underlying physical phenomena. Once the evolution is captured, the scientist can attempt to understand the cause and build predictive models. For example, meteorologists track cloud formations for weather predictions and hurricane warnings, environmentalist study the change in the ozone "hole" for knowledge about the greenhouse effect, and aeronautical engineers look at the movement of air over an airplane for better aircraft design and control.</p><p>The data resulting from continuum simulations is immense. Instead of just one dataset of or (for regular gridded simulations) there now could be hundreds to thousands of timesteps. Analysis and visualization tools are crucial to help interpret all the information. However, to be useful these techniques must present the information to the scientist in a cogent manner and help focus attention on essential interactions.</p><p>A feature based approach can help, by allowing the scientist to concentrate on regions and phenomena of interest. Because each domain has its own set of features or regions of interest, domain specific routines may be needed to define the regions to be extracted. In <ref type="bibr" target="#b0">[1]</ref>, we have developed a full 3D volume feature extraction and tracking algorithm. In this algorithm, thresholded features are extracted from one dataset and then matched in subsequent datasets. Octrees were used to compute the volume overlap and volume difference easily. However, because of the octrees, the algorithm can only operate on regular rectilinear non-adaptive meshes or curvilinear meshes. In this paper, we will describe a new general data structure and algorithm which can operate on any type of dataset including structured and unstructured grids. In addition, it can handle all the different grid types and grid dimensions with the same data structure and algorithm and can be easily extended to handle adaptive continuum grids. Furthermore, it is fast, permitting interactive P.O. Box 909, Piscataway, NJ 08855-0909.</p><p>Email: silver, xswang @vizlab.rutgers.edu <ref type="figure">Figure 1</ref>: A process for visualizing 3D continuum datasets speeds on reasonable platforms and it is an efficient data structure involving minimum memory overhead.</p><p>In Section 2, we describe a methodology for visualizing and analyzing time varying datasets. Section 3 contains a brief overview of related work in this area. Sections 4-7 present our new data structure and algorithm. In this paper, we base our work on the most general of feature definitions, i.e. connected thresholded regions. This is one of the most ubiquitous definitions in visualization and almost all the various disciplines and available software packages have functions to display this type of region (isosurfaces, color-maps, volume rendering etc.). This simple definition is used precisely because it is simple and is almost always a first step on visualizing datasets. However, the tracking algorithm we describe will operate on any type of defined connected feature. In Section 8, we demonstrate the algorithm on a number of unstructured simulations. More examples can also be seen on our web site <ref type="bibr" target="#b2">[2]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Time Varying Visualization</head><p>A basic framework for analyzing time-varying datasets is shown in <ref type="figure">Fig. 1</ref>. The goal of the process is to obtain dramatic data reduction and thus help scientists quickly focus on a few features or events of interest.</p><p>The first step of the process is to identify the features of interest and to define them. Standard visualization tools provide the scien-tist with the ability to "see" coherent regions and display them but not to measure them. Quantifications are an integral part for further analysis and the building of predictive models. Once features are separated from the background they can be measured and tracked. If the datasets are sampled sufficiently, tracking can be done to correlate the features from one dataset to another. Once all the features are correlated, they can be quantified to obtain full analysis of the evolution of each feature. Useful quantifications include, volume change over time, integrated content change over time, local extrema change over time, and "general-shape" change over time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Related Work</head><p>The computer vision community has been very concerned with 2D tracking (for introductions see <ref type="bibr" target="#b3">[3]</ref>), and many of the techniques developed in Computer Vision can be used in this domain to extract, identify and track features (these are discussed in <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b5">5]</ref>). The main difference arises in the domain-specific knowledge needed to accurately analyze the data, the type of data available, and the goal of scientific simulation which requires quantitative information about the structures being tracked. (A more complete review of Computer Vision tracking techniques can be found in <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b6">6]</ref>.) An important part of feature tracking is defining what features need to be tracked. Every domain has a different definition for features, regions of interest, or objects. General methods to define features include selective visualization <ref type="bibr" target="#b7">[7]</ref>, segmentation <ref type="bibr" target="#b8">[8]</ref>, volume intervals <ref type="bibr" target="#b9">[9]</ref>, deformable models <ref type="bibr" target="#b10">[10,</ref><ref type="bibr" target="#b11">11]</ref>. (Specific features include vortex cores <ref type="bibr" target="#b12">[12,</ref><ref type="bibr" target="#b13">13,</ref><ref type="bibr" target="#b14">14]</ref>, and critical points for vector fields <ref type="bibr" target="#b15">[15]</ref>, etc.) In many of these definitions, the features are defined with some sort of connectivity criteria which enable the method to partition the dataset into "important regions" and background. Some other interesting work in feature extraction which is relevant, involves applying wavelet transforms to decompose a 2D dataset into coherent and noncoherent parts <ref type="bibr" target="#b16">[16]</ref>.</p><p>Efforts have begun to perform some type of feature tracking on CFD and related datasets. In <ref type="bibr" target="#b17">[17]</ref> and <ref type="bibr" target="#b18">[18]</ref>, feature points in meteorological datasets are linked together based on optimization techniques used in tracking objects in video images <ref type="bibr" target="#b19">[19]</ref>. Two efforts closely related to our work described in this paper are <ref type="bibr" target="#b20">[20]</ref> and <ref type="bibr" target="#b21">[21]</ref>. In <ref type="bibr" target="#b20">[20]</ref>, 2D cloud patterns are tracked using area overlap to determine correspondence. In <ref type="bibr" target="#b21">[21]</ref>, 3D vortex skeletons are tracked by searching in subsequent datasets within a window. However, a full treatment of the 3D tracking problem is not addressed. Tracking objects in time is analogous to the problem of correlating objects in space, i.e. given a set of 2D contour-slices representing a continuous 3D domain, determine the correspondence between the surfaces from one slice to the next. In 3D plus time domain, this task can be accomplished by a 4D marching hypercubes algorithm. The resulted 4D hypercube, however, is difficult to comprehend for real world applications. The characterization of possible scenarios and topologies is similar (see <ref type="bibr" target="#b22">[22]</ref> for one example), although generally only edges are matched instead of entire regions. There is also work in using wavelet transforms to identify 3D regions with strong temporal variation <ref type="bibr" target="#b23">[23]</ref>.</p><p>In <ref type="bibr" target="#b24">[24]</ref>, features were tracked using their centroids and second order moments <ref type="bibr" target="#b25">[25]</ref>. These parameters work well in describing most of the shapes of objects encountered in many turbulent simulations. However, this scheme was not always reliable, since this is a reduced model. In <ref type="bibr" target="#b4">[4,</ref><ref type="bibr" target="#b0">1]</ref>, we developed a full 3D volume (regular rectilinear grid plus time) feature extraction and tracking algorithm. In this algorithm, thresholded connected regions are extracted from one dataset and then matched in subsequent datasets. Thresholded connected component (threshold intervals) are a natural first step at defining "important features" because standard visualization routines, such as isosurfacing and volume rendering, display these types of coherent regions. Furthermore, for many applications, connected components are the phenomena of interest, such as low pressure fronts, eddies, and storms. (However, any type of connected component feature can utilize the tracking algorithm, for example, cores <ref type="bibr" target="#b12">[12]</ref> etc.) The tracking algorithm then classifies events for each feature as one of Continuation (an object continues, it may shrink or grow), Creation (a new object appears), Dissipation (an object dies), Bifurcation (an object splits into two or more objects) and Amalgamation (two or more objects merge) by determining the best match for a feature in the next timestep. All features are tracked, as well as the mass, the moments and the volume change of these features. In this paper, we apply the tracking algorithm to unstructured datasets, and demonstrate a new data structure which can be extended to handle hybrid and adaptive grids.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Grid Types</head><p>There are many different grid types <ref type="bibr" target="#b26">[26]</ref>. Rectilinear grids are composed of a set of connected cells of rectangular prism (brick) shape. The set of voxels completely tessellates a rectangular Cartesian subspace ( <ref type="figure" target="#fig_0">Figure 2</ref>). Imposing a further restriction on the voxels to be cubical yields the Cartesian Grids, Uniform Grids or Regular Grids, which are the most common volumes ( <ref type="figure" target="#fig_0">Figure 2</ref>). In these grid types, the connectivity is implicit. The neighboring rules can be 6-connected (points along the axes), 18-connected (including the diagonals along the axes), 26-connected (including the long diagonals of neighboring cubes).</p><p>A Curvilinear grid, also known as a Structured grid, results from applying a non-linear transformation to a rectilinear grid, yielding a grid composed of hexahedral voxels. The common feature of Rectilinear and Curvilinear grids are that they all maintain an implicit neighborhood connectivity. Unstructured grids are made up of polyhedra with explicit connectivity. There is no geometric information implied by this list of points and edge/face/cell connectivity must be supplied. Cells can be tetrahedra, hexahedra, prisms, pyramids, etc., and they may be linear (straight edges, planar faces) or higher-order (e.g., cubic edges, with two interior points on each edge). In the general case, each cell can be an arbitrary polyhedron. An unstructured tetrahedral grid is shown in <ref type="figure" target="#fig_1">Figure 3</ref>  <ref type="bibr" target="#b27">[27]</ref>. A tetrahedral cell, , is an ordered sequence of points, , with where is a set of points within the dataset. Two cells and are adjacent to each other if at least one vertex in the two cells is the same. There exists a connected path between two cells, and , if one can traverse adjacent cells from to . A set of cells is defined as a connected region, or object , if there is a connected path between every pair of cells in .</p><p>In <ref type="bibr" target="#b0">[1]</ref>, an octree was used to store the features so that the overlap between consecutive timesteps could be detected easily. In what follows, we explore a more general data structure and approach to overlap computation. Generality and adaptivity are needed so that it can handle all the different grid types and grid dimensions (2D and 3D); it would be cumbersome to have different segmentation and tracking programs for different datasets. Only the procedure which reads in the data should be changed. One option for tracking is to convert all the different grid types to one format. Besides the extra memory needed to store all the timesteps in this format, and the time taken to do the conversion, resolution may be lost and the extra memory needed (i.e. for adaptive grids) could be crippling. Although, in certain situations, this is a viable option.</p><p>To fit these requirements, we use a linked list structure, since a linked list can point to any type of cell of any dimension. Objects (connected components) are stored as a set of object lists, which consist of an Object ID, object properties, nodes and cells that comprise the object. Each node also has a unique identification number, or Node ID.</p><p>In addition to the grid types listed above, there are also multistructured grids which includes multiblock, multiresolution and adaptive grid structures. Multiresolution grids, which underly adaptive continuum simulations, allow regions of the grid to be locally refined for more efficient use of resources. Datasets associated with these grids contain multiple levels of refinement. Multiblock grids are used to describe highly irregular domains as unions of regular (block) grids, and are similar to hybrid grids with unions of structured and unstructured elements. Although we do not focus on these types of grids in the paper, the data structure we have defined can be easily extended for such grids.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Feature Extraction</head><p>The first step to tracking features is defining the features of interest. As mentioned previously, thresholded connected regions of threshold intervals <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b28">28]</ref> are a natural first step at defining features because all visualization packages render these type of features and almost all disciplines use these definitions (as opposed to domain specific feature definitions). This allows us to test the tracking algorithms on many different domains. However, any type of connectednode feature can also be tracked.</p><p>The algorithm in <ref type="bibr" target="#b8">[8]</ref> has been extended to work with unstructured grids (with tetrahedral cells). To extract features in the dataset, values that meet the threshold criteria are first selected. A seed growing technique is then used to locate the features in the dataset, i.e. regions are grown around seeds. The seeds are chosen automatically as extrema values. The algorithm cycles through thresholds from minimum to maximum (or maximum to minimum, depending upon which extrema are of interest) growing the objects for each threshold value from the previous threshold value (creating a threshold interval for each object). The advantage of this method is that it is more efficient for more than one threshold value, or for mapping out the entire threshold sequence of a dataset, since when chang-ing thresholds from one threshold to a lower one, existing structures tend to "grow" and therefore should be used as starting points. The position of the neighboring values in an unstructured dataset is not implicit as in the case of a regular dataset. Therefore, it is necessary to keep track of the adjacency lists.</p><p>To avoid scanning the dataset each time for information about connectivity, a neighbor list for each cell is maintained as part of the data structure. All the points associated with the cell that form the region are flagged as "used". A new set of seed points is selected from the maxima of the remaining points. This algorithm is executed over the dataset iteratively until there are no more "active" points (i.e. separate growing regions). For multiple threshold values, at the end of each iteration, different objects are merged if needed, since regions which were separate for one threshold may merge for a lower/higher one. The final result of the algorithm is a set of distinct objects each represented as a list of cells. A marching tetrahedra/cell algorithm is then applied directly to each object to obtain the polygonal bounding surfaces. Parameters like volume, integrated content, centroid, moments, etc. are computed for each of the distinct objects found. Four lists are maintained, and the elements in each list can be addressed by an index into the respective arrays (see also <ref type="bibr" target="#b29">[29]</ref>). The lists include a Data-List, a Position-List, a Cell-List and an Object-List. The Data-List is an array of data values at each grid location. The Position-List is the list of all grid locations in the dataset. This list is created once at startup. The Cell-List is a list of all the cells in the dataset. Each cell is represented by pointers to the vertices of the cell (Position-List). This list is also generated only once at startup from the input data file. The Object-List is a list of pointers to "objects" that have been generated by the segmentation algorithm (a linked list of cells that comprise an object). This list can be used directly to calculate the mass, volume and other physical parameters for the objects. Outer bounding cells are tagged to determine the bounding surface. VTK has the functionality to extract the connected regions, but postprocessing has to be done to separate these regions and compute the quantifications.</p><p>For some unstructured grids (which are not completely space filling), bounding surfaces can result which are not connected even when the underlying cell list is connected. In these cases, further processing of the cell list is needed to maintain connectivity. For example, currently vertex-connectivity is used to define the objects, but face-connectivity should be used in these cases. Another option is to compute the bounding isosurface, then perform connectivity on the resulting polygons and map that back to the object Cell-List. The Object-List for each dataset in a time series is created and passed to the tracking algorithm for further processing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Feature Tracking Algorithm</head><p>The feature tracking algorithm <ref type="bibr" target="#b0">[1]</ref> works by finding the best match for an object in from overlapping candidates from . The first phase of the algorithm determines which features from the two timesteps overlap. The purpose of the overlapping test is to minimize the cases for the best matching tests. The second phase, the best matching test, is then performed on only those features which overlap. (Either a minimum difference or maximum overlap (used here) determines best match <ref type="bibr" target="#b0">[1]</ref>.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Overlap Detection</head><p>The object lists of two timesteps, and , are used to compute the overlap. The algorithm can be stated as follows (See <ref type="figure" target="#fig_3">Fig. 4</ref> and 1. For each timestep, collect all the nodes in the Object List.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Sort the list in ascending order on the NODE ID;</head><p>3. Compare the sorted list from with the sorted list from to detect overlap.</p><p>In this algorithm, we assume that the grids do not change over time. Each node in the dataset has a unique NODE ID. Two nodes from two time steps overlap if they occupy the physical location. The overlap detection is basically a "merge" of the two sorted lists:  The worst case of the overlap detection algorithm is , where , is the total number of nodes in the objects for time , and is the total number of nodes in the objects for . The dominant factor of the overlap test is the sorting. In the process of feature tracking, only one list needs to be sorted for overlap detection. The sorted list of can be saved for the next round of overlap detection. Therefore, the tracking time (for is . Procedures to limit the number of objects/features (such as deleting small regions, or manually selecting regions of interest) can speed up the process, as can scan-order feature extraction algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Overlap Detection</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Best Matching</head><p>The best matching criteria for tracking can be stated as, features and are considered matched where  is stored in the Overlap <ref type="table">Table for</ref>   <ref type="table">Table is</ref> , where and are the number of objects in and respectively. The nonzero entries in each row denote the objects in which overlap with the objects in . The value of the entries represents the (or the cumulative number of nodes). The best matching test checks all combinations of overlap to determine whether an object continues in the next timestep, or breaks up in two or more objects in the next timestep (bifurcation). Although this could be an exponential number of combinations (e.g., one large object breaks up into many smaller ones), for all of our experimentations, objects only overlap with a limited number of other objects. All of the columns with nonzero entries are used to generate combinations (for the forward best matching) to test for amalgamations with the objects not chosen in the above step. The remaining objects in the search space are tagged creation (for ), or dissipation (for ). The tracking program creates a trak-file <ref type="bibr" target="#b0">[1]</ref> which is essentially a DAG specifying each object's evolution into the next timestep. The object's reference into an object file which is created for each timestep and contains quantifications (volume, etc.) and polygonal bounding surfaces and color. For volume rendering, a marker dataset is created with objects tagged with their object identifications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results and Discussion</head><p>The new algorithm operates on both 2D and 3D datasets, structured, unstructured grids. Furthermore, it is easy to define features in this format. It can also be used for hybrid and adaptive grids as well. For hybrid grids, no extra information is required, since the algorithm works with 's and not structural elements. For unstructured dataset, 's are usually predefined. For datasets of regular, structured or hybrid grids, 's can be obtained by an appropriate hash function. For time-adaptive grids, the overlap test needs to know how the grid is refined in the next timestep, and either the node list of has to be converted to the node list of , or when the lists are traversed, the appropriate look-up is used to update the Overlap Table. However, the basic algorithm and data structure remains the same.</p><p>As well as being more general, the algorithm is faster than our previous algorithm, mainly because of the efficiency in computing quantifications (since the volume of intersection, as well as other properties, can be cached during the overlap detection) and because of the high overhead associated with octree construction.</p><p>Timings for various regular gridded datasets are shown in <ref type="table">Table 1</ref> (other results can be seen on <ref type="bibr" target="#b2">[2]</ref>). Results were obtained running on an SGI Octane with one R10000 195MHz CPU and 1G memory. The time for best matching test is usually trivial, compared with the sorting time which is dominant factor in our algorithm. However, only feature nodes (from one timestep) are sorted at each execution of the algorithm. Each feature can be maintained in sorted order (for scan-like feature extraction algorithms, when the threshold is known a-priori), so the entire list is already partially sorted, and only a merge is needed to obtain a fully sorted timestep. Other heuristics can also be introduced to limit the candidate objects for overlapping test. Obviously centroids can be first used to narrow number of objects for overlapping tests, however then criteria, such as moments, or volume, have to be used to avoid false filtering. For example, two large objects may overlap even if their centroids are far apart <ref type="bibr" target="#b4">[4]</ref>. These type of situations introduce problems which are easily resolved with full overlap testing. Coherences can also be exploited between timesteps for feature extraction and tracking. However, the extra time to check for "new objects" (and delete old ones) is almost equivalent to the time used to run through the basic algorithm. Even if the node list of is stored in a tree-like structure, each node from has to be checked/inserted into this tree, and then the entire tree has to be traversed for deletion (and re-balanced). This will not save any time and may cause memory overhead.</p><p>Because 4D continuum datasets are generally large, memory efficiency is crucial in designing an appropriate algorithm. One advantage of the pointer-list and merge algorithm is that an out-of-core memory algorithm is straightforward to implement (similar to the external sorting algorithm for mergesort).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Examples</head><p>In this section, we demonstrate the algorithm on both structured and unstructured datasets. The first example is from meteorology, (rectilinear gridded dataset), the second is from the simulation of decay of isotropic turbulence in a box (unstructured), and the third is from observational data for large-scale ocean circulation (Hybrid grid). The animations of these examples and other examples can be seen on the web site <ref type="bibr" target="#b2">[2]</ref>.</p><p>Meteorology In <ref type="figure" target="#fig_6">Figure 6</ref>, the feature tracking algorithm was applied to the cloud water simulation (regular datasets). This is a simulation using the MM5 modeling system of cloud formation over the eastern United States. The simulation consists of 25 datasets at a resolution of 35x41x23. Features are first extracted at the threshold of 0.00036 on the cloud water with the object segmentation routine. (In this example, we removed small regions with</p><p>.) The tracking information is used to color objects, providing visual cues on object evolutions. In <ref type="figure" target="#fig_6">Figure 6</ref>, images are rendered with FVis5D <ref type="bibr" target="#b30">[30]</ref>. FVis5D is a modified version of Vis5D <ref type="bibr" target="#b31">[31]</ref> that provides interactive feature-based visualization of large time-varying datasets. It integrates our object segmentation and feature tracking algorithms with Vis5D. Quantifications are also computed to assist analysis of the datasets. (This simulation was provided courtesy by the Mesoscale Prediction Group, Mesoscale and Microscale Meteorology Division, National Center for Atmospheric Research, and the Isotropic Turbulent Decay Simulation <ref type="figure" target="#fig_8">Figure 7</ref> is an LES simulation of the decay of isotropic turbulence in a box in a compressible flow using unstructured tetrahedral grids <ref type="bibr" target="#b32">[32]</ref>. The dataset consists of 500 time steps. The grid contains 35937 nodes and 163840 cells arranged in a cube. The dataset is segmented on vorticity magnitude at threshold of 0.05. Color is initially assigned randomly to each region. <ref type="figure" target="#fig_8">Figure 7(a)</ref> shows enhanced visualization with the feature tracking information. <ref type="figure" target="#fig_8">Figure 7(c)</ref> shows the number of objects changes as the isotropic turbulence decays. In <ref type="figure" target="#fig_8">Figure 7</ref>(b), one of the remaining features, at , is traced back to find its source (backward isolation). The volume change over time is shown in <ref type="figure" target="#fig_8">Figure 7</ref> Oceanography The dataset for this example is derived from observational data for large-scale ocean circulation (the monthly-mean Levitus data set). Spectral grids consisting of 15887 nodes and 240 cells are used to faithfully represent the highly irregular coastline of the ocean basin to collect the observation data. Structured grids are formed within each spectral cells to interpolate data to a regular long-latitude grid degree for simulation with spectral methods <ref type="bibr" target="#b33">[33]</ref>. It is actually a nested-hybrid mesh which uses a hexahedral grid as a base, and a structured grid within each hexahedral  <ref type="table">Table 1</ref>: Average feature tracking time between two time frames (in seconds) for 4 trial sample datasets </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Conclusions</head><p>In this paper, we have presented a new data structure and algorithm for feature tracking which are independent of grid type and dimension. The tracking algorithm has achieved significant speed up over our previous implementation. It works on any types of fixed grid and we are currently extending it to adaptive and multiblock grids.</p><p>We have also presented a process for analyzing continuum (timevarying) unstructured and structured datasets. These databases are huge and standard visualization programs do not provide any special capabilities to render or analyze temporal datasets other than creating animations. We have shown how feature tracking can enhance the visualization and allow the scientist to see and measure the evolution of observed phenomena. By focusing on features, the amount of information which must be assimilated is effectively reduced and it is presented to the scientist in a coherent and cogent manner. This is a crucial step to understanding massive 4D structured and unstructured datasets. Future efforts involve defining more complex feature types, extending the feature extraction and tracking algorithm to time-adaptive meshes, and building an integrated environment for scientific simulation and visualization.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Regular grid volume and its element -voxel.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>Unstructured grid and its element -tetrahedron.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5</head><label>5</label><figDesc>for illustration):</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Object lists are collected and sorted by NODE ID.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :</head><label>5</label><figDesc>Two sorted list are "merged" to detect overlap.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :</head><label>6</label><figDesc>Enhanced visualization of MM5 simulation with feature tracking information. The top images are four steps from the simulation. The middle image is one set of features extracted. The bottom graphs contains quantifications of the large object. dataset is generated using the fifth generation of Penn State/NCAR Mesoscale Model Version 2, Dr. Bill Kuo and Dr. Wei Wang.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>(d). (This simulation is courtesy of Prof. D. Knight and Dr. V. Shukla, Department of Mechanical and Aerospace Engineering, Rutgers University.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>Feature tracking of a simulation of the decay of isotropic turbulence in a box (unstructured dataset), 500 timesteps total: (a) isosurfaces are colored the same through their lifetime (b) backward isolation (c) number of objects vs time. (d) volume of backward isolated object in (b) over time. grid (See Figure 8(a) for illustration). To visualize this dataset, we converted it to an unstructured grid with explicit hexahedral connectivity. The resulting dataset contains 307200 hexahedral cells with a total 12 time steps. The variable being visualized is potential temperature. Figure 8(b) shows the evolution of the feature, "18 degrees water", with a threshold value between -17.75 to 18.25. Although this example is somewhat simple for feature tracking, the quantifications (i.e. volume, centroid, etc.) are of interest to scientists (Figure 8(c) and (d). Figure 9 shows the evolution of features with high potential temperature (at a threshold of 26.8). (This simulation is courtesy of Mohamed Iskandarani, and Enrique Curchister, at the Institute of Marine and Coastal Sciences, Rutgers University.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Tolerance is a measure of likeliness. It can be used to eliminate possible errors in false datasets or large time intervals, where overlapped objects may not imply correlation. Because of the temporal coherence, for feature tracking tolerance is desired, but not necessary. Best matching is the one that maximizes for many applications.The OverlapTable formedfrom the Overlap Test is used for the best matching test. The size of the Overlap</figDesc><table><row><cell></cell><cell>the best</cell></row><row><cell>matching test.</cell><cell></cell></row><row><cell>is maximized.</cell><cell></cell></row><row><cell>A constraint,</cell><cell>, may be imposed to avoid false</cell></row><row><cell>matching.</cell><cell></cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">Acknowledgment</head><p>The work presented here was done with the help of the members of the Laboratory for Visiometrics and Modeling and the CAIP center at Rutgers University. We thank the CAIP Center for their continued support. </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Tracking and Visualizing Turbulent 3D Fea-Figure 8: (a)3D spectral element used in the large-scale ocean circulation observation. (b) Evolution of a feature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>18 degree water&quot;) over time. (c) and (d) The associated quantifications are computed automatically as supporting analytical tools for the observation data. Figure 9: Evolution of the regions with high potential temperature (above 26.8)</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="1997-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Feature tracking home page</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<ptr target="http://www.caip.rutgers.edu/vizlab.html" />
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Computer Vision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Ballard</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1982" />
			<publisher>Prentice-Hall,Inc</publisher>
			<pubPlace>Englewood, New Jersey</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Visualizing features and tracking their evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ravi</forename><surname>Samtaney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deborah</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Norman</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jim</forename><surname>Cao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="20" to="27" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Integrating Computer Graphics, Computer Vision, and Image Processing in Scientific Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Carlbom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Chakravarty</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Hsu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="8" to="16" />
			<date type="published" when="1992-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Volume Tracking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Wang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;96</title>
		<meeting>IEEE Visualization &apos;96<address><addrLine>San Francisco, Ca</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="157" to="164" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Selective Visualization on Curvilinear Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van Walsum</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Delft, The Netherlands</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Delft University of Technology</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Object-Oriented Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1995-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Interval Set: A Volume Rendering Technique Generalizing Isosurface Extraction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;95</title>
		<meeting>IEEE Visualization &apos;95<address><addrLine>Atlanta, Georgia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-11-03" />
			<biblScope unit="page" from="3" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Geometrically Deformed Models: A Method for Extracting Closed Geometric Models from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Breen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">V</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>O'bara</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Wo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="217" to="226" />
			<date type="published" when="1991-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Deformable Surface Techniques for Field Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Sadarjoen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eurographics &apos;97</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Predictor-Corrector Technique for Visualizing Unsteady Flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="151" to="163" />
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An Algorithm for Space Recognition and Time Tracking of Vorticity Tubes in Turbulence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Villasenor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vincent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CVGIP: Image Understanding</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="35" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Merger and Cancellation of Strained Vortices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Buntine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">I</forename><surname>Pullin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Fluid Mech</title>
		<imprint>
			<biblScope unit="volume">205</biblScope>
			<biblScope unit="page" from="263" to="295" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Visualization of Vector Field Topology in Fluid Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="36" to="46" />
			<date type="published" when="1991-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A Wavelet-Packet Census Algorithm for Calculating Vortex Statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Siegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><forename type="middle">B</forename><surname>Weiss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Phys. Fluids</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">7</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A General Method for Tracking Analysis and its Application to Meteorological Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Hodges</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monthly Weather Review</title>
		<imprint>
			<biblScope unit="volume">122</biblScope>
			<biblScope unit="page" from="2573" to="2586" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Feature Tracking on the Unit Sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Hodges</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monthly Weather Review</title>
		<imprint>
			<biblScope unit="volume">123</biblScope>
			<biblScope unit="page" from="3458" to="3465" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Finding Trajectories of Feature Points in a Monocular Image Sequence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ishwar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ramesh</forename><surname>Sethi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jain</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="56" to="73" />
			<date type="published" when="1987-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Automatic tracking and characterization of african convective systems on meteosat pictures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Arnaud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Desbois</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maizi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Applied Meteorology</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="443" to="453" />
			<date type="published" when="1992-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">An Algorithm for Space Recognition and Time Tracking of Vorticity Tubes in Turbulence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Villasenor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vincent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CVGIP: Image Understanding</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="27" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Constructing a Reeb Graph Automatically from Cross Sections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Shinagawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kunii</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Application</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="45" to="51" />
			<date type="published" when="1991-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Compression Domain Rendering of Time-Resolved Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;95</title>
		<meeting>Visualization&apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Visualizing Features and Tracking Their Evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samtaney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="20" to="27" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Ellipsoidal Quantification of Evolving Phenomena</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">J</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Fernandez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samtaney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization of Physical Phenomena. Proceedings of Computer Graphics International &apos;91 Symposium</title>
		<editor>N. M. Patrikalakis</editor>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1991-06" />
			<biblScope unit="page" from="573" to="588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Volume Probes: Interactive Data Exploration on Arbitrary Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Don</forename><surname>Speray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Steve</forename><surname>Kennon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="5" to="12" />
			<date type="published" when="1990-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Ekaterinaris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">B</forename><surname>Schiff</surname></persName>
		</author>
		<ptr target="http://science.nas.nasa.gov/Software/DataSets/" />
		<title level="m">NASA Ames Delta Wing Dataset</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Interval Volume Tetrahedrization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Franke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;97</title>
		<meeting>IEEE Visualization &apos;97<address><addrLine>Phoenix, Arizona</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">The Visualization Toolkit</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lorensen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xin</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Deborah</forename><surname>Silver</surname></persName>
		</author>
		<ptr target="http://www.caip.rutgers.edu/xswang/vis5d/index.html" />
		<title level="m">Vis5D Enhanced with Feature Tracking</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hibbard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Paul</surname></persName>
		</author>
		<ptr target="http://www.ssec.wisc.edu/billh/vis5d.html" />
		<title level="m">Vis5D Visualization Package</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Large Eddy Simulation of Compressible Flows Using Unstructured Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Doyle</forename><surname>Knight</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gang</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nora</forename><surname>Okong'o</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vijay</forename><surname>Shukla</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">First AFOSR International Conference on DNS/LES. Louisiana Tech University</title>
		<imprint>
			<date type="published" when="1997-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">A Staggered Spectral Element Model With Application to the Oceanic Shallow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mohamed</forename><surname>Iskandarani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dale</forename><forename type="middle">B</forename><surname>Haidvogel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">P</forename><surname>Boyd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal for Numerical Methods in Fluids</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="393" to="414" />
			<date type="published" when="1995-05" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
