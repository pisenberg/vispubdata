<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Progressive Tetrahedralizations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Oliver</forename><forename type="middle">G</forename><surname>Staadt</surname></persName>
							<email>staadt@inf.ethz.ch</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">Computer Graphics Research Group</orgName>
								<orgName type="institution">Swiss Federal Institute of Technology (ETH) Zurich</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
							<email>grossm@inf.ethz.ch</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="laboratory">Computer Graphics Research Group</orgName>
								<orgName type="institution">Swiss Federal Institute of Technology (ETH) Zurich</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Progressive Tetrahedralizations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling -surfaces and object representations mesh simplification</term>
					<term>multiresolution</term>
					<term>level-ofdetail</term>
					<term>unstructured meshes</term>
					<term>mesh generation</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper describes some fundamental issues for robust implementations of progressively refined tetrahedralizations generated through sequences of edge collapses. We address the definition of appropriate cost functions and explain on various tests which are necessary to preserve the consistency of the mesh when collapsing edges. Although being considered a special case of progressive simplicial complexes [10], the results of our method are of high practical importance and can be used in many different applications, such as finite element meshing, scattered data interpolation, or rendering of unstructured volume data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Progressive meshes <ref type="bibr" target="#b6">[7]</ref> and its generalizations to higher dimensions <ref type="bibr" target="#b9">[10]</ref> proofed to be an extremely powerful notion for the efficient representation of triangulated geometric objects at different levels-of-detail. Although a general formulation for arbitrary triangulations has already been given in <ref type="bibr" target="#b9">[10]</ref>, the special case of progressive tetrahedralizations (PT) is of enormous practical importance, since it can be used as a sophisticated representation for a large variety of computations. Finite element discretizations, from where our contribution was motivated, are one example. Here, sophisticated computational methods try to find an optimal balance between refinements of the mesh and of the polynomial degree of the basis functions. Other important applications of progressive tetrahedralizations comprise interpolation and rendering of scattered volume data, where successively refinable methods would definitely improve the performance of existing approaches. A general overview of various mesh simplification methods, including those based on edge collapses, can be found in <ref type="bibr" target="#b5">[6]</ref>.</p><p>However, regardless of the brilliance and simplicity of the idea of edge collapsing, a brute force implementation of the method may rapidly destroy the consistency of the mesh. Various artifacts can be introduced, such as flipped, intersected and degenerated tetrahedra, which in turn may impede any finite element computation. An example is given in <ref type="figure" target="#fig_0">Fig. 1</ref>. Here two boundary tetrahedra intersect due to an edge collapse in a locally concave mesh region.</p><p>In this paper we elaborate on some pitfalls and fallacies people might get caught in when trying to implement the method of edge collapsing for tetrahedral meshes. Specifically, we address the issue of defining appropriate cost functions. Unlike the elegant geometric approach presented in <ref type="bibr" target="#b6">[7]</ref>, we must account for volume and application specific properties, such as volume preservation, gradient estimation of the underlying data or aspect ratio of the simplex. In addition, we devised a sequence of tests to guarantee a robust and consistent progressive tetrahedralization. Some results obtained on computational fluid dynamics (CFD) data sets illustrate the performance of the PT 1 .</p><p>The remainder of this paper is outlined as follows:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>In Section 2, we recapitulate previous work that is closely related to our method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>The main part of this paper (Section 3) elaborates on the core algorithm of our PT scheme and introduces new cost functions for tetrahedral meshes and special tests that guarantee mesh consistency. • Finally, we describe some implementation issues and demonstrate the method's usefulness on an irregular mesh data set of a turbine blade in Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>There are numerous schemes for simplifying geometric meshes in computer graphics and scientific visualization, of which Garland and Heckbert provide an extensive overview in <ref type="bibr" target="#b5">[6]</ref>. Intersection of two tetrahedra: a) The edges of two non-adjacent tetrahedra bounding the volume intersect while collapsing an edge in a locally concave mesh region. b) Close-up of the intersection (see also CP 1). <ref type="bibr" target="#b0">1</ref> The method is currently implemented as a set of AVS/ Express modules and will be made available shortly. Previous work closely related to our method can be broadly categorized into 2 main classes. Firstly, methods based on edge-collapse/vertex-split transformations and secondly, decimation methods which specifically support simplification of volumetric data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Methods based on edge collapsing</head><p>Hoppe et al. <ref type="bibr" target="#b8">[9]</ref> proposed a triangular mesh simplification scheme, based on edge collapse and vertex split transformations. A set of energy functions is used in order to decide on the sequence of edge collapse transformations, and a sophisticated optimization method, which determines the position of the new vertex, is provided. Hoppe <ref type="bibr" target="#b6">[7]</ref> extended this work with support for selective refinement and progressive transmission, as well as with lossy geometric compression <ref type="bibr" target="#b1">[2]</ref> and the possibility to interpolate smoothly between different levels of approximation (geomorphs). A more detailed description of progressive meshes is given in Section 3.1.</p><p>This has been the basis for several other extensions. Xia et al. <ref type="bibr" target="#b15">[16]</ref> and Hoppe <ref type="bibr" target="#b7">[8]</ref> focused on fast, hierarchical representations, that enable one to efficiently reconstruct selected parts of a triangular progressive mesh. All of these algorithms preserve the topology of the original data, whereas others <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b11">12]</ref> allow topological changes, such as filling of holes or connecting disconnected parts of a mesh. Popovic et al. <ref type="bibr" target="#b9">[10]</ref> devised a general approach for arbitrary dimensional simplicial complexes, which also allows topological changes of the data, in order to further reduce the complexity of the mesh. Unfortunately, they only provide an implementation and examples for the triangular case. Other important types of simplices, such as tetrahedra, are not addressed in detail.</p><p>Other work <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b12">13]</ref> differs from <ref type="bibr" target="#b8">[9]</ref> and <ref type="bibr" target="#b6">[7]</ref> in the ordering of edge collapse transformations and the optimization method which specifies the new vertex position. Garland et al. <ref type="bibr" target="#b2">[3]</ref> propose a very elegant scheme using quadrics for both tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Vertex removal methods</head><p>Various decimation algorithms have been published, which remove single vertices from the mesh and retriangulate the resulting hole. One of the most widely used methods in that category is Schroeder et al. <ref type="bibr" target="#b13">[14]</ref>.</p><p>Fewer methods have been devised that decimate higher dimensional simplicial complexes. Staadt et al. <ref type="bibr" target="#b14">[15]</ref> presented a method for simplifying and compressing unstructured triangular and tetrahedral meshes by using hierarchical, wavelet-based decimation schemes and Delaunay tetrahedralization. Grosso et al. <ref type="bibr" target="#b3">[4]</ref> use finite element computations to represent triangular and tetrahedral meshes at multiple levels. Cignoni et. al <ref type="bibr" target="#b0">[1]</ref> propose a framework which is based on a decimation method and allows one to represent tetrahedral meshes at arbitrary resolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PROGRESSIVE TETRAHEDRALIZATI-ONS</head><p>For reasons of readability, we recapitulate some basic definitions for progressive meshes <ref type="bibr" target="#b6">[7]</ref> and adapt them to progressive tetrahedralizations (PT). General introductions are provided in <ref type="bibr" target="#b6">[7]</ref> or <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Background</head><p>In PT representations, a tetrahedral mesh with scalar attributes assigned to each vertex is defined as <ref type="formula">1</ref>where is some coarse base mesh and are vertex split operations to reconstruct the original mesh from :</p><formula xml:id="formula_0">. (2)</formula><p>Conversely, is derived from through a series of edge collapse operations which are inverse to :</p><p>.</p><p>Each replaces an edge with vertices and by a new vertex . As opposed to some other methods we preserve the topological type of the mesh, that is, all instances of are homeomorphic. Specifically, we prohibit degenerations of tetrahedra into lower dimensional simplices. The set of tetrahedra sharing will be called . Thus, an edge split adds the tetrahedra in to the list of active elements. Conversely, the set of non-vanishing tetrahedra affected by the associated edge collapse is called . <ref type="figure" target="#fig_2">Fig. 2</ref> depicts an edge collapse operation in a tetrahedral mesh. All tetrahedra sharing vanish, whereas all tetrahedra sharing only one of the vertices of the edge change in shape.</p><p>In order to compute a sequence of robust, non-degenerate and consistent meshes, the following aspects have to be considered: </p><formula xml:id="formula_2">s i v i M 0 vsplit 0 vsplit 1 … vsplit n 2 -vsplit n 1 - , ,<label>, , , ( )</label></formula><formula xml:id="formula_3">M 0 vsplit i M M n = M 0 M 0 vsplit 0 M 1 vsplit 1 … vsplit n 1 - M n M 0 M ecol i vsplit i M n ecol n 1 - M n 1 - ecol n 2 - … ecol 0 M 0 ecol i e i v a v b v a M e i icells i { } icells i { } ncells i { } e i v 1 v 2 v 4 v 3 v a v 5 v 4 v 3 v 1 v 2 v 5 v a v b a) b) ncells i { } icells i { } v a v b , ( ) v a •</formula><p>Cost functions which determine the order of ecol operations depending on desired mesh optimization criteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Sharp and feature edges which should be preserved can be checked during preprocessing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Intersections and inversions of tetrahedra inside and outside of , such as the one in <ref type="figure" target="#fig_0">Fig. 1</ref>, have to be processed at run time.</p><p>The remainder of this paper elaborates on the details of these issues.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Cost Functions</head><p>As already mentioned in Section 2, various elegant algorithms <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b6">7]</ref> based on the ecol/vsplit paradigm used cost functions optimized for triangular surfaces, often accounting for distance measures, triangle shape, and others. In tetrahedral meshes, however, we have to redefine the terms of the cost function considering other features, like volume preservation or gradients. Although many different measures are conveivable to control the simplification process, the following ones yield a good balance between required degrees of freedom and the difficulty of parameter optimization.</p><p>Thus, in our setting, for each edge , the associated edge collapse operation is assigned the following cost:</p><p>.</p><p>The first term is defined as <ref type="bibr" target="#b4">(5)</ref> and forms a simplified measure for the difference of underlying scalar volume function along the edge . Hence, edges with considerably differing scalar attributes are assigned high costs.</p><p>When collapsing edges and removing tetrahedra from the mesh, the overall volume tends to decrease, that is the mesh shrinks down. Therefore, we introduce a second term penalizing volume changes:</p><p>. <ref type="bibr" target="#b5">(6)</ref> denote all tetrahedra in the set of neighborhood cells of and introduced cells , respectively. stands for the volume of and is the tetrahedron after the collapse. Note that only simplices in can contribute to volume changes.</p><p>Especially in FEM applications, it is often required that tetrahedra sustain equilateral shape.</p><p>can be employed in order to balance the edge length of tetrahedra: <ref type="bibr" target="#b6">(7)</ref> with edge length and average edge length .</p><p>Each term can be weighted individually by coefficients , and , respectively, to allow adoption to specific data sets and applications.</p><p>Note that the initial mesh will usually be generated from some triangulation scheme. Depending on the application context and the desired mesh features it can be advantageous to include some into the cost function thereby enforcing short edges to be collapsed earlier.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Static Tests</head><p>Unfortunately, brute force selection of edges according to the cost function from above can introduce mesh inconsistencies, like degeneration, folding, intersection, or loss of individual features.</p><p>In order to avoid these types of artifacts, some static tests can be carried out prior to building the edge heap. Before we introduce the test criteria we have to define some properties of edges and vertices: Sharp edges can be detected efficiently by analyzing all vertices assuming appropriate data structures to represent the mesh. In a preprocessing step we label all sharp vertices and edges, respectively. <ref type="table" target="#tab_1">Table 1</ref> lists the 5 different cases for combinations of sharp edges and vertices. Only cases 1 and 5 pass the consistency test. </p><formula xml:id="formula_5">icells i { } ncells i { } ∪ { } e i v a v b , ( ) = ecol i a b , ( ): M i M i 1 + ← E ∆ e i ( ) E grad ∆ e i ( ) E vol ∆ e i ( ) ∆E equi e i ( ) + + = ∆E grad ∆E grad e i ( ) w grad s a s b - ⋅ = e i ∆E vol ∆E vol e i ( ) w vol vol T j ( ) vol T j ( ) - ( ) vol T j ( ) T j icells j { } ∈ ∑ + T j ncells i { } ∈ ∑     ⋅ = T j ncells i { } e i icells i { } vol T j ( ) T j T j icells i { } ncells i { } ∪ ∆E equi</formula><formula xml:id="formula_6">∆E equi e i ( ) w equi l a b , m j - ( ) 2 a b , { } T j ∈ ∑ l a b , m j - ( ) 2 a b , { } T j ∈ ∑ -     T j ncells i ∈ ∑ ⋅ = l a b , v a v b - = m j 1 T j ⁄ l a b , a b , { } T j ∈ ∑ ⋅ = w grad w vol w equi M n ∆E edgelen e i ( ) w edgelen v a v b - ⋅ = e i v i v i f i T i v j icells i { } ∈ e v a v b v 3 v 4 , ( ) v 1 v 14 , ( ) v 3 v 2 , ( ) v 9 v 8 v 10 , ( ) v 0 v 1 , ( )</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Dynamic Tests</head><p>Unfortunately, not all inconsistencies can be fixed with the static tests from above. Some severe problems arise dynamically while performing individual ecol operations and further tests are required on the fly.</p><p>The normal flipping heuristic from <ref type="bibr" target="#b11">[12]</ref> can be generalized in order to circumvent folding or self-intersection of tetrahedra. This can easily be implemented by analyzing the volume of all before and after the collapse. Recall that the volume of a tetrahedron is defined by the parallelepipedial product of its 3 edges :</p><p>.</p><p>If the volume of one of the neighboring tetrahedra becomes negative, tetrahedral folding occurs. In this case the edge fails the consistency test. This test also avoids degenerate cells by setting a lower volume threshold to be retained after the collapse.</p><p>We start from the following observation: edge collapses can cause global intersections of tetrahedra, a simple example of which is shown in <ref type="figure" target="#fig_0">Fig. 1</ref>. This requires additional testing. If the set contains no sharp edge, it's boundary forms a polytope entirely wrapping the edge. A collapse of the edge, however, does not affect the boundary of the polytope, whose disjoint triangulation is given by the tetrahedra . Thus, intersections can only occur with sharp cells and we can restrict the intersection tests to the mesh boundary. <ref type="figure">Fig. 4a</ref> depicts the top view of a tetrahedral mesh where is a sharp cell that is close to, but not intersecting the boundary of the mesh. Let be the edge to be collapsed next and let vertex be closer to the viewpoint than . The situation after the collapse where is intersecting two faces of is depicted in <ref type="figure">Fig. 4b</ref>.</p><p>In essence, we have to perform triangle-triangle intersection tests <ref type="bibr" target="#b10">[11]</ref> in case of sharp edges or vertices which can be carried out as follows:</p><p>First, we define the set of triangles containing all sharp faces of tetrahedra . These are the faces which can change after since they all share the new vertex . Thus they are our prime candidates for intersection with other sharp faces.</p><p>In order to avoid testing these faces against all other sharp tetrahedra, we propose the following iterative method: The algorithm starts from an initial set containing the subset of all sharp tetrahedra in the direct neighborhood of .</p><p>We take the first element of and test for intersection with all faces in . If the test fails and no intersection occurs, we label the tetrahedron as visited and proceed to the next element of . Otherwise we can abort the test and reverse the current operation. The restriction to the sharp faces of each tetrahedron simplifies the intersection test, since many cell have only one sharp face (see <ref type="figure">Fig.  4</ref>). After probing all cells, we replace all visited tetrahedra in with their non-visited neighboring sharp cells and thereby traverse the mesh. The are shown in <ref type="figure">Fig. 4c</ref> for different iteration steps.</p><p>The following pseudo code summarizes the principle steps of the intersection test:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Edge Collapse</head><p>After calculating the cost of each edge and determining the static conditions of the corresponding edge collapse operation, we build a heap with all remaining edges sorted according to their associated costs. In order to carry out the edge collapse , we pop the topmost edge from the heap, check for intersections, construct a record for reconstruction, and update all edges on the heap which are in . This process is repeated until the heap is empty or the desired number of collapses has been reached. Although we implemented various schemes for the optimal positioning of , such as stochastic optimization, we found that the halfway between and is a good choice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>Our implementation is currently integrated into AVS/ Express. Although in this paper we focus on specific issues of tetrahedral meshes, our AVS/Express modules can handle triangular meshes as well.</p><p>For the following investigations, an irregular mesh of a turbine blade was selected. The original data set consists of 576,576 tetrahedra with scalar node data representing pressure between the blades. <ref type="figure" target="#fig_4">Fig. 3</ref> shows results with various levels of reconstruction, different settings of the cost functions, and extracted isosurfaces, both for the original mesh and for a selected subset with only one blade. <ref type="table" target="#tab_2">Table 2</ref> lists the performance statistics and parameter settings used to generate the example meshes.</p><p>denotes the original number of tetrahedra and is the number of tetrahedra of the reconstructed mesh. , , and indicate the individual cost function terms used for the example. Time shows the computation time for a full mesh collapse, i the number of vsplits, and Hits the number of dynamically detected intersections ( ). The performance of our algorithms was measured on an Indigo2 R10000@195MHz. The reconstruction time for the examples was between 0.1s and 0.8s, depending on the number of splits. <ref type="figure" target="#fig_4">Fig. 3a</ref> shows isosurfaces of the blades, extracted from at isovalue 5.0. A slice through the mesh is displayed in order to depict the irregularity of the mesh reconstruction. Note especially the high quality of the isosurfaces which confirms the effectiveness of . A subset of the mesh with one blade is shown in <ref type="figure" target="#fig_4">Fig. 3b</ref>-c for two different resolutions. In order to balance the individual terms of , the weights were set to , , and , respectively.</p><p>In <ref type="figure" target="#fig_4">Fig. 3d</ref>, the mesh is cut to render its internal structure. In order to emphasize the influence of individual cost function terms we computed <ref type="figure" target="#fig_4">Fig. 3e-g</ref>.We observe that each of the energy terms stands for a specific feature.</p><p>, for instance in <ref type="figure" target="#fig_4">Fig. 3e</ref> reconstructs the blade region very well, but violates volume preservation and produces poorly shaped simplices. As expected, sustains the volume, whereas preserves the equilateral shape of the tetrahedra.</p><p>Usually, it can not be guaranteed that all intersections are detected with . For the above example the total number of intersection hits with is 6,116, which means that 98.8% of the intersections have already been detected at iteration level 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSIONS AND FUTURE WORK</head><p>We have presented a technique for generating progressive tetrahedralizations, especially emphasizing on problems such as intersections or degenerations. The cost functions that we have proposed are well suited for a wide range of volume data sets in different applications areas. Although tetrahedral mesh decimation is a complex task, we have implemented a fast and efficient method that avoids most of the pitfalls of tetrahedral meshing.</p><p>Future work will be directed towards combining the optimization of vertex placement after edge collapse with avoiding selfintersection and folding. By solving a constraint linear optimization problem <ref type="bibr" target="#b10">[11]</ref>, we can determine a polytope, in which the new vertex can be placed intersection-free. We would also like to enhance error analysis in order to quantify geometric and data approximation errors.   ∆E grad ∆E vol ∆E equi</p><formula xml:id="formula_8">ecol i vsplit i ncells i { } v a v a v b M n M i ∆E grad ∆E</formula><formula xml:id="formula_9">v 1 v 2 v 4 v 3 v a v 5 v 4 v 3 v 1 v 2 v 5 v a v b a) b) ncells i { } icells i { } v a v b , ( ) v</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Intersection of two tetrahedra: a) The edges of two non-adjacent tetrahedra bounding the volume intersect while collapsing an edge in a locally concave mesh region. b) Close-up of the intersection (see also CP 1).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Edge collapse in a tetrahedral mesh: a) Mesh before collapsing edge . b) Configuration after collapse with resulting vertex . (The tetrahedra are shrinked to emphasize the underlying 3-dimensional structure. See also CP 2).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :CP 1 :CP 2 :</head><label>512</label><figDesc>PT representations of an irregular turbine blade mesh. a) Extraction of isosurfaces of the turbine blades using marching tetrahedra. b)-c) Part of the data set at different reconstruction levels with shrinked tetrahedra. d) Part of the mesh is cut to render its internal features. e) PT with . f) . g) only. Parameter settings and performance statistics are listed inTable 2. (See also CP 3. Data set courtesy of AVS Inc.) Intersection of two tetrahedra: a) The edges of two non-adjacent tetrahedra bounding the volume intersect while collapsing an edge in a locally concave mesh region. b) Close-up of the intersection. Edge collapse in a tetrahedral mesh: a) Mesh before collapsing edge . b) Configuration after collapse with resulting vertex . (The tetrahedra are shrinked to emphasize the underlying 3-dimensional structure.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>a CP 3 :</head><label>3</label><figDesc>PT representations of an irregular turbine blade mesh. a) Extraction of isosurfaces of the turbine blades using marching tetrahedra. b)-c) Part of the data set at different reconstruction levels with shrinked tetrahedra. d) Part of the mesh is cut to render its internal features. e) PT with . f) . g) only. Parameter settings and performance statistics are listed inTable 2. (Data set courtesy of AVS Inc.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>The 5 possible cases for combinations of sharp edges and sharp vertices. The examples refer to Fig. 3.</figDesc><table><row><cell>CASE</cell><cell></cell><cell>PERMISSIBLE</cell><cell>EXAMPLE</cell></row><row><cell>1</cell><cell></cell><cell>yes</cell></row><row><cell>2</cell><cell>sharp</cell><cell>optional a</cell></row><row><cell>3</cell><cell>sharp</cell><cell>optional a</cell></row><row><cell>4</cell><cell>sharp sharp</cell><cell>no b</cell></row><row><cell>5</cell><cell>sharp sharp sharp</cell><cell>yes c</cell></row><row><cell cols="4">a: cases 2 and 3 induce "dents" on the boundary surface which</cell></row><row><cell cols="2">may not be desired.</cell><cell></cell></row><row><cell cols="3">b: case 4 introduces degenerated cells, since</cell><cell>is not deleted.</cell></row></table><note>c: a sharp edge always implies that its vertices are sharp. Sim- plifications of the boundary surfaces are allowed.</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Parameter settings and performance statistics for the results shown inFig. 3.</figDesc><table><row><cell>Fig.</cell><cell>M n</cell><cell>M i</cell><cell cols="3">E grad E vol E equi Time</cell><cell>i</cell><cell>Hits</cell></row><row><cell cols="3">a) 576,576 117,139</cell><cell></cell><cell></cell><cell cols="2">4h57' 15,000 40,415</cell></row><row><cell>b)</cell><cell>78,624</cell><cell>8,317</cell><cell></cell><cell></cell><cell cols="2">34'23" 1,000 6,040</cell></row><row><cell>c)</cell><cell cols="2">78,624 13,327</cell><cell></cell><cell></cell><cell cols="2">34'23'' 2,000 6,040</cell></row><row><cell>d)</cell><cell cols="2">78,624 13,327</cell><cell></cell><cell></cell><cell cols="2">34'23'' 2.000 6,040</cell></row><row><cell>e)</cell><cell cols="2">78,624 10,554</cell><cell></cell><cell>!</cell><cell cols="2">! 19'26'' 1,000 2,386</cell></row><row><cell>f)</cell><cell>78,624</cell><cell cols="2">7,440 !</cell><cell></cell><cell>! 41'58''</cell><cell>500 7,919</cell></row><row><cell>g)</cell><cell>78,624</cell><cell cols="2">8,169 !</cell><cell>!</cell><cell cols="2">39'35'' 1,000 4,798</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This research was supported in parts by the ETH research council under grant No. 41-2642.5 and the Schlumberger Stichting Fund. Our special thanks to Marcelo Vetter for implementing parts of the algorithms.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Note that the test asymptotically traverses all sharp faces of the mesh and consumes time proportional , where stands for the number of elements in and for the overall number of sharp faces in the data set. As we will demonstrate in Section 4, one can restrict the iteration to an upper bound in practice. </p><p>sharp edge regular edge   </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Multiresolution representation and visualization of volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="352" to="369" />
			<date type="published" when="1997-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Geometry compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Deering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 95 Conference Proceedings, Annual Conference Series</title>
		<editor>R. Cook, editor</editor>
		<meeting><address><addrLine>Los Angeles, California</addrLine></address></meeting>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="6" to="11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIG-GRAPH &apos;97 Proceedings)</title>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The multilevel finite element method for adaptive mesh optimization and visualization of volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grosso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lürig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;97</title>
		<meeting>IEEE Visualization &apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="387" to="394" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Surface simplification inside a tolerance volume</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Guéziec</surname></persName>
		</author>
		<idno>RC 20440</idno>
		<editor>IBM T. J. Watson Research Center</editor>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Course no. 25: Multiresolution surface modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Soucy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Course Notes for SIGGRAPH &apos;97. ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96 Proceedings)</title>
		<editor>H. Rushmeier</editor>
		<imprint>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">View-dependent refinement of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;97</title>
		<meeting>SIGGRAPH &apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="189" to="198" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Mesh optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIG-GRAPH &apos;93</title>
		<meeting>SIG-GRAPH &apos;93</meeting>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Progressive simplicial complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;97 Proceedings)</title>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="217" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Computational Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Preparata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Shamos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Springer</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Full-range approximation of triangulated polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ronfard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of EUROGRAPH-ICS &apos;96</title>
		<meeting>EUROGRAPH-ICS &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="67" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A topology modifying progressive decimation algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;97</title>
		<meeting>IEEE Visualization &apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="205" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Decimation of triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;92</title>
		<meeting>SIGGRAPH &apos;92</meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Multiresolution compression and reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">G</forename><surname>Staadt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Weber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization</title>
		<meeting>IEEE Visualization</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="337" to="346" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Adaptive real-time level-of-detail-based rendering for polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="171" to="183" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
