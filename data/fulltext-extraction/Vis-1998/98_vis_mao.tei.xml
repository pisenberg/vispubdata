<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Image-Guided Streamline Placement on Curvilinear Grid Surfaces</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaoyang</forename><surname>Mao</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Media Engineering Yamanashi University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yuji</forename><surname>Hatanaka</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Media Engineering Yamanashi University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hidenori</forename><surname>Higashida</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Media Engineering Yamanashi University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Atsumi</forename><surname>Imamiya</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Media Engineering Yamanashi University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Image-Guided Streamline Placement on Curvilinear Grid Surfaces</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Vector field visualization</term>
					<term>flow visualization</term>
					<term>streamline</term>
					<term>curvilinear grid</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The success of using streamline technique for visualizing a vector field usually depends largely on the choice of adequate seed points. Turk and Banks developed an elegant technique for automatically placing seed points to achieve a uniform distribution of streamlines on a 2D vector field. Their method uses an energy function calculated from the low-pass filtered streamline image to guide the optimization process of the streamline distribution. This paper proposes a new technique for creating evenly distributed streamlines on 3D parametric surfaces found in curvilinear grids. We make use of Turk and Banks&apos;s 2D algorithm by first mapping the vectors on a 3D surface into the computational space of the curvilinear grid. To take into the consideration the mapping distortion caused by the uneven grid density in a curvilinear grid, a new energy function is designed and used for guiding the placement of streamlines in the computational space with desired local densities.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Although a lot of new sophisticated vector field visualization techniques have been developed, ranging from topology based approaches <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref> to texture-based approaches <ref type="bibr" target="#b6">[7]</ref>, streamline remains to be a powerful technique widely used by the scientists from various application fields. One important issue in using streamline technique is how to choose the initial positions of streamlines, say seed points, to get an effective representation of a vector field. Although the measure to the quality of a streamline image should be data and application dependent, one important factor affecting the visual effect of a streamline image is the density of streamlines. Usually it is desirable to have streamlines distributed uniformly over the whole vector field without being too crowed at some areas while leaving other areas not visualized. In SIGGRAPH96, Turk and Banks <ref type="bibr" target="#b10">[11]</ref> introduced an elegant *Takeda 4-3-11, Kofu Yamanashi 400-8511, Japan</p><p>Tel&amp;Fax +81-552-20-8652 E-mail mao@esi.yamanashi.ac.jp technique for automatically creating uniformly distributed streamlines in a 2D vector field. Their approach uses an energy function calculated from the low-pass filtered streamline image to measure the difference between the current image and the image of a desired distribution. Optimization of streamline distribution is realized as the process to minimize the energy function, by successively adding modifications to the positions and lengths of streamlines. The purpose of this paper is to develop a new technique for creating uniformly distributed streamlines on 3D parametric surfaces found in curvilinear grids. A curvilinear grid can be considered as a regular grid of unit cell size subjected to non-linear transformations so as to fill a volume or warp around an object of complex shape while keeping the grid topology <ref type="bibr" target="#b11">[12]</ref> unchanged. Usually, the regular grid defining the logical organization of the grid is called the computational space,and the warped structure is called the physical space of a curvilinear grid. The vectors near the surface of an object usually can be obtained by taking one 2-dimensional slice out of the grid. If we treat the computational space as the parametric space, then such a slice is actually a 3D parametric surface in physical space. Hereafter we will use the term parametric surface and curvilinear grid surface interchangeably. Visualizing the flow over such surfaces is required in many application fields. For example, in aerodynamics simulation, the air flow over the surface of a space shuttle or aircraft is often of largest interest to scientists and engineers.</p><p>Our approach extends Turk and Banks' 2D image-guided streamline placement technique in a similar way as that introduced in <ref type="bibr" target="#b3">[4]</ref> for extending 2D line integral convolution algorithm for 3D curvilinear grid surfaces. First, the vectors on a 3D curvilinear surface are mapped into computational space. Then, an extended 2D image-guided algorithm is used to generate a set of streamlines of desired density distribution, and finally, the resulting streamlines are mapped back onto the 3D surface. In most curvilinear grids, however, the grid density usually varies largely over the physical space. Therefore streamlines uniformly distributed in the computational space usually will no longer be evenly spaced after being mapped back to the physical space. To solve this problem, it is necessary to locally adapt the density of streamlines in the computational space to the inverse of the grid density in the physical space. In principle, this can be realized by using elliptical filter kernels, with their sizes matching the local grid density, in generating the low-pass filtered streamline image. However, the grid density and hence the sizes of filter kernels usually possess a large dynamic range. The size of a streamline image with its resolution matches the size of the smallest filter kernel tends to be very large and convolving such a large image with those large filter kernels can be very time-consuming. Based on this consideration, we have designed a new energy function and use it for efficiently guiding the placement of streamlines in the computational space. A statistic space sampling technique called Poisson ellipse sampling <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref> is employed to distribute over the computational space a set of rectangular windows. These windows are then used to measure the local energy within there and the sum of all the local energy defines the energy of the whole streamline distribution. Our experiments show that the new energy function can be used for successfully guiding the placement of uniformly distributed short streamlets as well as long streamline on 3D curvilinear grid surfaces.</p><p>In rest of the paper, we first give a brief review of the imageguided streamline placement technique and discuss some related works in Section 2. The new energy function is introduce in Section 3 and Section 4 describes the algorithm for creating uniform streamline distribution on 3D curvilinear grid surfaces. Section 5 shows the results of applying our new technique to a CFD data set. Finally we conclude the paper by showing some future research directions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Background</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Image-guided streamline placement</head><p>Assuming the streamlines distributed over a 2D grid has been scanconverted into a binary image within which the foreground pixels (having bright values) stand for streamlines. The basic idea behind the image-guided streamline placement technique <ref type="bibr" target="#b10">[11]</ref> is that if the streamlines are uniformly distributed, we should be able to obtain an evenly gray image after low-pass filter the binary image. In other words, if the streamlines are not evenly distributed, then the areas where the streamlines are overpopulated should have bright pixel values while the areas devoid of streamlines should remain to be dark in the low-pass filtered image. Therefore, the sum of the difference with a given gray-scale value at each pixel of the low-pass filtered image provides a quantitative measurement to the quality of the streamline distribution. Turk and Banks call this sum of difference the energy of the streamline image and use it to guide the placement of streamlines. Denoting the binary streamline image as I, low-pass filter as L, gray-scale value as t, then the energy function E can be represented as</p><formula xml:id="formula_0">EI = Z x Z y L Ix; y , t 2 dxdy:</formula><p>The density of streamlines can be controlled simply by adjusting the size of low-pass filters.</p><p>To place evenly spaced short streamlets on a 2D vector field, an initial set of streamlets is created either by placing them on grid points or in some random fashion. Then the distribution of streamlets is improved by repeatedly executing the following operations until the energy function reaches a threshold or the accepted changes are rare:</p><p>1. Randomly choose a streamlet and move it a small distance in a random direction.</p><p>2. If the resulting image has lower energy than the previous image, then the change is accepted</p><p>Creating evenly spaced long streamline is realized by starting from an initial set of streamlets and repeatedly executing following operations in addition to the change of seed point positions.</p><p>1. create a new streamlet.</p><p>2. remove a streamline.</p><p>3. lengthen or shorten a streamline.</p><p>4. connect two streamlines whose end points are sufficiently close to one another.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Related works</head><p>Rather than as a random optimization process, Jordan and Lefer proposed another method for creating evenly spaced long streamlines in a single pass <ref type="bibr" target="#b5">[6]</ref>. They achieve the target streamline distribution by incrementally adding new streamlines under the constraint that the distances among the newly added streamline and all the existing streamlines are not smaller than a given constant, which is used to control the density of streamlines. A new streamline is added by growing from a seed point forward and backward until it becomes too close to another streamline. Their approach is similar to the technique developed by Max et al. for covering a 3D surface with long evenly spaced particle traces <ref type="bibr" target="#b7">[8]</ref>. Although it is reported in <ref type="bibr" target="#b5">[6]</ref> that the distance-based approach is superior to the imageguided approach in speed, we prefer adopting the image-guided approach here because it seems difficult to use the distance-based approach for achieving the anisometric density distribution (it is necessary because the grid density in a curvilinear grid is usually anisometric).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Energy function for guiding the placement of streamlines in the computational space</head><p>Denoting the physical space and the computational space coordinates of a point as Pp = x; y; z and Pc = ; ;, respectively, then the Jacobian matrix at this point is</p><formula xml:id="formula_1">J = J J J = 2 4 @ x @ @ x @ @ x @ @ y @ @ y @ @ y @ @ z @ @ z @ @ z @ 3 5</formula><p>The local grid density along dimension , and can be measured as the inverse of jJ j; jJj and jJ j, respectively. If we are visualizing the flow on a slice which is orthogonal to dimension in the computational space, then the local density of the streamlines in and dimension should be inversely proportional to jJ jandjJj, respectively. As we explained in Section 1, in principle, this can be realized by using an elliptical low-pass filter kernel at each pixel with the lengths of the two axes of the ellipse inversely match jJ j; jJj, respectively. However, since the grid density in a curvilinear grid can vary drastically, the size of a streamline image can be very large because the resolution of the image should be high enough so that the size of one pixel does not exceeds the size of the smallest filter kernel. Therefore, performing the convolution of such a large image with a set of local low-pass filters having a very large dynamic range in size, tend to be very time consuming. Our new energy measuring method is developed upon the following considerations:</p><p>1. As depicted in <ref type="figure" target="#fig_0">Figure 1</ref>, assuming the streamlines are uniformly distributed over a 2D grid. If we scan-convert the streamlines into a binary image, then wherever on the image if we impose a rectangular window, the ratio of foreground pixels and background pixels within the window should be all close to a constant value(ex. 0.2 in <ref type="figure" target="#fig_0">Figure 1</ref>). Therefore, instead of the difference between a given gray-scale value and the pixel values in the low-pass filtered streamline image, the difference between this ratio and a given constant value can be used to measure the energy of a streamline distribution. The lower the energy, the more uniform the streamline distribution is. We will call such a window a sensor window hereafter.</p><p>2. As illustrated in <ref type="figure" target="#fig_1">Figure 2</ref>, assuming the density of streamlines are not same at two given positions in the grid and two windows with their sizes being proportional to the inverse of the local streamline density are imposed on the two positions. Instead of scan-converting the streamlines on the whole grid into a single binary image, we scan-covert the streamlines within the two windows into two subimages, respectively. We use large pixels for the large window and small pixels for the small window to have the two subimages consist of the same number of pixels. As the result, the ratios of the foreground/background pixels in both sensor windows are again close to a constant value. This means that we can change the density of streamlines over the grid by changing the sizes of sensor windows and having the forground/background pixel ratio in each sensor window close to a constant value.</p><p>3. To ensure that the energy over the whole grid has been measured, sufficient number of sensor windows should be used and placed in a way so that no area in the grid is not covered by any sensor window.</p><p>Denoting the number of foreground and background pixels in a sensor window i as fi and bi, respectively, and let C be the constant value standing for the ratio of foreground and background pixels in the desired streamline distribution, the energy of a streamline distribution I is defined as follows:</p><formula xml:id="formula_2">EI = X i fi bi , C:</formula><p>Here we set the constant value C to 1 s , where s is the size of the square local streamline image in a sensor window. This means that in the desired streamline distribution, streamlines should be properly placed so that each sensor window is passed by approximately one single streamline.</p><p>We found that the statistic space sampling technique called Poisson ellipse sampling <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b9">10]</ref> can be employed to obtain an ideal distribution of sensor windows over the computational space. With  the Poisson ellipse sampling, a 2-dimensional area is sampled with a set of randomly distributed sample points, each of which is attached a hard elliptical region inhibiting the entering of other sample points. As shown in <ref type="figure" target="#fig_2">Figure 3</ref>, by determining the two axes of an ellipse according to the local grid density in , dimension, respectively, and by choosing sensor windows as the circumscribed rectangles of ellipses, we can obtain an ideal distribution of sensor windows over the computational space, with the sizes of windows adapted to the inverse of the local grid density in the physical space. The local streamline image within each sensor window can be generated with the general clipping and DDA algorithms <ref type="bibr" target="#b2">[3]</ref>. Adapting the pixel size to the size of a sensor window can be easily done with applying a scaling transform of streamlines before the execution of DDA algorithm. Regarding the size of the local streamline image in sensor windows, an odd number is considered to be appropriate to have the sensor windows be symmetric about its center. On the other hand, it should be as small as possible from the perspect of computational efficiency. However, smaller image is more sensitive to the changes applied to streamlines. In our experiment, we failed at using 33 images in sensor windows in placing long streamlines because the windows are too sensitive that we can not define an appropriate energy tolerance for favoring combining streamlines. Experiments also show that 5 is the sufficient but also the best size. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Algorithm</head><p>In this section we present the algorithm for placing uniformly distributed streamlines on a 3D curvilinear grid surface under the guid-ing of the energy function introduced in Section 3. Given a 3D vector field of curvilinear grid, the algorithm starts by calculating the Jacobian matrix at each grid point and mapping the vectors to the computational space. The computational space vectors can be obtained by multiplying the physical space vectors by the inverse Jacobian matrix:</p><formula xml:id="formula_3">2 4 @ @ t @ @ t @ @ t 3 5 = 2 4 @ x @ @ x @ @ x @ @ y @ @ y @ @ y @ @ z @ @ z @ @ z @ 3 5 ,1 " @ x @ t @ y @ t @ z @ t</formula><p>Then the specified slice of the grid is taken and the first two components of the vector, which represent the flow in the tangential direction of the 3D surface, are used in the calculation of streamlines. To achieve the target density of streamlines on the 3D surface, the algorithm create the desired streamline distribution in the 2D computational space by repeatedly applying operations to the streamlines under the guidance of energy function. When the energy function becomes lower than a threshold or the accepted changes to the streamlines become very few, we stop the improving process and map the streamlines to the 3D physical space for rendering. A streamline is represented as a list of points. Mapping a streamline back to the physical space is realized by mapping each point in the list to the physical space by interpolating its physical space coordinates from the vertices of the cell enclosing the point. Although it seems to be a faster approach to texture mapping the streamline image in computational space onto the parametric surface, this may result in an unacceptable visual effect because the width of streamlines can become uneven due to the mapping distortion caused by the different grid density.</p><p>The pseudo-code of the algorithm is given as follows: The set of operations applied to streamlines are move, insert, delete, lengthen, shorten and combine, which is the same as that used in <ref type="bibr" target="#b10">[11]</ref>. For all the operations except for the insert and delete, we need again to take into the consideration of varying grid density in deciding the distance to move, the amount being lengthened and shortened, and in judging how closing the endpoints of two streamlines are. We choose these values by referring the size of sensor windows nearby.</p><formula xml:id="formula_4">/</formula><p>To accelerate the evaluation of energy function, we maintain for each streamline a list of sensor windows affected by the streamline, and evaluating the change of energy by looking at only those sensor windows affected by the operated streamline. The position for inserting a new streamlet is found by searching those sensor windows with low ratio of foreground/background pixels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Experiments</head><p>Our new technique for creating uniform distribution of streamlines on 3D curvilinear surfaces has been implemented on the commercial visualization software AVS y . A set of widgets has been provided for allowing the interactive specification of those parameters, such as the desired density of streamlines, the image size in sensor windows, the desired ratio of foreground/background pixels, and so on.</p><p>The dataset used in the experiment is a 3D CFD simulation result of the flow around a cylinder. <ref type="figure" target="#fig_5">Figure 4</ref> depicts the process for creating a uniform distribution on a slice of the curvilinear grid. The streamline distribution in the computational space is shown below the physical space image. As the density of the grid descends gradually toward out, the density of streamlines is inversely distributed in the computational space. <ref type="figure" target="#fig_5">Figure 4a</ref> is the initial set of streamlets obtained by placing their starting points at the centers of sensor windows. <ref type="figure" target="#fig_5">Figure 4b</ref> is an image at an intermediate stage.</p><p>In <ref type="figure" target="#fig_5">Figure 4c</ref>, long and uniformly distributed streamlines have been obtained on the curvilinear grid surface. magnitude of the local vector. Since the grid density in a curvilinear grid can vary drastically, an image generated in such a way can have arrows cluttered at those areas of high grid density and leave the areas of low grid density not well visualized.(See <ref type="figure" target="#fig_4">Figure  5</ref>). Dovey has proposed a method for achieving better visual effect by drawing arrows at randomly sampled points with an uniform distribution in the physical space of an irregular grid <ref type="bibr" target="#b1">[2]</ref>. We can achieve the similar result simply by placing streamlets(headed with arrows) at the centers of sensor windows(See <ref type="figure" target="#fig_7">Figure 6</ref>) in the computational space. The visual effect can be further improved by optimizing the distributions of the streamlets with our image guided technique. <ref type="figure" target="#fig_8">Figure 7</ref> is the result of the optimization. Compared with <ref type="figure" target="#fig_7">Figure 6</ref>, in <ref type="figure" target="#fig_8">Figure 7</ref> the flow at the low velocity area has been visualized more clearly because more short streamlets are placed there for achieving a uniform streamlet density over the whole grid.</p><p>To have the length of streamlet reflect the local vector magnitude correctly, we need to correct the mapping distortion caused by the varying grid density. We do this by setting the length of streamlets to be proportional to the multiplication of local grid density and vector magnitude.</p><p>It took about 5 minutes on an SGI Indy workstation with a R5000 150MHz CPU to generate the image shown in <ref type="figure" target="#fig_5">Figure 4c</ref>. We are now working on the acceleration of the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Conclusions</head><p>We have extended the existing 2D image-guided streamline placement technique for creating uniformly distributed streamlines on 3D curvilinear surfaces. A good streamline placement technique is especially important for non-regular grids because they usually contain cells of drastically different sizes, and hence traditional way of seeding streamlines, for example, initiating streamlines from grid points, usually can not produce an effective representation to the vector field. One major contribution of this paper is the new energy function for locally controlling the density of streamlines. This energy function can also be used to locally control the density of streamline to visualize the magnitude of a vector field. Those hand-designed streamline drawings found in physics texts usually use a high density of streamlines to present a high vector magnitude. We can achieve the same effect by adapt the sizes of sensor windows to be the inverse of the vector magnitude. Improving the performance of the technique is one of our major future research directions.    </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Sensor windows imposed on two different positions in an image with uniform streamline distribution.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Controlling the local streamline density with the sizes of sensor windows.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Locating sensor windows in the computational space with Poisson ellipse sampling. (a) The physical space of a curvilinear grid. (b) Poisson ellipse sampling of the computational space</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>* Mapping the vectors to the computational space */ Calculate the Jacobian matrix at each grid point Calculate the vectors in the computational space /* Distribute a set of sensor windows over the computational space */ Calculate the grid density at each grid point Repeat until the insertion of new sensor windows are rare Randomly select a position in the computational space If the position has not been covered by any existing sensor window Interpolating the Jacobian matrix from the four vertices of the cell containing the position Calculating the size of a new sensor window from the Jacobian matrix. Insert the window to this position /* Create an initial set of streamlets */ Foreach sensor window Insert a streamlet to its center to produce a new set of streamlets If the energy of the new set of streamlets is lower than that of the existing set Accept the insertion of the streamlet /* Improving the distribution of streamlines */ Repeat until accepted changes are rare Randomly select a streamline Randomly choose an operation Apply the operation to the selected streamline to create a new set of streamlines If the energy of the new streamline set is lower than that of the existing one Accept the change /* Mapping the streamlines to physical space */ Foreach streamline in the computational space Foreach point in a streamline Interpolating the physical space coordinates from the vertices of the cell enclosing the point Foreach streamline in the physical space Foreach two adjacent points Render a line segment</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 -</head><label>5</label><figDesc>7 demonstrates how our technique can be used also for creating effective arrow plot representation of a curvilinear grid. Usually, an arrow plot representation of a vector field is created by placing at each grid point an arrow with its size representing the y AVS is a trademark of Advanced Visual Systems Inc.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Optimization process of streamline distribution. (a) An initial set of streamlets obtained by placing a streamlet at the center of each sensor window. (b) Streamline distribution at an intermediate stage of the optimization process. (c) Streamline distribution as the result of the optimization process.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Placing streamlets at grid points.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :</head><label>6</label><figDesc>Placing the initial positions of streamlets at the centers of sensor windows.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>An uniform distribution of streamlets generated with our new technique.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>The authors would like to thank Hideo Miyachi from Kubota Graphics Technology Inc. for providing the test dataset. We are deeply grateful to Makoto Kikukawa and Noboru Fujita, the members of our Lab. for their helps in the implementation and in preparing the manuscript. Special thanks to Issei Fujishiro from Ochanomizu University for his helpful comments and continuous support. This work was partially supported by Telecommunications Advancement Organization of JAPAN.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Visualization and Topology of Vector and Tensor Field</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Asimov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization&apos;95</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Vector Plots for Irregular Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dovey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;95</title>
		<meeting>Visualization&apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="248" to="253" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Introduction to Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Forley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Phillips</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Using Line Integral Convolution for Flow Visualization: Curvilinear grids, Variable-speed Animation and Unsteady Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">K</forename><surname>Forssell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transaction on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="133" to="141" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Visualization of Vector Field Topology in Fluid Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="36" to="41" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Creating Evenly-Spaced Streamlines of Arbitrary Density</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jobard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lefer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographic Workshop on Visualization in Scientific Computing &apos;97</title>
		<meeting>Eurographic Workshop on Visualization in Scientific Computing &apos;97</meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="43" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Texture Synthesis with Line Integral Convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Course Notes, ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualizing 3D Velocity Fields near Contour Surfaces 3D Scalar Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Grant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization&apos;94</title>
		<meeting>Visualization&apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="248" to="255" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Multi-granularity Noise for Curvilinear Grid LIC</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Mao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kikukawa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Fjita</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Imamiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">To appear in Proceedings of Graphics Interface &apos;98</title>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Spectrally Optimal Sampling for Distributed Ray Tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="157" to="164" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Image-Guided Streamline Placement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series(SIGGRAPH 96)</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="453" to="460" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Pursuing Interactive Visualization of Irregular Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="450" to="458" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
