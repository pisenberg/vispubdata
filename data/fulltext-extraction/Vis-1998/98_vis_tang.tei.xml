<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Extremal Feature Extraction from 3-D Vector and Noisy Scalar Fields</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chi-Keung</forename><surname>Tang</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southern California</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gérard</forename><surname>Medioni</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Southern California</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Extremal Feature Extraction from 3-D Vector and Noisy Scalar Fields</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Surface and curve extremality</term>
					<term>surface fitting</term>
					<term>scalar and vector field visualization</term>
					<term>Marching Cubes</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We are interested in feature extraction from volume data in terms of coherent surfaces and 3-D space curves. The input can be an inaccurate scalar or vector field, sampled densely or sparsely on a regular 3-D grid, in which poor resolution and the presence of spurious noisy samples make traditional iso-surface techniques inappropriate. In this paper, we present a general-purpose methodology to extract surfaces or curves from a digital 3-D potential vector field fs;vg, in which each voxel holds a scalar s designating strength, and a vector v indicating direction. For scalar, sparse or low resolution data, we &quot;vectorize&quot; and &quot;densify&quot; the volume by Tensor Voting to produce dense vector fields suitable as input to our algorithms, the Extremal Surface and Curve Algorithms. Both algorithms extract, with sub-voxel precision, coherent features representing local extrema in the given vector field. These coherent features are a holefree triangulation mesh (in the surface case), and a set of connected, oriented, and non-intersecting polyline segments (in the curve case). We demonstrate the general usefulness of both extremal algorithms on a variety of real data by properly extracting their inherent extremal properties, such as (a) shock waves induced by abrupt velocity or direction changes in a flow field, (b) interacting vortex cores and vorticity lines in a velocity field, (c) crestlines and ridges implicit in a digital terrain map, and (d) grooves, anatomical lines and complex surfaces from noisy dental data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction and overall approach</head><p>We address the problem of 3-D scalar and vector field visualization, and extract compact and coherent features, such as surfaces and 3-D space curves. Such features can also be efficiently extracted by iso-surface techniques if the input field is scalar, dense, and of sufficient resolution. Otherwise, vector fields with low resolution, missing and noisy data may render a single, iso-value characterization both difficult and inappropriate. It may also be difficult to express the information into a scalar field. In the following, we illustrate this limitation of iso-surfaces by previewing our results (please refer to the color plate): Shock wave detection. Abrupt velocity change in a flow field results in a shock wave, characterized by local density gradient maxima <ref type="bibr" target="#b14">[15]</ref>. Displaying of the entire flow field conveys little information. Raw maxima extraction, on the other hand, only results in an unevenly distributed sparse set of points unsuitable to surface inference. Here, we extract the λ-shock as extremal surfaces to represent these maxima, using the flow field of Blunt fin <ref type="bibr" target="#b4">[5]</ref> as input. Vortex core and vorticity line extraction. While vortex cores can be characterized by "high" vorticity, vortex cores cannot be extracted as iso-surfaces since a single, iso-vorticity value fails to generate the desired surfaces <ref type="bibr" target="#b10">[11]</ref>. In this paper, we use approximate knowledge of vortex location (e.g. velocity extrema) to generate faithful vortex cores and vorticity lines for interacting Taylor vortices <ref type="bibr" target="#b19">[20]</ref>, represented by extremal surfaces and curves respectively. Terrain visualization. We use a low resolution and noisy digital terrain map (DTM) for a region in the East Pacific Ridge <ref type="bibr" target="#b13">[14]</ref>. This low resolution (scale can be as low as 1:250000) depth or 2 <ref type="bibr" target="#b0">1</ref> 2 -D data generally contains spurious samples due to sensor errors. Isosurface techniques tend to be noise sensitive since they produce an output patch whenever an iso-value is satisfied. Here, using our methods, we not only produce a coherent surface representation of the two halves of the ridge, but also localize interesting features such as the crestline, which is only implicit in the depth data. Modeling from noisy 3-D dental data. Recent research in dental CAD/CAM has focused on the transfer of a physical, wax shape to a computer model. The main difficulty stems from the unavoidable spurious noise in the measurement phase <ref type="bibr" target="#b16">[17]</ref>. While filter-based techniques such as the Fourier transform are effective in ignoring spurious samples, they often "oversmooth", degrading shape discontinuities and distinct features such as anatomical lines. While iso-surfaces are inadequate given noisy measurement, our system can produce smooth surface approximations while preserving critical curve features such as grooves and preparation lines.</p><p>We therefore propose an alternative approach for extracting coherent, robust and symbolic features from an imperfect scalar or vector field. The output is a set of hole-free triangulation (surface) meshes, or a set of connected, oriented, and non-intersecting polyline (curve) segments. The primary contributions of this paper are therefore two-fold: A general and robust methodology, the extremal surface and curve algorithms, is described for the efficient extraction of useful and compact information from a 3-D digital vector field in the form of coherent surfaces and curves. These algorithms are designed to visualize a 3-D vector field, and require that each site in the input vector field holds a 2-tuple s; v where s is a scalar indicating field strength, and v is a vector indicating direction. The other contribution consists of the proper handling of low resolution, irregular (e.g. curvilinear) sampling, or scalar data where such dense vector information are not available. A method, tensor voting, is described which effectively interpolates smooth structures, detects underlying field discontinuities, and ignores spurious outlier noise inherent in the measurement phase.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Related work</head><p>Many existing articles are related to iso-surface extraction (for example, <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b12">13]</ref>). The Marching Cubes algorithm <ref type="bibr" target="#b8">[9]</ref> is a classical solution to this problem. Nielson and Hamann <ref type="bibr" target="#b12">[13]</ref> show that the Marching Cubes is not flawless: iso-surface with holes may occur owing to an ambiguous choice of four zero-crossings. To resolve this ambiguity, they propose an asymptotic decider to enforce a deterministic choice to all configurations where such ambiguity can occur. For efficient iso-surface extraction, Itoh and Koyamada <ref type="bibr" target="#b6">[7]</ref> use complex data structures like extrema graph and sorted boundary cell lists to propagate an iso-surface. Livnat et al. <ref type="bibr" target="#b9">[10]</ref> propose a span space and the use of kd-tree to reduce search time and space by projecting the data set onto a span space. Thirion and Gourdon <ref type="bibr" target="#b18">[19]</ref> propose the Marching Lines algorithm to extract 3-D lines corresponding to the intersection of two iso-surfaces. For recent advances in flow data visualization and topology of flow fields or shock wave analysis, see <ref type="bibr" target="#b2">[3]</ref> and <ref type="bibr" target="#b11">[12]</ref>. While vector field visualization using the Line Integral Convolution (LIC) <ref type="bibr" target="#b1">[2]</ref> produces insight-ful visualization, extending the methodology to obtain a connected curve is unknown. In this paper, the data used for detecting shock wave is obtained from FAST, and in Hung and Buning <ref type="bibr" target="#b4">[5]</ref>. The vortex flow data is kindly provided by Wereley and Lueptow <ref type="bibr" target="#b19">[20]</ref>. The East Pacific Ridge is obtained from the website of National Geophysical Data Center <ref type="bibr" target="#b13">[14]</ref>, and the dental data is courtesy of GC Dental Corporation, Japan.  <ref type="figure">Figure 1</ref>: Overview of our system (note that only one slice of the strength of the respective 3-D dense vector fields is shown.)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Overall approach and outline of this paper</head><p>Our system is summarized in <ref type="figure">Figure 1</ref>, using the East Pacific Ridge DTM as a running example. If the input is already a dense vector field, it can be plugged directly into either the extremal surface or curve algorithm, or both, for coherent surface or curve extraction. Local extrema are extracted and compactly represented as surfaces or curves. Formal definitions on curve and surface extremality, and implementation issues, are detailed in section 2.</p><p>Otherwise, if only a sparse vector field is available, a densification step is required. If only a scalar field is available, then a vectorization step for estimating normals is necessary. Both processes are implemented as tensor voting, summarized in section 3 (detailed in <ref type="bibr" target="#b7">[8]</ref>). Thus, two dense 3-D vector fields, one for surface and one for curve, are produced as direct input to the extremal algorithms. Finally, we present results on a variety of real data in section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Extremality</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Curve extremality in 2-D</head><p>Before considering 3-D surface and curve extremality, let us consider the simpler, 2-D version first. <ref type="figure" target="#fig_4">Figure 2</ref> This definition, being a necessary condition for 2-D curve extremality, is equivalent to projecting the field strength onto a line normal to v, or "crestline". In implementation, we discriminate a response satisfying ds=d`= 0 as being extremal by zero crossing detection, so that a 2-D extremal curve can be sufficiently characterized by a zero-crossing curve.</p><p>Note that this problem is not exactly equivalent to conventional zero crossing curve extraction, as the sign (or the 'inside' or 'outside' for surface) is not required to be known in advance, and we assume having access to the tangent direction only. We now generalize this notion to surface and curve extremality in 3-D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Surface extremality in 3-D</head><p>Let each voxel in the given vector field hold a 2-tuple s; n where s indicates field strength and n denotes the "normal" direction (e.g. the front of a velocity flow field). Suppose the vector field is continuous and dense, i.e., s; n is defined for every point p in 3-D space. A point is on an extremal surface if its strength s is locally extremal along the direction of the normal, i.e., ds=dn = 0. This is a necessary condition for 3-D surface extremality. A sufficient condition, which is used in implementation, is defined in terms of zero crossings along the line defined by n ( <ref type="figure" target="#fig_3">Figure 3</ref>).  We therefore define the gradient vector g as,</p><formula xml:id="formula_0">g = 5s = h ∂s ∂x ∂s ∂y ∂s ∂z i T<label>(1)</label></formula><p>and project g onto n, i.e., q = n g. Thus, an extremal surface is the locus of points with q = 0. In implementation, we can define the corresponding discrete version of g and q, i.e., </p><p>and q i; j;k = n i; j;k g i; j;k . Therefore, the set of all fq i; j;k g constitute a scalar field which can be processed directly by the Marching Cubes algorithm <ref type="bibr" target="#b8">[9]</ref>: Given a cuboid, the eight fq i; j;k g of the vertex voxels are examined, and a zero-crossing patch (if it exists) is produced, which is a triangulation of the local surface patch for that cuboid. We call this procedure SingleSubVoxelMarch.</p><p>The overall Extremal Surface Algorithm proceeds as follow: It picks the seed voxel whose s value is largest so far, computes a zerocrossing patch by using SingleSubVoxelMarch, and aggregates the surface in its neighborhood until the current s value falls below a low threshold. If there are multiple surfaces, it then picks the next available seed, and performs the same patch aggregation process until the s value of the next seed falls below a high threshold. A polygonal mesh is thus produced. Note that the thresholds are not critical; they are used for efficiency purposes and rejecting noisy features.</p><p>Despite the intricate details, SingleSubVoxelMarch is still an O1-time operation, and can be regarded as a plug-in component of the extremal surface algorithm. In <ref type="bibr" target="#b17">[18]</ref>, we describe and prove the correctness of SingleSubVoxelMarch from the following lemma:</p><formula xml:id="formula_2">Lemma 1 A local,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>interior zero-crossing patch computed by</head><p>SingleSubVoxelMarch is connected to its neighboring patch to produce a global hole-free triangulation.</p><p>Note that SingleSubVoxelMarch will not produce any output in the vicinity of a surface discontinuity, where the above differential property no longer applies. Such a discontinuity results from the intersection between two extremal surfaces. We extract the two extremal surfaces away from this discontinuity, as described above, and further process them to get a localized surface discontinuity. We describe this process in more detail using the DTM and dental examples in section 4, with the underlying theory in <ref type="bibr" target="#b15">[16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Curve extremality in 3-D</head><p>Each voxel in the given potential vector field holds a 2-tuple s; t, where s is the field strength and t indicates the flow or "tangent" direction (e.g. in a velocity field). Suppose the field is continuous and dense, in which s;t is defined for every point p in 3-D space. A point p with s;t is on an extremal curve if any displacement from p on the plane normal to t will result in a lower s value, i.e.,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ds du</head><formula xml:id="formula_3">= ds dv = 0<label>( 3 )</label></formula><p>where u and v define the plane normal to t at p <ref type="figure" target="#fig_5">(Figure 4</ref>) This is a necessary condition for 3-D curve extremality. A sufficient condition, which is used in implementation, is defined in terms of zero crossings in the u-v plane normal to t. Define q = q x q y q z T = Rt g where R defines a rotation to align a frame with the u-v plane (shown in <ref type="figure" target="#fig_5">Figure 4</ref>, with its detailed construction given in <ref type="bibr" target="#b17">[18]</ref>), and g is defined in Equation <ref type="bibr" target="#b0">(1)</ref>. The cross product is used to project g onto the u-v plane. R is used to re-position the elements in this cross product, so that q x and q y correspond to the u and v components of Equation (3) respectively, and q z = 0 after applying R. By construction, an extremal curve is the locus of points with q = 0.</p><formula xml:id="formula_4">. v ++ -+ +--- ds/dv u ds/du u v z R (parallel to t) u v t tangent p 3-D curve</formula><p>In implementation, we can define the corresponding discrete version of g as in Equation <ref type="formula" target="#formula_1">2</ref>, and q as q i; j;k = Rt i; j;k g i; j;k . Therefore, the set of all fq i; j;k g constitute a vector array, which can be processed by our novel procedure SingleSubVoxelCMarch which is very different from the traditional Marching Cubes. Given a cuboid, this procedure takes the eight fq i; j;k g computed at the vertex voxels as input, and produces an extremal point where an extremal curve passes through (if it exists) as output.</p><p>The overall Extremal Curve Algorithm proceeds as follows: it picks the seed voxel with s; t whose s value is largest so far. Then, it (1) computes an extremal point (if exists) by using SingleSubVoxelCMarch and, (2) predicts the next cuboid the curve will pass through by using the current directed curve segment, or t if it is unavailable at the very beginning of curve tracing.</p><p>The above steps are repeated until the current s value falls below a low threshold. Denote this curve thus obtained by C 1 . Then the algorithm returns to the seed and repeat the whole process above with direction ,t. Denote the curve thus obtained by C 2 . It outputs ReverseC 2 C 1 as a connected and oriented extremal curve. If there are multiple curves, then it picks the next available seed and perform the same curve aggregation process until the s value of the next seed falls below a high threshold. Again these thresholds are only used for efficiency, and to reject features due to noise.</p><p>Owing to the complexity of the details, we describe and show the correctness of SingleSubVoxelCMarch with a constructive proof of the following lemma in <ref type="bibr" target="#b17">[18]</ref>. However, it is still an O1-time operation, and can be regarded as plug-in component of the algorithm: Lemma 2 Each local curve segment connecting two extremal points, computed by SingleSubVoxelCMarch, is connected to its neighboring curve segments, if these extremal points are not any of the endpoints of the extremal curve. Moreover, all curve segments must be non-intersecting.</p><p>Curve intersection and branching are characterized by the presence of junctions, which are not handled by SingleSubVoxelCMarch because they are curve discontinuities (where differential property no longer applies). Thus, no extremal point will be produced in the vicinity of a junction, which is the intersection of two or more converging extremal curves. Therefore, in <ref type="bibr" target="#b15">[16]</ref>, we propose to detect junctions and then properly localize them, using the extremal curves produced as initial estimates. We refer interested readers to <ref type="bibr" target="#b15">[16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Field densification and vectorization</head><p>If the input field is scalar, we need to infer the vector field associated with it. For low resolution or sparse data sets, the vector field needs to be "densified" so that differential properties of surface or curve extremality becomes applicable. For data sampled on a nonregular grid (e.g. curvilinear), conversion into Cartesian grid results in a sparse set of data on a regular grid. In order for our algorithms to work on these various types of input, these data are preprocessed by tensor voting for field densification and vectorization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Densifying sparse vector fields</head><p>If the given sparse vector field is smooth everywhere with little noise, then, a Gaussian filter suffices for the purpose of field densifi-cation. In practice, however, most real vector fields are only piecewise smooth and have considerable amount of outlier noise, making Gaussian filters inappropriate. Therefore, a complete formalism, tensor voting, was developed <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b7">8]</ref> to deal with these real data. It is grounded on tensors for representation and tensor voting for data communication.</p><p>Tensor representation With a discrete vector field, a voxel can assume either one of the three roles: surface patch, discontinuity (curve or point junctions), or outlier noise. Consider the two extremes, in which a voxel on a smooth surface is very certain about its surface (normal) orientation, whereas a voxel on a (curve or point) junction has absolute orientation uncertainty. This whole continuum is thus abstracted as a general, second-order symmetric 3-D tensor, which can be visualized geometrically as a 3-D ellipsoid. Such an ellipsoid can be fully described by the corresponding eigensystem with its three eigenvectorsV max ;V mid ; andV min and the three corresponding eigenvalues λ max λ mid λ min .</p><p>Rearranging the eigensystem, the 3-D ellipsoid is given by: gives a ball tensor <ref type="figure" target="#fig_6">(Figure 5)</ref>. These tensors define the three basis tensors for any general 3-D ellipsoid. Junction map (JMap): s = λ min , v is arbitrary. SMap (resp. CMap) is a dense vector field which can be used directly as input to extremal surface (resp. curve) algorithms.</p><formula xml:id="formula_5">λ max ,λ mid S + λ mid ,λ min P + λ min B,</formula><formula xml:id="formula_6">mid λ min λ min λ V V max V min min V V mid λ min λ max λ mid</formula><p>Tensor voting Having defined the tensor formalism, we are now ready to describe the voting algorithm for obtaining the tensor rep- resentation at each voxel and the above dense vector maps, thus achieving field densification. First, each input vector is encoded as a general tensor, which is actually a very thin and elongated ellipsoid. Then, these input tensors are made to align with predefined, discrete versions of the three basis tensors (kernels) in a convolution-like way. For example, the stick kernel design is: Given a normal vector N at origin O and a point P <ref type="figure" target="#fig_7">(Figure 6</ref>), a sphere is chosen as the most likely and natural continuation between O and P, since curvature is kept constant. The normal to P is said to be "most likely". The set of all such "most likely" normals (with strength properly scaled) in the 3-D space is discretized and collected as the stick kernel ( <ref type="figure" target="#fig_7">Figure 6</ref>).</p><p>When each input tensor has cast their stick, plate, and ball votes to neighboring voxels by aligning with the respective dense basis kernels, each voxel in the volume receives a set of directed votes. These directed votes are collected, using tensor addition, as a 3x3 covariance matrix. Then, we diagonalize this matrix into the corresponding eigensystem and the above tensor formalism follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Vectorizing scalar fields</head><p>Vectorizing a scalar field into a dense vector field is implemented exactly as the densification described above, except that each scalar input site is encoded as ball tensor, since no orientation information is given. After the voting step, the original input "balls" are replaced by true ellipsoids, which encode surface normal and curve tangent information.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results</head><p>We apply both extremal algorithms to extract shock waves, vortex cores, vorticity lines, visualize DTMs, and infer 3-D models from noisy dental data. Extremal algorithms are either directly applied, or a tensor voting pass for input densification and vectorization is run. Actual processing times on a Sun Ultra 1 Model 170 are tabulated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Shock wave detection</head><p>The first example demonstrates the detection, extraction, and visualization of shock waves, given a flow field such as a velocity field in a viscous medium. <ref type="figure" target="#fig_8">Figure 7</ref> depicts the experimental set-up of a Blunt Fin <ref type="bibr" target="#b4">[5]</ref>, and the velocity field. Air flows over a flat plate with a blunt fin rising from the plate. The free stream flow direction is parallel to the plate and the flat part of the fin, i.e., entirely in the x component direction <ref type="bibr" target="#b4">[5]</ref>. <ref type="figure" target="#fig_9">Figure 8</ref> depicts two slices of the velocity field. Note the abrupt change in the flow pattern that creates a shock, as the fluid hits the blunt end of the fin.</p><p>The presence of shock wave is characterized by local maxima of density gradient <ref type="bibr" target="#b14">[15]</ref>, which is in coherence with the definition of surface extremality, and thus are extracted as extremal surfaces. First, we compute the density field (the left column of <ref type="figure" target="#fig_12">Figure 9</ref> shows two views of different slices of the density field). Raw local density maxima are extracted in the density field, which results in a sparse set of points. Also, the original data set is sampled on a curvilinear grid. Therefore, a tensor voting pass is needed. The dense field thus produced is input to the extremal surface algorithm. The  resulting extremal surface, corresponding to the shock wave known as a "λ-shock" <ref type="bibr" target="#b4">[5]</ref> due to its branching structure and shape, is faithfully and explicitly extracted (c.f. <ref type="bibr" target="#b14">[15]</ref>) and shown in <ref type="figure" target="#fig_12">Figure 9</ref>.</p><p>Data and processing times for this experiment is tabulated in the following (note that only one half of the λ-shock is extracted due to symmetry; the other half is obtained as a mirror reflection). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Taylor vortices -vortex extraction</head><p>This experiment visualizes interacting Taylor vortices, in which the wavy and periodic properties of the oscillating vortex cores are properly extracted as an extremal surface. Thus, these interesting properties can be visualized as a single spatio-temporal snapshot, rather than stacks of successive spatial, 2-D data slices, as in <ref type="figure" target="#fig_13">Figure 10</ref>. Using particle image velocimetry, Wereley and Lueptow <ref type="bibr" target="#b19">[20]</ref> measured 185 time slices of velocity measurement for the Taylor vortices. Each successive slice represents a sequential time interval of 66.66 msec. This data set is our input velocity fields. While having many valid definitions, a single vortex core can conveniently be visualized as the locus with maximal "tangential" velocity <ref type="bibr" target="#b10">[11]</ref>. But this characterization becomes obsolete when there exists more than one interacting vortices, such as Taylor vortices. Shown in <ref type="figure" target="#fig_13">Figure 10</ref>  <ref type="figure" target="#fig_13">Figure 10</ref> shows a total of three oscillating and interacting vortices, shifting back and forth in the horizontal direction. Vortices A and C are rotating clockwisely, and vortex B in anti-clockwise direction. Such adjacent, counter-rotation results in a maximal fluid flow being present between adjacent vortices <ref type="figure">(Figure 11</ref>). This maximal flow presents a maximal uncertainty for vortex core localization, since a point on the locus of maximal tangential velocity can legitimately "belong" to both adjacent vortex cores. Therefore, the algorithm proposed by Ma and Zheng will only work if it is presented with only one, isolated vortex <ref type="bibr" target="#b10">[11]</ref>. Basically, this algorithm first locates the vortex center, and computes the extent of the vortex by setting certain velocity thresholds.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Vortex segmentation</head><p>We can make use of this maximal uncertainty to segment or isolate the vortices so that Ma and Zheng's algorithm for vortex core tracing can be applied. For each data slice, we (see <ref type="figure" target="#fig_4">Figure 12</ref>):</p><p>1. apply the 2-D extremal curve algorithm to extract the "front" corresponding to maximal velocity or uncertainty <ref type="figure" target="#fig_4">(Figure 12(b)</ref>); 2. extract the local velocity minima corresponding to vortex centers and compute the extent of the vortex cores <ref type="figure" target="#fig_4">(Figure 12(c)</ref>), using the "front" instead of setting arbitrary velocity thresholds (adjacent vortex cores may overlap in region of maximal uncertainty).</p><p>3. apply Ma and Zheng's algorithm for each isolated spatial region to trace the vortex core, which results in a set of sparse and noisy points approximating each vortex core <ref type="figure" target="#fig_4">(Figure 12(d)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Vortex extraction</head><p>Once a spatial approximation of the vortex core for each slice is obtained as above, we stack the resulting point sets from all temporal slices to produce a spatio-temporal data set in 3-D (shown in <ref type="figure" target="#fig_3">Figure 13(a)</ref> and Zheng's algorithm only approximate the vortex core boundary, using a set of (points constituting the) contours. Many of them are overlapping and misaligned, making most tiling techniques for successive contours not suitable in this case <ref type="figure" target="#fig_3">(Figure 13(a)</ref>). Therefore, the interacting vortex cores are extracted as an extremal surface. Tensor voting is applied to this noisy cloud of points to give a dense vector map (SMap), followed by surface extraction using the extremal surface algorithm. The extremal surface approximating the vortex cores are depicted in <ref type="figure" target="#fig_3">Figure 13(c)</ref>. Note that the waviness and periodicity of Taylor vortices depicted in <ref type="figure" target="#fig_13">Figure 10</ref>(a)-(h) are faithfully and conveniently captured as a single, spatio-temporal snapshot.</p><p>By observation, there are roughly 5.5 oscillations present in the result. Since there are 185 time slices, each corresponding to 66.66 msec or 1/15 sec, the period of oscillation is 184/15/5.5 = 2.230 sec which is quite close to the measured period 2.2017 sec given in <ref type="bibr" target="#b19">[20]</ref>.</p><p>Details on data and processing times are tabulated below. Note we also include the input generation time, which in fact corresponds to vortex segmentation for producing the noisy point sets approximating the vortex cores. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Vorticity lines in Taylor vortices</head><p>The trajectory of a vortex is best traced by its vorticity line, which is the locus of velocity minima in the case of Taylor vortices (i.e., the dots in <ref type="figure" target="#fig_13">Figure 10</ref>(a)-(h)). A straightforward way to extract the vorticity line is to join local velocity minima present in successive time slices, producing a linear approximation of the curve (see <ref type="figure" target="#fig_5">Figure 14(a)</ref>). Despite the convenience, the curve thus obtained is very bumpy owing to the low data resolution. Here we seek to derive a smoother, linear approximation with sub-voxel accuracy of the curve <ref type="figure" target="#fig_5">(Figure 14(b)</ref>), by using the 3-D extremal curve algorithm. We regard the rough approximation as shown in <ref type="figure" target="#fig_5">Figure 14</ref>(a) as a sparse velocity field, where each directed segment joining local minima at t = i and t = i + 1 as a velocity vector. Therefore, this field needs densification. Voting kernel design is described next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.1">Densifying voting kernel</head><p>Given a velocity vector v at the origin O and a point P in the 3-D space, v and P define a plane. We claim that the most appealing velocity vector at P is tangential to the osculating circle connecting O and P, because it encodes uncertainty in direction while keeping the curvature of the potential trajectory constant <ref type="figure" target="#fig_6">(Figure 15</ref>  space are oriented such that their respective dot product with v is non-negative. Having scaled the length of all vectors such that they are inversely proportional to the distance from O, we obtain the Vfield, the velocity voting kernel used for densifying the sparse velocity field. Its 3-D shape resembles that of a "funnel" <ref type="figure" target="#fig_6">(Figure 15(b)</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3.2">Trajectory extraction</head><p>The V-field is used as the stick kernel to densify the sparse velocity field, producing a dense vector field fs;vg, where s is the strength and v =V max corresponding to λ max ,λ mid . This field serves as input to the 3-D extremal curve algorithm. One view of the extracted vorticity lines, in terms of three extremal curves, is depicted in <ref type="figure" target="#fig_7">Figure 16</ref>. They are smooth with sub-voxel precision. Yet we do not oversmooth since there is still an average of roughly 5.5 complete oscillations present in our result, which agrees with the measured period of oscillation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Terrain visualization</head><p>This experiment demonstrates the visualization of a digital terrain model (DTM), and the detection and extraction of the crestline inherent in the noisy scalar field. A section of the East Pacific Ridge is sampled as a 1:250000 DTM from <ref type="bibr" target="#b13">[14]</ref>. Two views of the noisy scalar depth field are depicted in <ref type="figure" target="#fig_8">Figure 17</ref> Being a scalar depth field, tensor voting is applied to the DTM to produce the SMap and CMap, which are directly input to the extremal surface and curve algorithms respectively for feature extraction. In particular, we assert that the crestline should be localized as the intersection of the two halves of the ridge surfaces, where two distinct distributions of directed votes on surface normals should be present. Thus, this is in coherence with the definition of the CMap. <ref type="figure" target="#fig_8">Figure 17</ref>(d)-(e) show the results. Given the CMap, the extremal curve algorithm detects and extracts the crestline and other discontinuities, both are only implicit in the noisy data. The underlying sea bed representing the ridge is also faithfully extracted from the SMap by the extremal surface algorithm.</p><p>Note that the differential property on surface extremality no longer applies in the vicinity of the crestline, which is a surface discontinuity (as shown in <ref type="figure" target="#fig_8">Figure 17</ref>(e), in which a "gap" is present in the surface description). However, this singularity is exactly detected by the extremal curve algorithm. Since both extremal surfaces and curves are coherent computation means, they can readily be further interpreted to produce a coherently integrated surface description in which the two halves of the ridge surfaces intersect at junction curve precisely, as shown in <ref type="figure" target="#fig_8">Figure 17(f)</ref>. We refer interested readers to <ref type="bibr" target="#b15">[16]</ref> for more details on proper discontinuity handling. Actual processing times and other data details in this experiment are tabulated in the following: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Modeling from noisy 3-D dental data</head><p>Unavoidable spurious noise in the measurement phase has been the main obstacle in dental CAD/CAM research. For example, a set of 24 views of a Crown are registered, using a commercially available multiple-view registration system. <ref type="figure" target="#fig_9">Figure 18</ref> depicts three slices of the data, showing mostly accurate but also spurious and missing data. Again, since it is a scalar field, tensor voting is used to produce dense CMap and SMap. In particular, grooves and anatomical lines can be abstracted as intersection between extremal surfaces which is coherent with the definition of the CMap. We can detect the upper and lower sides, the preparation line, and the grooves using the extremal curve algorithms, which are in turn used to produce a coherently integrated surface and curve description. As an additional benefit, with such an inferred faithful surface and curve model, we are able to perform data validation by remov- ing spurious noise in the original data, simply by checking if a given input point lie on the inferred surface or curve ( <ref type="figure" target="#fig_12">Figure 19</ref>). <ref type="figure" target="#fig_4">Figure 20</ref> shows two views of the original input, the extremal discontinuity curves (i.e. grooves and preparation lines) and surfaces (i.e. upper and lower sides) of the crown. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>We described a general methodology to extract "extremal" properties inherent in a noisy scalar/vector field, in terms of coherent and compact extremal surfaces or curves. Such properties can be local density gradient maxima (e.g. shock waves), local velocity extrema (e.g. vortex cores and vorticity lines), geographic crestlines (e.g. ridge or trough), and grooves, anatomical lines marked for surgical purposes (e.g. preparation line on crown or inlay). Raw extraction of such extrema results in a set of either "thick" and close-by points, or "thin" and sparsely and unevenly distributed points, with no meaningful structures at all. These local extrema are sometimes rather unstable, many of which may be false, noisy and even missing. Iso-surface extraction in such noisy context cannot produce coherent representation suitable for further processing. Moreover, in certain situations, more complicated extraction requirement makes a single, iso-value definition difficult. We also present a field vectorization and densification process if, initially, only a scalar and/or sparse field is available. Given a properly designed voting kernel, a dense vector field suitable for extremal curve or surface algorithms are produced. We run actual experiments to show the efficiency and effectiveness of both algorithms. With Tensor Voting and Extremal algorithms, our working prototype attempts to provide a robust, coherent and meaningful extraction which permits more efficient visualization, further interpretation and processing to take place.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>This work was supported by the NSF under Grant No IRI-94231441. † Contact address: Institute for Robotics and Intelligent Systems, University of Southern California, Los Angeles, California 90089-0273, USA.Email: fchitang,medionig@iris.usc.edu.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 : 2 -</head><label>22</label><figDesc>(a) depicts a synthetic 2-D circular potential field fs;vg. Since it is circular, let`be a diameter joining two points A and B. Therefore,`is normal to the tangents (arrows) at A and B. We plot the field strength along`, Figure 2(b), where two extremal points exist. We seek to link all such extremal points present in this field into a connected 2-D curve, approximated by a set of connected polyline segments(Figure 2(c)). So, a 2-D extremal curve is defined by the locus of points for which the field strengths are locally extremal along the lines aligned with their respective normals, i.e., ds=d`= 0. D curve extremality. (a) field, (b) strength plot, (c) extremal curve.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>(a) a normal vector (with an imaginary surface patch drawn), (b) field strength along the normal, and (c) the derivative of field strength.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>g i; j;k = 2 4s</head><label>2</label><figDesc>i+1; j;k ,s i; j;k s i; j+1;k ,s i; j;k s i; j;k+1 ,s i; j;k 3 5</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Field strength is projected onto a plane perpendicular to the tangent. When a change in signs occurs in the derivatives in both u and v, a curve passes through the point.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>A general, second order symmetric 3-D tensor.Geometric InterpretationThe eigenvectors effectively encode orientation (un)certainties: surface orientation (normal) is described by the stick tensor, which indicates certainty in a single direction. Uncertainties are abstracted by two other tensors: curve junction results from two intersecting surfaces, where the uncertainty in orientation only spans a single plane perpendicular to the tangent of the junction curve, and thus described by a plate tensor. At point junctions where more than two intersecting surfaces are present, a ball tensor is used since all orientations are equally probable. The eigenvalues, on the other hand, effectively encode the magnitudes of orientation (un)certainties, since they indicate the size of the corresponding 3-D ellipsoid.Therefore, three dense vector maps are defined. Each voxel of these maps has a 2-tuple s; v, where s is a scalar indicating strength and v is a unit vector indicating direction:Surface map (SMap): s = λ max ,λ mid , and v =V max indicates the normal direction. Curve map (CMap): s = λ mid ,λ min , and v =V min indicates the tangent direction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :</head><label>6</label><figDesc>Stick kernel.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>Blunt fin. Schematic diagram and velocity field.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 :</head><label>8</label><figDesc>Velocity field of Blunt fin.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head></head><label></label><figDesc>(a)-(h) are eight consecutive snapshots of the wavy Taylor vortex flows, averaged over one entire period of oscillation. (Note that Figure 10 (a) and (h) show the same field.) The measured period of oscillation is 2.2017 sec. Each image in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 9 :</head><label>9</label><figDesc>Density field and the extracted λ-shock. The left column depicts two views of different slices of the density field, and the right shows the λ-shock wave, extracted as extremal surfaces.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 10 :</head><label>10</label><figDesc>Taylor vortices (dots indicate current vortex centers.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 11 :Figure 12 :</head><label>1112</label><figDesc>-(b)). Note that the resulting point sets produced by Ma direction of maximal flow does this point "belongs" to the vortex core of A? or B? Maximal flow and uncertainty. Vortex segmentation. (a) the original data at t = 0, (b) the extremal curve (c) centers and extents of vortex cores, (d) point sets approximating the vortex cores.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 13 :Figure 14 :</head><label>1314</label><figDesc>(a) Contours from point sets for the first 10 data slices, showing severe contour overlapping and misalignment. (b) one view of the spatio-temporal data and (c) resultant 3-D vortex cores extracted as extremal surfaces. (a) rough and (b) the desired linear approximation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head></head><label></label><figDesc>(a)). The set of all such tangential vectors for every point P in the 3-D</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 15 :</head><label>15</label><figDesc>V-field. (a) the design and (b) its 3-D shape.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figure 16 :</head><label>16</label><figDesc>(a) bumpy input; (b) refined vorticity lines extracted as 3-D extremal curves, with sub-voxel precision. Data and processing details are tabulated in the following.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head></head><label></label><figDesc>(b)-(c). The section of East Pacific Ridge sampled is indicated by the rectangular region in the map in Figure 17(a). The area covered begins at the northwest corner at (-8.75,-127.75) progressing eastward for 205 values, then stepping 5 minutes south for the next row, ending at the southeast corner at (-24.25,-104.75), with ,x; ,y denoting south latitude and west longitude. We seek to extract the ridge in the form of an extremal surface, and represent the crestline as an extremal curve.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_21"><head>Figure 17 :</head><label>17</label><figDesc>(a) Low resolution DTM, (b) and (c) two views of the data are shown, depicting the presence of a crestline which is only implicit in noisy scalar data. (Data courtesy of NOAA National Geophysical Data Center.) (d) the crestline is detected as an extremal curve, (e) extracted ridge surfaces before integration, and (f) result after integrating intermediate ridge surfaces and crestline.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_22"><head>Figure 18 :</head><label>18</label><figDesc>Three slices of the original input at (a) x = 42, (b) x = 65, and (c) x = 80, with mostly accurate but erroneous data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_23"><head>Figure 19 :</head><label>19</label><figDesc>(a) A slice of the extremal surfaces of the Crown, showing the upper and lower side with preserved and coherently integrated discontinuity, (b) the original noisy data set and (c) result after data validation, with spurious samples removed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_24"><head>Figure 20 :</head><label>20</label><figDesc>Two views of the input and results for Crown.Data and processing details are tabulated in the following. Note the relatively long processing times for this example is due to the sheer size of the input:</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Vortex Tubes in Turbulent Flows: Identification, Representation, Reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis&apos;94</title>
		<meeting>IEEE Vis&apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="132" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Imaging Vector Fields Using Line Integral Convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Leedom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 93 Conf. Proc., ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Visualizing vector field topology in fluid flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">On Topology as Applied to Image Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Herman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Vision Graphics Image Process</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="409" to="415" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Simulation of Blunt-Fin Induced Shock Wave and Turbulent Boundary Layer Separation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">M</forename><surname>Hung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">G</forename><surname>Buning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">AIAA Aero. Sci. Conf</title>
		<imprint>
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Inference of Surfaces, 3-D Curves and Junctions from Sparse, Noisy 3-D Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Guy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Patt. Anal. Machine Intell</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1265" to="1277" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Automatic Isosurface Propagation Using an Extrema Graph and Sorted Boundary Cell Lists</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Itoh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Koyamada</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visual. Comput. Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="319" to="327" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Inferring Segmented Surface Description from Stereo Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-S</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Comput. Vision Patt. Recogn</title>
		<meeting>IEEE Comput. Vision Patt. Recogn<address><addrLine>Santa Barbara, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note>to appear in</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Reconstruction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A Near Optimal Isosurface Extraction Algorithm Using the Span Space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visual. Comput. Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="73" to="84" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">3D Visualization of Unsteady 2D Airplane Wake Vortices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><forename type="middle">C</forename><surname>Zheng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis&apos;94</title>
		<meeting>IEEE Vis&apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="124" to="131" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">3D shock wave visualization on unstructured grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Van Rosendale</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Vermeer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Symp</title>
		<meeting>Symp</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="87" to="94" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The Asymptotic Decider: Resolving the Ambiguity in Marching Cubes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis</title>
		<meeting>IEEE Vis</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">91</biblScope>
			<biblScope unit="page" from="83" to="90" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">NGDC/WDCA MGG-5 Minute Gridded Elevation Data Search</title>
		<ptr target="http://www.ngdc.noaa.gov" />
		<imprint/>
		<respStmt>
			<orgName>NOAA National Geophysical Data Center</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Feature Detection from Vector Quantities in a Numerically Simulated Hypersonic Flow Field in Combination with Experimental Flow Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-G</forename><surname>Pagendarm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Birgit</forename><surname>Walter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. IEEE Vis&apos;94</title>
		<meeting>IEEE Vis&apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="117" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Integrated Surface, Curve, and Junction Inference from Sparse 3-D Data Sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Intl. Conf. Comput. Vision</title>
		<meeting>Intl. Conf. Comput. Vision<address><addrLine>Bombay, India</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="818" to="824" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Automatic, Accurate Surface Model Inference for Dental CAD/CAM</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Duret</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Intl. Conf. Med. Image Comput. &amp; Comput. Ass. Inter</title>
		<meeting>Intl. Conf. Med. Image Comput. &amp; Comput. Ass. Inter</meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note>to appear in</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Extremal Surface and Curve Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-K</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Medioni</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">USC-IRIS Tech. Rep</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Thirion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gourdon</surname></persName>
		</author>
		<title level="m">The 3D Marching Lines Algorithm</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="page" from="503" to="509" />
		</imprint>
	</monogr>
	<note>Graph. Models Image Proc.</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Spatio-temporal character of nonwavy and wavy Taylor Couette flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">T</forename><surname>Wereley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Lueptow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Fluid Mechanics</title>
		<imprint>
			<biblScope unit="volume">364</biblScope>
			<biblScope unit="page" from="59" to="80" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
