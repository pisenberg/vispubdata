<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Feature Detection in Linked Derived Spaces</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Henze</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">MRJ Technology Solutions Inc</orgName>
								<orgName type="institution" key="instit2">NASA Ames Research Center</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Feature Detection in Linked Derived Spaces</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: D.2.2 [Software]: Software Engineering-Design Tools and Techniques</term>
					<term>H.3.3 [Information Systems]: Information Storage and Retrieval-Information Search and Retrieval</term>
					<term>H.5.2 [Information Systems]: Information Interfaces and Presentation-User Interfaces</term>
					<term>I.3.6 [Computing Methodologies]: Computer Graphics-Methodology and Techniques</term>
					<term>J.2 [Computer Applications]: Physical Sciences and Engineering-Aerospace computational fluid dynamics, feature detection, flow visualization, multivariate visualization, brushing</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper describes by example a strategy for plotting and interacting with data in multiple metric spaces. The example system was designed for use with time-varying computational fluid dynamics (CFD) datasets, but the methodology is directly applicable to other types of field data. The central objects embodied by the tool are portraits, which show the data in various coordinate systems, while preserving their spatial connectivity and temporal variability. The coordinates are derived in various ways from the field data, and an important feature is that new and derived portraits can be created interactively. The primary operations supported by the tool are brushing and linking: the user can select a subset of a given portrait, and this subset is highlighted in all portraits. The user can combine highlighted subsets from an arbitrary number of portraits with the usual logical operators, thereby indicating where an arbitrarily complex set of conditions holds. The system is useful for exploratory visualization and feature detection in multivariate data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Identification of domain-specific features is a primary goal of scientific visualization. For example, in computational fluid dynamics (CFD) post-processing, investigators are interested in locating vortices, flow separations, flow reversals, boundary layers, critical points, and so forth. Locating and visualizing such features has generally proved difficult, not only because the field data are multidimensional and multivariate, but also because the criteria defining the features of interest are often poorly understood and imprecisely stipulated. Banks and Singer <ref type="bibr" target="#b1">[2]</ref>, for instance, review eight different schemes for identifying vortices, before outlining a new one of their own.</p><p>The development and refinement of new and effective feature detection algorithms is an active research area. Interactivity can play an important role in the discovery and deployment of many feature detection schemes. Many feature detection techniques require at least some user guidance, and others depend almost entirely on user intervention. Whether autonomous or guided, many feature detection algorithms require user-supplied parameters. For instance, some workers have defined vortices as regions of low pressure <ref type="bibr" target="#b9">[10]</ref>, or regions of high vorticity <ref type="bibr" target="#b15">[16]</ref> -but just how low, or how high? The task of effectively tuning parameters in some feature detection schemes can be facilitated by an interactive system, and even fully M/S T27A-1, NASA Ames Research Center, Moffett Field CA 94035-1000. chenze@nas.nasa.gov automatic feature detection techniques may benefit from interactive prototyping during their developmental stages.</p><p>Scientific visualization of field data tries to answer both location queries -"what exists at a particular field location?" -and condition queries -"where in the field are particular conditions satisfied?" For a given visualization technique, the distinction between location and condition queries is not always clear-cut, but the classification is nevertheless useful in certain contexts. Feature detection is primarily concerned with condition queries.</p><p>This paper describes a system which supports interactive condition queries on computational field simulation data. The key idea is that the simulation domain is mapped directly into spaces derived from the simulation data. Various field quantities can be calculated from the dependent field variables by a variety of mathematical or physical identities. Some of these derived quantities may include spatial or temporal derivatives with respect to the independent field variables. The independent variable domain -typically a mesh, possibly time-varying -can then be mapped into spaces formed by the Cartesian products of derived domains. Many feature detection tasks are conveniently conceptualized or implemented in these derived spaces, and in some of the associated images potentially unforeseen features in the data may emerge as coherent structures. The ordered layout of the data in the derived spaces facilitates data subsetting, and selections can be specified with a varied collection of geometric tools. A facility for logically combining and displaying the selections from an indefinite number of domains constitutes a graphical implementation and representation of an arbitrary database query.</p><p>The next section develops these main ideas in more detail. The section after that discusses the variety of derived fields, and the mechanisms for creating and managing them. This is followed by some considerations about time-varying field data. Finally, a sample group of derived spaces is examined, and some conclusions and ideas for further work are presented. The example system running through all of this is an implementation written in C++, using OpenGL and the X Window System, running on an SGI Onyx2 workstation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Field Visualization Strategies</head><p>Datasets are often characterized as both multidimensional and multivariate. Although usage of the terms varies, "multidimensional" commonly refers to the number of independent variables, and "multivariate" refers to the number of dependent variables. In many scientific visualization applications the independent variables are spatial coordinates, and the dependent variables are some scalar or vector valued functions of physical space. Frequently, the dependent variable data are treated as discrete samples from underlying continuous scalar or vector fields.</p><p>Conceptually, a field is a continuous region of some space over which some geometric object is continuously defined. In many physical applications, the space is everyday Euclidean physical space, and the geometric objects are physical quantities represented by scalars, vectors, or tensors. At any given spatial location in the field, the associated physical quantity may vary with time, or it may be time-invariant. In finite-difference computational simula-  tions, field values are calculated only at discrete points and times, but (one hopes!) the spatial and temporal samplings are chosen to yield a reasonable approximation to a continuous physical system. The spatial sample points in such simulations are generally arranged in some kind of mesh, which specifies the locations and also the connectivity of a number of vertices into basic elements or cells, since neighbor information is generally needed during the course of the simulation. Meshes may be built up from a number of connected components called zones, and the entire space represented by the collection of zones is referred to as the (spatial) simulation domain. At each vertex in the simulation domain there is an associated solution vector, which is just a list of the field values involved in the simulation. In some time-varying simulations, the field values change over time while the mesh remains fixed, but in the more general case both the mesh and the field values can change with each discrete computational timestep.</p><p>A typical approach to visualizing spatially distributed field data is to overlay various representations of the dependent variables onto the spatial domain itself, by means of superimposed colors, textures, opacities, icons, glyphs, and so on. In CFD visualization, for example, many methods have been developed to graphically introduce scalar, vector, and tensor attributes into the simulation domain, using color-mapped cutting planes, particle traces, tufts, line integral convolution or spot noise, isosurfaces, and, less successfully, direct volume visualization, or tensor glyphs. The general aim in all these methods is to indicate what conditions exist at particular spatial locations, or more ambitiously, to show the distribution of some data attribute across the entire domain. Although there are some exceptions (e.g., isosurfaces), most of these methods can be characterized as more or less successfully answering location queries on the physical domain.</p><p>An alternative approach, taken here, locates field data directly in other spaces, where the coordinate axes are specified by some subset of the dependent variables (or quantities derived from them), and in which position by itself indicates dependent variable value. The neighbor relations in the original set of discrete sample points can be indicated when the data are plotted in an alternative coor-dinate system, so that this strategy creates an image of the original "continuous" domain and its mesh in some dependent variable space. In general, this mapping of the original data points into a new coordinate space may be many-to-one. The alternative space can be of any dimension, but in scientific visualization two-and three-dimensional plots are most common. The examples here will all be restricted to two-dimensional, or bivariate, plots.</p><p>By itself, the image or portrait of a continuous spatial domain in some dependent variable coordinate system can be revealing. Overall value ranges and distributions of the data are easy to see, and certain structural features or correlations may be readily apparent in an appropriate space. Some of the image features are dependent on the underlying discrete sampling represented by the mesh, and some image features are relatively mesh-independent, to the extent that the mesh adequately represents a continuous field. For example, the overall range or "envelope" of the image is mesh-independent, as are geometric measures like curvature, features such as ridgelines, and various degeneracies exemplified by folds and cusps. Sampling density, or distortions suffered by gridlines or individual cells, are to a large extent mesh-dependent features. <ref type="figure" target="#fig_1">Figure 1</ref> shows a CFD dataset plotted in both physical space and in velocity component space. The original dataset features a curvilinear mesh fitted to an airfoil, and the mesh exhibits increased sampling density near the surface, and above, below, and behind the trailing edge of the wing. The mesh actually extends well beyond the boundaries of the physical space image shown here. We map the entire mesh into velocity component space by locating each vertex at a position given by the x and y components of its associated velocity vector. In the mapped image, gridlines connect the same vertices as are connected in the original mesh, although these "neighboring" vertices may be widely separated or coincident in the new space. The undisturbed flow entering the simulation domain is called the freestream, and it is conventionally aligned with the xaxis. In velocity component space, the freestream is represented by a single point -in this case a point on the vx-axis -and all points in the dataset with undisturbed flow map to this point, with many others clustered nearby which are only slightly perturbed. It is apparent from the velocity component image that some regions in the domain have an x component of velocity that is significantly greater or lesser than that of the freestream, and that in fact some regions have negative x velocities, indicating flow reversals. Evidently there are two separate regions in the domain exhibiting flow reversal. It would be difficult or impossible to distinguish these disparate regions if the mesh connectivity were not represented in the velocity-component image. The prominent regions with large velocity components in the y direction are induced by the flow diverting around the wing. Any cell in the velocity component image which encloses the origin must harbor a critical point, where the velocity has zero magnitude and undefined direction. Again, note that the mesh connectivity in the image is essential for detecting critical points. Velocities with equal magnitudes map to circles around the origin, and velocities with the same directions lie along rays anchored at the origin.</p><p>In addition to providing informative views, images of field data in various coordinate systems support a natural selection mechanism, since the data are ordered along each axis. Moreover, if the data points in the image are linked to their corresponding points in the independent variable domain, so that image selections are indicated in the preimage space, then one can "back-project" image selections to their sources. This mechanism makes it possible to answer condition queries on the original domain, that is, to ascertain where particular conditions are satisfied.</p><p>Selections are made by manipulating the image with a geometric tool called a brush <ref type="bibr" target="#b3">[4]</ref>. Brush geometries include axis-aligned rectangles, annuli, wedges, half-planes, and parabolas. These shapes have various interpretations in particular coordinate systems. In the system described here, an arbitrary number of portraits can be opened, and any open portrait can be manipulated with a brush. Data selected in any given window are highlighted in all windows, with an optional color coding across all portraits to identify the originating selection. <ref type="figure" target="#fig_2">Figure 2</ref> shows the same pair of images as <ref type="figure" target="#fig_1">Figure 1</ref>, but in reversed order. In the left image, we have selected those points whose velocity magnitude exceeds that of the freestream by some amount -in velocity component space this just amounts to selecting points that are farther from the origin than the image of the freestream. The points in physical space that map to this selection, called the preimage of the selection, are highlighted in the original physical domain. In this example, the preimage is a single continous region along the top of the wing, showing the locations where the freestream velocity has been increased. Since Bernoulli's principle states that increased velocities result in lower pressure, this is one way of visualizing the flow conditions resulting in lift.</p><p>Multiple images of the field, in various derived spaces, provide an effective high-dimensional view of the data. In general, these multiple views will not be orthogonal. Although orthogonal views, or nearly orthogonal views, are the goal of many multivariate visualization systems (e.g. <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b13">14]</ref>), a lack of orthogonality in fact underlies much of the utility of the current system. Somewhat overlapping and nonlinearly-related views allow data to be distinguished in complex and subtle ways.</p><p>Multiple cross-linked images not only provide high-dimensional views of data subsets, but support a high-dimensional selection mechanism as well. The current system allows selections from any number of portraits to be logically combined, so that unions, intersections, and differences of selected data subsets can be visualized. Using a simple color scheme, the default display uniquely identifies points that are not selected in any portrait, points that are selected in a single portrait, points that are selected in more than one portrait (but not all), and points that are selected in all portraits. The user can override this behavior with an arbitrary logical query.</p><p>The logical query facility permits a number of portraits to be pipelined together: in effect, the results of one query are forwarded from one portrait to the next for comparison, refinement, or addition, and the final results are displayed in the base physical space. This scenario lets the user experiment with various feature detection schemes, with interactively tunable parameters. Moreover, the composite results of the query are displayed in all portraits -while this compromises the notion of a pipeline, it allows for useful feedback and feedforward in the overall selection mechanism. The facility for logically combining selections from an indefinite number of domains constitutes a graphical representation of an arbitrary database query.</p><p>Brushing is an interactive multivariate visualization technique first developed by graphically inclined statisticians in the 1970s. Brushing describes the interactive and graphical selection of data subsets, which may then be operated on or interrogated in various ways. It is customary to cite Prim-9 <ref type="bibr" target="#b6">[7]</ref> as the earliest example of a system supporting interactive selection of regions, and to attribute the first comprehensive and explicit treatment of this technique to Becker and Cleveland <ref type="bibr" target="#b3">[4]</ref>.</p><p>Brushing is commonly restricted to a matrix of scatterplots, where it is almost always conjoined with linking. In this hybrid technique, all possible bivariate scatterplots generated from a multivariate dataset are arranged in a matrix, and selection of a data subset in any one scatterplot highlights the corresponding points in all plots. Becker and others implemented this basic sort of brushing utility in the comprehensive "S-Plus" statistical analysis package released by AT&amp;T Bell Labs in the mid 1980s <ref type="bibr" target="#b2">[3]</ref>.</p><p>Buja et al. <ref type="bibr" target="#b5">[6]</ref> generalized the notion of brushing scatterplots to direct manipulation of other sorts of data displays, including images, time series and lag plots, tables of discrete data, and the dynamic views of a Grand Tour <ref type="bibr" target="#b0">[1]</ref> (these dynamic views result from a projection plane moving through static data). Ward <ref type="bibr" target="#b14">[15]</ref> and Martin [9, with Ward] attempted to extend the usual 2D display-space brushes into higher dimensions and provided various brush operations, including logical operators on up to four brushes, in the publicly available XmdvTool.</p><p>The multivariate visualization literature is extensive, but much of it is only peripherally relevant to the issues of feature detection in field data. One study at least in this ballpark is by van Wijk and van Liere <ref type="bibr" target="#b13">[14]</ref>, who described a tool ("HyperSlice") for representing and navigating through a multivariate and continuous scalar function using a matrix of orthogonal two-dimensional slices.</p><p>Van Walsum and Post <ref type="bibr" target="#b12">[13]</ref> implemented a set of AVS modules making up a "selective visualization" utility. Their tool evaluates a user-specified Boolean expression at each node of a dataset, then applies image processing algorithms to the resultant binary array, before using it as input to various visualization techniques. Their simplest visualization technique just displays the selection "directly", as glyphs at each selected node, thereby answering condition queries on the original data. Queries in van Walsum and Post's system are entered as strings and the final results displayed only on the physical space grid; whereas queries in the system described here are effected graphically, by way of brushing in derived spaces, and for a "compound" query the intermediate as well as final results are displayed in all derived spaces and in physical space. Van Walsum and Post's ideas of "polishing" the query results, and using them as starting points for more involved visualization techniques, are intriguing and might be profitably incorporated into the current system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Derived Fields</head><p>Scientific visualization of field data tries to answer both location queries and condition queries. A general solution to these problems is hard largely because the field data are multivariate: it is hard to effectively portray multivariate data across a multidimensional domain, and it is hard to precisely specify multivariate conditions in an interactive exploratory setting. These problems are greatly compounded by the fact that many, if not most, of the field quantities of interest are derived, and may not even be identified at the outset of an investigation. Derived fields are fields whose values are not furnished directly by the simulation, but rather must be computed from the values of one or more other primitive fields.</p><p>Computational simulations produce a set of solution primitives from which many other quantities can be derived, by way of var-ious mathematical or physical identities. These derivations are in general nonlinear transformations and compositions of the solution primitives, and frequently involve their spatial or temporal derivatives. For example, single-species CFD solvers need only record two thermodynamic state variables and some measure of velocity to completely describe a flow. A common CFD solution vector consists of total energy per unit volume, density, and momentum -but CFD visualization techniques typically operate on derived quantities like pressure, temperature, velocity, vorticity (curl of velocity), divergence of velocity, density gradient, Laplacian of pressure, and so forth.</p><p>The widespread role of derived fields in computational field simulation post-processing poses a challenge for scientific visualization systems. Most multivariate visualization utilities expect some fixed number of variates at startup time, but derived fields can confound that assumption. Certain derived fields may not be recognized as pertinent at the start of an investigation, and a user may want to add them later. On the other hand, many multivariate systems necessarily utilize all available variates in their visualization schemes, so that a strategy of initially loading many "pre-derived" variates which turn out to be immaterial can unnecessarily and irreversibly clutter the display. A flexible multivariate visualization system should be able to handle an arbitrary number of primitive and derived variates, whose specification can be changed dynamically.</p><p>The ability to dynamically create derived fields, and then use them to make new portraits which are linked to preexisting ones, underlies much of the flexibility of the current system. Derived fields are created using the Field Encapsulation Library (FEL), an object-oriented class library for field management under development at NASA Ames Research Center <ref type="bibr" target="#b4">[5]</ref>. The FEL field class hierarchy allows one to query a field with minimal regard for its actual underlying representation, and also to transform field data as part of their retrieval. Time-varying field data are managed with working set techniques.</p><p>Derived fields are created by supplying one or more input fields, and possibly a mapping function, which assigns an output value to each set of inputs. Many mapping functions are predefined, as are the common differential operators, and need only be referenced. If a derived field is desired for which there is no predefined mapping function, the user must supply one. Typically, user-defined mapping functions are straightforward combinations of existing derived fields. The derived fields are parameterized by their input and output types, and any input field is allowed whose type is consistent with its associated derivation function or differential operator. Naturally, this implies that a derived field can itself be used as an input field for another derived field. This capability of chaining or composition is one of the most powerful features of FEL and the current system, as it allows the flexible construction of directed graphs of derived fields.</p><p>In FEL, derived fields are lazily evaluated, so that derived field creation requires very few resources. This allows the current system to predefine and cache an indefinite number of derived fields, with virtually no overhead unless the derived fields are actually used. If selected to make a portrait, the constituent derived fields are queried for values at each vertex, and the results are stored into display lists. No other storage is required for derived field values, and when a portrait is destroyed, the resources consumed by the display list are returned to the free store.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Time-Varying Fields</head><p>In the example system, the facilities for creating derived fields, and for viewing, subsetting, and logically querying all apply to timevarying field data. As the field values and possibly the mesh change with time, so too do the field portraits in various derived spaces. Viewing these dynamic portraits in certain spaces can lead to an understanding of the field behavior which may be difficult or impossible to discern in the base space. For example, <ref type="figure" target="#fig_3">Figure 3</ref> shows several images from an oscillating airfoil at various angles of attack. As the angle of attack increases, the airfoil abruptly stalls, and develops a large separation bubble with flow reversal extending almost to the leading edge. This feature is conspicuous in velocity component space, as well as in pressure-temperature space, entropy-enthalpy space, and several other spaces. When these images are viewed as an animation 1 , a pronounced high-frequency oscillation is obvious, and the preimage shows it to be correlated with the reversal region lashing about wildly as vortices are shed. The temporal sequence of the development and evolution of the recirculation bubble also reveals pronounced hysteresis as the angle of attack changes cyclically. Selection parameters in time-varying portraits are tied to the domain, so the brushes remain fixed as the time-varying data effectively move under them. By this mechanism, one observes the 1 See accompanying video.</p><p>potentially changing results of a condition query over time. As a specific instance of this, selection in physical space will reveal the changing fate in various derived spaces of a fixed region in the simulation domain. In the current CFD example, this selection mechanism reflects the Eulerian nature of the simulation data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Example Derived Spaces</head><p>Several portraits which have proved especially useful for interrogating compressible flow data are presented here. All of the examples are specific to CFD data, and some are specific to the images of the airfoil dataset shown in <ref type="figure">Figure 4</ref>  <ref type="figure">Figure 4</ref>: Airfoil dataset mapped into various derived spaces. The legends "X vs Y" indicate that X increases along the abscissa, and Y increases along the ordinate (scales omitted for clarity). See <ref type="figure" target="#fig_6">Figure 5</ref> (accompanying color plate), and section 6 for commentary. regions of specified velocity magnitude. A wedge brush centered about a ray anchored at the origin finds vertices with velocity directions within some specified range. Note that a change of reference frame merely translates or rotates this image in the plane, and that many of its geometric properties are clearly frame invariant.</p><p>Generic vector component space: Any vector field can be plotted in the space spanned by its components. In 2D, this is sometimes called the hodograph plane, and the vectors can be plotted in either Cartesian or polar coordinates. The gradient and curl operators yield vector fields which can produce useful images in this space. Plotting the associated gradient field image is a particularly valuable strategy for feature detection in scalar fields: regions where the scalar quantity is constant collapse to the origin in the gradient image, revealing the spatially varying locations in the scalar field. Selecting points along the P = 0 axis reveals divergence-free regions.</p><p>Eigenvalue spectrum: The pair of eigenvalues of the velocity gradient tensor is plotted on the complex plane. The mesh connectivity is usually omitted from this plot, since most vertices map to two distinct points, and thus have up to eight neighbors. Selection of a point in this space highlights the corresponding eigenvalue of the pair. Selecting points with complex eigenvalues identifies swirling flow, and might be used, for example, as part of a vortex core identification query.</p><p>Span-space: For a given scalar field, the location of each cell in the dataset is given by its minimum and maximum vertex value. All points lie on or above the identity line. A simple rectangular brush picks out cells containing an isosurface (upper-left diagonal corner query) <ref type="bibr" target="#b10">[11]</ref> or an interval volume. Very handy.</p><p>Pressure vs temperature: In this space, much of the airfoil dataset maps to a straight line, as shown in <ref type="figure">Figure 4</ref>. Since for perfect gases P = RT (where P = pressure, = density, R = gas constant, and T = temperature), all points on this line evidently have the same density. Excursions from the line identify a boundary layer, and (at high P and T ) a recirculation zone and long wake extending from the trailing edge of the wing.</p><p>Kinetic energy vs temperature: In certain flows, these quantities should sum to a constant, so all data are constrained to lie along a line. Deviations to this rule are obvious, and typically occur in the boundary layer. Images in this space provide a quick check on the overall quality of these types of calculations, and specifically identify particularly troublesome regions. In general high Reynolds number flows, departures from a straight line image identify regions where viscous effects and heat conduction are important. Note that in <ref type="figure">Figure 4</ref>, the region below the generally straight line plot includes a folded image of the domain boundary. Entropy vs enthalpy: Flow reversals, separation bubbles, and turbulent regions generally stand out conspicuously in this space. In <ref type="figure">Figure 4</ref>, the prominent upward-slanting feature corresponds to a turbulent region of diminishing strength, starting with a tight recirculation just behind the trailing edge and grading into a long, streaming wake. Vorticity vs entropy: In 2D, the single component of vorticity (out of the plane) can be treated as a scalar, which highlights regions of rotation or shear. In the airfoil dataset, the sign of the vorticity distinguishes the upper and lower boundary layers, and the boundary layers, turbulent wake, and a recirculation zone can be discerned as coherent structures along the entropy axis. See Figures 4 and 5.</p><p>Pressure gradient magnitude vs density: Useful for locating shocks. Frequently, the structure of a shock can be visualized in images in this space, that is, the leading and trailing edges of the front can be discerned. Density is a typical CFD solution primitive, whereas pressure gradient magnitude is a highly derived field whose creation in FEL relies on chaining.</p><p>Laplacian of pressure vs vorticity: Vortices can often be identified in this space.</p><p>Independent variables (physical space and time): This paper has distinguished the logical roles of dependent and independent variables, but the display and selection mechanisms of the example system are not bound by this distinction. "Mixed" dependent/independent variable images effectively show temporal and spatial distributions of various quantities, and allow data subsetting over selected temporal and spatial ranges. Wholly independent variable (x,y, and t) images are not only useful for displaying the results of queries in other spaces, but they themselves provide a direct means for spatial and temporal subsetting.</p><p>Computational space: Structured meshes are associated with a computational coordinate system, which provides alternative independent spatial variables. Paired portraits can provide a visualization of the mapping from computational to physical space. Multizone mesh coverage and overlap can also be visualized. Computational space images are very useful for restricting the extent of a further subsetting query. For example, in an external flow around a body one may try to identify the boundary layer by subsetting on low velocity magnitude or high shear, but confine this query to the first several gridplanes off the body surface to avoid picking up features in the far-field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions and Future Work</head><p>We have described a system which projects computational field simulation data into various spaces derived from their dependent variates. In these derived spaces, values are indicated by position, and therefore the structure of the field image may reveal certain features of the data which might be difficult to discern or portray in the base space, particularly in time-varying fields. The orderly layout in the derived space also supports a natural and effective selection mechanism for subsetting the data.</p><p>Many such derived space projections constitute a highdimensional view of the data, and graphically and logically linking the selection mechanism across views allows for interactive multidimensional queries. The ability to create new derived spaces dynamically allows these multidimensional views and queries to be extended, refined, and adapted during the course of an investigation. Some feature detection tasks are more conveniently conceptualized or implemented in certain derived spaces than in others. Some derived spaces may reveal potentially unforeseen features in the data directly as coherent structures in their associated images, or indirectly via subsetted selections and their associated preimages in other spaces. In practice, we have found this system to be highly effective in the analysis of unsteady CFD data.</p><p>An obvious extension of the present system would fully accommodate 3D datasets, and in fact this has already been partially implemented. The extension is conceptually straightforward; the primary obstacles are the usual practical ones concerning 3D display and interaction. Three-dimensional derived spaces would be useful for 2D data: the field image could reveal meaningful relationships between three variates, and many of the image pathologies in the 2D projections would be eliminated. Conversely, 3D data can be usefully projected into certain 2D derived spaces, where viewing and manipulation is facilitated, but for some derived quantities a 3D space is more natural. For 3D CFD data, a particularly interesting 3D derived space currently being investigated is PQR-space, where P, Q, and R are the three matrix invariants of the velocity gradient tensor. As in 2D, location in this space reveals the local topological structure of the flow, and subsetting in this space could form the first cut for many feature detection algorithms. For example, many vortex core finders start by seeking locations with spiral-saddle flow (e.g., <ref type="bibr" target="#b11">[12]</ref>). </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Airfoil dataset in physical space (left) and velocity component space (right). The edges of the physical space image are axis-aligned, with x increasing to the right, and y increasing to the top. The vertices of the computational mesh in velocity component space are located by the x and y components of their associated velocity vectors. Undisturbed airflow (the freestream) is purely in the x direction: it enters the physical domain from the left, and maps to a single point on the vx-axis in velocity component space. In velocity component space, any points left of the vy-axis have negative x components, indicating that the freestream has been reversed. See text for more details.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Selections in velocity component space (left) with corresponding preimages in physical space (right). Unselected regions are shown in gray; selected regions and preimage in black.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Evolution of recirculation bubble in velocity component space. See accompanying video for live version.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>, but they should give an indication of the general utility of the system under discussion. Velocity component space: Mesh vertices are located by the x and y components of their associated velocity vector. The freestream maps to a single point. Flow reversals are readily apparent. Any cell which encloses the origin must contain a critical point. Annulus brushes centered on the origin bracket</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>PQ-space: The matrix invariants (P = trace, Q = determinant) of the velocity gradient tensor are plotted for each vertex. Location in this space reveals the local topological character of the flow. Points above the parabola Q = P 2 =4 correspond to spiralling flow, points in the upper half-plane but below the parabola are nodes, and points in the lower half-plane show local saddle-like flow. Mapping to the left and right halfplanes indicates convergent and divergent flow, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Airfoil dataset mapped into physical space and various derived spaces, as indicated by the window titles. The data selected by the white rectangular and annular b rushes are identi ed by the same color i n a l l p o rtraits. The colors are blended along cell edges: color bleeding" through the selection boundaries indicates cut cells. The control panel shows a sampling of other derived spaces that can be made on demand.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work was supported by NASA contract NAS2-14303. The airfoil dataset was generated by Sungho Ko, at NASA Ames Research Center, and details of his computations can be found in <ref type="bibr" target="#b7">[8]</ref>. Thanks to Pat Moran, Creon Levit, David Ellsworth, Michael Cox, Peter Vanderbilt, Randy Kaemmerer, and the anonymous reviewers for their helpful suggestions about this work; and thanks to the NAS Data Analysis Group at NASA Ames Research Center for facilities and opportunities.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Grand Tour: A tool for viewing multidimensional data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Asimov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal of Scientific and Statistical Computing</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="128" to="143" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Vortex tubes in turbulent flows: Identification, representation, reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;94</title>
		<editor>R. D. Bergeron and A. E. Kaufman</editor>
		<meeting>IEEE Visualization &apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="132" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">The New S Language: A programming environment for data analysis and graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Chambers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Wilks</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<publisher>AT&amp;T Bell Labs</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Brushing scatterplots</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technometrics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="127" to="142" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">FEL: The Field Encapsulation Library</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bryson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kenwright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gerald-Yamasaki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;96</title>
		<editor>R. Yagel and G. M. Nielson</editor>
		<meeting>IEEE Visualization &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="241" to="247" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Interactive data visualization using focusing and linking</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Buja</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Michalak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;91</title>
		<editor>G. M. Nielson and L. Rosenblum</editor>
		<meeting>IEEE Visualization &apos;91</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="156" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Prim-9, an interactive multidimensional data display and analysis system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Fisherkeller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Friedman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Tukey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Dynamic Graphics for Statistics</title>
		<imprint>
			<date type="published" when="1975" />
			<biblScope unit="page" from="91" to="109" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Computations of unsteady separating flows over an oscillating airfoil</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Mccroskey</surname></persName>
		</author>
		<idno>AIAA 95-0312</idno>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">High dimensional brushing for interactive exploration of multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;95</title>
		<editor>G. M. Nielson and D. Silver</editor>
		<meeting>IEEE Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">A review of quasi-coherent structures in a numerically simulated boundary layer. NASA TM-102191</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Robinson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Kline</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">R</forename><surname>Spalart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Isosurfacing in span space with utmost efficiency (ISSUE)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H-W</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;96</title>
		<editor>R. Yagel and G. M. Nielson</editor>
		<meeting>IEEE Visualization &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="287" to="294" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sujudi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haimes</surname></persName>
		</author>
		<title level="m">Identification of swirling flow in 3D vector fields. AIAA 95-1715</title>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Selective visualization of vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Van Walsum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum (Eurographics &apos;94)</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="339" to="347" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Liere</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hyperslice</surname></persName>
		</author>
		<title level="m">Proceedings of IEEE Visualization &apos;93</title>
		<editor>G. M. Nielson and R. D. Bergeron</editor>
		<meeting>IEEE Visualization &apos;93</meeting>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="119" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">XmdvTool: Integrating multiple methods for visualizing mutivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;94</title>
		<editor>R. D. Bergeron and A. E. Kaufman</editor>
		<meeting>IEEE Visualization &apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="326" to="333" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Emergence of coherent patterns of vortex stretching during reconnection: A scattering paradigm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">J</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">N</forename><surname>Boratav</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Pelz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Cooper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review Letters</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">18</biblScope>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
