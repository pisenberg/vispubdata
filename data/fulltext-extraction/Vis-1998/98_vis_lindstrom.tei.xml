<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fast and Memory Efficient Polygonal Simplification</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Lindstrom</surname></persName>
							<email>lindstro@cc.gatech.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Turk</surname></persName>
							<email>turk@cc.gatech.edu</email>
						</author>
						<title level="a" type="main">Fast and Memory Efficient Polygonal Simplification</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Conventional wisdom says that in order to produce high-quality simplified polygonal models, one must retain and use information about the original model during the simplification process. We demonstrate that excellent simplified models can be produced without the need to compare against information from the original geometry while performing local changes to the model. We use edge collapses to perform simplification, as do a number of other methods. We select the position of the new vertex so that the original volume of the model is maintained and we minimize the per-triangle change in volume of the tetrahedra swept out by those triangles that are moved. We also maintain surface area near boundaries and minimize the per-triangle area changes. Calculating the edge collapse priorities and the positions of the new vertices requires only the face connectivity and the the vertex locations in the intermediate model. This approach is memory efficient, allowing the simplification of very large polygonal models, and it is also fast. Moreover, simplified models created using this technique compare favorably to a number of other published simplification methods in terms of mean geometric error.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Automatic model simplification begins with a geometric description of an object and produces a new description that is similar in appearance to the original and that has many fewer geometric primitives. Many approaches to simplification have appeared in the recent literature, at least in part because this technique has the potential to dramatically speed up many interactive graphics applications. Such techniques are becoming increasingly important due to the increasingly large models that are created from medical data acquisition (CT, MRI, etc.), range scanners, computer vision algorithms, satellite radar, and other sources. Models with more than one million triangles are becoming commonplace, thus we have paid particular attention to the performance of our method on large models.</p><p>We use edge collapse as the method for simplifying geometry, as have a number of previous researchers. This approach selects an edge and replaces it with a single vertex ( <ref type="figure">Figure 2</ref>). This removes one vertex, three edges, and two faces. The edge collapse operation is attractive because it allows the new vertex to be placed in a manner that helps preserve the location and shape of the original surface. It is also a more atomic operation than vertex or face removal, and does not require the invocation of a triangulation algorithm. Two decisions are central to a simplification method that uses edge collapse: 1) the position of the new vertex created by the edge collapse, and 2) the ordering of the edges to be collapsed (the edge priority). We use volume and surface area information to make both of these decisions.</p><p>We constrain the placement of new vertices so that the volume of a closed model is not altered. If the new vertex is near a boundary of the model, we also preserve the surface area in the region surrounding the edge that is being collapsed. Often these two constraints do not fully determine the position of the new vertex, so we optimize additional geometric properties. We minimize the volume swept out by triangles that are moved by the operation, minimize the area swept out by boundary edges, and finally attempt to produce well-shaped triangles if the vertex is still underconstrained. Our method unifies these different constraints by describing each of them as one or more planes in which the new vertex must lie. When three non-parallel planes are determined, the vertex position is fully defined. We use per-triangle volume and area differences to dictate the priority of edge collapses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PREVIOUS WORK</head><p>There have been a large number of recent publications on automatic model simplification, hence it is not possible to cover all of this work here. In this section we will concentrate on the particular forms of geometric information that guides various simplification methods. Our attention below is focused on those simplification algorithms that make many small local changes to the geometry of a model. Not all simplification methods are based on incremental changes, and exceptions include <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b21">22]</ref>.</p><p>Some of the earliest simplification algorithms used successive vertex removal as the method for gradually simplifying a model. Schroeder and co-workers use the distance from a vertex to the plane most nearly passing through adjacent vertices as their priority measure <ref type="bibr" target="#b19">[20]</ref>. No history of the original geometry is kept during this process. A more recent variant of this technique includes a scalar value at each vertex that encodes the maximum error created so far in the neighborhood of the vertex <ref type="bibr" target="#b20">[21]</ref>. Renze and Oliver concentrate on triangulation algorithms in their work, and they use the same distance to plane method as Schroeder <ref type="bibr" target="#b16">[17]</ref>. Hamann uses a measure of local curvature to decide which vertices to remove, and here again no history of the original surface is used to guide these decisions <ref type="bibr" target="#b9">[10]</ref>. More recently, Gieng, Hamann and coworkers successively collapse triangles into vertices, and the new vertex is placed using a local quadratic approximation to the nearby surface <ref type="bibr" target="#b7">[8]</ref>.</p><p>Some more recent vertex removal techniques use some form of history about the original geometry as a way of tracking the error incurred during simplification. Bajaj and Schikore keep track of "positive" and "negative" error bounds at each vertex throughout the iterative removal process <ref type="bibr" target="#b0">[1]</ref>. Planar projections of old and new triangles in a region allow them to compute these error bounds. Ciampalini and co-workers associate with each triangle a list of vertices from the original model <ref type="bibr" target="#b1">[2]</ref>. These vertices are used to maintain an error estimate for each triangle during simplification. Cohen et al. use geometric envelopes built around the original model to constrain the selection of vertices that may be removed <ref type="bibr" target="#b3">[4]</ref>.</p><p>A number of methods use iterative edge collapse to simplify models. Hoppe and co-workers use edge collapse together with edge swap and edge split to create simplified surfaces <ref type="bibr" target="#b11">[12]</ref>. They use a distance measure from a sampled set of points on the original model in order to determine new vertex positions. In more recent work, Hoppe uses only edge collapses to simplify models, and still uses distance to sampled points as a guide to simplification <ref type="bibr" target="#b12">[13]</ref>. Ronfard and Rossignac essentially keep at each vertex a list of planes that are a history of the original surface in the region surrounding the vertex <ref type="bibr" target="#b17">[18]</ref>. This information is used to prioritize edge collapses and to place the new vertices. Their work was a jumping off point for Garland and Heckbert, who maintain a 4 by 4 symmetric matrix at each vertex that allows them to track squared distances to planes of the original model <ref type="bibr" target="#b6">[7]</ref>. The position of a new vertex is found simply by minimizing the quadric error. Elements of our simplification method are related to such quadric error measures, and we will return to this point later. Gu√©ziec associates error radii at each vertex during successive edge collapses in order to bound the simplification error <ref type="bibr" target="#b8">[9]</ref>. To our knowledge, his method is the first approach that explicitly adds a constraint to vertex placement in order to maintain the volume of the original model. Our method is also volume preserving, but our additional position constraints and our edge cost are quite different. (Gu√©ziec uses edge length for edge cost.) Cohen and co-workers use edge collapse operations and a planar projection analysis similar to those of Bajaj and Schikore to bound the error in a region <ref type="bibr" target="#b4">[5]</ref>. They keep track of this error by associating an axially-aligned box to each triangle. Conceptually, the original surface is guaranteed to lie within the union of all such boxes convolved with their associated triangles.</p><p>Two trends in simplification have attracted our attention. One is that more researchers appear to be using edge collapse (or generalizations that allow topology modification) to create local changes to the geometry. Our work follows the edge collapse paradigm. A second trend is that more algorithms are maintaining some form of history about the original surface. Our approach to vertex placement and edge cost determination yields a counter-intuitive result: we can perform high-quality simplification without retaining any history about the original model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">NOTATION</head><p>Before describing our simplification method, we will briefly introduce some terminology and notation. The topological entity called a 0-simplex, or a vertex, is denoted by v, with its geometric counterpart written as the 3-vector v. A non-oriented edgeƒì is a set fv e 0 ; v e 1 g = fbec 0 ; bec 1 g, where bsc denotes the n ,1-faces of an nsimplex s; in this case the vertices of the 1-simplex e. Oriented edges are written as ordered pairs·∫Ω = b e c 0 ; b e c 1 . All higher order simplices are assumed to be oriented unless otherwise specified, and we use the distinctions ands only to resolve ambiguities. A triangle, or 2-simplex, is a set of oriented edges, e.g.</p><formula xml:id="formula_0">t = f·∫Ω t 0 ;·∫Ω t 1 ;·∫Ω t 2 g = fv t 0 ; v t 1 ; v t 1 ; v t 2 ; v t 2 ; v t 0 g. For convenience, we sometimes write t = v t 0 ; v t 1 ; v t 2 to mean fv t 0 ; v t 1 ; v t 1 ; v t 2 ; v t 2 ; v t 0 g.</formula><p>The operator dse gives the n + 1-simplices of which an n-simplex s is a subset of, e.g. dve denotes the edges that are incident upon the vertex v. This notation trivially extends to sets, for example bSc = fbsc : s 2 Sg. Thus, the operator bSc reduces the dimension of S by one, while dSe adds a dimension. See <ref type="figure" target="#fig_0">Figure 1</ref> for examples of these operators.</p><p>Simplices are classified as boundary, manifold, and nonmanifold. A boundary edge has exactly one incident triangle, a manifold edge has two, while non-manifold edges have three or more incident triangles. We write the boundary of a set S as the set of oriented edges ‚àÇS = f·∫Ω : e 2 S; jdeej = 1g.</p><p>All vectors are assumed to be column vectors, and are written as small, bold-face letters; matrices are written as capital letters. We make no distinction between points and vectors; we assume that the geometric description of a vertex is a 3-vector relative to some fixed origin. Transposition is used to denote row vectors, e.g. v T . The expression u v denotes the cross product of two 3-vectors. The scalar triple product is written as u; v; w = detu v w. The functions V , A, and L denote signed volume, signed area, and length, respectively. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SIMPLIFICATION ALGORITHM 4.1 Algorithm Overview</head><p>Our simplification method consists of repeatedly selecting the edge with a minimum cost, collapsing this edge, and then re-evaluating the cost of edges affected by this edge collapse. Specifically, an edge collapse operation takes an edge e = fv 0 ; v 1 g and substitutes its two vertices with a new vertex v. In this process, the triangles dee are collapsed to edges, and are discarded. The remaining edges and triangles incident upon v 0 and v 1 , i.e. dbec e , f e gand ddbec e e , d e e , respectively, are modified such that all occurrences of v 0 and v 1 are substituted with v. <ref type="figure">Figure 2</ref> illustrates the edge collapse operation. The first step in the simplification process is to assign costs to all edges in the mesh, which are maintained in a priority queue. For each iteration, the edge with the lowest cost is selected and tested for candidacy. As we will describe later, an edge is rejected as a candidate if no solution exists for its replacement vertex. We additionally impose some topological constraints to preserve the genus and to avoid introducing non-manifold simplices. If the edge is not a valid candidate, its cost is set to infinity, and the edge is moved to the back of the queue. Given a valid edge, the edge collapse is performed, followed by a re-evaluation of edge costs for all nearby edges affected by the collapse. As the triangles ddbecee are modified, all other edges fe j g for which ddbecee ddbe j cee 6 = / 0 must be updated, i.e. fe j g = dbdvece, with jfe j gj = 38 on average. Once the costs for fe j g have been updated, the next iteration begins, and the process is repeated until a desired number of simplices remain. The general edge collapse method involves two major steps: choosing a measure that specifies the cost of collapsing an edge e, and choosing the position v of the vertex v that replaces the edge. Many approaches to vertex placement have been proposed, such as picking one of the vertices of e, using the midpoint of e, or choosing a position that minimizes the distance between the mesh before and after the edge collapse. This problem can be viewed as an optimization problem, that is, given an objective function f C e; v that specifies the cost of replacing e with v, v is chosen such that f C is minimized. We have chosen a cost function f C that encapsulates volume and area information about a model. These geometric issues are described in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Vertex Placement</head><p>In choosing the vertex position v from an edge collapse, we attempt to minimize the change of several geometric properties such as volume and area. We require a unified mathematical framework for such constraints. Our basic approach to finding v is to combine a number of linear equality constraints a i</p><formula xml:id="formula_1">T v = b i , i.e. v</formula><p>is the intersection of three non-parallel planes in R 3 . We have decided to incorporate more than three such constraints in the event that two or more of them are linearly dependent, and the constraints are computed and added in a pre-determined order of importance. If two or more of these planes are nearly parallel, minor perturbations to the plane coefficients lead to large variations in the solution. Such perturbations frequently occur due to roundoff errors and limited numerical precision. To compensate for such problems, we add a constraint a n ; b n to a set of existing constraints A; b only if the plane normal a n does not fall within an angle Œ± of all linear combinations of the plane normals fa i : 0 i ng of the previous constraints. Thus, given n , 1 previous constraints (n 3), we accept a n ; b n according to the following rules:</p><formula xml:id="formula_2">(i) n = 1: a 1 6 = 0 (ii) n = 2: a 1 T a 2 2 ka 1 kka 2 kcosŒ± 2 (iii) n = 3: a 1 a 2 T a 3 2 ka 1 a 2 kka 3 ksinŒ± 2</formula><p>If the constraint meets these conditions, we say that it is Œ±compatible with the list of prior constraints. For all results presented in this paper, Œ± has been set to 1 . After three compatible constrains have been found, v is computed as</p><formula xml:id="formula_3">v = A ,1 b (1)</formula><p>That is, a n T is the n th row of A. Several of the vertex placement constraints are obtained by minimizing some quadratic objective function f e; v, subject to the set of prior linear constraints A; b. This is commonly referred to as a quadratic programming problem. The objective functions discussed here can be reduced to a certain form that allows v to be solved for directly:</p><formula xml:id="formula_4">f e; v = 1 2 v T Hv + c T v + 1 2 k<label>(2)</label></formula><p>Here H is the symmetric Hessian, Hv + c is the gradient of f , and k is a constant. Note that Garland and Heckbert use a function of this form, but their constraints are derived in quite a different manner than ours <ref type="bibr" target="#b6">[7]</ref>. Given n constraints A; b, let the columns of Z be a basis in R 3 , with the first n equal to A T . The remaining <ref type="bibr" target="#b2">3</ref> ,n columns of Z are made orthogonal to the vectors a i . Then the additional 3 ,n constraints are</p><formula xml:id="formula_5">I 3,n;3 Z ,1 Hv + c = 0<label>(3)</label></formula><p>where I 3,n;3 is the 3 ,n by 3 submatrix formed by removing the top n rows from the identity matrix I. These additional linear constraints are added provided they satisfy the compatibility rules. Throughout the remainder of this paper, we will assume that e is the edge to be collapsed, v is the replacement vertex, ft i g = ddbecee are the triangles surrounding an edge, f·∫Ω i g = ‚àÇdbece are the boundary edges of the changing region, and fv i g = bdvec, fvg are the neighboring vertices to the edge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Volume Preservation</head><p>When an edge is collapsed, the local shape of the model is generally modified. If the replacement vertex is not chosen carefully, each edge collapse will alter the volume of the model. For example, if each edge is substituted by its midpoint, the model will locally contract in convex regions and inflate near concave edges. Even if the model is not a closed, manifold, orientable surface, we can think of local surface patches as bounding some volume, and preserving the volume both locally and globally is desirable as it tends to preserve both the 3D shape of the model and its 2D projection.</p><p>In this discussion, we will assume that ddbecee with its edges and vertices are manifold. In fact, it matters little whether the mesh e t 1 t 2 is locally manifold or not, or if it has a boundary; the preservation and optimization steps generally handle such cases in a consistent and intuitive manner. First, observe what collapsing e does to the volume of the model. When a triangle</p><formula xml:id="formula_6">t 8 t 3 t 4 t 5 t 7 t 0 v t‚Ä≤ 1 t‚Ä≤ 2 t‚Ä≤ 3 t‚Ä≤ 4 t‚Ä≤ 5 t‚Ä≤ 6 t‚Ä≤ 0 t 8 v v t‚Ä≤ 3 t 3 edge collapse v e 0 v e 1 v e 1 v e 0 v e 1 t 0 t‚Ä≤ 0 v v</formula><formula xml:id="formula_7">t = v e i ; v t 1 ; v t 2 is replaced by t 0 = v ; v t 1 ; v t 2 ,</formula><p>a volume is swept out by t as v e i moves in a linear path to v <ref type="figure">(Figure 2</ref>). This volume is described by a tetrahedron</p><formula xml:id="formula_8">v; v e i ; v t 1 ; v t 2 .</formula><p>If v is "above" the plane of t (i.e. outside the model), we say that the tetrahedral volume is positive, and the model expands locally at t. Conversely, if v is "below" the plane, the change in volume is negative, and the model shrinks. Thus, to preserve the volume of the model, we set</p><formula xml:id="formula_9">‚àë i V v; v ti 0 ; v ti 1 ; v ti 2 = ‚àë i 1 6 v x v t i 0 x v t i 1 x v t i 2 x v y v t i 0 y v t i 1 y v t i 2 y v z v t i 0 z v t i 1 z v t i 2 z 1 1 1 1 =0<label>(4)</label></formula><p>and solve for v. Equation 4 can be rewritten as</p><formula xml:id="formula_10">‚àë i v ti 0 v ti 1 + v ti 1 v ti 2 + v ti 2 v ti 0 T v = ‚àë i n i T v = ‚àë i v ti 0 ; v ti 1 ; v ti 2 (5)</formula><p>where n i is the outward normal vector of triangle t i , with magnitude twice the area of t i . It is clear that this local preservation of volume also implies global preservation as we have accounted for all triangles changed by the edge collapse. Equation 5 is a linear equality that constrains the solution v to a plane. Note that if the surface is locally non-orientable, folds over itself, or is otherwise geometrically or topologically degenerate, ‚àë i n i may be zero, in which case we discard the constraint. Since volume preservation only restricts v to a plane, we can place additional constraints on its final position.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Boundary Preservation</head><p>Analogous to volume preservation, our algorithm preserves the shape of surface boundaries in models that are not closed. For a planar boundary, we attempt to preserve the area enclosed by the boundary, which is the 2D equivalent of preserving the volume in 3D. Rather than using signed changes in volume, boundary preservation involves operations with signed changes in area. Thus, for a planar boundary, we set</p><formula xml:id="formula_11">‚àë i Av; v ei 0 ; v ei 1 = k ‚àë i 1 2 v v e i 0 + v e i 0 v e i 1 + v e i 1 v k = 0 (6)</formula><p>where each term in the sum is a vector orthogonal to the boundary plane, with magnitude equal to the change in area associated with the corresponding edge. The vector direction determines the sign of  <ref type="figure">Figure 3</ref> illustrates the changes in area for the boundary ‚àÇdbece = f·∫Ω 0 ;·∫Ω 1 ;·∫Ω 2 g when the edge·∫Ω =·∫Ω 1 is collapsed to v.</p><p>In general, surface boundaries are not planar, however, and we are forced to revise the notion of boundary area. A reasonable way of doing this is to relax the requirement that the terms in Equation 6 be parallel, and simply express each change in area as having a direction-instead of a binary sign-in addition to magnitude. Equation 6 generally has no solution for non-planar boundaries, however, so we have chosen to minimize the magnitude of the sum of directed area vectors, noting that the magnitude of the residual vector is a measure of how faithfully the boundary "area" has been preserved. Thus, we seek to minimize</p><formula xml:id="formula_12">k ‚àë i 1 2 v v ei 0 + v ei 0 v ei 1 + v ei 1 vk 2 = 1 4 kv ‚àë i v ei 1 ,v ei 0 + ‚àë i v e i 1 v e i 0 k 2 = 1 4 k v e 1 + e 2 k 2</formula><p>where </p><formula xml:id="formula_13">e 1i = v ei 1 , v ei 0 , e 2i = v ei 1 v</formula><p>Each of these constraints is added to A (in no particular order) subject to the compatibility rules mentioned above. Recall that these two constraints are only used when ‚àÇdbece is non-empty.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Volume Optimization</head><p>As described above, the volume of the model is preserved by setting the sum of signed tetrahedral volumes to zero, which leaves an entire plane of candidate vertices. To further constrain the vertex position, we also attempt to minimize the unsigned volume of each individual tetrahedron, which is a measure of the local surface error for each corresponding triangle in ddbecee. To minimize these errors, we find the minimum of</p><formula xml:id="formula_15">f V e; v = ‚àë i V v ; v t i 0 ; v t i 1 ; v t i 2 2</formula><p>After expanding this and doing some algebra, we have</p><formula xml:id="formula_16">f V e; v = 1 2 v T H V v + c V T v + 1 2 k V = 1 18 " 1 2 v T ‚àë i n i n i T v , ‚àë i v ti 0 ; v ti 1 ; v ti 2 n i T v + 1 2 ‚àë i v ti 0 ; v ti 1 ; v ti 2 2<label>(9)</label></formula><p>which is of the same form as Equation 2, and Equation 3 can be used to find the remaining constraints. found as the intersection of three planes, two of which are obtained from volume optimization.</p><p>If the vertices bdbecec are all coplanar, the volume optimization yields infinitely many solutions as each tetrahedral volume is zero.</p><p>In the case when the vertices are nearly coplanar, Equation 9 results in constraints that are not Œ±-compatible with prior constraints, and we assume that the surface errors are small enough that optimization of other aspects of the mesh are more important, for example maximizing the aspect ratio of the affected triangles. Additional optimization is discussed in the next two subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.4">Boundary Optimization</head><p>For boundary optimization, we use a 2D analogy to the above mentioned volume optimization. That is, we minimize the sum of squared areas described in Section 4.2.2:</p><formula xml:id="formula_17">f B e; v = ‚àë i A v ; v e i 0 ; v e i 1 2</formula><p>The above equation reduces to</p><formula xml:id="formula_18">f B e; v = 1 2 v T H B v + c B T v + 1 2 k B = 1 2 " 1 2 v T ‚àë i e 1 i e 1i v+ ‚àë i e 1i e 2i T v + 1 2 ‚àë i e 2i T e 2i<label>(10)</label></formula><p>where the matrix v is defined as</p><formula xml:id="formula_19">v = 0 @ 0 , v z v y v z 0 , v x , v y v x 0 1 A and v = v T .</formula><p>As before, Equation 3 is used to further constrain v. <ref type="figure">Figure 5</ref> shows constraints associated with boundary preservation and optimization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.5">Triangle Shape Optimization</head><p>In certain circumstances, the constraints discussed previously are not all compatible and do not yield a single solution, and further optimization can be employed. Typically, these cases occur when the objective functions are constant, e.g. when the vertices bdbecec are all coplanar, or when the vertices b‚àÇdbecec are collinear. In these circumstances, we have decided to optimize the shape of the triangles ddvee such that equilateral triangles are preferred over long and <ref type="figure">Figure 5</ref>: The optimal vertex v for a collapsed boundary edge e. a2 ; b2 is the set of vertices for which the boundary area is preserved; boundary optimization yields a3; b3. The volume preservation constraint a1 ; b1, not shown here, is parallel to the plane of the <ref type="figure">figure.</ref> skinny ones. Elongated triangles can introduce unwanted shading discontinuities and may slow down some rendering methods. As a measure of triangle shape quality, we have chosen the following expression:</p><formula xml:id="formula_20">(a 2 , b 2 ) (a 3 , b 3 ) e v</formula><formula xml:id="formula_21">f S e; v = ‚àë i L v ; v i 2</formula><p>which is the sum of squared lengths of the edges incident upon v. By minimizing f S , we maximize the quality of the resulting triangles. Because we know that the surface is locally planar (or nearly planar) the choice of v does not (significantly) alter the sum of areas of the incident triangles after the edge is collapsed. Thus, by minimizing the above edge lengths, we ensure that the area to perimeter ratios of the resulting triangles are maximized. The objective function f S can be written as</p><formula xml:id="formula_22">f S e; v = 1 2 v T H S v + c S T v + 1 2 k S = 2 " 1 2 v T ‚àë i Iv , ‚àë i v i T v + 1 2 ‚àë i v i T v i<label>(11)</label></formula><p>It is fairly easy to show that f S increases with the squared distance of v to the centroid of fv i g.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Edge Collapse Priorities</head><p>Given an optimal vertex position for an edge collapse, we need to determine the cost of collapsing the edge. The term "optimal" needs to be put in context, however. By defining the edge cost in terms of the objective functions that were minimized above, the vertex position is optimal with respect to the incurred cost of collapsing the edge. We have chosen to write the edge cost as the linear combination</p><formula xml:id="formula_23">f C e; v = Œª f V e ; v + 1 ,Œª L e 2 f B e ; v = Œª ‚àë i V v ; v t i 0 ; v t i 1 ; v t i 2 2 + 1 ,Œª ‚àë i , L e A v ; v e i 0 ; v e i 1 2 (12)</formula><p>That is, the cost is a weighted sum of the terms minimized in the volume and boundary optimization. The inclusion of Le (the length of the edge e) ensures scale invariance and makes f B compatible with f V , so that both terms have units length <ref type="bibr" target="#b5">6</ref> . Our method of relating area and volume is arbitrary, and other alternatives exist, e.g. taking into account the bounding box diagonal, bounding sphere radius, longest edge, etc. We have omitted the term for triangle shape optimization as it tends to penalize edges that otherwise have low values for f V and f B . Recall that f S is used in the optimization only when f V and f B are both close to zero, and serves as a last resort to constraining v when all other methods have failed.</p><p>For the results presented in this paper, Œª = 1 2 , which has given good results for all the models that we have tried.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Summary of Vertex Placement</head><p>Given an underconstrained solution for the vertex v that preserves both volume and boundary area, we choose v such that f C in Equation 12 is minimized. Notice that f C can be written in the form of Equation 2. This allows us to minimize the volume and boundary objective functions simultaneously. If the solution is still underconstrained, we employ triangle shape optimization. Thus, to find v, constraints are added as follows: The constraints presented in this section rely on the use of quadratic objective functions. These squared terms were introduced to eliminate square roots and to allow an efficient optimization procedure. However, one drawback of this approach is that it is sensitive to modifications of the mesh connectivity that don' t affect the geometry, e.g. splitting a triangle in two affects the sums of squared areas and volumes associated with the triangle. Such cases can be detected and eliminated as a pre-processing step.</p><p>In rare cases, v remains underconstrained, at which point some additional criterion could be used to constrain it. We have simply chosen to reject such edges as edge collapse candidates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Geometric Comparison Tool</head><p>In order to assess the quality of our simplification method, we created a number of simplified models and we have compared them to simplified models created using other published simplification techniques. We could have attempted to implement these algorithms from their published descriptions, but in doing so we might have introduced bias by not tuning the parameters of the other methods with enough care. Instead, we chose to compare our method to results taken from implementations by the authors of the methods. Doing so is not free from bias either because some simplification methods are not publically available, often due to commercial or intellectual property right restrictions, thus some techniques inevitably will not be represented in comparisons such as ours. We feel, however, that simplification techniques have become mature enough as a sub-area within computer graphics that researchers should at least make an attempt to assess the quality of their results.</p><p>We have chosen to use the Metro geometric comparison tool in order to measure surface deviation <ref type="bibr" target="#b2">[3]</ref>. Metro accepts two polygonal models-an original and a simplified model-and computes the maximum and mean geometric errors of the simplified model with respect to the original. This is done by point sampling the simplified model uniformly, using Phong interpolation to estimate the surface normal at each sample, and intersecting the line defined by the point sample and its normal with the original model. Both the maximum and mean distance between the point samples and their corresponding intersections with the original are recorded. We use Metro because we did not author the tool (hopefully eliminating bias towards our algorithm) and because others may also use it since it is publically available.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Comparisons</head><p>We used two test models in our comparisons. One of these models is the Stanford Bunny, which is often used as a test object for simplification. It is also a good candidate object because it contains several regions with boundaries on its underside. The second object is a model of the bones in a human hand that was constructed for stereolithography (Plate 8a). At 650,000 triangles, this model allows us to see the performance of the simplification methods over a wide range of detail levels. For both of these models we produced simplified versions at eight different levels of detail, roughly halving the number of edges at each level. For each simplification method, we attempted to produce simplified models with the same number of edges, which takes into account both the number of vertices and triangles. Two versions of a model with surface boundaries that have the same number of triangles may have rather large differences in the number of vertices, and vice versa. Keeping E V +T the same for all methods ensures a more fair comparison.</p><p>We simplified both models using six different algorithms, including our own, which are listed in <ref type="table">Table 1</ref>. Simplification Envelopes and JADE use vertex removal; the remaining four use edge collapse. All the methods besides our own use some form of geometric history to guide simplification, hence we use the name "Memoryless" for our method. <ref type="table">Table 1</ref> lists the performances of the different algorithms on the bunny and hand models. As can be seen, QSlim is the fastest of the methods, followed by our method. All models were simplified on a four-processor, 195 MHz R10000 Silicon Graphics Onyx 2 machine with 1 GB of main memory. <ref type="bibr" target="#b0">1</ref> Figures 6 and 7 show the mean geometric deviations between the original and the simplified models. The scale of the logarithmic y-axis is 1,000 times the ratio of the error and the bounding box diagonal. It can be seen from these graphs that the models with the best mean geometric errors were produced by our method and by Mesh Optimization. These two algorithms give nearly identical mean geometric errors. (Recall, however, that our method is orders of magnitude faster than Mesh Optimization.) There is remarkable consistency in the data points of these graphs. Each algorithm gives a nearly straight line in logedge count versus logmean error. Also, the relative behaviors of the different methods are the same for both models across all levels of detail. The consistency of these results gives us confidence in the reliability of these Metro measurements. <ref type="figure">Figures 8 and 9</ref> show maximum geometric deviations. There appears to be little consistency in the errors shown in these graphs. We can think of two possible causes for this. One is that the relationship between number of edges in a model and the maximum error a particular algorithm gives is not consistent across models and levels of detail. Another possibility is that Metro's measurement of maximum error is inaccurate.</p><p>Plates 2 through 7 show side and bottom views of the bunny models created by the six different simplification techniques. Each model has approximately 2,000 edges. All of these models appear to be reasonable low-resolution versions of the original model (Plate 1). We have found that people tend to focus their attention on facial features of the bunny such as the eyes and nose, and a chance polygon at such places can dramatically alter the casual observer's impression of these models. We note that for these and other models, the two vertex removal methods (Plates 4 and 5) seem to produce more sliver triangles than the other methods. This is probably due to the restriction of never being able to move vertex positions. Mesh Optimization (Plate 2b) appears to have distorted the surface boundaries shown in the bottom views of the bunny. Both JADE and QSlim (Plates 5b and 6b) used a large number of rather thin triangles in order to maintain the boundaries, although it is possible that parameter tuning could change this. Progressive Meshes, Simplification Envelopes, and our memoryless technique yield similar results on the boundaries. <ref type="bibr" target="#b0">1</ref> The Progressive Mesh models were generated on a one-processor, 195 MHz R10000 Silicon Graphics Octane with 256 MB of main memory. For our purposes, these machines are comparable in performance. method bunny hand Mesh Optimization <ref type="bibr" target="#b11">[12]</ref> 43m05s 10h51m45s Progressive Meshes <ref type="bibr" target="#b12">[13]</ref> 8m20s 2h36m40s Simplification Envelopes <ref type="bibr" target="#b3">[4]</ref> 9m26s 2h45m31s JADE <ref type="bibr" target="#b1">[2]</ref> 5m25s 45m31s QSlim <ref type="bibr" target="#b6">[7]</ref> 32s 3m56s Memoryless Simplification 2m29s 20m59s <ref type="table">Table 1</ref>: Wall clock simplification time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Additional Results</head><p>Plates 8 through 10 show additional results from our algorithm. Plate 8b is a 4,266 triangle version of the hand model created using our method. Plates 9a and 9b are of a turbine blade. This model consists of 1.8 million triangles, and contains very fine interior detail. Simplifying this model is challenging due to its sheer size and its topological complexity, with a large number of tiny holes and a very noisy surface. This model also has many sharp edges, and so provides a different challenge than the rounded features of the bunny and hand models. The model in Plate 9b is a 13,332 triangle version of this model that was created using our algorithm in just less than an hour. The only other algorithm that we were able to use to simplify this model was QSlim, which required nearly ten hours due to disk thrashing from lack of memory on the 1 GB machine.</p><p>Plate 10a is a model of a range scanned dragon with 870,000 triangles. The result of simplifying this model using our algorithm is shown in Plate 10b. Notice that when simplified to 10,922 triangles, the model still retains the scaly texture on the body as well as features such as the teeth and the fins on its back.</p><p>There is no "best" simplification method, and we think that there is a niche for each of the above methods. We believe our memoryless method will be useful for very large models and for applications that require good visual fidelity but not tight error bounds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">FUTURE WORK</head><p>There are several possibilities for future directions for this work. A straightforward extension to our method would be to allow any two vertices to be merged, whether or not they share a common edge. This would allow topology changes as demonstrated in <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b15">16]</ref>. Our decision procedures for edge collapse could also be used in combination with other frameworks for simplification. If, for example, maximum error is a high priority, then our edge collapse operation could be integrated with any of a number of approaches that track maximum error. This could produce a method that would retain the mean error behavior of our method but also would bound the maximum error. As another example, our method would be a memory efficient way to create the edge collapse history used in a view-dependent simplification framework <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b14">15]</ref>. Finally, we have demonstrated that volume preservation and per-triangle volume optimization is an effective measure of deviation from a surface. It is likely that a still more accurate measure of volume deviation could be performed if each triangle or vertex carried with it additional information.</p><p>Original bunny model 1a.</p><p>1b. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>The simplex operators bsc and dse.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>e 0 t 6 Figure 2 :</head><label>62</label><figDesc>The edge collapse operation. The manifold edge e is collapsed and replaced with a vertex v. Triangles t7 and t8 are removed in the process. Example tetrahedral volumes associated with triangles t0, t3, and t8 are shown.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>1 Figure 3 :</head><label>13</label><figDesc>Collapsing a boundary edge e. The sum of signed areas of the hatched triangles is zero. The arc indicates the orientation of the boundary edges f·∫Ωig. the change.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>ei 0 , and e 3 = 1 T e 1 e 3 T v + e 3 T e 3 = 0 ( 7 ) e 1 e 3 T</head><label>3133373</label><figDesc>‚àë i e 1i ‚àë i e 2i = e 1 e 2 . The solution space of this optimization problem is the intersection of two planes, defined by e v = 0</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 Figure 4 :</head><label>44</label><figDesc>The optimal vertex v expressed as the intersection of three planes; a1; b1 ensures that the volume is preserved, while a2; b2 and a3; b3 correspond to the constraints due to volume optimization.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :Figure 7 :Figure 8 :Figure 9 :</head><label>6789</label><figDesc>Mean geometric error for bunny model. Mean geometric error for hand model. Maximum geometric error for bunny model. Maximum geometric error for hand model. hand model V = 327,323; E = 981,999; T = 654,666 8b. Memoryless Simplification V = 2,123; E = 6,399; T = 4,266 Simplification time: 20m59s 9a. Original turbine blade model V = 882,954; E = 2,648,082; T = 1,765,388 9b. Memoryless Simplification V = 6,926; E = 19,998; T = 13,332 Simplification time: 58m58s 10a.Original dragon model V = 435,545; E = 1,306,959; T = 871,306 10b.Memoryless Simplification V = 5,353; E = 16,383; T = 10,922 Simplification time: 27m28s</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>This work was funded by an NSF CAREER award (CCR-9703265). We would like to thank the Stanford Computer Graphics Laboratory for providing the bunny model, the authors of the Visualization Toolkit for the turbine blade model, Hugues Hoppe for providing progressive mesh models and an implementation of "Mesh Optimization", and the people at CMU, CNUCE, and UNC for making their simplification tools available.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Error-Bounded Reduction of Triangle Meshes with Multivariate Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visual Data Exploration and Analysis III Proceedings, SPIE 2656</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="34" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Multiresolution Decimation Based on Global Error. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ciampalini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
			<publisher>Springer International</publisher>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="228" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Measuring Error on Simplified Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rocchini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Metro</surname></persName>
		</author>
		<idno>B4-01-01-96</idno>
		<editor>Istituto I. E. I.-C. N. R.</editor>
		<imprint>
			<date type="published" when="1996-01" />
			<pubPlace>Pisa, Italy</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Agar-Wal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Brooks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wright</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="119" to="128" />
		</imprint>
	</monogr>
	<note>Simplification Envelopes. Proceedings of SIGGRAPH 96</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Simplifying Polygonal Models Using Successive Mappings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olano</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos; 97 Proceedings</title>
		<imprint>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="395" to="402" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Multiresolution Analysis of Arbitrary Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuetzle</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="173" to="182" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 95</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Surface Simplification using Quadric Error Metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 97</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Smooth Hierarchical Surface Triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Gieng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename><surname>Schussman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trotts</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos; 97 Proceedings</title>
		<imprint>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="379" to="386" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Surface Simplification Inside a Tolerance Volume</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gu√©ziec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second Annual International Symposium on Medical Robotics and Computer Aided Surgery</title>
		<imprint>
			<date type="published" when="1995-11" />
			<biblScope unit="page" from="132" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A Data Reduction Scheme for Triangulated Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="197" to="214" />
			<date type="published" when="1994-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Voxel Based Object Simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wang</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos; 95 Proceedings</title>
		<imprint>
			<date type="published" when="1995-10" />
			<biblScope unit="page" from="296" to="303" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Mesh Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stuetzle</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 93</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">Progressive</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Meshes</surname></persName>
		</author>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 96</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">View-Dependent Refinement of Progressive Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="189" to="198" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 97</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">View-Dependent Simplification of Arbitrary PolygonalEnvironments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Erikson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="199" to="208" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 97</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Progressive Simplicial Complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="217" to="224" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 97</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Generalized Surface and Volume Decimation for Unstructured Tessellated Domains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">J</forename><surname>Renze</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Oliver</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VRAIS &apos; 96 Proceedings</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="111" to="121" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Full-Range Approximation of Triangulated Polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ronfard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics 96</title>
		<meeting>Eurographics 96</meeting>
		<imprint>
			<date type="published" when="1996-08" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="67" to="76" />
		</imprint>
	</monogr>
	<note>Computer Graphics Forum</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Multi-Resolution 3D Approximations for Rendering Complex Scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">;</forename><surname>Borrel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kuuni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Modeling in Computer Graphics</title>
		<imprint>
			<biblScope unit="page" from="455" to="465" />
			<date type="published" when="1993" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Decimation of Triangle Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lorensen</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 92</title>
		<meeting>SIGGRAPH 92</meeting>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A Topology Modifying Progressive Decimation Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos; 97 Proceedings</title>
		<imprint>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="205" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Re-Tiling Polygonal Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 92</title>
		<meeting>SIGGRAPH 92</meeting>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
