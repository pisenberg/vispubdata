<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Hierarchical Volume Analysis and Visualization Based on Morphological Operators</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christoph</forename><surname>Lürig</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Graphics Group</orgName>
								<orgName type="institution">Universität Erlangen-Nürnberg</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Graphics Group</orgName>
								<orgName type="institution">Universität Erlangen-Nürnberg</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Hierarchical Volume Analysis and Visualization Based on Morphological Operators</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>One common problem in the practical application of volume visualization is the proper choice of transfer functions in order to color different parts of the volume meaningfully. This interactive process can be very complicated and time consuming. An alternative to the adjustment of transfer functions is the application of segmentation algorithms. These algorithms are often dedicated to a limited range of data sets and tend to be very compute intensive. In this paper we propose a morphology based hierarchical analysis to estimate the optical properties of the volume to be rendered. This approach requires fewer parameters and incorporates also spatial information, but it is far less compute intensive than most of the segmentation methods. The hierarchical analysis is constructed in analogy to the wavelet analysis, except for the fact, that non-linear filters are used in our case. These morphological operators have a lower distortional influence on the analyzed structures than the usual linear filters. A special decomposition of the morphological operators will be discussed, that leads to an efficient implementation of this approach. This technique reduces the three dimensional analysis to a one dimensional computation, as it is done in tensor product based linear filters. The resulting decomposition may also be parallelized easily. We demonstrate the usefulness of the proposed technique by applying it to medical and technical data sets.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Direct volume rendering has become a widely applied visualization method over the last several years. An overview on volume visualization in general can be found in the book of Kaufmann <ref type="bibr" target="#b3">[4]</ref>. One of the major practical problems in volume visualization is the proper choice of transfer-functions in order to map the data to meaningful optical properties of the volume to be visualized. This is often problematic as the application of transfer-functions just maps from the defined function value to these optical properties and does not incorporate spatial information.</p><p>One alternative to the application of transfer-functions are segmentation methods, but those are usually application specific and quite time consuming. Segmentation methods are built to generate an initial symbolic description of a data set. The description may for instance be a labelization or the representation of an edge, but either way, it is always associated with a discrete decision. Many segmentation methods arise from pattern recognition problems and have been constructed to identify distinct objects. A general overview of basic segmentation methods can be found in the book by Niemann <ref type="bibr" target="#b10">[11]</ref>.</p><p>In contrast to traditional segmentation methods, the method we propose does not generate discrete decisions. This means that the Lehrstuhl für Graphische Datenverarbeitung (IMMD9), Universität Erlangen-Nürnberg, Am Weichselgarten 9, 91058 Erlangen, Germany, Email: cpluerig,ertl@informatik.uni-erlangen.de uncertainty associated with the proposed transformation is also reflected in the final visualization of the data set. The method we propose is a multi-scale method, which is based on morphological operations. This approach requires fewer parameters to be adjusted by the user and incorporates spatial information. In the final result, regions of the volume, where a defined frequency is present, are labeled with a certain color. This multi-scale method has been constructed in analogy to the wavelet transformation.</p><p>The application of scale-space theory has become very popular in the computer graphics and pattern analysis community along with the increasing application of the wavelet transformation. The wavelet transformation has not only been used for image compression as described by Stollnitz et. al. <ref type="bibr" target="#b15">[16]</ref>, but also to detect edges and to characterize signal properties as explained in the articles of Mallat et. al. <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7]</ref>. Gauch and Pizer detect certain image features by tracking signal features through scale space <ref type="bibr" target="#b0">[1]</ref>. Westermann applied the idea of the wavelet transformation in <ref type="bibr" target="#b17">[18]</ref> to the area of volume visualization. Here again, not only the possibility of data compression is important, but also the idea of edge information that is represented by the wavelet coefficients. Westermann renders the wavelet coefficients, that represent the gradient information at a certain level of detail <ref type="bibr" target="#b18">[19]</ref>. The idea to incorporate gradient information into the volume rendering process was first presented by Levoy <ref type="bibr" target="#b4">[5]</ref>. In contrast to the wavelet approaches he does not make use of multi-scale information. Muraki <ref type="bibr" target="#b8">[9]</ref> applied the wavelet transformation to volume data sets, to render the Laplacian of the Gaussian of these data sets.</p><p>The disadvantage of the wavelet transform and the other scalespace methods, that are based on linear filters, is the fact that the analyzed structures become distorted, especially on lower frequency scales. One class of special non-linear filters, that do not flatten the original contours are the morphological operations. Morphological operations compute the minimum and the maximum of pixel values within a certain scope. Before the maximum and the minimum is computed, values of the so called structuring element may be added or subtracted. A good introduction to gray-scale morphology can be found in Sternberg <ref type="bibr" target="#b14">[15]</ref>. The operation, that is applied in this work, is the opening operator, which is a combination of the erosion and dilatation operator.</p><p>The morphological operators have been mainly used in pattern recognition to perform some kind of preprocessing before segmentation methods are applied. Very often, the morphological operations are used in combination with region growing methods. This combination is applied by Höhne and Hanson <ref type="bibr" target="#b1">[2]</ref> and by Saiviroonporn et. al. <ref type="bibr" target="#b11">[12]</ref>. They both use the idea to separate distinct organs in tomographic data sets. First, a volume of interest is defined by the user, then an opening operator is applied to break down the small bridges connecting the organs, and finally, the organs themselves are identified by applying a region growing algorithm to the prepared data set. This is in contrast to the approach presented here, where we do not want to generate surface descriptions of distinct organs or other volumetric objects. Our aim is to color different regions according to the spatial frequency, that is present within them and to make use of the vagueness, that can be expressed by volume rendering. This vagueness is caused by unsharp borders, that are generated by this soft segmentation method.</p><p>Most of the work, that combines morphological operators with scale-space theory has be done in order to solve a certain class of partial differential equations. Such examples are described in van den Boomgard and Smeulders <ref type="bibr" target="#b16">[17]</ref> and in Sapiro et. al. <ref type="bibr" target="#b13">[14]</ref>. Both papers rely on erosion or dilatation operators of increasing size to generate their scale space. The diamond structuring element, that is used in our algorithm, is also introduced there. Jackway and Deriche <ref type="bibr" target="#b2">[3]</ref> use the scale-space approach to track image features across different scales, in order to see when they disappear. In contrast to these approaches, that use either erosion or dilatation operators, we use the opening operator for each scale. The resulting scale is computed by the difference of the original image and the opened one. This is done in analogy to the wavelet transformation. The opening operator suppresses certain details of the original data set. The result of the opening operator corresponds to the smoothing coefficients in wavelet decomposition. Thus the difference between the original and the opened data set corresponds to the wavelet coefficients and represents a certain frequency spectrum. The resulting coefficients are then mapped to the color emission values of the volume directly using a threshold and a constant multiplication factor.</p><p>Sakas and Walter <ref type="bibr" target="#b12">[13]</ref> have constructed a multi-resolutional analysis, that makes use of morphological operators by applying an opening operation to the low pass filtered data set. In contrast to our method that uses opening operators of different size, the multiscale aspect is provided by the usage of different frequencies for the low pass filter. The opening operator is kept the same. Also in contrast to our approach they apply binary morphology to the thresholded data set.</p><p>The major problem in the application of morphology is, that morphology is still a very time consuming operation. In order to tackle this problem, we decompose the expensive operation with a large structuring element into several smaller ones as it is explained in Zhuang and Haralick <ref type="bibr" target="#b19">[20]</ref>. They reduce the size of the structuring element, but keep its dimension. In this paper we will demonstrate a technique to decompose the multi-dimensional structuring elements into effectively one-dimensional ones using a pseudo tensor product approach. The resulting morphological operations can be efficiently parallelized using standard POSIX threads (see Nichols et. al. <ref type="bibr" target="#b9">[10]</ref>).</p><p>In the next section we describe the data analysis process in more detail. The separation and the processing of the different frequency spectra is discussed here. Special emphasis is put on the morphological operators, the scale-space aspect and the analogy to the wavelet analysis. Section 3 focusses on the efficient implementation of the morphological operators. It discusses the decomposition of the operators and the pseudo tensor product based approach including a comparison of the complexity, as well as the possibilities of parallelization. Some experimental results including medical and technical applications together with performance evaluations are presented in section 4. We conclude with some ideas on extending the method and describing possibilities for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Hierarchical Analysis</head><p>Morphological operators are a special form of non-linear filters, that have been mainly invented to separate or to combine different objects in an image with a minimum distortion of the contours. Primarily, morphological operations are defined for binary images and are then extended to gray-scale images. Consider X and Y to be two binary images. Then the erosion Z := X Y is defined as Z i;j = 1 : 8x;y : Y x;y = 1 ! X i,x;j,y = 1 0 : otherwise :</p><p>The second of the basic morphological operators is the dilation operator Z := X Y which can be considered as the dual operator to the erosion: Z i;j = 1 : 9x;y : Y x;y = 1 X i+x;j+y = 1 0 : otherwise : <ref type="bibr" target="#b1">(2)</ref> The erosion operator cuts away certain parts of the boundary of the analyzed image. The amount that is cut away is specified by the structuring element Y , which is usually quite smaller than the image. In contrast the dilation operator enlarges the analyzed image structures. These basic operators can then be combined to more complex operations. The next two operations that evolve from erosion and dilation are the opening and the closing operator. The closing operator is defined as X Y = X Y Y <ref type="bibr" target="#b2">(3)</ref> and the opening operator is defined as X Y = X Y Y :</p><formula xml:id="formula_1">(4)</formula><p>Generally speaking the opening operator tends to break up small bridges between connected image regions whereas the dilation operator fills small gaps in solid components. In this paper we apply the opening operator in order to analyze the data sets.</p><p>These operators are just defined on binary data up to now. In order to extend the definition to gray-scale data, the gray-scale data is transformed to a binary data set with an extra dimension. In this way an image is transformed to a three-dimensional data set. The axis pointing along the dimension that corresponds to the gray-scale is filled with elements up to the height corresponding to the gray level value. In order to implement gray-scale morphology, this lifting into the extra dimension can be done implicitly by appropriately defining the dilation and the erosion operators for a two-dimensional data set in gray-scale. The dilation operation Z := X Y with the structuring element Y is now defined as</p><formula xml:id="formula_2">Z i;j = m a x x;y fX i,x;j,y + Y x;y g (5)</formula><p>where Z, X and Y represent the gray-scale values of the data set. In accordance the erosion operator Z := X Y becomes Z i;j = m i n</p><p>x;y fX i+x;j+y , Y x;y g :</p><p>The opening and closing operators are defined automatically for gray-scale morphology as they are constructed again from a combination of the erosion and dilation operators. We use the opening operator for two dimensions on images and for three dimensions for volume rendering purposes. The three-dimensional definition is analogous to the two dimensional case. All these definitions can be found in Sternberg and Stanley <ref type="bibr" target="#b14">[15]</ref>. The structuring element we use exhibits a diamond structure.</p><p>Depending on the size of the element, which is indicated by max where the indices range from 0 : : : m a x , and an additional scaling factor, which is defined by f a c t o r , the structuring element Y is defined as</p><p>Yi;j = factor 2 max , j i , maxj , j j , maxj <ref type="bibr" target="#b6">(7)</ref> for the two dimensional case. As an example, the structuring element with the values factor = 1 and max = 2 is sketched in <ref type="figure" target="#fig_6">Fig. 5</ref>. The basic transformation, that is applied in the presented algorithm is the opening of the data set and the computation of the difference to the data set, that has been opened with a smaller structuring element. For the case, that this smaller element has an extent  of one (max = 0 ), which is a neutral element with respect to the opening operation, this process is illustrated for a one-dimensional gray-scale signal in <ref type="figure" target="#fig_1">Fig. 1</ref>. On the left hand side a coarse structure is shown, where in fact the boundaries are detected. The right hand side shows a smaller structure, that is eliminated in total by the opening operation with a larger structuring element, and thus the difference signal reflects the complete original signal.</p><p>In order to generate a multi-scale method, the differences are computed with structuring elements of increasing size. The resulting steps correspond to different spatial frequency spectra. This construction has been done in analogy to the wavelet transformation, where an original signal is low passed filtered several times using some smoothing function. The computed wavelet coefficients for different scales correspond to the computed difference data sets in our case. In contrast to the wavelet transformation, the increase in size of the structuring element can vary from scale to scale. The morphological operations are not injective and thus not invertible, which is a remarkable difference to the wavelet transformation. In the case of morphological operations there are also no orthogonal sub-spaces, which are constructed.</p><p>In principle, the morphological analysis could be applied for many different scales. For practical reasons, however, we restrict the algorithm to four scales resulting in three difference signals which correspond to low, middle and high spatial frequencies. For a three-dimensional scalar data set this means, that we compute three quantities which are the intensities of the respective frequency band for each voxel. In order to convey this information we use direct volume rendering which allows us to visualize structures in a volumetric data set by assigning different colors and opacities. In contrast to traditional volume ray-casting, where the RGBA values are derived directly from the scalar values of the data set by means of transfer-functions, we generate the three color components red, green and blue and the absorption coefficient directly from the computed intensities of the frequency spectra, thus incorporating also spatial information.</p><p>The overall data flow of the analysis process is shown in  The sizes of the applied structuring elements should be about the feature size, that is to be colored.</p><p>The three color components result from the differences between two different scales each. The blue component evolves from the difference of the second and the first opening operation, the green from the second and the third one and the red component from the fourth and the third opening operation. In order to generate the final color values, the resulting three components are assigned priorities among each other and they are thresholded with an indicated absolute value. The global thresholding has been proven to be useful for suppressing artifacts and noise in the data set. If the signal of a high frequency band exceeds a certain threshold, the signals for the lower frequency bands are suppressed. The priority of the higher frequency bands is reasonable, since several frequency bands quite often occur in the same position. The signals of all bands are normalized to a given value range and may be multiplied by a constant factor later on. This frequency information can also be interpreted as a characterization of the feature size. The opacity is derived from a linear combination of the three emission values for the three colors. The resulting RGBA data are finally fed to a simple volume ray-caster, that uses these values directly for the computation of the light transport equation. A general impression of this method can be seen in image 7(g). Here, the multi-scale morphological analysis of the CT-scan of a cup automatically results in a color coding of the wall thickness. Since some of the features of the proposed method are difficult to understand in the three-dimensional case, we also provide some two-dimensional synthetic examples. In these examples, the three frequency scales which are actually processed are mapped to a gray-scale value. An absorption coefficient is not computed. Since all frequency spectra are indicated by the same range of gray-scale values, we have provided an additional annotation.</p><p>A first example is shown in <ref type="figure" target="#fig_5">Fig. 3</ref> where the original image in the upper left corner consists of three squares of different size. The  The image in the lower right corner has been computed with a structuring element of the same size, but the value factor of equation (7) has been increased. This results in a hole in the middle of the big rectangle. The extra scaling factor increases the pitch of the diamond and thus reduces the area where a non-zero difference appears. Finally the rectangle in the upper right image has been generated by a filter cascade, where the first opening operator, which has been applied at level a, has used a relatively large structuring element. The result is, that this opening operation completely eliminated the small rectangle. The appearance of the other rectangles has been left nearly unchanged. This could have not been accomplished using linear filter techniques, since the small rectangle would never disappear entirely and the structures of the larger rectangles would become distorted. The approach of Sakas and Walter <ref type="bibr" target="#b12">[13]</ref> would also produce this effect, as the applied low-pass filter in combination with a small morphological operation would not be able to suppress the small rectangle.</p><p>One can also see that there is a preference of horizontal and vertical edges especially in the image in the upper right corner. The anisotropy phenomenon is due to the diamond structure of the structuring element. This anisotropy phenomenon can also be seen in <ref type="figure">Fig. 4</ref>, where a number of circles have been transformed. Especially in the representation of the lower frequency band, one can clearly see the preference for vertical and horizontal edges. The reason for choosing this structuring element will become clear in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Original Data Set</head><p>Analyzed Data Set <ref type="figure">Figure 4</ref>: Demonstration of the anisotropy property of the applied structuring kernel</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Efficient Algorithm</head><p>The general problem, that comes along with the application of morphological operations is the efficiency aspect. The computational complexity increases with the square of the size of the structuring element in the two-dimensional case and with cubic complexity in the three-dimensional case. This is especially problematic in our case, where structuring elements of sizes up to 17 are used to identify structures in the analyzed data set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Structuring Element Decomposition</head><p>The general approach to cope with the efficiency problem is to decompose a large structuring element into several smaller ones. The basic relations, that are applied here are described in Zhuang and Haralick as <ref type="bibr" target="#b19">[20]</ref> X Y Z = X Y Z <ref type="bibr" target="#b7">(8)</ref> and respectively X Y Z = X Y Z :</p><p>This means, if one can find a decomposition of a large structuring element S into several smaller ones: S = H1 H2 H3 : : : HN ; <ref type="bibr" target="#b9">(10)</ref> one can implement the morphological operation with a large structuring element by the application of several smaller ones:</p><p>X S = X H1 H2 : : : HN <ref type="bibr" target="#b10">(11)</ref> X S = X H1 H2 : : : HN : <ref type="bibr" target="#b11">(12)</ref> This technique is also applied in linear filtering, where for instance the convolution with a large Gaussian can be simulated by the iterated convolution with several small Gaussian filters. The diamond structuring element, that is used in our case can be simulated by iteratively applying the structuring element shown in <ref type="figure" target="#fig_6">Fig. 5</ref> for the two-dimensional case. When this structuring element is dilated by itself, with the values outside the shown 3x3-scheme assumed to be ,1, one gets a new pyramidal element with a new max size of four. For each further iteration, the structuring element size increases by another two elements in each dimension. The extra scaling factor factor can also be applied to the small structuring elements and it is propagated through the iteration process. For a structuring element to keep its shape when being self-dilated iteratively a necessary condition is, that it is convex and symmetrical Yai; j; k = factor max , j i , maxj : j = 0 k = 0 ,1 : otherwise</p><p>The structuring elements Y b and Yc are defined analogously for the y-and the z-axis, which results in a permutation of the i; j; k indices. These elements have entries of ,1 at most positions except for one single string parallel to one of the coordinate axis. The final structuring element can be composed of the three structuring elements:</p><formula xml:id="formula_5">Y = Ya Y b Yc<label>(13)</label></formula><p>The structuring elements Ya, Y b and Yc are still of the same size as the original element Y . But these atomic elements can be computed very efficiently, as all positions in the structuring element with an entry of ,1 can be neglected during the computation of the morphological operation, because the generation of the minimum or the maximum would definitely eliminate the contribution of these elements. This results in a pure one-dimensional analysis of the signal in one of the three dimensions. This approach is similar to the tensor product decomposition applied in the field of linear filtering. In the case of tensor product wavelets, one also gets the anisotropy property, that results from the application of the structuring element Y . If the size of the structuring element is again max = 2 n + 1 the computational complexity now results in 6n + 3 , since the application of a one-dimensional structuring element has to be performed three times . The elements Ya, Y b and Yc could of course be decomposed again, but this is not reasonable in the one-dimensional case. The application of a one-dimensional structuring element with the size of 2n+ 1 results in 2n+ 1 operations. If this element would be decomposed into several smaller ones with an extent of three, the computational complexity would be 3n operations.</p><p>In the final result the opening of the data set is performed as follows:</p><formula xml:id="formula_6">X Y = X Ya Y b Yc Yc Y b Ya (14)</formula><p>As these operations work on single lines, that are parallel to the x-, y-, or z-direction, a rearrangement of the data set is done between most of the morphological operations. The idea is to have a set of vectors, that may be processed independently from each other. In the beginning of the process a bundle of vectors, that contain x-axis aligned data, are eroded and the new y-axis aligned vectors are constructed. These are eroded again and then transfered to zaxis aligned data. After an erosion of these data vectors, the inverse process is done with the dilation. This overall process is sketched in figure 6.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Parallelization</head><p>The overall structure can be easily parallelized. We have done this on a shared memory architecture using the POSIX thread standard. The first possibility for parallelization can be derived from <ref type="figure" target="#fig_2">Fig. 2</ref>. After reading the data set four threads are spawned to perform the opening operations for the four requested levels. For further computations these threads are joined afterwards. The following computational steps have not been parallelized, as the computational time required there is negligible in relation to the time needed for the opening operations. In consequence, the spawning of the threads probably would be more expensive than the gain in computation time.</p><p>These threads may again spawn some child threads. The erosion and dilatation operations, that are performed on a string can be parallelized by assigning a bundle of strings to each thread, which are then processed independently. In order to finish one of the morphological operations, all sub-threads have to be joined again. The number of sub-threads to be spawned can be specified by the user.</p><p>If the analyzed volume has a size of 256 3 voxels, this would mean, that a maximum of 4 256 2 threads could be computing in parallel at one time.</p><p>Although this program has been implemented on a shared memory architecture it would also be suitable for a message passing mechanism, since the data locality of this problem is very high. Once the data set is copied, the different opening operators do not need to exchange data until they are finished and the operators working on the strings only need the data, that is coded into these strings.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results</head><p>In order to show the usefulness of this method we have applied the morphological scale space analysis to four data sets. All data sets are CT scans. The first one is a scan of a cup, the second one represents a human head, the third one represents an engine block and finally the last one a simulated CT scan of a lung.</p><p>The cup data set (size 512 512 50 voxels) is presented in order to illustrate the principal properties of the described algorithm. The main feature of the cup, that is used for the illustration of our algorithm, is the thickness of the wall. The thickness of the material increases from top to bottom and again becomes smaller in the very proximity of the bottom. In order to visualize this feature the necessary values have been adjusted as described in the first column of table 1.</p><p>The result of this analysis in the color plate. The images show the cup with all color components in image 7(g), the images 7(h) and 7(i) show the middle and the low frequency part of the volume separately. The image 7(h) with the green component illustrates the thickness of the cup walls. The color intensity is high at the bottom plate and at the upper parts of the walls, while the middle part is quite dark. This part of the cup is characterized by a thicker wall, as can be seen on image 7(i), which reflects the lowest frequency part. This image exhibits the most intense color values, where the green cup has its minimal values. In image 7(g), which contains all frequencies, one can clearly see this change in color. The noise As a medical application we have investigated a CT scan of a head, that has a size of 256 256 113 voxels. The morphological analysis has been applied here in order to increase the spatial impression of the volume rendering of the data set. The necessary parameters are listed in the second column of table 1. The head is shown in image 7(e). The plate behind the head is the pad, which supported the patient. The red part of the volume, that surrounds the head, again characterizes the low frequency structures of the volume. The green structures approximate the surface of the head in a more accurate manner. The anisotropy property again manifests itself at the low frequency structure, as the red region at the top of the head appears to be flattened. The combination of the different layers, that describe the head surface provide this enhanced spatial impression. In the front part of the head, that contains the mouth and the nose regions, many small details are reflected as high frequency blue structures, in contrast to the more homogeneous brain, that is colored in solid green. For comparison, a traditional volume rendering of the data set is displayed in image 7(f). This rendering provides more detailed information about the inner structure of the head, but the spatial impression of the overall head is quite low.  <ref type="table">Table 2</ref>: CPU time for the analysis of the data sets The image 7(a) shows the motor block rendered with all colors, while the images 7(b) and 7(c) separate the components of low frequency and middle frequency details. Two animations of the engine block are shown in the video. The first one rotates the engine block with all color components while the second one additionally cycles through the components to provide a better impression of the different detail levels.</p><p>The cylinders of the engine are colored in red as they are a very coarse structure in the engine block. The injection tubes consist of very thin metal parts, that are represented on the high frequency and fine granular structure level. This can be especially seen in image 7(b), where the injection tube is a very articulate feature, but it is nearly disappeared in the middle frequency scale in image 7(c). Most of the supporting structures of the motor block are represented at the middle level of detail, which is rendered in green. These structures can not be separated by a traditional volume rendering method, as they consist of nearly the same value. This type of data set seems to be the most suitable for our data analysis method.</p><p>The volume rendering of the simulated CT scan of the lung is shown in image 7(d). This data set has an extension of 256255175 voxels. In this image the thickness of the airtubes is effectively visualized. What one can see from this artificial data set is that wall thickness of the main tube appears to be very small, where the walls of the first branch seems to be very thick. For the rendering of this image the priorization order of the three frequency spetra has been inversed. In this case the lower frequencies suppress the higher ones. All computations have been performed on a SGI Onyx with four R10000 processors running at 196 MHz. The required computational times for the data sets are listed in table 2. This time is the wall clock time that elapsed from the beginning of the data analysis until the RGBA values for the complete volume have been computed. The required CPU time increases linearly with the number of voxels to be processed, as could be expected from the complexity estimation. For standard data sets the required CPU time for the computation is below one and half minute and even for the cup, which is quite a large volumetric data set, it is below three minutes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions</head><p>Constructing a scale-space method in analogy to the wavelet transformation using morphological operators has proven to be a valuable approach in volume visualization. The different results of the morphological analysis indicate boundary structures and they allow to distinguish objects of different characteristic sizes. In contrast to the application of traditional transfer-functions our method is easier to calibrate and it also incorporates spatial information. On the other hand, it is more application independent and more efficient than most of the special-purpose segmentation techniques known from pattern recognition. The separation of dimensions allows an efficient parallelization with a potentially fine granularity.</p><p>For future work we are thinking about incorporating aspects of region growing in order to generate surface models, that may be combined with the volume representation. The results of the morphological operators may also be used to provide the external forces for a deformable surface visualization technique. The different frequency levels found during the morphological analysis may guide the conversion process of the surface on different levels of resolution. There might also be the possibility to generate the optical properties of the volume by the morphological analysis in a more indirect way. This could be done by the selection of some predefined transferfunctions depending on the result of the morphological analysis.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>The result of the analysis procedure</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Four opening operations with structuring elements of increasing</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>The overall data flow of the morphological analyzer size are performed all together.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 :</head><label>3</label><figDesc>Two-dimensional example for the procedure image shown in the lower left corner represents an analyzed data set, where no initial opening has been performed. This means that the structuring element used at level a has an extension of one. The big square consists of three regions of different sizes. The central region is due to the lowest frequency part. Towards the outside of the rectangles, the regions that correspond to the middle and the high frequency band can be found. The regions are separated quite strictly, as the lower frequency bands are suppressed, if there is a signal with a minimum strength at one of the higher frequency bands.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>The primitive structuring element for two dimensions with respect to all coordinate axes. These properties also hold for the diamond structuring element, which is applied here.If we assume the extension of a three-dimensional structuring element to be max := 2n + 1 , then the number of additions and comparisons to be performed for the computation of the value for one voxel sum up to 8n 3 + 1 2 n 2 + 6 n + 1 . For the iterative application of the smaller structuring element the overall complexity reduces down to 27n. The iterative application of structuring elements results in piecewise linear structuring elements in consequence. Using this kind of small sized atomic structuring element, we get the already discussed diamond structure.In order to simulate the structuring element indicated in equation 7, we propose a decomposition into three elements for the threedimensional case. The first of these structuring elements is defined as follows:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Parameters used for the data sets that surrounds the cup is part of the data set and caused by the CT scanner.</figDesc><table><row><cell>Erosion along X−axis</cell><cell cols="3">Transcription</cell><cell cols="2">Erosion along Y−axis</cell><cell>Transcription</cell><cell>Erosion along Z−axis</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>Dilation along Z−axis</cell></row><row><cell></cell><cell cols="3">Dilation along X−axis</cell><cell>Transcription</cell><cell>Dilation along Y−axis</cell><cell>Transcription</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>;</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="3">Figure 6: Data flow for one opening process</cell></row><row><cell>Parameter Name</cell><cell cols="4">Cup Head Engine Lung</cell></row><row><cell>Element Size Level A</cell><cell>1</cell><cell>3</cell><cell>3</cell><cell>1</cell></row><row><cell>Element Size Level B</cell><cell>3</cell><cell>5</cell><cell>5</cell><cell>1</cell></row><row><cell>Element Size Level C</cell><cell>9</cell><cell>11</cell><cell>11</cell><cell>1</cell></row><row><cell>Element Size Level D</cell><cell>15</cell><cell>17</cell><cell>17</cell><cell>4</cell></row><row><cell>Red Threshold</cell><cell>0</cell><cell>30</cell><cell>0</cell><cell>0</cell></row><row><cell>Green Threshold</cell><cell cols="2">100 10</cell><cell>0</cell><cell>0</cell></row><row><cell>Blue Threshold</cell><cell>30</cell><cell>0</cell><cell>0</cell><cell>5</cell></row><row><cell>Red Scaling</cell><cell>0.7</cell><cell>1</cell><cell>3.5</cell><cell>10</cell></row><row><cell>Green Scaling</cell><cell>0.5</cell><cell>1.5</cell><cell>0.6</cell><cell>8</cell></row><row><cell>Blue Scaling</cell><cell>0.7</cell><cell>0.5</cell><cell>0.5</cell><cell>2</cell></row><row><cell>Red Absorption Influence</cell><cell>0.1</cell><cell>0.8</cell><cell>0.3</cell><cell>0.2</cell></row><row><cell cols="2">Green Absorption Influence 0.1</cell><cell>0.6</cell><cell>0.3</cell><cell>0.2</cell></row><row><cell>Blue Absorption Influence</cell><cell>0.1</cell><cell>0.3</cell><cell>0.05</cell><cell>0.1</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>The third application of the morphological analysis is a scan of an engine block. Its consists of 256 256 110 voxels and the applied parameters are listed in the third column of table 1. This engine block is characterized by various parts of different sizes. Our method automatically colors those parts of this engine block differently and thus reveals information about the component structure.</figDesc><table><row><cell>Data Set Resolution Cup 512 512 50 Head 256 256 113 Lung 256 256 175 Engine 256 256 110</cell><cell>Computational Time 158 sec 80 sec 122 sec 81 sec</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>Many thanks to Markus Blank of the institute for medical physics of the university Erlangen-Nürnberg for providing the artificial CT scan of the lung. Finally we would like to thank Gerold Herold, who provided the cup data set and Rüdiger Westermann, who generated the classical volume rendering image of the CT scan of the head.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Multiresolution Analysis of Ridges and Valleys in Grey-Scale Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gauch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Pizer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="635" to="646" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interactive 3D Segmenation of MRI and CT Volumes using Morphological Operations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-H</forename><surname>Hoehne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">A</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Assisted Tomography</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="285" to="294" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Scale-Space Properties of the Multiscale Morphological Dilation-Erosion. IEEE Transactions of Pattern Analysis and Machine Intelligence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Jackway</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Deriche</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="38" to="51" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Introduction to Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>IEEE Computer Society Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Display of Surfaces from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Singularity Detection and Processing with Wavelets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mallat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">L</forename><surname>Hwang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991-03" />
		</imprint>
		<respStmt>
			<orgName>Courant Institute of Mathematical Sciences New York University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Characterization of Signals from Multiscale Edges</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mallat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="710" to="732" />
			<date type="published" when="1992-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Wavelet transform maxima and multiscale edges</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mallat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zhong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wavelets and their Applications</title>
		<meeting><address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<publisher>Jones and Bartlett Publication</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Multiscale 3D Edge Representation of Volume Data by a DOG wavelet</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Muraki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Symposium on Volume-Visualization &apos;94</title>
		<meeting>Symposium on Volume-Visualization &apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Pthreads programming. O&apos;Reilly and Associates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Nichols</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Buttlar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Farrell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Niemann</surname></persName>
		</author>
		<title level="m">Pattern Analysis and Understanding</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Saiviroonporn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Robatino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zahajszky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kikinis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Jolesz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Real Time Interactive 3D-Segmentation</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Extracting Surfaces from Fuzzy 3D-Ultrasound Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georgios</forename><surname>Sakas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Walter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics (Siggraph)</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="465" to="474" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Implementing Continious-Scale Morphology via Curve Evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sapiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kimmel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shaked</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Kimia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bruckstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="1363" to="1372" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Grayscale Morphology. Computer Vision, Graphics and Image Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sternberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="333" to="355" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Wavelets for computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Stollnitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">D</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Salesin</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Morgan Kaufmann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Den Boomgard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Smeulders</surname></persName>
		</author>
		<title level="m">The Morphological Structure of Images: The Differential Equations of Morphological Scale-Space. IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<date type="published" when="1994-11" />
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="1101" to="1113" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Multiresolution Framework for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Symposium on Volume-Visualization &quot;94</title>
		<meeting>Symposium on Volume-Visualization &quot;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="51" to="57" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A Multiscale Approach to Integrated Volume Segmentation and Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum (Eurographics&apos;97 Conference Proceedings), number 3</title>
		<editor>D. Fellner and L. Szirmay-Kalos</editor>
		<imprint>
			<publisher>Blackwell</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="117" to="129" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Morphological Structuring Element Decomposition. Computer Vision, Graphics and Image Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zhuang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haralick</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<biblScope unit="page" from="370" to="382" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
