<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Size Preserving Pattern Mapping</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yair</forename><surname>Kurzion</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department Of Computer And Information Science</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Torsten</forename><surname>MÃ¶ller</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department Of Computer And Information Science</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="laboratory">The Advanced Computing Center For The Arts And Design</orgName>
								<orgName type="institution">The Ohio State University</orgName>
								<address>
									<settlement>Columbus</settlement>
									<region>Ohio</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roni</forename><surname>Yagel</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department Of Computer And Information Science</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Size Preserving Pattern Mapping</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:38+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We introduce a new approach for mapping texture on volumetric iso-surfaces and parametric surfaces. Our approach maps 2D images on surfaces while maintaining continuity and preserving the size of the mapped images on the models. Our approach is fully automatic. It eliminates the need for manual mapping of texture maps. We use the curvature of a surface at a point in order to continuously vary the scale of the mapped image. This makes our approach dependent only on local attributes of a point (position, normal and its derivatives) and independent of the global shape and topology of an object. Our method can map high resolution images on low resolution volumes, hence enhancing the visual appearance of rendered volume data. We describe a general framework useful for all surface types that have a C 1 continuous normal. We demonstrate the new method for painting volume data and for mapping cavities on volume data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Texture maps <ref type="bibr" target="#b6">[7]</ref> are essential for enhancing the appearance of a model. They increase the detail of rendered models without increasing their geometric complexity. We often wish to paint a model with some generic texture. For example, in medical models, we wish to add generic skin texture to skin surfaces, and vein like formations inside walls of body cavities. We call these generic textures patterns. We wish to make these patterns continuous across the entire surface. We also wish to map patterns on a surface at a constant density the way they appear in nature. Adding such patterns to a model is traditionally a time consuming process. A modeler has to specify the mapping of a 2D pattern on every area of the surface, the smaller the area -the less size distortion. In this paper we present a method for mapping patterns on volumetric isosurfaces and parametric surfaces with no user intervention. Our method takes a pattern image and a desired density and paints a model with the given pattern at the given density. We use the surface curvature at a point in order to vary the density of a projected pattern image. We use the mapped patterns to modify the color of surface points, thus painting the surface. We also use these mapped patterns to modify the intensity of volume sample points, thus adding cavities to a volume. Our method provides a general mapping scheme for all surfaces with a C 1 continuous normal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Background</head><p>Adding texture on surfaces without distortion received a lot of attention in previous works. Previous methods fall into two categories: Direct painting methods <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b9">10]</ref>, where a user manually paints the objects, and chart-based methods <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref> where a user sub-divides the surface into sub-patches, parametrizes each sub-patch and then picks a mapping for each sub-patch. In both categories, a user has to manually specify the extent and contents of texture maps for each portion of the object. The amount of work required depends on the complexity of the model. Bier and Sloan <ref type="bibr" target="#b3">[4]</ref> presented a two step method for mapping texture over surfaces. They map the texture on a simple surface first, and then project the texture from the simple surface onto the target model. Their method enables decreasing the amount of size distortion. However, it does not guarantee size preservation, and it is useful only if the intermediate surface is very simple. Environment mapping <ref type="bibr" target="#b5">[6]</ref> was introduced as a means for generating a cheap ray-tracing effect. It uses the surface normal at each point in order to lookup its color in a 2D texture map. For each point, the environment mapping algorithm reflects the viewing direction about the surface normal. It then intersects the reflected viewing direction with a box bounding the scene. Each face of the bounding box is painted by some texture map. The final color is given by the texture map color at the point of intersection between the reflected viewing vector and the box face. Clearly, for smooth surfaces, environment mapping generates a continuous mapping of the texture map onto the surface. However, it is view dependent, and it does not preserve the density of the texture map across the surface. The higher the curvature of the surface, the higher the density of the texture image on the surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Our Method</head><p>One can easily eliminate the view dependency with a slight modification of the environment mapping technique. Instead of reflecting the viewing vector by the surface normal, we use the surface normal itself to map points onto the bounding box. At each point we intersect the surface normal with a bounding box, and use the intersection point to map into the texture image. We now have a very simple view independent scheme for continuous mapping of images onto smooth surfaces. This scheme is identical to the twopart mapping method <ref type="bibr" target="#b3">[4]</ref> when picking a box as the intermediate surface, and using the target surface normal for mapping texture. <ref type="figure" target="#fig_0">Figure 1</ref> shows two areas on a surface. The area marked A has zero curvature and so we map a wall segment of size P 0 on a segment surface of equal size C 0 . The area marked B has high curvature, therefore we map a wall segment of size P 1 on a much smaller surface segment size C 1 . If we paint the walls with a pattern of constant density then the projection on area B will be a lot denser than the projection on area A. The idea behind our method is that instead of maintaining a constant image on the bounding box, we continuously modify the density of the image in order to match the surface curvature. If we want to paint the surface with pattern density D, we can express D wall , the density on the wall that would generate a density D on the surface (C i , P i for i=0,1 as in <ref type="figure" target="#fig_0">Figure 1</ref>), as:</p><p>(1) D wall can be any real number, so we have to develop a way to map images at any density on a given wall. Since D wall is not necessarily an integer, the obvious mapping of D wall instances side by side along the wall doesn't work -It generates discontinuities</p><formula xml:id="formula_0">D wall D C i P i ----- =</formula><p>on the edges and corners of the box. Our solution is to use the idea of homotopy in order to generate a bounding box image with the correct density. We vary the images on the bounding box in a continuous manner, thus making the final mapping continuous and size-preserving.</p><p>The next section introduces homotopy, and in particular, the two homotopies we use. Section 3 describes the simple case: pattern mapping on parametric surfaces, and Section 4 describes how to apply pattern maps Volume data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">HOMOTOPY</head><p>We use homotopy <ref type="bibr" target="#b4">[5]</ref> in order to generate a continuous range of pattern images at any given pattern density. A path is a function from [0,1] to some space W. Two paths p 0 (s), p 1 (s) are homotopic if there exists a continuous function:</p><formula xml:id="formula_1">(2)</formula><p>where W is some space, and we have <ref type="bibr" target="#b2">(3)</ref> In our discussion, W is one axis of the 2D pattern image, and x 0 ,x 1 â{0,1} two endpoints of W. Without loss of generality, we assume that all our paths are along the X axis of a pattern image. A path is a traversal of the X axis of the image for a constant Y value. We map paths onto an axis of the bounding box wall. We express paths in image space by describing their behavior along an axis, using the parametrization [0,1]x[0,1] for the image. For example, the path (0, 0.75, 0) travels from the left edge of the pattern image (0), three quarters of the way to the right edge (0.75), and back to the left edge (0), all for a constant Y value. <ref type="figure" target="#fig_2">Figure 2</ref> shows three examples of mapping paths on bounding box walls. The function h is a homotopy function. It produces a continuous transitions between two paths. In the rest of this paper we use two specific homotopies. </p><formula xml:id="formula_2">C 1 C 0 B A h: 0 1 [ , ] 0 1 [ , ] Ã W â h s 0 , ( ) p 0 s ( ), h s 1 , ( ) p 1 s ( ) , h 1 t , ( ) = x 1 , h 0 t , ( )</formula><p>x 0 for all t.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>= = =</head><p>Part (a) and (b) show how to continuously deform the path (0,1,0) into a stationary path at 0. We achieve this continuous transition by gradually taking paths from 0 to some t and back to 0, for values of t changing between 0 and 1. When t = 0, we are at the bottom of the homotopy. When t = 1, we are at the top. Part  <ref type="figure" target="#fig_3">, 3d</ref> show a homotopy between the path (0,1) and the path (0,1,0,1). We achieve this continuous transition by taking paths from 0 to 1, then back to some s, and back to 1. For s= 1, we have the bottom portion of the homotopy. For s= 0, we have its top. We call this homotopy 1:3. In order to use similar notation for both cases, we use t = (1-s). Now in both cases t=0 represents the bottom and t=1 the top. <ref type="figure" target="#fig_2">Figure 2d</ref> shows a mapping of a typical intermediate path (for t = 0.6) between (0,1,0,1) and (0,1) on a wall.</p><p>Since we map each path on a straight wall ( <ref type="figure" target="#fig_2">Figure 2</ref>) we can count the number of instances of a pattern image mapped on a wall for a given t value. We preserve a constant mapping density across the wall: For the 0:2 homotopy, at a given t we have 2t instances of the full trip from left to right, at constant density. For the 1:3 homotopy we have liberty to choose the density of the transition of s1 and s2 ( <ref type="figure" target="#fig_3">Figure 3d</ref>). We pick them to be the same as the density of s0. Therefore, for a given t, we have</p><p>instances. We now explain how these two homotopies help us pick different images for the walls of the environment mapping bounding box. When evaluating the pattern mapping of each point, we first compute the ratio between the size of a step on the surface to a corresponding step on the bounding box wall (In <ref type="figure" target="#fig_0">Figure 1</ref> this ratio is P 1 /C 1 or P 0 /C 0 ). We calculate this ratio for the two major axes of the wall independently. From this ratio R, and the desired mapping density D, we calculate D wall (Equation 1). Given the size of the bounding box axis F (see <ref type="figure" target="#fig_0">Figure 1</ref>) we calculate S: how many instances of the pattern we should fit onto the bounding box wall axis in order to achieve the desired density D on the surface: It is easy to match an integer number of instances of a pattern image on the bounding box wall. We match 0, 2, 6, 18,..., 2 * 3 n ,... instances directly. For non-integer S values, we use the homotopies above in order to obtain a transition between two neighboring integer values. We use the 0:2 homotopy for values between 0 and 2, and the 1:3 homotopy for all other values. <ref type="figure" target="#fig_4">Figure  4a</ref> shows how we use the two homotopies for generating any number of instances of a pattern image axis along a bounding box wall. For example, matching 8.5 instances of the pattern map on a bounding box wall X axis falls into the homotopy between 6 and 18 instances. In <ref type="figure" target="#fig_4">Figure 4a</ref> this falls in level 2 so we'll be using a 1:3 homotopy. If the wall X axis spans from (-100) to 100, and our normal hit the wall at 50, then we lookup the value in level 2, at 0.75 away from the left end. Level 2 contains six (1:3) homotopies. Our point falls into the fifth one (0.75 * 6 = 4.5), at u = 0.5 on the homotopy horizontal axis. We now convert the overall number of instances 8.5 to the number of instances for this homotopy S = (8.5 / 6) = 1.41. Each of the six homotopies in level 2 generates 1.41 instances; total = 8.5 instances. Using Equation 4 we get t = 0.44. We pick the final index into the pattern image X axis to be the value at (u, t) = (0.5, 0.44) in <ref type="figure" target="#fig_3">Figure 3d</ref>. We calculate the Y index similarly and use the two indices to calculate the point color. <ref type="figure" target="#fig_4">Figure 4b</ref> shows the behavior of this homotopy mapping in correct scale. The vertical axis holds the overall number of instances (range 0 to 18). The horizontal axis represents one axis of the pattern image. We encode the final result of the homotopy by grey levels. White represents 1 and black represents 0. We observe that linearly modifying the value of t does not linearly modify the resulting number of instances. From Equation 4 we get the non- All Zero 0 (degenerate path)</p><formula xml:id="formula_4">[0,t] [t,0] [1,s] [s,1] [0,1] (1-s) S FD Wall F DC i P i ---------- F D R ---- = = =</formula><p>linearity and compute t as a function of S. We observe the following points in <ref type="figure" target="#fig_4">Figure 4</ref>:</p><p>â¢ When S=0 (at the bottom edge of the graph in <ref type="figure" target="#fig_4">Figure 4b</ref>), we use only the zero point of the axis. This means that if a point requires zero instances of the image along some axis, we will use the pattern zero to paint this point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>At the edges of the wall axis (the left and right edges of the graph), we have a constant (zero) parameter value. This is important for continuity between neighboring walls and corners of the bounding box. All normals hitting an edge connecting two bounding box walls always use zero for the axis perpendicular to the edge.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>In the graph we use mirrored and un-mirrored instances of the image interchangeably. We can see the changing when traveling across the graph for a fixed S value. Starting from the left, we begin with 0 (black), increase to 1 (white), and decrease back to zero repeating a few times. On the X axis of the pattern image, this sequence corresponds to scanning the image from left to right and the back to the left many times.</p><p>What remains to show is how to compute the ratio R for each one of the pattern image axes. We shall describe this computation for BÃ©zier patches, and for volume data. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PATTERN MAPPING ON SURFACES</head><p>BÃ©zier surfaces have a simple analytical expression for the surface normal. We use them as an introduction to the volume case. Let S(u,v) be a BÃ©zier type surface defined by x = X(u, v), y = Y(u,v), z= Z(u,v). The surface normal is given by <ref type="bibr" target="#b5">(6)</ref> Without loss of generality, assume that this normal hits the top wall of the bounding box and therefore we pick the surface point color from the image on this wall. The computation for other walls of the bounding box is similar. Assume this wall has plane equation z = maxZ. We express the point where a normal hits this plane as:</p><p>At each point (u 0 , v 0 ) we now look for two directions D x , D y in the (u,v) parameter space. For each direction we express</p><p>We pick D x and D y s.t. for D x, the derivative <ref type="bibr" target="#b8">(9)</ref> and for D y , the derivative</p><p>We now compute the hit ratios along u and v as:</p><p>R x and R y are the ratios we need for the homotopy calculations. From Equation 5 we get the number of instances of the pattern image on each one of the two wall axes (in this case X and Y). Plugging these numbers into the homotopy map we get a final parameters  <ref type="bibr">(u,v)</ref>. We use a linear approximation to calculate them. We start by calculating Hit u and Hit v , the derivatives of the plane hit point along the major axes of the BÃ©zier surface. These generate two vectors in the plane z=maxZ. We express (1, 0, 0) and (0, 1, 0) as linear combinations of these vectors, and use the resulting weights to calculate a scaled version of D x , D y in the (u,v) parameter space. The scaling does not matter because we only need the directions of D x and D y . <ref type="figure" target="#fig_8">Figure 7</ref> shows examples of mapping patterns on a bicubic BÃ©zier patch. Note that since we use only a single image for all six walls of the bounding box, we must make sure that the bottom and left edges of the image can connect to each other and generate a continuous mosaic. The homotopy will always map bounding box edges to either the bottom or the left edges of the pattern image. The only case where this process fails is when the derivative of Hit is zero. In geometric terms this means that the radius curvature at the given point is exactly the distance to the bounding box. We pick a threshold Îµ &gt; 0 and clamp the derivative of Hit to this Îµ value. This means that we ignore very slight curvatures. We consider all the surfaces with Hit &lt; Îµ to be completely planar. This causes a very slight inaccuracy in the preservation of pattern sizes</p><formula xml:id="formula_9">N u v , ( ) S u u v , ( ) S v u v , ( ) Ã N x N y N z , , ( ) = = Hit u v , ( ) S u v , ( ) maxZ Z u v , ( ) - N z ------------------------------------N u v , ( ) â + = u x v x ï£­ ï£¸ ï£« ï£¶ u 0 v 0 ï£­ ï£¸ ï£« ï£¶ tD x + = , u y v y ï£­ ï£¸ ï£« ï£¶ u 0 v 0 ï£­ ï£¸ ï£« ï£¶ sD y + = Hit t u x v x , ( ) H x 0 0 , , ( ) = Hit s u y v y , ( ) 0 H y 0 , , ( ) = R x H x S t u x v x , ( ) -------------------------- = R y , H y S s u y v y , ( ) -------------------------- =</formula><p>across surfaces. The larger the bounding box, and the smaller Îµ, the more accurately we preserve pattern sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">PATTERN MAPPING ON VOLUMES</head><p>Our measure of the ratios R x , R y (Equation 11) depends on the derivative of Hit, which depends on the normal of the surface. In order to avoid discontinuities in our pattern mapping approach, we need at least a C 2 continuous surface, which leads to C 1 continuous normals, and a C 0 continuous ratio R.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">A C 2 Continuous Reconstruction Filter</head><p>Volume data sets, are only given as a discrete function. In order to be able to query this function at an arbitrary point, we need to reconstruct a continuous function from this discrete data set. This can be achieved by computing a weighted sum of the sample points. The accuracy and smoothness of the reconstructed continuous function greatly depends on the filter weights, that we use. Besides accuracy and smoothness, we desire efficient filters, in order to keep the computational expense to a minimum. Once we have reconstructed a continuous function from the sampled data, we can find the analytical gradient by simply computing the derivative of the filter weights and applying those new weights for a new reconstruction process as suggested by Bentum et al. <ref type="bibr" target="#b2">[3]</ref> Hence, in order to guarantee C 1 continuous normals, we require at least a C 2 continuous filter kernel. The most obvious and most commonly used choices such as nearest neighbor interpolation or linear interpolation constitute only C 0 continuity. Keys <ref type="bibr" target="#b8">[9]</ref> suggested Cardinal splines for the interpolation, which include filters of up to a 3EF accuracy, using the notation suggested by MÃ¶ller et al. <ref type="bibr" target="#b12">[13]</ref>. Unfortunately we found that these filters are not C 2 continuous. Mitchell and Netravali <ref type="bibr" target="#b11">[12]</ref> introduced a larger group of cubic filters, also known as the BC-splines. In order to find C 2 continuous filters in this group, we required the basis functions of their first and second derivative to match at their endpoints accordingly. These restrictions forced the parameters to be B=1 and C=0. Given four samples S 0 , S 1 , S 2 and S 3 , this resulted in the following C 2 continuous filter: For a point between S 1 and S 2 , Ï away from S 1 ,</p><p>The normal is given as the derivative of Equation 12 (gradient vector), hence the normal is C 1 continuous as required: <ref type="bibr" target="#b12">(13)</ref> Utilizing the analysis given in <ref type="bibr" target="#b12">[13]</ref> we have found the accuracy of the reconstruction filter to be T 2 /6, where T is the raster size of the volume, which is a 2EF filter. The error of the derivative filter is</p><formula xml:id="formula_11">Intensity Ï ( ) S 0 Ï 3 6 ----- - Ï 2 2 ----- Ï 2 --- 1 6 --- + - + ï£­ ï£¸ ï£« ï£¶ S 1 Ï 3 2 -----Ï 2 2 3 --- + - ï£­ ï£¸ ï£« ï£¶ S 2 Ï 3 2 ----- - Ï 2 2 ----- Ï 2 --- 1 6 --- + + + ï£­ ï£¸ ï£« ï£¶ S 3 Ï 3 6 ----- ï£­ ï£¸ ï£« ï£¶ + + + = Deriv Ï ( ) S 0 Ï 2 2 ----- - Ï 1 2 --- - + ï£­ ï£¸ ï£« ï£¶ S 1 3Ï 2 2 --------2Ï - ï£­ ï£¸ ï£« ï£¶ S 2 3Ï 2 2 -------- - Ï 1 2 --- + + ï£­ ï£¸ ï£« ï£¶ S 3 Ï 2 2 ----- ï£­ ï£¸ ï£« ï£¶ + + + =</formula><p>also T 2 /6, again a 2EF filter. We found these error bounds sufficient for our application. MÃ¶ller et al <ref type="bibr" target="#b13">[14]</ref> provide further discussion of these filters. Given a 4x4x4 subset of a volume, we evaluate the normals at a point <ref type="bibr">(u, v, w)</ref> anywhere in the center 2x2x2 grid as follows: We first use the Intensity filter to reconstruct four values in each major direction X, Y and Z. We then use the Deriv filter to calculate each component of the normal out of its corresponding four reconstructed values.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Using The C 1 Normal For Pattern Mapping</head><p>Now that we have a C 1 continuous <ref type="figure">normal N(x, y, z)</ref>, we can construct the pattern maps: Given a 4x4x4 cube of intensity values, we express the position inside the cube by <ref type="bibr" target="#b13">(14)</ref> Where u, v, and w are in the unit interval. We use the normal from sub-section 4.1:</p><p>Without loss of generality, we assume that this normal hits the top wall of the bounding box and therefore we pick its color from the image on this wall. Assume this wall has plane equation z = maxZ. We express the point where a normal hits this plane as:</p><p>Similar to Equations 8-11 we calculate the ratios along the two major axes of the wall. Since we have no parametrization of the surface, we use two arbitrary directions in the normal plane in order to calculate the directions D x , D y . <ref type="figure" target="#fig_9">Figure 8</ref> shows how mapping a high-resolution (32x32) pattern on a low resolution (4x4x4) volume can enhance it's visual appearance. <ref type="figure" target="#fig_10">Figure 9</ref> shows the application of pattern maps on volume data. In order to eliminate volume noise we evaluate the pattern mapping variables out of a blurred and shrunk down version of the drawn volume.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Cavity Mapping</head><p>Pederson <ref type="bibr" target="#b14">[15]</ref> presented a method for generating displacements along flow fields. We observe that the gradient vector direction in a volume is a flow field. Under the C 1 continuous normal filter we can use a 2D intensity image to generate a pattern of cavities in a model. These cavities can only extend through the portion of the volume where intensity varies from zero to one. We map a 2D image as before using the Hit derivative ratios. This time, we zero out the contents of a voxel if the volume intensity at the sample point is smaller than the pattern intensity. Intuitively, the pattern map chops an interval [0,p] from the intensity gradient of a volume. The value p is set by the pattern map. <ref type="figure" target="#fig_6">Figure 5</ref> illustrates this process. <ref type="figure" target="#fig_0">Figure 10</ref> shows examples of cavity mapping on volume data. We map both colors and cavities on volume models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RESULTS</head><p>We measure how many pattern calculations we can perform per second. A pattern calculation includes calculating the normal, the hit point derivatives, and the homotopy result. We perform all our timing measurements on a 195MHz R10000 SGI Octane <ref type="table" target="#tab_0">Table 1</ref> shows a summary of our results. We picked a representative of each one of the modalities: one image of a BÃ©zier patch, one of a painted volume and one of a volume with cavities. Timing are for 256x256 images.</p><formula xml:id="formula_14">P u v w , , ( ) P x P y P z , , ( ) = N u v w , , ( ) N x N y N z , , ( ) = Hit u v w , , ( ) P u v w , , ( ) maxZ P z - N z -------------------------- ï£­ ï£¸ ï£¬ ï£· ï£« ï£¶ N u v w , , ( ) â + = workstation.</formula><p>Rendering BÃ©zier patches requires a single pattern map computation for each pixel sub-sample. Painting volumes requires a few pattern map computations per ray. We perform pattern computations for non-zero samples, and use early ray termination to minimize computations. The BÃ©zier patch computation is slightly simpler because it does not require reconstructing the normal from sample points. Generating cavities in a volume requires the largest number of pattern map evaluations per ray. Since we change the contents of the volume, we also modify the volume iso-surfaces. Therefore, we have to re-calculate the normal and gradient at each sample point. We evaluate the cavity map for a small neighborhood around each sample, and use the central difference to calculate the normal and gradient values for shading and compositing. We attribute the difference between the rightmost column of the two volume cases to cache coherency. In cavity mapping, we have to compute pattern mapping for a small neighborhood around a sample point. This neighborhood of samples is likely to be in cache after calculating the pattern mapping for the sample point itself.  It is a common mistake to assume that varying the density of the pattern image on the bounding box walls introduces new sampling artifacts. We observe that we perform all our computations in continuous domains. Only at the last stage of the computation do we sample the pattern image and could introduce new aliasing problems. However, since our method maps pattern images on a surface preserving the size of patterns on the surface, we don't have areas with very dense mapping and we don't introduce any new aliasing problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Cons</head><p>â¢ Our technique is only suitable for cases where uniform mapping of a pattern is called for. It does not consider special features and does not match any specific geometry with specific locations in the pattern map.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>Our technique is relatively expensive in CPU time. We calculate the entire mapping for each visible point on the surface every frame. When extracting surfaces from a volume (e.g. Marching Cubes) we can generate a texture map for each polygon using the homotopy calculations. Using these new texture maps for rendering the polygons could speed up rendering considerably.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>Our technique preserves the size of the pattern in two major axes. It does not avoid a shear effect. When the pre-images of the two perpendicular wall axes are not perpendicular, we introduce a shear in the final mapping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>Our technique generates mirrors of the pattern map in one or two directions. These mirrors generate a C 0 continuous image when placed near the un-mirrored image. This means that if (for example) the pattern contains writing, the written portions will appear mirrored in some areas of the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Pros</head><p>â¢ Our technique provides an automated tool for texturing smooth surfaces of any topology. It does not require user intervention at any level. For a user supplied density, our method maps a given pattern on the entire model while preserving the requested pattern density.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>Our algorithm doesn't require any parametrization of the surface. In fact, we don't even have to specify the surface explicitly. It is enough that the surface exists implicitly (i.e. isosurfaces in volumes). Our method enables texturing of surfaces without ever extracting them. Since we only use local attributes at any point, we don't have to maintain any knowl- edge of the surface, its shape and topology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>Our technique depends only on local information at each point. We need not have any knowledge of the general shape and form of the models. In a multiprocessing environment this algorithm is therefore very naturally parallelizable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>â¢</head><p>The resolution of the pattern image does not depend on the resolution of the volume data. We can easily apply a high resolution pattern map on a low resolution volume. The final resolution of the pattern depends only on the resolution of the pattern map image. <ref type="figure" target="#fig_9">Figure 8</ref> shows an example of this quality</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>This paper presented a new method for adding patterns to isosurfaces in volumes and to parametric surfaces. Our method is completely automatic and requires no user intervention. Our method is useful for all surface types with a C 1 continuous normal. It maps 2D images continuously on objects while preserving the size of mapped images on the object surface. In volumes, the final resolution of the pattern on the volume does not depend on the resolution of the volume. We can map very high resolution patterns on relatively low resolution volumes. We demonstrated our method for painting volume surfaces and for generating cavities in volume models.    </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 3shows these two homotopies. Parts(b) and (d) show the mapping of the domain [0,1]x[0,1] (see Equation 2) into the X axis of a pattern image. The top and bottom edges depict the two original paths. The arrows represent full paths along the X axis. An arrow pointing right is the path (0,1), and an arrow pointing left is the path (1,0). The tip of the arrow is the right edge of the pattern image and the back of the arrow is the left edge of the pattern image. Modified environment mapping: color each surface point by the color where the normal hits the bounding box. The arrows marked P 0 , P 1 show how the density of the mapping changes when the surface curvature does. F = wall axis size</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(a) shows this transition. Part (b) depicts the same homotopy on its domain [0,1]x[0,1]. It shows a continuous transition between the paths on the top and bottom of the [0,1]x[0,1] square. We call this homotopy 0:2. Figure 2c shows a typical intermediate path (for t = 0.6) between (0,1,0) and (0). Similarly, Figures 3c</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>(a) A pattern image. (b) Mapping the path (0, 1, 0) on a box wall. (c) Mapping the path (0, 0.6, 0) on a box wall. (d) Mapping the path (0, 1, 0.6, 1) on a box wall.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>(a)(b) 0:2 Homotopy between the path (0,1,0), and the stationary path at point 0. (c)(d) 1:3 Homotopy between the path (0,1) to the path (0,1,0,1).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>(a) Illustrate the behavior of the two homotopies on one axis of the pattern image. In Level 0, we use the homotopy from Figure 3a, and in all other levels, we use the homotopy from Figure 3c. Note that we only demonstrate this behavior for S in [0,18]. The same behavior continues for higher S values. (b) Show the non-linear mapping. The horizontal axis is an axis of the bounding box wall. The vertical axis varies the number of instances we fit on the bounding box wall. The shades show the choice of pattern map coordinates.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>[x,y] in the range [0,1]x[0,1]. The final color of the point comes from the pattern image at location [x,y]. D x and D y are pre-images of (H x , 0, 0) and (0, H y , 0) under the partial derivatives of Hit</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>T r a n s i t i o n z oFigure 5 :</head><label>5</label><figDesc>(a) A volume model with a thick transition zone between intensity 0 and 1. (b) Mapping new intensities into the transition area creates cavities in the model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :</head><label>6</label><figDesc>Sample pattern maps used to generate the images in this paper.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>Mapping the patterns inFigure 6aand 6c onto a BÃ©zier patch.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 :</head><label>8</label><figDesc>Mapping a high resolution pattern on a low resolution volume.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 :</head><label>9</label><figDesc>(top left) Figure 6d mapped on a volumetric teapot. (bottom left) Figure 6b mapped on a volumetric dipole. (right) Figure 6a mapped on an MRI scan of a head.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 10 :</head><label>10</label><figDesc>Examples of cavity mapping on volume data. Mapping patterns fromFigure 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Timing Results</figDesc><table><row><cell>Figure</cell><cell># Pattern Evals</cell><cell>Time w/ Patterns</cell><cell>Time w/o Patterns</cell><cell>Pattern Evals per Second</cell></row><row><cell>7 (left)</cell><cell>86181</cell><cell>32.8 sec</cell><cell>5.2 sec</cell><cell>3122.5</cell></row><row><cell>9 (right)</cell><cell>575158</cell><cell>635 sec</cell><cell>390 sec</cell><cell>2353.3</cell></row><row><cell>10 (right)</cell><cell>5964517</cell><cell>3249 sec</cell><cell>1045 sec</cell><cell>2706.5</cell></row><row><cell></cell><cell cols="2">Intensity = 0</cell><cell></cell><cell></cell></row><row><cell></cell><cell cols="2">Intensity = 1</cell><cell></cell><cell></cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was partially supported by National Science Foundation Grant CCR-9211288, and by the Advanced Research Projects Agency Contract DABT63-C-0056.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Agrawala</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">C</forename><surname>Beers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
		<title level="m">Proceedings of 1995 Symposium on Interactive 3D Graphics</title>
		<meeting>1995 Symposium on Interactive 3D Graphics</meeting>
		<imprint>
			<biblScope unit="page" from="145" to="150" />
		</imprint>
	</monogr>
	<note>3d painting on scanned surfaces</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Piecewise Surface Flattening for non-distorted Texture Mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bennis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Vezien</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Iglesias</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gagalowicz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 91</title>
		<meeting>SIGGRAPH 91</meeting>
		<imprint>
			<biblScope unit="page" from="237" to="246" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Frequency Analysis of Gradient Estimators in Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Bentum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Malzbender</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Lichtenbelt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="1996-09" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="242" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Two-Part Texture Mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Bier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">S</forename><surname>Sloan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="page" from="40" to="53" />
			<date type="published" when="1986-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Algebraic Topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Harper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
		<imprint>
			<date type="published" when="1981" />
			<publisher>Addison Wesley Publishing Company</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Environment Mapping and Other Applications of World Projections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Greene</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="21" to="29" />
			<date type="published" when="1986-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Introduction to Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">S</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Phillips</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Addison-Wesley Publishing Company</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Direct WYSIWYG painting and texturing of 3D shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">E</forename><surname>Haeberli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 90</title>
		<meeting>SIGGRAPH 90</meeting>
		<imprint>
			<biblScope unit="page" from="215" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cubic Convolution Interpolation for Digital Image Processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Keys</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Acoustics, Speech, and Signal Processing</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1153" to="1160" />
			<date type="published" when="1981-12" />
		</imprint>
	</monogr>
	<note>ASSP-</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Efficient Techniques for Interactive Texture Placement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Litwinowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 94</title>
		<meeting>SIGGRAPH 94</meeting>
		<imprint>
			<biblScope unit="page" from="119" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Interactive Texture Mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Maillot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yahia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Verroust</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 93</title>
		<meeting>SIGGRAPH 93</meeting>
		<imprint>
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Reconstruction Filters in Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">N</forename><surname>Netravali</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 88</title>
		<meeting>SIGGRAPH 88</meeting>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="221" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Evaluation and Design of Filters Using a Taylor Series Expansion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>MÃ¶ller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">K</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="184" to="199" />
			<date type="published" when="1997-06" />
		</imprint>
	</monogr>
	<note>ITVCG</note>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Design of Accurate and Smooth Filters for Function and Derivative Reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>MÃ¶ller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Kurzion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1998 Symposium on Volume Visualization</title>
		<meeting>the 1998 Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1998-10" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Displacement Mapping Using Flow Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">K</forename><surname>Pederson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 94</title>
		<meeting>SIGGRAPH 94</meeting>
		<imprint>
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Decorating Implicit Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">K</forename><surname>Pederson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 95</title>
		<meeting>SIGGRAPH 95</meeting>
		<imprint>
			<biblScope unit="page" from="291" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Fast and Accurate Texture Placement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Shirman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Kamen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="60" to="66" />
			<date type="published" when="1997-02" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
