<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Selecting the Aspect Ratio of a Scatter Plot Based on Its Delaunay Triangulation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Fink</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jan-Henrik</forename><surname>Haunert</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joachim</forename><surname>Spoerhase</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexander</forename><surname>Wolff</surname></persName>
						</author>
						<title level="a" type="main">Selecting the Aspect Ratio of a Scatter Plot Based on Its Delaunay Triangulation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:07+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Scatter plot</term>
					<term>aspect ratio</term>
					<term>Delaunay triangulation</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Fig. 1. Choosing the aspect-ratio of a scatter plot has a considerable influence on the readers&apos; impression and their ability to recognize clusters and trends of point data.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Scatter plots are widely applied in scientific visualization to find clusters, patterns, and trends in empirical bivariate data. Each data element is visualized as a point in the plane, for example, by using a dot symbol. Additionally, scatter plots often show trend lines or contour lines. According to a survey by Friendly <ref type="bibr" target="#b7">[8]</ref>, scatter plots appeared in the scientific literature later than pie charts, line graphs, and bar charts, which are generally attributed to William Playfair (1759-1823). Probably, scatter plots have not been used before 1833, when Herschel <ref type="bibr" target="#b11">[12]</ref> investigated the relationship between the magnitudes and the spectral classes of stars. Today, however, scatter plots are very common. Tufte <ref type="bibr" target="#b25">[26]</ref> notes that "the relational graphic-in its barest form, the scatterplot and its variants-is the greatest of all graphical designs."</p><p>The two dimensions displayed in a scatter plot are usually of different units-consider, for example, a scatter plot that shows the relationship between pairwise measurements of temperature (in degree Celsius) and air pressure (in hPa). Often, each of the two units of the input data is simply mapped to one geometric unit in the drawing.</p><p>• Martin Fink is with Lehrstuhl I, Institut für Informatik, Universität</p><p>Würzburg. E-mail: martin.a.fink@uni-wuerzburg.de. • Jan-Henrik Haunert is with Lehrstuhl I, Institut für Informatik, Universität</p><p>Würzburg. E-mail: jan.haunert@uni-wuerzburg.de.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• Joachim Spoerhase is with Lehrstuhl I, Institut für Informatik, Universität</head><p>Würzburg. E-mail: joachim.spoerhase@uni-wuerzburg.de.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>• Alexander Wolff is with Lehrstuhl I, Institut für Informatik, Universität</head><p>Würzburg. E-mail: alexander.wolff@uni-wuerzburg.de.</p><p>Manuscript received 31 March 2013; accepted 1 August 2013; posted online 13 October 2013; mailed on 4 October 2013. For information on obtaining reprints of this article, please send e-mail to: tvcg@computer.org.</p><p>This approach is inappropriate, however, since a very different visualization would be obtained if the input data was given in different units (for example, in Fahrenheit and Bar). At the worst, this may affect the conclusions that researchers draw about the presence of trends or clusters in their data. Therefore, the mapping between the units of the input data and the coordinates of the drawing needs to be chosen carefully. In this paper, we require that this mapping is a scaling. We do not address, for example, scatter plots with a logarithmic scale. We also assume that the area of the plot is prescribed, thus we only have to choose the aspect ratio of the drawing, that is, the ratio between its horizontal and its vertical extent.</p><p>The problem of finding a good aspect ratio for a scatter plot is closely related to the problem of finding a good aspect ratio for a line chart (that is, the plot of a function), which has been intensively discussed in the literature on information visualization <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b23">24]</ref>. The existing methods, which we review in Sect. 2 in more detail, mainly rely on properties of the line segments displayed in the diagram. Therefore, they cannot easily be generalized to scatter plots that display points only. A way to overcome this problem, which was proposed by Cleveland et al. <ref type="bibr" target="#b2">[3]</ref>, is to apply a line-segment-based method to "virtual line segments", that is, line segments that humans may perceive in a scatter plot though they do not physically exist <ref type="bibr" target="#b21">[22]</ref>. Cleveland et al. suggested applying their method to the segments of a (virtual) polyline connecting all data points or the segments of a regression (poly-)line that reflects a global trend. While this approach produces satisfactory results if the data contains a trend, Talbot et al. <ref type="bibr" target="#b22">[23]</ref> showed that the trend-line-based approach is inappropriate in the case of two variables that do not have a functional relationship. In this case, it is still interesting to visualize the data, for example, to detect clusters. Therefore, Talbot et al. used contour lines that they computed for the given points with a kernel density estimator (KDE) <ref type="bibr" target="#b18">[19]</ref>, which is implemented in the statistics package R <ref type="bibr" target="#b15">[16]</ref>. Then, they selected the aspect ratio with a line-segment-based method that minimizes the total length of the contour lines. Talbot et al. did, however, not consider that the KDE result heavily depends on the scale between the two dimensions of the input data.  illustrates our concern about the contour-line-based method. Suppose that we are given a set of nine data elements that constitute a regular 3 × 3 grid, see <ref type="figure" target="#fig_0">Fig. 2</ref> (center). Clearly, we would say that the data is not clustered. Accordingly, R's kde2d method yields a separate peak for each data element. If we now change the ratio between the vertical and the horizontal spacing of the grid (to simulate a change of the units of the input data), the kernel density estimator groups the points into rows <ref type="figure" target="#fig_0">(Fig. 2 (left)</ref>) or columns ( <ref type="figure" target="#fig_0">Fig. 2 (right)</ref>). Similarly, since humans tend to group points by proximity <ref type="bibr" target="#b27">[28]</ref>, a human may incorrectly conclude that the data is partitioned into three clusters. Therefore, we should rescale the axes of the diagrams such that we obtain the regular grid in <ref type="figure" target="#fig_0">Fig. 2 (center)</ref>. This solution will not be found, however, by minimizing the total length of the contour lines in <ref type="figure" target="#fig_0">Fig. 2</ref> (left) or (right). In fact, since Talbot et al. <ref type="bibr" target="#b22">[23]</ref> showed that their method tends to transform ellipses to circles, the point sets in <ref type="figure" target="#fig_0">Fig. 2</ref> (left) and (right) would be scaled in the wrong direction: for each of the clusters enclosed by a set of ellipse-like ovals, the three contained points would move even further together.</p><p>Our method for choosing the aspect ratio of a scatter plot reuses the idea of virtual line segments suggested by Cleveland et al. <ref type="bibr" target="#b2">[3]</ref>. Other than the method of Cleveland et al. and the contour-line-based method of Talbot et al., however, our method is not based on line segments that were computed before optimizing the aspect ratio. Instead, we define based on the output diagram visible to the user (and thus based on the aspect ratio chosen) whether or not two points are linked via a virtual edge. We argue that the aspect ratio has appropriately been set if the virtual edges have nice properties. (Like Talbot et al. <ref type="bibr" target="#b22">[23]</ref>, we consider minimizing the total edge length, but we also tested other criteria and we will discuss them.) In contrast to the method that optimizes the aspect ratio based on precomputed contour lines, our method ensures that the result is independent of the units of the input data.</p><p>To deal with two variables without a functional relationship, we define a virtual line segment for each edge of the Delaunay triangulation D(P) of the set P of points displayed. This defines a meaningful (usually termed the natural) neighborhood for P: if for two points u, v ∈ P there exists a point w ∈ R 2 such that both u and v are nearest neighbors of w in P, then there exists an edge {u, v} in D(P).</p><p>The Delaunay triangulation not only has a conceptually meaningful definition, but has also been shown empirically to explain (to some degree) human perceptual grouping. For example, Dry et al. <ref type="bibr" target="#b4">[5]</ref> report on an experiment in which humans were shown constellations of stars and asked to display structures in the constellations by connecting pairs of stars with edges. As an average result, 98% of the edges drawn by an individual were edges of the Delaunay triangulation of the stars. On the other hand, on average, an individual did not draw 58% of the Delaunay edges. Therefore, to automate perceptual grouping, the Delaunay triangulation is often reduced to a subgraph, for example, to the relative neighborhood graph <ref type="bibr" target="#b24">[25]</ref> or the Gabriel graph <ref type="bibr" target="#b8">[9]</ref>. In this paper, we restrict our discussion to the Delaunay triangulation, but we believe that our approach can be generalized to also find an aspect ratio that optimizes favorable properties of, say, the Gabriel graph. We now face the problem of choosing the aspect ratio of a scatter plot such that the displayed points have a nice Delaunay triangulation, for example, a Delaunay triangulation with minimum total edge length. This is in fact a challenging algorithmic problem, since-just as the contour lines for a set of points-the Delaunay triangulation may change if we change the aspect ratio, see <ref type="figure" target="#fig_2">Fig. 3</ref>. To solve the problem, we first consider a naive algorithm that discretizes the interval of possible aspect ratios into a finite but large set S of possible values. Then, we explicitly test each of the |S| values in S. That is, for each s ∈ S, we apply the aspect ratio to the diagram, triangulate the points, and evaluate the total edge length of the triangulation. Finally, we return the aspect ratio that was evaluated best.</p><p>The naive algorithm would clearly work, but computing the Delaunay triangulation |S| times from scratch would be extremely inefficient. (Since computing the Delaunay triangulation of a set of n points requires Θ(n log n) time, the runtime of the naive algorithm would be in Θ(|S|n log n).) To do better, we present an algorithm that traverses the interval of possible aspect ratios while efficiently maintaining the Delaunay triangulation. This algorithm allows us to move from one aspect ratio to the next larger (or smaller) aspect ratio where the Delaunay triangulation changes in Θ(log n) time.</p><p>Our paper is structured as follows. First, we give an overview over existing methods for aspect-ratio selection for line charts. Next, we precisely define our problem, discuss first ideas, and introduce our quality measures for the aspect ratio of a scatter plot. Then, we present our algorithms for optimizing these quality measures. Finally, we describe our experimental evaluation of the different measures including a user study we performed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">EXISTING METHODS FOR ASPECT RATIO SELECTION</head><p>The problem of choosing the aspect ratio of a line chart was first discussed by Cleveland et al. <ref type="bibr" target="#b2">[3]</ref>. The authors observed that the orientation resolution of two line segments s 1 and s 2 with positive slopes (that is, the absolute difference of their orientation angles) is maximal if the mean orientation of s 1 and s 2 is 45 • . In order to allow humans to recognize orientation changes of a line, Cleveland et al. then suggested choosing the aspect ratio such that the median absolute slope of all line segments is 1. This method is usually termed banking to 45 • and is perhaps the most widely applied automatic method for aspect ratio selection, not least because it is implemented in the statistical software R. Later, Cleveland <ref type="bibr" target="#b1">[2]</ref> suggested a weighted version of the method to avoid that redundant line vertices (which would imply an increase in the number of line segments) have an influence on the aspect ratio. In this new version, the length-weighted mean of the absolute orientations of the line segments is set to 45 • . Two additional methods for aspect ratio selection have been introduced and tested by Heer and Agrawala <ref type="bibr" target="#b10">[11]</ref>. Their first method maximizes the sum of the squared orientation differences over all pairs of line segments; their second method computes the aspect ratio such that the length-weighted mean of the absolute slopes of the line segments equals 1. The most significant innovation of the authors, however, is a multi-scale approach that allows the visualization of a line to be optimized for different levels of granularity. This method finds trends at multiple frequency scales and then generates multiple line charts, of which each optimizes the aspect ratio to visualize the trend at one of the scales.</p><p>Talbot et al. <ref type="bibr" target="#b22">[23]</ref> suggested choosing the aspect ratio of a line chart by minimizing the total arc length of the line. As the authors show, this method has a close similarity to the method of Heer and Agrawala <ref type="bibr" target="#b10">[11]</ref> that maximizes the sum of squared orientation differences (if only pairs of consecutive line segments instead of all pairs of line segments are considered). In contrast, the method of Talbot et al. is parameterization invariant-redundant line vertices do not influence the resultand faster to compute since only Θ(n) instead of Θ(n 2 ) pairs of line segments need to be considered. The most recent contribution to the topic <ref type="bibr" target="#b23">[24]</ref>, also by Talbot et al., is an empirical study on how the aspect ratio of a line chart influences humans in estimating the slope of a line. The authors conclude that banking to 45 • degrees is not necessarily the best choice and that "substantial future work remains to flesh out a full theory of aspect ratio selection". With our paper we aim to give fresh impetus to this discussion. We choose a computationalgeometry approach that offers new possibilities of optimizing various favorable properties of a scatter plot.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PROBLEM STATEMENT AND QUALITY MEASURES</head><p>Given a set Q = {q 1 , q 2 , . . . , q n } ⊂ R 2 of points, we search for a scale factor s ∈ R + that defines the set P(s) of displayed points, that is, the resulting scatter plot. We denote the coordinates of each point q i ∈ Q by x i and y i and require that the scatter plot P(s) contains the point p i := (s • x i , y i /s). This ensures that the bounding box of Q and the bounding box of P(s) have the same area. By choosing the scale factor, also the aspect ratio becomes determined. We write P instead of P(s) if the choice of s is clear from the context.</p><p>To choose a good scale factor, we define various criteria. Basically, we measure the quality of a scatter plot with a function f : S → R, where S is the set of all possible scatter plots for the given point set. Then, we search for a scale factor whose corresponding scatter plot maximizes f . Before discussing possible settings of f , however, we introduce two simple methods that are not based on a quality measure.</p><p>Simple ideas for choosing an aspect ratio. A first approach would be to compute the bounding box of Q and to scale it to a prescribed drawing area, for example a square. With this method, however, at most four points (those with extremal x-or y-coordinates) define the scale factor, while all other points do not influence the result. Therefore, it is left to chance whether the scatter plot allows clusters or trends to be detected. This shows the inappropriateness of the method.</p><p>A second, more promising idea is to consider the empirical standard deviations σ x and σ y of the x-and y-coordinates of the displayed points. It is somehow reasonable to require σ x = σ y since the variations in both variables may be assumed to be equally important and thus their standard deviations should allocate the same geometric unit. This requirement can be fulfilled by setting</p><formula xml:id="formula_0">s = 4 ∑ n i=1 (y i −ȳ) 2 ∑ n i=1 (x i −x) 2 withx = 1 n n ∑ i=1 x i ,ȳ = 1 n n ∑ i=1 y i . (1)</formula><p>Since this method is conceptually simple and computationally inexpensive, we include it into the discussion of our experiments in Sect. 5. It is also clear, however, that the standard-deviation-based method has its limitations. Consider, for example, the point set in <ref type="figure" target="#fig_6">Fig. 1</ref> (right) scattered around the sine function and assume that it represents a signal we observe, that is, the behavior of a variable (plotted on the yaxis) over time (plotted on the x-axis). Clearly, by observing a sufficiently large number of periods of the signal, the standard deviation of the input x-coordinates gets arbitrarily large. On the contrary, the standard deviation of the input y-coordinates stays constant (or only changes marginally because of the non-periodic nature of the noise). Therefore, by setting σ x = σ y the signal will get more compressed in the horizontal direction the longer we observe it. At some point, we would be unable to recognize the sine function. This shows the deficiency of the standard-deviation-based method. Moreover, the example suggests that we need a measure that quantifies the quality of every part of the scatter plot locally, for example, to ensure that every period of a sine signal gets nicely scaled. We need a definition of locality, a local measure of quality, and a function that aggregates the local measures into a single global score that is to be optimized.</p><p>Quality measures. As pointed out in the introduction, experiments have shown <ref type="bibr" target="#b4">[5]</ref> a strong connection between human perceptual grouping in a given point set P and the edges of its Delaunay triangulation D(P). This motivates our study of Delaunay triangulations as the underlying structure for finding a suitable aspect ratio of a scatter plot. To give an intuitive explanation why the Delaunay triangulation yields a meaningful neighborhood, consider the basic example of <ref type="figure" target="#fig_3">Figure 4</ref> where the two possible triangulations of a point set are shown. A possible explanation (for alternative explanations see below) why the triangulation to the left seems less natural than the right one is that it contains very small angles between adjacent edges leading to an "uncompact" appearance. In fact, it is well known that among all triangulations of a given point set (with a fixed scale factor) the Delaunay triangulation (which is the triangulation to the right in <ref type="figure" target="#fig_3">Figure 4</ref>) is the one whose smallest angle is maximal <ref type="bibr" target="#b20">[21]</ref>.</p><p>The idea behind our first quality measure is therefore to maximize the smallest angle also over different scale factors. That is, we choose the scale factor such that the smallest angle of D(P) is as large as possible. Indeed, we can find the scale factor that optimizes this criterion. Our experiments, which we will discuss in Sect. 5, showed, however, that this sometimes yields unsatisfactory results.</p><p>A problem with maximizing the minimum angle is that an overall good scatter plot is rated poor if its Delaunay triangulation contains only one very small angle, which may dictate the overall outcome. Therefore, we need a measure that better aggregates local properties of the scatter plot. Interestingly, the Delaunay triangulation not only maximizes the minimum angle but also the mean inradius of the triangles <ref type="bibr" target="#b13">[14]</ref>. (See also <ref type="figure" target="#fig_3">Figure 4</ref>.) Since this aggregating measure has the potential to be more robust than a max-min measure when applied to an interval of scales, we also consider maximizing the mean inradius of the triangles of D(P).</p><p>While our motivation for the first two measures was mainly driven by properties of the Delaunay triangulation, we also consider measures that have earlier been proposed for selecting the aspect ratio of a line chart. In particular, inspired by the idea of Talbot et al. <ref type="bibr" target="#b22">[23]</ref>, who defined the aspect ratio of a line chart by minimizing the length of the displayed line, we consider minimizing the overall length of the edges of D(P). Similarly, inspired by an idea of Heer and Agrawala <ref type="bibr" target="#b10">[11]</ref>, who proposed minimizing the square sum of orientation differences of line segments, we consider minimizing the square sum of the angles of the triangles of D(P).</p><p>Furthermore, we suggest maximizing the mean compactness of the triangles of D(P). We define compactness as MacEachren <ref type="bibr" target="#b14">[15]</ref> did for the analysis of geographic shapes, that is, we define the compactness of a triangle ∆ with perimeter c(∆) and area A(∆) as A(∆)/c(∆). Finally, instead of maximizing the average compactness, we consider minimizing the mean uncompactness of the triangles of D(P), where the uncompactness of a triangle ∆ is defined as c(∆)/ A(∆) <ref type="bibr" target="#b14">[15]</ref>. We remark that our uncompactness measure may be viewed as a weighted variant of the above length measure. In fact, both measures behaved similarly in our experiments; uncompactness was slightly better. The uncompactness criterion weighs each edge by a factor that depends (reciprocally) on the areas of the incident triangles. This increases the impact of edges incident to skinny triangles while lowering the impact if the incident triangles are compact anyway.</p><p>Note that, for a fixed scale, all of the above measures prefer the right over the left triangulation in <ref type="figure" target="#fig_3">Figure 4</ref>.</p><p>To wrap up, we propose six optimization criteria, which we group into angle-based, length-based, and triangle-based measures, namely (1) maximizing the minimum angle of the triangles of D(P), (2) minimizing the square sum of the angles of the triangles of D(P), (3) minimizing the total edge length of D(P), (4) maximizing the mean inradius of the triangles of D(P), (5) maximizing the mean compactness of the triangles of D(P), and (6) minimizing the mean uncompactness of the triangles of D(P).</p><p>In the next section, we present an exact algorithm for maximizing the minimum angle and an algorithm that approximates an optimal solution for any of the other five criteria.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">OUR ALGORITHM</head><p>Finding the optimum scale factor s can be seen as a process of continuously increasing s starting with s = 1. In doing so, the Delaunay triangulation undergoes topological changes at certain event points which we need to keep track of. We output the scale factor at which our objective function is optimized. Using the same approach we can traverse all scale factors s &lt; 1 and, hence, find the global optimum.</p><p>Our algorithm consists of two layers. The first layer steps through the discrete set of event points in the order in which they occur in the above described process. The second layer optimizes between the event points. Between two consecutive event points s i , s i+1 the topological structure of the Delaunay triangulation does not change. Each of our optimization measures is a continuous function of s</p><formula xml:id="formula_1">∈ [s i , s i+1 ].</formula><p>We can compute the scale factor (or an approximation of it) at which this function is maximized within the interval [s i , s i+1 ]. Doing this for all such intervals allows us to determine the globally optimal scale factor (or an approximation).</p><p>Our approach is closely related to the problem of maintaining a Delaunay triangulation for a set of continuously moving points. In fact, the first layer of our algorithm may be seen as a special case of this problem where each point moves along a horizontal line at an individual but constant speed. To see this, map any input point (x i , y i ) to (s 2 x i , y i ) instead of mapping it to (sx i , y i /s) at scale factor s. Clearly, this does not change the topology of the triangulation. Substituting s 2 by s shows that it is sufficient (at least in the first layer where only the topological structure of the Delaunay triangulation is relevant) to map (x i , y i ) to (sx i , y i ). That is, in the first layer we only need to scale x-coordinates by s while leaving the y-coordinates unchanged.</p><p>For the general setting of moving points, Roos <ref type="bibr" target="#b16">[17]</ref> describes a data structure for maintaining (the topological structure of) a dynamic Delaunay triangulation. His data structure takes O(log n) time per topological change. His results requires that the movement of the points meets a (weak) technical assumption that holds for many natural scenarios such as movement along parametric polynomial curves.</p><p>The question of how many topological changes a dynamic Delaunay triangulation can undergo (again under some weak and natural assumptions on the movement) is an important field of research in computational geometry <ref type="bibr" target="#b6">[7]</ref>. There is a series of lower or upper bounds to the problem <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b17">18]</ref>; closing the gap is a major open problem. In a recent breakthrough, Rubin <ref type="bibr" target="#b17">[18]</ref> shows that there are at most O(n 2+ε ) topological changes for a large class of movements (including our scenario). This almost matches the currently best quadratic lower bound <ref type="bibr" target="#b19">[20]</ref>. We argue that in our case there can be in fact only O(n 2 ) topological events and that this bound is tight. Therefore, we are able to close the gap in our setting.</p><p>The following characterization of a Delaunay triangulation D(P) of a point set P = {p 1 , . . . , p n } is crucial for our algorithm; it consists of two equivalent properties: (P1) The interior of the circumcircle of any triangle of D(P) does not contain points of P. (P2) For any edge p i p j of D(P) there exists a circle whose boundary contains p i and p j but whose interior does not contain points of P. The converse also holds. Any triangulation that satisfies (P1) or (P2) is a Delaunay triangulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Maintaining the Delaunay Triangulation Through Scale Space</head><p>Now we turn to tracking the Delaunay triangulation through scale space. Given a set P of n points, h of which lie on the convex hull, it is well-known that any triangulation of P contains 2n − 2 − h triangles and 3n − 3 − h edges. Clearly, the number of points on the convex hull is the same at any scale. Hence, the numbers of triangles and edges do not change either. Therefore, for each triangle (or edge) that disappears from the Delaunay triangulation at some event point s , a new triangle (or edge) is created and vice versa. For the sake of presentation, we assume in what follows that no five points are co-circular at any fixed scale factor. Consider an event point s at which some triangle disappears from the Delaunay triangulation. According to property (P1) there is at least one point p r that enters the circumcircle C(p i , p j , p k ) of the triangle at s . More precisely, the interior of C(p i , p j , p k ) contains p l at any s &gt; s but not at s = s , where p l is on the boundary.</p><p>We first characterize the situations at which we have to perform topological changes. To this end, let a D-quadrilateral be the union of two triangles of the Delaunay triangulation that share an edge. Lemma 1. If the Delaunay triangulation undergoes a topological change at event point s , then there is a D-quadrilateral p i p j p k p l with diagonal p i p k such that p l enters the circle C Proof. There must be a triangle ∆p i p j p k that disappears at s because there is a topological change at s . This means that there is a point p r entering C(p i , p j , p k ), w.l.o.g. between p i and p k . Let p l be the vertex of the triangle adjacent to ∆p i p j p k and incident to edge p i p k as depicted in <ref type="figure" target="#fig_4">Figure 5</ref>. We show that p r = p l , which completes the proof. Assume to the contrary that p r = p l . The point p l must lie outside the circle C(p i , p j , p k ) since no five points are co-circular. But then the interior of C</p><formula xml:id="formula_2">(p i , p j , p k ) at s . pi pj p k p l pr C(pi, p k , p l ) C(pi, pj, p k )</formula><formula xml:id="formula_3">(p i , p l , p k ) contains p r , which is a contradiction.</formula><p>Consider a point p l entering the circumcircle of a triangle ∆p i p j p k at event point s as described in Lemma 1. This situation is depicted in <ref type="figure" target="#fig_5">Figure 6</ref>. Now, if we replace edge p i p k with edge p j p l at event point s we obtain a new triangulation. We call this operation a flip. The crucial observation is that the interiors of the circumcircles of the newly formed triangles ∆p i p j p l and ∆p j p l p k are empty at scale s + ε for some sufficiently small ε &gt; 0 because no point other than p l enters C(p i , p j , p k ) at s . Therefore, if no further flips are to be performed at s , the current Delaunay triangulation is valid at s + ε for any sufficiently small ε &gt; 0. Also note that the flip of p i p k corresponds to the co-circularity of the unique quadrilateral p i p j p k p l that contains p i p k .</p><formula xml:id="formula_4">p i p j p k p l D(P (s − )) p i p j p k p l p i p j p k p l D(P (s )) D(P (s + ))</formula><p>It can happen that more than one flip has to be performed at s . Observe, however, that the four edges of the quadrilateral p i p j p k p l need not be flipped at s because otherwise a fifth point would have to enter its circumcircle (contradicting our assumption). This means in particular that multiple flips that are performed at s can be carried out independently of each other.</p><p>Our algorithm determines the sequence s 1 , . . . , s m of event points one by one in increasing order starting with s 1 := 1. Given an event point s i and the corresponding Delaunay triangulation D(P(s i )), we need to compute the next event point s i+1 , that is, the smallest scale factor larger than s i at which we have to perform flips. Note that any flip that we have to perform at s i+1 corresponds to the co-circularity of the unique quadrilateral of D(P(s i+1 )) containing the edge flipped (see <ref type="figure" target="#fig_5">Figure 6</ref>). In other words, for every edge, we have to compute the smallest scale factor larger than s i at which the corresponding quadrilateral becomes co-circular. For each edge, this event point can be . . , s m of event points in increasing order. Initially, we compute the Delaunay triangulation at s := s 1 = 1 and set up a priority queue Q that maintains for each edge of the current triangulation the event point at which this edge has to be flipped.</p><p>The sequence of event points is computed in the while loop. First, the next event point t is computed by extracting from queue Q the next scale factor t at which some edge has to be flipped. We also retrieve the corresponding edge e from Q. Note that t may be equal to the current event point s since more than one edge may be flipped at s.</p><p>Whenever an edge e is flipped, the queue Q has to be updated accordingly. This affects the set E of the four edges of the quadrilateral containing f . For each such edge, its corresponding quadrilateral has changed due to the flip of e, which may require to update the event point at which the edge must be flipped.</p><p>Let us now analyze the running time of the algorithm. The initialization step takes O(n log n) time for computing the Delaunay triangulation and O(n) time for building the priority queue. For each flip that is performed by the while loop we spend overall O(log n) time for extracting the minimum of Q and updating the four edges of the corresponding quadrilateral.</p><p>It remains to determine the maximum number of flips performed by the algorithm. Consider the situation depicted in <ref type="figure" target="#fig_5">Figure 6</ref> where we flip the edge p i p k at event point s . Observe that, for every scale factor s &gt; s , the circle C(p i , p j , p k ) contains p l in its interior. Therefore, every circle with p i and p k on its boundary either contains p j or p l in its interior. By property (P2) we can conclude that the edge p i p k cannot be part of a Delaunay triangulation for any s &gt; s . Since there are at most O(n 2 ) potential edges (one for each point pair) and since no edge that has been flipped can be re-inserted into the Delaunay triangulation (as we have just seen), the algorithm performs at most O(n 2 ) flips. Let us summarize. There is a simple input instance showing that our above analysis is asymptotically tight. Let r and s be line segments of slope −1 that lie in the first and third quadrant, respectively. For any positive (even) integer n, we obtain a worst-case instance P wc (n) by picking n/2 arbitrary points on r and n/2 arbitrary points on s. It is not hard to verify that our algorithm-and any algorithm that maintains the Delaunay triangulation explicitly-performs Ω(n 2 ) topological changes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Finding a Good Scale Factor</head><p>In general, the event points described in the previous section can be scattered quite unevenly over scale space. In order to find a good scale factor it is therefore not sufficient to consider only the event points as potential solutions. In this section, we want to find good solutions for scale factors between event points.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Finding an Approximate Solution</head><p>We describe our method for the objective of minimizing the mean uncompactness u D of the Delaunay triangulation. The method can be applied similarly to the other objective functions listed in Sect. <ref type="bibr" target="#b2">3</ref>.</p><p>Fix an interval [s i , s i+1 ] of consecutive event points and fix an arbitrarily small error parameter ε &gt; 0. Our goal is to find an (1 + ε)approximate solution, that is, a scale factor s app for which u D (s app ) ≤ (1 + ε)u D (s opt ), where s opt is the globally optimal scale factor.</p><p>Let e = p 1 p 2 be an edge of the Delaunay triangulation in this interval with end points p 1 = (x 1 , y 1 ) and p 2 = (x 2 , y 2 ), and let l e (s) = s We restrict ourselves to scale factors between 1 and C for some sufficiently large constant C, which is sufficient for practical purposes. . We claim that u D (t opt ) ≤ (1 + ε)u D (s opt ), that is, we obtain an (1 + ε)-approximation for the current interval. To see this, let t k be the smallest test value such that t k ≥ s opt , which implies that t k /(1 + ε) &lt; s opt = t k /(1 + ε ) for some ε ≤ ε. Then we can con- Theorem 2. For any fixed ε &gt; 0, we can compute a (1 + ε)approximate solution for minimizing the mean uncompactness (given a constant upper bound on the scale factor). The algorithm takes O(n 3 ) time. Taking ε into account, the running time is O(n 3 + n/ log(1 + ε)).</p><formula xml:id="formula_5">2 (x 1 − x 2 ) 2 + (y 1 − y 2 ) 2 /s</formula><formula xml:id="formula_6">clude that u D (t opt ) ≤ u D (t k ) = u D ((1 + ε )s opt ) ≤ (1 + ε )u D (s opt ) ≤ (1 + ε)u D (s</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Maximizing the Minimum Angle</head><p>We now sketch an efficient algorithm for determining the scale factor s that maximizes the smallest angle of the Delaunay triangulation of the scatter plot at scale s.</p><p>Recall the continuous process that we described in the previous section where we maintain a dynamic Delaunay triangulation with increasing scale factor s. Each angle β (specified by two line segments) that occurs during this process can be described as a function on the scale factor s. The angle β is not necessarily present over the whole scale space because its defining line segments may not be part of the Delaunay triangulation all over the scale space. Therefore, the domain of β is a subset of the interval <ref type="bibr">[1, +∞]</ref>. As we argued in the previous section, any edge that disappears from the Delaunay triangulation will not reappear at a larger scale factor. Therefore, the domain of β is actually an interval [l β , r β ]. Let A be the set of all angles (functions) that appear at some scale factor in the Delaunay triangulation and let env(A ) be the lower envelope of A . Then determining the scale factor that maximizes the smallest angle of the Delaunay triangulation amounts to determining the maximum of env(A ).</p><p>Now consider some angle β ∈ A , and let p i p j and p j p k be the line segments defining β . Because every triangle has an angle smaller than π/2, the angle β can only contribute to env(A ) if β (s) ≤ π/2 for some s ∈ [l β , r β ]. We set up a coordinate system with origin p j . Then β is strictly larger than π/2 for any s if p i and p k lie in diagonally opposite quadrants. Therefore, we can safely remove from A all angles whose line segments lie in opposite quadrants.</p><p>Under this assumption, it is not hard to verify that any β ∈ A can be expressed as</p><formula xml:id="formula_7">β (s) = c 1 π + arctan c 2 s c 3 s 2 +1</formula><p>where c 1 ∈ {0, 1} and c 2 , c 3 ∈ R are easily computable constants that only depend on the line segments defining β but not on s. Elementary calculations reveal that two functions of the above form can have at most one intersection.</p><p>Agarwal and Sharir <ref type="bibr" target="#b19">[20]</ref> show that the lower envelope of a set of m partially defined functions, where two functions can intersect at most r times, has complexity (number of distinct curve segments) at most λ r+2 (m). Moreover, the lower envelope can be constructed algorithmically in O(λ r+1 (m) log m) time. Here λ q (m) denotes the Davenport-Schinzel sequence of order q.</p><p>To apply these results to our setting let m be the number of angles in A . Because two functions (angles) in A can intersect at most once the lower envelope env(A ) has complexity at most λ 3 (m). It is known that λ 3 (m) = O(mα(m)) <ref type="bibr" target="#b19">[20]</ref>, where α denotes the extremely slowly growing functional inverse of the Ackermann function.</p><p>The lower envelope can be constructed in O(λ 2 (m) log m) time. It is known that λ 2 (m) = O(m) <ref type="bibr" target="#b19">[20]</ref>. For each curve segment of the lower envelope, the maximum can be computed in constant time. Because the complexity of the lower envelope is O(mα(m)), we can compute the globally optimal scale factor in O(m log m) time. Now let us examine how large the number m of angles in A is in terms of the number n of points. Note that, for any scale factor, the number of angles in the Delaunay triangulation is O(n). Any flip (see <ref type="figure" target="#fig_5">Figure 6</ref>) that we perform in the scaling process removes four angles from the triangulation and introduces four new angles. Since at most O(n 2 ) flips are performed, A contains at most m = O(n 2 ) angles. Let us summarize.</p><p>Theorem 3. The scale factor that maximizes the smallest angle in the Delaunay triangulation of a set of n points can be computed in O(n 2 log n) time.</p><p>Alternatively, we propose the following algorithm, which is much easier to implement and fast in practice. The algorithm steps through the set of event point as described in the previous section. It maintains, for each interval of consecutive event points, the collection of angles (functions of s) that are present in that interval. This means that, for any flip that is performed, the collection of angles has to be updated, which takes O(1) additional time (besides the flip) because a constant number of angles is removed or added to the collection. Within each interval, the algorithm traverses the intersection points of curves (angles) on the lower envelope by increasing scale factor s. Given some intersection point on the lower envelope, the next intersection point (in the interval) can be determined in O(n) time by computing the intersection of the currently smallest function with any of the other O(n) functions, which needs O(1) time for each function. To summarize, our algorithm traverses intersection points on the lower envelope and spends O(n) time at each intersection point. Since there are O(n 2 α(n)) intersection points, our algorithm takes O(n 3 α(n)) time. Our experiments have shown that this algorithm is fast in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EXPERIMENTAL RESULTS</head><p>In order to analyze the quality of our methods, we implemented our algorithms and tested them on data showing clusters and trends. To evaluate the output of our algorithms, we conducted a user study in which users selected their preferred aspect ratio for the same data sets. We then measured how closely our different methods matched the preferences of users in our study.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Implementation and Test Instances</head><p>We implemented our algorithms in Java. For maximizing the minimum angle, we used the simplified version of our exact algorithm mentioned at the end of Sec. 4.2.2. For the other criteria, we used the approximation algorithm with ε = 0.01. <ref type="table" target="#tab_0">Table 1</ref> shows results on five test instances: (a) a cluster of points distributed normally around a center; (b) three such clusters next to each other; (c) a collection of four clusters of varying shape; (d) points sampled along a sine function at distances that are distributed normally; (e) the same for a linear trend with varying standard distance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Results on Clustered Point Sets</head><p>A feature that often occurs in scatter plots are clusters of points. It is of course desirable that clusters can be identified easily. Therefore, we tested the optimization criteria on input data containing clusters. We generated clustered point sets by first choosing cluster centers, and then iteratively adding randomly generated points around each center at normally distributed distances with equal standard deviation; see the first two columns in <ref type="table" target="#tab_0">Table 1</ref> for instances with one and three clusters, respectively.</p><p>As one simple cluster tends to be symmetric, it should be visualized at an aspect ratio at which the cluster looks like a circular point cloud. In our tests, this worked well for all optimization criteria.</p><p>The second column of <ref type="table" target="#tab_0">Table 1</ref> shows point sets with multiple (here: three) clusters placed in a row. Here, the standard deviation and, in particular, the inradius criterion gave bad results, that is, they scaled the point set too much in y-direction. For such instances, the best results were achieved by minimizing squared angles, maximimizing compactness, and minimizing uncompactness. The resulting scatter plots separate the clusters well and display each as a nice, almost circular, point cloud.</p><p>In another test, we generated a collection of four clusters of varying sizes and with different standard deviations, see the middle column of <ref type="table" target="#tab_0">Table 1</ref>. In this case all methods produced nice outputs, except for the maximization of the smallest angle, which stretched the scatter plot in an unacceptable way. Due to its nature as a max-min-criterion such a behavior occurs easily; there only needs to be a small substructure in which a very small angle exists at any aspect ratio.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Results on Point Sets Showing Trends</head><p>A second structure that scatter plots help reveal and visualize are trends (for example, over time) and functional dependencies. Here we created instances with points randomly scattered around linear, quadratic, and sine functions; the standard deviation from the value of the function was either chosen as a constant or proportional to the function value.</p><p>Two such instances are included in <ref type="table" target="#tab_0">Table 1</ref>. For the rough linear trend shown in the last column, all methods achieved good results, that is, the slope of the trend was close to 45 • . In contrast, the results for a sine-like trend (fourth column) heavily depended on the optimization criterion. The aspect ratios achieved by minimizing the smallest angle, minimizing total edge length, and minimizing uncompactness allow us to recognize the sine function. In contrast, the drawings achieved by minimizing the sum of squared angles, maximizing compactness, and by using the standard deviation criterion are stretched too much in y-direction. This makes it hard to see whether the trend is a sine function or a polyline of a few straight-line segments. The drawing resulting from maximizing the mean inradius is stretched extremely and does not allow the trend to be seen at all.  <ref type="bibr" target="#b26">[27]</ref> in aspect ratios computed by different methods.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Results on Real Scatter Plots</head><p>We also tested our method on nine scatter plots used in Nature articles <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b26">27]</ref>. Both minimizing total edge length and minimizing total uncompactness resulted in scale factors between 0.64 and 1.27 relative to the aspect ratios chosen by the authors. We consider this quite close to 1. For one of the instances, <ref type="figure">Fig. 7</ref> shows the original scatter plot, the result of minimizing uncompactness, the result of applying the method of Talbot et al. <ref type="bibr" target="#b22">[23]</ref> to contour lines generated with R's kde2d, and the result of banking a regression line to 45 • as suggested by Cleveland et al. <ref type="bibr" target="#b2">[3]</ref>. The results for all instances we processed can be found in the supplementary material. Before applying any of the methods to an instance, we prescaled the instance by a factor of 2. This ensured that we did not overrate the quality of a method that tends to select aspect ratios close to the input aspect ratio.</p><p>Our experiment shows that minimizing total edge length and minimizing uncompactness yields scatter plots similar to the scatter plots published in Nature. In particular, with these two measures, our method works well on both clustered data and data containing trends. An intuitive explanation for this is that, on data containing a trend, the triangulation is dominated by edges following the direction of the trend line, thus decreasing the total length of triangulation edges (which is rewarded with both measures) has an effect similar to banking the trend line to 45 • . With clustered data, on the other hand, the triangulation contains for each point the star connecting that point with its natural neighbors. Minimizing the edge lengths thus means that the neighbors are attracted by the central point and thus clusters become nicely compacted rather than unnaturally stretched in one direction. Banking a regression line to 45 • yields nice results if the data contains a clear trend (e.g., columns 1 and 2 in <ref type="table" target="#tab_0">Table 1</ref> of the supplementary material) but clearly fails on clustered data (column 2 of <ref type="table">Table 2</ref>). The result of the method based on contour lines turned out to yield results close to the input aspect ratio, see the last row of Tables 1 and 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Empirical Study</head><p>To assess our algorithms, we conducted a study in which we asked every participant to choose the aspect ratios of the same 18 scatter plots. The study was based on a Java applet, which is accessible on-line <ref type="bibr" target="#b0">1</ref> . We received 64 submissions in total, 34 from colleagues, 11 from students, 16 from others, and 3 did not answer to questions regarding themselves. Among the 95% of the participants who did answer these questions, the average age was 28 years and 87% were male.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.1">Experimental Set Up</head><p>In brief instructions, we told the participants that, for each of the point sets they will be shown, they are supposed to control the aspect ra-1 www1.informatik.uni-wuerzburg.de/scatterplots tio with a slider and to accept the aspect ratio that allows structures, clusters, or trends to be perceived best or, in general, gives the best overview of the data. Additionally, we showed a set of points forming a smiley and suggested that the best visualization of the point set is the one in which the smiley has a circular shape.</p><p>After the instructions, we showed 18 point sets in succession. Each point set was initially displayed such that it fitted a square and the slider was in its middle position. Then, by changing the slider position, the participants could select the aspect ratio from the range between 1 : 3 and 3 : 1. We chose the test instances such that this range covered all reasonable values of the aspect ratio. Before participants could confirm their preferred aspect ratio for a given instance, the applet forced them to check all ratios by moving the slider at least once from its rightmost to its leftmost position. Participants could, however, at any time skip the current point set and proceed with the next one.</p><p>We designed the first two point sets of the test to accustom the participants with their task. (We showed the instance with the smiley and a point set that, when appropriately scaled, formed a regular pentagon.) Then, we showed four automatically generated instances with clusters where the points were normally distributed around the cluster centers. These instances included an instance with a single cluster, two instances with multiple clusters side by side, and an instance with multiple clusters intersecting each other (middle column of <ref type="table" target="#tab_0">Table 1</ref>). The next nine instances were automatically generated by scattering points around graphs of functions, for example, a straight line, a sine curve, and a parabola. Finally, we showed three instances from Fisher's iris data set <ref type="bibr" target="#b5">[6]</ref>, which is frequently used to assess classification methods.</p><p>After the last instance was completed, we asked the participants to rate the difficulty of the test between "very easy" (1.0) and "very difficult" (5.0). On average, the test was found to be "fair" (2.7). Each of the 18 instances was solved by at least 58 of the 64 participants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5.2">Assessment of Results</head><p>For each instance, we computed the geometric mean µ g (s) = On average over all instances, the geometric standard deviation was 1.47, which means that there was a rather low agreement among the participants. While the lowest variation (σ g (s) = 1.18) was found in the solutions for the set of points that form a smiley, the highest variation (σ g (s) = 1.81) occured for a set of points containing three clusters whose centers lie on a common horizontal line.</p><p>We compared the results of the empirical study with the results of our algorithm, which we tested with all six objective functions that we defined in Sect. 3. More precisely, for each of the 18 instances and each scale factor s opt that we obtained by optimizing one of our objective functions, we computed the geometric standard score</p><formula xml:id="formula_8">z = ln(s opt /µ g (s)) ln σ g (s) = ln s opt − µ(ln s) σ (ln s) ,<label>(2)</label></formula><p>where µ(ln s) is the arithmetic mean of the values ln s 1 , . . . , ln s k . The geometric standard score z tells us by how many values of the standard deviation σ (ln s) the result ln s opt of our algorithm is above or below the mean µ(ln s). Therefore, its absolute value |z| is a reasonable quality measure. The averagez of |z| over all instances then yields a single quality measure for each objective function that we optimized with our algorithm. Additionally, we used the same approach to measure the quality of the simple standard-deviation-based method that we introduced in Equation (1). <ref type="table">Table 2</ref> summarizes our results. <ref type="table">Table 2</ref>. Absolute values of geometric standard scores computed based on geometric means and geometric standard deviations that resulted from the empirical study and scale factors that resulted from our algorithm. Minima, maxima, and averages were computed based on 18 test instances. The last row shows the results of the simple standarddeviation-based method defined in Equation <ref type="formula">1</ref>  <ref type="table">Table 2</ref> we conclude that, on average, minimizing the total edge length and minimizing the mean uncompactness of the triangles yield the best results. With both objective functions,z is less than 0.5. To understand the meaning of this value, we also computedz based on the results of each individual participant, that is, for the aspect ratios selected by each participant we assessed the distances to the mean aspect ratios. For 38 of the 64 participants (i.e., for 59%) we obtained z ≥ 0.5, meaning that our algorithm performed better than most of the participants (assuming that the aim was to get close to the mean aspect ratios over all participants). Maximizing the mean inradius seems inappropriate, sincez = 1.74 is very high. With all other objective functions, however, our method produces somehow reasonable results.</p><p>Using the simple standard-deviation-based method resulted inz = 0.84, which shows that this method may be useful. However, when optimizing any of our objective functions (except when maximizing the mean inradius) our method resulted in a smaller value forz.</p><p>With our best method (i.e., minimizing the mean uncompactness of the triangles) the highest value |z| attained for one instance was 1.59. That instance consists of a set of points that are scattered around the graph of the function f : x → x sin x, see <ref type="figure">Fig. 8</ref>. When comparing the scatter plot favored by the users <ref type="figure">(Fig. 8a</ref>) and the scatter plot yielded by our algorithm <ref type="figure">(Fig. 8b)</ref> we observe that, though the aspect ratios of both scatter plots are quite different, they both allow the functional relationship between the two variables to be perceived.</p><p>(a) scaled to the mean aspect ratio chosen by the participants of our user study (b) scaled to the best aspect ratio according to the uncompactness criterion <ref type="figure">Fig. 8</ref>. An instance used in our study.</p><p>We also applied the method of Talbot et al. <ref type="bibr" target="#b22">[23]</ref>, which for a given line chart yields the aspect ratio that minimizes the length of the displayed line, to the nine instances in which we scattered the points around the graphs of functions. Since the method of Talbot works well for line charts, we exploited our knowledge of the functions that we used to generate the point sets. More precisely, we applied the method of Talbot et al. to piecewise-linear approximations of the graphs of the nine functions. Again, we compared the results with the aspect ratios selected by the participants of our study. On average over the nine instances, the method of Talbot et al. (with additional knowledge) achievedz = 0.41, whereas we obtainedz = 0.55 when we applied our point-based method with the mean uncompactness criterion to the nine point sets (without additional knowledge). This means that, if we already know the functional relationship between the two variables of the scatter plot, we should use this knowledge and apply the method of Talbot et al. to the graph of the function. If we do not know a functional relationship, however, our point-based method still achieves aspect ratios that are almost as good as those selected with the use of the prior knowledge. We repeated this experiment with the arc-based method of Cleveland <ref type="bibr" target="#b1">[2]</ref>. On our instances, this yielded almost the same results as the method of Talbot et al.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.6">Runtime</head><p>As, in praxis, a user who wants to draw a scatter plot is not willing to wait long for the result, the runtime of our method is important. We measured runtimes using our implementation on a standard PC with 4 GB RAM and an Intel Core2 Duo CPU with 3 GHz. We measured the time needed for finding an aspect ratio that is a 1.05-approximation with respect to minimizing the total edge length. To this end, we generated noisy sine functions as well as clustered instances similar to the one shown in the middle column of <ref type="table" target="#tab_0">Table 1</ref> consisting of a growing number of points; see <ref type="table" target="#tab_2">Table 3</ref>. In the worst case, our method may have to travers Θ(n 2 ) Delaunay triangulations. On the worst-case instance P wc (n) (see Sect. 4.1), this took about 10 seconds for n = 1000. On typical instances, however, our method is much faster. For example, for the clustered instance shown in the middle column of <ref type="table" target="#tab_0">Table 1</ref>, which contains 240 points, an optimum solution (maximizing the smallest angle) was found in one second; a 1.05-approximative solution for the better criterion of minimizing the total edge length was computed in 244 ms. (For instances with more than 1000 points, legability and runtime become issues. To improve the runtime, we simply suggest applying our algorithm to randomly selected subsets of the points.)</p><p>As only the evaluation of the quality measure differs, obtaining approximate solutions for the remaining criteria took nearly the same time. Optimizing the aspect ratio of the other instances with a similar number of points was even faster. We conclude that our method is fast enough for practical applications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSION</head><p>We have presented a new method that automatically chooses the aspect ratio of a scatter plot. The basic idea behind our method is to select the aspect ratio such that the resulting scatter plot has a nice Delaunay triangulation. We defined "nice" by six different measures, which are motivated by properties of the Delaunay triangulation, by related work on the problem of choosing the aspect ratio of a line chart, or by previous research on shape analysis.</p><p>We conclude that, in terms of quality, our method performs particularly well when minimizing the total edge length of the Delaunay triangulation or the mean uncompactness of the Delaunay triangles. For both measures, our algorithm yields scatter plots in which clusters or trends are clearly visible. The suitability of these two measures was confirmed by applying them on scatter plots published in Nature and by comparing them to aspect ratios chosen by subjects in a user study.</p><p>An idea for future research is to assess the quality of a scatter plot by asking users to solve certain tasks. An interesting algorithmic problem that our research brings up is to compute aspect ratios that optimize favorable properties of other neighborhood graphs than the Delaunay triangulation, for example, the Gabriel graph.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Scaling a point set (crosses) changes the result of a kernel density estimator and the contour lines derived from it.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2</head><label>2</label><figDesc>Figure 2 illustrates our concern about the contour-line-based method. Suppose that we are given a set of nine data elements that constitute a regular 3 × 3 grid, see Fig. 2 (center). Clearly, we would say that the data is not clustered. Accordingly, R's kde2d method yields a separate peak for each data element. If we now change the ratio between the vertical and the horizontal spacing of the grid (to simulate a change of the units of the input data), the kernel density estimator groups the points into rows (Fig. 2 (left)) or columns (Fig. 2 (right)). Similarly, since humans tend to group points by proximity [28], a human may incorrectly conclude that the data is partitioned into three clusters. Therefore, we should rescale the axes of the diagrams such that we obtain the regular grid in Fig. 2 (center). This solution will not be found, however, by minimizing the total length of the contour lines in Fig. 2 (left) or (right). In fact, since Talbot et al. [23] showed that their method tends to transform ellipses to circles, the point sets in Fig. 2 (left) and (right) would be scaled in the wrong direction: for each of the clusters enclosed by a set of ellipse-like ovals, the three contained points would move even further together. Our method for choosing the aspect ratio of a scatter plot reuses the idea of virtual line segments suggested by Cleveland et al. [3]. Other than the method of Cleveland et al. and the contour-line-based method of Talbot et al., however, our method is not based on line segments that were computed before optimizing the aspect ratio. Instead, we define based on the output diagram visible to the user (and thus based on the aspect ratio chosen) whether or not two points are linked via a virtual edge. We argue that the aspect ratio has appropriately been set if the virtual edges have nice properties. (Like Talbot et al. [23], we consider minimizing the total edge length, but we also tested other criteria and we will discuss them.) In contrast to the method that optimizes the aspect ratio based on precomputed contour lines, our method ensures that the result is independent of the units of the input data. To deal with two variables without a functional relationship, we define a virtual line segment for each edge of the Delaunay triangulation D(P) of the set P of points displayed. This defines a meaningful (usually termed the natural) neighborhood for P: if for two points u, v ∈ P there exists a point w ∈ R 2 such that both u and v are nearest neighbors of w in P, then there exists an edge {u, v} in D(P). The Delaunay triangulation not only has a conceptually meaningful definition, but has also been shown empirically to explain (to some degree) human perceptual grouping. For example, Dry et al. [5] report on an experiment in which humans were shown constellations of stars and asked to display structures in the constellations by connecting pairs of stars with edges. As an average result, 98% of the edges drawn by an individual were edges of the Delaunay triangulation of the stars. On the other hand, on average, an individual did not draw 58% of the Delaunay edges. Therefore, to automate perceptual grouping, the Delaunay triangulation is often reduced to a subgraph, for example, to the relative neighborhood graph [25] or the Gabriel graph [9]. In this paper, we restrict our discussion to the Delaunay triangulation, but we believe that our approach can be generalized to also find an aspect ratio that optimizes favorable properties of, say, the Gabriel graph.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Scaling a point set may change its Delaunay triangulation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Triangulations of a point set with incircles of the triangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Proof of Lemma 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>An elementary topological change: a flip at scale s .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Algorithm 1 :</head><label>1</label><figDesc>FindAspectRatio(P) s = 1 (V, E) = D(P) // Delaunay Triangulation Q = new PriorityQueue() foreach e ∈ E do Find event point t ≥ s where e is flipped. Q.Insert(t, e) // args: priority, edge while Q = / 0 do ptr = Q.ExtractMin() t = ptr.event point e = ptr.edge f = Flip(e) E = set of edges of quadrilateral containing f foreach g ∈ E do update event point for g in Q computed in constant time by solving a polynomial equation on s of constant degree (Roos [17] describes more details). The next event point s i+1 is then the minimum of the resulting event points. Algorithm 1 describes how we traverse the sequence s 1 , .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Theorem 1 .</head><label>1</label><figDesc>Algorithm 1 traverses the sequence s 1 , . . . , s m of all event points in increasing order and computes for every i = 1, . . . , m − 1 the (graph of a) Delaunay triangulation that is valid in the interval [s i , s i+1 ]. It performs O(n 2 ) topological changes (flips) each of which requires O(log n) time. The overall running time is O(n 2 log n).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head></head><label></label><figDesc>2 denote the length of e as a function of s ∈ [s i , s i+1 ]. The crucial observation is that this length function behaves smoothly with respect to small changes in the scale factor. More precisely, we have that l e ((1 + ε)s) ≤ (1 + ε)l e (s). Now consider a triangle ∆ of the Delaunay triangulation with edges e 1 , e 2 , e 3 . Its uncompactness is given by u ∆ (s) = (l e 1 (s) + l e 2 (s) + l e 1 (s))/ A(∆) where A(∆) denotes the area of ∆, which is independent of s. The above inequality yields that u ∆ ((1+ε)s) ≤ (1+ε)u ∆ (s). Recall that u D (s) denotes the mean uncompactness of D(P(s)). Hence, we have that u D ((1 + ε)s) ≤ (1 + ε)u D (s) since u D (s) is the mean of the functions u ∆ (s) over a fixed set of triangles (due to s ∈ [s i , s i+1 ]).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Let s 1</head><label>1</label><figDesc>, . . . , s m denote the sequence of event points (between 1 and C) and let s m+1 := C. Now consider a fixed interval [s i , s i+1 ] with i = 1, . . . , m. Our algorithm computes u D (•) for all test values t j := s i+1 /(1 + ε) j where j ∈ N and t j ∈ [s i , s i+1 ]. Let t opt be the test value at which u D (•) is minimized, and let s opt be an optimum scale factor in the interval [s i , s i+1 ]</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>opt ) as desired. Finding the test value that minimizes the mean uncompactness over all intervals gives therefore a global (1+ε)approximation. Now let us analyze the running time of the algorithm. The number of test values in the interval [s i , s i+1 ] is the smallest integer j for which s i+1 /(1 + ε) j ≤ s i holds. That is, we have at most (log s i+1 − log s i )/ log(1 + ε) + 1 many test values in this interval. Summing this term over all O(n 2 ) intervals yields (log s m+1 − log s 1 )/ log(1 + ε) + O(n 2 ) test values in total. Since s m+1 = C and ε are constants and evaluating the objective function requires O(n) time, we obtain the following result.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>k √ s 1 •</head><label>1</label><figDesc>. . . • s k of the values s 1 , . . . , s k that the users had selected for the scale factor s (determining the new coordinates of a point (x, y) as (s • x, y/s); see Sect. 3). To clarify why we must use the geometric mean instead of the more common arithmetic mean µ(s) = (s 1 + . . . + s k )/k, we note that, instead of analyzing values chosen for s, we could just as well analyze values chosen for 1/s. Therefore, the mean of 2 and 1/2 (or more generally, of a number a and its reciprocal 1/a) should be 1 (rather than 1.25). Moreover, if the mean of two numbers a and b is c, then the mean of 1/a and 1/b should be 1/c. This is ensured with the geometric mean. Accordingly, to assess the variation in the values selected for s, we computed for each instance the geometric standard deviation σ g (s) of s as σ g (s) = exp (σ (ln s)), where σ (ln s) is the common (i.e., arithmetic) standard deviation of the values ln s 1 , . . . , ln s k . To clarify the meaning of σ g (s), we note that, if the values ln s 1 , . . . , ln s k follow a normal distribution, the interval [µ g (s)/σ g (s), σ g (s) • µ g (s)] contains roughly 68% of all samples.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>Test results for seven optimization criteria on five generated instances (outputs scaled to fit into the boxes).</figDesc><table><row><cell>normal distribution</cell><cell>three clusters</cell><cell>four mixed clusters</cell><cell>noisy sine</cell><cell>rough trend</cell></row><row><cell>min. total length</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>min. uncompact.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>max. compact.</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>max. mean inradius</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>min. squared angles</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>max. min. angle</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>standard deviation</cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 .</head><label>3</label><figDesc>Runtimes (in ms) for minimizing the total edge length on instances of different sizes.</figDesc><table><row><cell>number of points</cell><cell>50 100 200 400</cell><cell>600</cell><cell>800 1 000</cell></row><row><cell>noisy sine</cell><cell cols="3">45 59 167 528 1 113 2 139 3 574</cell></row><row><cell cols="4">four mixed clusters 51 50 259 795 1 947 3 516 5 659</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Voronoi diagrams of moving points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Albers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Roos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Comput. Geom. Appl</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="365" to="380" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A model for studying display methods of statistical graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Graph. Statist</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="323" to="343" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The shape parameter of a two-variable graph</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Mcgill</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mcgill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Am. Stat. Assoc</title>
		<imprint>
			<biblScope unit="volume">83</biblScope>
			<biblScope unit="page" from="289" to="300" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Fatigue, alcohol and performance impairment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dawson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Reid</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">388</biblScope>
			<biblScope unit="issue">6639</biblScope>
			<biblScope unit="page" from="235" to="235" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The perceptual organization of point constellations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Dry</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J</forename><surname>Navarro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Preiss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 31st Annual Conference of the Cognitive Science Society</title>
		<meeting>31st Annual Conference of the Cognitive Science Society</meeting>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="1151" to="1153" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The use of multiple measurements in taxonomic problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Fisher</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Annals of Eugenics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="179" to="188" />
			<date type="published" when="1936" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Voronoi diagrams and Delaunay triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Fortune</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Handbook of Discrete and Computational Geometry</title>
		<editor>J. E. Goodman and J. O&apos;Rourke</editor>
		<meeting><address><addrLine>Boca Raton, FL, U.S.A.</addrLine></address></meeting>
		<imprint>
			<publisher>CRC Press</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="513" to="528" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The early origins and develeopment of the scatterplot</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Friendly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Denis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the History of the Behavioral Sciences</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="130" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A new statistical approach to geographic variation analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">R</forename><surname>Gabriel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">R</forename><surname>Sokal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Systematic Zoology</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="259" to="278" />
			<date type="published" when="1969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Voronoi diagrams of moving points in the plane</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Mitchell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 17th Int. Workshop Graph-Theor. Concepts Comput. Sci. (WG&apos;91)</title>
		<meeting>17th Int. Workshop Graph-Theor. Concepts Comput. Sci. (WG&apos;91)</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="113" to="125" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Multi-scale banking to 45</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Agrawala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Gr</title>
		<imprint>
			<biblScope unit="page" from="701" to="708" />
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">On the investigation of the orbits of revolving double stars</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F W</forename><surname>Herschel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Memoirs of the Royal Astronomical Society</title>
		<imprint>
			<biblScope unit="page" from="171" to="222" />
			<date type="published" when="1833" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Species extinction and the relationship between distribution and abundance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">394</biblScope>
			<biblScope unit="issue">6690</biblScope>
			<biblScope unit="page" from="272" to="274" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The Delaunay triangulation maximizes the mean inradius</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Lambert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Canadian Conf. Comput. Geom. (CCCG&apos;94)</title>
		<meeting>6th Canadian Conf. Comput. Geom. (CCCG&apos;94)</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="201" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Compactness of geographic shape: Comparison and evaluation of measures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Maceachren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Geografiska Annaler. Ser. B, Human Geogr</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="53" to="67" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>R Core Team</surname></persName>
		</author>
		<ptr target="http://www.r-project.org/" />
		<title level="m">R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing</title>
		<meeting><address><addrLine>Vienna, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Voronoi diagrams over dynamic scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Roos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Appl. Math</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="243" to="259" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">On topological changes in the Delaunay triangulation of moving points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Rubin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 28th ACM Symp</title>
		<meeting>28th ACM Symp</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
	<note>SoCG&apos;12)</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Scott</surname></persName>
		</author>
		<title level="m">Multivariate Density Estimation: Theory, Practice, and Visualization. Wiley Series in Probability and Statistics</title>
		<meeting><address><addrLine>New York, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Wiley</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Davenport-Schinzel sequences and their geometric applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sharir</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Agarwal</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Cambridge University Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Locally equiangular triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sibson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Computer Journal</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="243" to="245" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Computation of locally parallel structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Stevens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Biological Cybernetics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="19" to="28" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Arc length-based aspect ratio selection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Talbot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gerth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE T. Vis. Comput. Gr</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2276" to="2282" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An empirical model of slope ratio comparisons</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Talbot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gerth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE T. Vis. Comput. Gr</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2613" to="2620" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">The relative neighborhood graph of a finite planar set. Pattern Recognition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Toussaint</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980" />
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="261" to="268" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">The Visual Display of Quantitative Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Tufte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Graphics Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">DNA electrophoresis in microlithographic arrays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Volkmuth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Austin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">358</biblScope>
			<biblScope unit="issue">6387</biblScope>
			<biblScope unit="page" from="600" to="602" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A century of Gestalt psychology in visual perception: I. Perceptual grouping and figure-ground organization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wagemans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Elder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kubovy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">E</forename><surname>Palmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Peterson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Singh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Von</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Heydt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Psychological Bulletin</title>
		<imprint>
			<biblScope unit="volume">138</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1172" to="1217" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
